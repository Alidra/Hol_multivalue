Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ITERATE_IMAGE_term_abbrevs.
Require Import BOOL_CASES_AX_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import FINITE_IMAGE_spec.
Require Import FINITE_IMAGE_INJ_EQ_spec.
Require Import FINITE_INDUCT_STRONG_spec.
Require Import IMAGE_CLAUSES_spec.
Require Import IN_IMAGE_spec.
Require Import IN_INSERT_spec.
Require Import IN_SUPPORT_spec.
Require Import ITERATE_CLAUSES_spec.
Require Import ITERATE_EXPAND_CASES_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import SUPPORT_CLAUSES_spec.
Require Import o_THM_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16474_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17784_spec.
Require Import thm1820_spec.
Require Import thm1821_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1844_spec.
Require Import thm1855_spec.
Require Import thm1857_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18940_spec.
Require Import thm18941_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm18958_spec.
Require Import thm18959_spec.
Require Import thm18970_spec.
Require Import thm18971_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19490_spec.
Require Import thm196_spec.
Require Import thm19699_spec.
Require Import thm197_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm21501_spec.
Require Import thm21598_spec.
Require Import thm4211_spec.
Require Import thm69_spec.
Require Import thm7_spec.
Require Import thm82_spec.
Require Import thm885_spec.
Require Import thm886_spec.
Lemma lem5825974 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem5825975 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem5825976 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem5825975 t1) (@lem5825974 t1)). Qed.
Lemma lem5825977 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem5825976 t1 t2). Qed.
Lemma lem5825978 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem5825979 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem5825978 t1 t2) (@lem5825977 t1 t2)). Qed.
Lemma lem5825980 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem5825979 t1 t2 t3). Qed.
Lemma lem5825981 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem5825982 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem5825981 t1 t2 t3) (@lem5825980 t1 t2 t3)). Qed.
Lemma lem5825983 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem5825982 t1 t2 t3)). Qed.
Lemma lem5825984 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem5825985 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem5825986 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem5825985 t1) (@lem5825984 t1)). Qed.
Lemma lem5825987 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem5825986 t1 t2). Qed.
Lemma lem5825988 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem5825989 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem5825988 t1 t2) (@lem5825987 t1 t2)). Qed.
Lemma lem5825990 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem5825989 t1 t2 t3). Qed.
Lemma lem5825991 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem5825992 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem5825991 t1 t2 t3) (@lem5825990 t1 t2 t3)). Qed.
Lemma lem5825993 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem5825992 t1 t2 t3)). Qed.
Lemma lem5825994 {A B : Type'} (h1 : term7 A B) : term7 A B.
Proof. exact (h1). Qed.
Lemma lem5825995 {A B : Type'} (f : A -> B) (h1 : term7 A B) : term8 A B f.
Proof. exact (@lem5825994 A B h1 f). Qed.
Lemma lem5825996 {A B : Type'} (f : A -> B) : (term8 A B f) = (term9 A B f).
Proof. exact (eq_refl (term8 A B f)). Qed.
Lemma lem5825997 {A B : Type'} (f : A -> B) (h1 : term7 A B) : term9 A B f.
Proof. exact (EQ_MP (@lem5825996 A B f) (@lem5825995 A B f h1)). Qed.
Lemma lem5825998 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term7 A B) : term10 A B f s.
Proof. exact (@lem5825997 A B f h1 s). Qed.
Lemma lem5825999 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term10 A B f s) = (term11 A B f s).
Proof. exact (eq_refl (term10 A B f s)). Qed.
Lemma lem5826000 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term7 A B) : term11 A B f s.
Proof. exact (EQ_MP (@lem5825999 A B f s) (@lem5825998 A B f s h1)). Qed.
Lemma lem5826001 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term12 A B s f.
Proof. exact (h1). Qed.
Lemma lem5826002 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term7 A B) : (term13 A B f s) = (@FINITE A s).
Proof. exact (@lem5826000 A B f s h2 (@lem5826001 A B s f h1)). Qed.
Lemma lem5826003 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term14 A B f s.
Proof. exact (fun h0 : term7 A B => @lem5826002 A B s f h1 h0). Qed.
Lemma lem5826004 {A B : Type'} (h1 : term7 A B) : term7 A B.
Proof. exact (h1). Qed.
Lemma lem5826005 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term7 A B) : (term13 A B f s) = (@FINITE A s).
Proof. exact (@lem5826003 A B s f h1 (@lem5826004 A B h2)). Qed.
Lemma lem5826006 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term7 A B) : term11 A B f s.
Proof. exact (fun h0 : term12 A B s f => @lem5826005 A B s f h0 h1). Qed.
Lemma lem5826007 {A B : Type'} (f : A -> B) (h1 : term7 A B) : term9 A B f.
Proof. exact (fun s : A -> Prop => @lem5826006 A B f s h1). Qed.
Lemma lem5826008 {A B : Type'} (h1 : term7 A B) : term7 A B.
Proof. exact (fun f : A -> B => @lem5826007 A B f h1). Qed.
Lemma lem5826009 {A B : Type'} : term15 A B.
Proof. exact (fun h0 : term7 A B => @lem5826008 A B h0). Qed.
Lemma lem5826010 {A B : Type'} : term7 A B.
Proof. exact (@lem5826009 A B (@lem3618990 A B)). Qed.
Lemma lem5826011 {A B : Type'} (f : A -> B) : term8 A B f.
Proof. exact (@lem5826010 A B f). Qed.
Lemma lem5826012 {A B : Type'} (f : A -> B) : (term8 A B f) = (term9 A B f).
Proof. exact (eq_refl (term8 A B f)). Qed.
Lemma lem5826013 {A B : Type'} (f : A -> B) : term9 A B f.
Proof. exact (EQ_MP (@lem5826012 A B f) (@lem5826011 A B f)). Qed.
Lemma lem5826014 {A B : Type'} (f : A -> B) (s : A -> Prop) : term10 A B f s.
Proof. exact (@lem5826013 A B f s). Qed.
Lemma lem5826015 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term10 A B f s) = (term11 A B f s).
Proof. exact (eq_refl (term10 A B f s)). Qed.
Lemma lem5826017 {_120011 _120044 _120082 _120120 _120158 _120186 _120195 _120196 : Type'} (op : type1400 _120196) : term16 _120011 _120044 _120082 _120120 _120158 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5736505 Prop _120011 _120044 _120082 _120120 _120158 _120186 _120195 _120196 op)). Qed.
Lemma lem5826018 {_120044 _120082 _120120 _120158 _120186 _120195 _120196 : Type'} (op : type1400 _120196) : term17 _120044 _120082 _120120 _120158 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5826017 Prop _120044 _120082 _120120 _120158 _120186 _120195 _120196 op)). Qed.
Lemma lem5826019 {_120082 _120120 _120158 _120186 _120195 _120196 : Type'} (op : type1400 _120196) : term18 _120082 _120120 _120158 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5826018 Prop _120082 _120120 _120158 _120186 _120195 _120196 op)). Qed.
Lemma lem5826020 {_120120 _120158 _120186 _120195 _120196 : Type'} (op : type1400 _120196) : term19 _120120 _120158 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5826019 Prop _120120 _120158 _120186 _120195 _120196 op)). Qed.
Lemma lem5826021 {_120158 _120186 _120195 _120196 : Type'} (op : type1400 _120196) : term20 _120158 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5826020 Prop _120158 _120186 _120195 _120196 op)). Qed.
Lemma lem5826022 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) : term21 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5826021 Prop _120186 _120195 _120196 op)). Qed.
Lemma lem5826023 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (f : _120195 -> _120186) : term22 _120186 _120195 _120196 op f.
Proof. exact (@lem5826022 _120186 _120195 _120196 op f). Qed.
Lemma lem5826024 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (f : _120195 -> _120186) : (term22 _120186 _120195 _120196 op f) = (term23 _120186 _120195 _120196 op f).
Proof. exact (eq_refl (term22 _120186 _120195 _120196 op f)). Qed.
Lemma lem5826025 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (f : _120195 -> _120186) : term23 _120186 _120195 _120196 op f.
Proof. exact (EQ_MP (@lem5826024 _120186 _120195 _120196 op f) (@lem5826023 _120186 _120195 _120196 op f)). Qed.
Lemma lem5826026 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (f : _120195 -> _120186) (g : _120186 -> _120196) : term24 _120186 _120195 _120196 op f g.
Proof. exact (@lem5826025 _120186 _120195 _120196 op f g). Qed.
Lemma lem5826027 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (g : _120186 -> _120196) (f : _120195 -> _120186) : (term24 _120186 _120195 _120196 op f g) = (term25 _120186 _120195 _120196 op g f).
Proof. exact (eq_refl (term24 _120186 _120195 _120196 op f g)). Qed.
Lemma lem5826028 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (g : _120186 -> _120196) (f : _120195 -> _120186) : term25 _120186 _120195 _120196 op g f.
Proof. exact (EQ_MP (@lem5826027 _120186 _120195 _120196 op g f) (@lem5826026 _120186 _120195 _120196 op f g)). Qed.
Lemma lem5826029 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (g : _120186 -> _120196) (f : _120195 -> _120186) (s : _120195 -> Prop) : term26 _120186 _120195 _120196 op g f s.
Proof. exact (@lem5826028 _120186 _120195 _120196 op g f s). Qed.
Lemma lem5826030 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (g : _120186 -> _120196) (f : _120195 -> _120186) (s : _120195 -> Prop) : (term26 _120186 _120195 _120196 op g f s) = ((term27 _120186 _120195 _120196 op g f s) = (term28 _120186 _120195 _120196 op g f s)).
Proof. exact (eq_refl (term26 _120186 _120195 _120196 op g f s)). Qed.
Lemma lem5826100 (a : Prop) : term29 a.
Proof. exact (@lem9851 a). Qed.
Lemma lem5826101 (a : Prop) : (term29 a) = (term30 a).
Proof. exact (eq_refl (term29 a)). Qed.
Lemma lem5826102 (a : Prop) : term30 a.
Proof. exact (EQ_MP (@lem5826101 a) (@lem5826100 a)). Qed.
Lemma lem5826103 (a : Prop) (h1 : a = True) : a = True.
Proof. exact (h1). Qed.
Lemma lem5826104 (a : Prop) (h1 : a = False) : a = False.
Proof. exact (h1). Qed.
Lemma lem5826119 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term31 _121547 b a' b' c) = (term31 _121547 b a' b' c).
Proof. exact (eq_refl (term31 _121547 b a' b' c)). Qed.
Lemma lem5826120 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = True) : (term32 _121547 b a' b' c a) = (term33 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826119 _121547 b a' b' c) (@lem5826103 a h1)). Qed.
Lemma lem5826121 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term33 _121547 b a' b' c) = (term34 _121547 b a' b' c).
Proof. exact (eq_refl (term33 _121547 b a' b' c)). Qed.
Lemma lem5826122 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) : (term35 _121547 b a' b' c a) = (term35 _121547 b a' b' c a).
Proof. exact (eq_refl (term35 _121547 b a' b' c a)). Qed.
Lemma lem5826123 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((term32 _121547 b a' b' c a) = (term33 _121547 b a' b' c)) = ((term32 _121547 b a' b' c a) = (term34 _121547 b a' b' c)).
Proof. exact (MK_COMB (@lem5826122 _121547 b a' b' c a) (@lem5826121 _121547 b a' b' c)). Qed.
Lemma lem5826124 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term32 _121547 b a' b' c a) = (term36 _121547 a b a' b' c).
Proof. exact (eq_refl (term32 _121547 b a' b' c a)). Qed.
Lemma lem5826125 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5826126 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term35 _121547 b a' b' c a) = (term37 _121547 a b a' b' c).
Proof. exact (MK_COMB (@lem5826125) (@lem5826124 _121547 a b a' b' c)). Qed.
Lemma lem5826127 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term34 _121547 b a' b' c) = (term34 _121547 b a' b' c).
Proof. exact (eq_refl (term34 _121547 b a' b' c)). Qed.
Lemma lem5826128 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((term32 _121547 b a' b' c a) = (term34 _121547 b a' b' c)) = ((term36 _121547 a b a' b' c) = (term34 _121547 b a' b' c)).
Proof. exact (MK_COMB (@lem5826126 _121547 a b a' b' c) (@lem5826127 _121547 b a' b' c)). Qed.
Lemma lem5826129 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((term32 _121547 b a' b' c a) = (term33 _121547 b a' b' c)) = ((term36 _121547 a b a' b' c) = (term34 _121547 b a' b' c)).
Proof. exact (TRANS (@lem5826123 _121547 a b a' b' c) (@lem5826128 _121547 a b a' b' c)). Qed.
Lemma lem5826130 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = True) : (term36 _121547 a b a' b' c) = (term34 _121547 b a' b' c).
Proof. exact (EQ_MP (@lem5826129 _121547 a b a' b' c) (@lem5826120 _121547 b a' b' c a h1)). Qed.
Lemma lem5826131 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = True) : (term34 _121547 b a' b' c) = (term36 _121547 a b a' b' c).
Proof. exact (SYM (@lem5826130 _121547 b a' b' c a h1)). Qed.
Lemma lem5826132 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term31 _121547 b a' b' c) = (term31 _121547 b a' b' c).
Proof. exact (eq_refl (term31 _121547 b a' b' c)). Qed.
Lemma lem5826133 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = False) : (term32 _121547 b a' b' c a) = (term38 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826132 _121547 b a' b' c) (@lem5826104 a h1)). Qed.
Lemma lem5826134 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term38 _121547 b a' b' c) = (term39 _121547 b a' b' c).
Proof. exact (eq_refl (term38 _121547 b a' b' c)). Qed.
Lemma lem5826135 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) : (term35 _121547 b a' b' c a) = (term35 _121547 b a' b' c a).
Proof. exact (eq_refl (term35 _121547 b a' b' c a)). Qed.
Lemma lem5826136 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((term32 _121547 b a' b' c a) = (term38 _121547 b a' b' c)) = ((term32 _121547 b a' b' c a) = (term39 _121547 b a' b' c)).
Proof. exact (MK_COMB (@lem5826135 _121547 b a' b' c a) (@lem5826134 _121547 b a' b' c)). Qed.
Lemma lem5826137 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term32 _121547 b a' b' c a) = (term36 _121547 a b a' b' c).
Proof. exact (eq_refl (term32 _121547 b a' b' c a)). Qed.
Lemma lem5826138 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5826139 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term35 _121547 b a' b' c a) = (term37 _121547 a b a' b' c).
Proof. exact (MK_COMB (@lem5826138) (@lem5826137 _121547 a b a' b' c)). Qed.
Lemma lem5826140 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term39 _121547 b a' b' c) = (term39 _121547 b a' b' c).
Proof. exact (eq_refl (term39 _121547 b a' b' c)). Qed.
Lemma lem5826141 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((term32 _121547 b a' b' c a) = (term39 _121547 b a' b' c)) = ((term36 _121547 a b a' b' c) = (term39 _121547 b a' b' c)).
Proof. exact (MK_COMB (@lem5826139 _121547 a b a' b' c) (@lem5826140 _121547 b a' b' c)). Qed.
Lemma lem5826142 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((term32 _121547 b a' b' c a) = (term38 _121547 b a' b' c)) = ((term36 _121547 a b a' b' c) = (term39 _121547 b a' b' c)).
Proof. exact (TRANS (@lem5826136 _121547 a b a' b' c) (@lem5826141 _121547 a b a' b' c)). Qed.
Lemma lem5826143 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = False) : (term36 _121547 a b a' b' c) = (term39 _121547 b a' b' c).
Proof. exact (EQ_MP (@lem5826142 _121547 a b a' b' c) (@lem5826133 _121547 b a' b' c a h1)). Qed.
Lemma lem5826144 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = False) : (term39 _121547 b a' b' c) = (term36 _121547 a b a' b' c).
Proof. exact (SYM (@lem5826143 _121547 b a' b' c a h1)). Qed.
Lemma lem5826150 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem5826151 (a' : Prop) : (True = a') = a'.
Proof. exact (@lem5826150 a'). Qed.
Lemma lem5826152 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5826153 (a' : Prop) : (term40 a') = (and a').
Proof. exact (MK_COMB (@lem5826152) (@lem5826151 a')). Qed.
Lemma lem5826158 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) : (term41 _121547 a' b b') = (term41 _121547 a' b b').
Proof. exact (eq_refl (term41 _121547 a' b b')). Qed.
Lemma lem5826159 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) : (term42 _121547 a' b b') = (term43 _121547 a' b b').
Proof. exact (MK_COMB (@lem5826153 a') (@lem5826158 _121547 a' b b')). Qed.
Lemma lem5826162 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826163 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) : (term44 _121547 a' b b') = (term45 _121547 a' b b').
Proof. exact (MK_COMB (@lem5826162) (@lem5826159 _121547 a' b b')). Qed.
Lemma lem5826167 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5826168 {_121547 : Type'} (t2 : _121547) (t1 : _121547) : (@COND _121547 True t1 t2) = t1.
Proof. exact (@lem5826167 _121547 t2 t1). Qed.
Lemma lem5826169 {_121547 : Type'} (c : _121547) (b : _121547) : (@COND _121547 True b c) = b.
Proof. exact (@lem5826168 _121547 c b). Qed.
Lemma lem5826170 {_121547 : Type'} : (@eq _121547) = (@eq _121547).
Proof. exact (eq_refl (@eq _121547)). Qed.
Lemma lem5826171 {_121547 : Type'} (c : _121547) (b : _121547) : (term46 _121547 b c) = (@eq _121547 b).
Proof. exact (MK_COMB (@lem5826170 _121547) (@lem5826169 _121547 c b)). Qed.
Lemma lem5826172 {_121547 : Type'} (a' : Prop) (b' : _121547) (c : _121547) : (@COND _121547 a' b' c) = (@COND _121547 a' b' c).
Proof. exact (eq_refl (@COND _121547 a' b' c)). Qed.
Lemma lem5826173 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((@COND _121547 True b c) = (@COND _121547 a' b' c)) = (b = (@COND _121547 a' b' c)).
Proof. exact (MK_COMB (@lem5826171 _121547 c b) (@lem5826172 _121547 a' b' c)). Qed.
Lemma lem5826176 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term34 _121547 b a' b' c) = (term47 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826163 _121547 a' b b') (@lem5826173 _121547 b a' b' c)). Qed.
Lemma lem5826179 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term47 _121547 b a' b' c) = (term34 _121547 b a' b' c).
Proof. exact (SYM (@lem5826176 _121547 b a' b' c)). Qed.
Lemma lem5826180 (a' : Prop) : term29 a'.
Proof. exact (@lem9851 a'). Qed.
Lemma lem5826181 (a' : Prop) : (term29 a') = (term30 a').
Proof. exact (eq_refl (term29 a')). Qed.
Lemma lem5826182 (a' : Prop) : term30 a'.
Proof. exact (EQ_MP (@lem5826181 a') (@lem5826180 a')). Qed.
Lemma lem5826183 (a' : Prop) (h1 : a' = True) : a' = True.
Proof. exact (h1). Qed.
Lemma lem5826184 (a' : Prop) (h1 : a' = False) : a' = False.
Proof. exact (h1). Qed.
Lemma lem5826197 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term48 _121547 b b' c) = (term48 _121547 b b' c).
Proof. exact (eq_refl (term48 _121547 b b' c)). Qed.
Lemma lem5826198 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : (term49 _121547 b b' c a') = (term50 _121547 b b' c).
Proof. exact (MK_COMB (@lem5826197 _121547 b b' c) (@lem5826183 a' h1)). Qed.
Lemma lem5826199 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term50 _121547 b b' c) = (term51 _121547 b b' c).
Proof. exact (eq_refl (term50 _121547 b b' c)). Qed.
Lemma lem5826200 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) : (term52 _121547 b b' c a') = (term52 _121547 b b' c a').
Proof. exact (eq_refl (term52 _121547 b b' c a')). Qed.
Lemma lem5826201 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term49 _121547 b b' c a') = (term50 _121547 b b' c)) = ((term49 _121547 b b' c a') = (term51 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826200 _121547 b b' c a') (@lem5826199 _121547 b b' c)). Qed.
Lemma lem5826202 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term49 _121547 b b' c a') = (term47 _121547 b a' b' c).
Proof. exact (eq_refl (term49 _121547 b b' c a')). Qed.
Lemma lem5826203 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5826204 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term52 _121547 b b' c a') = (term53 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826203) (@lem5826202 _121547 b a' b' c)). Qed.
Lemma lem5826205 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term51 _121547 b b' c) = (term51 _121547 b b' c).
Proof. exact (eq_refl (term51 _121547 b b' c)). Qed.
Lemma lem5826206 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term49 _121547 b b' c a') = (term51 _121547 b b' c)) = ((term47 _121547 b a' b' c) = (term51 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826204 _121547 b a' b' c) (@lem5826205 _121547 b b' c)). Qed.
Lemma lem5826207 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term49 _121547 b b' c a') = (term50 _121547 b b' c)) = ((term47 _121547 b a' b' c) = (term51 _121547 b b' c)).
Proof. exact (TRANS (@lem5826201 _121547 a' b b' c) (@lem5826206 _121547 a' b b' c)). Qed.
Lemma lem5826208 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : (term47 _121547 b a' b' c) = (term51 _121547 b b' c).
Proof. exact (EQ_MP (@lem5826207 _121547 a' b b' c) (@lem5826198 _121547 b b' c a' h1)). Qed.
Lemma lem5826209 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : (term51 _121547 b b' c) = (term47 _121547 b a' b' c).
Proof. exact (SYM (@lem5826208 _121547 b b' c a' h1)). Qed.
Lemma lem5826210 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term48 _121547 b b' c) = (term48 _121547 b b' c).
Proof. exact (eq_refl (term48 _121547 b b' c)). Qed.
Lemma lem5826211 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : (term49 _121547 b b' c a') = (term54 _121547 b b' c).
Proof. exact (MK_COMB (@lem5826210 _121547 b b' c) (@lem5826184 a' h1)). Qed.
Lemma lem5826212 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term54 _121547 b b' c) = (term55 _121547 b b' c).
Proof. exact (eq_refl (term54 _121547 b b' c)). Qed.
Lemma lem5826213 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) : (term52 _121547 b b' c a') = (term52 _121547 b b' c a').
Proof. exact (eq_refl (term52 _121547 b b' c a')). Qed.
Lemma lem5826214 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term49 _121547 b b' c a') = (term54 _121547 b b' c)) = ((term49 _121547 b b' c a') = (term55 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826213 _121547 b b' c a') (@lem5826212 _121547 b b' c)). Qed.
Lemma lem5826215 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term49 _121547 b b' c a') = (term47 _121547 b a' b' c).
Proof. exact (eq_refl (term49 _121547 b b' c a')). Qed.
Lemma lem5826216 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5826217 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term52 _121547 b b' c a') = (term53 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826216) (@lem5826215 _121547 b a' b' c)). Qed.
Lemma lem5826218 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term55 _121547 b b' c) = (term55 _121547 b b' c).
Proof. exact (eq_refl (term55 _121547 b b' c)). Qed.
Lemma lem5826219 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term49 _121547 b b' c a') = (term55 _121547 b b' c)) = ((term47 _121547 b a' b' c) = (term55 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826217 _121547 b a' b' c) (@lem5826218 _121547 b b' c)). Qed.
Lemma lem5826220 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term49 _121547 b b' c a') = (term54 _121547 b b' c)) = ((term47 _121547 b a' b' c) = (term55 _121547 b b' c)).
Proof. exact (TRANS (@lem5826214 _121547 a' b b' c) (@lem5826219 _121547 a' b b' c)). Qed.
Lemma lem5826221 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : (term47 _121547 b a' b' c) = (term55 _121547 b b' c).
Proof. exact (EQ_MP (@lem5826220 _121547 a' b b' c) (@lem5826211 _121547 b b' c a' h1)). Qed.
Lemma lem5826222 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : (term55 _121547 b b' c) = (term47 _121547 b a' b' c).
Proof. exact (SYM (@lem5826221 _121547 b b' c a' h1)). Qed.
Lemma lem5826226 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem5826227 {_121547 : Type'} (b : _121547) (b' : _121547) : (term56 _121547 b b') = (term57 _121547 b b').
Proof. exact (@lem5826226 (term57 _121547 b b')). Qed.
Lemma lem5826229 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem5826230 {_121547 : Type'} (b : _121547) (b' : _121547) : (term57 _121547 b b') = (b = b').
Proof. exact (@lem5826229 (b = b')). Qed.
Lemma lem5826233 {_121547 : Type'} (b : _121547) (b' : _121547) : (term56 _121547 b b') = (b = b').
Proof. exact (TRANS (@lem5826227 _121547 b b') (@lem5826230 _121547 b b')). Qed.
Lemma lem5826234 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826235 {_121547 : Type'} (b : _121547) (b' : _121547) : (term58 _121547 b b') = (term59 _121547 b b').
Proof. exact (MK_COMB (@lem5826234) (@lem5826233 _121547 b b')). Qed.
Lemma lem5826239 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5826240 {_121547 : Type'} (t2 : _121547) (t1 : _121547) : (@COND _121547 True t1 t2) = t1.
Proof. exact (@lem5826239 _121547 t2 t1). Qed.
Lemma lem5826241 {_121547 : Type'} (c : _121547) (b' : _121547) : (@COND _121547 True b' c) = b'.
Proof. exact (@lem5826240 _121547 c b'). Qed.
Lemma lem5826242 {_121547 : Type'} (b : _121547) : (@eq _121547 b) = (@eq _121547 b).
Proof. exact (eq_refl (@eq _121547 b)). Qed.
Lemma lem5826243 {_121547 : Type'} (c : _121547) (b : _121547) (b' : _121547) : (b = (@COND _121547 True b' c)) = (b = b').
Proof. exact (MK_COMB (@lem5826242 _121547 b) (@lem5826241 _121547 c b')). Qed.
Lemma lem5826246 {_121547 : Type'} (c : _121547) (b : _121547) (b' : _121547) : (term51 _121547 b b' c) = (term60 _121547 b b').
Proof. exact (MK_COMB (@lem5826235 _121547 b b') (@lem5826243 _121547 c b b')). Qed.
Lemma lem5826250 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem5826251 {_121547 : Type'} (b : _121547) (b' : _121547) : (term60 _121547 b b') = True.
Proof. exact (@lem5826250 (b = b')). Qed.
Lemma lem5826252 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term51 _121547 b b' c) = True.
Proof. exact (TRANS (@lem5826246 _121547 c b b') (@lem5826251 _121547 b b')). Qed.
Lemma lem5826253 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : True = (term51 _121547 b b' c).
Proof. exact (SYM (@lem5826252 _121547 b b' c)). Qed.
Lemma lem5826254 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : term51 _121547 b b' c.
Proof. exact (EQ_MP (@lem5826253 _121547 b b' c) (@lem0)). Qed.
Lemma lem5826258 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem5826259 {_121547 : Type'} (b : _121547) (b' : _121547) : (term61 _121547 b b') = False.
Proof. exact (@lem5826258 (term62 _121547 b b')). Qed.
Lemma lem5826260 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826261 {_121547 : Type'} (b : _121547) (b' : _121547) : (term63 _121547 b b') = (imp False).
Proof. exact (MK_COMB (@lem5826260) (@lem5826259 _121547 b b')). Qed.
Lemma lem5826265 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5826266 {_121547 : Type'} (t1 : _121547) (t2 : _121547) : (@COND _121547 False t1 t2) = t2.
Proof. exact (@lem5826265 _121547 t1 t2). Qed.
Lemma lem5826267 {_121547 : Type'} (b' : _121547) (c : _121547) : (@COND _121547 False b' c) = c.
Proof. exact (@lem5826266 _121547 b' c). Qed.
Lemma lem5826268 {_121547 : Type'} (b : _121547) : (@eq _121547 b) = (@eq _121547 b).
Proof. exact (eq_refl (@eq _121547 b)). Qed.
Lemma lem5826269 {_121547 : Type'} (b' : _121547) (b : _121547) (c : _121547) : (b = (@COND _121547 False b' c)) = (b = c).
Proof. exact (MK_COMB (@lem5826268 _121547 b) (@lem5826267 _121547 b' c)). Qed.
Lemma lem5826272 {_121547 : Type'} (b' : _121547) (b : _121547) (c : _121547) : (term55 _121547 b b' c) = (term62 _121547 b c).
Proof. exact (MK_COMB (@lem5826261 _121547 b b') (@lem5826269 _121547 b' b c)). Qed.
Lemma lem5826274 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem5826275 {_121547 : Type'} (b : _121547) (c : _121547) : (term62 _121547 b c) = True.
Proof. exact (@lem5826274 (b = c)). Qed.
Lemma lem5826276 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term55 _121547 b b' c) = True.
Proof. exact (TRANS (@lem5826272 _121547 b' b c) (@lem5826275 _121547 b c)). Qed.
Lemma lem5826277 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : True = (term55 _121547 b b' c).
Proof. exact (SYM (@lem5826276 _121547 b b' c)). Qed.
Lemma lem5826278 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : term55 _121547 b b' c.
Proof. exact (EQ_MP (@lem5826277 _121547 b b' c) (@lem0)). Qed.
Lemma lem5826279 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : term47 _121547 b a' b' c.
Proof. exact (EQ_MP (@lem5826222 _121547 b b' c a' h1) (@lem5826278 _121547 b b' c)). Qed.
Lemma lem5826280 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : term47 _121547 b a' b' c.
Proof. exact (EQ_MP (@lem5826209 _121547 b b' c a' h1) (@lem5826254 _121547 b b' c)). Qed.
Lemma lem5826282 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term47 _121547 b a' b' c.
Proof. exact (or_elim (@lem5826182 a') (fun h0 : a' = True => @lem5826280 _121547 b b' c a' h0) (fun h0 : a' = False => @lem5826279 _121547 b b' c a' h0)). Qed.
Lemma lem5826283 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term34 _121547 b a' b' c.
Proof. exact (EQ_MP (@lem5826179 _121547 b a' b' c) (@lem5826282 _121547 b a' b' c)). Qed.
Lemma lem5826289 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem5826290 (a' : Prop) : (False = a') = (~ a').
Proof. exact (@lem5826289 a'). Qed.
Lemma lem5826291 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5826292 (a' : Prop) : (term64 a') = (term65 a').
Proof. exact (MK_COMB (@lem5826291) (@lem5826290 a')). Qed.
Lemma lem5826297 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) : (term41 _121547 a' b b') = (term41 _121547 a' b b').
Proof. exact (eq_refl (term41 _121547 a' b b')). Qed.
Lemma lem5826298 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) : (term66 _121547 a' b b') = (term67 _121547 a' b b').
Proof. exact (MK_COMB (@lem5826292 a') (@lem5826297 _121547 a' b b')). Qed.
Lemma lem5826301 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826302 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) : (term68 _121547 a' b b') = (term69 _121547 a' b b').
Proof. exact (MK_COMB (@lem5826301) (@lem5826298 _121547 a' b b')). Qed.
Lemma lem5826306 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5826307 {_121547 : Type'} (t1 : _121547) (t2 : _121547) : (@COND _121547 False t1 t2) = t2.
Proof. exact (@lem5826306 _121547 t1 t2). Qed.
Lemma lem5826308 {_121547 : Type'} (b : _121547) (c : _121547) : (@COND _121547 False b c) = c.
Proof. exact (@lem5826307 _121547 b c). Qed.
Lemma lem5826309 {_121547 : Type'} : (@eq _121547) = (@eq _121547).
Proof. exact (eq_refl (@eq _121547)). Qed.
Lemma lem5826310 {_121547 : Type'} (b : _121547) (c : _121547) : (term70 _121547 b c) = (@eq _121547 c).
Proof. exact (MK_COMB (@lem5826309 _121547) (@lem5826308 _121547 b c)). Qed.
Lemma lem5826311 {_121547 : Type'} (a' : Prop) (b' : _121547) (c : _121547) : (@COND _121547 a' b' c) = (@COND _121547 a' b' c).
Proof. exact (eq_refl (@COND _121547 a' b' c)). Qed.
Lemma lem5826312 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : ((@COND _121547 False b c) = (@COND _121547 a' b' c)) = (c = (@COND _121547 a' b' c)).
Proof. exact (MK_COMB (@lem5826310 _121547 b c) (@lem5826311 _121547 a' b' c)). Qed.
Lemma lem5826315 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term39 _121547 b a' b' c) = (term71 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826302 _121547 a' b b') (@lem5826312 _121547 b a' b' c)). Qed.
Lemma lem5826318 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term71 _121547 b a' b' c) = (term39 _121547 b a' b' c).
Proof. exact (SYM (@lem5826315 _121547 b a' b' c)). Qed.
Lemma lem5826319 (a' : Prop) : term29 a'.
Proof. exact (@lem9851 a'). Qed.
Lemma lem5826320 (a' : Prop) : (term29 a') = (term30 a').
Proof. exact (eq_refl (term29 a')). Qed.
Lemma lem5826321 (a' : Prop) : term30 a'.
Proof. exact (EQ_MP (@lem5826320 a') (@lem5826319 a')). Qed.
Lemma lem5826322 (a' : Prop) (h1 : a' = True) : a' = True.
Proof. exact (h1). Qed.
Lemma lem5826323 (a' : Prop) (h1 : a' = False) : a' = False.
Proof. exact (h1). Qed.
Lemma lem5826336 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term72 _121547 b b' c) = (term72 _121547 b b' c).
Proof. exact (eq_refl (term72 _121547 b b' c)). Qed.
Lemma lem5826337 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : (term73 _121547 b b' c a') = (term74 _121547 b b' c).
Proof. exact (MK_COMB (@lem5826336 _121547 b b' c) (@lem5826322 a' h1)). Qed.
Lemma lem5826338 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term74 _121547 b b' c) = (term75 _121547 b b' c).
Proof. exact (eq_refl (term74 _121547 b b' c)). Qed.
Lemma lem5826339 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) : (term76 _121547 b b' c a') = (term76 _121547 b b' c a').
Proof. exact (eq_refl (term76 _121547 b b' c a')). Qed.
Lemma lem5826340 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term73 _121547 b b' c a') = (term74 _121547 b b' c)) = ((term73 _121547 b b' c a') = (term75 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826339 _121547 b b' c a') (@lem5826338 _121547 b b' c)). Qed.
Lemma lem5826341 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term73 _121547 b b' c a') = (term71 _121547 b a' b' c).
Proof. exact (eq_refl (term73 _121547 b b' c a')). Qed.
Lemma lem5826342 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5826343 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term76 _121547 b b' c a') = (term77 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826342) (@lem5826341 _121547 b a' b' c)). Qed.
Lemma lem5826344 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term75 _121547 b b' c) = (term75 _121547 b b' c).
Proof. exact (eq_refl (term75 _121547 b b' c)). Qed.
Lemma lem5826345 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term73 _121547 b b' c a') = (term75 _121547 b b' c)) = ((term71 _121547 b a' b' c) = (term75 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826343 _121547 b a' b' c) (@lem5826344 _121547 b b' c)). Qed.
Lemma lem5826346 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term73 _121547 b b' c a') = (term74 _121547 b b' c)) = ((term71 _121547 b a' b' c) = (term75 _121547 b b' c)).
Proof. exact (TRANS (@lem5826340 _121547 a' b b' c) (@lem5826345 _121547 a' b b' c)). Qed.
Lemma lem5826347 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : (term71 _121547 b a' b' c) = (term75 _121547 b b' c).
Proof. exact (EQ_MP (@lem5826346 _121547 a' b b' c) (@lem5826337 _121547 b b' c a' h1)). Qed.
Lemma lem5826348 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : (term75 _121547 b b' c) = (term71 _121547 b a' b' c).
Proof. exact (SYM (@lem5826347 _121547 b b' c a' h1)). Qed.
Lemma lem5826349 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term72 _121547 b b' c) = (term72 _121547 b b' c).
Proof. exact (eq_refl (term72 _121547 b b' c)). Qed.
Lemma lem5826350 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : (term73 _121547 b b' c a') = (term78 _121547 b b' c).
Proof. exact (MK_COMB (@lem5826349 _121547 b b' c) (@lem5826323 a' h1)). Qed.
Lemma lem5826351 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term78 _121547 b b' c) = (term79 _121547 b b' c).
Proof. exact (eq_refl (term78 _121547 b b' c)). Qed.
Lemma lem5826352 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) : (term76 _121547 b b' c a') = (term76 _121547 b b' c a').
Proof. exact (eq_refl (term76 _121547 b b' c a')). Qed.
Lemma lem5826353 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term73 _121547 b b' c a') = (term78 _121547 b b' c)) = ((term73 _121547 b b' c a') = (term79 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826352 _121547 b b' c a') (@lem5826351 _121547 b b' c)). Qed.
Lemma lem5826354 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term73 _121547 b b' c a') = (term71 _121547 b a' b' c).
Proof. exact (eq_refl (term73 _121547 b b' c a')). Qed.
Lemma lem5826355 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5826356 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : (term76 _121547 b b' c a') = (term77 _121547 b a' b' c).
Proof. exact (MK_COMB (@lem5826355) (@lem5826354 _121547 b a' b' c)). Qed.
Lemma lem5826357 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term79 _121547 b b' c) = (term79 _121547 b b' c).
Proof. exact (eq_refl (term79 _121547 b b' c)). Qed.
Lemma lem5826358 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term73 _121547 b b' c a') = (term79 _121547 b b' c)) = ((term71 _121547 b a' b' c) = (term79 _121547 b b' c)).
Proof. exact (MK_COMB (@lem5826356 _121547 b a' b' c) (@lem5826357 _121547 b b' c)). Qed.
Lemma lem5826359 {_121547 : Type'} (a' : Prop) (b : _121547) (b' : _121547) (c : _121547) : ((term73 _121547 b b' c a') = (term78 _121547 b b' c)) = ((term71 _121547 b a' b' c) = (term79 _121547 b b' c)).
Proof. exact (TRANS (@lem5826353 _121547 a' b b' c) (@lem5826358 _121547 a' b b' c)). Qed.
Lemma lem5826360 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : (term71 _121547 b a' b' c) = (term79 _121547 b b' c).
Proof. exact (EQ_MP (@lem5826359 _121547 a' b b' c) (@lem5826350 _121547 b b' c a' h1)). Qed.
Lemma lem5826361 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : (term79 _121547 b b' c) = (term71 _121547 b a' b' c).
Proof. exact (SYM (@lem5826360 _121547 b b' c a' h1)). Qed.
Lemma lem5826367 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem5826368 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5826369 : term80 = (and False).
Proof. exact (MK_COMB (@lem5826368) (@lem5826367)). Qed.
Lemma lem5826371 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem5826372 {_121547 : Type'} (b : _121547) (b' : _121547) : (term57 _121547 b b') = (b = b').
Proof. exact (@lem5826371 (b = b')). Qed.
Lemma lem5826375 {_121547 : Type'} (b : _121547) (b' : _121547) : (term81 _121547 b b') = (term82 _121547 b b').
Proof. exact (MK_COMB (@lem5826369) (@lem5826372 _121547 b b')). Qed.
Lemma lem5826377 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem5826378 {_121547 : Type'} (b : _121547) (b' : _121547) : (term82 _121547 b b') = False.
Proof. exact (@lem5826377 (b = b')). Qed.
Lemma lem5826379 {_121547 : Type'} (b : _121547) (b' : _121547) : (term81 _121547 b b') = False.
Proof. exact (TRANS (@lem5826375 _121547 b b') (@lem5826378 _121547 b b')). Qed.
Lemma lem5826380 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826381 {_121547 : Type'} (b : _121547) (b' : _121547) : (term83 _121547 b b') = (imp False).
Proof. exact (MK_COMB (@lem5826380) (@lem5826379 _121547 b b')). Qed.
Lemma lem5826385 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5826386 {_121547 : Type'} (t2 : _121547) (t1 : _121547) : (@COND _121547 True t1 t2) = t1.
Proof. exact (@lem5826385 _121547 t2 t1). Qed.
Lemma lem5826387 {_121547 : Type'} (c : _121547) (b' : _121547) : (@COND _121547 True b' c) = b'.
Proof. exact (@lem5826386 _121547 c b'). Qed.
Lemma lem5826388 {_121547 : Type'} (c : _121547) : (@eq _121547 c) = (@eq _121547 c).
Proof. exact (eq_refl (@eq _121547 c)). Qed.
Lemma lem5826389 {_121547 : Type'} (c : _121547) (b' : _121547) : (c = (@COND _121547 True b' c)) = (c = b').
Proof. exact (MK_COMB (@lem5826388 _121547 c) (@lem5826387 _121547 c b')). Qed.
Lemma lem5826392 {_121547 : Type'} (b : _121547) (c : _121547) (b' : _121547) : (term75 _121547 b b' c) = (term62 _121547 c b').
Proof. exact (MK_COMB (@lem5826381 _121547 b b') (@lem5826389 _121547 c b')). Qed.
Lemma lem5826394 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem5826395 {_121547 : Type'} (c : _121547) (b' : _121547) : (term62 _121547 c b') = True.
Proof. exact (@lem5826394 (c = b')). Qed.
Lemma lem5826396 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term75 _121547 b b' c) = True.
Proof. exact (TRANS (@lem5826392 _121547 b c b') (@lem5826395 _121547 c b')). Qed.
Lemma lem5826397 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : True = (term75 _121547 b b' c).
Proof. exact (SYM (@lem5826396 _121547 b b' c)). Qed.
Lemma lem5826398 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : term75 _121547 b b' c.
Proof. exact (EQ_MP (@lem5826397 _121547 b b' c) (@lem0)). Qed.
Lemma lem5826404 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem5826405 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5826406 : term84 = (and True).
Proof. exact (MK_COMB (@lem5826405) (@lem5826404)). Qed.
Lemma lem5826408 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem5826409 {_121547 : Type'} (b : _121547) (b' : _121547) : (term62 _121547 b b') = True.
Proof. exact (@lem5826408 (b = b')). Qed.
Lemma lem5826410 {_121547 : Type'} (b : _121547) (b' : _121547) : (term85 _121547 b b') = (True /\ True).
Proof. exact (MK_COMB (@lem5826406) (@lem5826409 _121547 b b')). Qed.
Lemma lem5826412 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem5826413 : (True /\ True) = True.
Proof. exact (@lem5826412 True). Qed.
Lemma lem5826414 {_121547 : Type'} (b : _121547) (b' : _121547) : (term85 _121547 b b') = True.
Proof. exact (TRANS (@lem5826410 _121547 b b') (@lem5826413)). Qed.
Lemma lem5826415 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826416 {_121547 : Type'} (b : _121547) (b' : _121547) : (term86 _121547 b b') = (imp True).
Proof. exact (MK_COMB (@lem5826415) (@lem5826414 _121547 b b')). Qed.
Lemma lem5826420 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5826421 {_121547 : Type'} (t1 : _121547) (t2 : _121547) : (@COND _121547 False t1 t2) = t2.
Proof. exact (@lem5826420 _121547 t1 t2). Qed.
Lemma lem5826422 {_121547 : Type'} (b' : _121547) (c : _121547) : (@COND _121547 False b' c) = c.
Proof. exact (@lem5826421 _121547 b' c). Qed.
Lemma lem5826423 {_121547 : Type'} (c : _121547) : (@eq _121547 c) = (@eq _121547 c).
Proof. exact (eq_refl (@eq _121547 c)). Qed.
Lemma lem5826424 {_121547 : Type'} (b' : _121547) (c : _121547) : (c = (@COND _121547 False b' c)) = (c = c).
Proof. exact (MK_COMB (@lem5826423 _121547 c) (@lem5826422 _121547 b' c)). Qed.
Lemma lem5826426 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem5826427 {_121547 : Type'} (x : _121547) : (x = x) = True.
Proof. exact (@lem5826426 _121547 x). Qed.
Lemma lem5826428 {_121547 : Type'} (c : _121547) : (c = c) = True.
Proof. exact (@lem5826427 _121547 c). Qed.
Lemma lem5826429 {_121547 : Type'} (b' : _121547) (c : _121547) : (c = (@COND _121547 False b' c)) = True.
Proof. exact (TRANS (@lem5826424 _121547 b' c) (@lem5826428 _121547 c)). Qed.
Lemma lem5826430 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term79 _121547 b b' c) = (True -> True).
Proof. exact (MK_COMB (@lem5826416 _121547 b b') (@lem5826429 _121547 b' c)). Qed.
Lemma lem5826432 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem5826433 : (True -> True) = True.
Proof. exact (@lem5826432 True). Qed.
Lemma lem5826434 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : (term79 _121547 b b' c) = True.
Proof. exact (TRANS (@lem5826430 _121547 b b' c) (@lem5826433)). Qed.
Lemma lem5826435 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : True = (term79 _121547 b b' c).
Proof. exact (SYM (@lem5826434 _121547 b b' c)). Qed.
Lemma lem5826436 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) : term79 _121547 b b' c.
Proof. exact (EQ_MP (@lem5826435 _121547 b b' c) (@lem0)). Qed.
Lemma lem5826437 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = False) : term71 _121547 b a' b' c.
Proof. exact (EQ_MP (@lem5826361 _121547 b b' c a' h1) (@lem5826436 _121547 b b' c)). Qed.
Lemma lem5826438 {_121547 : Type'} (b : _121547) (b' : _121547) (c : _121547) (a' : Prop) (h1 : a' = True) : term71 _121547 b a' b' c.
Proof. exact (EQ_MP (@lem5826348 _121547 b b' c a' h1) (@lem5826398 _121547 b b' c)). Qed.
Lemma lem5826440 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term71 _121547 b a' b' c.
Proof. exact (or_elim (@lem5826321 a') (fun h0 : a' = True => @lem5826438 _121547 b b' c a' h0) (fun h0 : a' = False => @lem5826437 _121547 b b' c a' h0)). Qed.
Lemma lem5826441 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term39 _121547 b a' b' c.
Proof. exact (EQ_MP (@lem5826318 _121547 b a' b' c) (@lem5826440 _121547 b a' b' c)). Qed.
Lemma lem5826442 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = False) : term36 _121547 a b a' b' c.
Proof. exact (EQ_MP (@lem5826144 _121547 b a' b' c a h1) (@lem5826441 _121547 b a' b' c)). Qed.
Lemma lem5826443 {_121547 : Type'} (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (a : Prop) (h1 : a = True) : term36 _121547 a b a' b' c.
Proof. exact (EQ_MP (@lem5826131 _121547 b a' b' c a h1) (@lem5826283 _121547 b a' b' c)). Qed.
Lemma lem5826446 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term36 _121547 a b a' b' c.
Proof. exact (or_elim (@lem5826102 a) (fun h0 : a = True => @lem5826443 _121547 b a' b' c a h0) (fun h0 : a = False => @lem5826442 _121547 b a' b' c a h0)). Qed.
Lemma lem5826447 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (h1 : term36 _121547 a b a' b' c) : term36 _121547 a b a' b' c.
Proof. exact (h1). Qed.
Lemma lem5826448 {_121547 : Type'} (a : Prop) (a' : Prop) (b : _121547) (b' : _121547) (h1 : term87 _121547 a a' b b') : term87 _121547 a a' b b'.
Proof. exact (h1). Qed.
Lemma lem5826449 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (h1 : term87 _121547 a a' b b') (h2 : term36 _121547 a b a' b' c) : (@COND _121547 a b c) = (@COND _121547 a' b' c).
Proof. exact (@lem5826447 _121547 a b a' b' c h2 (@lem5826448 _121547 a a' b b' h1)). Qed.
Lemma lem5826450 {_121547 : Type'} (c : _121547) (a : Prop) (a' : Prop) (b : _121547) (b' : _121547) (h1 : term87 _121547 a a' b b') : term88 _121547 a b a' b' c.
Proof. exact (fun h0 : term36 _121547 a b a' b' c => @lem5826449 _121547 a b a' b' c h1 h0). Qed.
Lemma lem5826451 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (h1 : term36 _121547 a b a' b' c) : term36 _121547 a b a' b' c.
Proof. exact (h1). Qed.
Lemma lem5826452 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (h1 : term87 _121547 a a' b b') (h2 : term36 _121547 a b a' b' c) : (@COND _121547 a b c) = (@COND _121547 a' b' c).
Proof. exact (@lem5826450 _121547 c a a' b b' h1 (@lem5826451 _121547 a b a' b' c h2)). Qed.
Lemma lem5826453 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) (h1 : term36 _121547 a b a' b' c) : term36 _121547 a b a' b' c.
Proof. exact (fun h0 : term87 _121547 a a' b b' => @lem5826452 _121547 a b a' b' c h0 h1). Qed.
Lemma lem5826454 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term89 _121547 a b a' b' c.
Proof. exact (fun h0 : term36 _121547 a b a' b' c => @lem5826453 _121547 a b a' b' c h0). Qed.
Lemma lem5826456 {_120327 _120333 : Type'} (op : type1400 _120327) : term90 _120327 _120333 op.
Proof. exact (@lem5738118 _120327 _120333 op). Qed.
Lemma lem5826457 {_120327 _120333 : Type'} (op : type1400 _120327) : (term90 _120327 _120333 op) = (term91 _120327 _120333 op).
Proof. exact (eq_refl (term90 _120327 _120333 op)). Qed.
Lemma lem5826458 {_120327 _120333 : Type'} (op : type1400 _120327) : term91 _120327 _120333 op.
Proof. exact (EQ_MP (@lem5826457 _120327 _120333 op) (@lem5826456 _120327 _120333 op)). Qed.
Lemma lem5826459 {_120327 _120333 : Type'} (op : type1400 _120327) (f : _120333 -> _120327) : term92 _120327 _120333 op f.
Proof. exact (@lem5826458 _120327 _120333 op f). Qed.
Lemma lem5826460 {_120327 _120333 : Type'} (f : _120333 -> _120327) (op : type1400 _120327) : (term92 _120327 _120333 op f) = (term93 _120327 _120333 f op).
Proof. exact (eq_refl (term92 _120327 _120333 op f)). Qed.
Lemma lem5826461 {_120327 _120333 : Type'} (f : _120333 -> _120327) (op : type1400 _120327) : term93 _120327 _120333 f op.
Proof. exact (EQ_MP (@lem5826460 _120327 _120333 f op) (@lem5826459 _120327 _120333 op f)). Qed.
Lemma lem5826462 {_120327 _120333 : Type'} (f : _120333 -> _120327) (op : type1400 _120327) (s : _120333 -> Prop) : term94 _120327 _120333 f op s.
Proof. exact (@lem5826461 _120327 _120333 f op s). Qed.
Lemma lem5826463 {_120327 _120333 : Type'} (s : _120333 -> Prop) (f : _120333 -> _120327) (op : type1400 _120327) : (term94 _120327 _120333 f op s) = ((@iterate _120327 _120333 op s f) = (term95 _120327 _120333 s f op)).
Proof. exact (eq_refl (term94 _120327 _120333 f op s)). Qed.
Lemma lem5826475 {A : Type'} (x : A) : term96 A x.
Proof. exact (@lem3205665 A x). Qed.
Lemma lem5826476 {A : Type'} (x : A) : (term96 A x) = (term97 A x).
Proof. exact (eq_refl (term96 A x)). Qed.
Lemma lem5826477 {A : Type'} (x : A) : term97 A x.
Proof. exact (EQ_MP (@lem5826476 A x) (@lem5826475 A x)). Qed.
Lemma lem5826478 {A : Type'} (x : A) (y : A) : term98 A x y.
Proof. exact (@lem5826477 A x y). Qed.
Lemma lem5826479 {A : Type'} (y : A) (x : A) : (term98 A x y) = (term99 A y x).
Proof. exact (eq_refl (term98 A x y)). Qed.
Lemma lem5826480 {A : Type'} (y : A) (x : A) : term99 A y x.
Proof. exact (EQ_MP (@lem5826479 A y x) (@lem5826478 A x y)). Qed.
Lemma lem5826481 {A : Type'} (y : A) (x : A) (s : A -> Prop) : term100 A y x s.
Proof. exact (@lem5826480 A y x s). Qed.
Lemma lem5826482 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term100 A y x s) = ((term101 A x y s) = (term102 A y x s)).
Proof. exact (eq_refl (term100 A y x s)). Qed.
Lemma lem5826484 {A B C : Type'} (f : B -> C) : term103 A B C f.
Proof. exact (@lem15456 A B C f). Qed.
Lemma lem5826485 {A B C : Type'} (f : B -> C) : (term103 A B C f) = (term104 A B C f).
Proof. exact (eq_refl (term103 A B C f)). Qed.
Lemma lem5826486 {A B C : Type'} (f : B -> C) : term104 A B C f.
Proof. exact (EQ_MP (@lem5826485 A B C f) (@lem5826484 A B C f)). Qed.
Lemma lem5826487 {A B C : Type'} (f : B -> C) (g : A -> B) : term105 A B C f g.
Proof. exact (@lem5826486 A B C f g). Qed.
Lemma lem5826488 {A B C : Type'} (f : B -> C) (g : A -> B) : (term105 A B C f g) = (term106 A B C f g).
Proof. exact (eq_refl (term105 A B C f g)). Qed.
Lemma lem5826489 {A B C : Type'} (f : B -> C) (g : A -> B) : term106 A B C f g.
Proof. exact (EQ_MP (@lem5826488 A B C f g) (@lem5826487 A B C f g)). Qed.
Lemma lem5826490 {A B C : Type'} (f : B -> C) (g : A -> B) (x : A) : term107 A B C f g x.
Proof. exact (@lem5826489 A B C f g x). Qed.
Lemma lem5826491 {A B C : Type'} (f : B -> C) (g : A -> B) (x : A) : (term107 A B C f g x) = ((@o A B C f g x) = (term108 A B C f g x)).
Proof. exact (eq_refl (term107 A B C f g x)). Qed.
Lemma lem5826493 {A : Type'} (h1 : term109 A) : term109 A.
Proof. exact (h1). Qed.
Lemma lem5826494 {A : Type'} (P : type686 A) (h1 : term109 A) : term110 A P.
Proof. exact (@lem5826493 A h1 P). Qed.
Lemma lem5826495 {A : Type'} (P : type686 A) : (term110 A P) = (term111 A P).
Proof. exact (eq_refl (term110 A P)). Qed.
Lemma lem5826496 {A : Type'} (P : type686 A) (h1 : term109 A) : term111 A P.
Proof. exact (EQ_MP (@lem5826495 A P) (@lem5826494 A P h1)). Qed.
Lemma lem5826497 {A : Type'} (P : type686 A) (h1 : term112 A P) : term112 A P.
Proof. exact (h1). Qed.
Lemma lem5826498 {A : Type'} (P : type686 A) (h1 : term109 A) (h2 : term112 A P) : term113 A P.
Proof. exact (@lem5826496 A P h1 (@lem5826497 A P h2)). Qed.
Lemma lem5826499 {A : Type'} (P : type686 A) (h1 : term112 A P) : term114 A P.
Proof. exact (fun h0 : term109 A => @lem5826498 A P h0 h1). Qed.
Lemma lem5826500 {A : Type'} (h1 : term109 A) : term109 A.
Proof. exact (h1). Qed.
Lemma lem5826501 {A : Type'} (P : type686 A) (h1 : term109 A) (h2 : term112 A P) : term113 A P.
Proof. exact (@lem5826499 A P h2 (@lem5826500 A h1)). Qed.
Lemma lem5826502 {A : Type'} (P : type686 A) (h1 : term109 A) : term111 A P.
Proof. exact (fun h0 : term112 A P => @lem5826501 A P h1 h0). Qed.
Lemma lem5826503 {A : Type'} (h1 : term109 A) : term109 A.
Proof. exact (fun P : type686 A => @lem5826502 A P h1). Qed.
Lemma lem5826504 {A : Type'} : term115 A.
Proof. exact (fun h0 : term109 A => @lem5826503 A h0). Qed.
Lemma lem5826505 {A : Type'} : term109 A.
Proof. exact (@lem5826504 A (@lem3558722 A)). Qed.
Lemma lem5826506 {A : Type'} (P : type686 A) : term110 A P.
Proof. exact (@lem5826505 A P). Qed.
Lemma lem5826507 {A : Type'} (P : type686 A) : (term110 A P) = (term111 A P).
Proof. exact (eq_refl (term110 A P)). Qed.
Lemma lem5826509 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : @monoidal C op.
Proof. exact (h1). Qed.
Lemma lem5826510 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term116 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5826516 (p : Prop) (q : Prop) (r : Prop) : (term117 p q r) = (term118 p q r).
Proof. exact (EQ_MP (@lem886 p q r) (@lem885 p q r)). Qed.
Lemma lem5826517 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term119 A B C op s g f) = (term120 A B C op s g f).
Proof. exact (@lem5826516 (@FINITE A s) (term12 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5826531 (p : Prop) (q : Prop) (r : Prop) : (term117 p q r) = (term118 p q r).
Proof. exact (EQ_MP (@lem886 p q r) (@lem885 p q r)). Qed.
Lemma lem5826532 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term124 A B s f x y).
Proof. exact (@lem5826531 (@IN A x s) (term125 A B s x f y) (x = y)). Qed.
Lemma lem5826536 (p : Prop) (q : Prop) (r : Prop) : (term117 p q r) = (term118 p q r).
Proof. exact (EQ_MP (@lem886 p q r) (@lem885 p q r)). Qed.
Lemma lem5826537 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term126 A B s f x y) = (term127 A B s f x y).
Proof. exact (@lem5826536 (@IN A y s) ((f x) = (f y)) (x = y)). Qed.
Lemma lem5826548 {A : Type'} (x : A) (s : A -> Prop) : (term128 A x s) = (term128 A x s).
Proof. exact (eq_refl (term128 A x s)). Qed.
Lemma lem5826549 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term124 A B s f x y) = (term129 A B s f x y).
Proof. exact (MK_COMB (@lem5826548 A x s) (@lem5826537 A B s f x y)). Qed.
Lemma lem5826552 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term129 A B s f x y).
Proof. exact (TRANS (@lem5826532 A B s f x y) (@lem5826549 A B s f x y)). Qed.
Lemma lem5826553 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term130 A B s f x) = (term131 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5826552 A B s f x y)). Qed.
Lemma lem5826554 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5826555 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term132 A B s f x) = (term133 A B s f x).
Proof. exact (MK_COMB (@lem5826554 A) (@lem5826553 A B s f x)). Qed.
Lemma lem5826560 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term134 A B s f) = (term135 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5826555 A B s f x)). Qed.
Lemma lem5826561 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5826562 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term12 A B s f) = (term136 A B s f).
Proof. exact (MK_COMB (@lem5826561 A) (@lem5826560 A B s f)). Qed.
Lemma lem5826567 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826568 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term137 A B s f) = (term138 A B s f).
Proof. exact (MK_COMB (@lem5826567) (@lem5826562 A B s f)). Qed.
Lemma lem5826571 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5826572 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term139 A B C op s g f) = (term140 A B C op s g f).
Proof. exact (MK_COMB (@lem5826568 A B s f) (@lem5826571 A B C op s g f)). Qed.
Lemma lem5826575 {A : Type'} (s : A -> Prop) : (term141 A s) = (term141 A s).
Proof. exact (eq_refl (term141 A s)). Qed.
Lemma lem5826576 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term120 A B C op s g f) = (term142 A B C op s g f).
Proof. exact (MK_COMB (@lem5826575 A s) (@lem5826572 A B C op s g f)). Qed.
Lemma lem5826579 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term119 A B C op s g f) = (term142 A B C op s g f).
Proof. exact (TRANS (@lem5826517 A B C op s g f) (@lem5826576 A B C op s g f)). Qed.
Lemma lem5826580 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term143 A B C op g f) = (term144 A B C op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5826579 A B C op s g f)). Qed.
Lemma lem5826581 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5826582 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term116 A B C op g f) = (term145 A B C op g f).
Proof. exact (MK_COMB (@lem5826581 A) (@lem5826580 A B C op g f)). Qed.
Lemma lem5826587 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term145 A B C op g f) = (term116 A B C op g f).
Proof. exact (SYM (@lem5826582 A B C op g f)). Qed.
Lemma lem5826589 {A : Type'} (P : type686 A) : term111 A P.
Proof. exact (EQ_MP (@lem5826507 A P) (@lem5826506 A P)). Qed.
Lemma lem5826590 {A : Type'} (P : type686 A) : term111 A P.
Proof. exact (@lem5826589 A P). Qed.
Lemma lem5826591 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term146 A B C op g f.
Proof. exact (@lem5826590 A (term147 A B C op g f)). Qed.
Lemma lem5826592 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term148 A B C op g f) = (term149 A B C op g f).
Proof. exact (eq_refl (term148 A B C op g f)). Qed.
Lemma lem5826593 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5826594 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term150 A B C op g f) = (term151 A B C op g f).
Proof. exact (MK_COMB (@lem5826593) (@lem5826592 A B C op g f)). Qed.
Lemma lem5826595 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term152 A B C op g f s) = (term140 A B C op s g f).
Proof. exact (eq_refl (term152 A B C op g f s)). Qed.
Lemma lem5826596 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5826597 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term153 A B C op g f s) = (term154 A B C op s g f).
Proof. exact (MK_COMB (@lem5826596) (@lem5826595 A B C op s g f)). Qed.
Lemma lem5826598 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5826599 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term156 A B C op g f x s) = (term157 A B C op g f x s).
Proof. exact (MK_COMB (@lem5826597 A B C op s g f) (@lem5826598 A x s)). Qed.
Lemma lem5826600 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826601 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term158 A B C op g f x s) = (term159 A B C op g f x s).
Proof. exact (MK_COMB (@lem5826600) (@lem5826599 A B C op g f x s)). Qed.
Lemma lem5826602 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term160 A B C op g f x s) = (term161 A B C op x s g f).
Proof. exact (eq_refl (term160 A B C op g f x s)). Qed.
Lemma lem5826603 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term162 A B C op g f x s) = (term163 A B C op x s g f).
Proof. exact (MK_COMB (@lem5826601 A B C op g f x s) (@lem5826602 A B C op x s g f)). Qed.
Lemma lem5826604 {A B C : Type'} (op : type1400 C) (x : A) (g : B -> C) (f : A -> B) : (term164 A B C op g f x) = (term165 A B C op x g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5826603 A B C op x s g f)). Qed.
Lemma lem5826605 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5826606 {A B C : Type'} (op : type1400 C) (x : A) (g : B -> C) (f : A -> B) : (term166 A B C op g f x) = (term167 A B C op x g f).
Proof. exact (MK_COMB (@lem5826605 A) (@lem5826604 A B C op x g f)). Qed.
Lemma lem5826607 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term168 A B C op g f) = (term169 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5826606 A B C op x g f)). Qed.
Lemma lem5826608 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5826609 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term170 A B C op g f) = (term171 A B C op g f).
Proof. exact (MK_COMB (@lem5826608 A) (@lem5826607 A B C op g f)). Qed.
Lemma lem5826610 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term172 A B C op g f) = (term173 A B C op g f).
Proof. exact (MK_COMB (@lem5826594 A B C op g f) (@lem5826609 A B C op g f)). Qed.
Lemma lem5826611 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5826612 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term174 A B C op g f) = (term175 A B C op g f).
Proof. exact (MK_COMB (@lem5826611) (@lem5826610 A B C op g f)). Qed.
Lemma lem5826613 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term152 A B C op g f s) = (term140 A B C op s g f).
Proof. exact (eq_refl (term152 A B C op g f s)). Qed.
Lemma lem5826614 {A : Type'} (s : A -> Prop) : (term141 A s) = (term141 A s).
Proof. exact (eq_refl (term141 A s)). Qed.
Lemma lem5826615 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term176 A B C op g f s) = (term142 A B C op s g f).
Proof. exact (MK_COMB (@lem5826614 A s) (@lem5826613 A B C op s g f)). Qed.
Lemma lem5826616 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term177 A B C op g f) = (term144 A B C op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5826615 A B C op s g f)). Qed.
Lemma lem5826617 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5826618 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term178 A B C op g f) = (term145 A B C op g f).
Proof. exact (MK_COMB (@lem5826617 A) (@lem5826616 A B C op g f)). Qed.
Lemma lem5826619 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term146 A B C op g f) = (term179 A B C op g f).
Proof. exact (MK_COMB (@lem5826612 A B C op g f) (@lem5826618 A B C op g f)). Qed.
Lemma lem5826620 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term179 A B C op g f.
Proof. exact (EQ_MP (@lem5826619 A B C op g f) (@lem5826591 A B C op g f)). Qed.
Lemma lem5826621 {A B : Type'} (f : A -> B) : term180 A B f.
Proof. exact (@lem3615104 A B f). Qed.
Lemma lem5826622 {A B : Type'} (f : A -> B) : (term180 A B f) = (term181 A B f).
Proof. exact (eq_refl (term180 A B f)). Qed.
Lemma lem5826623 {A B : Type'} (f : A -> B) : term181 A B f.
Proof. exact (EQ_MP (@lem5826622 A B f) (@lem5826621 A B f)). Qed.
Lemma lem5826624 {A B : Type'} (f : A -> B) (s : A -> Prop) : term182 A B f s.
Proof. exact (@lem5826623 A B f s). Qed.
Lemma lem5826625 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term182 A B f s) = (term183 A B f s).
Proof. exact (eq_refl (term182 A B f s)). Qed.
Lemma lem5826626 {A B : Type'} (f : A -> B) (s : A -> Prop) : term183 A B f s.
Proof. exact (EQ_MP (@lem5826625 A B f s) (@lem5826624 A B f s)). Qed.
Lemma lem5826627 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem5826628 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) : term13 A B f s.
Proof. exact (@lem5826626 A B f s (@lem5826627 A s h1)). Qed.
Lemma lem5826629 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term13 A B f s) = ((term13 A B f s) = True).
Proof. exact (@lem7 (term13 A B f s)). Qed.
Lemma lem5826630 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : @FINITE A s) : (term13 A B f s) = True.
Proof. exact (EQ_MP (@lem5826629 A B f s) (@lem5826628 A B f s h1)). Qed.
Lemma lem5826638 {_120477 _120519 _120521 : Type'} (op : type1400 _120519) : term184 _120477 _120519 _120521 op.
Proof. exact (@lem5753565 _120477 _120519 _120521 op). Qed.
Lemma lem5826639 {_120477 _120519 _120521 : Type'} (op : type1400 _120519) : (term184 _120477 _120519 _120521 op) = (term185 _120477 _120519 _120521 op).
Proof. exact (eq_refl (term184 _120477 _120519 _120521 op)). Qed.
Lemma lem5826640 {_120477 _120519 _120521 : Type'} (op : type1400 _120519) : term185 _120477 _120519 _120521 op.
Proof. exact (EQ_MP (@lem5826639 _120477 _120519 _120521 op) (@lem5826638 _120477 _120519 _120521 op)). Qed.
Lemma lem5826641 {_120519 : Type'} (op : type1400 _120519) (h1 : @monoidal _120519 op) : @monoidal _120519 op.
Proof. exact (h1). Qed.
Lemma lem5826642 {_120477 _120519 _120521 : Type'} (op : type1400 _120519) (h1 : @monoidal _120519 op) : term186 _120477 _120519 _120521 op.
Proof. exact (@lem5826640 _120477 _120519 _120521 op (@lem5826641 _120519 op h1)). Qed.
Lemma lem5826643 {_120519 _120521 : Type'} (op : type1400 _120519) (h1 : @monoidal _120519 op) : term187 _120519 _120521 op.
Proof. exact (proj2 (@lem5826642 Prop _120519 _120521 op h1)). Qed.
Lemma lem5826644 {_120519 _120521 : Type'} (f : _120521 -> _120519) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term188 _120519 _120521 op f.
Proof. exact (@lem5826643 _120519 _120521 op h1 f). Qed.
Lemma lem5826645 {_120519 _120521 : Type'} (op : type1400 _120519) (f : _120521 -> _120519) : (term188 _120519 _120521 op f) = (term189 _120519 _120521 op f).
Proof. exact (eq_refl (term188 _120519 _120521 op f)). Qed.
Lemma lem5826646 {_120519 _120521 : Type'} (f : _120521 -> _120519) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term189 _120519 _120521 op f.
Proof. exact (EQ_MP (@lem5826645 _120519 _120521 op f) (@lem5826644 _120519 _120521 f op h1)). Qed.
Lemma lem5826647 {_120519 _120521 : Type'} (f : _120521 -> _120519) (x : _120521) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term190 _120519 _120521 op f x.
Proof. exact (@lem5826646 _120519 _120521 f op h1 x). Qed.
Lemma lem5826648 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (f : _120521 -> _120519) : (term190 _120519 _120521 op f x) = (term191 _120519 _120521 x op f).
Proof. exact (eq_refl (term190 _120519 _120521 op f x)). Qed.
Lemma lem5826649 {_120519 _120521 : Type'} (x : _120521) (f : _120521 -> _120519) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term191 _120519 _120521 x op f.
Proof. exact (EQ_MP (@lem5826648 _120519 _120521 x op f) (@lem5826647 _120519 _120521 f x op h1)). Qed.
Lemma lem5826650 {_120519 _120521 : Type'} (x : _120521) (f : _120521 -> _120519) (s : _120521 -> Prop) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term192 _120519 _120521 x op f s.
Proof. exact (@lem5826649 _120519 _120521 x f op h1 s). Qed.
Lemma lem5826651 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (s : _120521 -> Prop) (f : _120521 -> _120519) : (term192 _120519 _120521 x op f s) = (term193 _120519 _120521 x op s f).
Proof. exact (eq_refl (term192 _120519 _120521 x op f s)). Qed.
Lemma lem5826652 {_120519 _120521 : Type'} (x : _120521) (s : _120521 -> Prop) (f : _120521 -> _120519) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term193 _120519 _120521 x op s f.
Proof. exact (EQ_MP (@lem5826651 _120519 _120521 x op s f) (@lem5826650 _120519 _120521 x f s op h1)). Qed.
Lemma lem5826653 {_120521 : Type'} (s : _120521 -> Prop) (h1 : @FINITE _120521 s) : @FINITE _120521 s.
Proof. exact (h1). Qed.
Lemma lem5826654 {_120519 _120521 : Type'} (x : _120521) (f : _120521 -> _120519) (s : _120521 -> Prop) (op : type1400 _120519) (h1 : @FINITE _120521 s) (h2 : @monoidal _120519 op) : (term194 _120519 _120521 op x s f) = (term195 _120519 _120521 x op s f).
Proof. exact (@lem5826652 _120519 _120521 x s f op h2 (@lem5826653 _120521 s h1)). Qed.
Lemma lem5826655 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (f : _120521 -> _120519) (s : _120521 -> Prop) (h1 : @FINITE _120521 s) : term196 _120519 _120521 x op s f.
Proof. exact (fun h0 : @monoidal _120519 op => @lem5826654 _120519 _120521 x f s op h1 h0). Qed.
Lemma lem5826656 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (s : _120521 -> Prop) (f : _120521 -> _120519) : term197 _120519 _120521 x op s f.
Proof. exact (fun h0 : @FINITE _120521 s => @lem5826655 _120519 _120521 x op f s h0). Qed.
Lemma lem5826658 (p : Prop) (q : Prop) (r : Prop) : (term118 p q r) = (term117 p q r).
Proof. exact (EQ_MP (@lem197 p q r) (@lem196 p q r)). Qed.
Lemma lem5826663 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (s : _120521 -> Prop) (f : _120521 -> _120519) : (term197 _120519 _120521 x op s f) = (term198 _120519 _120521 x op s f).
Proof. exact (@lem5826658 (@FINITE _120521 s) (@monoidal _120519 op) ((term194 _120519 _120521 op x s f) = (term195 _120519 _120521 x op s f))). Qed.
Lemma lem5826665 {_120477 _120519 : Type'} (op : type1400 _120519) (h1 : @monoidal _120519 op) : term199 _120477 _120519 op.
Proof. exact (proj1 (@lem5826642 _120477 _120519 Prop op h1)). Qed.
Lemma lem5826666 {_120477 _120519 : Type'} (f : _120477 -> _120519) (op : type1400 _120519) (h1 : @monoidal _120519 op) : term200 _120477 _120519 op f.
Proof. exact (@lem5826665 _120477 _120519 op h1 f). Qed.
Lemma lem5826667 {_120477 _120519 : Type'} (f : _120477 -> _120519) (op : type1400 _120519) : (term200 _120477 _120519 op f) = ((@iterate _120519 _120477 op (@EMPTY _120477) f) = (@neutral _120519 op)).
Proof. exact (eq_refl (term200 _120477 _120519 op f)). Qed.
Lemma lem5826668 {_120477 _120519 : Type'} (f : _120477 -> _120519) (op : type1400 _120519) (h1 : @monoidal _120519 op) : (@iterate _120519 _120477 op (@EMPTY _120477) f) = (@neutral _120519 op).
Proof. exact (EQ_MP (@lem5826667 _120477 _120519 f op) (@lem5826666 _120477 _120519 f op h1)). Qed.
Lemma lem5826674 {C : Type'} (op : type1400 C) : (@monoidal C op) = ((@monoidal C op) = True).
Proof. exact (@lem7 (@monoidal C op)). Qed.
Lemma lem5826681 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term201 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem5826682 (p : Prop) (q : Prop) (p' : Prop) : term202 p q p'.
Proof. exact (fun q' : Prop => @lem5826681 p q p' q'). Qed.
Lemma lem5826683 (p : Prop) (q : Prop) : term203 p q.
Proof. exact (fun p' : Prop => @lem5826682 p q p'). Qed.
Lemma lem5826684 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term204 A B C op g f.
Proof. exact (@lem5826683 (term205 A B f) ((term206 A B C op f g) = (term207 A B C op g f))). Qed.
Lemma lem5826685 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (p' : Prop) : term208 A B C op g f p'.
Proof. exact (@lem5826684 A B C op g f p'). Qed.
Lemma lem5826686 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (p' : Prop) : (term208 A B C op g f p') = (term209 A B C op g f p').
Proof. exact (eq_refl (term208 A B C op g f p')). Qed.
Lemma lem5826687 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (p' : Prop) : term209 A B C op g f p'.
Proof. exact (EQ_MP (@lem5826686 A B C op g f p') (@lem5826685 A B C op g f p')). Qed.
Lemma lem5826688 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : term210 A B C op g f p' q'.
Proof. exact (@lem5826687 A B C op g f p' q'). Qed.
Lemma lem5826689 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : (term210 A B C op g f p' q') = (term211 A B C op g f p' q').
Proof. exact (eq_refl (term210 A B C op g f p' q')). Qed.
Lemma lem5826690 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : term211 A B C op g f p' q'.
Proof. exact (EQ_MP (@lem5826689 A B C op g f p' q') (@lem5826688 A B C op g f p' q')). Qed.
Lemma lem5826892 {A B : Type'} (f : A -> B) : (term205 A B f) = (term205 A B f).
Proof. exact (eq_refl (term205 A B f)). Qed.
Lemma lem5826893 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (q' : Prop) : term212 A B C op g f q'.
Proof. exact (@lem5826690 A B C op g f (term205 A B f) q'). Qed.
Lemma lem5826894 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (q' : Prop) : term213 A B C op g f q'.
Proof. exact (@lem5826893 A B C op g f q' (@lem5826892 A B f)). Qed.
Lemma lem5826958 {_87477 _87481 : Type'} (f : _87477 -> _87481) : (@IMAGE _87477 _87481 f (@EMPTY _87477)) = (@EMPTY _87481).
Proof. exact (proj1 (@lem3366870 _87477 _87481 (@el _87477) f (@el (_87477 -> Prop)))). Qed.
Lemma lem5826959 {A B : Type'} (f : A -> B) : (@IMAGE A B f (@EMPTY A)) = (@EMPTY B).
Proof. exact (@lem5826958 A B f). Qed.
Lemma lem5826964 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5826965 {A B C : Type'} (f : A -> B) (op : type1400 C) : (term214 A B C op f) = (@iterate C B op (@EMPTY B)).
Proof. exact (MK_COMB (@lem5826964 B C op) (@lem5826959 A B f)). Qed.
Lemma lem5826990 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5826991 {A B C : Type'} (f : A -> B) (op : type1400 C) (g : B -> C) : (term206 A B C op f g) = (@iterate C B op (@EMPTY B) g).
Proof. exact (MK_COMB (@lem5826965 A B C f op) (@lem5826990 B C g)). Qed.
Lemma lem5826993 {_120477 _120519 : Type'} (f : _120477 -> _120519) (op : type1400 _120519) : term215 _120477 _120519 f op.
Proof. exact (fun h0 : @monoidal _120519 op => @lem5826668 _120477 _120519 f op h0). Qed.
Lemma lem5826994 {B C : Type'} (f : B -> C) (op : type1400 C) : term215 B C f op.
Proof. exact (@lem5826993 B C f op). Qed.
Lemma lem5826995 {B C : Type'} (g : B -> C) (op : type1400 C) : term215 B C g op.
Proof. exact (@lem5826994 B C g op). Qed.
Lemma lem5826997 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : (@monoidal C op) = True.
Proof. exact (EQ_MP (@lem5826674 C op) (@lem5826509 C op h1)). Qed.
Lemma lem5827002 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : True = (@monoidal C op).
Proof. exact (SYM (@lem5826997 C op h1)). Qed.
Lemma lem5827003 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : @monoidal C op.
Proof. exact (EQ_MP (@lem5827002 C op h1) (@lem0)). Qed.
Lemma lem5827004 {B C : Type'} (g : B -> C) (op : type1400 C) (h1 : @monoidal C op) : (@iterate C B op (@EMPTY B) g) = (@neutral C op).
Proof. exact (@lem5826995 B C g op (@lem5827003 C op h1)). Qed.
Lemma lem5827017 {A B C : Type'} (f : A -> B) (g : B -> C) (op : type1400 C) (h1 : @monoidal C op) : (term206 A B C op f g) = (@neutral C op).
Proof. exact (TRANS (@lem5826991 A B C f op g) (@lem5827004 B C g op h1)). Qed.
Lemma lem5827018 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5827019 {A B C : Type'} (f : A -> B) (g : B -> C) (op : type1400 C) (h1 : @monoidal C op) : (term216 A B C op f g) = (term217 C op).
Proof. exact (MK_COMB (@lem5827018 C) (@lem5827017 A B C f g op h1)). Qed.
Lemma lem5827041 {_120477 _120519 : Type'} (f : _120477 -> _120519) (op : type1400 _120519) : term215 _120477 _120519 f op.
Proof. exact (fun h0 : @monoidal _120519 op => @lem5826668 _120477 _120519 f op h0). Qed.
Lemma lem5827042 {A C : Type'} (f : A -> C) (op : type1400 C) : term215 A C f op.
Proof. exact (@lem5827041 A C f op). Qed.
Lemma lem5827043 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) : term218 A B C g f op.
Proof. exact (@lem5827042 A C (@o A B C g f) op). Qed.
Lemma lem5827045 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : (@monoidal C op) = True.
Proof. exact (EQ_MP (@lem5826674 C op) (@lem5826509 C op h1)). Qed.
Lemma lem5827050 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : True = (@monoidal C op).
Proof. exact (SYM (@lem5827045 C op h1)). Qed.
Lemma lem5827051 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : @monoidal C op.
Proof. exact (EQ_MP (@lem5827050 C op h1) (@lem0)). Qed.
Lemma lem5827052 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term207 A B C op g f) = (@neutral C op).
Proof. exact (@lem5827043 A B C g f op (@lem5827051 C op h1)). Qed.
Lemma lem5827065 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : ((term206 A B C op f g) = (term207 A B C op g f)) = ((@neutral C op) = (@neutral C op)).
Proof. exact (MK_COMB (@lem5827019 A B C f g op h1) (@lem5827052 A B C g f op h1)). Qed.
Lemma lem5827067 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem5827068 {C : Type'} (x : C) : (x = x) = True.
Proof. exact (@lem5827067 C x). Qed.
Lemma lem5827069 {C : Type'} (op : type1400 C) : ((@neutral C op) = (@neutral C op)) = True.
Proof. exact (@lem5827068 C (@neutral C op)). Qed.
Lemma lem5827074 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : ((term206 A B C op f g) = (term207 A B C op g f)) = True.
Proof. exact (TRANS (@lem5827065 A B C g f op h1) (@lem5827069 C op)). Qed.
Lemma lem5827075 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term219 A B C op g f.
Proof. exact (fun h0 : term205 A B f => @lem5827074 A B C g f op h1). Qed.
Lemma lem5827076 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term220 A B C op g f.
Proof. exact (@lem5826894 A B C op g f True). Qed.
Lemma lem5827077 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term149 A B C op g f) = (term221 A B f).
Proof. exact (@lem5827076 A B C op g f (@lem5827075 A B C g f op h1)). Qed.
Lemma lem5827079 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem5827080 {A B : Type'} (f : A -> B) : (term221 A B f) = True.
Proof. exact (@lem5827079 (term205 A B f)). Qed.
Lemma lem5827081 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term149 A B C op g f) = True.
Proof. exact (TRANS (@lem5827077 A B C g f op h1) (@lem5827080 A B f)). Qed.
Lemma lem5827082 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5827083 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term151 A B C op g f) = (and True).
Proof. exact (MK_COMB (@lem5827082) (@lem5827081 A B C g f op h1)). Qed.
Lemma lem5827095 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term201 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem5827096 (p : Prop) (q : Prop) (p' : Prop) : term202 p q p'.
Proof. exact (fun q' : Prop => @lem5827095 p q p' q'). Qed.
Lemma lem5827097 (p : Prop) (q : Prop) : term203 p q.
Proof. exact (fun p' : Prop => @lem5827096 p q p'). Qed.
Lemma lem5827098 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) : term222 A B C op x s g f.
Proof. exact (@lem5827097 (term157 A B C op g f x s) (term161 A B C op x s g f)). Qed.
Lemma lem5827099 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) : term223 A B C op x s g f p'.
Proof. exact (@lem5827098 A B C op x s g f p'). Qed.
Lemma lem5827100 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) : (term223 A B C op x s g f p') = (term224 A B C op x s g f p').
Proof. exact (eq_refl (term223 A B C op x s g f p')). Qed.
Lemma lem5827101 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) : term224 A B C op x s g f p'.
Proof. exact (EQ_MP (@lem5827100 A B C op x s g f p') (@lem5827099 A B C op x s g f p')). Qed.
Lemma lem5827102 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : term225 A B C op x s g f p' q'.
Proof. exact (@lem5827101 A B C op x s g f p' q'). Qed.
Lemma lem5827103 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : (term225 A B C op x s g f p' q') = (term226 A B C op x s g f p' q').
Proof. exact (eq_refl (term225 A B C op x s g f p' q')). Qed.
Lemma lem5827104 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : term226 A B C op x s g f p' q'.
Proof. exact (EQ_MP (@lem5827103 A B C op x s g f p' q') (@lem5827102 A B C op x s g f p' q')). Qed.
Lemma lem5827663 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term157 A B C op g f x s) = (term157 A B C op g f x s).
Proof. exact (eq_refl (term157 A B C op g f x s)). Qed.
Lemma lem5827664 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (q' : Prop) : term227 A B C op g f x s q'.
Proof. exact (@lem5827104 A B C op x s g f (term157 A B C op g f x s) q'). Qed.
Lemma lem5827665 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (q' : Prop) : term228 A B C op g f x s q'.
Proof. exact (@lem5827664 A B C op g f x s q' (@lem5827663 A B C op g f x s)). Qed.
Lemma lem5827666 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term157 A B C op g f x s.
Proof. exact (h1). Qed.
Lemma lem5827667 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term155 A x s.
Proof. exact (proj2 (@lem5827666 A B C op g f x s h1)). Qed.
Lemma lem5827668 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : @FINITE A s.
Proof. exact (proj2 (@lem5827667 A B C op g f x s h1)). Qed.
Lemma lem5827669 {A : Type'} (s : A -> Prop) : (@FINITE A s) = ((@FINITE A s) = True).
Proof. exact (@lem7 (@FINITE A s)). Qed.
Lemma lem5827671 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term229 A x s.
Proof. exact (proj1 (@lem5827667 A B C op g f x s h1)). Qed.
Lemma lem5827672 {A : Type'} (x : A) (s : A -> Prop) : term230 A x s.
Proof. exact (@lem82 (@IN A x s)). Qed.
Lemma lem5827685 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term201 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem5827686 (p : Prop) (q : Prop) (p' : Prop) : term202 p q p'.
Proof. exact (fun q' : Prop => @lem5827685 p q p' q'). Qed.
Lemma lem5827687 (p : Prop) (q : Prop) : term203 p q.
Proof. exact (fun p' : Prop => @lem5827686 p q p'). Qed.
Lemma lem5827688 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) : term231 A B C op x s g f.
Proof. exact (@lem5827687 (term232 A B x s f) ((term233 A B C op f x s g) = (term234 A B C op x s g f))). Qed.
Lemma lem5827689 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) : term235 A B C op x s g f p'.
Proof. exact (@lem5827688 A B C op x s g f p'). Qed.
Lemma lem5827690 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) : (term235 A B C op x s g f p') = (term236 A B C op x s g f p').
Proof. exact (eq_refl (term235 A B C op x s g f p')). Qed.
Lemma lem5827691 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) : term236 A B C op x s g f p'.
Proof. exact (EQ_MP (@lem5827690 A B C op x s g f p') (@lem5827689 A B C op x s g f p')). Qed.
Lemma lem5827692 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : term237 A B C op x s g f p' q'.
Proof. exact (@lem5827691 A B C op x s g f p' q'). Qed.
Lemma lem5827693 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : (term237 A B C op x s g f p' q') = (term238 A B C op x s g f p' q').
Proof. exact (eq_refl (term237 A B C op x s g f p' q')). Qed.
Lemma lem5827694 {A B C : Type'} (op : type1400 C) (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (p' : Prop) (q' : Prop) : term238 A B C op x s g f p' q'.
Proof. exact (EQ_MP (@lem5827693 A B C op x s g f p' q') (@lem5827692 A B C op x s g f p' q')). Qed.
Lemma lem5827896 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term232 A B x s f) = (term232 A B x s f).
Proof. exact (eq_refl (term232 A B x s f)). Qed.
Lemma lem5827897 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (s : A -> Prop) (f : A -> B) (q' : Prop) : term239 A B C op g x s f q'.
Proof. exact (@lem5827694 A B C op x s g f (term232 A B x s f) q'). Qed.
Lemma lem5827898 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (s : A -> Prop) (f : A -> B) (q' : Prop) : term240 A B C op g x s f q'.
Proof. exact (@lem5827897 A B C op g x s f q' (@lem5827896 A B x s f)). Qed.
Lemma lem5827962 {_87477 _87481 : Type'} (x : _87477) (f : _87477 -> _87481) (s : _87477 -> Prop) : (term241 _87477 _87481 f x s) = (term242 _87477 _87481 x f s).
Proof. exact (proj2 (@lem3366870 _87477 _87481 x f s)). Qed.
Lemma lem5827963 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term241 A B f x s) = (term242 A B x f s).
Proof. exact (@lem5827962 A B x f s). Qed.
Lemma lem5828008 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5828009 {A B C : Type'} (op : type1400 C) (x : A) (f : A -> B) (s : A -> Prop) : (term243 A B C op f x s) = (term244 A B C op x f s).
Proof. exact (MK_COMB (@lem5828008 B C op) (@lem5827963 A B x f s)). Qed.
Lemma lem5828074 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5828075 {A B C : Type'} (op : type1400 C) (x : A) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term233 A B C op f x s g) = (term245 A B C op x f s g).
Proof. exact (MK_COMB (@lem5828009 A B C op x f s) (@lem5828074 B C g)). Qed.
Lemma lem5828077 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (s : _120521 -> Prop) (f : _120521 -> _120519) : term198 _120519 _120521 x op s f.
Proof. exact (EQ_MP (@lem5826663 _120519 _120521 x op s f) (@lem5826656 _120519 _120521 x op s f)). Qed.
Lemma lem5828078 {B C : Type'} (x : B) (op : type1400 C) (s : B -> Prop) (f : B -> C) : term246 B C x op s f.
Proof. exact (@lem5828077 C B x op s f). Qed.
Lemma lem5828079 {A B C : Type'} (x : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : term247 A B C x op f s g.
Proof. exact (@lem5828078 B C (f x) op (@IMAGE A B f s) g). Qed.
Lemma lem5828095 {A B : Type'} (f : A -> B) (s : A -> Prop) : term248 A B f s.
Proof. exact (fun h0 : @FINITE A s => @lem5826630 A B f s h0). Qed.
Lemma lem5828096 {A B : Type'} (f : A -> B) (s : A -> Prop) : term248 A B f s.
Proof. exact (@lem5828095 A B f s). Qed.
Lemma lem5828098 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (@FINITE A s) = True.
Proof. exact (EQ_MP (@lem5827669 A s) (@lem5827668 A B C op g f x s h1)). Qed.
Lemma lem5828103 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : True = (@FINITE A s).
Proof. exact (SYM (@lem5828098 A B C op g f x s h1)). Qed.
Lemma lem5828104 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : @FINITE A s.
Proof. exact (EQ_MP (@lem5828103 A B C op g f x s h1) (@lem0)). Qed.
Lemma lem5828105 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (term13 A B f s) = True.
Proof. exact (@lem5828096 A B f s (@lem5828104 A B C op g f x s h1)). Qed.
Lemma lem5828110 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5828111 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (term249 A B f s) = (and True).
Proof. exact (MK_COMB (@lem5828110) (@lem5828105 A B C op g f x s h1)). Qed.
Lemma lem5828125 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : (@monoidal C op) = True.
Proof. exact (EQ_MP (@lem5826674 C op) (@lem5826509 C op h1)). Qed.
Lemma lem5828130 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term250 A B C f s op) = (True /\ True).
Proof. exact (MK_COMB (@lem5828111 A B C op g f x s h2) (@lem5828125 C op h1)). Qed.
Lemma lem5828132 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem5828133 : (True /\ True) = True.
Proof. exact (@lem5828132 True). Qed.
Lemma lem5828138 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term250 A B C f s op) = True.
Proof. exact (TRANS (@lem5828130 A B C op g f x s h1 h2) (@lem5828133)). Qed.
Lemma lem5828139 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : True = (term250 A B C f s op).
Proof. exact (SYM (@lem5828138 A B C op g f x s h1 h2)). Qed.
Lemma lem5828140 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : term250 A B C f s op.
Proof. exact (EQ_MP (@lem5828139 A B C op g f x s h1 h2) (@lem0)). Qed.
Lemma lem5828141 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term245 A B C op x f s g) = (term251 A B C x op f s g).
Proof. exact (@lem5828079 A B C x op f s g (@lem5828140 A B C op g f x s h1 h2)). Qed.
Lemma lem5833887 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term233 A B C op f x s g) = (term251 A B C x op f s g).
Proof. exact (TRANS (@lem5828075 A B C op x f s g) (@lem5828141 A B C op g f x s h1 h2)). Qed.
Lemma lem5833888 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5833889 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term252 A B C op f x s g) = (term253 A B C x op f s g).
Proof. exact (MK_COMB (@lem5833888 C) (@lem5833887 A B C op g f x s h1 h2)). Qed.
Lemma lem5839644 {_120519 _120521 : Type'} (x : _120521) (op : type1400 _120519) (s : _120521 -> Prop) (f : _120521 -> _120519) : term198 _120519 _120521 x op s f.
Proof. exact (EQ_MP (@lem5826663 _120519 _120521 x op s f) (@lem5826656 _120519 _120521 x op s f)). Qed.
Lemma lem5839645 {A C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (f : A -> C) : term246 A C x op s f.
Proof. exact (@lem5839644 C A x op s f). Qed.
Lemma lem5839646 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term254 A B C x op s g f.
Proof. exact (@lem5839645 A C x op s (@o A B C g f)). Qed.
Lemma lem5839662 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (@FINITE A s) = True.
Proof. exact (EQ_MP (@lem5827669 A s) (@lem5827668 A B C op g f x s h1)). Qed.
Lemma lem5839667 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5839668 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (term255 A s) = (and True).
Proof. exact (MK_COMB (@lem5839667) (@lem5839662 A B C op g f x s h1)). Qed.
Lemma lem5839682 {C : Type'} (op : type1400 C) (h1 : @monoidal C op) : (@monoidal C op) = True.
Proof. exact (EQ_MP (@lem5826674 C op) (@lem5826509 C op h1)). Qed.
Lemma lem5839687 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term256 A C s op) = (True /\ True).
Proof. exact (MK_COMB (@lem5839668 A B C op g f x s h2) (@lem5839682 C op h1)). Qed.
Lemma lem5839689 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem5839690 : (True /\ True) = True.
Proof. exact (@lem5839689 True). Qed.
Lemma lem5839695 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term256 A C s op) = True.
Proof. exact (TRANS (@lem5839687 A B C op g f x s h1 h2) (@lem5839690)). Qed.
Lemma lem5839696 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : True = (term256 A C s op).
Proof. exact (SYM (@lem5839695 A B C op g f x s h1 h2)). Qed.
Lemma lem5839697 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : term256 A C s op.
Proof. exact (EQ_MP (@lem5839696 A B C op g f x s h1 h2) (@lem0)). Qed.
Lemma lem5839698 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term234 A B C op x s g f) = (term257 A B C x op s g f).
Proof. exact (@lem5839646 A B C x op s g f (@lem5839697 A B C op g f x s h1 h2)). Qed.
Lemma lem5839704 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term258 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem5839705 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term259 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem5839704 _2963 g t e g' t' e'). Qed.
Lemma lem5839706 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term260 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem5839705 _2963 g t e g' t'). Qed.
Lemma lem5839707 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term261 _2963 g t e.
Proof. exact (fun g' : Prop => @lem5839706 _2963 g t e g'). Qed.
Lemma lem5839708 {C : Type'} (g : Prop) (t : C) (e : C) : term261 C g t e.
Proof. exact (@lem5839707 C g t e). Qed.
Lemma lem5839709 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term262 A B C x op s g f.
Proof. exact (@lem5839708 C (@IN A x s) (term122 A B C op s g f) (term263 A B C x op s g f)). Qed.
Lemma lem5839710 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) : term264 A B C x op s g f g'.
Proof. exact (@lem5839709 A B C x op s g f g'). Qed.
Lemma lem5839711 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) : (term264 A B C x op s g f g') = (term265 A B C x op s g f g').
Proof. exact (eq_refl (term264 A B C x op s g f g')). Qed.
Lemma lem5839712 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) : term265 A B C x op s g f g'.
Proof. exact (EQ_MP (@lem5839711 A B C x op s g f g') (@lem5839710 A B C x op s g f g')). Qed.
Lemma lem5839713 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) (t' : C) : term266 A B C x op s g f g' t'.
Proof. exact (@lem5839712 A B C x op s g f g' t'). Qed.
Lemma lem5839714 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) (t' : C) : (term266 A B C x op s g f g' t') = (term267 A B C x op s g f g' t').
Proof. exact (eq_refl (term266 A B C x op s g f g' t')). Qed.
Lemma lem5839715 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) (t' : C) : term267 A B C x op s g f g' t'.
Proof. exact (EQ_MP (@lem5839714 A B C x op s g f g' t') (@lem5839713 A B C x op s g f g' t')). Qed.
Lemma lem5839716 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) (t' : C) (e' : C) : term268 A B C x op s g f g' t' e'.
Proof. exact (@lem5839715 A B C x op s g f g' t' e'). Qed.
Lemma lem5839717 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) (t' : C) (e' : C) : (term268 A B C x op s g f g' t' e') = (term269 A B C x op s g f g' t' e').
Proof. exact (eq_refl (term268 A B C x op s g f g' t' e')). Qed.
Lemma lem5839718 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (g' : Prop) (t' : C) (e' : C) : term269 A B C x op s g f g' t' e'.
Proof. exact (EQ_MP (@lem5839717 A B C x op s g f g' t' e') (@lem5839716 A B C x op s g f g' t' e')). Qed.
Lemma lem5839720 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (@IN A x s) = False.
Proof. exact (@lem5827672 A x s (@lem5827671 A B C op g f x s h1)). Qed.
Lemma lem5839725 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (t' : C) (e' : C) : term270 A B C x op s g f t' e'.
Proof. exact (@lem5839718 A B C x op s g f False t' e'). Qed.
Lemma lem5839726 {A B C : Type'} (t' : C) (e' : C) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term271 A B C x op s g f t' e'.
Proof. exact (@lem5839725 A B C x op s g f t' e' (@lem5839720 A B C op g f x s h1)). Qed.
Lemma lem5839774 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term122 A B C op s g f).
Proof. exact (eq_refl (term122 A B C op s g f)). Qed.
Lemma lem5839775 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term272 A B C op s g f.
Proof. exact (fun h0 : False => @lem5839774 A B C op s g f). Qed.
Lemma lem5839776 {A B C : Type'} (e' : C) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term273 A B C x op s g f e'.
Proof. exact (@lem5839726 A B C (term122 A B C op s g f) e' op g f x s h1). Qed.
Lemma lem5839777 {A B C : Type'} (e' : C) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term274 A B C x op s g f e'.
Proof. exact (@lem5839776 A B C e' op g f x s h1 (@lem5839775 A B C op s g f)). Qed.
Lemma lem5839867 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term263 A B C x op s g f) = (term263 A B C x op s g f).
Proof. exact (eq_refl (term263 A B C x op s g f)). Qed.
Lemma lem5839868 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term275 A B C x op s g f.
Proof. exact (fun h0 : ~ False => @lem5839867 A B C x op s g f). Qed.
Lemma lem5839869 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : term276 A B C x op s g f.
Proof. exact (@lem5839777 A B C (term263 A B C x op s g f) op g f x s h1). Qed.
Lemma lem5839870 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (term257 A B C x op s g f) = (term277 A B C x op s g f).
Proof. exact (@lem5839869 A B C op g f x s h1 (@lem5839868 A B C x op s g f)). Qed.
Lemma lem5839872 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5839873 {C : Type'} (t1 : C) (t2 : C) : (@COND C False t1 t2) = t2.
Proof. exact (@lem5839872 C t1 t2). Qed.
Lemma lem5839874 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term277 A B C x op s g f) = (term263 A B C x op s g f).
Proof. exact (@lem5839873 C (term122 A B C op s g f) (term263 A B C x op s g f)). Qed.
Lemma lem5839959 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term157 A B C op g f x s) : (term257 A B C x op s g f) = (term263 A B C x op s g f).
Proof. exact (TRANS (@lem5839870 A B C op g f x s h1) (@lem5839874 A B C x op s g f)). Qed.
Lemma lem5839960 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term234 A B C op x s g f) = (term263 A B C x op s g f).
Proof. exact (TRANS (@lem5839698 A B C op g f x s h1 h2) (@lem5839959 A B C op g f x s h2)). Qed.
Lemma lem5839961 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : ((term233 A B C op f x s g) = (term234 A B C op x s g f)) = ((term251 A B C x op f s g) = (term263 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5833889 A B C op g f x s h1 h2) (@lem5839960 A B C op g f x s h1 h2)). Qed.
Lemma lem5845805 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : term278 A B C x op s g f.
Proof. exact (fun h0 : term232 A B x s f => @lem5839961 A B C op g f x s h1 h2). Qed.
Lemma lem5845806 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term279 A B C x op s g f.
Proof. exact (@lem5827898 A B C op g x s f ((term251 A B C x op f s g) = (term263 A B C x op s g f))). Qed.
Lemma lem5845807 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : @monoidal C op) (h2 : term157 A B C op g f x s) : (term161 A B C op x s g f) = (term280 A B C x op s g f).
Proof. exact (@lem5845806 A B C x op s g f (@lem5845805 A B C op g f x s h1 h2)). Qed.
Lemma lem5853456 {A B C : Type'} (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term281 A B C x op s g f.
Proof. exact (fun h0 : term157 A B C op g f x s => @lem5845807 A B C op g f x s h1 h0). Qed.
Lemma lem5853457 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term282 A B C x op s g f.
Proof. exact (@lem5827665 A B C op g f x s (term280 A B C x op s g f)). Qed.
Lemma lem5853458 {A B C : Type'} (x : A) (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term163 A B C op x s g f) = (term283 A B C x op s g f).
Proof. exact (@lem5853457 A B C x op s g f (@lem5853456 A B C x s g f op h1)). Qed.
Lemma lem5863219 {A B C : Type'} (x : A) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term165 A B C op x g f) = (term284 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5853458 A B C x s g f op h1)). Qed.
Lemma lem5872980 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5872981 {A B C : Type'} (x : A) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term167 A B C op x g f) = (term285 A B C x op g f).
Proof. exact (MK_COMB (@lem5872980 A) (@lem5863219 A B C x g f op h1)). Qed.
Lemma lem5882746 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term169 A B C op g f) = (term286 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5872981 A B C x g f op h1)). Qed.
Lemma lem5892511 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5892512 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term171 A B C op g f) = (term287 A B C op g f).
Proof. exact (MK_COMB (@lem5892511 A) (@lem5882746 A B C g f op h1)). Qed.
Lemma lem5902281 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term173 A B C op g f) = (term288 A B C op g f).
Proof. exact (MK_COMB (@lem5827083 A B C g f op h1) (@lem5892512 A B C g f op h1)). Qed.
Lemma lem5902283 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem5902284 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term288 A B C op g f) = (term287 A B C op g f).
Proof. exact (@lem5902283 (term287 A B C op g f)). Qed.
Lemma lem5912053 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term173 A B C op g f) = (term287 A B C op g f).
Proof. exact (TRANS (@lem5902281 A B C g f op h1) (@lem5902284 A B C op g f)). Qed.
Lemma lem5912054 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term287 A B C op g f) = (term173 A B C op g f).
Proof. exact (SYM (@lem5912053 A B C g f op h1)). Qed.
Lemma lem5912106 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term101 A x y s) = (term102 A y x s).
Proof. exact (EQ_MP (@lem5826482 A y x s) (@lem5826481 A y x s)). Qed.
Lemma lem5912107 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term101 A x y s) = (term102 A y x s).
Proof. exact (@lem5912106 A y x s). Qed.
Lemma lem5912108 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term101 A x' x s) = (term102 A x x' s).
Proof. exact (@lem5912107 A x x' s). Qed.
Lemma lem5912113 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912114 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term289 A x' x s) = (term290 A x x' s).
Proof. exact (MK_COMB (@lem5912113) (@lem5912108 A x x' s)). Qed.
Lemma lem5912118 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term101 A x y s) = (term102 A y x s).
Proof. exact (EQ_MP (@lem5826482 A y x s) (@lem5826481 A y x s)). Qed.
Lemma lem5912119 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term101 A x y s) = (term102 A y x s).
Proof. exact (@lem5912118 A y x s). Qed.
Lemma lem5912120 {A : Type'} (x : A) (y : A) (s : A -> Prop) : (term101 A y x s) = (term102 A x y s).
Proof. exact (@lem5912119 A x y s). Qed.
Lemma lem5912125 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912126 {A : Type'} (x : A) (y : A) (s : A -> Prop) : (term289 A y x s) = (term290 A x y s).
Proof. exact (MK_COMB (@lem5912125) (@lem5912120 A x y s)). Qed.
Lemma lem5912135 {A B : Type'} (f : A -> B) (x' : A) (y : A) : (term291 A B f x' y) = (term291 A B f x' y).
Proof. exact (eq_refl (term291 A B f x' y)). Qed.
Lemma lem5912136 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term292 A B x s f x' y) = (term293 A B x s f x' y).
Proof. exact (MK_COMB (@lem5912126 A x y s) (@lem5912135 A B f x' y)). Qed.
Lemma lem5912139 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term294 A B x s f x' y) = (term295 A B x s f x' y).
Proof. exact (MK_COMB (@lem5912114 A x x' s) (@lem5912136 A B x s f x' y)). Qed.
Lemma lem5912142 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term296 A B x s f x') = (term297 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5912139 A B x s f x' y)). Qed.
Lemma lem5912143 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912144 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term298 A B x s f x') = (term299 A B x s f x').
Proof. exact (MK_COMB (@lem5912143 A) (@lem5912142 A B x s f x')). Qed.
Lemma lem5912149 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term300 A B x s f) = (term301 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5912144 A B x s f x')). Qed.
Lemma lem5912150 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912151 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term232 A B x s f) = (term302 A B x s f).
Proof. exact (MK_COMB (@lem5912150 A) (@lem5912149 A B x s f)). Qed.
Lemma lem5912156 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912157 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term303 A B x s f) = (term304 A B x s f).
Proof. exact (MK_COMB (@lem5912156) (@lem5912151 A B x s f)). Qed.
Lemma lem5912161 {A B C : Type'} (f : B -> C) (g : A -> B) (x : A) : (@o A B C f g x) = (term108 A B C f g x).
Proof. exact (EQ_MP (@lem5826491 A B C f g x) (@lem5826490 A B C f g x)). Qed.
Lemma lem5912162 {A B C : Type'} (f : B -> C) (g : A -> B) (x : A) : (@o A B C f g x) = (term108 A B C f g x).
Proof. exact (@lem5912161 A B C f g x). Qed.
Lemma lem5912163 {A B C : Type'} (g : B -> C) (f : A -> B) (x : A) : (@o A B C g f x) = (term108 A B C g f x).
Proof. exact (@lem5912162 A B C g f x). Qed.
Lemma lem5912164 {C : Type'} (op : type1400 C) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5912165 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) : (term305 A B C op g f x) = (term306 A B C op g f x).
Proof. exact (MK_COMB (@lem5912164 C op) (@lem5912163 A B C g f x)). Qed.
Lemma lem5912166 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term122 A B C op s g f).
Proof. exact (eq_refl (term122 A B C op s g f)). Qed.
Lemma lem5912167 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term263 A B C x op s g f) = (term307 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912165 A B C op g f x) (@lem5912166 A B C op s g f)). Qed.
Lemma lem5912168 {A B C : Type'} (x : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term253 A B C x op f s g) = (term253 A B C x op f s g).
Proof. exact (eq_refl (term253 A B C x op f s g)). Qed.
Lemma lem5912169 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term251 A B C x op f s g) = (term263 A B C x op s g f)) = ((term251 A B C x op f s g) = (term307 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5912168 A B C x op f s g) (@lem5912167 A B C x op s g f)). Qed.
Lemma lem5912172 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term280 A B C x op s g f) = (term308 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912157 A B x s f) (@lem5912169 A B C x op s g f)). Qed.
Lemma lem5912175 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term159 A B C op g f x s) = (term159 A B C op g f x s).
Proof. exact (eq_refl (term159 A B C op g f x s)). Qed.
Lemma lem5912176 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term283 A B C x op s g f) = (term309 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912175 A B C op g f x s) (@lem5912172 A B C x op s g f)). Qed.
Lemma lem5912179 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term284 A B C x op g f) = (term310 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5912176 A B C x op s g f)). Qed.
Lemma lem5912180 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5912181 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term285 A B C x op g f) = (term311 A B C x op g f).
Proof. exact (MK_COMB (@lem5912180 A) (@lem5912179 A B C x op g f)). Qed.
Lemma lem5912186 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term286 A B C op g f) = (term312 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5912181 A B C x op g f)). Qed.
Lemma lem5912187 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912188 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term287 A B C op g f) = (term313 A B C op g f).
Proof. exact (MK_COMB (@lem5912187 A) (@lem5912186 A B C op g f)). Qed.
Lemma lem5912193 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term313 A B C op g f) = (term287 A B C op g f).
Proof. exact (SYM (@lem5912188 A B C op g f)). Qed.
Lemma lem5912195 (p : Prop) : p = (term314 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem5912196 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term313 A B C op g f) = (term315 A B C op g f).
Proof. exact (@lem5912195 (term313 A B C op g f)). Qed.
Lemma lem5912197 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term315 A B C op g f) = (term313 A B C op g f).
Proof. exact (SYM (@lem5912196 A B C op g f)). Qed.
Lemma lem5912198 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term316 A B C op g f) : term316 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5912199 {A : Type'} : term317 A.
Proof. exact (@lem3206070 A A). Qed.
Lemma lem5912200 {A B : Type'} : term318 A B.
Proof. exact (@lem3206070 A B). Qed.
Lemma lem5912204 {A C : Type'} : term318 A C.
Proof. exact (@lem3206070 A C). Qed.
Lemma lem5912206 {B : Type'} : term317 B.
Proof. exact (@lem3206070 B B). Qed.
Lemma lem5912209 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term319 A B C op g f) : term319 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5912210 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term320 A B C op g f.
Proof. exact (fun h0 : term319 A B C op g f => @lem5912209 A B C op g f h0). Qed.
Lemma lem5912211 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term320 A B C op g f) : term320 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5912212 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term319 A B C op g f) : term319 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5912213 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term319 A B C op g f) (h2 : term320 A B C op g f) : term319 A B C op g f.
Proof. exact (@lem5912211 A B C op g f h2 (@lem5912212 A B C op g f h1)). Qed.
Lemma lem5912214 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term319 A B C op g f) : term321 A B C op g f.
Proof. exact (fun h0 : term320 A B C op g f => @lem5912213 A B C op g f h1 h0). Qed.
Lemma lem5912215 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term320 A B C op g f) : term320 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5912216 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term319 A B C op g f) (h2 : term320 A B C op g f) : term319 A B C op g f.
Proof. exact (@lem5912214 A B C op g f h1 (@lem5912215 A B C op g f h2)). Qed.
Lemma lem5912217 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term320 A B C op g f) : term320 A B C op g f.
Proof. exact (fun h0 : term319 A B C op g f => @lem5912216 A B C op g f h0 h1). Qed.
Lemma lem5912218 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term322 A B C op g f.
Proof. exact (fun h0 : term320 A B C op g f => @lem5912217 A B C op g f h0). Qed.
Lemma lem5912221 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term320 A B C op g f.
Proof. exact (@lem5912218 A B C op g f (@lem5912210 A B C op g f)). Qed.
Lemma lem5912222 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term320 A B C op g f.
Proof. exact (@lem5912221 A B C op g f). Qed.
Lemma lem5912482 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem5912483 {A C : Type'} : (term323 A C) = (term324 A C).
Proof. exact (@lem5912482 (term318 A C)). Qed.
Lemma lem5912546 {B : Type'} : (term325 B) = (term325 B).
Proof. exact (eq_refl (term325 B)). Qed.
Lemma lem5912547 {A B C : Type'} : (term326 A B C) = (term327 A B C).
Proof. exact (MK_COMB (@lem5912546 B) (@lem5912483 A C)). Qed.
Lemma lem5912550 {A B : Type'} : (term328 A B) = (term328 A B).
Proof. exact (eq_refl (term328 A B)). Qed.
Lemma lem5912551 {A B C : Type'} : (term329 A B C) = (term330 A B C).
Proof. exact (MK_COMB (@lem5912550 A B) (@lem5912547 A B C)). Qed.
Lemma lem5912554 {A : Type'} : (term325 A) = (term325 A).
Proof. exact (eq_refl (term325 A)). Qed.
Lemma lem5912555 {A B C : Type'} : (term331 A B C) = (term332 A B C).
Proof. exact (MK_COMB (@lem5912554 A) (@lem5912551 A B C)). Qed.
Lemma lem5912558 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term333 A B C op g f) = (term333 A B C op g f).
Proof. exact (eq_refl (term333 A B C op g f)). Qed.
Lemma lem5912559 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term334 A B C op g f) = (term335 A B C op g f).
Proof. exact (MK_COMB (@lem5912558 A B C op g f) (@lem5912555 A B C)). Qed.
Lemma lem5912562 {C : Type'} (op : type1400 C) : (term336 C op) = (term336 C op).
Proof. exact (eq_refl (term336 C op)). Qed.
Lemma lem5912563 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term319 A B C op g f) = (term337 A B C op g f).
Proof. exact (MK_COMB (@lem5912562 C op) (@lem5912559 A B C op g f)). Qed.
Lemma lem5912566 {A B C : Type'} (g : B -> C) (f : A -> B) : (term338 A B C g f) = (term339 A B C g f).
Proof. exact (fun_ext (fun op : type1400 C => @lem5912563 A B C op g f)). Qed.
Lemma lem5912567 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5912568 {A B C : Type'} (g : B -> C) (f : A -> B) : (term340 A B C g f) = (term341 A B C g f).
Proof. exact (MK_COMB (@lem5912567 C) (@lem5912566 A B C g f)). Qed.
Lemma lem5912573 {A B C : Type'} (f : A -> B) : (term342 A B C f) = (term343 A B C f).
Proof. exact (fun_ext (fun g : B -> C => @lem5912568 A B C g f)). Qed.
Lemma lem5912574 {B C : Type'} : (@all (B -> C)) = (@all (B -> C)).
Proof. exact (eq_refl (@all (B -> C))). Qed.
Lemma lem5912575 {A B C : Type'} (f : A -> B) : (term344 A B C f) = (term345 A B C f).
Proof. exact (MK_COMB (@lem5912574 B C) (@lem5912573 A B C f)). Qed.
Lemma lem5912580 {A B C : Type'} : (term346 A B C) = (term347 A B C).
Proof. exact (fun_ext (fun f : A -> B => @lem5912575 A B C f)). Qed.
Lemma lem5912581 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5912590 {A B C : Type'} : (term348 A B C) = (term349 A B C).
Proof. exact (MK_COMB (@lem5912581 A B) (@lem5912580 A B C)). Qed.
Lemma lem5912595 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term350 A C y f x s) = (term350 A C y f x s).
Proof. exact (eq_refl (term350 A C y f x s)). Qed.
Lemma lem5912596 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term351 A C y f s) = (term351 A C y f s).
Proof. exact (fun_ext (fun x : A => @lem5912595 A C y f x s)). Qed.
Lemma lem5912597 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5912598 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term352 A C y f s) = (term352 A C y f s).
Proof. exact (MK_COMB (@lem5912597 A) (@lem5912596 A C y f s)). Qed.
Lemma lem5912601 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term353 A C y f s) = (term353 A C y f s).
Proof. exact (eq_refl (term353 A C y f s)). Qed.
Lemma lem5912602 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : ((term354 A C y f s) = (term352 A C y f s)) = ((term354 A C y f s) = (term352 A C y f s)).
Proof. exact (MK_COMB (@lem5912601 A C y f s) (@lem5912598 A C y f s)). Qed.
Lemma lem5912603 {A C : Type'} (y : C) (s : A -> Prop) : (term355 A C y s) = (term355 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5912602 A C y f s)). Qed.
Lemma lem5912604 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5912605 {A C : Type'} (y : C) (s : A -> Prop) : (term356 A C y s) = (term356 A C y s).
Proof. exact (MK_COMB (@lem5912604 A C) (@lem5912603 A C y s)). Qed.
Lemma lem5912606 {A C : Type'} (y : C) : (term357 A C y) = (term357 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5912605 A C y s)). Qed.
Lemma lem5912607 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5912608 {A C : Type'} (y : C) : (term358 A C y) = (term358 A C y).
Proof. exact (MK_COMB (@lem5912607 A) (@lem5912606 A C y)). Qed.
Lemma lem5912609 {A C : Type'} : (term359 A C) = (term359 A C).
Proof. exact (fun_ext (fun y : C => @lem5912608 A C y)). Qed.
Lemma lem5912610 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5912611 {A C : Type'} : (term318 A C) = (term318 A C).
Proof. exact (MK_COMB (@lem5912610 C) (@lem5912609 A C)). Qed.
Lemma lem5912612 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5912613 {A C : Type'} : (term324 A C) = (term324 A C).
Proof. exact (MK_COMB (@lem5912612) (@lem5912611 A C)). Qed.
Lemma lem5912618 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term360 B y f x s) = (term360 B y f x s).
Proof. exact (eq_refl (term360 B y f x s)). Qed.
Lemma lem5912619 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term361 B y f s) = (term361 B y f s).
Proof. exact (fun_ext (fun x : B => @lem5912618 B y f x s)). Qed.
Lemma lem5912620 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5912621 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term362 B y f s) = (term362 B y f s).
Proof. exact (MK_COMB (@lem5912620 B) (@lem5912619 B y f s)). Qed.
Lemma lem5912624 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term363 B y f s) = (term363 B y f s).
Proof. exact (eq_refl (term363 B y f s)). Qed.
Lemma lem5912625 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term364 B y f s) = (term362 B y f s)) = ((term364 B y f s) = (term362 B y f s)).
Proof. exact (MK_COMB (@lem5912624 B y f s) (@lem5912621 B y f s)). Qed.
Lemma lem5912626 {B : Type'} (y : B) (s : B -> Prop) : (term365 B y s) = (term365 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5912625 B y f s)). Qed.
Lemma lem5912627 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5912628 {B : Type'} (y : B) (s : B -> Prop) : (term366 B y s) = (term366 B y s).
Proof. exact (MK_COMB (@lem5912627 B) (@lem5912626 B y s)). Qed.
Lemma lem5912629 {B : Type'} (y : B) : (term367 B y) = (term367 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5912628 B y s)). Qed.
Lemma lem5912630 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5912631 {B : Type'} (y : B) : (term368 B y) = (term368 B y).
Proof. exact (MK_COMB (@lem5912630 B) (@lem5912629 B y)). Qed.
Lemma lem5912632 {B : Type'} : (term369 B) = (term369 B).
Proof. exact (fun_ext (fun y : B => @lem5912631 B y)). Qed.
Lemma lem5912633 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5912634 {B : Type'} : (term317 B) = (term317 B).
Proof. exact (MK_COMB (@lem5912633 B) (@lem5912632 B)). Qed.
Lemma lem5912635 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912636 {B : Type'} : (term325 B) = (term325 B).
Proof. exact (MK_COMB (@lem5912635) (@lem5912634 B)). Qed.
Lemma lem5912637 {A B C : Type'} : (term327 A B C) = (term327 A B C).
Proof. exact (MK_COMB (@lem5912636 B) (@lem5912613 A C)). Qed.
Lemma lem5912642 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term350 A B y f x s) = (term350 A B y f x s).
Proof. exact (eq_refl (term350 A B y f x s)). Qed.
Lemma lem5912643 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term351 A B y f s) = (term351 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5912642 A B y f x s)). Qed.
Lemma lem5912644 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5912645 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term352 A B y f s) = (term352 A B y f s).
Proof. exact (MK_COMB (@lem5912644 A) (@lem5912643 A B y f s)). Qed.
Lemma lem5912648 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term353 A B y f s) = (term353 A B y f s).
Proof. exact (eq_refl (term353 A B y f s)). Qed.
Lemma lem5912649 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term354 A B y f s) = (term352 A B y f s)) = ((term354 A B y f s) = (term352 A B y f s)).
Proof. exact (MK_COMB (@lem5912648 A B y f s) (@lem5912645 A B y f s)). Qed.
Lemma lem5912650 {A B : Type'} (y : B) (s : A -> Prop) : (term355 A B y s) = (term355 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5912649 A B y f s)). Qed.
Lemma lem5912651 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5912652 {A B : Type'} (y : B) (s : A -> Prop) : (term356 A B y s) = (term356 A B y s).
Proof. exact (MK_COMB (@lem5912651 A B) (@lem5912650 A B y s)). Qed.
Lemma lem5912653 {A B : Type'} (y : B) : (term357 A B y) = (term357 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5912652 A B y s)). Qed.
Lemma lem5912654 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5912655 {A B : Type'} (y : B) : (term358 A B y) = (term358 A B y).
Proof. exact (MK_COMB (@lem5912654 A) (@lem5912653 A B y)). Qed.
Lemma lem5912656 {A B : Type'} : (term359 A B) = (term359 A B).
Proof. exact (fun_ext (fun y : B => @lem5912655 A B y)). Qed.
Lemma lem5912657 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5912658 {A B : Type'} : (term318 A B) = (term318 A B).
Proof. exact (MK_COMB (@lem5912657 B) (@lem5912656 A B)). Qed.
Lemma lem5912659 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912660 {A B : Type'} : (term328 A B) = (term328 A B).
Proof. exact (MK_COMB (@lem5912659) (@lem5912658 A B)). Qed.
Lemma lem5912661 {A B C : Type'} : (term330 A B C) = (term330 A B C).
Proof. exact (MK_COMB (@lem5912660 A B) (@lem5912637 A B C)). Qed.
Lemma lem5912666 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term360 A y f x s) = (term360 A y f x s).
Proof. exact (eq_refl (term360 A y f x s)). Qed.
Lemma lem5912667 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term361 A y f s) = (term361 A y f s).
Proof. exact (fun_ext (fun x : A => @lem5912666 A y f x s)). Qed.
Lemma lem5912668 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5912669 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term362 A y f s) = (term362 A y f s).
Proof. exact (MK_COMB (@lem5912668 A) (@lem5912667 A y f s)). Qed.
Lemma lem5912672 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term363 A y f s) = (term363 A y f s).
Proof. exact (eq_refl (term363 A y f s)). Qed.
Lemma lem5912673 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term364 A y f s) = (term362 A y f s)) = ((term364 A y f s) = (term362 A y f s)).
Proof. exact (MK_COMB (@lem5912672 A y f s) (@lem5912669 A y f s)). Qed.
Lemma lem5912674 {A : Type'} (y : A) (s : A -> Prop) : (term365 A y s) = (term365 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5912673 A y f s)). Qed.
Lemma lem5912675 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5912676 {A : Type'} (y : A) (s : A -> Prop) : (term366 A y s) = (term366 A y s).
Proof. exact (MK_COMB (@lem5912675 A) (@lem5912674 A y s)). Qed.
Lemma lem5912677 {A : Type'} (y : A) : (term367 A y) = (term367 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5912676 A y s)). Qed.
Lemma lem5912678 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5912679 {A : Type'} (y : A) : (term368 A y) = (term368 A y).
Proof. exact (MK_COMB (@lem5912678 A) (@lem5912677 A y)). Qed.
Lemma lem5912680 {A : Type'} : (term369 A) = (term369 A).
Proof. exact (fun_ext (fun y : A => @lem5912679 A y)). Qed.
Lemma lem5912681 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912682 {A : Type'} : (term317 A) = (term317 A).
Proof. exact (MK_COMB (@lem5912681 A) (@lem5912680 A)). Qed.
Lemma lem5912683 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912684 {A : Type'} : (term325 A) = (term325 A).
Proof. exact (MK_COMB (@lem5912683) (@lem5912682 A)). Qed.
Lemma lem5912685 {A B C : Type'} : (term332 A B C) = (term332 A B C).
Proof. exact (MK_COMB (@lem5912684 A) (@lem5912661 A B C)). Qed.
Lemma lem5912745 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term370 A B x f s) = False.
Proof. exact (h1). Qed.
Lemma lem5912746 {C : Type'} : (@COND C) = (@COND C).
Proof. exact (eq_refl (@COND C)). Qed.
Lemma lem5912747 {A B C : Type'} (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term371 A B C x f s) = (@COND C False).
Proof. exact (MK_COMB (@lem5912746 C) (@lem5912745 A B x f s h1)). Qed.
Lemma lem5912748 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term121 A B C op f s g).
Proof. exact (eq_refl (term121 A B C op f s g)). Qed.
Lemma lem5912749 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term372 A B C x op f s g) = (term373 A B C op f s g).
Proof. exact (MK_COMB (@lem5912747 A B C x f s h1) (@lem5912748 A B C op f s g)). Qed.
Lemma lem5912750 {A B C : Type'} (x : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term374 A B C x op f s g) = (term374 A B C x op f s g).
Proof. exact (eq_refl (term374 A B C x op f s g)). Qed.
Lemma lem5912751 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term251 A B C x op f s g) = (term375 A B C x op f s g).
Proof. exact (MK_COMB (@lem5912749 A B C op g x f s h1) (@lem5912750 A B C x op f s g)). Qed.
Lemma lem5912753 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5912754 {C : Type'} (t1 : C) (t2 : C) : (@COND C False t1 t2) = t2.
Proof. exact (@lem5912753 C t1 t2). Qed.
Lemma lem5912755 {A B C : Type'} (x : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term375 A B C x op f s g) = (term374 A B C x op f s g).
Proof. exact (@lem5912754 C (term121 A B C op f s g) (term374 A B C x op f s g)). Qed.
Lemma lem5912756 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term251 A B C x op f s g) = (term374 A B C x op f s g).
Proof. exact (TRANS (@lem5912751 A B C op g x f s h1) (@lem5912755 A B C x op f s g)). Qed.
Lemma lem5912757 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5912758 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term253 A B C x op f s g) = (term376 A B C x op f s g).
Proof. exact (MK_COMB (@lem5912757 C) (@lem5912756 A B C op g x f s h1)). Qed.
Lemma lem5912759 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term307 A B C x op s g f) = (term307 A B C x op s g f).
Proof. exact (eq_refl (term307 A B C x op s g f)). Qed.
Lemma lem5912760 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : ((term251 A B C x op f s g) = (term307 A B C x op s g f)) = ((term374 A B C x op f s g) = (term307 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5912758 A B C op g x f s h1) (@lem5912759 A B C x op s g f)). Qed.
Lemma lem5912763 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term304 A B x s f) = (term304 A B x s f).
Proof. exact (eq_refl (term304 A B x s f)). Qed.
Lemma lem5912764 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term308 A B C x op s g f) = (term377 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912763 A B x s f) (@lem5912760 A B C op g x f s h1)). Qed.
Lemma lem5912767 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term159 A B C op g f x s) = (term159 A B C op g f x s).
Proof. exact (eq_refl (term159 A B C op g f x s)). Qed.
Lemma lem5912768 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = False) : (term309 A B C x op s g f) = (term378 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912767 A B C op g f x s) (@lem5912764 A B C op g x f s h1)). Qed.
Lemma lem5912771 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term379 A B C x op s g f.
Proof. exact (fun h0 : (term370 A B x f s) = False => @lem5912768 A B C op g x f s h0). Qed.
Lemma lem5912829 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term370 A B x f s) = True.
Proof. exact (h1). Qed.
Lemma lem5912830 {C : Type'} : (@COND C) = (@COND C).
Proof. exact (eq_refl (@COND C)). Qed.
Lemma lem5912831 {A B C : Type'} (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term371 A B C x f s) = (@COND C True).
Proof. exact (MK_COMB (@lem5912830 C) (@lem5912829 A B x f s h1)). Qed.
Lemma lem5912832 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term121 A B C op f s g).
Proof. exact (eq_refl (term121 A B C op f s g)). Qed.
Lemma lem5912833 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term372 A B C x op f s g) = (term380 A B C op f s g).
Proof. exact (MK_COMB (@lem5912831 A B C x f s h1) (@lem5912832 A B C op f s g)). Qed.
Lemma lem5912834 {A B C : Type'} (x : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term374 A B C x op f s g) = (term374 A B C x op f s g).
Proof. exact (eq_refl (term374 A B C x op f s g)). Qed.
Lemma lem5912835 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term251 A B C x op f s g) = (term381 A B C x op f s g).
Proof. exact (MK_COMB (@lem5912833 A B C op g x f s h1) (@lem5912834 A B C x op f s g)). Qed.
Lemma lem5912837 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5912838 {C : Type'} (t2 : C) (t1 : C) : (@COND C True t1 t2) = t1.
Proof. exact (@lem5912837 C t2 t1). Qed.
Lemma lem5912839 {A B C : Type'} (x : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term381 A B C x op f s g) = (term121 A B C op f s g).
Proof. exact (@lem5912838 C (term374 A B C x op f s g) (term121 A B C op f s g)). Qed.
Lemma lem5912840 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term251 A B C x op f s g) = (term121 A B C op f s g).
Proof. exact (TRANS (@lem5912835 A B C op g x f s h1) (@lem5912839 A B C x op f s g)). Qed.
Lemma lem5912841 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5912842 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term253 A B C x op f s g) = (term382 A B C op f s g).
Proof. exact (MK_COMB (@lem5912841 C) (@lem5912840 A B C op g x f s h1)). Qed.
Lemma lem5912843 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term307 A B C x op s g f) = (term307 A B C x op s g f).
Proof. exact (eq_refl (term307 A B C x op s g f)). Qed.
Lemma lem5912844 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : ((term251 A B C x op f s g) = (term307 A B C x op s g f)) = ((term121 A B C op f s g) = (term307 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5912842 A B C op g x f s h1) (@lem5912843 A B C x op s g f)). Qed.
Lemma lem5912847 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term304 A B x s f) = (term304 A B x s f).
Proof. exact (eq_refl (term304 A B x s f)). Qed.
Lemma lem5912848 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term308 A B C x op s g f) = (term383 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912847 A B x s f) (@lem5912844 A B C op g x f s h1)). Qed.
Lemma lem5912851 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term159 A B C op g f x s) = (term159 A B C op g f x s).
Proof. exact (eq_refl (term159 A B C op g f x s)). Qed.
Lemma lem5912852 {A B C : Type'} (op : type1400 C) (g : B -> C) (x : A) (f : A -> B) (s : A -> Prop) (h1 : (term370 A B x f s) = True) : (term309 A B C x op s g f) = (term384 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912851 A B C op g f x s) (@lem5912848 A B C op g x f s h1)). Qed.
Lemma lem5912855 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term385 A B C x op s g f.
Proof. exact (fun h0 : (term370 A B x f s) = True => @lem5912852 A B C op g x f s h0). Qed.
Lemma lem5912856 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term386 A B C x op s g f.
Proof. exact (conj (@lem5912771 A B C x op s g f) (@lem5912855 A B C x op s g f)). Qed.
Lemma lem5912858 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term387 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem5912859 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term388 A B C x op s g f.
Proof. exact (@lem5912858 (term309 A B C x op s g f) (term384 A B C x op s g f) (term370 A B x f s) (term378 A B C x op s g f)). Qed.
Lemma lem5912874 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term309 A B C x op s g f) = (term389 A B C x op s g f).
Proof. exact (@lem5912859 A B C x op s g f (@lem5912856 A B C x op s g f)). Qed.
Lemma lem5912875 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term374 A B C x op f s g) = (term307 A B C x op s g f)) = ((term374 A B C x op f s g) = (term307 A B C x op s g f)).
Proof. exact (eq_refl ((term374 A B C x op f s g) = (term307 A B C x op s g f))). Qed.
Lemma lem5912896 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term295 A B x s f x' y) = (term295 A B x s f x' y).
Proof. exact (eq_refl (term295 A B x s f x' y)). Qed.
Lemma lem5912897 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term297 A B x s f x') = (term297 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5912896 A B x s f x' y)). Qed.
Lemma lem5912898 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912899 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term299 A B x s f x') = (term299 A B x s f x').
Proof. exact (MK_COMB (@lem5912898 A) (@lem5912897 A B x s f x')). Qed.
Lemma lem5912900 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term301 A B x s f) = (term301 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5912899 A B x s f x')). Qed.
Lemma lem5912901 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912902 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term302 A B x s f) = (term302 A B x s f).
Proof. exact (MK_COMB (@lem5912901 A) (@lem5912900 A B x s f)). Qed.
Lemma lem5912903 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912904 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term304 A B x s f) = (term304 A B x s f).
Proof. exact (MK_COMB (@lem5912903) (@lem5912902 A B x s f)). Qed.
Lemma lem5912905 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term377 A B C x op s g f) = (term377 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912904 A B x s f) (@lem5912875 A B C x op s g f)). Qed.
Lemma lem5912912 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5912913 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5912926 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term129 A B s f x y) = (term129 A B s f x y).
Proof. exact (eq_refl (term129 A B s f x y)). Qed.
Lemma lem5912927 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term131 A B s f x) = (term131 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5912926 A B s f x y)). Qed.
Lemma lem5912928 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912929 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term133 A B s f x) = (term133 A B s f x).
Proof. exact (MK_COMB (@lem5912928 A) (@lem5912927 A B s f x)). Qed.
Lemma lem5912930 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term135 A B s f) = (term135 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5912929 A B s f x)). Qed.
Lemma lem5912931 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912932 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term136 A B s f) = (term136 A B s f).
Proof. exact (MK_COMB (@lem5912931 A) (@lem5912930 A B s f)). Qed.
Lemma lem5912933 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912934 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term138 A B s f) = (term138 A B s f).
Proof. exact (MK_COMB (@lem5912933) (@lem5912932 A B s f)). Qed.
Lemma lem5912935 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term140 A B C op s g f) = (term140 A B C op s g f).
Proof. exact (MK_COMB (@lem5912934 A B s f) (@lem5912913 A B C op s g f)). Qed.
Lemma lem5912936 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5912937 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term154 A B C op s g f) = (term154 A B C op s g f).
Proof. exact (MK_COMB (@lem5912936) (@lem5912935 A B C op s g f)). Qed.
Lemma lem5912938 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term157 A B C op g f x s) = (term157 A B C op g f x s).
Proof. exact (MK_COMB (@lem5912937 A B C op s g f) (@lem5912912 A x s)). Qed.
Lemma lem5912939 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912940 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term159 A B C op g f x s) = (term159 A B C op g f x s).
Proof. exact (MK_COMB (@lem5912939) (@lem5912938 A B C op g f x s)). Qed.
Lemma lem5912941 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term378 A B C x op s g f) = (term378 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912940 A B C op g f x s) (@lem5912905 A B C x op s g f)). Qed.
Lemma lem5912944 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term390 A B x f s) = (term390 A B x f s).
Proof. exact (eq_refl (term390 A B x f s)). Qed.
Lemma lem5912945 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term391 A B C x op s g f) = (term391 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912944 A B x f s) (@lem5912941 A B C x op s g f)). Qed.
Lemma lem5912946 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term307 A B C x op s g f)) = ((term121 A B C op f s g) = (term307 A B C x op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term307 A B C x op s g f))). Qed.
Lemma lem5912967 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term295 A B x s f x' y) = (term295 A B x s f x' y).
Proof. exact (eq_refl (term295 A B x s f x' y)). Qed.
Lemma lem5912968 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term297 A B x s f x') = (term297 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5912967 A B x s f x' y)). Qed.
Lemma lem5912969 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912970 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term299 A B x s f x') = (term299 A B x s f x').
Proof. exact (MK_COMB (@lem5912969 A) (@lem5912968 A B x s f x')). Qed.
Lemma lem5912971 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term301 A B x s f) = (term301 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5912970 A B x s f x')). Qed.
Lemma lem5912972 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5912973 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term302 A B x s f) = (term302 A B x s f).
Proof. exact (MK_COMB (@lem5912972 A) (@lem5912971 A B x s f)). Qed.
Lemma lem5912974 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5912975 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term304 A B x s f) = (term304 A B x s f).
Proof. exact (MK_COMB (@lem5912974) (@lem5912973 A B x s f)). Qed.
Lemma lem5912976 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term383 A B C x op s g f) = (term383 A B C x op s g f).
Proof. exact (MK_COMB (@lem5912975 A B x s f) (@lem5912946 A B C x op s g f)). Qed.
Lemma lem5912983 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5912984 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5912997 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term129 A B s f x y) = (term129 A B s f x y).
Proof. exact (eq_refl (term129 A B s f x y)). Qed.
Lemma lem5912998 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term131 A B s f x) = (term131 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5912997 A B s f x y)). Qed.
Lemma lem5912999 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913000 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term133 A B s f x) = (term133 A B s f x).
Proof. exact (MK_COMB (@lem5912999 A) (@lem5912998 A B s f x)). Qed.
Lemma lem5913001 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term135 A B s f) = (term135 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5913000 A B s f x)). Qed.
Lemma lem5913002 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913003 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term136 A B s f) = (term136 A B s f).
Proof. exact (MK_COMB (@lem5913002 A) (@lem5913001 A B s f)). Qed.
Lemma lem5913004 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5913005 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term138 A B s f) = (term138 A B s f).
Proof. exact (MK_COMB (@lem5913004) (@lem5913003 A B s f)). Qed.
Lemma lem5913006 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term140 A B C op s g f) = (term140 A B C op s g f).
Proof. exact (MK_COMB (@lem5913005 A B s f) (@lem5912984 A B C op s g f)). Qed.
Lemma lem5913007 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913008 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term154 A B C op s g f) = (term154 A B C op s g f).
Proof. exact (MK_COMB (@lem5913007) (@lem5913006 A B C op s g f)). Qed.
Lemma lem5913009 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term157 A B C op g f x s) = (term157 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913008 A B C op s g f) (@lem5912983 A x s)). Qed.
Lemma lem5913010 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5913011 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term159 A B C op g f x s) = (term159 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913010) (@lem5913009 A B C op g f x s)). Qed.
Lemma lem5913012 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term384 A B C x op s g f) = (term384 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913011 A B C op g f x s) (@lem5912976 A B C x op s g f)). Qed.
Lemma lem5913017 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term392 A B x f s) = (term392 A B x f s).
Proof. exact (eq_refl (term392 A B x f s)). Qed.
Lemma lem5913018 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term393 A B C x op s g f) = (term393 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913017 A B x f s) (@lem5913012 A B C x op s g f)). Qed.
Lemma lem5913019 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913020 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term394 A B C x op s g f) = (term394 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913019) (@lem5913018 A B C x op s g f)). Qed.
Lemma lem5913021 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term389 A B C x op s g f) = (term389 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913020 A B C x op s g f) (@lem5912945 A B C x op s g f)). Qed.
Lemma lem5913022 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term395 A B C x op s g f) = (term395 A B C x op s g f).
Proof. exact (eq_refl (term395 A B C x op s g f)). Qed.
Lemma lem5913023 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term309 A B C x op s g f) = (term389 A B C x op s g f)) = ((term309 A B C x op s g f) = (term389 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5913022 A B C x op s g f) (@lem5913021 A B C x op s g f)). Qed.
Lemma lem5913024 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term309 A B C x op s g f) = (term389 A B C x op s g f).
Proof. exact (EQ_MP (@lem5913023 A B C x op s g f) (@lem5912874 A B C x op s g f)). Qed.
Lemma lem5913025 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term310 A B C x op g f) = (term396 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5913024 A B C x op s g f)). Qed.
Lemma lem5913026 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5913027 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term311 A B C x op g f) = (term397 A B C x op g f).
Proof. exact (MK_COMB (@lem5913026 A) (@lem5913025 A B C x op g f)). Qed.
Lemma lem5913028 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term312 A B C op g f) = (term398 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5913027 A B C x op g f)). Qed.
Lemma lem5913029 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913030 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term313 A B C op g f) = (term399 A B C op g f).
Proof. exact (MK_COMB (@lem5913029 A) (@lem5913028 A B C op g f)). Qed.
Lemma lem5913031 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913032 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term316 A B C op g f) = (term400 A B C op g f).
Proof. exact (MK_COMB (@lem5913031) (@lem5913030 A B C op g f)). Qed.
Lemma lem5913033 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5913034 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term333 A B C op g f) = (term401 A B C op g f).
Proof. exact (MK_COMB (@lem5913033) (@lem5913032 A B C op g f)). Qed.
Lemma lem5913035 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term335 A B C op g f) = (term402 A B C op g f).
Proof. exact (MK_COMB (@lem5913034 A B C op g f) (@lem5912685 A B C)). Qed.
Lemma lem5913038 {C : Type'} (op : type1400 C) : (term336 C op) = (term336 C op).
Proof. exact (eq_refl (term336 C op)). Qed.
Lemma lem5913039 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term337 A B C op g f) = (term403 A B C op g f).
Proof. exact (MK_COMB (@lem5913038 C op) (@lem5913035 A B C op g f)). Qed.
Lemma lem5913040 {A B C : Type'} (g : B -> C) (f : A -> B) : (term339 A B C g f) = (term404 A B C g f).
Proof. exact (fun_ext (fun op : type1400 C => @lem5913039 A B C op g f)). Qed.
Lemma lem5913041 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5913042 {A B C : Type'} (g : B -> C) (f : A -> B) : (term341 A B C g f) = (term405 A B C g f).
Proof. exact (MK_COMB (@lem5913041 C) (@lem5913040 A B C g f)). Qed.
Lemma lem5913043 {A B C : Type'} (f : A -> B) : (term343 A B C f) = (term406 A B C f).
Proof. exact (fun_ext (fun g : B -> C => @lem5913042 A B C g f)). Qed.
Lemma lem5913044 {B C : Type'} : (@all (B -> C)) = (@all (B -> C)).
Proof. exact (eq_refl (@all (B -> C))). Qed.
Lemma lem5913045 {A B C : Type'} (f : A -> B) : (term345 A B C f) = (term407 A B C f).
Proof. exact (MK_COMB (@lem5913044 B C) (@lem5913043 A B C f)). Qed.
Lemma lem5913046 {A B C : Type'} : (term347 A B C) = (term408 A B C).
Proof. exact (fun_ext (fun f : A -> B => @lem5913045 A B C f)). Qed.
Lemma lem5913047 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5913048 {A B C : Type'} : (term349 A B C) = (term409 A B C).
Proof. exact (MK_COMB (@lem5913047 A B) (@lem5913046 A B C)). Qed.
Lemma lem5913301 {A B C : Type'} : (term348 A B C) = (term409 A B C).
Proof. exact (TRANS (@lem5912590 A B C) (@lem5913048 A B C)). Qed.
Lemma lem5913302 {A B C : Type'} : (term409 A B C) = (term348 A B C).
Proof. exact (SYM (@lem5913301 A B C)). Qed.
Lemma lem5913304 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term400 A B C op g f) : term400 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5913305 {A : Type'} (h1 : term317 A) : term317 A.
Proof. exact (h1). Qed.
Lemma lem5913306 {A B : Type'} (h1 : term318 A B) : term318 A B.
Proof. exact (h1). Qed.
Lemma lem5913307 {B : Type'} (h1 : term317 B) : term317 B.
Proof. exact (h1). Qed.
Lemma lem5913308 {A C : Type'} (h1 : term318 A C) : term318 A C.
Proof. exact (h1). Qed.
Lemma lem5913317 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term410 A B x f s) = (term370 A B x f s).
Proof. exact (@lem16933 (term370 A B x f s)). Qed.
Lemma lem5913326 {A B : Type'} (f : A -> B) (x : A) (y : A) : (term411 A B f x y) = (term412 A B f x y).
Proof. exact (@lem17362 ((f x) = (f y)) (x = y)). Qed.
Lemma lem5913328 {A : Type'} (y : A) (s : A -> Prop) : (term413 A y s) = (term413 A y s).
Proof. exact (eq_refl (term413 A y s)). Qed.
Lemma lem5913329 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term414 A B s f x y) = (term415 A B s f x y).
Proof. exact (MK_COMB (@lem5913328 A y s) (@lem5913326 A B f x y)). Qed.
Lemma lem5913330 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term416 A B s f x y) = (term414 A B s f x y).
Proof. exact (@lem17362 (@IN A y s) (term291 A B f x y)). Qed.
Lemma lem5913331 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term416 A B s f x y) = (term415 A B s f x y).
Proof. exact (TRANS (@lem5913330 A B s f x y) (@lem5913329 A B s f x y)). Qed.
Lemma lem5913333 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5913334 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term417 A B s f x y) = (term418 A B s f x y).
Proof. exact (MK_COMB (@lem5913333 A x s) (@lem5913331 A B s f x y)). Qed.
Lemma lem5913335 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term419 A B s f x y) = (term417 A B s f x y).
Proof. exact (@lem17362 (@IN A x s) (term127 A B s f x y)). Qed.
Lemma lem5913336 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term419 A B s f x y) = (term418 A B s f x y).
Proof. exact (TRANS (@lem5913335 A B s f x y) (@lem5913334 A B s f x y)). Qed.
Lemma lem5913337 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5913338 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term422 A B s f x) = (term423 A B s f x).
Proof. exact (@lem5913337 A (term131 A B s f x)). Qed.
Lemma lem5913339 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term424 A B s f x y) = (term129 A B s f x y).
Proof. exact (eq_refl (term424 A B s f x y)). Qed.
Lemma lem5913340 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913341 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term425 A B s f x y) = (term419 A B s f x y).
Proof. exact (MK_COMB (@lem5913340) (@lem5913339 A B s f x y)). Qed.
Lemma lem5913342 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term425 A B s f x y) = (term418 A B s f x y).
Proof. exact (TRANS (@lem5913341 A B s f x y) (@lem5913336 A B s f x y)). Qed.
Lemma lem5913343 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term426 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5913342 A B s f x y)). Qed.
Lemma lem5913344 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913345 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term423 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5913344 A) (@lem5913343 A B s f x)). Qed.
Lemma lem5913346 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term422 A B s f x) = (term428 A B s f x).
Proof. exact (TRANS (@lem5913338 A B s f x) (@lem5913345 A B s f x)). Qed.
Lemma lem5913347 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5913348 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term429 A B s f) = (term430 A B s f).
Proof. exact (@lem5913347 A (term135 A B s f)). Qed.
Lemma lem5913349 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term431 A B s f x) = (term133 A B s f x).
Proof. exact (eq_refl (term431 A B s f x)). Qed.
Lemma lem5913350 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913351 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term432 A B s f x) = (term422 A B s f x).
Proof. exact (MK_COMB (@lem5913350) (@lem5913349 A B s f x)). Qed.
Lemma lem5913352 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term432 A B s f x) = (term428 A B s f x).
Proof. exact (TRANS (@lem5913351 A B s f x) (@lem5913346 A B s f x)). Qed.
Lemma lem5913353 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term433 A B s f) = (term434 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5913352 A B s f x)). Qed.
Lemma lem5913354 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913355 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term430 A B s f) = (term435 A B s f).
Proof. exact (MK_COMB (@lem5913354 A) (@lem5913353 A B s f)). Qed.
Lemma lem5913356 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term429 A B s f) = (term435 A B s f).
Proof. exact (TRANS (@lem5913348 A B s f) (@lem5913355 A B s f)). Qed.
Lemma lem5913357 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5913358 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913359 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term436 A B s f) = (term437 A B s f).
Proof. exact (MK_COMB (@lem5913358) (@lem5913356 A B s f)). Qed.
Lemma lem5913360 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term438 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (MK_COMB (@lem5913359 A B s f) (@lem5913357 A B C op s g f)). Qed.
Lemma lem5913361 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term140 A B C op s g f) = (term438 A B C op s g f).
Proof. exact (@lem17265 (term136 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5913362 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term140 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (TRANS (@lem5913361 A B C op s g f) (@lem5913360 A B C op s g f)). Qed.
Lemma lem5913367 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5913368 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913369 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term154 A B C op s g f) = (term440 A B C op s g f).
Proof. exact (MK_COMB (@lem5913368) (@lem5913362 A B C op s g f)). Qed.
Lemma lem5913370 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term157 A B C op g f x s) = (term441 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913369 A B C op s g f) (@lem5913367 A x s)). Qed.
Lemma lem5913377 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term442 A x x' s) = (term443 A x x' s).
Proof. exact (@lem17160 (x' = x) (@IN A x' s)). Qed.
Lemma lem5913384 {A : Type'} (x : A) (y : A) (s : A -> Prop) : (term442 A x y s) = (term443 A x y s).
Proof. exact (@lem17160 (y = x) (@IN A y s)). Qed.
Lemma lem5913391 {A B : Type'} (f : A -> B) (x' : A) (y : A) : (term291 A B f x' y) = (term444 A B f x' y).
Proof. exact (@lem17265 ((f x') = (f y)) (x' = y)). Qed.
Lemma lem5913392 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913393 {A : Type'} (x : A) (y : A) (s : A -> Prop) : (term445 A x y s) = (term446 A x y s).
Proof. exact (MK_COMB (@lem5913392) (@lem5913384 A x y s)). Qed.
Lemma lem5913394 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term447 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (MK_COMB (@lem5913393 A x y s) (@lem5913391 A B f x' y)). Qed.
Lemma lem5913395 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term293 A B x s f x' y) = (term447 A B x s f x' y).
Proof. exact (@lem17265 (term102 A x y s) (term291 A B f x' y)). Qed.
Lemma lem5913396 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term293 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (TRANS (@lem5913395 A B x s f x' y) (@lem5913394 A B x s f x' y)). Qed.
Lemma lem5913397 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913398 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term445 A x x' s) = (term446 A x x' s).
Proof. exact (MK_COMB (@lem5913397) (@lem5913377 A x x' s)). Qed.
Lemma lem5913399 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term449 A B x s f x' y) = (term450 A B x s f x' y).
Proof. exact (MK_COMB (@lem5913398 A x x' s) (@lem5913396 A B x s f x' y)). Qed.
Lemma lem5913400 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term295 A B x s f x' y) = (term449 A B x s f x' y).
Proof. exact (@lem17265 (term102 A x x' s) (term293 A B x s f x' y)). Qed.
Lemma lem5913401 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term295 A B x s f x' y) = (term450 A B x s f x' y).
Proof. exact (TRANS (@lem5913400 A B x s f x' y) (@lem5913399 A B x s f x' y)). Qed.
Lemma lem5913402 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term297 A B x s f x') = (term451 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5913401 A B x s f x' y)). Qed.
Lemma lem5913403 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913404 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term299 A B x s f x') = (term452 A B x s f x').
Proof. exact (MK_COMB (@lem5913403 A) (@lem5913402 A B x s f x')). Qed.
Lemma lem5913405 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term301 A B x s f) = (term453 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5913404 A B x s f x')). Qed.
Lemma lem5913406 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913407 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term302 A B x s f) = (term454 A B x s f).
Proof. exact (MK_COMB (@lem5913406 A) (@lem5913405 A B x s f)). Qed.
Lemma lem5913408 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term455 A B C x op s g f) = (term455 A B C x op s g f).
Proof. exact (eq_refl (term455 A B C x op s g f)). Qed.
Lemma lem5913409 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913410 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term456 A B x s f) = (term457 A B x s f).
Proof. exact (MK_COMB (@lem5913409) (@lem5913407 A B x s f)). Qed.
Lemma lem5913411 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term458 A B C x op s g f) = (term459 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913410 A B x s f) (@lem5913408 A B C x op s g f)). Qed.
Lemma lem5913412 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term460 A B C x op s g f) = (term458 A B C x op s g f).
Proof. exact (@lem17362 (term302 A B x s f) ((term121 A B C op f s g) = (term307 A B C x op s g f))). Qed.
Lemma lem5913413 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term460 A B C x op s g f) = (term459 A B C x op s g f).
Proof. exact (TRANS (@lem5913412 A B C x op s g f) (@lem5913411 A B C x op s g f)). Qed.
Lemma lem5913414 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913415 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term461 A B C op g f x s) = (term462 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913414) (@lem5913370 A B C op g f x s)). Qed.
Lemma lem5913416 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term463 A B C x op s g f) = (term464 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913415 A B C op g f x s) (@lem5913413 A B C x op s g f)). Qed.
Lemma lem5913417 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term465 A B C x op s g f) = (term463 A B C x op s g f).
Proof. exact (@lem17362 (term157 A B C op g f x s) (term383 A B C x op s g f)). Qed.
Lemma lem5913418 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term465 A B C x op s g f) = (term464 A B C x op s g f).
Proof. exact (TRANS (@lem5913417 A B C x op s g f) (@lem5913416 A B C x op s g f)). Qed.
Lemma lem5913419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913420 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term466 A B x f s) = (term467 A B x f s).
Proof. exact (MK_COMB (@lem5913419) (@lem5913317 A B x f s)). Qed.
Lemma lem5913421 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term468 A B C x op s g f) = (term469 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913420 A B x f s) (@lem5913418 A B C x op s g f)). Qed.
Lemma lem5913422 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term470 A B C x op s g f) = (term468 A B C x op s g f).
Proof. exact (@lem17160 (term471 A B x f s) (term384 A B C x op s g f)). Qed.
Lemma lem5913423 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term470 A B C x op s g f) = (term469 A B C x op s g f).
Proof. exact (TRANS (@lem5913422 A B C x op s g f) (@lem5913421 A B C x op s g f)). Qed.
Lemma lem5913433 {A B : Type'} (f : A -> B) (x : A) (y : A) : (term411 A B f x y) = (term412 A B f x y).
Proof. exact (@lem17362 ((f x) = (f y)) (x = y)). Qed.
Lemma lem5913435 {A : Type'} (y : A) (s : A -> Prop) : (term413 A y s) = (term413 A y s).
Proof. exact (eq_refl (term413 A y s)). Qed.
Lemma lem5913436 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term414 A B s f x y) = (term415 A B s f x y).
Proof. exact (MK_COMB (@lem5913435 A y s) (@lem5913433 A B f x y)). Qed.
Lemma lem5913437 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term416 A B s f x y) = (term414 A B s f x y).
Proof. exact (@lem17362 (@IN A y s) (term291 A B f x y)). Qed.
Lemma lem5913438 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term416 A B s f x y) = (term415 A B s f x y).
Proof. exact (TRANS (@lem5913437 A B s f x y) (@lem5913436 A B s f x y)). Qed.
Lemma lem5913440 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5913441 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term417 A B s f x y) = (term418 A B s f x y).
Proof. exact (MK_COMB (@lem5913440 A x s) (@lem5913438 A B s f x y)). Qed.
Lemma lem5913442 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term419 A B s f x y) = (term417 A B s f x y).
Proof. exact (@lem17362 (@IN A x s) (term127 A B s f x y)). Qed.
Lemma lem5913443 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term419 A B s f x y) = (term418 A B s f x y).
Proof. exact (TRANS (@lem5913442 A B s f x y) (@lem5913441 A B s f x y)). Qed.
Lemma lem5913444 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5913445 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term422 A B s f x) = (term423 A B s f x).
Proof. exact (@lem5913444 A (term131 A B s f x)). Qed.
Lemma lem5913446 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term424 A B s f x y) = (term129 A B s f x y).
Proof. exact (eq_refl (term424 A B s f x y)). Qed.
Lemma lem5913447 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913448 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term425 A B s f x y) = (term419 A B s f x y).
Proof. exact (MK_COMB (@lem5913447) (@lem5913446 A B s f x y)). Qed.
Lemma lem5913449 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term425 A B s f x y) = (term418 A B s f x y).
Proof. exact (TRANS (@lem5913448 A B s f x y) (@lem5913443 A B s f x y)). Qed.
Lemma lem5913450 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term426 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5913449 A B s f x y)). Qed.
Lemma lem5913451 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913452 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term423 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5913451 A) (@lem5913450 A B s f x)). Qed.
Lemma lem5913453 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term422 A B s f x) = (term428 A B s f x).
Proof. exact (TRANS (@lem5913445 A B s f x) (@lem5913452 A B s f x)). Qed.
Lemma lem5913454 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5913455 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term429 A B s f) = (term430 A B s f).
Proof. exact (@lem5913454 A (term135 A B s f)). Qed.
Lemma lem5913456 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term431 A B s f x) = (term133 A B s f x).
Proof. exact (eq_refl (term431 A B s f x)). Qed.
Lemma lem5913457 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913458 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term432 A B s f x) = (term422 A B s f x).
Proof. exact (MK_COMB (@lem5913457) (@lem5913456 A B s f x)). Qed.
Lemma lem5913459 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term432 A B s f x) = (term428 A B s f x).
Proof. exact (TRANS (@lem5913458 A B s f x) (@lem5913453 A B s f x)). Qed.
Lemma lem5913460 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term433 A B s f) = (term434 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5913459 A B s f x)). Qed.
Lemma lem5913461 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913462 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term430 A B s f) = (term435 A B s f).
Proof. exact (MK_COMB (@lem5913461 A) (@lem5913460 A B s f)). Qed.
Lemma lem5913463 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term429 A B s f) = (term435 A B s f).
Proof. exact (TRANS (@lem5913455 A B s f) (@lem5913462 A B s f)). Qed.
Lemma lem5913464 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5913465 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913466 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term436 A B s f) = (term437 A B s f).
Proof. exact (MK_COMB (@lem5913465) (@lem5913463 A B s f)). Qed.
Lemma lem5913467 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term438 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (MK_COMB (@lem5913466 A B s f) (@lem5913464 A B C op s g f)). Qed.
Lemma lem5913468 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term140 A B C op s g f) = (term438 A B C op s g f).
Proof. exact (@lem17265 (term136 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5913469 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term140 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (TRANS (@lem5913468 A B C op s g f) (@lem5913467 A B C op s g f)). Qed.
Lemma lem5913474 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5913475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913476 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term154 A B C op s g f) = (term440 A B C op s g f).
Proof. exact (MK_COMB (@lem5913475) (@lem5913469 A B C op s g f)). Qed.
Lemma lem5913477 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term157 A B C op g f x s) = (term441 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913476 A B C op s g f) (@lem5913474 A x s)). Qed.
Lemma lem5913484 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term442 A x x' s) = (term443 A x x' s).
Proof. exact (@lem17160 (x' = x) (@IN A x' s)). Qed.
Lemma lem5913491 {A : Type'} (x : A) (y : A) (s : A -> Prop) : (term442 A x y s) = (term443 A x y s).
Proof. exact (@lem17160 (y = x) (@IN A y s)). Qed.
Lemma lem5913498 {A B : Type'} (f : A -> B) (x' : A) (y : A) : (term291 A B f x' y) = (term444 A B f x' y).
Proof. exact (@lem17265 ((f x') = (f y)) (x' = y)). Qed.
Lemma lem5913499 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913500 {A : Type'} (x : A) (y : A) (s : A -> Prop) : (term445 A x y s) = (term446 A x y s).
Proof. exact (MK_COMB (@lem5913499) (@lem5913491 A x y s)). Qed.
Lemma lem5913501 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term447 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (MK_COMB (@lem5913500 A x y s) (@lem5913498 A B f x' y)). Qed.
Lemma lem5913502 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term293 A B x s f x' y) = (term447 A B x s f x' y).
Proof. exact (@lem17265 (term102 A x y s) (term291 A B f x' y)). Qed.
Lemma lem5913503 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term293 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (TRANS (@lem5913502 A B x s f x' y) (@lem5913501 A B x s f x' y)). Qed.
Lemma lem5913504 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913505 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term445 A x x' s) = (term446 A x x' s).
Proof. exact (MK_COMB (@lem5913504) (@lem5913484 A x x' s)). Qed.
Lemma lem5913506 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term449 A B x s f x' y) = (term450 A B x s f x' y).
Proof. exact (MK_COMB (@lem5913505 A x x' s) (@lem5913503 A B x s f x' y)). Qed.
Lemma lem5913507 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term295 A B x s f x' y) = (term449 A B x s f x' y).
Proof. exact (@lem17265 (term102 A x x' s) (term293 A B x s f x' y)). Qed.
Lemma lem5913508 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term295 A B x s f x' y) = (term450 A B x s f x' y).
Proof. exact (TRANS (@lem5913507 A B x s f x' y) (@lem5913506 A B x s f x' y)). Qed.
Lemma lem5913509 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term297 A B x s f x') = (term451 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5913508 A B x s f x' y)). Qed.
Lemma lem5913510 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913511 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term299 A B x s f x') = (term452 A B x s f x').
Proof. exact (MK_COMB (@lem5913510 A) (@lem5913509 A B x s f x')). Qed.
Lemma lem5913512 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term301 A B x s f) = (term453 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5913511 A B x s f x')). Qed.
Lemma lem5913513 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913514 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term302 A B x s f) = (term454 A B x s f).
Proof. exact (MK_COMB (@lem5913513 A) (@lem5913512 A B x s f)). Qed.
Lemma lem5913515 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term472 A B C x op s g f) = (term472 A B C x op s g f).
Proof. exact (eq_refl (term472 A B C x op s g f)). Qed.
Lemma lem5913516 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913517 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term456 A B x s f) = (term457 A B x s f).
Proof. exact (MK_COMB (@lem5913516) (@lem5913514 A B x s f)). Qed.
Lemma lem5913518 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term473 A B C x op s g f) = (term474 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913517 A B x s f) (@lem5913515 A B C x op s g f)). Qed.
Lemma lem5913519 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term475 A B C x op s g f) = (term473 A B C x op s g f).
Proof. exact (@lem17362 (term302 A B x s f) ((term374 A B C x op f s g) = (term307 A B C x op s g f))). Qed.
Lemma lem5913520 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term475 A B C x op s g f) = (term474 A B C x op s g f).
Proof. exact (TRANS (@lem5913519 A B C x op s g f) (@lem5913518 A B C x op s g f)). Qed.
Lemma lem5913521 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913522 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term461 A B C op g f x s) = (term462 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913521) (@lem5913477 A B C op g f x s)). Qed.
Lemma lem5913523 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term476 A B C x op s g f) = (term477 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913522 A B C op g f x s) (@lem5913520 A B C x op s g f)). Qed.
Lemma lem5913524 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term478 A B C x op s g f) = (term476 A B C x op s g f).
Proof. exact (@lem17362 (term157 A B C op g f x s) (term377 A B C x op s g f)). Qed.
Lemma lem5913525 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term478 A B C x op s g f) = (term477 A B C x op s g f).
Proof. exact (TRANS (@lem5913524 A B C x op s g f) (@lem5913523 A B C x op s g f)). Qed.
Lemma lem5913527 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5913528 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term480 A B C x op s g f) = (term481 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913527 A B x f s) (@lem5913525 A B C x op s g f)). Qed.
Lemma lem5913529 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term482 A B C x op s g f) = (term480 A B C x op s g f).
Proof. exact (@lem17160 (term370 A B x f s) (term378 A B C x op s g f)). Qed.
Lemma lem5913530 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term482 A B C x op s g f) = (term481 A B C x op s g f).
Proof. exact (TRANS (@lem5913529 A B C x op s g f) (@lem5913528 A B C x op s g f)). Qed.
Lemma lem5913531 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913532 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term483 A B C x op s g f) = (term484 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913531) (@lem5913423 A B C x op s g f)). Qed.
Lemma lem5913533 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term485 A B C x op s g f) = (term486 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913532 A B C x op s g f) (@lem5913530 A B C x op s g f)). Qed.
Lemma lem5913534 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term487 A B C x op s g f) = (term485 A B C x op s g f).
Proof. exact (@lem17045 (term393 A B C x op s g f) (term391 A B C x op s g f)). Qed.
Lemma lem5913535 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term487 A B C x op s g f) = (term486 A B C x op s g f).
Proof. exact (TRANS (@lem5913534 A B C x op s g f) (@lem5913533 A B C x op s g f)). Qed.
Lemma lem5913536 {A : Type'} (P : type686 A) : (term488 A P) = (term489 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem5913537 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term490 A B C x op g f) = (term491 A B C x op g f).
Proof. exact (@lem5913536 A (term396 A B C x op g f)). Qed.
Lemma lem5913538 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term492 A B C x op g f s) = (term389 A B C x op s g f).
Proof. exact (eq_refl (term492 A B C x op g f s)). Qed.
Lemma lem5913539 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913540 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term493 A B C x op g f s) = (term487 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913539) (@lem5913538 A B C x op s g f)). Qed.
Lemma lem5913541 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term493 A B C x op g f s) = (term486 A B C x op s g f).
Proof. exact (TRANS (@lem5913540 A B C x op s g f) (@lem5913535 A B C x op s g f)). Qed.
Lemma lem5913542 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term494 A B C x op g f) = (term495 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5913541 A B C x op s g f)). Qed.
Lemma lem5913543 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5913544 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term491 A B C x op g f) = (term496 A B C x op g f).
Proof. exact (MK_COMB (@lem5913543 A) (@lem5913542 A B C x op g f)). Qed.
Lemma lem5913545 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term490 A B C x op g f) = (term496 A B C x op g f).
Proof. exact (TRANS (@lem5913537 A B C x op g f) (@lem5913544 A B C x op g f)). Qed.
Lemma lem5913546 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5913547 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term400 A B C op g f) = (term497 A B C op g f).
Proof. exact (@lem5913546 A (term398 A B C op g f)). Qed.
Lemma lem5913548 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term498 A B C op g f x) = (term397 A B C x op g f).
Proof. exact (eq_refl (term498 A B C op g f x)). Qed.
Lemma lem5913549 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5913550 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term499 A B C op g f x) = (term490 A B C x op g f).
Proof. exact (MK_COMB (@lem5913549) (@lem5913548 A B C x op g f)). Qed.
Lemma lem5913551 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term499 A B C op g f x) = (term496 A B C x op g f).
Proof. exact (TRANS (@lem5913550 A B C x op g f) (@lem5913545 A B C x op g f)). Qed.
Lemma lem5913552 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term500 A B C op g f) = (term501 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5913551 A B C x op g f)). Qed.
Lemma lem5913553 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913554 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term497 A B C op g f) = (term502 A B C op g f).
Proof. exact (MK_COMB (@lem5913553 A) (@lem5913552 A B C op g f)). Qed.
Lemma lem5913555 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term400 A B C op g f) = (term502 A B C op g f).
Proof. exact (TRANS (@lem5913547 A B C op g f) (@lem5913554 A B C op g f)). Qed.
Lemma lem5913561 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term503 A P Q) = (term504 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem5913562 {A : Type'} (P : type686 A) (Q : type686 A) : (term505 A P Q) = (term506 A P Q).
Proof. exact (@lem5913561 (A -> Prop) P Q). Qed.
Lemma lem5913563 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term507 A B C x op g f) = (term508 A B C x op g f).
Proof. exact (@lem5913562 A (term509 A B C x op g f) (term510 A B C x op g f)). Qed.
Lemma lem5913564 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term511 A B C x op g f s) = (term469 A B C x op s g f).
Proof. exact (eq_refl (term511 A B C x op g f s)). Qed.
Lemma lem5913565 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913566 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term512 A B C x op g f s) = (term484 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913565) (@lem5913564 A B C x op s g f)). Qed.
Lemma lem5913567 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term513 A B C x op g f s) = (term481 A B C x op s g f).
Proof. exact (eq_refl (term513 A B C x op g f s)). Qed.
Lemma lem5913568 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term514 A B C x op g f s) = (term486 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913566 A B C x op s g f) (@lem5913567 A B C x op s g f)). Qed.
Lemma lem5913569 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term515 A B C x op g f) = (term495 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5913568 A B C x op s g f)). Qed.
Lemma lem5913570 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5913571 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term507 A B C x op g f) = (term496 A B C x op g f).
Proof. exact (MK_COMB (@lem5913570 A) (@lem5913569 A B C x op g f)). Qed.
Lemma lem5913572 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5913573 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term516 A B C x op g f) = (term517 A B C x op g f).
Proof. exact (MK_COMB (@lem5913572) (@lem5913571 A B C x op g f)). Qed.
Lemma lem5913574 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term511 A B C x op g f s) = (term469 A B C x op s g f).
Proof. exact (eq_refl (term511 A B C x op g f s)). Qed.
Lemma lem5913575 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term518 A B C x op g f) = (term509 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5913574 A B C x op s g f)). Qed.
Lemma lem5913576 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5913577 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term519 A B C x op g f) = (term520 A B C x op g f).
Proof. exact (MK_COMB (@lem5913576 A) (@lem5913575 A B C x op g f)). Qed.
Lemma lem5913578 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913579 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term521 A B C x op g f) = (term522 A B C x op g f).
Proof. exact (MK_COMB (@lem5913578) (@lem5913577 A B C x op g f)). Qed.
Lemma lem5913580 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term513 A B C x op g f s) = (term481 A B C x op s g f).
Proof. exact (eq_refl (term513 A B C x op g f s)). Qed.
Lemma lem5913581 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term523 A B C x op g f) = (term510 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5913580 A B C x op s g f)). Qed.
Lemma lem5913582 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5913583 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term524 A B C x op g f) = (term525 A B C x op g f).
Proof. exact (MK_COMB (@lem5913582 A) (@lem5913581 A B C x op g f)). Qed.
Lemma lem5913584 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term508 A B C x op g f) = (term526 A B C x op g f).
Proof. exact (MK_COMB (@lem5913579 A B C x op g f) (@lem5913583 A B C x op g f)). Qed.
Lemma lem5913585 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : ((term507 A B C x op g f) = (term508 A B C x op g f)) = ((term496 A B C x op g f) = (term526 A B C x op g f)).
Proof. exact (MK_COMB (@lem5913573 A B C x op g f) (@lem5913584 A B C x op g f)). Qed.
Lemma lem5913586 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term496 A B C x op g f) = (term526 A B C x op g f).
Proof. exact (EQ_MP (@lem5913585 A B C x op g f) (@lem5913563 A B C x op g f)). Qed.
Lemma lem5913640 {A : Type'} (P : Prop) (Q : A -> Prop) : (term527 A P Q) = (term528 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem5913641 {A : Type'} (P : Prop) (Q : A -> Prop) : (term527 A P Q) = (term528 A P Q).
Proof. exact (@lem5913640 A P Q). Qed.
Lemma lem5913642 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term529 A B s f x) = (term530 A B s f x).
Proof. exact (@lem5913641 A (@IN A x s) (term531 A B s f x)). Qed.
Lemma lem5913643 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5913644 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5913645 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term533 A B s f x y) = (term418 A B s f x y).
Proof. exact (MK_COMB (@lem5913644 A x s) (@lem5913643 A B s f x y)). Qed.
Lemma lem5913646 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term534 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5913645 A B s f x y)). Qed.
Lemma lem5913647 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913648 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term529 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5913647 A) (@lem5913646 A B s f x)). Qed.
Lemma lem5913649 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5913650 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term535 A B s f x) = (term536 A B s f x).
Proof. exact (MK_COMB (@lem5913649) (@lem5913648 A B s f x)). Qed.
Lemma lem5913651 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5913652 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term537 A B s f x) = (term531 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5913651 A B s f x y)). Qed.
Lemma lem5913653 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913654 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term538 A B s f x) = (term539 A B s f x).
Proof. exact (MK_COMB (@lem5913653 A) (@lem5913652 A B s f x)). Qed.
Lemma lem5913655 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5913656 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term530 A B s f x) = (term540 A B s f x).
Proof. exact (MK_COMB (@lem5913655 A x s) (@lem5913654 A B s f x)). Qed.
Lemma lem5913657 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : ((term529 A B s f x) = (term530 A B s f x)) = ((term428 A B s f x) = (term540 A B s f x)).
Proof. exact (MK_COMB (@lem5913650 A B s f x) (@lem5913656 A B s f x)). Qed.
Lemma lem5913658 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term428 A B s f x) = (term540 A B s f x).
Proof. exact (EQ_MP (@lem5913657 A B s f x) (@lem5913642 A B s f x)). Qed.
Lemma lem5913707 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term434 A B s f) = (term541 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5913658 A B s f x)). Qed.
Lemma lem5913708 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5913709 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term435 A B s f) = (term542 A B s f).
Proof. exact (MK_COMB (@lem5913708 A) (@lem5913707 A B s f)). Qed.
Lemma lem5913758 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913759 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term437 A B s f) = (term543 A B s f).
Proof. exact (MK_COMB (@lem5913758) (@lem5913709 A B s f)). Qed.
Lemma lem5913760 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5913761 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term439 A B C op s g f) = (term544 A B C op s g f).
Proof. exact (MK_COMB (@lem5913759 A B s f) (@lem5913760 A B C op s g f)). Qed.
Lemma lem5913762 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913763 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term440 A B C op s g f) = (term545 A B C op s g f).
Proof. exact (MK_COMB (@lem5913762) (@lem5913761 A B C op s g f)). Qed.
Lemma lem5913764 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5913765 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term441 A B C op g f x s) = (term546 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913763 A B C op s g f) (@lem5913764 A x s)). Qed.
Lemma lem5913766 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913767 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term462 A B C op g f x s) = (term547 A B C op g f x s).
Proof. exact (MK_COMB (@lem5913766) (@lem5913765 A B C op g f x s)). Qed.
Lemma lem5913773 {A : Type'} (P : Prop) (Q : A -> Prop) : (term548 A P Q) = (term549 A P Q).
Proof. exact (EQ_MP (@lem18941 A P Q) (@lem18940 A P Q)). Qed.
Lemma lem5913774 {A : Type'} (P : Prop) (Q : A -> Prop) : (term548 A P Q) = (term549 A P Q).
Proof. exact (@lem5913773 A P Q). Qed.
Lemma lem5913775 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term550 A B x s f x') = (term551 A B x s f x').
Proof. exact (@lem5913774 A (term443 A x x' s) (term552 A B x s f x')). Qed.
Lemma lem5913776 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term553 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (eq_refl (term553 A B x s f x' y)). Qed.
Lemma lem5913777 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term446 A x x' s) = (term446 A x x' s).
Proof. exact (eq_refl (term446 A x x' s)). Qed.
Lemma lem5913778 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term554 A B x s f x' y) = (term450 A B x s f x' y).
Proof. exact (MK_COMB (@lem5913777 A x x' s) (@lem5913776 A B x s f x' y)). Qed.
Lemma lem5913779 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term555 A B x s f x') = (term451 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5913778 A B x s f x' y)). Qed.
Lemma lem5913780 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913781 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term550 A B x s f x') = (term452 A B x s f x').
Proof. exact (MK_COMB (@lem5913780 A) (@lem5913779 A B x s f x')). Qed.
Lemma lem5913782 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5913783 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term556 A B x s f x') = (term557 A B x s f x').
Proof. exact (MK_COMB (@lem5913782) (@lem5913781 A B x s f x')). Qed.
Lemma lem5913784 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term553 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (eq_refl (term553 A B x s f x' y)). Qed.
Lemma lem5913785 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term558 A B x s f x') = (term552 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5913784 A B x s f x' y)). Qed.
Lemma lem5913786 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913787 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term559 A B x s f x') = (term560 A B x s f x').
Proof. exact (MK_COMB (@lem5913786 A) (@lem5913785 A B x s f x')). Qed.
Lemma lem5913788 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term446 A x x' s) = (term446 A x x' s).
Proof. exact (eq_refl (term446 A x x' s)). Qed.
Lemma lem5913789 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term551 A B x s f x') = (term561 A B x s f x').
Proof. exact (MK_COMB (@lem5913788 A x x' s) (@lem5913787 A B x s f x')). Qed.
Lemma lem5913790 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : ((term550 A B x s f x') = (term551 A B x s f x')) = ((term452 A B x s f x') = (term561 A B x s f x')).
Proof. exact (MK_COMB (@lem5913783 A B x s f x') (@lem5913789 A B x s f x')). Qed.
Lemma lem5913791 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term452 A B x s f x') = (term561 A B x s f x').
Proof. exact (EQ_MP (@lem5913790 A B x s f x') (@lem5913775 A B x s f x')). Qed.
Lemma lem5913840 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term453 A B x s f) = (term562 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5913791 A B x s f x')). Qed.
Lemma lem5913841 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5913842 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term454 A B x s f) = (term563 A B x s f).
Proof. exact (MK_COMB (@lem5913841 A) (@lem5913840 A B x s f)). Qed.
Lemma lem5913891 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5913892 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term457 A B x s f) = (term564 A B x s f).
Proof. exact (MK_COMB (@lem5913891) (@lem5913842 A B x s f)). Qed.
Lemma lem5913893 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term455 A B C x op s g f) = (term455 A B C x op s g f).
Proof. exact (eq_refl (term455 A B C x op s g f)). Qed.
Lemma lem5913894 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term459 A B C x op s g f) = (term565 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913892 A B x s f) (@lem5913893 A B C x op s g f)). Qed.
Lemma lem5913895 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term464 A B C x op s g f) = (term566 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913767 A B C op g f x s) (@lem5913894 A B C x op s g f)). Qed.
Lemma lem5913896 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term467 A B x f s).
Proof. exact (eq_refl (term467 A B x f s)). Qed.
Lemma lem5913897 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term469 A B C x op s g f) = (term567 A B C x op s g f).
Proof. exact (MK_COMB (@lem5913896 A B x f s) (@lem5913895 A B C x op s g f)). Qed.
Lemma lem5913898 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term509 A B C x op g f) = (term568 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5913897 A B C x op s g f)). Qed.
Lemma lem5913899 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5913900 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term520 A B C x op g f) = (term569 A B C x op g f).
Proof. exact (MK_COMB (@lem5913899 A) (@lem5913898 A B C x op g f)). Qed.
Lemma lem5913949 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5913950 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term522 A B C x op g f) = (term570 A B C x op g f).
Proof. exact (MK_COMB (@lem5913949) (@lem5913900 A B C x op g f)). Qed.
Lemma lem5914004 {A : Type'} (P : Prop) (Q : A -> Prop) : (term527 A P Q) = (term528 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem5914005 {A : Type'} (P : Prop) (Q : A -> Prop) : (term527 A P Q) = (term528 A P Q).
Proof. exact (@lem5914004 A P Q). Qed.
Lemma lem5914006 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term529 A B s f x) = (term530 A B s f x).
Proof. exact (@lem5914005 A (@IN A x s) (term531 A B s f x)). Qed.
Lemma lem5914007 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5914008 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5914009 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term533 A B s f x y) = (term418 A B s f x y).
Proof. exact (MK_COMB (@lem5914008 A x s) (@lem5914007 A B s f x y)). Qed.
Lemma lem5914010 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term534 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5914009 A B s f x y)). Qed.
Lemma lem5914011 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914012 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term529 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5914011 A) (@lem5914010 A B s f x)). Qed.
Lemma lem5914013 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914014 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term535 A B s f x) = (term536 A B s f x).
Proof. exact (MK_COMB (@lem5914013) (@lem5914012 A B s f x)). Qed.
Lemma lem5914015 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5914016 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term537 A B s f x) = (term531 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5914015 A B s f x y)). Qed.
Lemma lem5914017 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914018 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term538 A B s f x) = (term539 A B s f x).
Proof. exact (MK_COMB (@lem5914017 A) (@lem5914016 A B s f x)). Qed.
Lemma lem5914019 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5914020 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term530 A B s f x) = (term540 A B s f x).
Proof. exact (MK_COMB (@lem5914019 A x s) (@lem5914018 A B s f x)). Qed.
Lemma lem5914021 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : ((term529 A B s f x) = (term530 A B s f x)) = ((term428 A B s f x) = (term540 A B s f x)).
Proof. exact (MK_COMB (@lem5914014 A B s f x) (@lem5914020 A B s f x)). Qed.
Lemma lem5914022 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term428 A B s f x) = (term540 A B s f x).
Proof. exact (EQ_MP (@lem5914021 A B s f x) (@lem5914006 A B s f x)). Qed.
Lemma lem5914071 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term434 A B s f) = (term541 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5914022 A B s f x)). Qed.
Lemma lem5914072 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914073 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term435 A B s f) = (term542 A B s f).
Proof. exact (MK_COMB (@lem5914072 A) (@lem5914071 A B s f)). Qed.
Lemma lem5914122 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914123 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term437 A B s f) = (term543 A B s f).
Proof. exact (MK_COMB (@lem5914122) (@lem5914073 A B s f)). Qed.
Lemma lem5914124 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914125 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term439 A B C op s g f) = (term544 A B C op s g f).
Proof. exact (MK_COMB (@lem5914123 A B s f) (@lem5914124 A B C op s g f)). Qed.
Lemma lem5914126 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914127 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term440 A B C op s g f) = (term545 A B C op s g f).
Proof. exact (MK_COMB (@lem5914126) (@lem5914125 A B C op s g f)). Qed.
Lemma lem5914128 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5914129 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term441 A B C op g f x s) = (term546 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914127 A B C op s g f) (@lem5914128 A x s)). Qed.
Lemma lem5914130 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914131 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term462 A B C op g f x s) = (term547 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914130) (@lem5914129 A B C op g f x s)). Qed.
Lemma lem5914137 {A : Type'} (P : Prop) (Q : A -> Prop) : (term548 A P Q) = (term549 A P Q).
Proof. exact (EQ_MP (@lem18941 A P Q) (@lem18940 A P Q)). Qed.
Lemma lem5914138 {A : Type'} (P : Prop) (Q : A -> Prop) : (term548 A P Q) = (term549 A P Q).
Proof. exact (@lem5914137 A P Q). Qed.
Lemma lem5914139 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term550 A B x s f x') = (term551 A B x s f x').
Proof. exact (@lem5914138 A (term443 A x x' s) (term552 A B x s f x')). Qed.
Lemma lem5914140 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term553 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (eq_refl (term553 A B x s f x' y)). Qed.
Lemma lem5914141 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term446 A x x' s) = (term446 A x x' s).
Proof. exact (eq_refl (term446 A x x' s)). Qed.
Lemma lem5914142 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term554 A B x s f x' y) = (term450 A B x s f x' y).
Proof. exact (MK_COMB (@lem5914141 A x x' s) (@lem5914140 A B x s f x' y)). Qed.
Lemma lem5914143 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term555 A B x s f x') = (term451 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5914142 A B x s f x' y)). Qed.
Lemma lem5914144 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5914145 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term550 A B x s f x') = (term452 A B x s f x').
Proof. exact (MK_COMB (@lem5914144 A) (@lem5914143 A B x s f x')). Qed.
Lemma lem5914146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914147 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term556 A B x s f x') = (term557 A B x s f x').
Proof. exact (MK_COMB (@lem5914146) (@lem5914145 A B x s f x')). Qed.
Lemma lem5914148 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term553 A B x s f x' y) = (term448 A B x s f x' y).
Proof. exact (eq_refl (term553 A B x s f x' y)). Qed.
Lemma lem5914149 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term558 A B x s f x') = (term552 A B x s f x').
Proof. exact (fun_ext (fun y : A => @lem5914148 A B x s f x' y)). Qed.
Lemma lem5914150 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5914151 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term559 A B x s f x') = (term560 A B x s f x').
Proof. exact (MK_COMB (@lem5914150 A) (@lem5914149 A B x s f x')). Qed.
Lemma lem5914152 {A : Type'} (x : A) (x' : A) (s : A -> Prop) : (term446 A x x' s) = (term446 A x x' s).
Proof. exact (eq_refl (term446 A x x' s)). Qed.
Lemma lem5914153 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term551 A B x s f x') = (term561 A B x s f x').
Proof. exact (MK_COMB (@lem5914152 A x x' s) (@lem5914151 A B x s f x')). Qed.
Lemma lem5914154 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : ((term550 A B x s f x') = (term551 A B x s f x')) = ((term452 A B x s f x') = (term561 A B x s f x')).
Proof. exact (MK_COMB (@lem5914147 A B x s f x') (@lem5914153 A B x s f x')). Qed.
Lemma lem5914155 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term452 A B x s f x') = (term561 A B x s f x').
Proof. exact (EQ_MP (@lem5914154 A B x s f x') (@lem5914139 A B x s f x')). Qed.
Lemma lem5914204 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term453 A B x s f) = (term562 A B x s f).
Proof. exact (fun_ext (fun x' : A => @lem5914155 A B x s f x')). Qed.
Lemma lem5914205 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5914206 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term454 A B x s f) = (term563 A B x s f).
Proof. exact (MK_COMB (@lem5914205 A) (@lem5914204 A B x s f)). Qed.
Lemma lem5914255 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914256 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) : (term457 A B x s f) = (term564 A B x s f).
Proof. exact (MK_COMB (@lem5914255) (@lem5914206 A B x s f)). Qed.
Lemma lem5914257 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term472 A B C x op s g f) = (term472 A B C x op s g f).
Proof. exact (eq_refl (term472 A B C x op s g f)). Qed.
Lemma lem5914258 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term474 A B C x op s g f) = (term571 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914256 A B x s f) (@lem5914257 A B C x op s g f)). Qed.
Lemma lem5914259 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term477 A B C x op s g f) = (term572 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914131 A B C op g f x s) (@lem5914258 A B C x op s g f)). Qed.
Lemma lem5914260 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5914261 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term481 A B C x op s g f) = (term573 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914260 A B x f s) (@lem5914259 A B C x op s g f)). Qed.
Lemma lem5914262 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term510 A B C x op g f) = (term574 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5914261 A B C x op s g f)). Qed.
Lemma lem5914263 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5914264 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term525 A B C x op g f) = (term575 A B C x op g f).
Proof. exact (MK_COMB (@lem5914263 A) (@lem5914262 A B C x op g f)). Qed.
Lemma lem5914313 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term526 A B C x op g f) = (term576 A B C x op g f).
Proof. exact (MK_COMB (@lem5913950 A B C x op g f) (@lem5914264 A B C x op g f)). Qed.
Lemma lem5914314 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term496 A B C x op g f) = (term576 A B C x op g f).
Proof. exact (TRANS (@lem5913586 A B C x op g f) (@lem5914313 A B C x op g f)). Qed.
Lemma lem5914315 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term501 A B C op g f) = (term577 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5914314 A B C x op g f)). Qed.
Lemma lem5914316 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914317 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term502 A B C op g f) = (term578 A B C op g f).
Proof. exact (MK_COMB (@lem5914316 A) (@lem5914315 A B C op g f)). Qed.
Lemma lem5914319 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term503 A P Q) = (term504 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem5914320 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term503 A P Q) = (term504 A P Q).
Proof. exact (@lem5914319 A P Q). Qed.
Lemma lem5914321 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term579 A B C op g f) = (term580 A B C op g f).
Proof. exact (@lem5914320 A (term581 A B C op g f) (term582 A B C op g f)). Qed.
Lemma lem5914322 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term583 A B C op g f x) = (term569 A B C x op g f).
Proof. exact (eq_refl (term583 A B C op g f x)). Qed.
Lemma lem5914323 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914324 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term584 A B C op g f x) = (term570 A B C x op g f).
Proof. exact (MK_COMB (@lem5914323) (@lem5914322 A B C x op g f)). Qed.
Lemma lem5914325 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term585 A B C op g f x) = (term575 A B C x op g f).
Proof. exact (eq_refl (term585 A B C op g f x)). Qed.
Lemma lem5914326 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term586 A B C op g f x) = (term576 A B C x op g f).
Proof. exact (MK_COMB (@lem5914324 A B C x op g f) (@lem5914325 A B C x op g f)). Qed.
Lemma lem5914327 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term587 A B C op g f) = (term577 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5914326 A B C x op g f)). Qed.
Lemma lem5914328 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914329 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term579 A B C op g f) = (term578 A B C op g f).
Proof. exact (MK_COMB (@lem5914328 A) (@lem5914327 A B C op g f)). Qed.
Lemma lem5914330 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914331 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term588 A B C op g f) = (term589 A B C op g f).
Proof. exact (MK_COMB (@lem5914330) (@lem5914329 A B C op g f)). Qed.
Lemma lem5914332 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term583 A B C op g f x) = (term569 A B C x op g f).
Proof. exact (eq_refl (term583 A B C op g f x)). Qed.
Lemma lem5914333 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term590 A B C op g f) = (term581 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5914332 A B C x op g f)). Qed.
Lemma lem5914334 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914335 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term591 A B C op g f) = (term592 A B C op g f).
Proof. exact (MK_COMB (@lem5914334 A) (@lem5914333 A B C op g f)). Qed.
Lemma lem5914336 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914337 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term593 A B C op g f) = (term594 A B C op g f).
Proof. exact (MK_COMB (@lem5914336) (@lem5914335 A B C op g f)). Qed.
Lemma lem5914338 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term585 A B C op g f x) = (term575 A B C x op g f).
Proof. exact (eq_refl (term585 A B C op g f x)). Qed.
Lemma lem5914339 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term595 A B C op g f) = (term582 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5914338 A B C x op g f)). Qed.
Lemma lem5914340 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914341 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term596 A B C op g f) = (term597 A B C op g f).
Proof. exact (MK_COMB (@lem5914340 A) (@lem5914339 A B C op g f)). Qed.
Lemma lem5914342 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term580 A B C op g f) = (term598 A B C op g f).
Proof. exact (MK_COMB (@lem5914337 A B C op g f) (@lem5914341 A B C op g f)). Qed.
Lemma lem5914343 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : ((term579 A B C op g f) = (term580 A B C op g f)) = ((term578 A B C op g f) = (term598 A B C op g f)).
Proof. exact (MK_COMB (@lem5914331 A B C op g f) (@lem5914342 A B C op g f)). Qed.
Lemma lem5914344 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term578 A B C op g f) = (term598 A B C op g f).
Proof. exact (EQ_MP (@lem5914343 A B C op g f) (@lem5914321 A B C op g f)). Qed.
Lemma lem5914833 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term502 A B C op g f) = (term598 A B C op g f).
Proof. exact (TRANS (@lem5914317 A B C op g f) (@lem5914344 A B C op g f)). Qed.
Lemma lem5914835 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5914836 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (@lem5914835 A P Q). Qed.
Lemma lem5914837 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term530 A B s f x) = (term529 A B s f x).
Proof. exact (@lem5914836 A (@IN A x s) (term531 A B s f x)). Qed.
Lemma lem5914838 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5914839 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term537 A B s f x) = (term531 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5914838 A B s f x y)). Qed.
Lemma lem5914840 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914841 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term538 A B s f x) = (term539 A B s f x).
Proof. exact (MK_COMB (@lem5914840 A) (@lem5914839 A B s f x)). Qed.
Lemma lem5914842 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5914843 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term530 A B s f x) = (term540 A B s f x).
Proof. exact (MK_COMB (@lem5914842 A x s) (@lem5914841 A B s f x)). Qed.
Lemma lem5914844 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914845 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term599 A B s f x) = (term600 A B s f x).
Proof. exact (MK_COMB (@lem5914844) (@lem5914843 A B s f x)). Qed.
Lemma lem5914846 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5914847 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5914848 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term533 A B s f x y) = (term418 A B s f x y).
Proof. exact (MK_COMB (@lem5914847 A x s) (@lem5914846 A B s f x y)). Qed.
Lemma lem5914849 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term534 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5914848 A B s f x y)). Qed.
Lemma lem5914850 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914851 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term529 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5914850 A) (@lem5914849 A B s f x)). Qed.
Lemma lem5914852 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : ((term530 A B s f x) = (term529 A B s f x)) = ((term540 A B s f x) = (term428 A B s f x)).
Proof. exact (MK_COMB (@lem5914845 A B s f x) (@lem5914851 A B s f x)). Qed.
Lemma lem5914853 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term540 A B s f x) = (term428 A B s f x).
Proof. exact (EQ_MP (@lem5914852 A B s f x) (@lem5914837 A B s f x)). Qed.
Lemma lem5914854 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term541 A B s f) = (term434 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5914853 A B s f x)). Qed.
Lemma lem5914855 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914856 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term542 A B s f) = (term435 A B s f).
Proof. exact (MK_COMB (@lem5914855 A) (@lem5914854 A B s f)). Qed.
Lemma lem5914857 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914858 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term543 A B s f) = (term437 A B s f).
Proof. exact (MK_COMB (@lem5914857) (@lem5914856 A B s f)). Qed.
Lemma lem5914859 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914860 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term544 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (MK_COMB (@lem5914858 A B s f) (@lem5914859 A B C op s g f)). Qed.
Lemma lem5914862 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5914863 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (@lem5914862 A P Q). Qed.
Lemma lem5914864 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term603 A B C op s g f) = (term604 A B C op s g f).
Proof. exact (@lem5914863 A (term434 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914865 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term605 A B s f x) = (term428 A B s f x).
Proof. exact (eq_refl (term605 A B s f x)). Qed.
Lemma lem5914866 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term606 A B s f) = (term434 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5914865 A B s f x)). Qed.
Lemma lem5914867 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914868 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term607 A B s f) = (term435 A B s f).
Proof. exact (MK_COMB (@lem5914867 A) (@lem5914866 A B s f)). Qed.
Lemma lem5914869 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914870 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term608 A B s f) = (term437 A B s f).
Proof. exact (MK_COMB (@lem5914869) (@lem5914868 A B s f)). Qed.
Lemma lem5914871 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914872 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term603 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (MK_COMB (@lem5914870 A B s f) (@lem5914871 A B C op s g f)). Qed.
Lemma lem5914873 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914874 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term609 A B C op s g f) = (term610 A B C op s g f).
Proof. exact (MK_COMB (@lem5914873) (@lem5914872 A B C op s g f)). Qed.
Lemma lem5914875 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term605 A B s f x) = (term428 A B s f x).
Proof. exact (eq_refl (term605 A B s f x)). Qed.
Lemma lem5914876 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914877 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term611 A B s f x) = (term612 A B s f x).
Proof. exact (MK_COMB (@lem5914876) (@lem5914875 A B s f x)). Qed.
Lemma lem5914878 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914879 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term613 A B C x op s g f) = (term614 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914877 A B s f x) (@lem5914878 A B C op s g f)). Qed.
Lemma lem5914880 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term615 A B C op s g f) = (term616 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5914879 A B C x op s g f)). Qed.
Lemma lem5914881 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914882 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term604 A B C op s g f) = (term617 A B C op s g f).
Proof. exact (MK_COMB (@lem5914881 A) (@lem5914880 A B C op s g f)). Qed.
Lemma lem5914883 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term603 A B C op s g f) = (term604 A B C op s g f)) = ((term439 A B C op s g f) = (term617 A B C op s g f)).
Proof. exact (MK_COMB (@lem5914874 A B C op s g f) (@lem5914882 A B C op s g f)). Qed.
Lemma lem5914884 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term439 A B C op s g f) = (term617 A B C op s g f).
Proof. exact (EQ_MP (@lem5914883 A B C op s g f) (@lem5914864 A B C op s g f)). Qed.
Lemma lem5914886 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5914887 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (@lem5914886 A P Q). Qed.
Lemma lem5914888 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term618 A B C x op s g f) = (term619 A B C x op s g f).
Proof. exact (@lem5914887 A (term427 A B s f x) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914889 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term620 A B s f x y) = (term418 A B s f x y).
Proof. exact (eq_refl (term620 A B s f x y)). Qed.
Lemma lem5914890 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term621 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5914889 A B s f x y)). Qed.
Lemma lem5914891 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914892 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term622 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5914891 A) (@lem5914890 A B s f x)). Qed.
Lemma lem5914893 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914894 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term623 A B s f x) = (term612 A B s f x).
Proof. exact (MK_COMB (@lem5914893) (@lem5914892 A B s f x)). Qed.
Lemma lem5914895 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914896 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term618 A B C x op s g f) = (term614 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914894 A B s f x) (@lem5914895 A B C op s g f)). Qed.
Lemma lem5914897 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914898 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term624 A B C x op s g f) = (term625 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914897) (@lem5914896 A B C x op s g f)). Qed.
Lemma lem5914899 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term620 A B s f x y) = (term418 A B s f x y).
Proof. exact (eq_refl (term620 A B s f x y)). Qed.
Lemma lem5914900 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5914901 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term626 A B s f x y) = (term627 A B s f x y).
Proof. exact (MK_COMB (@lem5914900) (@lem5914899 A B s f x y)). Qed.
Lemma lem5914902 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5914903 {A B C : Type'} (x : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term628 A B C x y op s g f) = (term629 A B C x y op s g f).
Proof. exact (MK_COMB (@lem5914901 A B s f x y) (@lem5914902 A B C op s g f)). Qed.
Lemma lem5914904 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term630 A B C x op s g f) = (term631 A B C x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5914903 A B C x y op s g f)). Qed.
Lemma lem5914905 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914906 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term619 A B C x op s g f) = (term632 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914905 A) (@lem5914904 A B C x op s g f)). Qed.
Lemma lem5914907 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term618 A B C x op s g f) = (term619 A B C x op s g f)) = ((term614 A B C x op s g f) = (term632 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5914898 A B C x op s g f) (@lem5914906 A B C x op s g f)). Qed.
Lemma lem5914908 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term614 A B C x op s g f) = (term632 A B C x op s g f).
Proof. exact (EQ_MP (@lem5914907 A B C x op s g f) (@lem5914888 A B C x op s g f)). Qed.
Lemma lem5914909 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term616 A B C op s g f) = (term633 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5914908 A B C x op s g f)). Qed.
Lemma lem5914910 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914911 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term617 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (MK_COMB (@lem5914910 A) (@lem5914909 A B C op s g f)). Qed.
Lemma lem5914912 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term439 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (TRANS (@lem5914884 A B C op s g f) (@lem5914911 A B C op s g f)). Qed.
Lemma lem5914913 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term544 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (TRANS (@lem5914860 A B C op s g f) (@lem5914912 A B C op s g f)). Qed.
Lemma lem5914914 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914915 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term545 A B C op s g f) = (term635 A B C op s g f).
Proof. exact (MK_COMB (@lem5914914) (@lem5914913 A B C op s g f)). Qed.
Lemma lem5914916 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5914917 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term546 A B C op g f x s) = (term636 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914915 A B C op s g f) (@lem5914916 A x s)). Qed.
Lemma lem5914919 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5914920 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5914919 A P Q). Qed.
Lemma lem5914921 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term639 A B C op g f x s) = (term640 A B C op g f x s).
Proof. exact (@lem5914920 A (term633 A B C op s g f) (term155 A x s)). Qed.
Lemma lem5914922 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term641 A B C op s g f x) = (term632 A B C x op s g f).
Proof. exact (eq_refl (term641 A B C op s g f x)). Qed.
Lemma lem5914923 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term642 A B C op s g f) = (term633 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5914922 A B C x op s g f)). Qed.
Lemma lem5914924 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914925 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term643 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (MK_COMB (@lem5914924 A) (@lem5914923 A B C op s g f)). Qed.
Lemma lem5914926 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914927 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term644 A B C op s g f) = (term635 A B C op s g f).
Proof. exact (MK_COMB (@lem5914926) (@lem5914925 A B C op s g f)). Qed.
Lemma lem5914928 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5914929 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term639 A B C op g f x s) = (term636 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914927 A B C op s g f) (@lem5914928 A x s)). Qed.
Lemma lem5914930 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914931 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term645 A B C op g f x s) = (term646 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914930) (@lem5914929 A B C op g f x s)). Qed.
Lemma lem5914932 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term641 A B C op s g f x') = (term632 A B C x' op s g f).
Proof. exact (eq_refl (term641 A B C op s g f x')). Qed.
Lemma lem5914933 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914934 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term647 A B C op s g f x') = (term648 A B C x' op s g f).
Proof. exact (MK_COMB (@lem5914933) (@lem5914932 A B C x' op s g f)). Qed.
Lemma lem5914935 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5914936 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term649 A B C op g f x' x s) = (term650 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5914934 A B C x' op s g f) (@lem5914935 A x s)). Qed.
Lemma lem5914937 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term651 A B C op g f x s) = (term652 A B C op g f x s).
Proof. exact (fun_ext (fun x' : A => @lem5914936 A B C x' op g f x s)). Qed.
Lemma lem5914938 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914939 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term640 A B C op g f x s) = (term653 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914938 A) (@lem5914937 A B C op g f x s)). Qed.
Lemma lem5914940 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : ((term639 A B C op g f x s) = (term640 A B C op g f x s)) = ((term636 A B C op g f x s) = (term653 A B C op g f x s)).
Proof. exact (MK_COMB (@lem5914931 A B C op g f x s) (@lem5914939 A B C op g f x s)). Qed.
Lemma lem5914941 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term636 A B C op g f x s) = (term653 A B C op g f x s).
Proof. exact (EQ_MP (@lem5914940 A B C op g f x s) (@lem5914921 A B C op g f x s)). Qed.
Lemma lem5914943 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5914944 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5914943 A P Q). Qed.
Lemma lem5914945 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term654 A B C x' op g f x s) = (term655 A B C x' op g f x s).
Proof. exact (@lem5914944 A (term631 A B C x' op s g f) (term155 A x s)). Qed.
Lemma lem5914946 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term656 A B C x' op s g f y) = (term629 A B C x' y op s g f).
Proof. exact (eq_refl (term656 A B C x' op s g f y)). Qed.
Lemma lem5914947 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term657 A B C x' op s g f) = (term631 A B C x' op s g f).
Proof. exact (fun_ext (fun y : A => @lem5914946 A B C x' y op s g f)). Qed.
Lemma lem5914948 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914949 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term658 A B C x' op s g f) = (term632 A B C x' op s g f).
Proof. exact (MK_COMB (@lem5914948 A) (@lem5914947 A B C x' op s g f)). Qed.
Lemma lem5914950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914951 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term659 A B C x' op s g f) = (term648 A B C x' op s g f).
Proof. exact (MK_COMB (@lem5914950) (@lem5914949 A B C x' op s g f)). Qed.
Lemma lem5914952 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5914953 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term654 A B C x' op g f x s) = (term650 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5914951 A B C x' op s g f) (@lem5914952 A x s)). Qed.
Lemma lem5914954 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914955 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term660 A B C x' op g f x s) = (term661 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5914954) (@lem5914953 A B C x' op g f x s)). Qed.
Lemma lem5914956 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term656 A B C x' op s g f y) = (term629 A B C x' y op s g f).
Proof. exact (eq_refl (term656 A B C x' op s g f y)). Qed.
Lemma lem5914957 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914958 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term662 A B C x' op s g f y) = (term663 A B C x' y op s g f).
Proof. exact (MK_COMB (@lem5914957) (@lem5914956 A B C x' y op s g f)). Qed.
Lemma lem5914959 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5914960 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term664 A B C x' op g f y x s) = (term665 A B C x' y op g f x s).
Proof. exact (MK_COMB (@lem5914958 A B C x' y op s g f) (@lem5914959 A x s)). Qed.
Lemma lem5914961 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term666 A B C x' op g f x s) = (term667 A B C x' op g f x s).
Proof. exact (fun_ext (fun y : A => @lem5914960 A B C x' y op g f x s)). Qed.
Lemma lem5914962 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914963 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term655 A B C x' op g f x s) = (term668 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5914962 A) (@lem5914961 A B C x' op g f x s)). Qed.
Lemma lem5914964 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : ((term654 A B C x' op g f x s) = (term655 A B C x' op g f x s)) = ((term650 A B C x' op g f x s) = (term668 A B C x' op g f x s)).
Proof. exact (MK_COMB (@lem5914955 A B C x' op g f x s) (@lem5914963 A B C x' op g f x s)). Qed.
Lemma lem5914965 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term650 A B C x' op g f x s) = (term668 A B C x' op g f x s).
Proof. exact (EQ_MP (@lem5914964 A B C x' op g f x s) (@lem5914945 A B C x' op g f x s)). Qed.
Lemma lem5914966 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term652 A B C op g f x s) = (term669 A B C op g f x s).
Proof. exact (fun_ext (fun x' : A => @lem5914965 A B C x' op g f x s)). Qed.
Lemma lem5914967 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914968 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term653 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914967 A) (@lem5914966 A B C op g f x s)). Qed.
Lemma lem5914969 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term636 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (TRANS (@lem5914941 A B C op g f x s) (@lem5914968 A B C op g f x s)). Qed.
Lemma lem5914970 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term546 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (TRANS (@lem5914917 A B C op g f x s) (@lem5914969 A B C op g f x s)). Qed.
Lemma lem5914971 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914972 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term547 A B C op g f x s) = (term671 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914971) (@lem5914970 A B C op g f x s)). Qed.
Lemma lem5914973 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term565 A B C x op s g f) = (term565 A B C x op s g f).
Proof. exact (eq_refl (term565 A B C x op s g f)). Qed.
Lemma lem5914974 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term566 A B C x op s g f) = (term672 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914972 A B C op g f x s) (@lem5914973 A B C x op s g f)). Qed.
Lemma lem5914976 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5914977 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5914976 A P Q). Qed.
Lemma lem5914978 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term673 A B C x op s g f) = (term674 A B C x op s g f).
Proof. exact (@lem5914977 A (term669 A B C op g f x s) (term565 A B C x op s g f)). Qed.
Lemma lem5914979 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term675 A B C op g f x s x') = (term668 A B C x' op g f x s).
Proof. exact (eq_refl (term675 A B C op g f x s x')). Qed.
Lemma lem5914980 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term676 A B C op g f x s) = (term669 A B C op g f x s).
Proof. exact (fun_ext (fun x' : A => @lem5914979 A B C x' op g f x s)). Qed.
Lemma lem5914981 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914982 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term677 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914981 A) (@lem5914980 A B C op g f x s)). Qed.
Lemma lem5914983 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914984 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term678 A B C op g f x s) = (term671 A B C op g f x s).
Proof. exact (MK_COMB (@lem5914983) (@lem5914982 A B C op g f x s)). Qed.
Lemma lem5914985 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term565 A B C x op s g f) = (term565 A B C x op s g f).
Proof. exact (eq_refl (term565 A B C x op s g f)). Qed.
Lemma lem5914986 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term673 A B C x op s g f) = (term672 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914984 A B C op g f x s) (@lem5914985 A B C x op s g f)). Qed.
Lemma lem5914987 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5914988 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term679 A B C x op s g f) = (term680 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914987) (@lem5914986 A B C x op s g f)). Qed.
Lemma lem5914989 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term675 A B C op g f x s x') = (term668 A B C x' op g f x s).
Proof. exact (eq_refl (term675 A B C op g f x s x')). Qed.
Lemma lem5914990 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5914991 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term681 A B C op g f x s x') = (term682 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5914990) (@lem5914989 A B C x' op g f x s)). Qed.
Lemma lem5914992 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term565 A B C x op s g f) = (term565 A B C x op s g f).
Proof. exact (eq_refl (term565 A B C x op s g f)). Qed.
Lemma lem5914993 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term683 A B C x' x op s g f) = (term684 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5914991 A B C x' op g f x s) (@lem5914992 A B C x op s g f)). Qed.
Lemma lem5914994 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term685 A B C x op s g f) = (term686 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5914993 A B C x' x op s g f)). Qed.
Lemma lem5914995 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5914996 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term674 A B C x op s g f) = (term687 A B C x op s g f).
Proof. exact (MK_COMB (@lem5914995 A) (@lem5914994 A B C x op s g f)). Qed.
Lemma lem5914997 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term673 A B C x op s g f) = (term674 A B C x op s g f)) = ((term672 A B C x op s g f) = (term687 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5914988 A B C x op s g f) (@lem5914996 A B C x op s g f)). Qed.
Lemma lem5914998 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term672 A B C x op s g f) = (term687 A B C x op s g f).
Proof. exact (EQ_MP (@lem5914997 A B C x op s g f) (@lem5914978 A B C x op s g f)). Qed.
Lemma lem5915000 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5915001 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5915000 A P Q). Qed.
Lemma lem5915002 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term688 A B C x' x op s g f) = (term689 A B C x' x op s g f).
Proof. exact (@lem5915001 A (term667 A B C x' op g f x s) (term565 A B C x op s g f)). Qed.
Lemma lem5915003 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term690 A B C x' op g f x s y) = (term665 A B C x' y op g f x s).
Proof. exact (eq_refl (term690 A B C x' op g f x s y)). Qed.
Lemma lem5915004 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term691 A B C x' op g f x s) = (term667 A B C x' op g f x s).
Proof. exact (fun_ext (fun y : A => @lem5915003 A B C x' y op g f x s)). Qed.
Lemma lem5915005 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915006 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term692 A B C x' op g f x s) = (term668 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915005 A) (@lem5915004 A B C x' op g f x s)). Qed.
Lemma lem5915007 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915008 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term693 A B C x' op g f x s) = (term682 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915007) (@lem5915006 A B C x' op g f x s)). Qed.
Lemma lem5915009 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term565 A B C x op s g f) = (term565 A B C x op s g f).
Proof. exact (eq_refl (term565 A B C x op s g f)). Qed.
Lemma lem5915010 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term688 A B C x' x op s g f) = (term684 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915008 A B C x' op g f x s) (@lem5915009 A B C x op s g f)). Qed.
Lemma lem5915011 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915012 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term694 A B C x' x op s g f) = (term695 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915011) (@lem5915010 A B C x' x op s g f)). Qed.
Lemma lem5915013 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term690 A B C x' op g f x s y) = (term665 A B C x' y op g f x s).
Proof. exact (eq_refl (term690 A B C x' op g f x s y)). Qed.
Lemma lem5915014 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915015 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term696 A B C x' op g f x s y) = (term697 A B C x' y op g f x s).
Proof. exact (MK_COMB (@lem5915014) (@lem5915013 A B C x' y op g f x s)). Qed.
Lemma lem5915016 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term565 A B C x op s g f) = (term565 A B C x op s g f).
Proof. exact (eq_refl (term565 A B C x op s g f)). Qed.
Lemma lem5915017 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term698 A B C x' y x op s g f) = (term699 A B C x' y x op s g f).
Proof. exact (MK_COMB (@lem5915015 A B C x' y op g f x s) (@lem5915016 A B C x op s g f)). Qed.
Lemma lem5915018 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term700 A B C x' x op s g f) = (term701 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915017 A B C x' y x op s g f)). Qed.
Lemma lem5915019 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915020 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term689 A B C x' x op s g f) = (term702 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915019 A) (@lem5915018 A B C x' x op s g f)). Qed.
Lemma lem5915021 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term688 A B C x' x op s g f) = (term689 A B C x' x op s g f)) = ((term684 A B C x' x op s g f) = (term702 A B C x' x op s g f)).
Proof. exact (MK_COMB (@lem5915012 A B C x' x op s g f) (@lem5915020 A B C x' x op s g f)). Qed.
Lemma lem5915022 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term684 A B C x' x op s g f) = (term702 A B C x' x op s g f).
Proof. exact (EQ_MP (@lem5915021 A B C x' x op s g f) (@lem5915002 A B C x' x op s g f)). Qed.
Lemma lem5915023 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term686 A B C x op s g f) = (term703 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915022 A B C x' x op s g f)). Qed.
Lemma lem5915024 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915025 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term687 A B C x op s g f) = (term704 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915024 A) (@lem5915023 A B C x op s g f)). Qed.
Lemma lem5915026 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term672 A B C x op s g f) = (term704 A B C x op s g f).
Proof. exact (TRANS (@lem5914998 A B C x op s g f) (@lem5915025 A B C x op s g f)). Qed.
Lemma lem5915027 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term566 A B C x op s g f) = (term704 A B C x op s g f).
Proof. exact (TRANS (@lem5914974 A B C x op s g f) (@lem5915026 A B C x op s g f)). Qed.
Lemma lem5915028 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term467 A B x f s).
Proof. exact (eq_refl (term467 A B x f s)). Qed.
Lemma lem5915029 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term567 A B C x op s g f) = (term705 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915028 A B x f s) (@lem5915027 A B C x op s g f)). Qed.
Lemma lem5915031 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5915032 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (@lem5915031 A P Q). Qed.
Lemma lem5915033 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term706 A B C x op s g f) = (term707 A B C x op s g f).
Proof. exact (@lem5915032 A (term370 A B x f s) (term703 A B C x op s g f)). Qed.
Lemma lem5915034 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term708 A B C x op s g f x') = (term702 A B C x' x op s g f).
Proof. exact (eq_refl (term708 A B C x op s g f x')). Qed.
Lemma lem5915035 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term709 A B C x op s g f) = (term703 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915034 A B C x' x op s g f)). Qed.
Lemma lem5915036 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915037 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term710 A B C x op s g f) = (term704 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915036 A) (@lem5915035 A B C x op s g f)). Qed.
Lemma lem5915038 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term467 A B x f s).
Proof. exact (eq_refl (term467 A B x f s)). Qed.
Lemma lem5915039 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term706 A B C x op s g f) = (term705 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915038 A B x f s) (@lem5915037 A B C x op s g f)). Qed.
Lemma lem5915040 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915041 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term711 A B C x op s g f) = (term712 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915040) (@lem5915039 A B C x op s g f)). Qed.
Lemma lem5915042 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term708 A B C x op s g f x') = (term702 A B C x' x op s g f).
Proof. exact (eq_refl (term708 A B C x op s g f x')). Qed.
Lemma lem5915043 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term467 A B x f s).
Proof. exact (eq_refl (term467 A B x f s)). Qed.
Lemma lem5915044 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term713 A B C x op s g f x') = (term714 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915043 A B x f s) (@lem5915042 A B C x' x op s g f)). Qed.
Lemma lem5915045 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term715 A B C x op s g f) = (term716 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915044 A B C x' x op s g f)). Qed.
Lemma lem5915046 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915047 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term707 A B C x op s g f) = (term717 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915046 A) (@lem5915045 A B C x op s g f)). Qed.
Lemma lem5915048 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term706 A B C x op s g f) = (term707 A B C x op s g f)) = ((term705 A B C x op s g f) = (term717 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5915041 A B C x op s g f) (@lem5915047 A B C x op s g f)). Qed.
Lemma lem5915049 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term705 A B C x op s g f) = (term717 A B C x op s g f).
Proof. exact (EQ_MP (@lem5915048 A B C x op s g f) (@lem5915033 A B C x op s g f)). Qed.
Lemma lem5915051 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5915052 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (@lem5915051 A P Q). Qed.
Lemma lem5915053 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term718 A B C x' x op s g f) = (term719 A B C x' x op s g f).
Proof. exact (@lem5915052 A (term370 A B x f s) (term701 A B C x' x op s g f)). Qed.
Lemma lem5915054 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term720 A B C x' x op s g f y) = (term699 A B C x' y x op s g f).
Proof. exact (eq_refl (term720 A B C x' x op s g f y)). Qed.
Lemma lem5915055 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term721 A B C x' x op s g f) = (term701 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915054 A B C x' y x op s g f)). Qed.
Lemma lem5915056 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915057 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term722 A B C x' x op s g f) = (term702 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915056 A) (@lem5915055 A B C x' x op s g f)). Qed.
Lemma lem5915058 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term467 A B x f s).
Proof. exact (eq_refl (term467 A B x f s)). Qed.
Lemma lem5915059 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term718 A B C x' x op s g f) = (term714 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915058 A B x f s) (@lem5915057 A B C x' x op s g f)). Qed.
Lemma lem5915060 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915061 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term723 A B C x' x op s g f) = (term724 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915060) (@lem5915059 A B C x' x op s g f)). Qed.
Lemma lem5915062 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term720 A B C x' x op s g f y) = (term699 A B C x' y x op s g f).
Proof. exact (eq_refl (term720 A B C x' x op s g f y)). Qed.
Lemma lem5915063 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term467 A B x f s) = (term467 A B x f s).
Proof. exact (eq_refl (term467 A B x f s)). Qed.
Lemma lem5915064 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term725 A B C x' x op s g f y) = (term726 A B C x' y x op s g f).
Proof. exact (MK_COMB (@lem5915063 A B x f s) (@lem5915062 A B C x' y x op s g f)). Qed.
Lemma lem5915065 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term727 A B C x' x op s g f) = (term728 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915064 A B C x' y x op s g f)). Qed.
Lemma lem5915066 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915067 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term719 A B C x' x op s g f) = (term729 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915066 A) (@lem5915065 A B C x' x op s g f)). Qed.
Lemma lem5915068 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term718 A B C x' x op s g f) = (term719 A B C x' x op s g f)) = ((term714 A B C x' x op s g f) = (term729 A B C x' x op s g f)).
Proof. exact (MK_COMB (@lem5915061 A B C x' x op s g f) (@lem5915067 A B C x' x op s g f)). Qed.
Lemma lem5915069 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term714 A B C x' x op s g f) = (term729 A B C x' x op s g f).
Proof. exact (EQ_MP (@lem5915068 A B C x' x op s g f) (@lem5915053 A B C x' x op s g f)). Qed.
Lemma lem5915070 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term716 A B C x op s g f) = (term730 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915069 A B C x' x op s g f)). Qed.
Lemma lem5915071 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915072 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term717 A B C x op s g f) = (term731 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915071 A) (@lem5915070 A B C x op s g f)). Qed.
Lemma lem5915073 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term705 A B C x op s g f) = (term731 A B C x op s g f).
Proof. exact (TRANS (@lem5915049 A B C x op s g f) (@lem5915072 A B C x op s g f)). Qed.
Lemma lem5915074 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term567 A B C x op s g f) = (term731 A B C x op s g f).
Proof. exact (TRANS (@lem5915029 A B C x op s g f) (@lem5915073 A B C x op s g f)). Qed.
Lemma lem5915075 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term568 A B C x op g f) = (term732 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915074 A B C x op s g f)). Qed.
Lemma lem5915076 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5915077 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term569 A B C x op g f) = (term733 A B C x op g f).
Proof. exact (MK_COMB (@lem5915076 A) (@lem5915075 A B C x op g f)). Qed.
Lemma lem5915078 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term581 A B C op g f) = (term734 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5915077 A B C x op g f)). Qed.
Lemma lem5915079 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915080 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term592 A B C op g f) = (term735 A B C op g f).
Proof. exact (MK_COMB (@lem5915079 A) (@lem5915078 A B C op g f)). Qed.
Lemma lem5915081 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915082 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term594 A B C op g f) = (term736 A B C op g f).
Proof. exact (MK_COMB (@lem5915081) (@lem5915080 A B C op g f)). Qed.
Lemma lem5915084 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5915085 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (@lem5915084 A P Q). Qed.
Lemma lem5915086 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term530 A B s f x) = (term529 A B s f x).
Proof. exact (@lem5915085 A (@IN A x s) (term531 A B s f x)). Qed.
Lemma lem5915087 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5915088 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term537 A B s f x) = (term531 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5915087 A B s f x y)). Qed.
Lemma lem5915089 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915090 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term538 A B s f x) = (term539 A B s f x).
Proof. exact (MK_COMB (@lem5915089 A) (@lem5915088 A B s f x)). Qed.
Lemma lem5915091 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5915092 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term530 A B s f x) = (term540 A B s f x).
Proof. exact (MK_COMB (@lem5915091 A x s) (@lem5915090 A B s f x)). Qed.
Lemma lem5915093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915094 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term599 A B s f x) = (term600 A B s f x).
Proof. exact (MK_COMB (@lem5915093) (@lem5915092 A B s f x)). Qed.
Lemma lem5915095 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term532 A B s f x y) = (term415 A B s f x y).
Proof. exact (eq_refl (term532 A B s f x y)). Qed.
Lemma lem5915096 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term413 A x s).
Proof. exact (eq_refl (term413 A x s)). Qed.
Lemma lem5915097 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term533 A B s f x y) = (term418 A B s f x y).
Proof. exact (MK_COMB (@lem5915096 A x s) (@lem5915095 A B s f x y)). Qed.
Lemma lem5915098 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term534 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5915097 A B s f x y)). Qed.
Lemma lem5915099 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915100 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term529 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5915099 A) (@lem5915098 A B s f x)). Qed.
Lemma lem5915101 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : ((term530 A B s f x) = (term529 A B s f x)) = ((term540 A B s f x) = (term428 A B s f x)).
Proof. exact (MK_COMB (@lem5915094 A B s f x) (@lem5915100 A B s f x)). Qed.
Lemma lem5915102 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term540 A B s f x) = (term428 A B s f x).
Proof. exact (EQ_MP (@lem5915101 A B s f x) (@lem5915086 A B s f x)). Qed.
Lemma lem5915103 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term541 A B s f) = (term434 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5915102 A B s f x)). Qed.
Lemma lem5915104 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915105 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term542 A B s f) = (term435 A B s f).
Proof. exact (MK_COMB (@lem5915104 A) (@lem5915103 A B s f)). Qed.
Lemma lem5915106 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915107 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term543 A B s f) = (term437 A B s f).
Proof. exact (MK_COMB (@lem5915106) (@lem5915105 A B s f)). Qed.
Lemma lem5915108 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915109 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term544 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (MK_COMB (@lem5915107 A B s f) (@lem5915108 A B C op s g f)). Qed.
Lemma lem5915111 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5915112 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (@lem5915111 A P Q). Qed.
Lemma lem5915113 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term603 A B C op s g f) = (term604 A B C op s g f).
Proof. exact (@lem5915112 A (term434 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915114 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term605 A B s f x) = (term428 A B s f x).
Proof. exact (eq_refl (term605 A B s f x)). Qed.
Lemma lem5915115 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term606 A B s f) = (term434 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5915114 A B s f x)). Qed.
Lemma lem5915116 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915117 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term607 A B s f) = (term435 A B s f).
Proof. exact (MK_COMB (@lem5915116 A) (@lem5915115 A B s f)). Qed.
Lemma lem5915118 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915119 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term608 A B s f) = (term437 A B s f).
Proof. exact (MK_COMB (@lem5915118) (@lem5915117 A B s f)). Qed.
Lemma lem5915120 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915121 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term603 A B C op s g f) = (term439 A B C op s g f).
Proof. exact (MK_COMB (@lem5915119 A B s f) (@lem5915120 A B C op s g f)). Qed.
Lemma lem5915122 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915123 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term609 A B C op s g f) = (term610 A B C op s g f).
Proof. exact (MK_COMB (@lem5915122) (@lem5915121 A B C op s g f)). Qed.
Lemma lem5915124 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term605 A B s f x) = (term428 A B s f x).
Proof. exact (eq_refl (term605 A B s f x)). Qed.
Lemma lem5915125 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915126 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term611 A B s f x) = (term612 A B s f x).
Proof. exact (MK_COMB (@lem5915125) (@lem5915124 A B s f x)). Qed.
Lemma lem5915127 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915128 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term613 A B C x op s g f) = (term614 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915126 A B s f x) (@lem5915127 A B C op s g f)). Qed.
Lemma lem5915129 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term615 A B C op s g f) = (term616 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5915128 A B C x op s g f)). Qed.
Lemma lem5915130 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915131 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term604 A B C op s g f) = (term617 A B C op s g f).
Proof. exact (MK_COMB (@lem5915130 A) (@lem5915129 A B C op s g f)). Qed.
Lemma lem5915132 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term603 A B C op s g f) = (term604 A B C op s g f)) = ((term439 A B C op s g f) = (term617 A B C op s g f)).
Proof. exact (MK_COMB (@lem5915123 A B C op s g f) (@lem5915131 A B C op s g f)). Qed.
Lemma lem5915133 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term439 A B C op s g f) = (term617 A B C op s g f).
Proof. exact (EQ_MP (@lem5915132 A B C op s g f) (@lem5915113 A B C op s g f)). Qed.
Lemma lem5915135 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5915136 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (@lem5915135 A P Q). Qed.
Lemma lem5915137 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term618 A B C x op s g f) = (term619 A B C x op s g f).
Proof. exact (@lem5915136 A (term427 A B s f x) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915138 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term620 A B s f x y) = (term418 A B s f x y).
Proof. exact (eq_refl (term620 A B s f x y)). Qed.
Lemma lem5915139 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term621 A B s f x) = (term427 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5915138 A B s f x y)). Qed.
Lemma lem5915140 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915141 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term622 A B s f x) = (term428 A B s f x).
Proof. exact (MK_COMB (@lem5915140 A) (@lem5915139 A B s f x)). Qed.
Lemma lem5915142 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915143 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term623 A B s f x) = (term612 A B s f x).
Proof. exact (MK_COMB (@lem5915142) (@lem5915141 A B s f x)). Qed.
Lemma lem5915144 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915145 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term618 A B C x op s g f) = (term614 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915143 A B s f x) (@lem5915144 A B C op s g f)). Qed.
Lemma lem5915146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915147 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term624 A B C x op s g f) = (term625 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915146) (@lem5915145 A B C x op s g f)). Qed.
Lemma lem5915148 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term620 A B s f x y) = (term418 A B s f x y).
Proof. exact (eq_refl (term620 A B s f x y)). Qed.
Lemma lem5915149 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915150 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term626 A B s f x y) = (term627 A B s f x y).
Proof. exact (MK_COMB (@lem5915149) (@lem5915148 A B s f x y)). Qed.
Lemma lem5915151 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5915152 {A B C : Type'} (x : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term628 A B C x y op s g f) = (term629 A B C x y op s g f).
Proof. exact (MK_COMB (@lem5915150 A B s f x y) (@lem5915151 A B C op s g f)). Qed.
Lemma lem5915153 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term630 A B C x op s g f) = (term631 A B C x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915152 A B C x y op s g f)). Qed.
Lemma lem5915154 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915155 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term619 A B C x op s g f) = (term632 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915154 A) (@lem5915153 A B C x op s g f)). Qed.
Lemma lem5915156 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term618 A B C x op s g f) = (term619 A B C x op s g f)) = ((term614 A B C x op s g f) = (term632 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5915147 A B C x op s g f) (@lem5915155 A B C x op s g f)). Qed.
Lemma lem5915157 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term614 A B C x op s g f) = (term632 A B C x op s g f).
Proof. exact (EQ_MP (@lem5915156 A B C x op s g f) (@lem5915137 A B C x op s g f)). Qed.
Lemma lem5915158 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term616 A B C op s g f) = (term633 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5915157 A B C x op s g f)). Qed.
Lemma lem5915159 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915160 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term617 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (MK_COMB (@lem5915159 A) (@lem5915158 A B C op s g f)). Qed.
Lemma lem5915161 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term439 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (TRANS (@lem5915133 A B C op s g f) (@lem5915160 A B C op s g f)). Qed.
Lemma lem5915162 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term544 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (TRANS (@lem5915109 A B C op s g f) (@lem5915161 A B C op s g f)). Qed.
Lemma lem5915163 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915164 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term545 A B C op s g f) = (term635 A B C op s g f).
Proof. exact (MK_COMB (@lem5915163) (@lem5915162 A B C op s g f)). Qed.
Lemma lem5915165 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5915166 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term546 A B C op g f x s) = (term636 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915164 A B C op s g f) (@lem5915165 A x s)). Qed.
Lemma lem5915168 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5915169 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5915168 A P Q). Qed.
Lemma lem5915170 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term639 A B C op g f x s) = (term640 A B C op g f x s).
Proof. exact (@lem5915169 A (term633 A B C op s g f) (term155 A x s)). Qed.
Lemma lem5915171 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term641 A B C op s g f x) = (term632 A B C x op s g f).
Proof. exact (eq_refl (term641 A B C op s g f x)). Qed.
Lemma lem5915172 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term642 A B C op s g f) = (term633 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5915171 A B C x op s g f)). Qed.
Lemma lem5915173 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915174 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term643 A B C op s g f) = (term634 A B C op s g f).
Proof. exact (MK_COMB (@lem5915173 A) (@lem5915172 A B C op s g f)). Qed.
Lemma lem5915175 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915176 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term644 A B C op s g f) = (term635 A B C op s g f).
Proof. exact (MK_COMB (@lem5915175) (@lem5915174 A B C op s g f)). Qed.
Lemma lem5915177 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5915178 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term639 A B C op g f x s) = (term636 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915176 A B C op s g f) (@lem5915177 A x s)). Qed.
Lemma lem5915179 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915180 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term645 A B C op g f x s) = (term646 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915179) (@lem5915178 A B C op g f x s)). Qed.
Lemma lem5915181 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term641 A B C op s g f x') = (term632 A B C x' op s g f).
Proof. exact (eq_refl (term641 A B C op s g f x')). Qed.
Lemma lem5915182 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915183 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term647 A B C op s g f x') = (term648 A B C x' op s g f).
Proof. exact (MK_COMB (@lem5915182) (@lem5915181 A B C x' op s g f)). Qed.
Lemma lem5915184 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5915185 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term649 A B C op g f x' x s) = (term650 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915183 A B C x' op s g f) (@lem5915184 A x s)). Qed.
Lemma lem5915186 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term651 A B C op g f x s) = (term652 A B C op g f x s).
Proof. exact (fun_ext (fun x' : A => @lem5915185 A B C x' op g f x s)). Qed.
Lemma lem5915187 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915188 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term640 A B C op g f x s) = (term653 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915187 A) (@lem5915186 A B C op g f x s)). Qed.
Lemma lem5915189 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : ((term639 A B C op g f x s) = (term640 A B C op g f x s)) = ((term636 A B C op g f x s) = (term653 A B C op g f x s)).
Proof. exact (MK_COMB (@lem5915180 A B C op g f x s) (@lem5915188 A B C op g f x s)). Qed.
Lemma lem5915190 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term636 A B C op g f x s) = (term653 A B C op g f x s).
Proof. exact (EQ_MP (@lem5915189 A B C op g f x s) (@lem5915170 A B C op g f x s)). Qed.
Lemma lem5915192 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5915193 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5915192 A P Q). Qed.
Lemma lem5915194 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term654 A B C x' op g f x s) = (term655 A B C x' op g f x s).
Proof. exact (@lem5915193 A (term631 A B C x' op s g f) (term155 A x s)). Qed.
Lemma lem5915195 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term656 A B C x' op s g f y) = (term629 A B C x' y op s g f).
Proof. exact (eq_refl (term656 A B C x' op s g f y)). Qed.
Lemma lem5915196 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term657 A B C x' op s g f) = (term631 A B C x' op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915195 A B C x' y op s g f)). Qed.
Lemma lem5915197 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915198 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term658 A B C x' op s g f) = (term632 A B C x' op s g f).
Proof. exact (MK_COMB (@lem5915197 A) (@lem5915196 A B C x' op s g f)). Qed.
Lemma lem5915199 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915200 {A B C : Type'} (x' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term659 A B C x' op s g f) = (term648 A B C x' op s g f).
Proof. exact (MK_COMB (@lem5915199) (@lem5915198 A B C x' op s g f)). Qed.
Lemma lem5915201 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5915202 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term654 A B C x' op g f x s) = (term650 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915200 A B C x' op s g f) (@lem5915201 A x s)). Qed.
Lemma lem5915203 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915204 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term660 A B C x' op g f x s) = (term661 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915203) (@lem5915202 A B C x' op g f x s)). Qed.
Lemma lem5915205 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term656 A B C x' op s g f y) = (term629 A B C x' y op s g f).
Proof. exact (eq_refl (term656 A B C x' op s g f y)). Qed.
Lemma lem5915206 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915207 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term662 A B C x' op s g f y) = (term663 A B C x' y op s g f).
Proof. exact (MK_COMB (@lem5915206) (@lem5915205 A B C x' y op s g f)). Qed.
Lemma lem5915208 {A : Type'} (x : A) (s : A -> Prop) : (term155 A x s) = (term155 A x s).
Proof. exact (eq_refl (term155 A x s)). Qed.
Lemma lem5915209 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term664 A B C x' op g f y x s) = (term665 A B C x' y op g f x s).
Proof. exact (MK_COMB (@lem5915207 A B C x' y op s g f) (@lem5915208 A x s)). Qed.
Lemma lem5915210 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term666 A B C x' op g f x s) = (term667 A B C x' op g f x s).
Proof. exact (fun_ext (fun y : A => @lem5915209 A B C x' y op g f x s)). Qed.
Lemma lem5915211 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915212 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term655 A B C x' op g f x s) = (term668 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915211 A) (@lem5915210 A B C x' op g f x s)). Qed.
Lemma lem5915213 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : ((term654 A B C x' op g f x s) = (term655 A B C x' op g f x s)) = ((term650 A B C x' op g f x s) = (term668 A B C x' op g f x s)).
Proof. exact (MK_COMB (@lem5915204 A B C x' op g f x s) (@lem5915212 A B C x' op g f x s)). Qed.
Lemma lem5915214 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term650 A B C x' op g f x s) = (term668 A B C x' op g f x s).
Proof. exact (EQ_MP (@lem5915213 A B C x' op g f x s) (@lem5915194 A B C x' op g f x s)). Qed.
Lemma lem5915215 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term652 A B C op g f x s) = (term669 A B C op g f x s).
Proof. exact (fun_ext (fun x' : A => @lem5915214 A B C x' op g f x s)). Qed.
Lemma lem5915216 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915217 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term653 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915216 A) (@lem5915215 A B C op g f x s)). Qed.
Lemma lem5915218 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term636 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (TRANS (@lem5915190 A B C op g f x s) (@lem5915217 A B C op g f x s)). Qed.
Lemma lem5915219 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term546 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (TRANS (@lem5915166 A B C op g f x s) (@lem5915218 A B C op g f x s)). Qed.
Lemma lem5915220 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915221 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term547 A B C op g f x s) = (term671 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915220) (@lem5915219 A B C op g f x s)). Qed.
Lemma lem5915222 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term571 A B C x op s g f) = (term571 A B C x op s g f).
Proof. exact (eq_refl (term571 A B C x op s g f)). Qed.
Lemma lem5915223 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term572 A B C x op s g f) = (term737 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915221 A B C op g f x s) (@lem5915222 A B C x op s g f)). Qed.
Lemma lem5915225 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5915226 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5915225 A P Q). Qed.
Lemma lem5915227 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term738 A B C x op s g f) = (term739 A B C x op s g f).
Proof. exact (@lem5915226 A (term669 A B C op g f x s) (term571 A B C x op s g f)). Qed.
Lemma lem5915228 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term675 A B C op g f x s x') = (term668 A B C x' op g f x s).
Proof. exact (eq_refl (term675 A B C op g f x s x')). Qed.
Lemma lem5915229 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term676 A B C op g f x s) = (term669 A B C op g f x s).
Proof. exact (fun_ext (fun x' : A => @lem5915228 A B C x' op g f x s)). Qed.
Lemma lem5915230 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915231 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term677 A B C op g f x s) = (term670 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915230 A) (@lem5915229 A B C op g f x s)). Qed.
Lemma lem5915232 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915233 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term678 A B C op g f x s) = (term671 A B C op g f x s).
Proof. exact (MK_COMB (@lem5915232) (@lem5915231 A B C op g f x s)). Qed.
Lemma lem5915234 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term571 A B C x op s g f) = (term571 A B C x op s g f).
Proof. exact (eq_refl (term571 A B C x op s g f)). Qed.
Lemma lem5915235 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term738 A B C x op s g f) = (term737 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915233 A B C op g f x s) (@lem5915234 A B C x op s g f)). Qed.
Lemma lem5915236 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915237 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term740 A B C x op s g f) = (term741 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915236) (@lem5915235 A B C x op s g f)). Qed.
Lemma lem5915238 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term675 A B C op g f x s x') = (term668 A B C x' op g f x s).
Proof. exact (eq_refl (term675 A B C op g f x s x')). Qed.
Lemma lem5915239 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915240 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term681 A B C op g f x s x') = (term682 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915239) (@lem5915238 A B C x' op g f x s)). Qed.
Lemma lem5915241 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term571 A B C x op s g f) = (term571 A B C x op s g f).
Proof. exact (eq_refl (term571 A B C x op s g f)). Qed.
Lemma lem5915242 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term742 A B C x' x op s g f) = (term743 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915240 A B C x' op g f x s) (@lem5915241 A B C x op s g f)). Qed.
Lemma lem5915243 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term744 A B C x op s g f) = (term745 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915242 A B C x' x op s g f)). Qed.
Lemma lem5915244 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915245 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term739 A B C x op s g f) = (term746 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915244 A) (@lem5915243 A B C x op s g f)). Qed.
Lemma lem5915246 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term738 A B C x op s g f) = (term739 A B C x op s g f)) = ((term737 A B C x op s g f) = (term746 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5915237 A B C x op s g f) (@lem5915245 A B C x op s g f)). Qed.
Lemma lem5915247 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term737 A B C x op s g f) = (term746 A B C x op s g f).
Proof. exact (EQ_MP (@lem5915246 A B C x op s g f) (@lem5915227 A B C x op s g f)). Qed.
Lemma lem5915249 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5915250 {A : Type'} (P : A -> Prop) (Q : Prop) : (term637 A P Q) = (term638 A P Q).
Proof. exact (@lem5915249 A P Q). Qed.
Lemma lem5915251 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term747 A B C x' x op s g f) = (term748 A B C x' x op s g f).
Proof. exact (@lem5915250 A (term667 A B C x' op g f x s) (term571 A B C x op s g f)). Qed.
Lemma lem5915252 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term690 A B C x' op g f x s y) = (term665 A B C x' y op g f x s).
Proof. exact (eq_refl (term690 A B C x' op g f x s y)). Qed.
Lemma lem5915253 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term691 A B C x' op g f x s) = (term667 A B C x' op g f x s).
Proof. exact (fun_ext (fun y : A => @lem5915252 A B C x' y op g f x s)). Qed.
Lemma lem5915254 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915255 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term692 A B C x' op g f x s) = (term668 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915254 A) (@lem5915253 A B C x' op g f x s)). Qed.
Lemma lem5915256 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915257 {A B C : Type'} (x' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term693 A B C x' op g f x s) = (term682 A B C x' op g f x s).
Proof. exact (MK_COMB (@lem5915256) (@lem5915255 A B C x' op g f x s)). Qed.
Lemma lem5915258 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term571 A B C x op s g f) = (term571 A B C x op s g f).
Proof. exact (eq_refl (term571 A B C x op s g f)). Qed.
Lemma lem5915259 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term747 A B C x' x op s g f) = (term743 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915257 A B C x' op g f x s) (@lem5915258 A B C x op s g f)). Qed.
Lemma lem5915260 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915261 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term749 A B C x' x op s g f) = (term750 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915260) (@lem5915259 A B C x' x op s g f)). Qed.
Lemma lem5915262 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term690 A B C x' op g f x s y) = (term665 A B C x' y op g f x s).
Proof. exact (eq_refl (term690 A B C x' op g f x s y)). Qed.
Lemma lem5915263 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915264 {A B C : Type'} (x' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) : (term696 A B C x' op g f x s y) = (term697 A B C x' y op g f x s).
Proof. exact (MK_COMB (@lem5915263) (@lem5915262 A B C x' y op g f x s)). Qed.
Lemma lem5915265 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term571 A B C x op s g f) = (term571 A B C x op s g f).
Proof. exact (eq_refl (term571 A B C x op s g f)). Qed.
Lemma lem5915266 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term751 A B C x' y x op s g f) = (term752 A B C x' y x op s g f).
Proof. exact (MK_COMB (@lem5915264 A B C x' y op g f x s) (@lem5915265 A B C x op s g f)). Qed.
Lemma lem5915267 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term753 A B C x' x op s g f) = (term754 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915266 A B C x' y x op s g f)). Qed.
Lemma lem5915268 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915269 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term748 A B C x' x op s g f) = (term755 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915268 A) (@lem5915267 A B C x' x op s g f)). Qed.
Lemma lem5915270 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term747 A B C x' x op s g f) = (term748 A B C x' x op s g f)) = ((term743 A B C x' x op s g f) = (term755 A B C x' x op s g f)).
Proof. exact (MK_COMB (@lem5915261 A B C x' x op s g f) (@lem5915269 A B C x' x op s g f)). Qed.
Lemma lem5915271 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term743 A B C x' x op s g f) = (term755 A B C x' x op s g f).
Proof. exact (EQ_MP (@lem5915270 A B C x' x op s g f) (@lem5915251 A B C x' x op s g f)). Qed.
Lemma lem5915272 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term745 A B C x op s g f) = (term756 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915271 A B C x' x op s g f)). Qed.
Lemma lem5915273 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915274 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term746 A B C x op s g f) = (term757 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915273 A) (@lem5915272 A B C x op s g f)). Qed.
Lemma lem5915275 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term737 A B C x op s g f) = (term757 A B C x op s g f).
Proof. exact (TRANS (@lem5915247 A B C x op s g f) (@lem5915274 A B C x op s g f)). Qed.
Lemma lem5915276 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term572 A B C x op s g f) = (term757 A B C x op s g f).
Proof. exact (TRANS (@lem5915223 A B C x op s g f) (@lem5915275 A B C x op s g f)). Qed.
Lemma lem5915277 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5915278 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term573 A B C x op s g f) = (term758 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915277 A B x f s) (@lem5915276 A B C x op s g f)). Qed.
Lemma lem5915280 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5915281 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (@lem5915280 A P Q). Qed.
Lemma lem5915282 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term759 A B C x op s g f) = (term760 A B C x op s g f).
Proof. exact (@lem5915281 A (term471 A B x f s) (term756 A B C x op s g f)). Qed.
Lemma lem5915283 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term761 A B C x op s g f x') = (term755 A B C x' x op s g f).
Proof. exact (eq_refl (term761 A B C x op s g f x')). Qed.
Lemma lem5915284 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term762 A B C x op s g f) = (term756 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915283 A B C x' x op s g f)). Qed.
Lemma lem5915285 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915286 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term763 A B C x op s g f) = (term757 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915285 A) (@lem5915284 A B C x op s g f)). Qed.
Lemma lem5915287 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5915288 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term759 A B C x op s g f) = (term758 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915287 A B x f s) (@lem5915286 A B C x op s g f)). Qed.
Lemma lem5915289 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915290 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term764 A B C x op s g f) = (term765 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915289) (@lem5915288 A B C x op s g f)). Qed.
Lemma lem5915291 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term761 A B C x op s g f x') = (term755 A B C x' x op s g f).
Proof. exact (eq_refl (term761 A B C x op s g f x')). Qed.
Lemma lem5915292 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5915293 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term766 A B C x op s g f x') = (term767 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915292 A B x f s) (@lem5915291 A B C x' x op s g f)). Qed.
Lemma lem5915294 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term768 A B C x op s g f) = (term769 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915293 A B C x' x op s g f)). Qed.
Lemma lem5915295 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915296 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term760 A B C x op s g f) = (term770 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915295 A) (@lem5915294 A B C x op s g f)). Qed.
Lemma lem5915297 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term759 A B C x op s g f) = (term760 A B C x op s g f)) = ((term758 A B C x op s g f) = (term770 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5915290 A B C x op s g f) (@lem5915296 A B C x op s g f)). Qed.
Lemma lem5915298 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term758 A B C x op s g f) = (term770 A B C x op s g f).
Proof. exact (EQ_MP (@lem5915297 A B C x op s g f) (@lem5915282 A B C x op s g f)). Qed.
Lemma lem5915300 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5915301 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (@lem5915300 A P Q). Qed.
Lemma lem5915302 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term771 A B C x' x op s g f) = (term772 A B C x' x op s g f).
Proof. exact (@lem5915301 A (term471 A B x f s) (term754 A B C x' x op s g f)). Qed.
Lemma lem5915303 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term773 A B C x' x op s g f y) = (term752 A B C x' y x op s g f).
Proof. exact (eq_refl (term773 A B C x' x op s g f y)). Qed.
Lemma lem5915304 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term774 A B C x' x op s g f) = (term754 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915303 A B C x' y x op s g f)). Qed.
Lemma lem5915305 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915306 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term775 A B C x' x op s g f) = (term755 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915305 A) (@lem5915304 A B C x' x op s g f)). Qed.
Lemma lem5915307 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5915308 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term771 A B C x' x op s g f) = (term767 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915307 A B x f s) (@lem5915306 A B C x' x op s g f)). Qed.
Lemma lem5915309 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915310 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term776 A B C x' x op s g f) = (term777 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915309) (@lem5915308 A B C x' x op s g f)). Qed.
Lemma lem5915311 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term773 A B C x' x op s g f y) = (term752 A B C x' y x op s g f).
Proof. exact (eq_refl (term773 A B C x' x op s g f y)). Qed.
Lemma lem5915312 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term479 A B x f s) = (term479 A B x f s).
Proof. exact (eq_refl (term479 A B x f s)). Qed.
Lemma lem5915313 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term778 A B C x' x op s g f y) = (term779 A B C x' y x op s g f).
Proof. exact (MK_COMB (@lem5915312 A B x f s) (@lem5915311 A B C x' y x op s g f)). Qed.
Lemma lem5915314 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term780 A B C x' x op s g f) = (term781 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915313 A B C x' y x op s g f)). Qed.
Lemma lem5915315 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915316 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term772 A B C x' x op s g f) = (term782 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915315 A) (@lem5915314 A B C x' x op s g f)). Qed.
Lemma lem5915317 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term771 A B C x' x op s g f) = (term772 A B C x' x op s g f)) = ((term767 A B C x' x op s g f) = (term782 A B C x' x op s g f)).
Proof. exact (MK_COMB (@lem5915310 A B C x' x op s g f) (@lem5915316 A B C x' x op s g f)). Qed.
Lemma lem5915318 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term767 A B C x' x op s g f) = (term782 A B C x' x op s g f).
Proof. exact (EQ_MP (@lem5915317 A B C x' x op s g f) (@lem5915302 A B C x' x op s g f)). Qed.
Lemma lem5915319 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term769 A B C x op s g f) = (term783 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915318 A B C x' x op s g f)). Qed.
Lemma lem5915320 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915321 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term770 A B C x op s g f) = (term784 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915320 A) (@lem5915319 A B C x op s g f)). Qed.
Lemma lem5915322 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term758 A B C x op s g f) = (term784 A B C x op s g f).
Proof. exact (TRANS (@lem5915298 A B C x op s g f) (@lem5915321 A B C x op s g f)). Qed.
Lemma lem5915323 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term573 A B C x op s g f) = (term784 A B C x op s g f).
Proof. exact (TRANS (@lem5915278 A B C x op s g f) (@lem5915322 A B C x op s g f)). Qed.
Lemma lem5915324 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term574 A B C x op g f) = (term785 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915323 A B C x op s g f)). Qed.
Lemma lem5915325 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5915326 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term575 A B C x op g f) = (term786 A B C x op g f).
Proof. exact (MK_COMB (@lem5915325 A) (@lem5915324 A B C x op g f)). Qed.
Lemma lem5915327 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term582 A B C op g f) = (term787 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5915326 A B C x op g f)). Qed.
Lemma lem5915328 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915329 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term597 A B C op g f) = (term788 A B C op g f).
Proof. exact (MK_COMB (@lem5915328 A) (@lem5915327 A B C op g f)). Qed.
Lemma lem5915330 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term598 A B C op g f) = (term789 A B C op g f).
Proof. exact (MK_COMB (@lem5915082 A B C op g f) (@lem5915329 A B C op g f)). Qed.
Lemma lem5915332 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5915333 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (@lem5915332 A P Q). Qed.
Lemma lem5915334 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term790 A B C op g f) = (term791 A B C op g f).
Proof. exact (@lem5915333 A (term734 A B C op g f) (term787 A B C op g f)). Qed.
Lemma lem5915335 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term792 A B C op g f x) = (term733 A B C x op g f).
Proof. exact (eq_refl (term792 A B C op g f x)). Qed.
Lemma lem5915336 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term793 A B C op g f) = (term734 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5915335 A B C x op g f)). Qed.
Lemma lem5915337 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915338 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term794 A B C op g f) = (term735 A B C op g f).
Proof. exact (MK_COMB (@lem5915337 A) (@lem5915336 A B C op g f)). Qed.
Lemma lem5915339 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915340 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term795 A B C op g f) = (term736 A B C op g f).
Proof. exact (MK_COMB (@lem5915339) (@lem5915338 A B C op g f)). Qed.
Lemma lem5915341 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term796 A B C op g f x) = (term786 A B C x op g f).
Proof. exact (eq_refl (term796 A B C op g f x)). Qed.
Lemma lem5915342 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term797 A B C op g f) = (term787 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5915341 A B C x op g f)). Qed.
Lemma lem5915343 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915344 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term798 A B C op g f) = (term788 A B C op g f).
Proof. exact (MK_COMB (@lem5915343 A) (@lem5915342 A B C op g f)). Qed.
Lemma lem5915345 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term790 A B C op g f) = (term789 A B C op g f).
Proof. exact (MK_COMB (@lem5915340 A B C op g f) (@lem5915344 A B C op g f)). Qed.
Lemma lem5915346 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915347 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term799 A B C op g f) = (term800 A B C op g f).
Proof. exact (MK_COMB (@lem5915346) (@lem5915345 A B C op g f)). Qed.
Lemma lem5915348 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term792 A B C op g f x) = (term733 A B C x op g f).
Proof. exact (eq_refl (term792 A B C op g f x)). Qed.
Lemma lem5915349 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915350 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term801 A B C op g f x) = (term802 A B C x op g f).
Proof. exact (MK_COMB (@lem5915349) (@lem5915348 A B C x op g f)). Qed.
Lemma lem5915351 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term796 A B C op g f x) = (term786 A B C x op g f).
Proof. exact (eq_refl (term796 A B C op g f x)). Qed.
Lemma lem5915352 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term803 A B C op g f x) = (term804 A B C x op g f).
Proof. exact (MK_COMB (@lem5915350 A B C x op g f) (@lem5915351 A B C x op g f)). Qed.
Lemma lem5915353 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term805 A B C op g f) = (term806 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5915352 A B C x op g f)). Qed.
Lemma lem5915354 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915355 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term791 A B C op g f) = (term807 A B C op g f).
Proof. exact (MK_COMB (@lem5915354 A) (@lem5915353 A B C op g f)). Qed.
Lemma lem5915356 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : ((term790 A B C op g f) = (term791 A B C op g f)) = ((term789 A B C op g f) = (term807 A B C op g f)).
Proof. exact (MK_COMB (@lem5915347 A B C op g f) (@lem5915355 A B C op g f)). Qed.
Lemma lem5915357 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term789 A B C op g f) = (term807 A B C op g f).
Proof. exact (EQ_MP (@lem5915356 A B C op g f) (@lem5915334 A B C op g f)). Qed.
Lemma lem5915359 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5915360 {A : Type'} (P : type686 A) (Q : type686 A) : (term506 A P Q) = (term505 A P Q).
Proof. exact (@lem5915359 (A -> Prop) P Q). Qed.
Lemma lem5915361 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term808 A B C x op g f) = (term809 A B C x op g f).
Proof. exact (@lem5915360 A (term732 A B C x op g f) (term785 A B C x op g f)). Qed.
Lemma lem5915362 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term810 A B C x op g f s) = (term731 A B C x op s g f).
Proof. exact (eq_refl (term810 A B C x op g f s)). Qed.
Lemma lem5915363 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term811 A B C x op g f) = (term732 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915362 A B C x op s g f)). Qed.
Lemma lem5915364 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5915365 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term812 A B C x op g f) = (term733 A B C x op g f).
Proof. exact (MK_COMB (@lem5915364 A) (@lem5915363 A B C x op g f)). Qed.
Lemma lem5915366 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915367 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term813 A B C x op g f) = (term802 A B C x op g f).
Proof. exact (MK_COMB (@lem5915366) (@lem5915365 A B C x op g f)). Qed.
Lemma lem5915368 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term814 A B C x op g f s) = (term784 A B C x op s g f).
Proof. exact (eq_refl (term814 A B C x op g f s)). Qed.
Lemma lem5915369 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term815 A B C x op g f) = (term785 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915368 A B C x op s g f)). Qed.
Lemma lem5915370 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5915371 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term816 A B C x op g f) = (term786 A B C x op g f).
Proof. exact (MK_COMB (@lem5915370 A) (@lem5915369 A B C x op g f)). Qed.
Lemma lem5915372 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term808 A B C x op g f) = (term804 A B C x op g f).
Proof. exact (MK_COMB (@lem5915367 A B C x op g f) (@lem5915371 A B C x op g f)). Qed.
Lemma lem5915373 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915374 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term817 A B C x op g f) = (term818 A B C x op g f).
Proof. exact (MK_COMB (@lem5915373) (@lem5915372 A B C x op g f)). Qed.
Lemma lem5915375 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term810 A B C x op g f s) = (term731 A B C x op s g f).
Proof. exact (eq_refl (term810 A B C x op g f s)). Qed.
Lemma lem5915376 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915377 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term819 A B C x op g f s) = (term820 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915376) (@lem5915375 A B C x op s g f)). Qed.
Lemma lem5915378 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term814 A B C x op g f s) = (term784 A B C x op s g f).
Proof. exact (eq_refl (term814 A B C x op g f s)). Qed.
Lemma lem5915379 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term821 A B C x op g f s) = (term822 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915377 A B C x op s g f) (@lem5915378 A B C x op s g f)). Qed.
Lemma lem5915380 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term823 A B C x op g f) = (term824 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915379 A B C x op s g f)). Qed.
Lemma lem5915381 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5915382 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term809 A B C x op g f) = (term825 A B C x op g f).
Proof. exact (MK_COMB (@lem5915381 A) (@lem5915380 A B C x op g f)). Qed.
Lemma lem5915383 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : ((term808 A B C x op g f) = (term809 A B C x op g f)) = ((term804 A B C x op g f) = (term825 A B C x op g f)).
Proof. exact (MK_COMB (@lem5915374 A B C x op g f) (@lem5915382 A B C x op g f)). Qed.
Lemma lem5915384 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term804 A B C x op g f) = (term825 A B C x op g f).
Proof. exact (EQ_MP (@lem5915383 A B C x op g f) (@lem5915361 A B C x op g f)). Qed.
Lemma lem5915386 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5915387 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (@lem5915386 A P Q). Qed.
Lemma lem5915388 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term826 A B C x op s g f) = (term827 A B C x op s g f).
Proof. exact (@lem5915387 A (term730 A B C x op s g f) (term783 A B C x op s g f)). Qed.
Lemma lem5915389 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term828 A B C x op s g f x') = (term729 A B C x' x op s g f).
Proof. exact (eq_refl (term828 A B C x op s g f x')). Qed.
Lemma lem5915390 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term829 A B C x op s g f) = (term730 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915389 A B C x' x op s g f)). Qed.
Lemma lem5915391 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915392 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term830 A B C x op s g f) = (term731 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915391 A) (@lem5915390 A B C x op s g f)). Qed.
Lemma lem5915393 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915394 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term831 A B C x op s g f) = (term820 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915393) (@lem5915392 A B C x op s g f)). Qed.
Lemma lem5915395 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term832 A B C x op s g f x') = (term782 A B C x' x op s g f).
Proof. exact (eq_refl (term832 A B C x op s g f x')). Qed.
Lemma lem5915396 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term833 A B C x op s g f) = (term783 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915395 A B C x' x op s g f)). Qed.
Lemma lem5915397 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915398 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term834 A B C x op s g f) = (term784 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915397 A) (@lem5915396 A B C x op s g f)). Qed.
Lemma lem5915399 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term826 A B C x op s g f) = (term822 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915394 A B C x op s g f) (@lem5915398 A B C x op s g f)). Qed.
Lemma lem5915400 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915401 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term835 A B C x op s g f) = (term836 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915400) (@lem5915399 A B C x op s g f)). Qed.
Lemma lem5915402 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term828 A B C x op s g f x') = (term729 A B C x' x op s g f).
Proof. exact (eq_refl (term828 A B C x op s g f x')). Qed.
Lemma lem5915403 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915404 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term837 A B C x op s g f x') = (term838 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915403) (@lem5915402 A B C x' x op s g f)). Qed.
Lemma lem5915405 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term832 A B C x op s g f x') = (term782 A B C x' x op s g f).
Proof. exact (eq_refl (term832 A B C x op s g f x')). Qed.
Lemma lem5915406 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term839 A B C x op s g f x') = (term840 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915404 A B C x' x op s g f) (@lem5915405 A B C x' x op s g f)). Qed.
Lemma lem5915407 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term841 A B C x op s g f) = (term842 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915406 A B C x' x op s g f)). Qed.
Lemma lem5915408 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915409 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term827 A B C x op s g f) = (term843 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915408 A) (@lem5915407 A B C x op s g f)). Qed.
Lemma lem5915410 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term826 A B C x op s g f) = (term827 A B C x op s g f)) = ((term822 A B C x op s g f) = (term843 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5915401 A B C x op s g f) (@lem5915409 A B C x op s g f)). Qed.
Lemma lem5915411 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term822 A B C x op s g f) = (term843 A B C x op s g f).
Proof. exact (EQ_MP (@lem5915410 A B C x op s g f) (@lem5915388 A B C x op s g f)). Qed.
Lemma lem5915413 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5915414 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term504 A P Q) = (term503 A P Q).
Proof. exact (@lem5915413 A P Q). Qed.
Lemma lem5915415 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term844 A B C x' x op s g f) = (term845 A B C x' x op s g f).
Proof. exact (@lem5915414 A (term728 A B C x' x op s g f) (term781 A B C x' x op s g f)). Qed.
Lemma lem5915416 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term846 A B C x' x op s g f y) = (term726 A B C x' y x op s g f).
Proof. exact (eq_refl (term846 A B C x' x op s g f y)). Qed.
Lemma lem5915417 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term847 A B C x' x op s g f) = (term728 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915416 A B C x' y x op s g f)). Qed.
Lemma lem5915418 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915419 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term848 A B C x' x op s g f) = (term729 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915418 A) (@lem5915417 A B C x' x op s g f)). Qed.
Lemma lem5915420 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915421 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term849 A B C x' x op s g f) = (term838 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915420) (@lem5915419 A B C x' x op s g f)). Qed.
Lemma lem5915422 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term850 A B C x' x op s g f y) = (term779 A B C x' y x op s g f).
Proof. exact (eq_refl (term850 A B C x' x op s g f y)). Qed.
Lemma lem5915423 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term851 A B C x' x op s g f) = (term781 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915422 A B C x' y x op s g f)). Qed.
Lemma lem5915424 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915425 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term852 A B C x' x op s g f) = (term782 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915424 A) (@lem5915423 A B C x' x op s g f)). Qed.
Lemma lem5915426 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term844 A B C x' x op s g f) = (term840 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915421 A B C x' x op s g f) (@lem5915425 A B C x' x op s g f)). Qed.
Lemma lem5915427 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915428 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term853 A B C x' x op s g f) = (term854 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915427) (@lem5915426 A B C x' x op s g f)). Qed.
Lemma lem5915429 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term846 A B C x' x op s g f y) = (term726 A B C x' y x op s g f).
Proof. exact (eq_refl (term846 A B C x' x op s g f y)). Qed.
Lemma lem5915430 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5915431 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term855 A B C x' x op s g f y) = (term856 A B C x' y x op s g f).
Proof. exact (MK_COMB (@lem5915430) (@lem5915429 A B C x' y x op s g f)). Qed.
Lemma lem5915432 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term850 A B C x' x op s g f y) = (term779 A B C x' y x op s g f).
Proof. exact (eq_refl (term850 A B C x' x op s g f y)). Qed.
Lemma lem5915433 {A B C : Type'} (x' : A) (y : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term857 A B C x' x op s g f y) = (term858 A B C x' y x op s g f).
Proof. exact (MK_COMB (@lem5915431 A B C x' y x op s g f) (@lem5915432 A B C x' y x op s g f)). Qed.
Lemma lem5915434 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term859 A B C x' x op s g f) = (term860 A B C x' x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5915433 A B C x' y x op s g f)). Qed.
Lemma lem5915435 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915436 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term845 A B C x' x op s g f) = (term861 A B C x' x op s g f).
Proof. exact (MK_COMB (@lem5915435 A) (@lem5915434 A B C x' x op s g f)). Qed.
Lemma lem5915437 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term844 A B C x' x op s g f) = (term845 A B C x' x op s g f)) = ((term840 A B C x' x op s g f) = (term861 A B C x' x op s g f)).
Proof. exact (MK_COMB (@lem5915428 A B C x' x op s g f) (@lem5915436 A B C x' x op s g f)). Qed.
Lemma lem5915438 {A B C : Type'} (x' : A) (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term840 A B C x' x op s g f) = (term861 A B C x' x op s g f).
Proof. exact (EQ_MP (@lem5915437 A B C x' x op s g f) (@lem5915415 A B C x' x op s g f)). Qed.
Lemma lem5915439 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term842 A B C x op s g f) = (term862 A B C x op s g f).
Proof. exact (fun_ext (fun x' : A => @lem5915438 A B C x' x op s g f)). Qed.
Lemma lem5915440 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915441 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term843 A B C x op s g f) = (term863 A B C x op s g f).
Proof. exact (MK_COMB (@lem5915440 A) (@lem5915439 A B C x op s g f)). Qed.
Lemma lem5915442 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term822 A B C x op s g f) = (term863 A B C x op s g f).
Proof. exact (TRANS (@lem5915411 A B C x op s g f) (@lem5915441 A B C x op s g f)). Qed.
Lemma lem5915443 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term824 A B C x op g f) = (term864 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915442 A B C x op s g f)). Qed.
Lemma lem5915444 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem5915445 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term825 A B C x op g f) = (term865 A B C x op g f).
Proof. exact (MK_COMB (@lem5915444 A) (@lem5915443 A B C x op g f)). Qed.
Lemma lem5915446 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term804 A B C x op g f) = (term865 A B C x op g f).
Proof. exact (TRANS (@lem5915384 A B C x op g f) (@lem5915445 A B C x op g f)). Qed.
Lemma lem5915447 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term806 A B C op g f) = (term866 A B C op g f).
Proof. exact (fun_ext (fun x : A => @lem5915446 A B C x op g f)). Qed.
Lemma lem5915448 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915449 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term807 A B C op g f) = (term867 A B C op g f).
Proof. exact (MK_COMB (@lem5915448 A) (@lem5915447 A B C op g f)). Qed.
Lemma lem5915450 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term789 A B C op g f) = (term867 A B C op g f).
Proof. exact (TRANS (@lem5915357 A B C op g f) (@lem5915449 A B C op g f)). Qed.
Lemma lem5915451 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term598 A B C op g f) = (term867 A B C op g f).
Proof. exact (TRANS (@lem5915330 A B C op g f) (@lem5915450 A B C op g f)). Qed.
Lemma lem5915452 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term502 A B C op g f) = (term867 A B C op g f).
Proof. exact (TRANS (@lem5914833 A B C op g f) (@lem5915451 A B C op g f)). Qed.
Lemma lem5915453 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term400 A B C op g f) = (term867 A B C op g f).
Proof. exact (TRANS (@lem5913555 A B C op g f) (@lem5915452 A B C op g f)). Qed.
Lemma lem5915454 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term400 A B C op g f) : term867 A B C op g f.
Proof. exact (EQ_MP (@lem5915453 A B C op g f) (@lem5913304 A B C op g f h1)). Qed.
Lemma lem5915465 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term868 A y f x s) = (term869 A y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem5915468 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term360 A y f x s) = (term360 A y f x s).
Proof. exact (eq_refl (term360 A y f x s)). Qed.
Lemma lem5915469 {A : Type'} (P : A -> Prop) : (term870 A P) = (term871 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem5915470 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term872 A y f s) = (term873 A y f s).
Proof. exact (@lem5915469 A (term361 A y f s)). Qed.
Lemma lem5915471 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term874 A y f s x) = (term360 A y f x s).
Proof. exact (eq_refl (term874 A y f s x)). Qed.
Lemma lem5915472 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5915473 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term875 A y f s x) = (term868 A y f x s).
Proof. exact (MK_COMB (@lem5915472) (@lem5915471 A y f x s)). Qed.
Lemma lem5915474 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term875 A y f s x) = (term869 A y f x s).
Proof. exact (TRANS (@lem5915473 A y f x s) (@lem5915465 A y f x s)). Qed.
Lemma lem5915475 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term876 A y f s) = (term877 A y f s).
Proof. exact (fun_ext (fun x : A => @lem5915474 A y f x s)). Qed.
Lemma lem5915476 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5915477 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term873 A y f s) = (term878 A y f s).
Proof. exact (MK_COMB (@lem5915476 A) (@lem5915475 A y f s)). Qed.
Lemma lem5915478 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term872 A y f s) = (term878 A y f s).
Proof. exact (TRANS (@lem5915470 A y f s) (@lem5915477 A y f s)). Qed.
Lemma lem5915479 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term361 A y f s) = (term361 A y f s).
Proof. exact (fun_ext (fun x : A => @lem5915468 A y f x s)). Qed.
Lemma lem5915480 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5915481 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term362 A y f s) = (term362 A y f s).
Proof. exact (MK_COMB (@lem5915480 A) (@lem5915479 A y f s)). Qed.
Lemma lem5915483 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term879 A y f s) = (term879 A y f s).
Proof. exact (eq_refl (term879 A y f s)). Qed.
Lemma lem5915484 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term880 A y f s) = (term880 A y f s).
Proof. exact (MK_COMB (@lem5915483 A y f s) (@lem5915481 A y f s)). Qed.
Lemma lem5915486 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term881 A y f s) = (term881 A y f s).
Proof. exact (eq_refl (term881 A y f s)). Qed.
Lemma lem5915487 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term882 A y f s) = (term883 A y f s).
Proof. exact (MK_COMB (@lem5915486 A y f s) (@lem5915478 A y f s)). Qed.
Lemma lem5915488 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915489 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term884 A y f s) = (term885 A y f s).
Proof. exact (MK_COMB (@lem5915488) (@lem5915487 A y f s)). Qed.
Lemma lem5915490 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term886 A y f s) = (term887 A y f s).
Proof. exact (MK_COMB (@lem5915489 A y f s) (@lem5915484 A y f s)). Qed.
Lemma lem5915491 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term364 A y f s) = (term362 A y f s)) = (term886 A y f s).
Proof. exact (@lem17784 (term364 A y f s) (term362 A y f s)). Qed.
Lemma lem5915492 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term364 A y f s) = (term362 A y f s)) = (term887 A y f s).
Proof. exact (TRANS (@lem5915491 A y f s) (@lem5915490 A y f s)). Qed.
Lemma lem5915493 {A : Type'} (y : A) (s : A -> Prop) : (term365 A y s) = (term888 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5915492 A y f s)). Qed.
Lemma lem5915494 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5915495 {A : Type'} (y : A) (s : A -> Prop) : (term366 A y s) = (term889 A y s).
Proof. exact (MK_COMB (@lem5915494 A) (@lem5915493 A y s)). Qed.
Lemma lem5915496 {A : Type'} (y : A) : (term367 A y) = (term890 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915495 A y s)). Qed.
Lemma lem5915497 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5915498 {A : Type'} (y : A) : (term368 A y) = (term891 A y).
Proof. exact (MK_COMB (@lem5915497 A) (@lem5915496 A y)). Qed.
Lemma lem5915499 {A : Type'} : (term369 A) = (term892 A).
Proof. exact (fun_ext (fun y : A => @lem5915498 A y)). Qed.
Lemma lem5915500 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5915501 {A : Type'} : (term317 A) = (term893 A).
Proof. exact (MK_COMB (@lem5915500 A) (@lem5915499 A)). Qed.
Lemma lem5915511 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5915512 {A : Type'} (P : type488 A) (Q : type488 A) : (term896 A P Q) = (term897 A P Q).
Proof. exact (@lem5915511 (A -> A) P Q). Qed.
Lemma lem5915513 {A : Type'} (y : A) (s : A -> Prop) : (term898 A y s) = (term899 A y s).
Proof. exact (@lem5915512 A (term900 A y s) (term901 A y s)). Qed.
Lemma lem5915514 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term902 A y s f) = (term883 A y f s).
Proof. exact (eq_refl (term902 A y s f)). Qed.
Lemma lem5915515 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915516 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term903 A y s f) = (term885 A y f s).
Proof. exact (MK_COMB (@lem5915515) (@lem5915514 A y f s)). Qed.
Lemma lem5915517 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term904 A y s f) = (term880 A y f s).
Proof. exact (eq_refl (term904 A y s f)). Qed.
Lemma lem5915518 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term905 A y s f) = (term887 A y f s).
Proof. exact (MK_COMB (@lem5915516 A y f s) (@lem5915517 A y f s)). Qed.
Lemma lem5915519 {A : Type'} (y : A) (s : A -> Prop) : (term906 A y s) = (term888 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5915518 A y f s)). Qed.
Lemma lem5915520 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5915521 {A : Type'} (y : A) (s : A -> Prop) : (term898 A y s) = (term889 A y s).
Proof. exact (MK_COMB (@lem5915520 A) (@lem5915519 A y s)). Qed.
Lemma lem5915522 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915523 {A : Type'} (y : A) (s : A -> Prop) : (term907 A y s) = (term908 A y s).
Proof. exact (MK_COMB (@lem5915522) (@lem5915521 A y s)). Qed.
Lemma lem5915524 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term902 A y s f) = (term883 A y f s).
Proof. exact (eq_refl (term902 A y s f)). Qed.
Lemma lem5915525 {A : Type'} (y : A) (s : A -> Prop) : (term909 A y s) = (term900 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5915524 A y f s)). Qed.
Lemma lem5915526 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5915527 {A : Type'} (y : A) (s : A -> Prop) : (term910 A y s) = (term911 A y s).
Proof. exact (MK_COMB (@lem5915526 A) (@lem5915525 A y s)). Qed.
Lemma lem5915528 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915529 {A : Type'} (y : A) (s : A -> Prop) : (term912 A y s) = (term913 A y s).
Proof. exact (MK_COMB (@lem5915528) (@lem5915527 A y s)). Qed.
Lemma lem5915530 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term904 A y s f) = (term880 A y f s).
Proof. exact (eq_refl (term904 A y s f)). Qed.
Lemma lem5915531 {A : Type'} (y : A) (s : A -> Prop) : (term914 A y s) = (term901 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5915530 A y f s)). Qed.
Lemma lem5915532 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5915533 {A : Type'} (y : A) (s : A -> Prop) : (term915 A y s) = (term916 A y s).
Proof. exact (MK_COMB (@lem5915532 A) (@lem5915531 A y s)). Qed.
Lemma lem5915534 {A : Type'} (y : A) (s : A -> Prop) : (term899 A y s) = (term917 A y s).
Proof. exact (MK_COMB (@lem5915529 A y s) (@lem5915533 A y s)). Qed.
Lemma lem5915535 {A : Type'} (y : A) (s : A -> Prop) : ((term898 A y s) = (term899 A y s)) = ((term889 A y s) = (term917 A y s)).
Proof. exact (MK_COMB (@lem5915523 A y s) (@lem5915534 A y s)). Qed.
Lemma lem5915536 {A : Type'} (y : A) (s : A -> Prop) : (term889 A y s) = (term917 A y s).
Proof. exact (EQ_MP (@lem5915535 A y s) (@lem5915513 A y s)). Qed.
Lemma lem5915729 {A : Type'} (y : A) : (term890 A y) = (term918 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915536 A y s)). Qed.
Lemma lem5915730 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5915731 {A : Type'} (y : A) : (term891 A y) = (term919 A y).
Proof. exact (MK_COMB (@lem5915730 A) (@lem5915729 A y)). Qed.
Lemma lem5915733 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5915734 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem5915733 (A -> Prop) P Q). Qed.
Lemma lem5915735 {A : Type'} (y : A) : (term922 A y) = (term923 A y).
Proof. exact (@lem5915734 A (term924 A y) (term925 A y)). Qed.
Lemma lem5915736 {A : Type'} (y : A) (s : A -> Prop) : (term926 A y s) = (term911 A y s).
Proof. exact (eq_refl (term926 A y s)). Qed.
Lemma lem5915737 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915738 {A : Type'} (y : A) (s : A -> Prop) : (term927 A y s) = (term913 A y s).
Proof. exact (MK_COMB (@lem5915737) (@lem5915736 A y s)). Qed.
Lemma lem5915739 {A : Type'} (y : A) (s : A -> Prop) : (term928 A y s) = (term916 A y s).
Proof. exact (eq_refl (term928 A y s)). Qed.
Lemma lem5915740 {A : Type'} (y : A) (s : A -> Prop) : (term929 A y s) = (term917 A y s).
Proof. exact (MK_COMB (@lem5915738 A y s) (@lem5915739 A y s)). Qed.
Lemma lem5915741 {A : Type'} (y : A) : (term930 A y) = (term918 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915740 A y s)). Qed.
Lemma lem5915742 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5915743 {A : Type'} (y : A) : (term922 A y) = (term919 A y).
Proof. exact (MK_COMB (@lem5915742 A) (@lem5915741 A y)). Qed.
Lemma lem5915744 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915745 {A : Type'} (y : A) : (term931 A y) = (term932 A y).
Proof. exact (MK_COMB (@lem5915744) (@lem5915743 A y)). Qed.
Lemma lem5915746 {A : Type'} (y : A) (s : A -> Prop) : (term926 A y s) = (term911 A y s).
Proof. exact (eq_refl (term926 A y s)). Qed.
Lemma lem5915747 {A : Type'} (y : A) : (term933 A y) = (term924 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915746 A y s)). Qed.
Lemma lem5915748 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5915749 {A : Type'} (y : A) : (term934 A y) = (term935 A y).
Proof. exact (MK_COMB (@lem5915748 A) (@lem5915747 A y)). Qed.
Lemma lem5915750 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915751 {A : Type'} (y : A) : (term936 A y) = (term937 A y).
Proof. exact (MK_COMB (@lem5915750) (@lem5915749 A y)). Qed.
Lemma lem5915752 {A : Type'} (y : A) (s : A -> Prop) : (term928 A y s) = (term916 A y s).
Proof. exact (eq_refl (term928 A y s)). Qed.
Lemma lem5915753 {A : Type'} (y : A) : (term938 A y) = (term925 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5915752 A y s)). Qed.
Lemma lem5915754 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5915755 {A : Type'} (y : A) : (term939 A y) = (term940 A y).
Proof. exact (MK_COMB (@lem5915754 A) (@lem5915753 A y)). Qed.
Lemma lem5915756 {A : Type'} (y : A) : (term923 A y) = (term941 A y).
Proof. exact (MK_COMB (@lem5915751 A y) (@lem5915755 A y)). Qed.
Lemma lem5915757 {A : Type'} (y : A) : ((term922 A y) = (term923 A y)) = ((term919 A y) = (term941 A y)).
Proof. exact (MK_COMB (@lem5915745 A y) (@lem5915756 A y)). Qed.
Lemma lem5915758 {A : Type'} (y : A) : (term919 A y) = (term941 A y).
Proof. exact (EQ_MP (@lem5915757 A y) (@lem5915735 A y)). Qed.
Lemma lem5915959 {A : Type'} (y : A) : (term891 A y) = (term941 A y).
Proof. exact (TRANS (@lem5915731 A y) (@lem5915758 A y)). Qed.
Lemma lem5915960 {A : Type'} : (term892 A) = (term942 A).
Proof. exact (fun_ext (fun y : A => @lem5915959 A y)). Qed.
Lemma lem5915961 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5915962 {A : Type'} : (term893 A) = (term943 A).
Proof. exact (MK_COMB (@lem5915961 A) (@lem5915960 A)). Qed.
Lemma lem5915964 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5915965 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (@lem5915964 A P Q). Qed.
Lemma lem5915966 {A : Type'} : (term944 A) = (term945 A).
Proof. exact (@lem5915965 A (term946 A) (term947 A)). Qed.
Lemma lem5915967 {A : Type'} (y : A) : (term948 A y) = (term935 A y).
Proof. exact (eq_refl (term948 A y)). Qed.
Lemma lem5915968 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915969 {A : Type'} (y : A) : (term949 A y) = (term937 A y).
Proof. exact (MK_COMB (@lem5915968) (@lem5915967 A y)). Qed.
Lemma lem5915970 {A : Type'} (y : A) : (term950 A y) = (term940 A y).
Proof. exact (eq_refl (term950 A y)). Qed.
Lemma lem5915971 {A : Type'} (y : A) : (term951 A y) = (term941 A y).
Proof. exact (MK_COMB (@lem5915969 A y) (@lem5915970 A y)). Qed.
Lemma lem5915972 {A : Type'} : (term952 A) = (term942 A).
Proof. exact (fun_ext (fun y : A => @lem5915971 A y)). Qed.
Lemma lem5915973 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5915974 {A : Type'} : (term944 A) = (term943 A).
Proof. exact (MK_COMB (@lem5915973 A) (@lem5915972 A)). Qed.
Lemma lem5915975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5915976 {A : Type'} : (term953 A) = (term954 A).
Proof. exact (MK_COMB (@lem5915975) (@lem5915974 A)). Qed.
Lemma lem5915977 {A : Type'} (y : A) : (term948 A y) = (term935 A y).
Proof. exact (eq_refl (term948 A y)). Qed.
Lemma lem5915978 {A : Type'} : (term955 A) = (term946 A).
Proof. exact (fun_ext (fun y : A => @lem5915977 A y)). Qed.
Lemma lem5915979 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5915980 {A : Type'} : (term956 A) = (term957 A).
Proof. exact (MK_COMB (@lem5915979 A) (@lem5915978 A)). Qed.
Lemma lem5915981 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5915982 {A : Type'} : (term958 A) = (term959 A).
Proof. exact (MK_COMB (@lem5915981) (@lem5915980 A)). Qed.
Lemma lem5915983 {A : Type'} (y : A) : (term950 A y) = (term940 A y).
Proof. exact (eq_refl (term950 A y)). Qed.
Lemma lem5915984 {A : Type'} : (term960 A) = (term947 A).
Proof. exact (fun_ext (fun y : A => @lem5915983 A y)). Qed.
Lemma lem5915985 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5915986 {A : Type'} : (term961 A) = (term962 A).
Proof. exact (MK_COMB (@lem5915985 A) (@lem5915984 A)). Qed.
Lemma lem5915987 {A : Type'} : (term945 A) = (term963 A).
Proof. exact (MK_COMB (@lem5915982 A) (@lem5915986 A)). Qed.
Lemma lem5915988 {A : Type'} : ((term944 A) = (term945 A)) = ((term943 A) = (term963 A)).
Proof. exact (MK_COMB (@lem5915976 A) (@lem5915987 A)). Qed.
Lemma lem5915989 {A : Type'} : (term943 A) = (term963 A).
Proof. exact (EQ_MP (@lem5915988 A) (@lem5915966 A)). Qed.
Lemma lem5916198 {A : Type'} : (term893 A) = (term963 A).
Proof. exact (TRANS (@lem5915962 A) (@lem5915989 A)). Qed.
Lemma lem5916200 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5916201 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5916200 A P Q). Qed.
Lemma lem5916202 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term966 A y f s) = (term967 A y f s).
Proof. exact (@lem5916201 A (term968 A y f s) (term361 A y f s)). Qed.
Lemma lem5916203 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term874 A y f s x) = (term360 A y f x s).
Proof. exact (eq_refl (term874 A y f s x)). Qed.
Lemma lem5916204 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term969 A y f s) = (term361 A y f s).
Proof. exact (fun_ext (fun x : A => @lem5916203 A y f x s)). Qed.
Lemma lem5916205 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5916206 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term970 A y f s) = (term362 A y f s).
Proof. exact (MK_COMB (@lem5916205 A) (@lem5916204 A y f s)). Qed.
Lemma lem5916207 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term879 A y f s) = (term879 A y f s).
Proof. exact (eq_refl (term879 A y f s)). Qed.
Lemma lem5916208 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term966 A y f s) = (term880 A y f s).
Proof. exact (MK_COMB (@lem5916207 A y f s) (@lem5916206 A y f s)). Qed.
Lemma lem5916209 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916210 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term971 A y f s) = (term972 A y f s).
Proof. exact (MK_COMB (@lem5916209) (@lem5916208 A y f s)). Qed.
Lemma lem5916211 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term874 A y f s x) = (term360 A y f x s).
Proof. exact (eq_refl (term874 A y f s x)). Qed.
Lemma lem5916212 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term879 A y f s) = (term879 A y f s).
Proof. exact (eq_refl (term879 A y f s)). Qed.
Lemma lem5916213 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term973 A y f s x) = (term974 A y f x s).
Proof. exact (MK_COMB (@lem5916212 A y f s) (@lem5916211 A y f x s)). Qed.
Lemma lem5916214 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term975 A y f s) = (term976 A y f s).
Proof. exact (fun_ext (fun x : A => @lem5916213 A y f x s)). Qed.
Lemma lem5916215 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5916216 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term967 A y f s) = (term977 A y f s).
Proof. exact (MK_COMB (@lem5916215 A) (@lem5916214 A y f s)). Qed.
Lemma lem5916217 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : ((term966 A y f s) = (term967 A y f s)) = ((term880 A y f s) = (term977 A y f s)).
Proof. exact (MK_COMB (@lem5916210 A y f s) (@lem5916216 A y f s)). Qed.
Lemma lem5916218 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term880 A y f s) = (term977 A y f s).
Proof. exact (EQ_MP (@lem5916217 A y f s) (@lem5916202 A y f s)). Qed.
Lemma lem5916219 {A : Type'} (y : A) (s : A -> Prop) : (term901 A y s) = (term978 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5916218 A y f s)). Qed.
Lemma lem5916220 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5916221 {A : Type'} (y : A) (s : A -> Prop) : (term916 A y s) = (term979 A y s).
Proof. exact (MK_COMB (@lem5916220 A) (@lem5916219 A y s)). Qed.
Lemma lem5916223 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5916224 {A : Type'} (P : type486 A) : (term982 A P) = (term983 A P).
Proof. exact (@lem5916223 (A -> A) A P). Qed.
Lemma lem5916225 {A : Type'} (y : A) (s : A -> Prop) : (term984 A y s) = (term985 A y s).
Proof. exact (@lem5916224 A (term986 A y s)). Qed.
Lemma lem5916226 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term987 A y s f) = (term976 A y f s).
Proof. exact (eq_refl (term987 A y s f)). Qed.
Lemma lem5916227 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5916228 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) (x : A) : (term988 A y s f x) = (term989 A y f s x).
Proof. exact (MK_COMB (@lem5916226 A y f s) (@lem5916227 A x)). Qed.
Lemma lem5916229 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term989 A y f s x) = (term974 A y f x s).
Proof. exact (eq_refl (term989 A y f s x)). Qed.
Lemma lem5916230 {A : Type'} (y : A) (f : A -> A) (x : A) (s : A -> Prop) : (term988 A y s f x) = (term974 A y f x s).
Proof. exact (TRANS (@lem5916228 A y f s x) (@lem5916229 A y f x s)). Qed.
Lemma lem5916231 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term990 A y s f) = (term976 A y f s).
Proof. exact (fun_ext (fun x : A => @lem5916230 A y f x s)). Qed.
Lemma lem5916232 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5916233 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term991 A y s f) = (term977 A y f s).
Proof. exact (MK_COMB (@lem5916232 A) (@lem5916231 A y f s)). Qed.
Lemma lem5916234 {A : Type'} (y : A) (s : A -> Prop) : (term992 A y s) = (term978 A y s).
Proof. exact (fun_ext (fun f : A -> A => @lem5916233 A y f s)). Qed.
Lemma lem5916235 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5916236 {A : Type'} (y : A) (s : A -> Prop) : (term984 A y s) = (term979 A y s).
Proof. exact (MK_COMB (@lem5916235 A) (@lem5916234 A y s)). Qed.
Lemma lem5916237 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916238 {A : Type'} (y : A) (s : A -> Prop) : (term993 A y s) = (term994 A y s).
Proof. exact (MK_COMB (@lem5916237) (@lem5916236 A y s)). Qed.
Lemma lem5916239 {A : Type'} (y : A) (f : A -> A) (s : A -> Prop) : (term987 A y s f) = (term976 A y f s).
Proof. exact (eq_refl (term987 A y s f)). Qed.
Lemma lem5916240 {A : Type'} (x : type487 A) (f : A -> A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem5916241 {A : Type'} (y : A) (s : A -> Prop) (x : type487 A) (f : A -> A) : (term995 A y s x f) = (term996 A y s x f).
Proof. exact (MK_COMB (@lem5916239 A y f s) (@lem5916240 A x f)). Qed.
Lemma lem5916242 {A : Type'} (y : A) (x : type487 A) (f : A -> A) (s : A -> Prop) : (term996 A y s x f) = (term997 A y x f s).
Proof. exact (eq_refl (term996 A y s x f)). Qed.
Lemma lem5916243 {A : Type'} (y : A) (x : type487 A) (f : A -> A) (s : A -> Prop) : (term995 A y s x f) = (term997 A y x f s).
Proof. exact (TRANS (@lem5916241 A y s x f) (@lem5916242 A y x f s)). Qed.
Lemma lem5916244 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term998 A y s x) = (term999 A y x s).
Proof. exact (fun_ext (fun f : A -> A => @lem5916243 A y x f s)). Qed.
Lemma lem5916245 {A : Type'} : (@all (A -> A)) = (@all (A -> A)).
Proof. exact (eq_refl (@all (A -> A))). Qed.
Lemma lem5916246 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1000 A y s x) = (term1001 A y x s).
Proof. exact (MK_COMB (@lem5916245 A) (@lem5916244 A y x s)). Qed.
Lemma lem5916247 {A : Type'} (y : A) (s : A -> Prop) : (term1002 A y s) = (term1003 A y s).
Proof. exact (fun_ext (fun x : type487 A => @lem5916246 A y x s)). Qed.
Lemma lem5916248 {A : Type'} : (@ex ((A -> A) -> A)) = (@ex ((A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> A))). Qed.
Lemma lem5916249 {A : Type'} (y : A) (s : A -> Prop) : (term985 A y s) = (term1004 A y s).
Proof. exact (MK_COMB (@lem5916248 A) (@lem5916247 A y s)). Qed.
Lemma lem5916250 {A : Type'} (y : A) (s : A -> Prop) : ((term984 A y s) = (term985 A y s)) = ((term979 A y s) = (term1004 A y s)).
Proof. exact (MK_COMB (@lem5916238 A y s) (@lem5916249 A y s)). Qed.
Lemma lem5916251 {A : Type'} (y : A) (s : A -> Prop) : (term979 A y s) = (term1004 A y s).
Proof. exact (EQ_MP (@lem5916250 A y s) (@lem5916225 A y s)). Qed.
Lemma lem5916252 {A : Type'} (y : A) (s : A -> Prop) : (term916 A y s) = (term1004 A y s).
Proof. exact (TRANS (@lem5916221 A y s) (@lem5916251 A y s)). Qed.
Lemma lem5916253 {A : Type'} (y : A) : (term925 A y) = (term1005 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916252 A y s)). Qed.
Lemma lem5916254 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916255 {A : Type'} (y : A) : (term940 A y) = (term1006 A y).
Proof. exact (MK_COMB (@lem5916254 A) (@lem5916253 A y)). Qed.
Lemma lem5916257 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5916258 {A : Type'} (P : type587 A) : (term1007 A P) = (term1008 A P).
Proof. exact (@lem5916257 (A -> Prop) (type487 A) P). Qed.
Lemma lem5916259 {A : Type'} (y : A) : (term1009 A y) = (term1010 A y).
Proof. exact (@lem5916258 A (term1011 A y)). Qed.
Lemma lem5916260 {A : Type'} (y : A) (s : A -> Prop) : (term1012 A y s) = (term1003 A y s).
Proof. exact (eq_refl (term1012 A y s)). Qed.
Lemma lem5916261 {A : Type'} (x : type487 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5916262 {A : Type'} (y : A) (s : A -> Prop) (x : type487 A) : (term1013 A y s x) = (term1014 A y s x).
Proof. exact (MK_COMB (@lem5916260 A y s) (@lem5916261 A x)). Qed.
Lemma lem5916263 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1014 A y s x) = (term1001 A y x s).
Proof. exact (eq_refl (term1014 A y s x)). Qed.
Lemma lem5916264 {A : Type'} (y : A) (x : type487 A) (s : A -> Prop) : (term1013 A y s x) = (term1001 A y x s).
Proof. exact (TRANS (@lem5916262 A y s x) (@lem5916263 A y x s)). Qed.
Lemma lem5916265 {A : Type'} (y : A) (s : A -> Prop) : (term1015 A y s) = (term1003 A y s).
Proof. exact (fun_ext (fun x : type487 A => @lem5916264 A y x s)). Qed.
Lemma lem5916266 {A : Type'} : (@ex ((A -> A) -> A)) = (@ex ((A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A) -> A))). Qed.
Lemma lem5916267 {A : Type'} (y : A) (s : A -> Prop) : (term1016 A y s) = (term1004 A y s).
Proof. exact (MK_COMB (@lem5916266 A) (@lem5916265 A y s)). Qed.
Lemma lem5916268 {A : Type'} (y : A) : (term1017 A y) = (term1005 A y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916267 A y s)). Qed.
Lemma lem5916269 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916270 {A : Type'} (y : A) : (term1009 A y) = (term1006 A y).
Proof. exact (MK_COMB (@lem5916269 A) (@lem5916268 A y)). Qed.
Lemma lem5916271 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916272 {A : Type'} (y : A) : (term1018 A y) = (term1019 A y).
Proof. exact (MK_COMB (@lem5916271) (@lem5916270 A y)). Qed.
Lemma lem5916273 {A : Type'} (y : A) (s : A -> Prop) : (term1012 A y s) = (term1003 A y s).
Proof. exact (eq_refl (term1012 A y s)). Qed.
Lemma lem5916274 {A : Type'} (x : type623 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem5916275 {A : Type'} (y : A) (x : type623 A) (s : A -> Prop) : (term1020 A y x s) = (term1021 A y x s).
Proof. exact (MK_COMB (@lem5916273 A y s) (@lem5916274 A x s)). Qed.
Lemma lem5916276 {A : Type'} (y : A) (x : type623 A) (s : A -> Prop) : (term1021 A y x s) = (term1022 A y x s).
Proof. exact (eq_refl (term1021 A y x s)). Qed.
Lemma lem5916277 {A : Type'} (y : A) (x : type623 A) (s : A -> Prop) : (term1020 A y x s) = (term1022 A y x s).
Proof. exact (TRANS (@lem5916275 A y x s) (@lem5916276 A y x s)). Qed.
Lemma lem5916278 {A : Type'} (y : A) (x : type623 A) : (term1023 A y x) = (term1024 A y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916277 A y x s)). Qed.
Lemma lem5916279 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916280 {A : Type'} (y : A) (x : type623 A) : (term1025 A y x) = (term1026 A y x).
Proof. exact (MK_COMB (@lem5916279 A) (@lem5916278 A y x)). Qed.
Lemma lem5916281 {A : Type'} (y : A) : (term1027 A y) = (term1028 A y).
Proof. exact (fun_ext (fun x : type623 A => @lem5916280 A y x)). Qed.
Lemma lem5916282 {A : Type'} : (@ex ((A -> Prop) -> (A -> A) -> A)) = (@ex ((A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem5916283 {A : Type'} (y : A) : (term1010 A y) = (term1029 A y).
Proof. exact (MK_COMB (@lem5916282 A) (@lem5916281 A y)). Qed.
Lemma lem5916284 {A : Type'} (y : A) : ((term1009 A y) = (term1010 A y)) = ((term1006 A y) = (term1029 A y)).
Proof. exact (MK_COMB (@lem5916272 A y) (@lem5916283 A y)). Qed.
Lemma lem5916285 {A : Type'} (y : A) : (term1006 A y) = (term1029 A y).
Proof. exact (EQ_MP (@lem5916284 A y) (@lem5916259 A y)). Qed.
Lemma lem5916286 {A : Type'} (y : A) : (term940 A y) = (term1029 A y).
Proof. exact (TRANS (@lem5916255 A y) (@lem5916285 A y)). Qed.
Lemma lem5916287 {A : Type'} : (term947 A) = (term1030 A).
Proof. exact (fun_ext (fun y : A => @lem5916286 A y)). Qed.
Lemma lem5916288 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5916289 {A : Type'} : (term962 A) = (term1031 A).
Proof. exact (MK_COMB (@lem5916288 A) (@lem5916287 A)). Qed.
Lemma lem5916291 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5916292 {A : Type'} (P : type1356 A) : (term1032 A P) = (term1033 A P).
Proof. exact (@lem5916291 A (type623 A) P). Qed.
Lemma lem5916293 {A : Type'} : (term1034 A) = (term1035 A).
Proof. exact (@lem5916292 A (term1036 A)). Qed.
Lemma lem5916294 {A : Type'} (y : A) : (term1037 A y) = (term1028 A y).
Proof. exact (eq_refl (term1037 A y)). Qed.
Lemma lem5916295 {A : Type'} (x : type623 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5916296 {A : Type'} (y : A) (x : type623 A) : (term1038 A y x) = (term1039 A y x).
Proof. exact (MK_COMB (@lem5916294 A y) (@lem5916295 A x)). Qed.
Lemma lem5916297 {A : Type'} (y : A) (x : type623 A) : (term1039 A y x) = (term1026 A y x).
Proof. exact (eq_refl (term1039 A y x)). Qed.
Lemma lem5916298 {A : Type'} (y : A) (x : type623 A) : (term1038 A y x) = (term1026 A y x).
Proof. exact (TRANS (@lem5916296 A y x) (@lem5916297 A y x)). Qed.
Lemma lem5916299 {A : Type'} (y : A) : (term1040 A y) = (term1028 A y).
Proof. exact (fun_ext (fun x : type623 A => @lem5916298 A y x)). Qed.
Lemma lem5916300 {A : Type'} : (@ex ((A -> Prop) -> (A -> A) -> A)) = (@ex ((A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem5916301 {A : Type'} (y : A) : (term1041 A y) = (term1029 A y).
Proof. exact (MK_COMB (@lem5916300 A) (@lem5916299 A y)). Qed.
Lemma lem5916302 {A : Type'} : (term1042 A) = (term1030 A).
Proof. exact (fun_ext (fun y : A => @lem5916301 A y)). Qed.
Lemma lem5916303 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5916304 {A : Type'} : (term1034 A) = (term1031 A).
Proof. exact (MK_COMB (@lem5916303 A) (@lem5916302 A)). Qed.
Lemma lem5916305 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916306 {A : Type'} : (term1043 A) = (term1044 A).
Proof. exact (MK_COMB (@lem5916305) (@lem5916304 A)). Qed.
Lemma lem5916307 {A : Type'} (y : A) : (term1037 A y) = (term1028 A y).
Proof. exact (eq_refl (term1037 A y)). Qed.
Lemma lem5916308 {A : Type'} (x : type1361 A) (y : A) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem5916309 {A : Type'} (x : type1361 A) (y : A) : (term1045 A x y) = (term1046 A x y).
Proof. exact (MK_COMB (@lem5916307 A y) (@lem5916308 A x y)). Qed.
Lemma lem5916310 {A : Type'} (x : type1361 A) (y : A) : (term1046 A x y) = (term1047 A x y).
Proof. exact (eq_refl (term1046 A x y)). Qed.
Lemma lem5916311 {A : Type'} (x : type1361 A) (y : A) : (term1045 A x y) = (term1047 A x y).
Proof. exact (TRANS (@lem5916309 A x y) (@lem5916310 A x y)). Qed.
Lemma lem5916312 {A : Type'} (x : type1361 A) : (term1048 A x) = (term1049 A x).
Proof. exact (fun_ext (fun y : A => @lem5916311 A x y)). Qed.
Lemma lem5916313 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5916314 {A : Type'} (x : type1361 A) : (term1050 A x) = (term1051 A x).
Proof. exact (MK_COMB (@lem5916313 A) (@lem5916312 A x)). Qed.
Lemma lem5916315 {A : Type'} : (term1052 A) = (term1053 A).
Proof. exact (fun_ext (fun x : type1361 A => @lem5916314 A x)). Qed.
Lemma lem5916316 {A : Type'} : (@ex (A -> (A -> Prop) -> (A -> A) -> A)) = (@ex (A -> (A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem5916317 {A : Type'} : (term1035 A) = (term1054 A).
Proof. exact (MK_COMB (@lem5916316 A) (@lem5916315 A)). Qed.
Lemma lem5916318 {A : Type'} : ((term1034 A) = (term1035 A)) = ((term1031 A) = (term1054 A)).
Proof. exact (MK_COMB (@lem5916306 A) (@lem5916317 A)). Qed.
Lemma lem5916319 {A : Type'} : (term1031 A) = (term1054 A).
Proof. exact (EQ_MP (@lem5916318 A) (@lem5916293 A)). Qed.
Lemma lem5916320 {A : Type'} : (term962 A) = (term1054 A).
Proof. exact (TRANS (@lem5916289 A) (@lem5916319 A)). Qed.
Lemma lem5916321 {A : Type'} : (term959 A) = (term959 A).
Proof. exact (eq_refl (term959 A)). Qed.
Lemma lem5916322 {A : Type'} : (term963 A) = (term1055 A).
Proof. exact (MK_COMB (@lem5916321 A) (@lem5916320 A)). Qed.
Lemma lem5916324 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5916325 {A : Type'} (P : Prop) (Q : type391 A) : (term1056 A P Q) = (term1057 A P Q).
Proof. exact (@lem5916324 (type1361 A) P Q). Qed.
Lemma lem5916326 {A : Type'} : (term1058 A) = (term1059 A).
Proof. exact (@lem5916325 A (term957 A) (term1053 A)). Qed.
Lemma lem5916327 {A : Type'} (x : type1361 A) : (term1060 A x) = (term1051 A x).
Proof. exact (eq_refl (term1060 A x)). Qed.
Lemma lem5916328 {A : Type'} : (term1061 A) = (term1053 A).
Proof. exact (fun_ext (fun x : type1361 A => @lem5916327 A x)). Qed.
Lemma lem5916329 {A : Type'} : (@ex (A -> (A -> Prop) -> (A -> A) -> A)) = (@ex (A -> (A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem5916330 {A : Type'} : (term1062 A) = (term1054 A).
Proof. exact (MK_COMB (@lem5916329 A) (@lem5916328 A)). Qed.
Lemma lem5916331 {A : Type'} : (term959 A) = (term959 A).
Proof. exact (eq_refl (term959 A)). Qed.
Lemma lem5916332 {A : Type'} : (term1058 A) = (term1055 A).
Proof. exact (MK_COMB (@lem5916331 A) (@lem5916330 A)). Qed.
Lemma lem5916333 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916334 {A : Type'} : (term1063 A) = (term1064 A).
Proof. exact (MK_COMB (@lem5916333) (@lem5916332 A)). Qed.
Lemma lem5916335 {A : Type'} (x : type1361 A) : (term1060 A x) = (term1051 A x).
Proof. exact (eq_refl (term1060 A x)). Qed.
Lemma lem5916336 {A : Type'} : (term959 A) = (term959 A).
Proof. exact (eq_refl (term959 A)). Qed.
Lemma lem5916337 {A : Type'} (x : type1361 A) : (term1065 A x) = (term1066 A x).
Proof. exact (MK_COMB (@lem5916336 A) (@lem5916335 A x)). Qed.
Lemma lem5916338 {A : Type'} : (term1067 A) = (term1068 A).
Proof. exact (fun_ext (fun x : type1361 A => @lem5916337 A x)). Qed.
Lemma lem5916339 {A : Type'} : (@ex (A -> (A -> Prop) -> (A -> A) -> A)) = (@ex (A -> (A -> Prop) -> (A -> A) -> A)).
Proof. exact (eq_refl (@ex (A -> (A -> Prop) -> (A -> A) -> A))). Qed.
Lemma lem5916340 {A : Type'} : (term1059 A) = (term1069 A).
Proof. exact (MK_COMB (@lem5916339 A) (@lem5916338 A)). Qed.
Lemma lem5916341 {A : Type'} : ((term1058 A) = (term1059 A)) = ((term1055 A) = (term1069 A)).
Proof. exact (MK_COMB (@lem5916334 A) (@lem5916340 A)). Qed.
Lemma lem5916342 {A : Type'} : (term1055 A) = (term1069 A).
Proof. exact (EQ_MP (@lem5916341 A) (@lem5916326 A)). Qed.
Lemma lem5916343 {A : Type'} : (term963 A) = (term1069 A).
Proof. exact (TRANS (@lem5916322 A) (@lem5916342 A)). Qed.
Lemma lem5916344 {A : Type'} : (term893 A) = (term1069 A).
Proof. exact (TRANS (@lem5916198 A) (@lem5916343 A)). Qed.
Lemma lem5916345 {A : Type'} : (term317 A) = (term1069 A).
Proof. exact (TRANS (@lem5915501 A) (@lem5916344 A)). Qed.
Lemma lem5916346 {A : Type'} (h1 : term317 A) : term1069 A.
Proof. exact (EQ_MP (@lem5916345 A) (@lem5913305 A h1)). Qed.
Lemma lem5916357 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1070 A B y f x s) = (term1071 A B y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem5916360 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term350 A B y f x s) = (term350 A B y f x s).
Proof. exact (eq_refl (term350 A B y f x s)). Qed.
Lemma lem5916361 {A : Type'} (P : A -> Prop) : (term870 A P) = (term871 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem5916362 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1072 A B y f s) = (term1073 A B y f s).
Proof. exact (@lem5916361 A (term351 A B y f s)). Qed.
Lemma lem5916363 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1074 A B y f s x) = (term350 A B y f x s).
Proof. exact (eq_refl (term1074 A B y f s x)). Qed.
Lemma lem5916364 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5916365 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1075 A B y f s x) = (term1070 A B y f x s).
Proof. exact (MK_COMB (@lem5916364) (@lem5916363 A B y f x s)). Qed.
Lemma lem5916366 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1075 A B y f s x) = (term1071 A B y f x s).
Proof. exact (TRANS (@lem5916365 A B y f x s) (@lem5916357 A B y f x s)). Qed.
Lemma lem5916367 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1076 A B y f s) = (term1077 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5916366 A B y f x s)). Qed.
Lemma lem5916368 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5916369 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1073 A B y f s) = (term1078 A B y f s).
Proof. exact (MK_COMB (@lem5916368 A) (@lem5916367 A B y f s)). Qed.
Lemma lem5916370 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1072 A B y f s) = (term1078 A B y f s).
Proof. exact (TRANS (@lem5916362 A B y f s) (@lem5916369 A B y f s)). Qed.
Lemma lem5916371 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term351 A B y f s) = (term351 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5916360 A B y f x s)). Qed.
Lemma lem5916372 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5916373 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term352 A B y f s) = (term352 A B y f s).
Proof. exact (MK_COMB (@lem5916372 A) (@lem5916371 A B y f s)). Qed.
Lemma lem5916375 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1079 A B y f s) = (term1079 A B y f s).
Proof. exact (eq_refl (term1079 A B y f s)). Qed.
Lemma lem5916376 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1080 A B y f s) = (term1080 A B y f s).
Proof. exact (MK_COMB (@lem5916375 A B y f s) (@lem5916373 A B y f s)). Qed.
Lemma lem5916378 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1081 A B y f s) = (term1081 A B y f s).
Proof. exact (eq_refl (term1081 A B y f s)). Qed.
Lemma lem5916379 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1082 A B y f s) = (term1083 A B y f s).
Proof. exact (MK_COMB (@lem5916378 A B y f s) (@lem5916370 A B y f s)). Qed.
Lemma lem5916380 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916381 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1084 A B y f s) = (term1085 A B y f s).
Proof. exact (MK_COMB (@lem5916380) (@lem5916379 A B y f s)). Qed.
Lemma lem5916382 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1086 A B y f s) = (term1087 A B y f s).
Proof. exact (MK_COMB (@lem5916381 A B y f s) (@lem5916376 A B y f s)). Qed.
Lemma lem5916383 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term354 A B y f s) = (term352 A B y f s)) = (term1086 A B y f s).
Proof. exact (@lem17784 (term354 A B y f s) (term352 A B y f s)). Qed.
Lemma lem5916384 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term354 A B y f s) = (term352 A B y f s)) = (term1087 A B y f s).
Proof. exact (TRANS (@lem5916383 A B y f s) (@lem5916382 A B y f s)). Qed.
Lemma lem5916385 {A B : Type'} (y : B) (s : A -> Prop) : (term355 A B y s) = (term1088 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5916384 A B y f s)). Qed.
Lemma lem5916386 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5916387 {A B : Type'} (y : B) (s : A -> Prop) : (term356 A B y s) = (term1089 A B y s).
Proof. exact (MK_COMB (@lem5916386 A B) (@lem5916385 A B y s)). Qed.
Lemma lem5916388 {A B : Type'} (y : B) : (term357 A B y) = (term1090 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916387 A B y s)). Qed.
Lemma lem5916389 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916390 {A B : Type'} (y : B) : (term358 A B y) = (term1091 A B y).
Proof. exact (MK_COMB (@lem5916389 A) (@lem5916388 A B y)). Qed.
Lemma lem5916391 {A B : Type'} : (term359 A B) = (term1092 A B).
Proof. exact (fun_ext (fun y : B => @lem5916390 A B y)). Qed.
Lemma lem5916392 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5916393 {A B : Type'} : (term318 A B) = (term1093 A B).
Proof. exact (MK_COMB (@lem5916392 B) (@lem5916391 A B)). Qed.
Lemma lem5916403 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5916404 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1094 A B P Q) = (term1095 A B P Q).
Proof. exact (@lem5916403 (A -> B) P Q). Qed.
Lemma lem5916405 {A B : Type'} (y : B) (s : A -> Prop) : (term1096 A B y s) = (term1097 A B y s).
Proof. exact (@lem5916404 A B (term1098 A B y s) (term1099 A B y s)). Qed.
Lemma lem5916406 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1100 A B y s f) = (term1083 A B y f s).
Proof. exact (eq_refl (term1100 A B y s f)). Qed.
Lemma lem5916407 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916408 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1101 A B y s f) = (term1085 A B y f s).
Proof. exact (MK_COMB (@lem5916407) (@lem5916406 A B y f s)). Qed.
Lemma lem5916409 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1102 A B y s f) = (term1080 A B y f s).
Proof. exact (eq_refl (term1102 A B y s f)). Qed.
Lemma lem5916410 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1103 A B y s f) = (term1087 A B y f s).
Proof. exact (MK_COMB (@lem5916408 A B y f s) (@lem5916409 A B y f s)). Qed.
Lemma lem5916411 {A B : Type'} (y : B) (s : A -> Prop) : (term1104 A B y s) = (term1088 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5916410 A B y f s)). Qed.
Lemma lem5916412 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5916413 {A B : Type'} (y : B) (s : A -> Prop) : (term1096 A B y s) = (term1089 A B y s).
Proof. exact (MK_COMB (@lem5916412 A B) (@lem5916411 A B y s)). Qed.
Lemma lem5916414 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916415 {A B : Type'} (y : B) (s : A -> Prop) : (term1105 A B y s) = (term1106 A B y s).
Proof. exact (MK_COMB (@lem5916414) (@lem5916413 A B y s)). Qed.
Lemma lem5916416 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1100 A B y s f) = (term1083 A B y f s).
Proof. exact (eq_refl (term1100 A B y s f)). Qed.
Lemma lem5916417 {A B : Type'} (y : B) (s : A -> Prop) : (term1107 A B y s) = (term1098 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5916416 A B y f s)). Qed.
Lemma lem5916418 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5916419 {A B : Type'} (y : B) (s : A -> Prop) : (term1108 A B y s) = (term1109 A B y s).
Proof. exact (MK_COMB (@lem5916418 A B) (@lem5916417 A B y s)). Qed.
Lemma lem5916420 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916421 {A B : Type'} (y : B) (s : A -> Prop) : (term1110 A B y s) = (term1111 A B y s).
Proof. exact (MK_COMB (@lem5916420) (@lem5916419 A B y s)). Qed.
Lemma lem5916422 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1102 A B y s f) = (term1080 A B y f s).
Proof. exact (eq_refl (term1102 A B y s f)). Qed.
Lemma lem5916423 {A B : Type'} (y : B) (s : A -> Prop) : (term1112 A B y s) = (term1099 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5916422 A B y f s)). Qed.
Lemma lem5916424 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5916425 {A B : Type'} (y : B) (s : A -> Prop) : (term1113 A B y s) = (term1114 A B y s).
Proof. exact (MK_COMB (@lem5916424 A B) (@lem5916423 A B y s)). Qed.
Lemma lem5916426 {A B : Type'} (y : B) (s : A -> Prop) : (term1097 A B y s) = (term1115 A B y s).
Proof. exact (MK_COMB (@lem5916421 A B y s) (@lem5916425 A B y s)). Qed.
Lemma lem5916427 {A B : Type'} (y : B) (s : A -> Prop) : ((term1096 A B y s) = (term1097 A B y s)) = ((term1089 A B y s) = (term1115 A B y s)).
Proof. exact (MK_COMB (@lem5916415 A B y s) (@lem5916426 A B y s)). Qed.
Lemma lem5916428 {A B : Type'} (y : B) (s : A -> Prop) : (term1089 A B y s) = (term1115 A B y s).
Proof. exact (EQ_MP (@lem5916427 A B y s) (@lem5916405 A B y s)). Qed.
Lemma lem5916621 {A B : Type'} (y : B) : (term1090 A B y) = (term1116 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916428 A B y s)). Qed.
Lemma lem5916622 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916623 {A B : Type'} (y : B) : (term1091 A B y) = (term1117 A B y).
Proof. exact (MK_COMB (@lem5916622 A) (@lem5916621 A B y)). Qed.
Lemma lem5916625 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5916626 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem5916625 (A -> Prop) P Q). Qed.
Lemma lem5916627 {A B : Type'} (y : B) : (term1118 A B y) = (term1119 A B y).
Proof. exact (@lem5916626 A (term1120 A B y) (term1121 A B y)). Qed.
Lemma lem5916628 {A B : Type'} (y : B) (s : A -> Prop) : (term1122 A B y s) = (term1109 A B y s).
Proof. exact (eq_refl (term1122 A B y s)). Qed.
Lemma lem5916629 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916630 {A B : Type'} (y : B) (s : A -> Prop) : (term1123 A B y s) = (term1111 A B y s).
Proof. exact (MK_COMB (@lem5916629) (@lem5916628 A B y s)). Qed.
Lemma lem5916631 {A B : Type'} (y : B) (s : A -> Prop) : (term1124 A B y s) = (term1114 A B y s).
Proof. exact (eq_refl (term1124 A B y s)). Qed.
Lemma lem5916632 {A B : Type'} (y : B) (s : A -> Prop) : (term1125 A B y s) = (term1115 A B y s).
Proof. exact (MK_COMB (@lem5916630 A B y s) (@lem5916631 A B y s)). Qed.
Lemma lem5916633 {A B : Type'} (y : B) : (term1126 A B y) = (term1116 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916632 A B y s)). Qed.
Lemma lem5916634 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916635 {A B : Type'} (y : B) : (term1118 A B y) = (term1117 A B y).
Proof. exact (MK_COMB (@lem5916634 A) (@lem5916633 A B y)). Qed.
Lemma lem5916636 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916637 {A B : Type'} (y : B) : (term1127 A B y) = (term1128 A B y).
Proof. exact (MK_COMB (@lem5916636) (@lem5916635 A B y)). Qed.
Lemma lem5916638 {A B : Type'} (y : B) (s : A -> Prop) : (term1122 A B y s) = (term1109 A B y s).
Proof. exact (eq_refl (term1122 A B y s)). Qed.
Lemma lem5916639 {A B : Type'} (y : B) : (term1129 A B y) = (term1120 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916638 A B y s)). Qed.
Lemma lem5916640 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916641 {A B : Type'} (y : B) : (term1130 A B y) = (term1131 A B y).
Proof. exact (MK_COMB (@lem5916640 A) (@lem5916639 A B y)). Qed.
Lemma lem5916642 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916643 {A B : Type'} (y : B) : (term1132 A B y) = (term1133 A B y).
Proof. exact (MK_COMB (@lem5916642) (@lem5916641 A B y)). Qed.
Lemma lem5916644 {A B : Type'} (y : B) (s : A -> Prop) : (term1124 A B y s) = (term1114 A B y s).
Proof. exact (eq_refl (term1124 A B y s)). Qed.
Lemma lem5916645 {A B : Type'} (y : B) : (term1134 A B y) = (term1121 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5916644 A B y s)). Qed.
Lemma lem5916646 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5916647 {A B : Type'} (y : B) : (term1135 A B y) = (term1136 A B y).
Proof. exact (MK_COMB (@lem5916646 A) (@lem5916645 A B y)). Qed.
Lemma lem5916648 {A B : Type'} (y : B) : (term1119 A B y) = (term1137 A B y).
Proof. exact (MK_COMB (@lem5916643 A B y) (@lem5916647 A B y)). Qed.
Lemma lem5916649 {A B : Type'} (y : B) : ((term1118 A B y) = (term1119 A B y)) = ((term1117 A B y) = (term1137 A B y)).
Proof. exact (MK_COMB (@lem5916637 A B y) (@lem5916648 A B y)). Qed.
Lemma lem5916650 {A B : Type'} (y : B) : (term1117 A B y) = (term1137 A B y).
Proof. exact (EQ_MP (@lem5916649 A B y) (@lem5916627 A B y)). Qed.
Lemma lem5916851 {A B : Type'} (y : B) : (term1091 A B y) = (term1137 A B y).
Proof. exact (TRANS (@lem5916623 A B y) (@lem5916650 A B y)). Qed.
Lemma lem5916852 {A B : Type'} : (term1092 A B) = (term1138 A B).
Proof. exact (fun_ext (fun y : B => @lem5916851 A B y)). Qed.
Lemma lem5916853 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5916854 {A B : Type'} : (term1093 A B) = (term1139 A B).
Proof. exact (MK_COMB (@lem5916853 B) (@lem5916852 A B)). Qed.
Lemma lem5916856 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5916857 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term894 B P Q) = (term895 B P Q).
Proof. exact (@lem5916856 B P Q). Qed.
Lemma lem5916858 {A B : Type'} : (term1140 A B) = (term1141 A B).
Proof. exact (@lem5916857 B (term1142 A B) (term1143 A B)). Qed.
Lemma lem5916859 {A B : Type'} (y : B) : (term1144 A B y) = (term1131 A B y).
Proof. exact (eq_refl (term1144 A B y)). Qed.
Lemma lem5916860 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916861 {A B : Type'} (y : B) : (term1145 A B y) = (term1133 A B y).
Proof. exact (MK_COMB (@lem5916860) (@lem5916859 A B y)). Qed.
Lemma lem5916862 {A B : Type'} (y : B) : (term1146 A B y) = (term1136 A B y).
Proof. exact (eq_refl (term1146 A B y)). Qed.
Lemma lem5916863 {A B : Type'} (y : B) : (term1147 A B y) = (term1137 A B y).
Proof. exact (MK_COMB (@lem5916861 A B y) (@lem5916862 A B y)). Qed.
Lemma lem5916864 {A B : Type'} : (term1148 A B) = (term1138 A B).
Proof. exact (fun_ext (fun y : B => @lem5916863 A B y)). Qed.
Lemma lem5916865 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5916866 {A B : Type'} : (term1140 A B) = (term1139 A B).
Proof. exact (MK_COMB (@lem5916865 B) (@lem5916864 A B)). Qed.
Lemma lem5916867 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5916868 {A B : Type'} : (term1149 A B) = (term1150 A B).
Proof. exact (MK_COMB (@lem5916867) (@lem5916866 A B)). Qed.
Lemma lem5916869 {A B : Type'} (y : B) : (term1144 A B y) = (term1131 A B y).
Proof. exact (eq_refl (term1144 A B y)). Qed.
Lemma lem5916870 {A B : Type'} : (term1151 A B) = (term1142 A B).
Proof. exact (fun_ext (fun y : B => @lem5916869 A B y)). Qed.
Lemma lem5916871 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5916872 {A B : Type'} : (term1152 A B) = (term1153 A B).
Proof. exact (MK_COMB (@lem5916871 B) (@lem5916870 A B)). Qed.
Lemma lem5916873 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5916874 {A B : Type'} : (term1154 A B) = (term1155 A B).
Proof. exact (MK_COMB (@lem5916873) (@lem5916872 A B)). Qed.
Lemma lem5916875 {A B : Type'} (y : B) : (term1146 A B y) = (term1136 A B y).
Proof. exact (eq_refl (term1146 A B y)). Qed.
Lemma lem5916876 {A B : Type'} : (term1156 A B) = (term1143 A B).
Proof. exact (fun_ext (fun y : B => @lem5916875 A B y)). Qed.
Lemma lem5916877 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5916878 {A B : Type'} : (term1157 A B) = (term1158 A B).
Proof. exact (MK_COMB (@lem5916877 B) (@lem5916876 A B)). Qed.
Lemma lem5916879 {A B : Type'} : (term1141 A B) = (term1159 A B).
Proof. exact (MK_COMB (@lem5916874 A B) (@lem5916878 A B)). Qed.
Lemma lem5916880 {A B : Type'} : ((term1140 A B) = (term1141 A B)) = ((term1139 A B) = (term1159 A B)).
Proof. exact (MK_COMB (@lem5916868 A B) (@lem5916879 A B)). Qed.
Lemma lem5916881 {A B : Type'} : (term1139 A B) = (term1159 A B).
Proof. exact (EQ_MP (@lem5916880 A B) (@lem5916858 A B)). Qed.
Lemma lem5917090 {A B : Type'} : (term1093 A B) = (term1159 A B).
Proof. exact (TRANS (@lem5916854 A B) (@lem5916881 A B)). Qed.
Lemma lem5917092 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5917093 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5917092 A P Q). Qed.
Lemma lem5917094 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1160 A B y f s) = (term1161 A B y f s).
Proof. exact (@lem5917093 A (term1162 A B y f s) (term351 A B y f s)). Qed.
Lemma lem5917095 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1074 A B y f s x) = (term350 A B y f x s).
Proof. exact (eq_refl (term1074 A B y f s x)). Qed.
Lemma lem5917096 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1163 A B y f s) = (term351 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5917095 A B y f x s)). Qed.
Lemma lem5917097 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5917098 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1164 A B y f s) = (term352 A B y f s).
Proof. exact (MK_COMB (@lem5917097 A) (@lem5917096 A B y f s)). Qed.
Lemma lem5917099 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1079 A B y f s) = (term1079 A B y f s).
Proof. exact (eq_refl (term1079 A B y f s)). Qed.
Lemma lem5917100 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1160 A B y f s) = (term1080 A B y f s).
Proof. exact (MK_COMB (@lem5917099 A B y f s) (@lem5917098 A B y f s)). Qed.
Lemma lem5917101 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917102 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1165 A B y f s) = (term1166 A B y f s).
Proof. exact (MK_COMB (@lem5917101) (@lem5917100 A B y f s)). Qed.
Lemma lem5917103 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1074 A B y f s x) = (term350 A B y f x s).
Proof. exact (eq_refl (term1074 A B y f s x)). Qed.
Lemma lem5917104 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1079 A B y f s) = (term1079 A B y f s).
Proof. exact (eq_refl (term1079 A B y f s)). Qed.
Lemma lem5917105 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1167 A B y f s x) = (term1168 A B y f x s).
Proof. exact (MK_COMB (@lem5917104 A B y f s) (@lem5917103 A B y f x s)). Qed.
Lemma lem5917106 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1169 A B y f s) = (term1170 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5917105 A B y f x s)). Qed.
Lemma lem5917107 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5917108 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1161 A B y f s) = (term1171 A B y f s).
Proof. exact (MK_COMB (@lem5917107 A) (@lem5917106 A B y f s)). Qed.
Lemma lem5917109 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : ((term1160 A B y f s) = (term1161 A B y f s)) = ((term1080 A B y f s) = (term1171 A B y f s)).
Proof. exact (MK_COMB (@lem5917102 A B y f s) (@lem5917108 A B y f s)). Qed.
Lemma lem5917110 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1080 A B y f s) = (term1171 A B y f s).
Proof. exact (EQ_MP (@lem5917109 A B y f s) (@lem5917094 A B y f s)). Qed.
Lemma lem5917111 {A B : Type'} (y : B) (s : A -> Prop) : (term1099 A B y s) = (term1172 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5917110 A B y f s)). Qed.
Lemma lem5917112 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5917113 {A B : Type'} (y : B) (s : A -> Prop) : (term1114 A B y s) = (term1173 A B y s).
Proof. exact (MK_COMB (@lem5917112 A B) (@lem5917111 A B y s)). Qed.
Lemma lem5917115 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5917116 {A B : Type'} (P : type551 A B) : (term1174 A B P) = (term1175 A B P).
Proof. exact (@lem5917115 (A -> B) A P). Qed.
Lemma lem5917117 {A B : Type'} (y : B) (s : A -> Prop) : (term1176 A B y s) = (term1177 A B y s).
Proof. exact (@lem5917116 A B (term1178 A B y s)). Qed.
Lemma lem5917118 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1179 A B y s f) = (term1170 A B y f s).
Proof. exact (eq_refl (term1179 A B y s f)). Qed.
Lemma lem5917119 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5917120 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) (x : A) : (term1180 A B y s f x) = (term1181 A B y f s x).
Proof. exact (MK_COMB (@lem5917118 A B y f s) (@lem5917119 A x)). Qed.
Lemma lem5917121 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1181 A B y f s x) = (term1168 A B y f x s).
Proof. exact (eq_refl (term1181 A B y f s x)). Qed.
Lemma lem5917122 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1180 A B y s f x) = (term1168 A B y f x s).
Proof. exact (TRANS (@lem5917120 A B y f s x) (@lem5917121 A B y f x s)). Qed.
Lemma lem5917123 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1182 A B y s f) = (term1170 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5917122 A B y f x s)). Qed.
Lemma lem5917124 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5917125 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1183 A B y s f) = (term1171 A B y f s).
Proof. exact (MK_COMB (@lem5917124 A) (@lem5917123 A B y f s)). Qed.
Lemma lem5917126 {A B : Type'} (y : B) (s : A -> Prop) : (term1184 A B y s) = (term1172 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5917125 A B y f s)). Qed.
Lemma lem5917127 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5917128 {A B : Type'} (y : B) (s : A -> Prop) : (term1176 A B y s) = (term1173 A B y s).
Proof. exact (MK_COMB (@lem5917127 A B) (@lem5917126 A B y s)). Qed.
Lemma lem5917129 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917130 {A B : Type'} (y : B) (s : A -> Prop) : (term1185 A B y s) = (term1186 A B y s).
Proof. exact (MK_COMB (@lem5917129) (@lem5917128 A B y s)). Qed.
Lemma lem5917131 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1179 A B y s f) = (term1170 A B y f s).
Proof. exact (eq_refl (term1179 A B y s f)). Qed.
Lemma lem5917132 {A B : Type'} (x : type569 A B) (f : A -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem5917133 {A B : Type'} (y : B) (s : A -> Prop) (x : type569 A B) (f : A -> B) : (term1187 A B y s x f) = (term1188 A B y s x f).
Proof. exact (MK_COMB (@lem5917131 A B y f s) (@lem5917132 A B x f)). Qed.
Lemma lem5917134 {A B : Type'} (y : B) (x : type569 A B) (f : A -> B) (s : A -> Prop) : (term1188 A B y s x f) = (term1189 A B y x f s).
Proof. exact (eq_refl (term1188 A B y s x f)). Qed.
Lemma lem5917135 {A B : Type'} (y : B) (x : type569 A B) (f : A -> B) (s : A -> Prop) : (term1187 A B y s x f) = (term1189 A B y x f s).
Proof. exact (TRANS (@lem5917133 A B y s x f) (@lem5917134 A B y x f s)). Qed.
Lemma lem5917136 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1190 A B y s x) = (term1191 A B y x s).
Proof. exact (fun_ext (fun f : A -> B => @lem5917135 A B y x f s)). Qed.
Lemma lem5917137 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5917138 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1192 A B y s x) = (term1193 A B y x s).
Proof. exact (MK_COMB (@lem5917137 A B) (@lem5917136 A B y x s)). Qed.
Lemma lem5917139 {A B : Type'} (y : B) (s : A -> Prop) : (term1194 A B y s) = (term1195 A B y s).
Proof. exact (fun_ext (fun x : type569 A B => @lem5917138 A B y x s)). Qed.
Lemma lem5917140 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem5917141 {A B : Type'} (y : B) (s : A -> Prop) : (term1177 A B y s) = (term1196 A B y s).
Proof. exact (MK_COMB (@lem5917140 A B) (@lem5917139 A B y s)). Qed.
Lemma lem5917142 {A B : Type'} (y : B) (s : A -> Prop) : ((term1176 A B y s) = (term1177 A B y s)) = ((term1173 A B y s) = (term1196 A B y s)).
Proof. exact (MK_COMB (@lem5917130 A B y s) (@lem5917141 A B y s)). Qed.
Lemma lem5917143 {A B : Type'} (y : B) (s : A -> Prop) : (term1173 A B y s) = (term1196 A B y s).
Proof. exact (EQ_MP (@lem5917142 A B y s) (@lem5917117 A B y s)). Qed.
Lemma lem5917144 {A B : Type'} (y : B) (s : A -> Prop) : (term1114 A B y s) = (term1196 A B y s).
Proof. exact (TRANS (@lem5917113 A B y s) (@lem5917143 A B y s)). Qed.
Lemma lem5917145 {A B : Type'} (y : B) : (term1121 A B y) = (term1197 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5917144 A B y s)). Qed.
Lemma lem5917146 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5917147 {A B : Type'} (y : B) : (term1136 A B y) = (term1198 A B y).
Proof. exact (MK_COMB (@lem5917146 A) (@lem5917145 A B y)). Qed.
Lemma lem5917149 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5917150 {A B : Type'} (P : type593 A B) : (term1199 A B P) = (term1200 A B P).
Proof. exact (@lem5917149 (A -> Prop) (type569 A B) P). Qed.
Lemma lem5917151 {A B : Type'} (y : B) : (term1201 A B y) = (term1202 A B y).
Proof. exact (@lem5917150 A B (term1203 A B y)). Qed.
Lemma lem5917152 {A B : Type'} (y : B) (s : A -> Prop) : (term1204 A B y s) = (term1195 A B y s).
Proof. exact (eq_refl (term1204 A B y s)). Qed.
Lemma lem5917153 {A B : Type'} (x : type569 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5917154 {A B : Type'} (y : B) (s : A -> Prop) (x : type569 A B) : (term1205 A B y s x) = (term1206 A B y s x).
Proof. exact (MK_COMB (@lem5917152 A B y s) (@lem5917153 A B x)). Qed.
Lemma lem5917155 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1206 A B y s x) = (term1193 A B y x s).
Proof. exact (eq_refl (term1206 A B y s x)). Qed.
Lemma lem5917156 {A B : Type'} (y : B) (x : type569 A B) (s : A -> Prop) : (term1205 A B y s x) = (term1193 A B y x s).
Proof. exact (TRANS (@lem5917154 A B y s x) (@lem5917155 A B y x s)). Qed.
Lemma lem5917157 {A B : Type'} (y : B) (s : A -> Prop) : (term1207 A B y s) = (term1195 A B y s).
Proof. exact (fun_ext (fun x : type569 A B => @lem5917156 A B y x s)). Qed.
Lemma lem5917158 {A B : Type'} : (@ex ((A -> B) -> A)) = (@ex ((A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A))). Qed.
Lemma lem5917159 {A B : Type'} (y : B) (s : A -> Prop) : (term1208 A B y s) = (term1196 A B y s).
Proof. exact (MK_COMB (@lem5917158 A B) (@lem5917157 A B y s)). Qed.
Lemma lem5917160 {A B : Type'} (y : B) : (term1209 A B y) = (term1197 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5917159 A B y s)). Qed.
Lemma lem5917161 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5917162 {A B : Type'} (y : B) : (term1201 A B y) = (term1198 A B y).
Proof. exact (MK_COMB (@lem5917161 A) (@lem5917160 A B y)). Qed.
Lemma lem5917163 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917164 {A B : Type'} (y : B) : (term1210 A B y) = (term1211 A B y).
Proof. exact (MK_COMB (@lem5917163) (@lem5917162 A B y)). Qed.
Lemma lem5917165 {A B : Type'} (y : B) (s : A -> Prop) : (term1204 A B y s) = (term1195 A B y s).
Proof. exact (eq_refl (term1204 A B y s)). Qed.
Lemma lem5917166 {A B : Type'} (x : type631 A B) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem5917167 {A B : Type'} (y : B) (x : type631 A B) (s : A -> Prop) : (term1212 A B y x s) = (term1213 A B y x s).
Proof. exact (MK_COMB (@lem5917165 A B y s) (@lem5917166 A B x s)). Qed.
Lemma lem5917168 {A B : Type'} (y : B) (x : type631 A B) (s : A -> Prop) : (term1213 A B y x s) = (term1214 A B y x s).
Proof. exact (eq_refl (term1213 A B y x s)). Qed.
Lemma lem5917169 {A B : Type'} (y : B) (x : type631 A B) (s : A -> Prop) : (term1212 A B y x s) = (term1214 A B y x s).
Proof. exact (TRANS (@lem5917167 A B y x s) (@lem5917168 A B y x s)). Qed.
Lemma lem5917170 {A B : Type'} (y : B) (x : type631 A B) : (term1215 A B y x) = (term1216 A B y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5917169 A B y x s)). Qed.
Lemma lem5917171 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5917172 {A B : Type'} (y : B) (x : type631 A B) : (term1217 A B y x) = (term1218 A B y x).
Proof. exact (MK_COMB (@lem5917171 A) (@lem5917170 A B y x)). Qed.
Lemma lem5917173 {A B : Type'} (y : B) : (term1219 A B y) = (term1220 A B y).
Proof. exact (fun_ext (fun x : type631 A B => @lem5917172 A B y x)). Qed.
Lemma lem5917174 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> A)) = (@ex ((A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem5917175 {A B : Type'} (y : B) : (term1202 A B y) = (term1221 A B y).
Proof. exact (MK_COMB (@lem5917174 A B) (@lem5917173 A B y)). Qed.
Lemma lem5917176 {A B : Type'} (y : B) : ((term1201 A B y) = (term1202 A B y)) = ((term1198 A B y) = (term1221 A B y)).
Proof. exact (MK_COMB (@lem5917164 A B y) (@lem5917175 A B y)). Qed.
Lemma lem5917177 {A B : Type'} (y : B) : (term1198 A B y) = (term1221 A B y).
Proof. exact (EQ_MP (@lem5917176 A B y) (@lem5917151 A B y)). Qed.
Lemma lem5917178 {A B : Type'} (y : B) : (term1136 A B y) = (term1221 A B y).
Proof. exact (TRANS (@lem5917147 A B y) (@lem5917177 A B y)). Qed.
Lemma lem5917179 {A B : Type'} : (term1143 A B) = (term1222 A B).
Proof. exact (fun_ext (fun y : B => @lem5917178 A B y)). Qed.
Lemma lem5917180 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917181 {A B : Type'} : (term1158 A B) = (term1223 A B).
Proof. exact (MK_COMB (@lem5917180 B) (@lem5917179 A B)). Qed.
Lemma lem5917183 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5917184 {A B : Type'} (P : type1437 A B) : (term1224 A B P) = (term1225 A B P).
Proof. exact (@lem5917183 B (type631 A B) P). Qed.
Lemma lem5917185 {A B : Type'} : (term1226 A B) = (term1227 A B).
Proof. exact (@lem5917184 A B (term1228 A B)). Qed.
Lemma lem5917186 {A B : Type'} (y : B) : (term1229 A B y) = (term1220 A B y).
Proof. exact (eq_refl (term1229 A B y)). Qed.
Lemma lem5917187 {A B : Type'} (x : type631 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5917188 {A B : Type'} (y : B) (x : type631 A B) : (term1230 A B y x) = (term1231 A B y x).
Proof. exact (MK_COMB (@lem5917186 A B y) (@lem5917187 A B x)). Qed.
Lemma lem5917189 {A B : Type'} (y : B) (x : type631 A B) : (term1231 A B y x) = (term1218 A B y x).
Proof. exact (eq_refl (term1231 A B y x)). Qed.
Lemma lem5917190 {A B : Type'} (y : B) (x : type631 A B) : (term1230 A B y x) = (term1218 A B y x).
Proof. exact (TRANS (@lem5917188 A B y x) (@lem5917189 A B y x)). Qed.
Lemma lem5917191 {A B : Type'} (y : B) : (term1232 A B y) = (term1220 A B y).
Proof. exact (fun_ext (fun x : type631 A B => @lem5917190 A B y x)). Qed.
Lemma lem5917192 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> A)) = (@ex ((A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem5917193 {A B : Type'} (y : B) : (term1233 A B y) = (term1221 A B y).
Proof. exact (MK_COMB (@lem5917192 A B) (@lem5917191 A B y)). Qed.
Lemma lem5917194 {A B : Type'} : (term1234 A B) = (term1222 A B).
Proof. exact (fun_ext (fun y : B => @lem5917193 A B y)). Qed.
Lemma lem5917195 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917196 {A B : Type'} : (term1226 A B) = (term1223 A B).
Proof. exact (MK_COMB (@lem5917195 B) (@lem5917194 A B)). Qed.
Lemma lem5917197 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917198 {A B : Type'} : (term1235 A B) = (term1236 A B).
Proof. exact (MK_COMB (@lem5917197) (@lem5917196 A B)). Qed.
Lemma lem5917199 {A B : Type'} (y : B) : (term1229 A B y) = (term1220 A B y).
Proof. exact (eq_refl (term1229 A B y)). Qed.
Lemma lem5917200 {A B : Type'} (x : type1448 A B) (y : B) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem5917201 {A B : Type'} (x : type1448 A B) (y : B) : (term1237 A B x y) = (term1238 A B x y).
Proof. exact (MK_COMB (@lem5917199 A B y) (@lem5917200 A B x y)). Qed.
Lemma lem5917202 {A B : Type'} (x : type1448 A B) (y : B) : (term1238 A B x y) = (term1239 A B x y).
Proof. exact (eq_refl (term1238 A B x y)). Qed.
Lemma lem5917203 {A B : Type'} (x : type1448 A B) (y : B) : (term1237 A B x y) = (term1239 A B x y).
Proof. exact (TRANS (@lem5917201 A B x y) (@lem5917202 A B x y)). Qed.
Lemma lem5917204 {A B : Type'} (x : type1448 A B) : (term1240 A B x) = (term1241 A B x).
Proof. exact (fun_ext (fun y : B => @lem5917203 A B x y)). Qed.
Lemma lem5917205 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917206 {A B : Type'} (x : type1448 A B) : (term1242 A B x) = (term1243 A B x).
Proof. exact (MK_COMB (@lem5917205 B) (@lem5917204 A B x)). Qed.
Lemma lem5917207 {A B : Type'} : (term1244 A B) = (term1245 A B).
Proof. exact (fun_ext (fun x : type1448 A B => @lem5917206 A B x)). Qed.
Lemma lem5917208 {A B : Type'} : (@ex (B -> (A -> Prop) -> (A -> B) -> A)) = (@ex (B -> (A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem5917209 {A B : Type'} : (term1227 A B) = (term1246 A B).
Proof. exact (MK_COMB (@lem5917208 A B) (@lem5917207 A B)). Qed.
Lemma lem5917210 {A B : Type'} : ((term1226 A B) = (term1227 A B)) = ((term1223 A B) = (term1246 A B)).
Proof. exact (MK_COMB (@lem5917198 A B) (@lem5917209 A B)). Qed.
Lemma lem5917211 {A B : Type'} : (term1223 A B) = (term1246 A B).
Proof. exact (EQ_MP (@lem5917210 A B) (@lem5917185 A B)). Qed.
Lemma lem5917212 {A B : Type'} : (term1158 A B) = (term1246 A B).
Proof. exact (TRANS (@lem5917181 A B) (@lem5917211 A B)). Qed.
Lemma lem5917213 {A B : Type'} : (term1155 A B) = (term1155 A B).
Proof. exact (eq_refl (term1155 A B)). Qed.
Lemma lem5917214 {A B : Type'} : (term1159 A B) = (term1247 A B).
Proof. exact (MK_COMB (@lem5917213 A B) (@lem5917212 A B)). Qed.
Lemma lem5917216 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5917217 {A B : Type'} (P : Prop) (Q : type719 A B) : (term1248 A B P Q) = (term1249 A B P Q).
Proof. exact (@lem5917216 (type1448 A B) P Q). Qed.
Lemma lem5917218 {A B : Type'} : (term1250 A B) = (term1251 A B).
Proof. exact (@lem5917217 A B (term1153 A B) (term1245 A B)). Qed.
Lemma lem5917219 {A B : Type'} (x : type1448 A B) : (term1252 A B x) = (term1243 A B x).
Proof. exact (eq_refl (term1252 A B x)). Qed.
Lemma lem5917220 {A B : Type'} : (term1253 A B) = (term1245 A B).
Proof. exact (fun_ext (fun x : type1448 A B => @lem5917219 A B x)). Qed.
Lemma lem5917221 {A B : Type'} : (@ex (B -> (A -> Prop) -> (A -> B) -> A)) = (@ex (B -> (A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem5917222 {A B : Type'} : (term1254 A B) = (term1246 A B).
Proof. exact (MK_COMB (@lem5917221 A B) (@lem5917220 A B)). Qed.
Lemma lem5917223 {A B : Type'} : (term1155 A B) = (term1155 A B).
Proof. exact (eq_refl (term1155 A B)). Qed.
Lemma lem5917224 {A B : Type'} : (term1250 A B) = (term1247 A B).
Proof. exact (MK_COMB (@lem5917223 A B) (@lem5917222 A B)). Qed.
Lemma lem5917225 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917226 {A B : Type'} : (term1255 A B) = (term1256 A B).
Proof. exact (MK_COMB (@lem5917225) (@lem5917224 A B)). Qed.
Lemma lem5917227 {A B : Type'} (x : type1448 A B) : (term1252 A B x) = (term1243 A B x).
Proof. exact (eq_refl (term1252 A B x)). Qed.
Lemma lem5917228 {A B : Type'} : (term1155 A B) = (term1155 A B).
Proof. exact (eq_refl (term1155 A B)). Qed.
Lemma lem5917229 {A B : Type'} (x : type1448 A B) : (term1257 A B x) = (term1258 A B x).
Proof. exact (MK_COMB (@lem5917228 A B) (@lem5917227 A B x)). Qed.
Lemma lem5917230 {A B : Type'} : (term1259 A B) = (term1260 A B).
Proof. exact (fun_ext (fun x : type1448 A B => @lem5917229 A B x)). Qed.
Lemma lem5917231 {A B : Type'} : (@ex (B -> (A -> Prop) -> (A -> B) -> A)) = (@ex (B -> (A -> Prop) -> (A -> B) -> A)).
Proof. exact (eq_refl (@ex (B -> (A -> Prop) -> (A -> B) -> A))). Qed.
Lemma lem5917232 {A B : Type'} : (term1251 A B) = (term1261 A B).
Proof. exact (MK_COMB (@lem5917231 A B) (@lem5917230 A B)). Qed.
Lemma lem5917233 {A B : Type'} : ((term1250 A B) = (term1251 A B)) = ((term1247 A B) = (term1261 A B)).
Proof. exact (MK_COMB (@lem5917226 A B) (@lem5917232 A B)). Qed.
Lemma lem5917234 {A B : Type'} : (term1247 A B) = (term1261 A B).
Proof. exact (EQ_MP (@lem5917233 A B) (@lem5917218 A B)). Qed.
Lemma lem5917235 {A B : Type'} : (term1159 A B) = (term1261 A B).
Proof. exact (TRANS (@lem5917214 A B) (@lem5917234 A B)). Qed.
Lemma lem5917236 {A B : Type'} : (term1093 A B) = (term1261 A B).
Proof. exact (TRANS (@lem5917090 A B) (@lem5917235 A B)). Qed.
Lemma lem5917237 {A B : Type'} : (term318 A B) = (term1261 A B).
Proof. exact (TRANS (@lem5916393 A B) (@lem5917236 A B)). Qed.
Lemma lem5917238 {A B : Type'} (h1 : term318 A B) : term1261 A B.
Proof. exact (EQ_MP (@lem5917237 A B) (@lem5913306 A B h1)). Qed.
Lemma lem5917249 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term868 B y f x s) = (term869 B y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN B x s)). Qed.
Lemma lem5917252 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term360 B y f x s) = (term360 B y f x s).
Proof. exact (eq_refl (term360 B y f x s)). Qed.
Lemma lem5917253 {B : Type'} (P : B -> Prop) : (term870 B P) = (term871 B P).
Proof. exact (@lem18394 B P). Qed.
Lemma lem5917254 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term872 B y f s) = (term873 B y f s).
Proof. exact (@lem5917253 B (term361 B y f s)). Qed.
Lemma lem5917255 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term874 B y f s x) = (term360 B y f x s).
Proof. exact (eq_refl (term874 B y f s x)). Qed.
Lemma lem5917256 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5917257 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term875 B y f s x) = (term868 B y f x s).
Proof. exact (MK_COMB (@lem5917256) (@lem5917255 B y f x s)). Qed.
Lemma lem5917258 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term875 B y f s x) = (term869 B y f x s).
Proof. exact (TRANS (@lem5917257 B y f x s) (@lem5917249 B y f x s)). Qed.
Lemma lem5917259 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term876 B y f s) = (term877 B y f s).
Proof. exact (fun_ext (fun x : B => @lem5917258 B y f x s)). Qed.
Lemma lem5917260 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917261 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term873 B y f s) = (term878 B y f s).
Proof. exact (MK_COMB (@lem5917260 B) (@lem5917259 B y f s)). Qed.
Lemma lem5917262 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term872 B y f s) = (term878 B y f s).
Proof. exact (TRANS (@lem5917254 B y f s) (@lem5917261 B y f s)). Qed.
Lemma lem5917263 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term361 B y f s) = (term361 B y f s).
Proof. exact (fun_ext (fun x : B => @lem5917252 B y f x s)). Qed.
Lemma lem5917264 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5917265 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term362 B y f s) = (term362 B y f s).
Proof. exact (MK_COMB (@lem5917264 B) (@lem5917263 B y f s)). Qed.
Lemma lem5917267 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term879 B y f s) = (term879 B y f s).
Proof. exact (eq_refl (term879 B y f s)). Qed.
Lemma lem5917268 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term880 B y f s) = (term880 B y f s).
Proof. exact (MK_COMB (@lem5917267 B y f s) (@lem5917265 B y f s)). Qed.
Lemma lem5917270 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term881 B y f s) = (term881 B y f s).
Proof. exact (eq_refl (term881 B y f s)). Qed.
Lemma lem5917271 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term882 B y f s) = (term883 B y f s).
Proof. exact (MK_COMB (@lem5917270 B y f s) (@lem5917262 B y f s)). Qed.
Lemma lem5917272 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917273 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term884 B y f s) = (term885 B y f s).
Proof. exact (MK_COMB (@lem5917272) (@lem5917271 B y f s)). Qed.
Lemma lem5917274 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term886 B y f s) = (term887 B y f s).
Proof. exact (MK_COMB (@lem5917273 B y f s) (@lem5917268 B y f s)). Qed.
Lemma lem5917275 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term364 B y f s) = (term362 B y f s)) = (term886 B y f s).
Proof. exact (@lem17784 (term364 B y f s) (term362 B y f s)). Qed.
Lemma lem5917276 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term364 B y f s) = (term362 B y f s)) = (term887 B y f s).
Proof. exact (TRANS (@lem5917275 B y f s) (@lem5917274 B y f s)). Qed.
Lemma lem5917277 {B : Type'} (y : B) (s : B -> Prop) : (term365 B y s) = (term888 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5917276 B y f s)). Qed.
Lemma lem5917278 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5917279 {B : Type'} (y : B) (s : B -> Prop) : (term366 B y s) = (term889 B y s).
Proof. exact (MK_COMB (@lem5917278 B) (@lem5917277 B y s)). Qed.
Lemma lem5917280 {B : Type'} (y : B) : (term367 B y) = (term890 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5917279 B y s)). Qed.
Lemma lem5917281 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5917282 {B : Type'} (y : B) : (term368 B y) = (term891 B y).
Proof. exact (MK_COMB (@lem5917281 B) (@lem5917280 B y)). Qed.
Lemma lem5917283 {B : Type'} : (term369 B) = (term892 B).
Proof. exact (fun_ext (fun y : B => @lem5917282 B y)). Qed.
Lemma lem5917284 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917285 {B : Type'} : (term317 B) = (term893 B).
Proof. exact (MK_COMB (@lem5917284 B) (@lem5917283 B)). Qed.
Lemma lem5917295 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5917296 {B : Type'} (P : type488 B) (Q : type488 B) : (term896 B P Q) = (term897 B P Q).
Proof. exact (@lem5917295 (B -> B) P Q). Qed.
Lemma lem5917297 {B : Type'} (y : B) (s : B -> Prop) : (term898 B y s) = (term899 B y s).
Proof. exact (@lem5917296 B (term900 B y s) (term901 B y s)). Qed.
Lemma lem5917298 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term902 B y s f) = (term883 B y f s).
Proof. exact (eq_refl (term902 B y s f)). Qed.
Lemma lem5917299 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917300 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term903 B y s f) = (term885 B y f s).
Proof. exact (MK_COMB (@lem5917299) (@lem5917298 B y f s)). Qed.
Lemma lem5917301 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term904 B y s f) = (term880 B y f s).
Proof. exact (eq_refl (term904 B y s f)). Qed.
Lemma lem5917302 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term905 B y s f) = (term887 B y f s).
Proof. exact (MK_COMB (@lem5917300 B y f s) (@lem5917301 B y f s)). Qed.
Lemma lem5917303 {B : Type'} (y : B) (s : B -> Prop) : (term906 B y s) = (term888 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5917302 B y f s)). Qed.
Lemma lem5917304 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5917305 {B : Type'} (y : B) (s : B -> Prop) : (term898 B y s) = (term889 B y s).
Proof. exact (MK_COMB (@lem5917304 B) (@lem5917303 B y s)). Qed.
Lemma lem5917306 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917307 {B : Type'} (y : B) (s : B -> Prop) : (term907 B y s) = (term908 B y s).
Proof. exact (MK_COMB (@lem5917306) (@lem5917305 B y s)). Qed.
Lemma lem5917308 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term902 B y s f) = (term883 B y f s).
Proof. exact (eq_refl (term902 B y s f)). Qed.
Lemma lem5917309 {B : Type'} (y : B) (s : B -> Prop) : (term909 B y s) = (term900 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5917308 B y f s)). Qed.
Lemma lem5917310 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5917311 {B : Type'} (y : B) (s : B -> Prop) : (term910 B y s) = (term911 B y s).
Proof. exact (MK_COMB (@lem5917310 B) (@lem5917309 B y s)). Qed.
Lemma lem5917312 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917313 {B : Type'} (y : B) (s : B -> Prop) : (term912 B y s) = (term913 B y s).
Proof. exact (MK_COMB (@lem5917312) (@lem5917311 B y s)). Qed.
Lemma lem5917314 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term904 B y s f) = (term880 B y f s).
Proof. exact (eq_refl (term904 B y s f)). Qed.
Lemma lem5917315 {B : Type'} (y : B) (s : B -> Prop) : (term914 B y s) = (term901 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5917314 B y f s)). Qed.
Lemma lem5917316 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5917317 {B : Type'} (y : B) (s : B -> Prop) : (term915 B y s) = (term916 B y s).
Proof. exact (MK_COMB (@lem5917316 B) (@lem5917315 B y s)). Qed.
Lemma lem5917318 {B : Type'} (y : B) (s : B -> Prop) : (term899 B y s) = (term917 B y s).
Proof. exact (MK_COMB (@lem5917313 B y s) (@lem5917317 B y s)). Qed.
Lemma lem5917319 {B : Type'} (y : B) (s : B -> Prop) : ((term898 B y s) = (term899 B y s)) = ((term889 B y s) = (term917 B y s)).
Proof. exact (MK_COMB (@lem5917307 B y s) (@lem5917318 B y s)). Qed.
Lemma lem5917320 {B : Type'} (y : B) (s : B -> Prop) : (term889 B y s) = (term917 B y s).
Proof. exact (EQ_MP (@lem5917319 B y s) (@lem5917297 B y s)). Qed.
Lemma lem5917513 {B : Type'} (y : B) : (term890 B y) = (term918 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5917320 B y s)). Qed.
Lemma lem5917514 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5917515 {B : Type'} (y : B) : (term891 B y) = (term919 B y).
Proof. exact (MK_COMB (@lem5917514 B) (@lem5917513 B y)). Qed.
Lemma lem5917517 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5917518 {B : Type'} (P : type686 B) (Q : type686 B) : (term920 B P Q) = (term921 B P Q).
Proof. exact (@lem5917517 (B -> Prop) P Q). Qed.
Lemma lem5917519 {B : Type'} (y : B) : (term922 B y) = (term923 B y).
Proof. exact (@lem5917518 B (term924 B y) (term925 B y)). Qed.
Lemma lem5917520 {B : Type'} (y : B) (s : B -> Prop) : (term926 B y s) = (term911 B y s).
Proof. exact (eq_refl (term926 B y s)). Qed.
Lemma lem5917521 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917522 {B : Type'} (y : B) (s : B -> Prop) : (term927 B y s) = (term913 B y s).
Proof. exact (MK_COMB (@lem5917521) (@lem5917520 B y s)). Qed.
Lemma lem5917523 {B : Type'} (y : B) (s : B -> Prop) : (term928 B y s) = (term916 B y s).
Proof. exact (eq_refl (term928 B y s)). Qed.
Lemma lem5917524 {B : Type'} (y : B) (s : B -> Prop) : (term929 B y s) = (term917 B y s).
Proof. exact (MK_COMB (@lem5917522 B y s) (@lem5917523 B y s)). Qed.
Lemma lem5917525 {B : Type'} (y : B) : (term930 B y) = (term918 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5917524 B y s)). Qed.
Lemma lem5917526 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5917527 {B : Type'} (y : B) : (term922 B y) = (term919 B y).
Proof. exact (MK_COMB (@lem5917526 B) (@lem5917525 B y)). Qed.
Lemma lem5917528 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917529 {B : Type'} (y : B) : (term931 B y) = (term932 B y).
Proof. exact (MK_COMB (@lem5917528) (@lem5917527 B y)). Qed.
Lemma lem5917530 {B : Type'} (y : B) (s : B -> Prop) : (term926 B y s) = (term911 B y s).
Proof. exact (eq_refl (term926 B y s)). Qed.
Lemma lem5917531 {B : Type'} (y : B) : (term933 B y) = (term924 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5917530 B y s)). Qed.
Lemma lem5917532 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5917533 {B : Type'} (y : B) : (term934 B y) = (term935 B y).
Proof. exact (MK_COMB (@lem5917532 B) (@lem5917531 B y)). Qed.
Lemma lem5917534 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917535 {B : Type'} (y : B) : (term936 B y) = (term937 B y).
Proof. exact (MK_COMB (@lem5917534) (@lem5917533 B y)). Qed.
Lemma lem5917536 {B : Type'} (y : B) (s : B -> Prop) : (term928 B y s) = (term916 B y s).
Proof. exact (eq_refl (term928 B y s)). Qed.
Lemma lem5917537 {B : Type'} (y : B) : (term938 B y) = (term925 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5917536 B y s)). Qed.
Lemma lem5917538 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5917539 {B : Type'} (y : B) : (term939 B y) = (term940 B y).
Proof. exact (MK_COMB (@lem5917538 B) (@lem5917537 B y)). Qed.
Lemma lem5917540 {B : Type'} (y : B) : (term923 B y) = (term941 B y).
Proof. exact (MK_COMB (@lem5917535 B y) (@lem5917539 B y)). Qed.
Lemma lem5917541 {B : Type'} (y : B) : ((term922 B y) = (term923 B y)) = ((term919 B y) = (term941 B y)).
Proof. exact (MK_COMB (@lem5917529 B y) (@lem5917540 B y)). Qed.
Lemma lem5917542 {B : Type'} (y : B) : (term919 B y) = (term941 B y).
Proof. exact (EQ_MP (@lem5917541 B y) (@lem5917519 B y)). Qed.
Lemma lem5917743 {B : Type'} (y : B) : (term891 B y) = (term941 B y).
Proof. exact (TRANS (@lem5917515 B y) (@lem5917542 B y)). Qed.
Lemma lem5917744 {B : Type'} : (term892 B) = (term942 B).
Proof. exact (fun_ext (fun y : B => @lem5917743 B y)). Qed.
Lemma lem5917745 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917746 {B : Type'} : (term893 B) = (term943 B).
Proof. exact (MK_COMB (@lem5917745 B) (@lem5917744 B)). Qed.
Lemma lem5917748 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5917749 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term894 B P Q) = (term895 B P Q).
Proof. exact (@lem5917748 B P Q). Qed.
Lemma lem5917750 {B : Type'} : (term944 B) = (term945 B).
Proof. exact (@lem5917749 B (term946 B) (term947 B)). Qed.
Lemma lem5917751 {B : Type'} (y : B) : (term948 B y) = (term935 B y).
Proof. exact (eq_refl (term948 B y)). Qed.
Lemma lem5917752 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917753 {B : Type'} (y : B) : (term949 B y) = (term937 B y).
Proof. exact (MK_COMB (@lem5917752) (@lem5917751 B y)). Qed.
Lemma lem5917754 {B : Type'} (y : B) : (term950 B y) = (term940 B y).
Proof. exact (eq_refl (term950 B y)). Qed.
Lemma lem5917755 {B : Type'} (y : B) : (term951 B y) = (term941 B y).
Proof. exact (MK_COMB (@lem5917753 B y) (@lem5917754 B y)). Qed.
Lemma lem5917756 {B : Type'} : (term952 B) = (term942 B).
Proof. exact (fun_ext (fun y : B => @lem5917755 B y)). Qed.
Lemma lem5917757 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917758 {B : Type'} : (term944 B) = (term943 B).
Proof. exact (MK_COMB (@lem5917757 B) (@lem5917756 B)). Qed.
Lemma lem5917759 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917760 {B : Type'} : (term953 B) = (term954 B).
Proof. exact (MK_COMB (@lem5917759) (@lem5917758 B)). Qed.
Lemma lem5917761 {B : Type'} (y : B) : (term948 B y) = (term935 B y).
Proof. exact (eq_refl (term948 B y)). Qed.
Lemma lem5917762 {B : Type'} : (term955 B) = (term946 B).
Proof. exact (fun_ext (fun y : B => @lem5917761 B y)). Qed.
Lemma lem5917763 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917764 {B : Type'} : (term956 B) = (term957 B).
Proof. exact (MK_COMB (@lem5917763 B) (@lem5917762 B)). Qed.
Lemma lem5917765 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5917766 {B : Type'} : (term958 B) = (term959 B).
Proof. exact (MK_COMB (@lem5917765) (@lem5917764 B)). Qed.
Lemma lem5917767 {B : Type'} (y : B) : (term950 B y) = (term940 B y).
Proof. exact (eq_refl (term950 B y)). Qed.
Lemma lem5917768 {B : Type'} : (term960 B) = (term947 B).
Proof. exact (fun_ext (fun y : B => @lem5917767 B y)). Qed.
Lemma lem5917769 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5917770 {B : Type'} : (term961 B) = (term962 B).
Proof. exact (MK_COMB (@lem5917769 B) (@lem5917768 B)). Qed.
Lemma lem5917771 {B : Type'} : (term945 B) = (term963 B).
Proof. exact (MK_COMB (@lem5917766 B) (@lem5917770 B)). Qed.
Lemma lem5917772 {B : Type'} : ((term944 B) = (term945 B)) = ((term943 B) = (term963 B)).
Proof. exact (MK_COMB (@lem5917760 B) (@lem5917771 B)). Qed.
Lemma lem5917773 {B : Type'} : (term943 B) = (term963 B).
Proof. exact (EQ_MP (@lem5917772 B) (@lem5917750 B)). Qed.
Lemma lem5917982 {B : Type'} : (term893 B) = (term963 B).
Proof. exact (TRANS (@lem5917746 B) (@lem5917773 B)). Qed.
Lemma lem5917984 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5917985 {B : Type'} (P : Prop) (Q : B -> Prop) : (term964 B P Q) = (term965 B P Q).
Proof. exact (@lem5917984 B P Q). Qed.
Lemma lem5917986 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term966 B y f s) = (term967 B y f s).
Proof. exact (@lem5917985 B (term968 B y f s) (term361 B y f s)). Qed.
Lemma lem5917987 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term874 B y f s x) = (term360 B y f x s).
Proof. exact (eq_refl (term874 B y f s x)). Qed.
Lemma lem5917988 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term969 B y f s) = (term361 B y f s).
Proof. exact (fun_ext (fun x : B => @lem5917987 B y f x s)). Qed.
Lemma lem5917989 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5917990 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term970 B y f s) = (term362 B y f s).
Proof. exact (MK_COMB (@lem5917989 B) (@lem5917988 B y f s)). Qed.
Lemma lem5917991 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term879 B y f s) = (term879 B y f s).
Proof. exact (eq_refl (term879 B y f s)). Qed.
Lemma lem5917992 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term966 B y f s) = (term880 B y f s).
Proof. exact (MK_COMB (@lem5917991 B y f s) (@lem5917990 B y f s)). Qed.
Lemma lem5917993 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5917994 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term971 B y f s) = (term972 B y f s).
Proof. exact (MK_COMB (@lem5917993) (@lem5917992 B y f s)). Qed.
Lemma lem5917995 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term874 B y f s x) = (term360 B y f x s).
Proof. exact (eq_refl (term874 B y f s x)). Qed.
Lemma lem5917996 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term879 B y f s) = (term879 B y f s).
Proof. exact (eq_refl (term879 B y f s)). Qed.
Lemma lem5917997 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term973 B y f s x) = (term974 B y f x s).
Proof. exact (MK_COMB (@lem5917996 B y f s) (@lem5917995 B y f x s)). Qed.
Lemma lem5917998 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term975 B y f s) = (term976 B y f s).
Proof. exact (fun_ext (fun x : B => @lem5917997 B y f x s)). Qed.
Lemma lem5917999 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5918000 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term967 B y f s) = (term977 B y f s).
Proof. exact (MK_COMB (@lem5917999 B) (@lem5917998 B y f s)). Qed.
Lemma lem5918001 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : ((term966 B y f s) = (term967 B y f s)) = ((term880 B y f s) = (term977 B y f s)).
Proof. exact (MK_COMB (@lem5917994 B y f s) (@lem5918000 B y f s)). Qed.
Lemma lem5918002 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term880 B y f s) = (term977 B y f s).
Proof. exact (EQ_MP (@lem5918001 B y f s) (@lem5917986 B y f s)). Qed.
Lemma lem5918003 {B : Type'} (y : B) (s : B -> Prop) : (term901 B y s) = (term978 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5918002 B y f s)). Qed.
Lemma lem5918004 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5918005 {B : Type'} (y : B) (s : B -> Prop) : (term916 B y s) = (term979 B y s).
Proof. exact (MK_COMB (@lem5918004 B) (@lem5918003 B y s)). Qed.
Lemma lem5918007 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5918008 {B : Type'} (P : type486 B) : (term982 B P) = (term983 B P).
Proof. exact (@lem5918007 (B -> B) B P). Qed.
Lemma lem5918009 {B : Type'} (y : B) (s : B -> Prop) : (term984 B y s) = (term985 B y s).
Proof. exact (@lem5918008 B (term986 B y s)). Qed.
Lemma lem5918010 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term987 B y s f) = (term976 B y f s).
Proof. exact (eq_refl (term987 B y s f)). Qed.
Lemma lem5918011 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5918012 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) (x : B) : (term988 B y s f x) = (term989 B y f s x).
Proof. exact (MK_COMB (@lem5918010 B y f s) (@lem5918011 B x)). Qed.
Lemma lem5918013 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term989 B y f s x) = (term974 B y f x s).
Proof. exact (eq_refl (term989 B y f s x)). Qed.
Lemma lem5918014 {B : Type'} (y : B) (f : B -> B) (x : B) (s : B -> Prop) : (term988 B y s f x) = (term974 B y f x s).
Proof. exact (TRANS (@lem5918012 B y f s x) (@lem5918013 B y f x s)). Qed.
Lemma lem5918015 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term990 B y s f) = (term976 B y f s).
Proof. exact (fun_ext (fun x : B => @lem5918014 B y f x s)). Qed.
Lemma lem5918016 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5918017 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term991 B y s f) = (term977 B y f s).
Proof. exact (MK_COMB (@lem5918016 B) (@lem5918015 B y f s)). Qed.
Lemma lem5918018 {B : Type'} (y : B) (s : B -> Prop) : (term992 B y s) = (term978 B y s).
Proof. exact (fun_ext (fun f : B -> B => @lem5918017 B y f s)). Qed.
Lemma lem5918019 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5918020 {B : Type'} (y : B) (s : B -> Prop) : (term984 B y s) = (term979 B y s).
Proof. exact (MK_COMB (@lem5918019 B) (@lem5918018 B y s)). Qed.
Lemma lem5918021 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918022 {B : Type'} (y : B) (s : B -> Prop) : (term993 B y s) = (term994 B y s).
Proof. exact (MK_COMB (@lem5918021) (@lem5918020 B y s)). Qed.
Lemma lem5918023 {B : Type'} (y : B) (f : B -> B) (s : B -> Prop) : (term987 B y s f) = (term976 B y f s).
Proof. exact (eq_refl (term987 B y s f)). Qed.
Lemma lem5918024 {B : Type'} (x : type487 B) (f : B -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem5918025 {B : Type'} (y : B) (s : B -> Prop) (x : type487 B) (f : B -> B) : (term995 B y s x f) = (term996 B y s x f).
Proof. exact (MK_COMB (@lem5918023 B y f s) (@lem5918024 B x f)). Qed.
Lemma lem5918026 {B : Type'} (y : B) (x : type487 B) (f : B -> B) (s : B -> Prop) : (term996 B y s x f) = (term997 B y x f s).
Proof. exact (eq_refl (term996 B y s x f)). Qed.
Lemma lem5918027 {B : Type'} (y : B) (x : type487 B) (f : B -> B) (s : B -> Prop) : (term995 B y s x f) = (term997 B y x f s).
Proof. exact (TRANS (@lem5918025 B y s x f) (@lem5918026 B y x f s)). Qed.
Lemma lem5918028 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term998 B y s x) = (term999 B y x s).
Proof. exact (fun_ext (fun f : B -> B => @lem5918027 B y x f s)). Qed.
Lemma lem5918029 {B : Type'} : (@all (B -> B)) = (@all (B -> B)).
Proof. exact (eq_refl (@all (B -> B))). Qed.
Lemma lem5918030 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1000 B y s x) = (term1001 B y x s).
Proof. exact (MK_COMB (@lem5918029 B) (@lem5918028 B y x s)). Qed.
Lemma lem5918031 {B : Type'} (y : B) (s : B -> Prop) : (term1002 B y s) = (term1003 B y s).
Proof. exact (fun_ext (fun x : type487 B => @lem5918030 B y x s)). Qed.
Lemma lem5918032 {B : Type'} : (@ex ((B -> B) -> B)) = (@ex ((B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> B))). Qed.
Lemma lem5918033 {B : Type'} (y : B) (s : B -> Prop) : (term985 B y s) = (term1004 B y s).
Proof. exact (MK_COMB (@lem5918032 B) (@lem5918031 B y s)). Qed.
Lemma lem5918034 {B : Type'} (y : B) (s : B -> Prop) : ((term984 B y s) = (term985 B y s)) = ((term979 B y s) = (term1004 B y s)).
Proof. exact (MK_COMB (@lem5918022 B y s) (@lem5918033 B y s)). Qed.
Lemma lem5918035 {B : Type'} (y : B) (s : B -> Prop) : (term979 B y s) = (term1004 B y s).
Proof. exact (EQ_MP (@lem5918034 B y s) (@lem5918009 B y s)). Qed.
Lemma lem5918036 {B : Type'} (y : B) (s : B -> Prop) : (term916 B y s) = (term1004 B y s).
Proof. exact (TRANS (@lem5918005 B y s) (@lem5918035 B y s)). Qed.
Lemma lem5918037 {B : Type'} (y : B) : (term925 B y) = (term1005 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5918036 B y s)). Qed.
Lemma lem5918038 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5918039 {B : Type'} (y : B) : (term940 B y) = (term1006 B y).
Proof. exact (MK_COMB (@lem5918038 B) (@lem5918037 B y)). Qed.
Lemma lem5918041 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5918042 {B : Type'} (P : type587 B) : (term1007 B P) = (term1008 B P).
Proof. exact (@lem5918041 (B -> Prop) (type487 B) P). Qed.
Lemma lem5918043 {B : Type'} (y : B) : (term1009 B y) = (term1010 B y).
Proof. exact (@lem5918042 B (term1011 B y)). Qed.
Lemma lem5918044 {B : Type'} (y : B) (s : B -> Prop) : (term1012 B y s) = (term1003 B y s).
Proof. exact (eq_refl (term1012 B y s)). Qed.
Lemma lem5918045 {B : Type'} (x : type487 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5918046 {B : Type'} (y : B) (s : B -> Prop) (x : type487 B) : (term1013 B y s x) = (term1014 B y s x).
Proof. exact (MK_COMB (@lem5918044 B y s) (@lem5918045 B x)). Qed.
Lemma lem5918047 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1014 B y s x) = (term1001 B y x s).
Proof. exact (eq_refl (term1014 B y s x)). Qed.
Lemma lem5918048 {B : Type'} (y : B) (x : type487 B) (s : B -> Prop) : (term1013 B y s x) = (term1001 B y x s).
Proof. exact (TRANS (@lem5918046 B y s x) (@lem5918047 B y x s)). Qed.
Lemma lem5918049 {B : Type'} (y : B) (s : B -> Prop) : (term1015 B y s) = (term1003 B y s).
Proof. exact (fun_ext (fun x : type487 B => @lem5918048 B y x s)). Qed.
Lemma lem5918050 {B : Type'} : (@ex ((B -> B) -> B)) = (@ex ((B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B) -> B))). Qed.
Lemma lem5918051 {B : Type'} (y : B) (s : B -> Prop) : (term1016 B y s) = (term1004 B y s).
Proof. exact (MK_COMB (@lem5918050 B) (@lem5918049 B y s)). Qed.
Lemma lem5918052 {B : Type'} (y : B) : (term1017 B y) = (term1005 B y).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5918051 B y s)). Qed.
Lemma lem5918053 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5918054 {B : Type'} (y : B) : (term1009 B y) = (term1006 B y).
Proof. exact (MK_COMB (@lem5918053 B) (@lem5918052 B y)). Qed.
Lemma lem5918055 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918056 {B : Type'} (y : B) : (term1018 B y) = (term1019 B y).
Proof. exact (MK_COMB (@lem5918055) (@lem5918054 B y)). Qed.
Lemma lem5918057 {B : Type'} (y : B) (s : B -> Prop) : (term1012 B y s) = (term1003 B y s).
Proof. exact (eq_refl (term1012 B y s)). Qed.
Lemma lem5918058 {B : Type'} (x : type623 B) (s : B -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem5918059 {B : Type'} (y : B) (x : type623 B) (s : B -> Prop) : (term1020 B y x s) = (term1021 B y x s).
Proof. exact (MK_COMB (@lem5918057 B y s) (@lem5918058 B x s)). Qed.
Lemma lem5918060 {B : Type'} (y : B) (x : type623 B) (s : B -> Prop) : (term1021 B y x s) = (term1022 B y x s).
Proof. exact (eq_refl (term1021 B y x s)). Qed.
Lemma lem5918061 {B : Type'} (y : B) (x : type623 B) (s : B -> Prop) : (term1020 B y x s) = (term1022 B y x s).
Proof. exact (TRANS (@lem5918059 B y x s) (@lem5918060 B y x s)). Qed.
Lemma lem5918062 {B : Type'} (y : B) (x : type623 B) : (term1023 B y x) = (term1024 B y x).
Proof. exact (fun_ext (fun s : B -> Prop => @lem5918061 B y x s)). Qed.
Lemma lem5918063 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem5918064 {B : Type'} (y : B) (x : type623 B) : (term1025 B y x) = (term1026 B y x).
Proof. exact (MK_COMB (@lem5918063 B) (@lem5918062 B y x)). Qed.
Lemma lem5918065 {B : Type'} (y : B) : (term1027 B y) = (term1028 B y).
Proof. exact (fun_ext (fun x : type623 B => @lem5918064 B y x)). Qed.
Lemma lem5918066 {B : Type'} : (@ex ((B -> Prop) -> (B -> B) -> B)) = (@ex ((B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem5918067 {B : Type'} (y : B) : (term1010 B y) = (term1029 B y).
Proof. exact (MK_COMB (@lem5918066 B) (@lem5918065 B y)). Qed.
Lemma lem5918068 {B : Type'} (y : B) : ((term1009 B y) = (term1010 B y)) = ((term1006 B y) = (term1029 B y)).
Proof. exact (MK_COMB (@lem5918056 B y) (@lem5918067 B y)). Qed.
Lemma lem5918069 {B : Type'} (y : B) : (term1006 B y) = (term1029 B y).
Proof. exact (EQ_MP (@lem5918068 B y) (@lem5918043 B y)). Qed.
Lemma lem5918070 {B : Type'} (y : B) : (term940 B y) = (term1029 B y).
Proof. exact (TRANS (@lem5918039 B y) (@lem5918069 B y)). Qed.
Lemma lem5918071 {B : Type'} : (term947 B) = (term1030 B).
Proof. exact (fun_ext (fun y : B => @lem5918070 B y)). Qed.
Lemma lem5918072 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5918073 {B : Type'} : (term962 B) = (term1031 B).
Proof. exact (MK_COMB (@lem5918072 B) (@lem5918071 B)). Qed.
Lemma lem5918075 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5918076 {B : Type'} (P : type1356 B) : (term1032 B P) = (term1033 B P).
Proof. exact (@lem5918075 B (type623 B) P). Qed.
Lemma lem5918077 {B : Type'} : (term1034 B) = (term1035 B).
Proof. exact (@lem5918076 B (term1036 B)). Qed.
Lemma lem5918078 {B : Type'} (y : B) : (term1037 B y) = (term1028 B y).
Proof. exact (eq_refl (term1037 B y)). Qed.
Lemma lem5918079 {B : Type'} (x : type623 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5918080 {B : Type'} (y : B) (x : type623 B) : (term1038 B y x) = (term1039 B y x).
Proof. exact (MK_COMB (@lem5918078 B y) (@lem5918079 B x)). Qed.
Lemma lem5918081 {B : Type'} (y : B) (x : type623 B) : (term1039 B y x) = (term1026 B y x).
Proof. exact (eq_refl (term1039 B y x)). Qed.
Lemma lem5918082 {B : Type'} (y : B) (x : type623 B) : (term1038 B y x) = (term1026 B y x).
Proof. exact (TRANS (@lem5918080 B y x) (@lem5918081 B y x)). Qed.
Lemma lem5918083 {B : Type'} (y : B) : (term1040 B y) = (term1028 B y).
Proof. exact (fun_ext (fun x : type623 B => @lem5918082 B y x)). Qed.
Lemma lem5918084 {B : Type'} : (@ex ((B -> Prop) -> (B -> B) -> B)) = (@ex ((B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem5918085 {B : Type'} (y : B) : (term1041 B y) = (term1029 B y).
Proof. exact (MK_COMB (@lem5918084 B) (@lem5918083 B y)). Qed.
Lemma lem5918086 {B : Type'} : (term1042 B) = (term1030 B).
Proof. exact (fun_ext (fun y : B => @lem5918085 B y)). Qed.
Lemma lem5918087 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5918088 {B : Type'} : (term1034 B) = (term1031 B).
Proof. exact (MK_COMB (@lem5918087 B) (@lem5918086 B)). Qed.
Lemma lem5918089 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918090 {B : Type'} : (term1043 B) = (term1044 B).
Proof. exact (MK_COMB (@lem5918089) (@lem5918088 B)). Qed.
Lemma lem5918091 {B : Type'} (y : B) : (term1037 B y) = (term1028 B y).
Proof. exact (eq_refl (term1037 B y)). Qed.
Lemma lem5918092 {B : Type'} (x : type1361 B) (y : B) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem5918093 {B : Type'} (x : type1361 B) (y : B) : (term1045 B x y) = (term1046 B x y).
Proof. exact (MK_COMB (@lem5918091 B y) (@lem5918092 B x y)). Qed.
Lemma lem5918094 {B : Type'} (x : type1361 B) (y : B) : (term1046 B x y) = (term1047 B x y).
Proof. exact (eq_refl (term1046 B x y)). Qed.
Lemma lem5918095 {B : Type'} (x : type1361 B) (y : B) : (term1045 B x y) = (term1047 B x y).
Proof. exact (TRANS (@lem5918093 B x y) (@lem5918094 B x y)). Qed.
Lemma lem5918096 {B : Type'} (x : type1361 B) : (term1048 B x) = (term1049 B x).
Proof. exact (fun_ext (fun y : B => @lem5918095 B x y)). Qed.
Lemma lem5918097 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5918098 {B : Type'} (x : type1361 B) : (term1050 B x) = (term1051 B x).
Proof. exact (MK_COMB (@lem5918097 B) (@lem5918096 B x)). Qed.
Lemma lem5918099 {B : Type'} : (term1052 B) = (term1053 B).
Proof. exact (fun_ext (fun x : type1361 B => @lem5918098 B x)). Qed.
Lemma lem5918100 {B : Type'} : (@ex (B -> (B -> Prop) -> (B -> B) -> B)) = (@ex (B -> (B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex (B -> (B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem5918101 {B : Type'} : (term1035 B) = (term1054 B).
Proof. exact (MK_COMB (@lem5918100 B) (@lem5918099 B)). Qed.
Lemma lem5918102 {B : Type'} : ((term1034 B) = (term1035 B)) = ((term1031 B) = (term1054 B)).
Proof. exact (MK_COMB (@lem5918090 B) (@lem5918101 B)). Qed.
Lemma lem5918103 {B : Type'} : (term1031 B) = (term1054 B).
Proof. exact (EQ_MP (@lem5918102 B) (@lem5918077 B)). Qed.
Lemma lem5918104 {B : Type'} : (term962 B) = (term1054 B).
Proof. exact (TRANS (@lem5918073 B) (@lem5918103 B)). Qed.
Lemma lem5918105 {B : Type'} : (term959 B) = (term959 B).
Proof. exact (eq_refl (term959 B)). Qed.
Lemma lem5918106 {B : Type'} : (term963 B) = (term1055 B).
Proof. exact (MK_COMB (@lem5918105 B) (@lem5918104 B)). Qed.
Lemma lem5918108 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5918109 {B : Type'} (P : Prop) (Q : type391 B) : (term1056 B P Q) = (term1057 B P Q).
Proof. exact (@lem5918108 (type1361 B) P Q). Qed.
Lemma lem5918110 {B : Type'} : (term1058 B) = (term1059 B).
Proof. exact (@lem5918109 B (term957 B) (term1053 B)). Qed.
Lemma lem5918111 {B : Type'} (x : type1361 B) : (term1060 B x) = (term1051 B x).
Proof. exact (eq_refl (term1060 B x)). Qed.
Lemma lem5918112 {B : Type'} : (term1061 B) = (term1053 B).
Proof. exact (fun_ext (fun x : type1361 B => @lem5918111 B x)). Qed.
Lemma lem5918113 {B : Type'} : (@ex (B -> (B -> Prop) -> (B -> B) -> B)) = (@ex (B -> (B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex (B -> (B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem5918114 {B : Type'} : (term1062 B) = (term1054 B).
Proof. exact (MK_COMB (@lem5918113 B) (@lem5918112 B)). Qed.
Lemma lem5918115 {B : Type'} : (term959 B) = (term959 B).
Proof. exact (eq_refl (term959 B)). Qed.
Lemma lem5918116 {B : Type'} : (term1058 B) = (term1055 B).
Proof. exact (MK_COMB (@lem5918115 B) (@lem5918114 B)). Qed.
Lemma lem5918117 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918118 {B : Type'} : (term1063 B) = (term1064 B).
Proof. exact (MK_COMB (@lem5918117) (@lem5918116 B)). Qed.
Lemma lem5918119 {B : Type'} (x : type1361 B) : (term1060 B x) = (term1051 B x).
Proof. exact (eq_refl (term1060 B x)). Qed.
Lemma lem5918120 {B : Type'} : (term959 B) = (term959 B).
Proof. exact (eq_refl (term959 B)). Qed.
Lemma lem5918121 {B : Type'} (x : type1361 B) : (term1065 B x) = (term1066 B x).
Proof. exact (MK_COMB (@lem5918120 B) (@lem5918119 B x)). Qed.
Lemma lem5918122 {B : Type'} : (term1067 B) = (term1068 B).
Proof. exact (fun_ext (fun x : type1361 B => @lem5918121 B x)). Qed.
Lemma lem5918123 {B : Type'} : (@ex (B -> (B -> Prop) -> (B -> B) -> B)) = (@ex (B -> (B -> Prop) -> (B -> B) -> B)).
Proof. exact (eq_refl (@ex (B -> (B -> Prop) -> (B -> B) -> B))). Qed.
Lemma lem5918124 {B : Type'} : (term1059 B) = (term1069 B).
Proof. exact (MK_COMB (@lem5918123 B) (@lem5918122 B)). Qed.
Lemma lem5918125 {B : Type'} : ((term1058 B) = (term1059 B)) = ((term1055 B) = (term1069 B)).
Proof. exact (MK_COMB (@lem5918118 B) (@lem5918124 B)). Qed.
Lemma lem5918126 {B : Type'} : (term1055 B) = (term1069 B).
Proof. exact (EQ_MP (@lem5918125 B) (@lem5918110 B)). Qed.
Lemma lem5918127 {B : Type'} : (term963 B) = (term1069 B).
Proof. exact (TRANS (@lem5918106 B) (@lem5918126 B)). Qed.
Lemma lem5918128 {B : Type'} : (term893 B) = (term1069 B).
Proof. exact (TRANS (@lem5917982 B) (@lem5918127 B)). Qed.
Lemma lem5918129 {B : Type'} : (term317 B) = (term1069 B).
Proof. exact (TRANS (@lem5917285 B) (@lem5918128 B)). Qed.
Lemma lem5918130 {B : Type'} (h1 : term317 B) : term1069 B.
Proof. exact (EQ_MP (@lem5918129 B) (@lem5913307 B h1)). Qed.
Lemma lem5918141 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1070 A C y f x s) = (term1071 A C y f x s).
Proof. exact (@lem17045 (y = (f x)) (@IN A x s)). Qed.
Lemma lem5918144 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term350 A C y f x s) = (term350 A C y f x s).
Proof. exact (eq_refl (term350 A C y f x s)). Qed.
Lemma lem5918145 {A : Type'} (P : A -> Prop) : (term870 A P) = (term871 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem5918146 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1072 A C y f s) = (term1073 A C y f s).
Proof. exact (@lem5918145 A (term351 A C y f s)). Qed.
Lemma lem5918147 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1074 A C y f s x) = (term350 A C y f x s).
Proof. exact (eq_refl (term1074 A C y f s x)). Qed.
Lemma lem5918148 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5918149 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1075 A C y f s x) = (term1070 A C y f x s).
Proof. exact (MK_COMB (@lem5918148) (@lem5918147 A C y f x s)). Qed.
Lemma lem5918150 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1075 A C y f s x) = (term1071 A C y f x s).
Proof. exact (TRANS (@lem5918149 A C y f x s) (@lem5918141 A C y f x s)). Qed.
Lemma lem5918151 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1076 A C y f s) = (term1077 A C y f s).
Proof. exact (fun_ext (fun x : A => @lem5918150 A C y f x s)). Qed.
Lemma lem5918152 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5918153 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1073 A C y f s) = (term1078 A C y f s).
Proof. exact (MK_COMB (@lem5918152 A) (@lem5918151 A C y f s)). Qed.
Lemma lem5918154 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1072 A C y f s) = (term1078 A C y f s).
Proof. exact (TRANS (@lem5918146 A C y f s) (@lem5918153 A C y f s)). Qed.
Lemma lem5918155 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term351 A C y f s) = (term351 A C y f s).
Proof. exact (fun_ext (fun x : A => @lem5918144 A C y f x s)). Qed.
Lemma lem5918156 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5918157 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term352 A C y f s) = (term352 A C y f s).
Proof. exact (MK_COMB (@lem5918156 A) (@lem5918155 A C y f s)). Qed.
Lemma lem5918159 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1079 A C y f s) = (term1079 A C y f s).
Proof. exact (eq_refl (term1079 A C y f s)). Qed.
Lemma lem5918160 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1080 A C y f s) = (term1080 A C y f s).
Proof. exact (MK_COMB (@lem5918159 A C y f s) (@lem5918157 A C y f s)). Qed.
Lemma lem5918162 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1081 A C y f s) = (term1081 A C y f s).
Proof. exact (eq_refl (term1081 A C y f s)). Qed.
Lemma lem5918163 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1082 A C y f s) = (term1083 A C y f s).
Proof. exact (MK_COMB (@lem5918162 A C y f s) (@lem5918154 A C y f s)). Qed.
Lemma lem5918164 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918165 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1084 A C y f s) = (term1085 A C y f s).
Proof. exact (MK_COMB (@lem5918164) (@lem5918163 A C y f s)). Qed.
Lemma lem5918166 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1086 A C y f s) = (term1087 A C y f s).
Proof. exact (MK_COMB (@lem5918165 A C y f s) (@lem5918160 A C y f s)). Qed.
Lemma lem5918167 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : ((term354 A C y f s) = (term352 A C y f s)) = (term1086 A C y f s).
Proof. exact (@lem17784 (term354 A C y f s) (term352 A C y f s)). Qed.
Lemma lem5918168 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : ((term354 A C y f s) = (term352 A C y f s)) = (term1087 A C y f s).
Proof. exact (TRANS (@lem5918167 A C y f s) (@lem5918166 A C y f s)). Qed.
Lemma lem5918169 {A C : Type'} (y : C) (s : A -> Prop) : (term355 A C y s) = (term1088 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918168 A C y f s)). Qed.
Lemma lem5918170 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918171 {A C : Type'} (y : C) (s : A -> Prop) : (term356 A C y s) = (term1089 A C y s).
Proof. exact (MK_COMB (@lem5918170 A C) (@lem5918169 A C y s)). Qed.
Lemma lem5918172 {A C : Type'} (y : C) : (term357 A C y) = (term1090 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918171 A C y s)). Qed.
Lemma lem5918173 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918174 {A C : Type'} (y : C) : (term358 A C y) = (term1091 A C y).
Proof. exact (MK_COMB (@lem5918173 A) (@lem5918172 A C y)). Qed.
Lemma lem5918175 {A C : Type'} : (term359 A C) = (term1092 A C).
Proof. exact (fun_ext (fun y : C => @lem5918174 A C y)). Qed.
Lemma lem5918176 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918177 {A C : Type'} : (term318 A C) = (term1093 A C).
Proof. exact (MK_COMB (@lem5918176 C) (@lem5918175 A C)). Qed.
Lemma lem5918187 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5918188 {A C : Type'} (P : type572 A C) (Q : type572 A C) : (term1094 A C P Q) = (term1095 A C P Q).
Proof. exact (@lem5918187 (A -> C) P Q). Qed.
Lemma lem5918189 {A C : Type'} (y : C) (s : A -> Prop) : (term1096 A C y s) = (term1097 A C y s).
Proof. exact (@lem5918188 A C (term1098 A C y s) (term1099 A C y s)). Qed.
Lemma lem5918190 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1100 A C y s f) = (term1083 A C y f s).
Proof. exact (eq_refl (term1100 A C y s f)). Qed.
Lemma lem5918191 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918192 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1101 A C y s f) = (term1085 A C y f s).
Proof. exact (MK_COMB (@lem5918191) (@lem5918190 A C y f s)). Qed.
Lemma lem5918193 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1102 A C y s f) = (term1080 A C y f s).
Proof. exact (eq_refl (term1102 A C y s f)). Qed.
Lemma lem5918194 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1103 A C y s f) = (term1087 A C y f s).
Proof. exact (MK_COMB (@lem5918192 A C y f s) (@lem5918193 A C y f s)). Qed.
Lemma lem5918195 {A C : Type'} (y : C) (s : A -> Prop) : (term1104 A C y s) = (term1088 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918194 A C y f s)). Qed.
Lemma lem5918196 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918197 {A C : Type'} (y : C) (s : A -> Prop) : (term1096 A C y s) = (term1089 A C y s).
Proof. exact (MK_COMB (@lem5918196 A C) (@lem5918195 A C y s)). Qed.
Lemma lem5918198 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918199 {A C : Type'} (y : C) (s : A -> Prop) : (term1105 A C y s) = (term1106 A C y s).
Proof. exact (MK_COMB (@lem5918198) (@lem5918197 A C y s)). Qed.
Lemma lem5918200 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1100 A C y s f) = (term1083 A C y f s).
Proof. exact (eq_refl (term1100 A C y s f)). Qed.
Lemma lem5918201 {A C : Type'} (y : C) (s : A -> Prop) : (term1107 A C y s) = (term1098 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918200 A C y f s)). Qed.
Lemma lem5918202 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918203 {A C : Type'} (y : C) (s : A -> Prop) : (term1108 A C y s) = (term1109 A C y s).
Proof. exact (MK_COMB (@lem5918202 A C) (@lem5918201 A C y s)). Qed.
Lemma lem5918204 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918205 {A C : Type'} (y : C) (s : A -> Prop) : (term1110 A C y s) = (term1111 A C y s).
Proof. exact (MK_COMB (@lem5918204) (@lem5918203 A C y s)). Qed.
Lemma lem5918206 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1102 A C y s f) = (term1080 A C y f s).
Proof. exact (eq_refl (term1102 A C y s f)). Qed.
Lemma lem5918207 {A C : Type'} (y : C) (s : A -> Prop) : (term1112 A C y s) = (term1099 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918206 A C y f s)). Qed.
Lemma lem5918208 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918209 {A C : Type'} (y : C) (s : A -> Prop) : (term1113 A C y s) = (term1114 A C y s).
Proof. exact (MK_COMB (@lem5918208 A C) (@lem5918207 A C y s)). Qed.
Lemma lem5918210 {A C : Type'} (y : C) (s : A -> Prop) : (term1097 A C y s) = (term1115 A C y s).
Proof. exact (MK_COMB (@lem5918205 A C y s) (@lem5918209 A C y s)). Qed.
Lemma lem5918211 {A C : Type'} (y : C) (s : A -> Prop) : ((term1096 A C y s) = (term1097 A C y s)) = ((term1089 A C y s) = (term1115 A C y s)).
Proof. exact (MK_COMB (@lem5918199 A C y s) (@lem5918210 A C y s)). Qed.
Lemma lem5918212 {A C : Type'} (y : C) (s : A -> Prop) : (term1089 A C y s) = (term1115 A C y s).
Proof. exact (EQ_MP (@lem5918211 A C y s) (@lem5918189 A C y s)). Qed.
Lemma lem5918405 {A C : Type'} (y : C) : (term1090 A C y) = (term1116 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918212 A C y s)). Qed.
Lemma lem5918406 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918407 {A C : Type'} (y : C) : (term1091 A C y) = (term1117 A C y).
Proof. exact (MK_COMB (@lem5918406 A) (@lem5918405 A C y)). Qed.
Lemma lem5918409 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5918410 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem5918409 (A -> Prop) P Q). Qed.
Lemma lem5918411 {A C : Type'} (y : C) : (term1118 A C y) = (term1119 A C y).
Proof. exact (@lem5918410 A (term1120 A C y) (term1121 A C y)). Qed.
Lemma lem5918412 {A C : Type'} (y : C) (s : A -> Prop) : (term1122 A C y s) = (term1109 A C y s).
Proof. exact (eq_refl (term1122 A C y s)). Qed.
Lemma lem5918413 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918414 {A C : Type'} (y : C) (s : A -> Prop) : (term1123 A C y s) = (term1111 A C y s).
Proof. exact (MK_COMB (@lem5918413) (@lem5918412 A C y s)). Qed.
Lemma lem5918415 {A C : Type'} (y : C) (s : A -> Prop) : (term1124 A C y s) = (term1114 A C y s).
Proof. exact (eq_refl (term1124 A C y s)). Qed.
Lemma lem5918416 {A C : Type'} (y : C) (s : A -> Prop) : (term1125 A C y s) = (term1115 A C y s).
Proof. exact (MK_COMB (@lem5918414 A C y s) (@lem5918415 A C y s)). Qed.
Lemma lem5918417 {A C : Type'} (y : C) : (term1126 A C y) = (term1116 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918416 A C y s)). Qed.
Lemma lem5918418 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918419 {A C : Type'} (y : C) : (term1118 A C y) = (term1117 A C y).
Proof. exact (MK_COMB (@lem5918418 A) (@lem5918417 A C y)). Qed.
Lemma lem5918420 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918421 {A C : Type'} (y : C) : (term1127 A C y) = (term1128 A C y).
Proof. exact (MK_COMB (@lem5918420) (@lem5918419 A C y)). Qed.
Lemma lem5918422 {A C : Type'} (y : C) (s : A -> Prop) : (term1122 A C y s) = (term1109 A C y s).
Proof. exact (eq_refl (term1122 A C y s)). Qed.
Lemma lem5918423 {A C : Type'} (y : C) : (term1129 A C y) = (term1120 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918422 A C y s)). Qed.
Lemma lem5918424 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918425 {A C : Type'} (y : C) : (term1130 A C y) = (term1131 A C y).
Proof. exact (MK_COMB (@lem5918424 A) (@lem5918423 A C y)). Qed.
Lemma lem5918426 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918427 {A C : Type'} (y : C) : (term1132 A C y) = (term1133 A C y).
Proof. exact (MK_COMB (@lem5918426) (@lem5918425 A C y)). Qed.
Lemma lem5918428 {A C : Type'} (y : C) (s : A -> Prop) : (term1124 A C y s) = (term1114 A C y s).
Proof. exact (eq_refl (term1124 A C y s)). Qed.
Lemma lem5918429 {A C : Type'} (y : C) : (term1134 A C y) = (term1121 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918428 A C y s)). Qed.
Lemma lem5918430 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918431 {A C : Type'} (y : C) : (term1135 A C y) = (term1136 A C y).
Proof. exact (MK_COMB (@lem5918430 A) (@lem5918429 A C y)). Qed.
Lemma lem5918432 {A C : Type'} (y : C) : (term1119 A C y) = (term1137 A C y).
Proof. exact (MK_COMB (@lem5918427 A C y) (@lem5918431 A C y)). Qed.
Lemma lem5918433 {A C : Type'} (y : C) : ((term1118 A C y) = (term1119 A C y)) = ((term1117 A C y) = (term1137 A C y)).
Proof. exact (MK_COMB (@lem5918421 A C y) (@lem5918432 A C y)). Qed.
Lemma lem5918434 {A C : Type'} (y : C) : (term1117 A C y) = (term1137 A C y).
Proof. exact (EQ_MP (@lem5918433 A C y) (@lem5918411 A C y)). Qed.
Lemma lem5918635 {A C : Type'} (y : C) : (term1091 A C y) = (term1137 A C y).
Proof. exact (TRANS (@lem5918407 A C y) (@lem5918434 A C y)). Qed.
Lemma lem5918636 {A C : Type'} : (term1092 A C) = (term1138 A C).
Proof. exact (fun_ext (fun y : C => @lem5918635 A C y)). Qed.
Lemma lem5918637 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918638 {A C : Type'} : (term1093 A C) = (term1139 A C).
Proof. exact (MK_COMB (@lem5918637 C) (@lem5918636 A C)). Qed.
Lemma lem5918640 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5918641 {C : Type'} (P : C -> Prop) (Q : C -> Prop) : (term894 C P Q) = (term895 C P Q).
Proof. exact (@lem5918640 C P Q). Qed.
Lemma lem5918642 {A C : Type'} : (term1140 A C) = (term1141 A C).
Proof. exact (@lem5918641 C (term1142 A C) (term1143 A C)). Qed.
Lemma lem5918643 {A C : Type'} (y : C) : (term1144 A C y) = (term1131 A C y).
Proof. exact (eq_refl (term1144 A C y)). Qed.
Lemma lem5918644 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918645 {A C : Type'} (y : C) : (term1145 A C y) = (term1133 A C y).
Proof. exact (MK_COMB (@lem5918644) (@lem5918643 A C y)). Qed.
Lemma lem5918646 {A C : Type'} (y : C) : (term1146 A C y) = (term1136 A C y).
Proof. exact (eq_refl (term1146 A C y)). Qed.
Lemma lem5918647 {A C : Type'} (y : C) : (term1147 A C y) = (term1137 A C y).
Proof. exact (MK_COMB (@lem5918645 A C y) (@lem5918646 A C y)). Qed.
Lemma lem5918648 {A C : Type'} : (term1148 A C) = (term1138 A C).
Proof. exact (fun_ext (fun y : C => @lem5918647 A C y)). Qed.
Lemma lem5918649 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918650 {A C : Type'} : (term1140 A C) = (term1139 A C).
Proof. exact (MK_COMB (@lem5918649 C) (@lem5918648 A C)). Qed.
Lemma lem5918651 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918652 {A C : Type'} : (term1149 A C) = (term1150 A C).
Proof. exact (MK_COMB (@lem5918651) (@lem5918650 A C)). Qed.
Lemma lem5918653 {A C : Type'} (y : C) : (term1144 A C y) = (term1131 A C y).
Proof. exact (eq_refl (term1144 A C y)). Qed.
Lemma lem5918654 {A C : Type'} : (term1151 A C) = (term1142 A C).
Proof. exact (fun_ext (fun y : C => @lem5918653 A C y)). Qed.
Lemma lem5918655 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918656 {A C : Type'} : (term1152 A C) = (term1153 A C).
Proof. exact (MK_COMB (@lem5918655 C) (@lem5918654 A C)). Qed.
Lemma lem5918657 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5918658 {A C : Type'} : (term1154 A C) = (term1155 A C).
Proof. exact (MK_COMB (@lem5918657) (@lem5918656 A C)). Qed.
Lemma lem5918659 {A C : Type'} (y : C) : (term1146 A C y) = (term1136 A C y).
Proof. exact (eq_refl (term1146 A C y)). Qed.
Lemma lem5918660 {A C : Type'} : (term1156 A C) = (term1143 A C).
Proof. exact (fun_ext (fun y : C => @lem5918659 A C y)). Qed.
Lemma lem5918661 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918662 {A C : Type'} : (term1157 A C) = (term1158 A C).
Proof. exact (MK_COMB (@lem5918661 C) (@lem5918660 A C)). Qed.
Lemma lem5918663 {A C : Type'} : (term1141 A C) = (term1159 A C).
Proof. exact (MK_COMB (@lem5918658 A C) (@lem5918662 A C)). Qed.
Lemma lem5918664 {A C : Type'} : ((term1140 A C) = (term1141 A C)) = ((term1139 A C) = (term1159 A C)).
Proof. exact (MK_COMB (@lem5918652 A C) (@lem5918663 A C)). Qed.
Lemma lem5918665 {A C : Type'} : (term1139 A C) = (term1159 A C).
Proof. exact (EQ_MP (@lem5918664 A C) (@lem5918642 A C)). Qed.
Lemma lem5918874 {A C : Type'} : (term1093 A C) = (term1159 A C).
Proof. exact (TRANS (@lem5918638 A C) (@lem5918665 A C)). Qed.
Lemma lem5918876 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5918877 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5918876 A P Q). Qed.
Lemma lem5918878 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1160 A C y f s) = (term1161 A C y f s).
Proof. exact (@lem5918877 A (term1162 A C y f s) (term351 A C y f s)). Qed.
Lemma lem5918879 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1074 A C y f s x) = (term350 A C y f x s).
Proof. exact (eq_refl (term1074 A C y f s x)). Qed.
Lemma lem5918880 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1163 A C y f s) = (term351 A C y f s).
Proof. exact (fun_ext (fun x : A => @lem5918879 A C y f x s)). Qed.
Lemma lem5918881 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5918882 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1164 A C y f s) = (term352 A C y f s).
Proof. exact (MK_COMB (@lem5918881 A) (@lem5918880 A C y f s)). Qed.
Lemma lem5918883 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1079 A C y f s) = (term1079 A C y f s).
Proof. exact (eq_refl (term1079 A C y f s)). Qed.
Lemma lem5918884 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1160 A C y f s) = (term1080 A C y f s).
Proof. exact (MK_COMB (@lem5918883 A C y f s) (@lem5918882 A C y f s)). Qed.
Lemma lem5918885 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918886 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1165 A C y f s) = (term1166 A C y f s).
Proof. exact (MK_COMB (@lem5918885) (@lem5918884 A C y f s)). Qed.
Lemma lem5918887 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1074 A C y f s x) = (term350 A C y f x s).
Proof. exact (eq_refl (term1074 A C y f s x)). Qed.
Lemma lem5918888 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1079 A C y f s) = (term1079 A C y f s).
Proof. exact (eq_refl (term1079 A C y f s)). Qed.
Lemma lem5918889 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1167 A C y f s x) = (term1168 A C y f x s).
Proof. exact (MK_COMB (@lem5918888 A C y f s) (@lem5918887 A C y f x s)). Qed.
Lemma lem5918890 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1169 A C y f s) = (term1170 A C y f s).
Proof. exact (fun_ext (fun x : A => @lem5918889 A C y f x s)). Qed.
Lemma lem5918891 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5918892 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1161 A C y f s) = (term1171 A C y f s).
Proof. exact (MK_COMB (@lem5918891 A) (@lem5918890 A C y f s)). Qed.
Lemma lem5918893 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : ((term1160 A C y f s) = (term1161 A C y f s)) = ((term1080 A C y f s) = (term1171 A C y f s)).
Proof. exact (MK_COMB (@lem5918886 A C y f s) (@lem5918892 A C y f s)). Qed.
Lemma lem5918894 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1080 A C y f s) = (term1171 A C y f s).
Proof. exact (EQ_MP (@lem5918893 A C y f s) (@lem5918878 A C y f s)). Qed.
Lemma lem5918895 {A C : Type'} (y : C) (s : A -> Prop) : (term1099 A C y s) = (term1172 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918894 A C y f s)). Qed.
Lemma lem5918896 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918897 {A C : Type'} (y : C) (s : A -> Prop) : (term1114 A C y s) = (term1173 A C y s).
Proof. exact (MK_COMB (@lem5918896 A C) (@lem5918895 A C y s)). Qed.
Lemma lem5918899 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5918900 {A C : Type'} (P : type551 A C) : (term1174 A C P) = (term1175 A C P).
Proof. exact (@lem5918899 (A -> C) A P). Qed.
Lemma lem5918901 {A C : Type'} (y : C) (s : A -> Prop) : (term1176 A C y s) = (term1177 A C y s).
Proof. exact (@lem5918900 A C (term1178 A C y s)). Qed.
Lemma lem5918902 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1179 A C y s f) = (term1170 A C y f s).
Proof. exact (eq_refl (term1179 A C y s f)). Qed.
Lemma lem5918903 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5918904 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) (x : A) : (term1180 A C y s f x) = (term1181 A C y f s x).
Proof. exact (MK_COMB (@lem5918902 A C y f s) (@lem5918903 A x)). Qed.
Lemma lem5918905 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1181 A C y f s x) = (term1168 A C y f x s).
Proof. exact (eq_refl (term1181 A C y f s x)). Qed.
Lemma lem5918906 {A C : Type'} (y : C) (f : A -> C) (x : A) (s : A -> Prop) : (term1180 A C y s f x) = (term1168 A C y f x s).
Proof. exact (TRANS (@lem5918904 A C y f s x) (@lem5918905 A C y f x s)). Qed.
Lemma lem5918907 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1182 A C y s f) = (term1170 A C y f s).
Proof. exact (fun_ext (fun x : A => @lem5918906 A C y f x s)). Qed.
Lemma lem5918908 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5918909 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1183 A C y s f) = (term1171 A C y f s).
Proof. exact (MK_COMB (@lem5918908 A) (@lem5918907 A C y f s)). Qed.
Lemma lem5918910 {A C : Type'} (y : C) (s : A -> Prop) : (term1184 A C y s) = (term1172 A C y s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918909 A C y f s)). Qed.
Lemma lem5918911 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918912 {A C : Type'} (y : C) (s : A -> Prop) : (term1176 A C y s) = (term1173 A C y s).
Proof. exact (MK_COMB (@lem5918911 A C) (@lem5918910 A C y s)). Qed.
Lemma lem5918913 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918914 {A C : Type'} (y : C) (s : A -> Prop) : (term1185 A C y s) = (term1186 A C y s).
Proof. exact (MK_COMB (@lem5918913) (@lem5918912 A C y s)). Qed.
Lemma lem5918915 {A C : Type'} (y : C) (f : A -> C) (s : A -> Prop) : (term1179 A C y s f) = (term1170 A C y f s).
Proof. exact (eq_refl (term1179 A C y s f)). Qed.
Lemma lem5918916 {A C : Type'} (x : type569 A C) (f : A -> C) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem5918917 {A C : Type'} (y : C) (s : A -> Prop) (x : type569 A C) (f : A -> C) : (term1187 A C y s x f) = (term1188 A C y s x f).
Proof. exact (MK_COMB (@lem5918915 A C y f s) (@lem5918916 A C x f)). Qed.
Lemma lem5918918 {A C : Type'} (y : C) (x : type569 A C) (f : A -> C) (s : A -> Prop) : (term1188 A C y s x f) = (term1189 A C y x f s).
Proof. exact (eq_refl (term1188 A C y s x f)). Qed.
Lemma lem5918919 {A C : Type'} (y : C) (x : type569 A C) (f : A -> C) (s : A -> Prop) : (term1187 A C y s x f) = (term1189 A C y x f s).
Proof. exact (TRANS (@lem5918917 A C y s x f) (@lem5918918 A C y x f s)). Qed.
Lemma lem5918920 {A C : Type'} (y : C) (x : type569 A C) (s : A -> Prop) : (term1190 A C y s x) = (term1191 A C y x s).
Proof. exact (fun_ext (fun f : A -> C => @lem5918919 A C y x f s)). Qed.
Lemma lem5918921 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5918922 {A C : Type'} (y : C) (x : type569 A C) (s : A -> Prop) : (term1192 A C y s x) = (term1193 A C y x s).
Proof. exact (MK_COMB (@lem5918921 A C) (@lem5918920 A C y x s)). Qed.
Lemma lem5918923 {A C : Type'} (y : C) (s : A -> Prop) : (term1194 A C y s) = (term1195 A C y s).
Proof. exact (fun_ext (fun x : type569 A C => @lem5918922 A C y x s)). Qed.
Lemma lem5918924 {A C : Type'} : (@ex ((A -> C) -> A)) = (@ex ((A -> C) -> A)).
Proof. exact (eq_refl (@ex ((A -> C) -> A))). Qed.
Lemma lem5918925 {A C : Type'} (y : C) (s : A -> Prop) : (term1177 A C y s) = (term1196 A C y s).
Proof. exact (MK_COMB (@lem5918924 A C) (@lem5918923 A C y s)). Qed.
Lemma lem5918926 {A C : Type'} (y : C) (s : A -> Prop) : ((term1176 A C y s) = (term1177 A C y s)) = ((term1173 A C y s) = (term1196 A C y s)).
Proof. exact (MK_COMB (@lem5918914 A C y s) (@lem5918925 A C y s)). Qed.
Lemma lem5918927 {A C : Type'} (y : C) (s : A -> Prop) : (term1173 A C y s) = (term1196 A C y s).
Proof. exact (EQ_MP (@lem5918926 A C y s) (@lem5918901 A C y s)). Qed.
Lemma lem5918928 {A C : Type'} (y : C) (s : A -> Prop) : (term1114 A C y s) = (term1196 A C y s).
Proof. exact (TRANS (@lem5918897 A C y s) (@lem5918927 A C y s)). Qed.
Lemma lem5918929 {A C : Type'} (y : C) : (term1121 A C y) = (term1197 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918928 A C y s)). Qed.
Lemma lem5918930 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918931 {A C : Type'} (y : C) : (term1136 A C y) = (term1198 A C y).
Proof. exact (MK_COMB (@lem5918930 A) (@lem5918929 A C y)). Qed.
Lemma lem5918933 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5918934 {A C : Type'} (P : type593 A C) : (term1199 A C P) = (term1200 A C P).
Proof. exact (@lem5918933 (A -> Prop) (type569 A C) P). Qed.
Lemma lem5918935 {A C : Type'} (y : C) : (term1201 A C y) = (term1202 A C y).
Proof. exact (@lem5918934 A C (term1203 A C y)). Qed.
Lemma lem5918936 {A C : Type'} (y : C) (s : A -> Prop) : (term1204 A C y s) = (term1195 A C y s).
Proof. exact (eq_refl (term1204 A C y s)). Qed.
Lemma lem5918937 {A C : Type'} (x : type569 A C) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5918938 {A C : Type'} (y : C) (s : A -> Prop) (x : type569 A C) : (term1205 A C y s x) = (term1206 A C y s x).
Proof. exact (MK_COMB (@lem5918936 A C y s) (@lem5918937 A C x)). Qed.
Lemma lem5918939 {A C : Type'} (y : C) (x : type569 A C) (s : A -> Prop) : (term1206 A C y s x) = (term1193 A C y x s).
Proof. exact (eq_refl (term1206 A C y s x)). Qed.
Lemma lem5918940 {A C : Type'} (y : C) (x : type569 A C) (s : A -> Prop) : (term1205 A C y s x) = (term1193 A C y x s).
Proof. exact (TRANS (@lem5918938 A C y s x) (@lem5918939 A C y x s)). Qed.
Lemma lem5918941 {A C : Type'} (y : C) (s : A -> Prop) : (term1207 A C y s) = (term1195 A C y s).
Proof. exact (fun_ext (fun x : type569 A C => @lem5918940 A C y x s)). Qed.
Lemma lem5918942 {A C : Type'} : (@ex ((A -> C) -> A)) = (@ex ((A -> C) -> A)).
Proof. exact (eq_refl (@ex ((A -> C) -> A))). Qed.
Lemma lem5918943 {A C : Type'} (y : C) (s : A -> Prop) : (term1208 A C y s) = (term1196 A C y s).
Proof. exact (MK_COMB (@lem5918942 A C) (@lem5918941 A C y s)). Qed.
Lemma lem5918944 {A C : Type'} (y : C) : (term1209 A C y) = (term1197 A C y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918943 A C y s)). Qed.
Lemma lem5918945 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918946 {A C : Type'} (y : C) : (term1201 A C y) = (term1198 A C y).
Proof. exact (MK_COMB (@lem5918945 A) (@lem5918944 A C y)). Qed.
Lemma lem5918947 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918948 {A C : Type'} (y : C) : (term1210 A C y) = (term1211 A C y).
Proof. exact (MK_COMB (@lem5918947) (@lem5918946 A C y)). Qed.
Lemma lem5918949 {A C : Type'} (y : C) (s : A -> Prop) : (term1204 A C y s) = (term1195 A C y s).
Proof. exact (eq_refl (term1204 A C y s)). Qed.
Lemma lem5918950 {A C : Type'} (x : type631 A C) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem5918951 {A C : Type'} (y : C) (x : type631 A C) (s : A -> Prop) : (term1212 A C y x s) = (term1213 A C y x s).
Proof. exact (MK_COMB (@lem5918949 A C y s) (@lem5918950 A C x s)). Qed.
Lemma lem5918952 {A C : Type'} (y : C) (x : type631 A C) (s : A -> Prop) : (term1213 A C y x s) = (term1214 A C y x s).
Proof. exact (eq_refl (term1213 A C y x s)). Qed.
Lemma lem5918953 {A C : Type'} (y : C) (x : type631 A C) (s : A -> Prop) : (term1212 A C y x s) = (term1214 A C y x s).
Proof. exact (TRANS (@lem5918951 A C y x s) (@lem5918952 A C y x s)). Qed.
Lemma lem5918954 {A C : Type'} (y : C) (x : type631 A C) : (term1215 A C y x) = (term1216 A C y x).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5918953 A C y x s)). Qed.
Lemma lem5918955 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5918956 {A C : Type'} (y : C) (x : type631 A C) : (term1217 A C y x) = (term1218 A C y x).
Proof. exact (MK_COMB (@lem5918955 A) (@lem5918954 A C y x)). Qed.
Lemma lem5918957 {A C : Type'} (y : C) : (term1219 A C y) = (term1220 A C y).
Proof. exact (fun_ext (fun x : type631 A C => @lem5918956 A C y x)). Qed.
Lemma lem5918958 {A C : Type'} : (@ex ((A -> Prop) -> (A -> C) -> A)) = (@ex ((A -> Prop) -> (A -> C) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> C) -> A))). Qed.
Lemma lem5918959 {A C : Type'} (y : C) : (term1202 A C y) = (term1221 A C y).
Proof. exact (MK_COMB (@lem5918958 A C) (@lem5918957 A C y)). Qed.
Lemma lem5918960 {A C : Type'} (y : C) : ((term1201 A C y) = (term1202 A C y)) = ((term1198 A C y) = (term1221 A C y)).
Proof. exact (MK_COMB (@lem5918948 A C y) (@lem5918959 A C y)). Qed.
Lemma lem5918961 {A C : Type'} (y : C) : (term1198 A C y) = (term1221 A C y).
Proof. exact (EQ_MP (@lem5918960 A C y) (@lem5918935 A C y)). Qed.
Lemma lem5918962 {A C : Type'} (y : C) : (term1136 A C y) = (term1221 A C y).
Proof. exact (TRANS (@lem5918931 A C y) (@lem5918961 A C y)). Qed.
Lemma lem5918963 {A C : Type'} : (term1143 A C) = (term1222 A C).
Proof. exact (fun_ext (fun y : C => @lem5918962 A C y)). Qed.
Lemma lem5918964 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918965 {A C : Type'} : (term1158 A C) = (term1223 A C).
Proof. exact (MK_COMB (@lem5918964 C) (@lem5918963 A C)). Qed.
Lemma lem5918967 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5918968 {A C : Type'} (P : type1437 A C) : (term1224 A C P) = (term1225 A C P).
Proof. exact (@lem5918967 C (type631 A C) P). Qed.
Lemma lem5918969 {A C : Type'} : (term1226 A C) = (term1227 A C).
Proof. exact (@lem5918968 A C (term1228 A C)). Qed.
Lemma lem5918970 {A C : Type'} (y : C) : (term1229 A C y) = (term1220 A C y).
Proof. exact (eq_refl (term1229 A C y)). Qed.
Lemma lem5918971 {A C : Type'} (x : type631 A C) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5918972 {A C : Type'} (y : C) (x : type631 A C) : (term1230 A C y x) = (term1231 A C y x).
Proof. exact (MK_COMB (@lem5918970 A C y) (@lem5918971 A C x)). Qed.
Lemma lem5918973 {A C : Type'} (y : C) (x : type631 A C) : (term1231 A C y x) = (term1218 A C y x).
Proof. exact (eq_refl (term1231 A C y x)). Qed.
Lemma lem5918974 {A C : Type'} (y : C) (x : type631 A C) : (term1230 A C y x) = (term1218 A C y x).
Proof. exact (TRANS (@lem5918972 A C y x) (@lem5918973 A C y x)). Qed.
Lemma lem5918975 {A C : Type'} (y : C) : (term1232 A C y) = (term1220 A C y).
Proof. exact (fun_ext (fun x : type631 A C => @lem5918974 A C y x)). Qed.
Lemma lem5918976 {A C : Type'} : (@ex ((A -> Prop) -> (A -> C) -> A)) = (@ex ((A -> Prop) -> (A -> C) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> C) -> A))). Qed.
Lemma lem5918977 {A C : Type'} (y : C) : (term1233 A C y) = (term1221 A C y).
Proof. exact (MK_COMB (@lem5918976 A C) (@lem5918975 A C y)). Qed.
Lemma lem5918978 {A C : Type'} : (term1234 A C) = (term1222 A C).
Proof. exact (fun_ext (fun y : C => @lem5918977 A C y)). Qed.
Lemma lem5918979 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918980 {A C : Type'} : (term1226 A C) = (term1223 A C).
Proof. exact (MK_COMB (@lem5918979 C) (@lem5918978 A C)). Qed.
Lemma lem5918981 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5918982 {A C : Type'} : (term1235 A C) = (term1236 A C).
Proof. exact (MK_COMB (@lem5918981) (@lem5918980 A C)). Qed.
Lemma lem5918983 {A C : Type'} (y : C) : (term1229 A C y) = (term1220 A C y).
Proof. exact (eq_refl (term1229 A C y)). Qed.
Lemma lem5918984 {A C : Type'} (x : type1448 A C) (y : C) : (x y) = (x y).
Proof. exact (eq_refl (x y)). Qed.
Lemma lem5918985 {A C : Type'} (x : type1448 A C) (y : C) : (term1237 A C x y) = (term1238 A C x y).
Proof. exact (MK_COMB (@lem5918983 A C y) (@lem5918984 A C x y)). Qed.
Lemma lem5918986 {A C : Type'} (x : type1448 A C) (y : C) : (term1238 A C x y) = (term1239 A C x y).
Proof. exact (eq_refl (term1238 A C x y)). Qed.
Lemma lem5918987 {A C : Type'} (x : type1448 A C) (y : C) : (term1237 A C x y) = (term1239 A C x y).
Proof. exact (TRANS (@lem5918985 A C x y) (@lem5918986 A C x y)). Qed.
Lemma lem5918988 {A C : Type'} (x : type1448 A C) : (term1240 A C x) = (term1241 A C x).
Proof. exact (fun_ext (fun y : C => @lem5918987 A C x y)). Qed.
Lemma lem5918989 {C : Type'} : (@all C) = (@all C).
Proof. exact (eq_refl (@all C)). Qed.
Lemma lem5918990 {A C : Type'} (x : type1448 A C) : (term1242 A C x) = (term1243 A C x).
Proof. exact (MK_COMB (@lem5918989 C) (@lem5918988 A C x)). Qed.
Lemma lem5918991 {A C : Type'} : (term1244 A C) = (term1245 A C).
Proof. exact (fun_ext (fun x : type1448 A C => @lem5918990 A C x)). Qed.
Lemma lem5918992 {A C : Type'} : (@ex (C -> (A -> Prop) -> (A -> C) -> A)) = (@ex (C -> (A -> Prop) -> (A -> C) -> A)).
Proof. exact (eq_refl (@ex (C -> (A -> Prop) -> (A -> C) -> A))). Qed.
Lemma lem5918993 {A C : Type'} : (term1227 A C) = (term1246 A C).
Proof. exact (MK_COMB (@lem5918992 A C) (@lem5918991 A C)). Qed.
Lemma lem5918994 {A C : Type'} : ((term1226 A C) = (term1227 A C)) = ((term1223 A C) = (term1246 A C)).
Proof. exact (MK_COMB (@lem5918982 A C) (@lem5918993 A C)). Qed.
Lemma lem5918995 {A C : Type'} : (term1223 A C) = (term1246 A C).
Proof. exact (EQ_MP (@lem5918994 A C) (@lem5918969 A C)). Qed.
Lemma lem5918996 {A C : Type'} : (term1158 A C) = (term1246 A C).
Proof. exact (TRANS (@lem5918965 A C) (@lem5918995 A C)). Qed.
Lemma lem5918997 {A C : Type'} : (term1155 A C) = (term1155 A C).
Proof. exact (eq_refl (term1155 A C)). Qed.
Lemma lem5918998 {A C : Type'} : (term1159 A C) = (term1247 A C).
Proof. exact (MK_COMB (@lem5918997 A C) (@lem5918996 A C)). Qed.
Lemma lem5919000 {A : Type'} (P : Prop) (Q : A -> Prop) : (term528 A P Q) = (term527 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5919001 {A C : Type'} (P : Prop) (Q : type719 A C) : (term1248 A C P Q) = (term1249 A C P Q).
Proof. exact (@lem5919000 (type1448 A C) P Q). Qed.
Lemma lem5919002 {A C : Type'} : (term1250 A C) = (term1251 A C).
Proof. exact (@lem5919001 A C (term1153 A C) (term1245 A C)). Qed.
Lemma lem5919003 {A C : Type'} (x : type1448 A C) : (term1252 A C x) = (term1243 A C x).
Proof. exact (eq_refl (term1252 A C x)). Qed.
Lemma lem5919004 {A C : Type'} : (term1253 A C) = (term1245 A C).
Proof. exact (fun_ext (fun x : type1448 A C => @lem5919003 A C x)). Qed.
Lemma lem5919005 {A C : Type'} : (@ex (C -> (A -> Prop) -> (A -> C) -> A)) = (@ex (C -> (A -> Prop) -> (A -> C) -> A)).
Proof. exact (eq_refl (@ex (C -> (A -> Prop) -> (A -> C) -> A))). Qed.
Lemma lem5919006 {A C : Type'} : (term1254 A C) = (term1246 A C).
Proof. exact (MK_COMB (@lem5919005 A C) (@lem5919004 A C)). Qed.
Lemma lem5919007 {A C : Type'} : (term1155 A C) = (term1155 A C).
Proof. exact (eq_refl (term1155 A C)). Qed.
Lemma lem5919008 {A C : Type'} : (term1250 A C) = (term1247 A C).
Proof. exact (MK_COMB (@lem5919007 A C) (@lem5919006 A C)). Qed.
Lemma lem5919009 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5919010 {A C : Type'} : (term1255 A C) = (term1256 A C).
Proof. exact (MK_COMB (@lem5919009) (@lem5919008 A C)). Qed.
Lemma lem5919011 {A C : Type'} (x : type1448 A C) : (term1252 A C x) = (term1243 A C x).
Proof. exact (eq_refl (term1252 A C x)). Qed.
Lemma lem5919012 {A C : Type'} : (term1155 A C) = (term1155 A C).
Proof. exact (eq_refl (term1155 A C)). Qed.
Lemma lem5919013 {A C : Type'} (x : type1448 A C) : (term1257 A C x) = (term1258 A C x).
Proof. exact (MK_COMB (@lem5919012 A C) (@lem5919011 A C x)). Qed.
Lemma lem5919014 {A C : Type'} : (term1259 A C) = (term1260 A C).
Proof. exact (fun_ext (fun x : type1448 A C => @lem5919013 A C x)). Qed.
Lemma lem5919015 {A C : Type'} : (@ex (C -> (A -> Prop) -> (A -> C) -> A)) = (@ex (C -> (A -> Prop) -> (A -> C) -> A)).
Proof. exact (eq_refl (@ex (C -> (A -> Prop) -> (A -> C) -> A))). Qed.
Lemma lem5919016 {A C : Type'} : (term1251 A C) = (term1261 A C).
Proof. exact (MK_COMB (@lem5919015 A C) (@lem5919014 A C)). Qed.
Lemma lem5919017 {A C : Type'} : ((term1250 A C) = (term1251 A C)) = ((term1247 A C) = (term1261 A C)).
Proof. exact (MK_COMB (@lem5919010 A C) (@lem5919016 A C)). Qed.
Lemma lem5919018 {A C : Type'} : (term1247 A C) = (term1261 A C).
Proof. exact (EQ_MP (@lem5919017 A C) (@lem5919002 A C)). Qed.
Lemma lem5919019 {A C : Type'} : (term1159 A C) = (term1261 A C).
Proof. exact (TRANS (@lem5918998 A C) (@lem5919018 A C)). Qed.
Lemma lem5919020 {A C : Type'} : (term1093 A C) = (term1261 A C).
Proof. exact (TRANS (@lem5918874 A C) (@lem5919019 A C)). Qed.
Lemma lem5919021 {A C : Type'} : (term318 A C) = (term1261 A C).
Proof. exact (TRANS (@lem5918177 A C) (@lem5919020 A C)). Qed.
Lemma lem5919022 {A C : Type'} (h1 : term318 A C) : term1261 A C.
Proof. exact (EQ_MP (@lem5919021 A C) (@lem5913308 A C h1)). Qed.
Lemma lem5919025 {A B : Type'} (x'' : type1448 A B) (h1 : term1258 A B x'') : term1258 A B x''.
Proof. exact (h1). Qed.
Lemma lem5919027 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term865 A B C x'''' op g f) : term865 A B C x'''' op g f.
Proof. exact (h1). Qed.
Lemma lem5919028 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term863 A B C x'''' op s g f) : term863 A B C x'''' op s g f.
Proof. exact (h1). Qed.
Lemma lem5919029 {A B C : Type'} (x''''' : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term861 A B C x''''' x'''' op s g f) : term861 A B C x''''' x'''' op s g f.
Proof. exact (h1). Qed.
Lemma lem5919030 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term858 A B C x''''' y x'''' op s g f) : term858 A B C x''''' y x'''' op s g f.
Proof. exact (h1). Qed.
Lemma lem5919472 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (eq_refl (@IN A)). Qed.
Lemma lem5919481 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919482 {A B : Type'} (f : type1448 A B) (x : B) : (f x) = (@I (B -> (A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem5919481 B (type631 A B) f x). Qed.
Lemma lem5919483 {A B : Type'} (x'' : type1448 A B) (y : B) : (x'' y) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y).
Proof. exact (@lem5919482 A B x'' y). Qed.
Lemma lem5919484 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919485 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (x'' y s) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y s).
Proof. exact (MK_COMB (@lem5919483 A B x'' y) (@lem5919484 A s)). Qed.
Lemma lem5919487 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919488 {A B : Type'} (f : type631 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem5919487 (A -> Prop) (type569 A B) f x). Qed.
Lemma lem5919489 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y s) = (term1262 A B x'' y s).
Proof. exact (@lem5919488 A B (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y) s). Qed.
Lemma lem5919490 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (x'' y s) = (term1262 A B x'' y s).
Proof. exact (TRANS (@lem5919485 A B x'' y s) (@lem5919489 A B x'' y s)). Qed.
Lemma lem5919491 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5919492 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'' y s f) = (term1263 A B x'' y s f).
Proof. exact (MK_COMB (@lem5919490 A B x'' y s) (@lem5919491 A B f)). Qed.
Lemma lem5919494 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919495 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem5919494 (A -> B) A f x). Qed.
Lemma lem5919496 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1263 A B x'' y s f) = (term1264 A B x'' y s f).
Proof. exact (@lem5919495 A B (term1262 A B x'' y s) f). Qed.
Lemma lem5919498 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'' y s f) = (term1264 A B x'' y s f).
Proof. exact (TRANS (@lem5919492 A B x'' y s f) (@lem5919496 A B x'' y s f)). Qed.
Lemma lem5919499 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919500 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1265 A B x'' y s f) = (term1266 A B x'' y s f).
Proof. exact (MK_COMB (@lem5919472 A) (@lem5919498 A B x'' y s f)). Qed.
Lemma lem5919501 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1267 A B x'' y f s) = (term1268 A B x'' y f s).
Proof. exact (MK_COMB (@lem5919500 A B x'' y s f) (@lem5919499 A s)). Qed.
Lemma lem5919503 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919504 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5919503 A (type686 A) f x). Qed.
Lemma lem5919505 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1266 A B x'' y s f) = (term1269 A B x'' y s f).
Proof. exact (@lem5919504 A (@IN A) (term1264 A B x'' y s f)). Qed.
Lemma lem5919506 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919507 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1268 A B x'' y f s) = (term1270 A B x'' y f s).
Proof. exact (MK_COMB (@lem5919505 A B x'' y s f) (@lem5919506 A s)). Qed.
Lemma lem5919509 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919510 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5919509 (A -> Prop) Prop f x). Qed.
Lemma lem5919511 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1270 A B x'' y f s) = (term1271 A B x'' y f s).
Proof. exact (@lem5919510 A (term1269 A B x'' y s f) s). Qed.
Lemma lem5919512 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1268 A B x'' y f s) = (term1271 A B x'' y f s).
Proof. exact (TRANS (@lem5919507 A B x'' y f s) (@lem5919511 A B x'' y f s)). Qed.
Lemma lem5919513 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1267 A B x'' y f s) = (term1271 A B x'' y f s).
Proof. exact (TRANS (@lem5919501 A B x'' y f s) (@lem5919512 A B x'' y f s)). Qed.
Lemma lem5919516 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5919525 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919526 {A B : Type'} (f : type1448 A B) (x : B) : (f x) = (@I (B -> (A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem5919525 B (type631 A B) f x). Qed.
Lemma lem5919527 {A B : Type'} (x'' : type1448 A B) (y : B) : (x'' y) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y).
Proof. exact (@lem5919526 A B x'' y). Qed.
Lemma lem5919528 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919529 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (x'' y s) = (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y s).
Proof. exact (MK_COMB (@lem5919527 A B x'' y) (@lem5919528 A s)). Qed.
Lemma lem5919531 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919532 {A B : Type'} (f : type631 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> A) f x).
Proof. exact (@lem5919531 (A -> Prop) (type569 A B) f x). Qed.
Lemma lem5919533 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y s) = (term1262 A B x'' y s).
Proof. exact (@lem5919532 A B (@I (B -> (A -> Prop) -> (A -> B) -> A) x'' y) s). Qed.
Lemma lem5919534 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (x'' y s) = (term1262 A B x'' y s).
Proof. exact (TRANS (@lem5919529 A B x'' y s) (@lem5919533 A B x'' y s)). Qed.
Lemma lem5919535 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5919536 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'' y s f) = (term1263 A B x'' y s f).
Proof. exact (MK_COMB (@lem5919534 A B x'' y s) (@lem5919535 A B f)). Qed.
Lemma lem5919538 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919539 {A B : Type'} (f : type569 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A) f x).
Proof. exact (@lem5919538 (A -> B) A f x). Qed.
Lemma lem5919540 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1263 A B x'' y s f) = (term1264 A B x'' y s f).
Proof. exact (@lem5919539 A B (term1262 A B x'' y s) f). Qed.
Lemma lem5919542 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (x'' y s f) = (term1264 A B x'' y s f).
Proof. exact (TRANS (@lem5919536 A B x'' y s f) (@lem5919540 A B x'' y s f)). Qed.
Lemma lem5919543 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1272 A B x'' y s f) = (term1273 A B x'' y s f).
Proof. exact (MK_COMB (@lem5919516 A B f) (@lem5919542 A B x'' y s f)). Qed.
Lemma lem5919545 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919546 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5919545 A B f x). Qed.
Lemma lem5919547 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1273 A B x'' y s f) = (term1274 A B x'' y s f).
Proof. exact (@lem5919546 A B f (term1264 A B x'' y s f)). Qed.
Lemma lem5919548 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1272 A B x'' y s f) = (term1274 A B x'' y s f).
Proof. exact (TRANS (@lem5919543 A B x'' y s f) (@lem5919547 A B x'' y s f)). Qed.
Lemma lem5919549 {B : Type'} (y : B) : (@eq B y) = (@eq B y).
Proof. exact (eq_refl (@eq B y)). Qed.
Lemma lem5919550 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (y = (term1272 A B x'' y s f)) = (y = (term1274 A B x'' y s f)).
Proof. exact (MK_COMB (@lem5919549 B y) (@lem5919548 A B x'' y s f)). Qed.
Lemma lem5919551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5919552 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) (f : A -> B) : (term1275 A B x'' y s f) = (term1276 A B x'' y s f).
Proof. exact (MK_COMB (@lem5919551) (@lem5919550 A B x'' y s f)). Qed.
Lemma lem5919553 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1277 A B x'' y f s) = (term1278 A B x'' y f s).
Proof. exact (MK_COMB (@lem5919552 A B x'' y s f) (@lem5919513 A B x'' y f s)). Qed.
Lemma lem5919554 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5919563 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919564 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5919563 (A -> B) (type678 A B) f x). Qed.
Lemma lem5919565 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5919564 A B (@IMAGE A B) f). Qed.
Lemma lem5919566 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919567 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5919565 A B f) (@lem5919566 A s)). Qed.
Lemma lem5919569 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919570 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5919569 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5919571 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5919570 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5919573 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5919567 A B f s) (@lem5919571 A B f s)). Qed.
Lemma lem5919574 {B : Type'} (y : B) : (@IN B y) = (@IN B y).
Proof. exact (eq_refl (@IN B y)). Qed.
Lemma lem5919575 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term354 A B y f s) = (term1280 A B y f s).
Proof. exact (MK_COMB (@lem5919574 B y) (@lem5919573 A B f s)). Qed.
Lemma lem5919577 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919578 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem5919577 B (type686 B) f x). Qed.
Lemma lem5919579 {B : Type'} (y : B) : (@IN B y) = (@I (B -> (B -> Prop) -> Prop) (@IN B) y).
Proof. exact (@lem5919578 B (@IN B) y). Qed.
Lemma lem5919580 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5919581 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1280 A B y f s) = (term1281 A B y f s).
Proof. exact (MK_COMB (@lem5919579 B y) (@lem5919580 A B f s)). Qed.
Lemma lem5919583 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919584 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem5919583 (B -> Prop) Prop f x). Qed.
Lemma lem5919585 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1281 A B y f s) = (term1282 A B y f s).
Proof. exact (@lem5919584 B (@I (B -> (B -> Prop) -> Prop) (@IN B) y) (term1279 A B f s)). Qed.
Lemma lem5919586 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1280 A B y f s) = (term1282 A B y f s).
Proof. exact (TRANS (@lem5919581 A B y f s) (@lem5919585 A B y f s)). Qed.
Lemma lem5919587 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term354 A B y f s) = (term1282 A B y f s).
Proof. exact (TRANS (@lem5919575 A B y f s) (@lem5919586 A B y f s)). Qed.
Lemma lem5919588 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1162 A B y f s) = (term1283 A B y f s).
Proof. exact (MK_COMB (@lem5919554) (@lem5919587 A B y f s)). Qed.
Lemma lem5919589 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5919590 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1079 A B y f s) = (term1284 A B y f s).
Proof. exact (MK_COMB (@lem5919589) (@lem5919588 A B y f s)). Qed.
Lemma lem5919591 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1285 A B x'' y f s) = (term1286 A B x'' y f s).
Proof. exact (MK_COMB (@lem5919590 A B y f s) (@lem5919553 A B x'' y f s)). Qed.
Lemma lem5919592 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (term1287 A B x'' y s) = (term1288 A B x'' y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5919591 A B x'' y f s)). Qed.
Lemma lem5919593 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5919594 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (term1289 A B x'' y s) = (term1290 A B x'' y s).
Proof. exact (MK_COMB (@lem5919593 A B) (@lem5919592 A B x'' y s)). Qed.
Lemma lem5919595 {A B : Type'} (x'' : type1448 A B) (y : B) : (term1291 A B x'' y) = (term1292 A B x'' y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5919594 A B x'' y s)). Qed.
Lemma lem5919596 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5919597 {A B : Type'} (x'' : type1448 A B) (y : B) : (term1239 A B x'' y) = (term1293 A B x'' y).
Proof. exact (MK_COMB (@lem5919596 A) (@lem5919595 A B x'' y)). Qed.
Lemma lem5919598 {A B : Type'} (x'' : type1448 A B) : (term1241 A B x'') = (term1294 A B x'').
Proof. exact (fun_ext (fun y : B => @lem5919597 A B x'' y)). Qed.
Lemma lem5919599 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5919600 {A B : Type'} (x'' : type1448 A B) : (term1243 A B x'') = (term1295 A B x'').
Proof. exact (MK_COMB (@lem5919599 B) (@lem5919598 A B x'')). Qed.
Lemma lem5919601 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5919608 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919609 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5919608 A (type686 A) f x). Qed.
Lemma lem5919610 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5919609 A (@IN A) x). Qed.
Lemma lem5919611 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919612 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5919610 A x) (@lem5919611 A s)). Qed.
Lemma lem5919614 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919615 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5919614 (A -> Prop) Prop f x). Qed.
Lemma lem5919616 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5919615 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5919618 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5919612 A x s) (@lem5919616 A x s)). Qed.
Lemma lem5919619 {A : Type'} (x : A) (s : A -> Prop) : (term229 A x s) = (term1297 A x s).
Proof. exact (MK_COMB (@lem5919601) (@lem5919618 A x s)). Qed.
Lemma lem5919620 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5919627 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919629 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5919627 A B f x). Qed.
Lemma lem5919630 {B : Type'} (y : B) : (@eq B y) = (@eq B y).
Proof. exact (eq_refl (@eq B y)). Qed.
Lemma lem5919631 {A B : Type'} (y : B) (f : A -> B) (x : A) : (y = (f x)) = (y = (@I (A -> B) f x)).
Proof. exact (MK_COMB (@lem5919630 B y) (@lem5919629 A B f x)). Qed.
Lemma lem5919632 {A B : Type'} (y : B) (f : A -> B) (x : A) : (term1298 A B y f x) = (term1299 A B y f x).
Proof. exact (MK_COMB (@lem5919620) (@lem5919631 A B y f x)). Qed.
Lemma lem5919633 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5919634 {A B : Type'} (y : B) (f : A -> B) (x : A) : (term1300 A B y f x) = (term1301 A B y f x).
Proof. exact (MK_COMB (@lem5919633) (@lem5919632 A B y f x)). Qed.
Lemma lem5919635 {A B : Type'} (y : B) (f : A -> B) (x : A) (s : A -> Prop) : (term1071 A B y f x s) = (term1302 A B y f x s).
Proof. exact (MK_COMB (@lem5919634 A B y f x) (@lem5919619 A x s)). Qed.
Lemma lem5919636 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1077 A B y f s) = (term1303 A B y f s).
Proof. exact (fun_ext (fun x : A => @lem5919635 A B y f x s)). Qed.
Lemma lem5919637 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5919638 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1078 A B y f s) = (term1304 A B y f s).
Proof. exact (MK_COMB (@lem5919637 A) (@lem5919636 A B y f s)). Qed.
Lemma lem5919647 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919648 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5919647 (A -> B) (type678 A B) f x). Qed.
Lemma lem5919649 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5919648 A B (@IMAGE A B) f). Qed.
Lemma lem5919650 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919651 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5919649 A B f) (@lem5919650 A s)). Qed.
Lemma lem5919653 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919654 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5919653 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5919655 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5919654 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5919657 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5919651 A B f s) (@lem5919655 A B f s)). Qed.
Lemma lem5919658 {B : Type'} (y : B) : (@IN B y) = (@IN B y).
Proof. exact (eq_refl (@IN B y)). Qed.
Lemma lem5919659 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term354 A B y f s) = (term1280 A B y f s).
Proof. exact (MK_COMB (@lem5919658 B y) (@lem5919657 A B f s)). Qed.
Lemma lem5919661 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919662 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem5919661 B (type686 B) f x). Qed.
Lemma lem5919663 {B : Type'} (y : B) : (@IN B y) = (@I (B -> (B -> Prop) -> Prop) (@IN B) y).
Proof. exact (@lem5919662 B (@IN B) y). Qed.
Lemma lem5919664 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5919665 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1280 A B y f s) = (term1281 A B y f s).
Proof. exact (MK_COMB (@lem5919663 B y) (@lem5919664 A B f s)). Qed.
Lemma lem5919667 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919668 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem5919667 (B -> Prop) Prop f x). Qed.
Lemma lem5919669 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1281 A B y f s) = (term1282 A B y f s).
Proof. exact (@lem5919668 B (@I (B -> (B -> Prop) -> Prop) (@IN B) y) (term1279 A B f s)). Qed.
Lemma lem5919670 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1280 A B y f s) = (term1282 A B y f s).
Proof. exact (TRANS (@lem5919665 A B y f s) (@lem5919669 A B y f s)). Qed.
Lemma lem5919671 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term354 A B y f s) = (term1282 A B y f s).
Proof. exact (TRANS (@lem5919659 A B y f s) (@lem5919670 A B y f s)). Qed.
Lemma lem5919672 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5919673 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1081 A B y f s) = (term1305 A B y f s).
Proof. exact (MK_COMB (@lem5919672) (@lem5919671 A B y f s)). Qed.
Lemma lem5919674 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term1083 A B y f s) = (term1306 A B y f s).
Proof. exact (MK_COMB (@lem5919673 A B y f s) (@lem5919638 A B y f s)). Qed.
Lemma lem5919675 {A B : Type'} (y : B) (s : A -> Prop) : (term1098 A B y s) = (term1307 A B y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5919674 A B y f s)). Qed.
Lemma lem5919676 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5919677 {A B : Type'} (y : B) (s : A -> Prop) : (term1109 A B y s) = (term1308 A B y s).
Proof. exact (MK_COMB (@lem5919676 A B) (@lem5919675 A B y s)). Qed.
Lemma lem5919678 {A B : Type'} (y : B) : (term1120 A B y) = (term1309 A B y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5919677 A B y s)). Qed.
Lemma lem5919679 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5919680 {A B : Type'} (y : B) : (term1131 A B y) = (term1310 A B y).
Proof. exact (MK_COMB (@lem5919679 A) (@lem5919678 A B y)). Qed.
Lemma lem5919681 {A B : Type'} : (term1142 A B) = (term1311 A B).
Proof. exact (fun_ext (fun y : B => @lem5919680 A B y)). Qed.
Lemma lem5919682 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5919683 {A B : Type'} : (term1153 A B) = (term1312 A B).
Proof. exact (MK_COMB (@lem5919682 B) (@lem5919681 A B)). Qed.
Lemma lem5919684 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5919685 {A B : Type'} : (term1155 A B) = (term1313 A B).
Proof. exact (MK_COMB (@lem5919684) (@lem5919683 A B)). Qed.
Lemma lem5919686 {A B : Type'} (x'' : type1448 A B) : (term1258 A B x'') = (term1314 A B x'').
Proof. exact (MK_COMB (@lem5919685 A B) (@lem5919600 A B x'')). Qed.
Lemma lem5919687 {A B : Type'} (x'' : type1448 A B) (h1 : term1258 A B x'') : term1314 A B x''.
Proof. exact (EQ_MP (@lem5919686 A B x'') (@lem5919025 A B x'' h1)). Qed.
Lemma lem5919904 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5919905 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5919906 {C : Type'} (op : type1400 C) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5919907 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5919912 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919913 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5919912 A B f x). Qed.
Lemma lem5919915 {A B : Type'} (f : A -> B) (x'''' : A) : (f x'''') = (@I (A -> B) f x'''').
Proof. exact (@lem5919913 A B f x''''). Qed.
Lemma lem5919916 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term108 A B C g f x'''') = (term1315 A B C g f x'''').
Proof. exact (MK_COMB (@lem5919907 B C g) (@lem5919915 A B f x'''')). Qed.
Lemma lem5919918 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919919 {B C : Type'} (f : B -> C) (x : B) : (f x) = (@I (B -> C) f x).
Proof. exact (@lem5919918 B C f x). Qed.
Lemma lem5919920 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term1315 A B C g f x'''') = (term1316 A B C g f x'''').
Proof. exact (@lem5919919 B C g (@I (A -> B) f x'''')). Qed.
Lemma lem5919921 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term108 A B C g f x'''') = (term1316 A B C g f x'''').
Proof. exact (TRANS (@lem5919916 A B C g f x'''') (@lem5919920 A B C g f x'''')). Qed.
Lemma lem5919930 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919931 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5919930 (A -> B) (type678 A B) f x). Qed.
Lemma lem5919932 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5919931 A B (@IMAGE A B) f). Qed.
Lemma lem5919933 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5919934 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5919932 A B f) (@lem5919933 A s)). Qed.
Lemma lem5919936 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919937 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5919936 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5919938 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5919937 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5919940 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5919934 A B f s) (@lem5919938 A B f s)). Qed.
Lemma lem5919941 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5919942 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5919943 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1317 A B C op f s) = (term1318 A B C op f s).
Proof. exact (MK_COMB (@lem5919942 B C op) (@lem5919940 A B f s)). Qed.
Lemma lem5919944 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1319 A B C op f s g).
Proof. exact (MK_COMB (@lem5919943 A B C op f s) (@lem5919941 B C g)). Qed.
Lemma lem5919946 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919947 {B C : Type'} (f : type750 B C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5919946 (type1400 C) (type632 B C) f x). Qed.
Lemma lem5919948 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op).
Proof. exact (@lem5919947 B C (@iterate C B) op). Qed.
Lemma lem5919949 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5919950 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1320 A B C op f s).
Proof. exact (MK_COMB (@lem5919948 B C op) (@lem5919949 A B f s)). Qed.
Lemma lem5919952 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919953 {B C : Type'} (f : type632 B C) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5919952 (B -> Prop) (type570 B C) f x). Qed.
Lemma lem5919954 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1320 A B C op f s) = (term1321 A B C op f s).
Proof. exact (@lem5919953 B C (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op) (term1279 A B f s)). Qed.
Lemma lem5919955 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1321 A B C op f s).
Proof. exact (TRANS (@lem5919950 A B C op f s) (@lem5919954 A B C op f s)). Qed.
Lemma lem5919956 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5919957 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1322 A B C op f s g).
Proof. exact (MK_COMB (@lem5919955 A B C op f s) (@lem5919956 B C g)). Qed.
Lemma lem5919959 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919960 {B C : Type'} (f : type570 B C) (x : B -> C) : (f x) = (@I ((B -> C) -> C) f x).
Proof. exact (@lem5919959 (B -> C) C f x). Qed.
Lemma lem5919961 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1322 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (@lem5919960 B C (term1321 A B C op f s) g). Qed.
Lemma lem5919962 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5919957 A B C op f s g) (@lem5919961 A B C op f s g)). Qed.
Lemma lem5919963 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5919944 A B C op f s g) (@lem5919962 A B C op f s g)). Qed.
Lemma lem5919964 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term306 A B C op g f x'''') = (term1324 A B C op g f x'''').
Proof. exact (MK_COMB (@lem5919906 C op) (@lem5919921 A B C g f x'''')). Qed.
Lemma lem5919965 {A B C : Type'} (x'''' : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term374 A B C x'''' op f s g) = (term1325 A B C x'''' op f s g).
Proof. exact (MK_COMB (@lem5919964 A B C op g f x'''') (@lem5919963 A B C op f s g)). Qed.
Lemma lem5919967 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919968 {C : Type'} (f : type1400 C) (x : C) : (f x) = (@I (C -> C -> C) f x).
Proof. exact (@lem5919967 C (C -> C) f x). Qed.
Lemma lem5919969 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term1324 A B C op g f x'''') = (term1326 A B C op g f x'''').
Proof. exact (@lem5919968 C op (term1316 A B C g f x'''')). Qed.
Lemma lem5919970 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1323 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (eq_refl (term1323 A B C op f s g)). Qed.
Lemma lem5919971 {A B C : Type'} (x'''' : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1325 A B C x'''' op f s g) = (term1327 A B C x'''' op f s g).
Proof. exact (MK_COMB (@lem5919969 A B C op g f x'''') (@lem5919970 A B C op f s g)). Qed.
Lemma lem5919973 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919974 {C : Type'} (f : C -> C) (x : C) : (f x) = (@I (C -> C) f x).
Proof. exact (@lem5919973 C C f x). Qed.
Lemma lem5919975 {A B C : Type'} (x'''' : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1327 A B C x'''' op f s g) = (term1328 A B C x'''' op f s g).
Proof. exact (@lem5919974 C (term1326 A B C op g f x'''') (term1323 A B C op f s g)). Qed.
Lemma lem5919976 {A B C : Type'} (x'''' : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1325 A B C x'''' op f s g) = (term1328 A B C x'''' op f s g).
Proof. exact (TRANS (@lem5919971 A B C x'''' op f s g) (@lem5919975 A B C x'''' op f s g)). Qed.
Lemma lem5919977 {A B C : Type'} (x'''' : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term374 A B C x'''' op f s g) = (term1328 A B C x'''' op f s g).
Proof. exact (TRANS (@lem5919965 A B C x'''' op f s g) (@lem5919976 A B C x'''' op f s g)). Qed.
Lemma lem5919978 {C : Type'} (op : type1400 C) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5919979 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5919984 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919985 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5919984 A B f x). Qed.
Lemma lem5919987 {A B : Type'} (f : A -> B) (x'''' : A) : (f x'''') = (@I (A -> B) f x'''').
Proof. exact (@lem5919985 A B f x''''). Qed.
Lemma lem5919988 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term108 A B C g f x'''') = (term1315 A B C g f x'''').
Proof. exact (MK_COMB (@lem5919979 B C g) (@lem5919987 A B f x'''')). Qed.
Lemma lem5919990 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5919991 {B C : Type'} (f : B -> C) (x : B) : (f x) = (@I (B -> C) f x).
Proof. exact (@lem5919990 B C f x). Qed.
Lemma lem5919992 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term1315 A B C g f x'''') = (term1316 A B C g f x'''').
Proof. exact (@lem5919991 B C g (@I (A -> B) f x'''')). Qed.
Lemma lem5919993 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term108 A B C g f x'''') = (term1316 A B C g f x'''').
Proof. exact (TRANS (@lem5919988 A B C g f x'''') (@lem5919992 A B C g f x'''')). Qed.
Lemma lem5920003 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920004 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5920003 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5920005 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5920004 A B C (@o A B C) g). Qed.
Lemma lem5920006 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5920007 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5920005 A B C g) (@lem5920006 A B f)). Qed.
Lemma lem5920009 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920010 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5920009 (A -> B) (A -> C) f x). Qed.
Lemma lem5920011 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5920010 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5920013 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5920007 A B C g f) (@lem5920011 A B C g f)). Qed.
Lemma lem5920015 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@iterate C A op s).
Proof. exact (eq_refl (@iterate C A op s)). Qed.
Lemma lem5920016 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1330 A B C op s g f).
Proof. exact (MK_COMB (@lem5920015 A C op s) (@lem5920013 A B C g f)). Qed.
Lemma lem5920018 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920019 {A C : Type'} (f : type750 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920018 (type1400 C) (type632 A C) f x). Qed.
Lemma lem5920020 {A C : Type'} (op : type1400 C) : (@iterate C A op) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op).
Proof. exact (@lem5920019 A C (@iterate C A) op). Qed.
Lemma lem5920021 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920022 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s).
Proof. exact (MK_COMB (@lem5920020 A C op) (@lem5920021 A s)). Qed.
Lemma lem5920024 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920025 {A C : Type'} (f : type632 A C) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920024 (A -> Prop) (type570 A C) f x). Qed.
Lemma lem5920026 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s) = (term1331 A C op s).
Proof. exact (@lem5920025 A C (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op) s). Qed.
Lemma lem5920027 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (term1331 A C op s).
Proof. exact (TRANS (@lem5920022 A C op s) (@lem5920026 A C op s)). Qed.
Lemma lem5920028 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5920029 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1332 A B C op s g f).
Proof. exact (MK_COMB (@lem5920027 A C op s) (@lem5920028 A B C g f)). Qed.
Lemma lem5920031 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920032 {A C : Type'} (f : type570 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> C) f x).
Proof. exact (@lem5920031 (A -> C) C f x). Qed.
Lemma lem5920033 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1332 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (@lem5920032 A C (term1331 A C op s) (term1329 A B C g f)). Qed.
Lemma lem5920034 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920029 A B C op s g f) (@lem5920033 A B C op s g f)). Qed.
Lemma lem5920035 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920016 A B C op s g f) (@lem5920034 A B C op s g f)). Qed.
Lemma lem5920036 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term306 A B C op g f x'''') = (term1324 A B C op g f x'''').
Proof. exact (MK_COMB (@lem5919978 C op) (@lem5919993 A B C g f x'''')). Qed.
Lemma lem5920037 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term307 A B C x'''' op s g f) = (term1334 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920036 A B C op g f x'''') (@lem5920035 A B C op s g f)). Qed.
Lemma lem5920039 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920040 {C : Type'} (f : type1400 C) (x : C) : (f x) = (@I (C -> C -> C) f x).
Proof. exact (@lem5920039 C (C -> C) f x). Qed.
Lemma lem5920041 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term1324 A B C op g f x'''') = (term1326 A B C op g f x'''').
Proof. exact (@lem5920040 C op (term1316 A B C g f x'''')). Qed.
Lemma lem5920042 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1333 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (eq_refl (term1333 A B C op s g f)). Qed.
Lemma lem5920043 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1334 A B C x'''' op s g f) = (term1335 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920041 A B C op g f x'''') (@lem5920042 A B C op s g f)). Qed.
Lemma lem5920045 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920046 {C : Type'} (f : C -> C) (x : C) : (f x) = (@I (C -> C) f x).
Proof. exact (@lem5920045 C C f x). Qed.
Lemma lem5920047 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1335 A B C x'''' op s g f) = (term1336 A B C x'''' op s g f).
Proof. exact (@lem5920046 C (term1326 A B C op g f x'''') (term1333 A B C op s g f)). Qed.
Lemma lem5920048 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1334 A B C x'''' op s g f) = (term1336 A B C x'''' op s g f).
Proof. exact (TRANS (@lem5920043 A B C x'''' op s g f) (@lem5920047 A B C x'''' op s g f)). Qed.
Lemma lem5920049 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term307 A B C x'''' op s g f) = (term1336 A B C x'''' op s g f).
Proof. exact (TRANS (@lem5920037 A B C x'''' op s g f) (@lem5920048 A B C x'''' op s g f)). Qed.
Lemma lem5920050 {A B C : Type'} (x'''' : A) (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term376 A B C x'''' op f s g) = (term1337 A B C x'''' op f s g).
Proof. exact (MK_COMB (@lem5919905 C) (@lem5919977 A B C x'''' op f s g)). Qed.
Lemma lem5920051 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term374 A B C x'''' op f s g) = (term307 A B C x'''' op s g f)) = ((term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f)).
Proof. exact (MK_COMB (@lem5920050 A B C x'''' op f s g) (@lem5920049 A B C x'''' op s g f)). Qed.
Lemma lem5920052 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term472 A B C x'''' op s g f) = (term1338 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5919904) (@lem5920051 A B C x'''' op s g f)). Qed.
Lemma lem5920057 {A : Type'} (x' : A) (y : A) : (x' = y) = (x' = y).
Proof. exact (eq_refl (x' = y)). Qed.
Lemma lem5920058 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920059 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5920064 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920065 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920064 A B f x). Qed.
Lemma lem5920067 {A B : Type'} (f : A -> B) (x' : A) : (f x') = (@I (A -> B) f x').
Proof. exact (@lem5920065 A B f x'). Qed.
Lemma lem5920072 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920073 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920072 A B f x). Qed.
Lemma lem5920075 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5920073 A B f y). Qed.
Lemma lem5920076 {A B : Type'} (f : A -> B) (x' : A) : (term1339 A B f x') = (term1340 A B f x').
Proof. exact (MK_COMB (@lem5920059 B) (@lem5920067 A B f x')). Qed.
Lemma lem5920077 {A B : Type'} (x' : A) (f : A -> B) (y : A) : ((f x') = (f y)) = ((@I (A -> B) f x') = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5920076 A B f x') (@lem5920075 A B f y)). Qed.
Lemma lem5920078 {A B : Type'} (x' : A) (f : A -> B) (y : A) : (term1341 A B x' f y) = (term1342 A B x' f y).
Proof. exact (MK_COMB (@lem5920058) (@lem5920077 A B x' f y)). Qed.
Lemma lem5920079 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920080 {A B : Type'} (x' : A) (f : A -> B) (y : A) : (term1343 A B x' f y) = (term1344 A B x' f y).
Proof. exact (MK_COMB (@lem5920079) (@lem5920078 A B x' f y)). Qed.
Lemma lem5920081 {A B : Type'} (f : A -> B) (x' : A) (y : A) : (term444 A B f x' y) = (term1345 A B f x' y).
Proof. exact (MK_COMB (@lem5920080 A B x' f y) (@lem5920057 A x' y)). Qed.
Lemma lem5920082 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920089 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920090 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920089 A (type686 A) f x). Qed.
Lemma lem5920091 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5920090 A (@IN A) y). Qed.
Lemma lem5920092 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920093 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem5920091 A y) (@lem5920092 A s)). Qed.
Lemma lem5920095 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920096 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920095 (A -> Prop) Prop f x). Qed.
Lemma lem5920097 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term1296 A y s).
Proof. exact (@lem5920096 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem5920099 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term1296 A y s).
Proof. exact (TRANS (@lem5920093 A y s) (@lem5920097 A y s)). Qed.
Lemma lem5920100 {A : Type'} (y : A) (s : A -> Prop) : (term229 A y s) = (term1297 A y s).
Proof. exact (MK_COMB (@lem5920082) (@lem5920099 A y s)). Qed.
Lemma lem5920109 {A : Type'} (y : A) (x'''' : A) : (term1346 A y x'''') = (term1346 A y x'''').
Proof. exact (eq_refl (term1346 A y x'''')). Qed.
Lemma lem5920110 {A : Type'} (x'''' : A) (y : A) (s : A -> Prop) : (term443 A x'''' y s) = (term1347 A x'''' y s).
Proof. exact (MK_COMB (@lem5920109 A y x'''') (@lem5920100 A y s)). Qed.
Lemma lem5920111 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920112 {A : Type'} (x'''' : A) (y : A) (s : A -> Prop) : (term446 A x'''' y s) = (term1348 A x'''' y s).
Proof. exact (MK_COMB (@lem5920111) (@lem5920110 A x'''' y s)). Qed.
Lemma lem5920113 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term448 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5920112 A x'''' y s) (@lem5920081 A B f x' y)). Qed.
Lemma lem5920114 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term552 A B x'''' s f x') = (term1350 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5920113 A B x'''' s f x' y)). Qed.
Lemma lem5920115 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5920116 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term560 A B x'''' s f x') = (term1351 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5920115 A) (@lem5920114 A B x'''' s f x')). Qed.
Lemma lem5920117 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920125 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920124 A (type686 A) f x). Qed.
Lemma lem5920126 {A : Type'} (x' : A) : (@IN A x') = (@I (A -> (A -> Prop) -> Prop) (@IN A) x').
Proof. exact (@lem5920125 A (@IN A) x'). Qed.
Lemma lem5920127 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920128 {A : Type'} (x' : A) (s : A -> Prop) : (@IN A x' s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x' s).
Proof. exact (MK_COMB (@lem5920126 A x') (@lem5920127 A s)). Qed.
Lemma lem5920130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920131 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920130 (A -> Prop) Prop f x). Qed.
Lemma lem5920132 {A : Type'} (x' : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x' s) = (term1296 A x' s).
Proof. exact (@lem5920131 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x') s). Qed.
Lemma lem5920134 {A : Type'} (x' : A) (s : A -> Prop) : (@IN A x' s) = (term1296 A x' s).
Proof. exact (TRANS (@lem5920128 A x' s) (@lem5920132 A x' s)). Qed.
Lemma lem5920135 {A : Type'} (x' : A) (s : A -> Prop) : (term229 A x' s) = (term1297 A x' s).
Proof. exact (MK_COMB (@lem5920117) (@lem5920134 A x' s)). Qed.
Lemma lem5920144 {A : Type'} (x' : A) (x'''' : A) : (term1346 A x' x'''') = (term1346 A x' x'''').
Proof. exact (eq_refl (term1346 A x' x'''')). Qed.
Lemma lem5920145 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term443 A x'''' x' s) = (term1347 A x'''' x' s).
Proof. exact (MK_COMB (@lem5920144 A x' x'''') (@lem5920135 A x' s)). Qed.
Lemma lem5920146 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920147 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term446 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (MK_COMB (@lem5920146) (@lem5920145 A x'''' x' s)). Qed.
Lemma lem5920148 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term561 A B x'''' s f x') = (term1352 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5920147 A x'''' x' s) (@lem5920116 A B x'''' s f x')). Qed.
Lemma lem5920149 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term562 A B x'''' s f) = (term1353 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5920148 A B x'''' s f x')). Qed.
Lemma lem5920150 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5920151 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term563 A B x'''' s f) = (term1354 A B x'''' s f).
Proof. exact (MK_COMB (@lem5920150 A) (@lem5920149 A B x'''' s f)). Qed.
Lemma lem5920152 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920153 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term564 A B x'''' s f) = (term1355 A B x'''' s f).
Proof. exact (MK_COMB (@lem5920152) (@lem5920151 A B x'''' s f)). Qed.
Lemma lem5920154 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term571 A B C x'''' op s g f) = (term1356 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920153 A B x'''' s f) (@lem5920052 A B C x'''' op s g f)). Qed.
Lemma lem5920159 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920160 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920159 (A -> Prop) Prop f x). Qed.
Lemma lem5920162 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem5920160 A (@FINITE A) s). Qed.
Lemma lem5920163 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920170 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920171 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920170 A (type686 A) f x). Qed.
Lemma lem5920172 {A : Type'} (x'''' : A) : (@IN A x'''') = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''').
Proof. exact (@lem5920171 A (@IN A) x''''). Qed.
Lemma lem5920173 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920174 {A : Type'} (x'''' : A) (s : A -> Prop) : (@IN A x'''' s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''' s).
Proof. exact (MK_COMB (@lem5920172 A x'''') (@lem5920173 A s)). Qed.
Lemma lem5920176 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920177 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920176 (A -> Prop) Prop f x). Qed.
Lemma lem5920178 {A : Type'} (x'''' : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''' s) = (term1296 A x'''' s).
Proof. exact (@lem5920177 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''') s). Qed.
Lemma lem5920180 {A : Type'} (x'''' : A) (s : A -> Prop) : (@IN A x'''' s) = (term1296 A x'''' s).
Proof. exact (TRANS (@lem5920174 A x'''' s) (@lem5920178 A x'''' s)). Qed.
Lemma lem5920181 {A : Type'} (x'''' : A) (s : A -> Prop) : (term229 A x'''' s) = (term1297 A x'''' s).
Proof. exact (MK_COMB (@lem5920163) (@lem5920180 A x'''' s)). Qed.
Lemma lem5920182 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920183 {A : Type'} (x'''' : A) (s : A -> Prop) : (term1357 A x'''' s) = (term1358 A x'''' s).
Proof. exact (MK_COMB (@lem5920182) (@lem5920181 A x'''' s)). Qed.
Lemma lem5920184 {A : Type'} (x'''' : A) (s : A -> Prop) : (term155 A x'''' s) = (term1359 A x'''' s).
Proof. exact (MK_COMB (@lem5920183 A x'''' s) (@lem5920162 A s)). Qed.
Lemma lem5920185 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5920194 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920195 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920194 (A -> B) (type678 A B) f x). Qed.
Lemma lem5920196 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5920195 A B (@IMAGE A B) f). Qed.
Lemma lem5920197 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920198 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5920196 A B f) (@lem5920197 A s)). Qed.
Lemma lem5920200 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920201 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920200 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5920202 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5920201 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5920204 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5920198 A B f s) (@lem5920202 A B f s)). Qed.
Lemma lem5920205 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920206 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5920207 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1317 A B C op f s) = (term1318 A B C op f s).
Proof. exact (MK_COMB (@lem5920206 B C op) (@lem5920204 A B f s)). Qed.
Lemma lem5920208 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1319 A B C op f s g).
Proof. exact (MK_COMB (@lem5920207 A B C op f s) (@lem5920205 B C g)). Qed.
Lemma lem5920210 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920211 {B C : Type'} (f : type750 B C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5920210 (type1400 C) (type632 B C) f x). Qed.
Lemma lem5920212 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op).
Proof. exact (@lem5920211 B C (@iterate C B) op). Qed.
Lemma lem5920213 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5920214 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1320 A B C op f s).
Proof. exact (MK_COMB (@lem5920212 B C op) (@lem5920213 A B f s)). Qed.
Lemma lem5920216 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920217 {B C : Type'} (f : type632 B C) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5920216 (B -> Prop) (type570 B C) f x). Qed.
Lemma lem5920218 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1320 A B C op f s) = (term1321 A B C op f s).
Proof. exact (@lem5920217 B C (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op) (term1279 A B f s)). Qed.
Lemma lem5920219 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1321 A B C op f s).
Proof. exact (TRANS (@lem5920214 A B C op f s) (@lem5920218 A B C op f s)). Qed.
Lemma lem5920220 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920221 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1322 A B C op f s g).
Proof. exact (MK_COMB (@lem5920219 A B C op f s) (@lem5920220 B C g)). Qed.
Lemma lem5920223 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920224 {B C : Type'} (f : type570 B C) (x : B -> C) : (f x) = (@I ((B -> C) -> C) f x).
Proof. exact (@lem5920223 (B -> C) C f x). Qed.
Lemma lem5920225 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1322 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (@lem5920224 B C (term1321 A B C op f s) g). Qed.
Lemma lem5920226 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5920221 A B C op f s g) (@lem5920225 A B C op f s g)). Qed.
Lemma lem5920227 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5920208 A B C op f s g) (@lem5920226 A B C op f s g)). Qed.
Lemma lem5920237 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920238 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5920237 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5920239 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5920238 A B C (@o A B C) g). Qed.
Lemma lem5920240 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5920241 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5920239 A B C g) (@lem5920240 A B f)). Qed.
Lemma lem5920243 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920244 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5920243 (A -> B) (A -> C) f x). Qed.
Lemma lem5920245 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5920244 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5920247 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5920241 A B C g f) (@lem5920245 A B C g f)). Qed.
Lemma lem5920249 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@iterate C A op s).
Proof. exact (eq_refl (@iterate C A op s)). Qed.
Lemma lem5920250 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1330 A B C op s g f).
Proof. exact (MK_COMB (@lem5920249 A C op s) (@lem5920247 A B C g f)). Qed.
Lemma lem5920252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920253 {A C : Type'} (f : type750 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920252 (type1400 C) (type632 A C) f x). Qed.
Lemma lem5920254 {A C : Type'} (op : type1400 C) : (@iterate C A op) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op).
Proof. exact (@lem5920253 A C (@iterate C A) op). Qed.
Lemma lem5920255 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920256 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s).
Proof. exact (MK_COMB (@lem5920254 A C op) (@lem5920255 A s)). Qed.
Lemma lem5920258 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920259 {A C : Type'} (f : type632 A C) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920258 (A -> Prop) (type570 A C) f x). Qed.
Lemma lem5920260 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s) = (term1331 A C op s).
Proof. exact (@lem5920259 A C (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op) s). Qed.
Lemma lem5920261 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (term1331 A C op s).
Proof. exact (TRANS (@lem5920256 A C op s) (@lem5920260 A C op s)). Qed.
Lemma lem5920262 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5920263 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1332 A B C op s g f).
Proof. exact (MK_COMB (@lem5920261 A C op s) (@lem5920262 A B C g f)). Qed.
Lemma lem5920265 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920266 {A C : Type'} (f : type570 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> C) f x).
Proof. exact (@lem5920265 (A -> C) C f x). Qed.
Lemma lem5920267 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1332 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (@lem5920266 A C (term1331 A C op s) (term1329 A B C g f)). Qed.
Lemma lem5920268 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920263 A B C op s g f) (@lem5920267 A B C op s g f)). Qed.
Lemma lem5920269 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920250 A B C op s g f) (@lem5920268 A B C op s g f)). Qed.
Lemma lem5920270 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term382 A B C op f s g) = (term1360 A B C op f s g).
Proof. exact (MK_COMB (@lem5920185 C) (@lem5920227 A B C op f s g)). Qed.
Lemma lem5920271 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term1323 A B C op f s g) = (term1333 A B C op s g f)).
Proof. exact (MK_COMB (@lem5920270 A B C op f s g) (@lem5920269 A B C op s g f)). Qed.
Lemma lem5920278 {A : Type'} (x''''' : A) (y : A) : (term1361 A x''''' y) = (term1361 A x''''' y).
Proof. exact (eq_refl (term1361 A x''''' y)). Qed.
Lemma lem5920279 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5920284 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920285 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920284 A B f x). Qed.
Lemma lem5920287 {A B : Type'} (f : A -> B) (x''''' : A) : (f x''''') = (@I (A -> B) f x''''').
Proof. exact (@lem5920285 A B f x'''''). Qed.
Lemma lem5920292 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920293 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920292 A B f x). Qed.
Lemma lem5920295 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5920293 A B f y). Qed.
Lemma lem5920296 {A B : Type'} (f : A -> B) (x''''' : A) : (term1339 A B f x''''') = (term1340 A B f x''''').
Proof. exact (MK_COMB (@lem5920279 B) (@lem5920287 A B f x''''')). Qed.
Lemma lem5920297 {A B : Type'} (x''''' : A) (f : A -> B) (y : A) : ((f x''''') = (f y)) = ((@I (A -> B) f x''''') = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5920296 A B f x''''') (@lem5920295 A B f y)). Qed.
Lemma lem5920298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920299 {A B : Type'} (x''''' : A) (f : A -> B) (y : A) : (term1362 A B x''''' f y) = (term1363 A B x''''' f y).
Proof. exact (MK_COMB (@lem5920298) (@lem5920297 A B x''''' f y)). Qed.
Lemma lem5920300 {A B : Type'} (f : A -> B) (x''''' : A) (y : A) : (term412 A B f x''''' y) = (term1364 A B f x''''' y).
Proof. exact (MK_COMB (@lem5920299 A B x''''' f y) (@lem5920278 A x''''' y)). Qed.
Lemma lem5920307 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920308 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920307 A (type686 A) f x). Qed.
Lemma lem5920309 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5920308 A (@IN A) y). Qed.
Lemma lem5920310 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920311 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem5920309 A y) (@lem5920310 A s)). Qed.
Lemma lem5920313 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920314 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920313 (A -> Prop) Prop f x). Qed.
Lemma lem5920315 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term1296 A y s).
Proof. exact (@lem5920314 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem5920317 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term1296 A y s).
Proof. exact (TRANS (@lem5920311 A y s) (@lem5920315 A y s)). Qed.
Lemma lem5920318 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920319 {A : Type'} (y : A) (s : A -> Prop) : (term413 A y s) = (term1365 A y s).
Proof. exact (MK_COMB (@lem5920318) (@lem5920317 A y s)). Qed.
Lemma lem5920320 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) : (term415 A B s f x''''' y) = (term1366 A B s f x''''' y).
Proof. exact (MK_COMB (@lem5920319 A y s) (@lem5920300 A B f x''''' y)). Qed.
Lemma lem5920327 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920328 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920327 A (type686 A) f x). Qed.
Lemma lem5920329 {A : Type'} (x''''' : A) : (@IN A x''''') = (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''').
Proof. exact (@lem5920328 A (@IN A) x'''''). Qed.
Lemma lem5920330 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920331 {A : Type'} (x''''' : A) (s : A -> Prop) : (@IN A x''''' s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''' s).
Proof. exact (MK_COMB (@lem5920329 A x''''') (@lem5920330 A s)). Qed.
Lemma lem5920333 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920334 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920333 (A -> Prop) Prop f x). Qed.
Lemma lem5920335 {A : Type'} (x''''' : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''' s) = (term1296 A x''''' s).
Proof. exact (@lem5920334 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''') s). Qed.
Lemma lem5920337 {A : Type'} (x''''' : A) (s : A -> Prop) : (@IN A x''''' s) = (term1296 A x''''' s).
Proof. exact (TRANS (@lem5920331 A x''''' s) (@lem5920335 A x''''' s)). Qed.
Lemma lem5920338 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920339 {A : Type'} (x''''' : A) (s : A -> Prop) : (term413 A x''''' s) = (term1365 A x''''' s).
Proof. exact (MK_COMB (@lem5920338) (@lem5920337 A x''''' s)). Qed.
Lemma lem5920340 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) : (term418 A B s f x''''' y) = (term1367 A B s f x''''' y).
Proof. exact (MK_COMB (@lem5920339 A x''''' s) (@lem5920320 A B s f x''''' y)). Qed.
Lemma lem5920341 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920342 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) : (term627 A B s f x''''' y) = (term1368 A B s f x''''' y).
Proof. exact (MK_COMB (@lem5920341) (@lem5920340 A B s f x''''' y)). Qed.
Lemma lem5920343 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term629 A B C x''''' y op s g f) = (term1369 A B C x''''' y op s g f).
Proof. exact (MK_COMB (@lem5920342 A B s f x''''' y) (@lem5920271 A B C op s g f)). Qed.
Lemma lem5920344 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920345 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term663 A B C x''''' y op s g f) = (term1370 A B C x''''' y op s g f).
Proof. exact (MK_COMB (@lem5920344) (@lem5920343 A B C x''''' y op s g f)). Qed.
Lemma lem5920346 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) (s : A -> Prop) : (term665 A B C x''''' y op g f x'''' s) = (term1371 A B C x''''' y op g f x'''' s).
Proof. exact (MK_COMB (@lem5920345 A B C x''''' y op s g f) (@lem5920184 A x'''' s)). Qed.
Lemma lem5920347 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920348 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) (s : A -> Prop) : (term697 A B C x''''' y op g f x'''' s) = (term1372 A B C x''''' y op g f x'''' s).
Proof. exact (MK_COMB (@lem5920347) (@lem5920346 A B C x''''' y op g f x'''' s)). Qed.
Lemma lem5920349 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term752 A B C x''''' y x'''' op s g f) = (term1373 A B C x''''' y x'''' op s g f).
Proof. exact (MK_COMB (@lem5920348 A B C x''''' y op g f x'''' s) (@lem5920154 A B C x'''' op s g f)). Qed.
Lemma lem5920350 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920351 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem5920356 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920357 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920356 A B f x). Qed.
Lemma lem5920359 {A B : Type'} (f : A -> B) (x'''' : A) : (f x'''') = (@I (A -> B) f x'''').
Proof. exact (@lem5920357 A B f x''''). Qed.
Lemma lem5920366 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920367 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920366 (A -> B) (type678 A B) f x). Qed.
Lemma lem5920368 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5920367 A B (@IMAGE A B) f). Qed.
Lemma lem5920369 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920370 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5920368 A B f) (@lem5920369 A s)). Qed.
Lemma lem5920372 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920373 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920372 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5920374 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5920373 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5920376 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5920370 A B f s) (@lem5920374 A B f s)). Qed.
Lemma lem5920377 {A B : Type'} (f : A -> B) (x'''' : A) : (term1374 A B f x'''') = (term1375 A B f x'''').
Proof. exact (MK_COMB (@lem5920351 B) (@lem5920359 A B f x'''')). Qed.
Lemma lem5920378 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term370 A B x'''' f s) = (term1376 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920377 A B f x'''') (@lem5920376 A B f s)). Qed.
Lemma lem5920380 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920381 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem5920380 B (type686 B) f x). Qed.
Lemma lem5920382 {A B : Type'} (f : A -> B) (x'''' : A) : (term1375 A B f x'''') = (term1377 A B f x'''').
Proof. exact (@lem5920381 B (@IN B) (@I (A -> B) f x'''')). Qed.
Lemma lem5920383 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5920384 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1376 A B x'''' f s) = (term1378 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920382 A B f x'''') (@lem5920383 A B f s)). Qed.
Lemma lem5920386 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920387 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem5920386 (B -> Prop) Prop f x). Qed.
Lemma lem5920388 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1378 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (@lem5920387 B (term1377 A B f x'''') (term1279 A B f s)). Qed.
Lemma lem5920389 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1376 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (TRANS (@lem5920384 A B x'''' f s) (@lem5920388 A B x'''' f s)). Qed.
Lemma lem5920390 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term370 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (TRANS (@lem5920378 A B x'''' f s) (@lem5920389 A B x'''' f s)). Qed.
Lemma lem5920391 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term471 A B x'''' f s) = (term1380 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920350) (@lem5920390 A B x'''' f s)). Qed.
Lemma lem5920392 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920393 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term479 A B x'''' f s) = (term1381 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920392) (@lem5920391 A B x'''' f s)). Qed.
Lemma lem5920394 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term779 A B C x''''' y x'''' op s g f) = (term1382 A B C x''''' y x'''' op s g f).
Proof. exact (MK_COMB (@lem5920393 A B x'''' f s) (@lem5920349 A B C x''''' y x'''' op s g f)). Qed.
Lemma lem5920395 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920396 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5920405 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920406 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920405 (A -> B) (type678 A B) f x). Qed.
Lemma lem5920407 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5920406 A B (@IMAGE A B) f). Qed.
Lemma lem5920408 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920409 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5920407 A B f) (@lem5920408 A s)). Qed.
Lemma lem5920411 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920412 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920411 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5920413 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5920412 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5920415 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5920409 A B f s) (@lem5920413 A B f s)). Qed.
Lemma lem5920416 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920417 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5920418 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1317 A B C op f s) = (term1318 A B C op f s).
Proof. exact (MK_COMB (@lem5920417 B C op) (@lem5920415 A B f s)). Qed.
Lemma lem5920419 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1319 A B C op f s g).
Proof. exact (MK_COMB (@lem5920418 A B C op f s) (@lem5920416 B C g)). Qed.
Lemma lem5920421 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920422 {B C : Type'} (f : type750 B C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5920421 (type1400 C) (type632 B C) f x). Qed.
Lemma lem5920423 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op).
Proof. exact (@lem5920422 B C (@iterate C B) op). Qed.
Lemma lem5920424 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5920425 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1320 A B C op f s).
Proof. exact (MK_COMB (@lem5920423 B C op) (@lem5920424 A B f s)). Qed.
Lemma lem5920427 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920428 {B C : Type'} (f : type632 B C) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5920427 (B -> Prop) (type570 B C) f x). Qed.
Lemma lem5920429 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1320 A B C op f s) = (term1321 A B C op f s).
Proof. exact (@lem5920428 B C (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op) (term1279 A B f s)). Qed.
Lemma lem5920430 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1321 A B C op f s).
Proof. exact (TRANS (@lem5920425 A B C op f s) (@lem5920429 A B C op f s)). Qed.
Lemma lem5920431 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920432 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1322 A B C op f s g).
Proof. exact (MK_COMB (@lem5920430 A B C op f s) (@lem5920431 B C g)). Qed.
Lemma lem5920434 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920435 {B C : Type'} (f : type570 B C) (x : B -> C) : (f x) = (@I ((B -> C) -> C) f x).
Proof. exact (@lem5920434 (B -> C) C f x). Qed.
Lemma lem5920436 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1322 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (@lem5920435 B C (term1321 A B C op f s) g). Qed.
Lemma lem5920437 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5920432 A B C op f s g) (@lem5920436 A B C op f s g)). Qed.
Lemma lem5920438 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5920419 A B C op f s g) (@lem5920437 A B C op f s g)). Qed.
Lemma lem5920439 {C : Type'} (op : type1400 C) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5920440 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920445 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920446 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920445 A B f x). Qed.
Lemma lem5920448 {A B : Type'} (f : A -> B) (x'''' : A) : (f x'''') = (@I (A -> B) f x'''').
Proof. exact (@lem5920446 A B f x''''). Qed.
Lemma lem5920449 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term108 A B C g f x'''') = (term1315 A B C g f x'''').
Proof. exact (MK_COMB (@lem5920440 B C g) (@lem5920448 A B f x'''')). Qed.
Lemma lem5920451 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920452 {B C : Type'} (f : B -> C) (x : B) : (f x) = (@I (B -> C) f x).
Proof. exact (@lem5920451 B C f x). Qed.
Lemma lem5920453 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term1315 A B C g f x'''') = (term1316 A B C g f x'''').
Proof. exact (@lem5920452 B C g (@I (A -> B) f x'''')). Qed.
Lemma lem5920454 {A B C : Type'} (g : B -> C) (f : A -> B) (x'''' : A) : (term108 A B C g f x'''') = (term1316 A B C g f x'''').
Proof. exact (TRANS (@lem5920449 A B C g f x'''') (@lem5920453 A B C g f x'''')). Qed.
Lemma lem5920464 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920465 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5920464 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5920466 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5920465 A B C (@o A B C) g). Qed.
Lemma lem5920467 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5920468 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5920466 A B C g) (@lem5920467 A B f)). Qed.
Lemma lem5920470 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920471 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5920470 (A -> B) (A -> C) f x). Qed.
Lemma lem5920472 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5920471 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5920474 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5920468 A B C g f) (@lem5920472 A B C g f)). Qed.
Lemma lem5920476 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@iterate C A op s).
Proof. exact (eq_refl (@iterate C A op s)). Qed.
Lemma lem5920477 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1330 A B C op s g f).
Proof. exact (MK_COMB (@lem5920476 A C op s) (@lem5920474 A B C g f)). Qed.
Lemma lem5920479 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920480 {A C : Type'} (f : type750 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920479 (type1400 C) (type632 A C) f x). Qed.
Lemma lem5920481 {A C : Type'} (op : type1400 C) : (@iterate C A op) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op).
Proof. exact (@lem5920480 A C (@iterate C A) op). Qed.
Lemma lem5920482 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920483 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s).
Proof. exact (MK_COMB (@lem5920481 A C op) (@lem5920482 A s)). Qed.
Lemma lem5920485 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920486 {A C : Type'} (f : type632 A C) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920485 (A -> Prop) (type570 A C) f x). Qed.
Lemma lem5920487 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s) = (term1331 A C op s).
Proof. exact (@lem5920486 A C (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op) s). Qed.
Lemma lem5920488 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (term1331 A C op s).
Proof. exact (TRANS (@lem5920483 A C op s) (@lem5920487 A C op s)). Qed.
Lemma lem5920489 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5920490 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1332 A B C op s g f).
Proof. exact (MK_COMB (@lem5920488 A C op s) (@lem5920489 A B C g f)). Qed.
Lemma lem5920492 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920493 {A C : Type'} (f : type570 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> C) f x).
Proof. exact (@lem5920492 (A -> C) C f x). Qed.
Lemma lem5920494 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1332 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (@lem5920493 A C (term1331 A C op s) (term1329 A B C g f)). Qed.
Lemma lem5920495 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920490 A B C op s g f) (@lem5920494 A B C op s g f)). Qed.
Lemma lem5920496 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920477 A B C op s g f) (@lem5920495 A B C op s g f)). Qed.
Lemma lem5920497 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term306 A B C op g f x'''') = (term1324 A B C op g f x'''').
Proof. exact (MK_COMB (@lem5920439 C op) (@lem5920454 A B C g f x'''')). Qed.
Lemma lem5920498 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term307 A B C x'''' op s g f) = (term1334 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920497 A B C op g f x'''') (@lem5920496 A B C op s g f)). Qed.
Lemma lem5920500 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920501 {C : Type'} (f : type1400 C) (x : C) : (f x) = (@I (C -> C -> C) f x).
Proof. exact (@lem5920500 C (C -> C) f x). Qed.
Lemma lem5920502 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term1324 A B C op g f x'''') = (term1326 A B C op g f x'''').
Proof. exact (@lem5920501 C op (term1316 A B C g f x'''')). Qed.
Lemma lem5920503 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1333 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (eq_refl (term1333 A B C op s g f)). Qed.
Lemma lem5920504 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1334 A B C x'''' op s g f) = (term1335 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920502 A B C op g f x'''') (@lem5920503 A B C op s g f)). Qed.
Lemma lem5920506 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920507 {C : Type'} (f : C -> C) (x : C) : (f x) = (@I (C -> C) f x).
Proof. exact (@lem5920506 C C f x). Qed.
Lemma lem5920508 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1335 A B C x'''' op s g f) = (term1336 A B C x'''' op s g f).
Proof. exact (@lem5920507 C (term1326 A B C op g f x'''') (term1333 A B C op s g f)). Qed.
Lemma lem5920509 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1334 A B C x'''' op s g f) = (term1336 A B C x'''' op s g f).
Proof. exact (TRANS (@lem5920504 A B C x'''' op s g f) (@lem5920508 A B C x'''' op s g f)). Qed.
Lemma lem5920510 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term307 A B C x'''' op s g f) = (term1336 A B C x'''' op s g f).
Proof. exact (TRANS (@lem5920498 A B C x'''' op s g f) (@lem5920509 A B C x'''' op s g f)). Qed.
Lemma lem5920511 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term382 A B C op f s g) = (term1360 A B C op f s g).
Proof. exact (MK_COMB (@lem5920396 C) (@lem5920438 A B C op f s g)). Qed.
Lemma lem5920512 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term307 A B C x'''' op s g f)) = ((term1323 A B C op f s g) = (term1336 A B C x'''' op s g f)).
Proof. exact (MK_COMB (@lem5920511 A B C op f s g) (@lem5920510 A B C x'''' op s g f)). Qed.
Lemma lem5920513 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term455 A B C x'''' op s g f) = (term1383 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920395) (@lem5920512 A B C x'''' op s g f)). Qed.
Lemma lem5920518 {A : Type'} (x' : A) (y : A) : (x' = y) = (x' = y).
Proof. exact (eq_refl (x' = y)). Qed.
Lemma lem5920519 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920520 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5920525 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920526 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920525 A B f x). Qed.
Lemma lem5920528 {A B : Type'} (f : A -> B) (x' : A) : (f x') = (@I (A -> B) f x').
Proof. exact (@lem5920526 A B f x'). Qed.
Lemma lem5920533 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920534 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920533 A B f x). Qed.
Lemma lem5920536 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5920534 A B f y). Qed.
Lemma lem5920537 {A B : Type'} (f : A -> B) (x' : A) : (term1339 A B f x') = (term1340 A B f x').
Proof. exact (MK_COMB (@lem5920520 B) (@lem5920528 A B f x')). Qed.
Lemma lem5920538 {A B : Type'} (x' : A) (f : A -> B) (y : A) : ((f x') = (f y)) = ((@I (A -> B) f x') = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5920537 A B f x') (@lem5920536 A B f y)). Qed.
Lemma lem5920539 {A B : Type'} (x' : A) (f : A -> B) (y : A) : (term1341 A B x' f y) = (term1342 A B x' f y).
Proof. exact (MK_COMB (@lem5920519) (@lem5920538 A B x' f y)). Qed.
Lemma lem5920540 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920541 {A B : Type'} (x' : A) (f : A -> B) (y : A) : (term1343 A B x' f y) = (term1344 A B x' f y).
Proof. exact (MK_COMB (@lem5920540) (@lem5920539 A B x' f y)). Qed.
Lemma lem5920542 {A B : Type'} (f : A -> B) (x' : A) (y : A) : (term444 A B f x' y) = (term1345 A B f x' y).
Proof. exact (MK_COMB (@lem5920541 A B x' f y) (@lem5920518 A x' y)). Qed.
Lemma lem5920543 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920550 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920551 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920550 A (type686 A) f x). Qed.
Lemma lem5920552 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5920551 A (@IN A) y). Qed.
Lemma lem5920553 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920554 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem5920552 A y) (@lem5920553 A s)). Qed.
Lemma lem5920556 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920557 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920556 (A -> Prop) Prop f x). Qed.
Lemma lem5920558 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term1296 A y s).
Proof. exact (@lem5920557 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem5920560 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term1296 A y s).
Proof. exact (TRANS (@lem5920554 A y s) (@lem5920558 A y s)). Qed.
Lemma lem5920561 {A : Type'} (y : A) (s : A -> Prop) : (term229 A y s) = (term1297 A y s).
Proof. exact (MK_COMB (@lem5920543) (@lem5920560 A y s)). Qed.
Lemma lem5920570 {A : Type'} (y : A) (x'''' : A) : (term1346 A y x'''') = (term1346 A y x'''').
Proof. exact (eq_refl (term1346 A y x'''')). Qed.
Lemma lem5920571 {A : Type'} (x'''' : A) (y : A) (s : A -> Prop) : (term443 A x'''' y s) = (term1347 A x'''' y s).
Proof. exact (MK_COMB (@lem5920570 A y x'''') (@lem5920561 A y s)). Qed.
Lemma lem5920572 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920573 {A : Type'} (x'''' : A) (y : A) (s : A -> Prop) : (term446 A x'''' y s) = (term1348 A x'''' y s).
Proof. exact (MK_COMB (@lem5920572) (@lem5920571 A x'''' y s)). Qed.
Lemma lem5920574 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term448 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5920573 A x'''' y s) (@lem5920542 A B f x' y)). Qed.
Lemma lem5920575 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term552 A B x'''' s f x') = (term1350 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5920574 A B x'''' s f x' y)). Qed.
Lemma lem5920576 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5920577 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term560 A B x'''' s f x') = (term1351 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5920576 A) (@lem5920575 A B x'''' s f x')). Qed.
Lemma lem5920578 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920585 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920586 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920585 A (type686 A) f x). Qed.
Lemma lem5920587 {A : Type'} (x' : A) : (@IN A x') = (@I (A -> (A -> Prop) -> Prop) (@IN A) x').
Proof. exact (@lem5920586 A (@IN A) x'). Qed.
Lemma lem5920588 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920589 {A : Type'} (x' : A) (s : A -> Prop) : (@IN A x' s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x' s).
Proof. exact (MK_COMB (@lem5920587 A x') (@lem5920588 A s)). Qed.
Lemma lem5920591 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920592 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920591 (A -> Prop) Prop f x). Qed.
Lemma lem5920593 {A : Type'} (x' : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x' s) = (term1296 A x' s).
Proof. exact (@lem5920592 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x') s). Qed.
Lemma lem5920595 {A : Type'} (x' : A) (s : A -> Prop) : (@IN A x' s) = (term1296 A x' s).
Proof. exact (TRANS (@lem5920589 A x' s) (@lem5920593 A x' s)). Qed.
Lemma lem5920596 {A : Type'} (x' : A) (s : A -> Prop) : (term229 A x' s) = (term1297 A x' s).
Proof. exact (MK_COMB (@lem5920578) (@lem5920595 A x' s)). Qed.
Lemma lem5920605 {A : Type'} (x' : A) (x'''' : A) : (term1346 A x' x'''') = (term1346 A x' x'''').
Proof. exact (eq_refl (term1346 A x' x'''')). Qed.
Lemma lem5920606 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term443 A x'''' x' s) = (term1347 A x'''' x' s).
Proof. exact (MK_COMB (@lem5920605 A x' x'''') (@lem5920596 A x' s)). Qed.
Lemma lem5920607 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920608 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term446 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (MK_COMB (@lem5920607) (@lem5920606 A x'''' x' s)). Qed.
Lemma lem5920609 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term561 A B x'''' s f x') = (term1352 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5920608 A x'''' x' s) (@lem5920577 A B x'''' s f x')). Qed.
Lemma lem5920610 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term562 A B x'''' s f) = (term1353 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5920609 A B x'''' s f x')). Qed.
Lemma lem5920611 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5920612 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term563 A B x'''' s f) = (term1354 A B x'''' s f).
Proof. exact (MK_COMB (@lem5920611 A) (@lem5920610 A B x'''' s f)). Qed.
Lemma lem5920613 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920614 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term564 A B x'''' s f) = (term1355 A B x'''' s f).
Proof. exact (MK_COMB (@lem5920613) (@lem5920612 A B x'''' s f)). Qed.
Lemma lem5920615 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term565 A B C x'''' op s g f) = (term1384 A B C x'''' op s g f).
Proof. exact (MK_COMB (@lem5920614 A B x'''' s f) (@lem5920513 A B C x'''' op s g f)). Qed.
Lemma lem5920620 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920621 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920620 (A -> Prop) Prop f x). Qed.
Lemma lem5920623 {A : Type'} (s : A -> Prop) : (@FINITE A s) = (@I ((A -> Prop) -> Prop) (@FINITE A) s).
Proof. exact (@lem5920621 A (@FINITE A) s). Qed.
Lemma lem5920624 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5920631 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920632 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920631 A (type686 A) f x). Qed.
Lemma lem5920633 {A : Type'} (x'''' : A) : (@IN A x'''') = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''').
Proof. exact (@lem5920632 A (@IN A) x''''). Qed.
Lemma lem5920634 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920635 {A : Type'} (x'''' : A) (s : A -> Prop) : (@IN A x'''' s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''' s).
Proof. exact (MK_COMB (@lem5920633 A x'''') (@lem5920634 A s)). Qed.
Lemma lem5920637 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920638 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920637 (A -> Prop) Prop f x). Qed.
Lemma lem5920639 {A : Type'} (x'''' : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''' s) = (term1296 A x'''' s).
Proof. exact (@lem5920638 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''') s). Qed.
Lemma lem5920641 {A : Type'} (x'''' : A) (s : A -> Prop) : (@IN A x'''' s) = (term1296 A x'''' s).
Proof. exact (TRANS (@lem5920635 A x'''' s) (@lem5920639 A x'''' s)). Qed.
Lemma lem5920642 {A : Type'} (x'''' : A) (s : A -> Prop) : (term229 A x'''' s) = (term1297 A x'''' s).
Proof. exact (MK_COMB (@lem5920624) (@lem5920641 A x'''' s)). Qed.
Lemma lem5920643 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920644 {A : Type'} (x'''' : A) (s : A -> Prop) : (term1357 A x'''' s) = (term1358 A x'''' s).
Proof. exact (MK_COMB (@lem5920643) (@lem5920642 A x'''' s)). Qed.
Lemma lem5920645 {A : Type'} (x'''' : A) (s : A -> Prop) : (term155 A x'''' s) = (term1359 A x'''' s).
Proof. exact (MK_COMB (@lem5920644 A x'''' s) (@lem5920623 A s)). Qed.
Lemma lem5920646 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5920655 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920656 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920655 (A -> B) (type678 A B) f x). Qed.
Lemma lem5920657 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5920656 A B (@IMAGE A B) f). Qed.
Lemma lem5920658 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920659 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5920657 A B f) (@lem5920658 A s)). Qed.
Lemma lem5920661 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920662 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920661 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5920663 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5920662 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5920665 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5920659 A B f s) (@lem5920663 A B f s)). Qed.
Lemma lem5920666 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920667 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5920668 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1317 A B C op f s) = (term1318 A B C op f s).
Proof. exact (MK_COMB (@lem5920667 B C op) (@lem5920665 A B f s)). Qed.
Lemma lem5920669 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1319 A B C op f s g).
Proof. exact (MK_COMB (@lem5920668 A B C op f s) (@lem5920666 B C g)). Qed.
Lemma lem5920671 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920672 {B C : Type'} (f : type750 B C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5920671 (type1400 C) (type632 B C) f x). Qed.
Lemma lem5920673 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op).
Proof. exact (@lem5920672 B C (@iterate C B) op). Qed.
Lemma lem5920674 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5920675 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1320 A B C op f s).
Proof. exact (MK_COMB (@lem5920673 B C op) (@lem5920674 A B f s)). Qed.
Lemma lem5920677 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920678 {B C : Type'} (f : type632 B C) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> (B -> C) -> C) f x).
Proof. exact (@lem5920677 (B -> Prop) (type570 B C) f x). Qed.
Lemma lem5920679 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1320 A B C op f s) = (term1321 A B C op f s).
Proof. exact (@lem5920678 B C (@I ((C -> C -> C) -> (B -> Prop) -> (B -> C) -> C) (@iterate C B) op) (term1279 A B f s)). Qed.
Lemma lem5920680 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) : (term1318 A B C op f s) = (term1321 A B C op f s).
Proof. exact (TRANS (@lem5920675 A B C op f s) (@lem5920679 A B C op f s)). Qed.
Lemma lem5920681 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5920682 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1322 A B C op f s g).
Proof. exact (MK_COMB (@lem5920680 A B C op f s) (@lem5920681 B C g)). Qed.
Lemma lem5920684 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920685 {B C : Type'} (f : type570 B C) (x : B -> C) : (f x) = (@I ((B -> C) -> C) f x).
Proof. exact (@lem5920684 (B -> C) C f x). Qed.
Lemma lem5920686 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1322 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (@lem5920685 B C (term1321 A B C op f s) g). Qed.
Lemma lem5920687 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1319 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5920682 A B C op f s g) (@lem5920686 A B C op f s g)). Qed.
Lemma lem5920688 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term121 A B C op f s g) = (term1323 A B C op f s g).
Proof. exact (TRANS (@lem5920669 A B C op f s g) (@lem5920687 A B C op f s g)). Qed.
Lemma lem5920698 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920699 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5920698 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5920700 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5920699 A B C (@o A B C) g). Qed.
Lemma lem5920701 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5920702 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5920700 A B C g) (@lem5920701 A B f)). Qed.
Lemma lem5920704 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920705 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5920704 (A -> B) (A -> C) f x). Qed.
Lemma lem5920706 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5920705 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5920708 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5920702 A B C g f) (@lem5920706 A B C g f)). Qed.
Lemma lem5920710 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@iterate C A op s).
Proof. exact (eq_refl (@iterate C A op s)). Qed.
Lemma lem5920711 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1330 A B C op s g f).
Proof. exact (MK_COMB (@lem5920710 A C op s) (@lem5920708 A B C g f)). Qed.
Lemma lem5920713 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920714 {A C : Type'} (f : type750 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920713 (type1400 C) (type632 A C) f x). Qed.
Lemma lem5920715 {A C : Type'} (op : type1400 C) : (@iterate C A op) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op).
Proof. exact (@lem5920714 A C (@iterate C A) op). Qed.
Lemma lem5920716 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920717 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s).
Proof. exact (MK_COMB (@lem5920715 A C op) (@lem5920716 A s)). Qed.
Lemma lem5920719 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920720 {A C : Type'} (f : type632 A C) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> C) -> C) f x).
Proof. exact (@lem5920719 (A -> Prop) (type570 A C) f x). Qed.
Lemma lem5920721 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op s) = (term1331 A C op s).
Proof. exact (@lem5920720 A C (@I ((C -> C -> C) -> (A -> Prop) -> (A -> C) -> C) (@iterate C A) op) s). Qed.
Lemma lem5920722 {A C : Type'} (op : type1400 C) (s : A -> Prop) : (@iterate C A op s) = (term1331 A C op s).
Proof. exact (TRANS (@lem5920717 A C op s) (@lem5920721 A C op s)). Qed.
Lemma lem5920723 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5920724 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1332 A B C op s g f).
Proof. exact (MK_COMB (@lem5920722 A C op s) (@lem5920723 A B C g f)). Qed.
Lemma lem5920726 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920727 {A C : Type'} (f : type570 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> C) f x).
Proof. exact (@lem5920726 (A -> C) C f x). Qed.
Lemma lem5920728 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1332 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (@lem5920727 A C (term1331 A C op s) (term1329 A B C g f)). Qed.
Lemma lem5920729 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1330 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920724 A B C op s g f) (@lem5920728 A B C op s g f)). Qed.
Lemma lem5920730 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term122 A B C op s g f) = (term1333 A B C op s g f).
Proof. exact (TRANS (@lem5920711 A B C op s g f) (@lem5920729 A B C op s g f)). Qed.
Lemma lem5920731 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term382 A B C op f s g) = (term1360 A B C op f s g).
Proof. exact (MK_COMB (@lem5920646 C) (@lem5920688 A B C op f s g)). Qed.
Lemma lem5920732 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term1323 A B C op f s g) = (term1333 A B C op s g f)).
Proof. exact (MK_COMB (@lem5920731 A B C op f s g) (@lem5920730 A B C op s g f)). Qed.
Lemma lem5920739 {A : Type'} (x''''' : A) (y : A) : (term1361 A x''''' y) = (term1361 A x''''' y).
Proof. exact (eq_refl (term1361 A x''''' y)). Qed.
Lemma lem5920740 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5920745 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920746 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920745 A B f x). Qed.
Lemma lem5920748 {A B : Type'} (f : A -> B) (x''''' : A) : (f x''''') = (@I (A -> B) f x''''').
Proof. exact (@lem5920746 A B f x'''''). Qed.
Lemma lem5920753 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920754 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920753 A B f x). Qed.
Lemma lem5920756 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5920754 A B f y). Qed.
Lemma lem5920757 {A B : Type'} (f : A -> B) (x''''' : A) : (term1339 A B f x''''') = (term1340 A B f x''''').
Proof. exact (MK_COMB (@lem5920740 B) (@lem5920748 A B f x''''')). Qed.
Lemma lem5920758 {A B : Type'} (x''''' : A) (f : A -> B) (y : A) : ((f x''''') = (f y)) = ((@I (A -> B) f x''''') = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5920757 A B f x''''') (@lem5920756 A B f y)). Qed.
Lemma lem5920759 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920760 {A B : Type'} (x''''' : A) (f : A -> B) (y : A) : (term1362 A B x''''' f y) = (term1363 A B x''''' f y).
Proof. exact (MK_COMB (@lem5920759) (@lem5920758 A B x''''' f y)). Qed.
Lemma lem5920761 {A B : Type'} (f : A -> B) (x''''' : A) (y : A) : (term412 A B f x''''' y) = (term1364 A B f x''''' y).
Proof. exact (MK_COMB (@lem5920760 A B x''''' f y) (@lem5920739 A x''''' y)). Qed.
Lemma lem5920768 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920769 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920768 A (type686 A) f x). Qed.
Lemma lem5920770 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5920769 A (@IN A) y). Qed.
Lemma lem5920771 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920772 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem5920770 A y) (@lem5920771 A s)). Qed.
Lemma lem5920774 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920775 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920774 (A -> Prop) Prop f x). Qed.
Lemma lem5920776 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term1296 A y s).
Proof. exact (@lem5920775 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem5920778 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term1296 A y s).
Proof. exact (TRANS (@lem5920772 A y s) (@lem5920776 A y s)). Qed.
Lemma lem5920779 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920780 {A : Type'} (y : A) (s : A -> Prop) : (term413 A y s) = (term1365 A y s).
Proof. exact (MK_COMB (@lem5920779) (@lem5920778 A y s)). Qed.
Lemma lem5920781 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) : (term415 A B s f x''''' y) = (term1366 A B s f x''''' y).
Proof. exact (MK_COMB (@lem5920780 A y s) (@lem5920761 A B f x''''' y)). Qed.
Lemma lem5920788 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920789 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5920788 A (type686 A) f x). Qed.
Lemma lem5920790 {A : Type'} (x''''' : A) : (@IN A x''''') = (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''').
Proof. exact (@lem5920789 A (@IN A) x'''''). Qed.
Lemma lem5920791 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920792 {A : Type'} (x''''' : A) (s : A -> Prop) : (@IN A x''''' s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''' s).
Proof. exact (MK_COMB (@lem5920790 A x''''') (@lem5920791 A s)). Qed.
Lemma lem5920794 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920795 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5920794 (A -> Prop) Prop f x). Qed.
Lemma lem5920796 {A : Type'} (x''''' : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''' s) = (term1296 A x''''' s).
Proof. exact (@lem5920795 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''') s). Qed.
Lemma lem5920798 {A : Type'} (x''''' : A) (s : A -> Prop) : (@IN A x''''' s) = (term1296 A x''''' s).
Proof. exact (TRANS (@lem5920792 A x''''' s) (@lem5920796 A x''''' s)). Qed.
Lemma lem5920799 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920800 {A : Type'} (x''''' : A) (s : A -> Prop) : (term413 A x''''' s) = (term1365 A x''''' s).
Proof. exact (MK_COMB (@lem5920799) (@lem5920798 A x''''' s)). Qed.
Lemma lem5920801 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) : (term418 A B s f x''''' y) = (term1367 A B s f x''''' y).
Proof. exact (MK_COMB (@lem5920800 A x''''' s) (@lem5920781 A B s f x''''' y)). Qed.
Lemma lem5920802 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920803 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) : (term627 A B s f x''''' y) = (term1368 A B s f x''''' y).
Proof. exact (MK_COMB (@lem5920802) (@lem5920801 A B s f x''''' y)). Qed.
Lemma lem5920804 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term629 A B C x''''' y op s g f) = (term1369 A B C x''''' y op s g f).
Proof. exact (MK_COMB (@lem5920803 A B s f x''''' y) (@lem5920732 A B C op s g f)). Qed.
Lemma lem5920805 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920806 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term663 A B C x''''' y op s g f) = (term1370 A B C x''''' y op s g f).
Proof. exact (MK_COMB (@lem5920805) (@lem5920804 A B C x''''' y op s g f)). Qed.
Lemma lem5920807 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) (s : A -> Prop) : (term665 A B C x''''' y op g f x'''' s) = (term1371 A B C x''''' y op g f x'''' s).
Proof. exact (MK_COMB (@lem5920806 A B C x''''' y op s g f) (@lem5920645 A x'''' s)). Qed.
Lemma lem5920808 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920809 {A B C : Type'} (x''''' : A) (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) (s : A -> Prop) : (term697 A B C x''''' y op g f x'''' s) = (term1372 A B C x''''' y op g f x'''' s).
Proof. exact (MK_COMB (@lem5920808) (@lem5920807 A B C x''''' y op g f x'''' s)). Qed.
Lemma lem5920810 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term699 A B C x''''' y x'''' op s g f) = (term1385 A B C x''''' y x'''' op s g f).
Proof. exact (MK_COMB (@lem5920809 A B C x''''' y op g f x'''' s) (@lem5920615 A B C x'''' op s g f)). Qed.
Lemma lem5920811 {B : Type'} : (@IN B) = (@IN B).
Proof. exact (eq_refl (@IN B)). Qed.
Lemma lem5920816 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920817 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5920816 A B f x). Qed.
Lemma lem5920819 {A B : Type'} (f : A -> B) (x'''' : A) : (f x'''') = (@I (A -> B) f x'''').
Proof. exact (@lem5920817 A B f x''''). Qed.
Lemma lem5920826 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920827 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920826 (A -> B) (type678 A B) f x). Qed.
Lemma lem5920828 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem5920827 A B (@IMAGE A B) f). Qed.
Lemma lem5920829 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5920830 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s).
Proof. exact (MK_COMB (@lem5920828 A B f) (@lem5920829 A s)). Qed.
Lemma lem5920832 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920833 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem5920832 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem5920834 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f s) = (term1279 A B f s).
Proof. exact (@lem5920833 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) s). Qed.
Lemma lem5920836 {A B : Type'} (f : A -> B) (s : A -> Prop) : (@IMAGE A B f s) = (term1279 A B f s).
Proof. exact (TRANS (@lem5920830 A B f s) (@lem5920834 A B f s)). Qed.
Lemma lem5920837 {A B : Type'} (f : A -> B) (x'''' : A) : (term1374 A B f x'''') = (term1375 A B f x'''').
Proof. exact (MK_COMB (@lem5920811 B) (@lem5920819 A B f x'''')). Qed.
Lemma lem5920838 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term370 A B x'''' f s) = (term1376 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920837 A B f x'''') (@lem5920836 A B f s)). Qed.
Lemma lem5920840 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920841 {B : Type'} (f : type1364 B) (x : B) : (f x) = (@I (B -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem5920840 B (type686 B) f x). Qed.
Lemma lem5920842 {A B : Type'} (f : A -> B) (x'''' : A) : (term1375 A B f x'''') = (term1377 A B f x'''').
Proof. exact (@lem5920841 B (@IN B) (@I (A -> B) f x'''')). Qed.
Lemma lem5920843 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term1279 A B f s) = (term1279 A B f s).
Proof. exact (eq_refl (term1279 A B f s)). Qed.
Lemma lem5920844 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1376 A B x'''' f s) = (term1378 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920842 A B f x'''') (@lem5920843 A B f s)). Qed.
Lemma lem5920846 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5920847 {B : Type'} (f : type686 B) (x : B -> Prop) : (f x) = (@I ((B -> Prop) -> Prop) f x).
Proof. exact (@lem5920846 (B -> Prop) Prop f x). Qed.
Lemma lem5920848 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1378 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (@lem5920847 B (term1377 A B f x'''') (term1279 A B f s)). Qed.
Lemma lem5920849 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1376 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (TRANS (@lem5920844 A B x'''' f s) (@lem5920848 A B x'''' f s)). Qed.
Lemma lem5920850 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term370 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (TRANS (@lem5920838 A B x'''' f s) (@lem5920849 A B x'''' f s)). Qed.
Lemma lem5920851 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5920852 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term467 A B x'''' f s) = (term1386 A B x'''' f s).
Proof. exact (MK_COMB (@lem5920851) (@lem5920850 A B x'''' f s)). Qed.
Lemma lem5920853 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term726 A B C x''''' y x'''' op s g f) = (term1387 A B C x''''' y x'''' op s g f).
Proof. exact (MK_COMB (@lem5920852 A B x'''' f s) (@lem5920810 A B C x''''' y x'''' op s g f)). Qed.
Lemma lem5920854 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5920855 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term856 A B C x''''' y x'''' op s g f) = (term1388 A B C x''''' y x'''' op s g f).
Proof. exact (MK_COMB (@lem5920854) (@lem5920853 A B C x''''' y x'''' op s g f)). Qed.
Lemma lem5920856 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term858 A B C x''''' y x'''' op s g f) = (term1389 A B C x''''' y x'''' op s g f).
Proof. exact (MK_COMB (@lem5920855 A B C x''''' y x'''' op s g f) (@lem5920394 A B C x''''' y x'''' op s g f)). Qed.
Lemma lem5920857 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term858 A B C x''''' y x'''' op s g f) : term1389 A B C x''''' y x'''' op s g f.
Proof. exact (EQ_MP (@lem5920856 A B C x''''' y x'''' op s g f) (@lem5919030 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920860 {A B : Type'} (x'' : type1448 A B) (h1 : term1258 A B x'') : term1295 A B x''.
Proof. exact (proj2 (@lem5919687 A B x'' h1)). Qed.
Lemma lem5920866 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1387 A B C x''''' y x'''' op s g f.
Proof. exact (h1). Qed.
Lemma lem5920867 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1382 A B C x''''' y x'''' op s g f.
Proof. exact (h1). Qed.
Lemma lem5920868 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1385 A B C x''''' y x'''' op s g f.
Proof. exact (proj2 (@lem5920866 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920870 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1384 A B C x'''' op s g f.
Proof. exact (proj2 (@lem5920868 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920871 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1371 A B C x''''' y op g f x'''' s.
Proof. exact (proj1 (@lem5920868 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920873 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1354 A B x'''' s f.
Proof. exact (proj1 (@lem5920870 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920874 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1359 A x'''' s.
Proof. exact (proj2 (@lem5920871 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920875 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1369 A B C x''''' y op s g f.
Proof. exact (proj1 (@lem5920871 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920878 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1367 A B s f x''''' y.
Proof. exact (h1). Qed.
Lemma lem5920880 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1366 A B s f x''''' y.
Proof. exact (proj2 (@lem5920878 A B s f x''''' y h1)). Qed.
Lemma lem5920882 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1364 A B f x''''' y.
Proof. exact (proj2 (@lem5920880 A B s f x''''' y h1)). Qed.
Lemma lem5920886 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1373 A B C x''''' y x'''' op s g f.
Proof. exact (proj2 (@lem5920867 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920888 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1356 A B C x'''' op s g f.
Proof. exact (proj2 (@lem5920886 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920889 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1371 A B C x''''' y op g f x'''' s.
Proof. exact (proj1 (@lem5920886 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920891 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1354 A B x'''' s f.
Proof. exact (proj1 (@lem5920888 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920893 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1369 A B C x''''' y op s g f.
Proof. exact (proj1 (@lem5920889 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5920896 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1367 A B s f x''''' y.
Proof. exact (h1). Qed.
Lemma lem5920898 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1366 A B s f x''''' y.
Proof. exact (proj2 (@lem5920896 A B s f x''''' y h1)). Qed.
Lemma lem5920900 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1364 A B f x''''' y.
Proof. exact (proj2 (@lem5920898 A B s f x''''' y h1)). Qed.
Lemma lem5921253 {A : Type'} (P : Prop) (Q : A -> Prop) : (term549 A P Q) = (term548 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5921254 {A : Type'} (P : Prop) (Q : A -> Prop) : (term549 A P Q) = (term548 A P Q).
Proof. exact (@lem5921253 A P Q). Qed.
Lemma lem5921255 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1390 A B x'''' s f x') = (term1391 A B x'''' s f x').
Proof. exact (@lem5921254 A (term1347 A x'''' x' s) (term1350 A B x'''' s f x')). Qed.
Lemma lem5921256 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1392 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (eq_refl (term1392 A B x'''' s f x' y)). Qed.
Lemma lem5921257 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1393 A B x'''' s f x') = (term1350 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5921256 A B x'''' s f x' y)). Qed.
Lemma lem5921258 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921259 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1394 A B x'''' s f x') = (term1351 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921258 A) (@lem5921257 A B x'''' s f x')). Qed.
Lemma lem5921260 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5921261 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1390 A B x'''' s f x') = (term1352 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921260 A x'''' x' s) (@lem5921259 A B x'''' s f x')). Qed.
Lemma lem5921262 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5921263 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1395 A B x'''' s f x') = (term1396 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921262) (@lem5921261 A B x'''' s f x')). Qed.
Lemma lem5921264 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1392 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (eq_refl (term1392 A B x'''' s f x' y)). Qed.
Lemma lem5921265 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5921266 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1397 A B x'''' s f x' y) = (term1398 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5921265 A x'''' x' s) (@lem5921264 A B x'''' s f x' y)). Qed.
Lemma lem5921267 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1399 A B x'''' s f x') = (term1400 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5921266 A B x'''' s f x' y)). Qed.
Lemma lem5921268 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921269 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1391 A B x'''' s f x') = (term1401 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921268 A) (@lem5921267 A B x'''' s f x')). Qed.
Lemma lem5921270 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : ((term1390 A B x'''' s f x') = (term1391 A B x'''' s f x')) = ((term1352 A B x'''' s f x') = (term1401 A B x'''' s f x')).
Proof. exact (MK_COMB (@lem5921263 A B x'''' s f x') (@lem5921269 A B x'''' s f x')). Qed.
Lemma lem5921271 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1352 A B x'''' s f x') = (term1401 A B x'''' s f x').
Proof. exact (EQ_MP (@lem5921270 A B x'''' s f x') (@lem5921255 A B x'''' s f x')). Qed.
Lemma lem5921272 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1353 A B x'''' s f) = (term1402 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5921271 A B x'''' s f x')). Qed.
Lemma lem5921273 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921274 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1354 A B x'''' s f) = (term1403 A B x'''' s f).
Proof. exact (MK_COMB (@lem5921273 A) (@lem5921272 A B x'''' s f)). Qed.
Lemma lem5921297 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1349 A B x'''' s f x' y) = (term1404 A B x'''' s f x' y).
Proof. exact (@lem19699 (term1361 A y x'''') (term1297 A y s) (term1345 A B f x' y)). Qed.
Lemma lem5921304 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5921305 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1398 A B x'''' s f x' y) = (term1405 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5921304 A x'''' x' s) (@lem5921297 A B x'''' s f x' y)). Qed.
Lemma lem5921306 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1405 A B x'''' s f x' y) = (term1406 A B x'''' s f x' y).
Proof. exact (@lem19490 (term1407 A B x'''' f x' y) (term1347 A x'''' x' s) (term1408 A B s f x' y)). Qed.
Lemma lem5921313 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1409 A B x'''' s f x' y) = (term1410 A B x'''' s f x' y).
Proof. exact (@lem19699 (term1361 A x' x'''') (term1297 A x' s) (term1408 A B s f x' y)). Qed.
Lemma lem5921320 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (x' : A) (y : A) : (term1411 A B s x'''' f x' y) = (term1412 A B s x'''' f x' y).
Proof. exact (@lem19699 (term1361 A x' x'''') (term1297 A x' s) (term1407 A B x'''' f x' y)). Qed.
Lemma lem5921321 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5921322 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (x' : A) (y : A) : (term1413 A B s x'''' f x' y) = (term1414 A B s x'''' f x' y).
Proof. exact (MK_COMB (@lem5921321) (@lem5921320 A B s x'''' f x' y)). Qed.
Lemma lem5921323 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1406 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5921322 A B s x'''' f x' y) (@lem5921313 A B x'''' s f x' y)). Qed.
Lemma lem5921324 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1405 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (TRANS (@lem5921306 A B x'''' s f x' y) (@lem5921323 A B x'''' s f x' y)). Qed.
Lemma lem5921325 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1398 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (TRANS (@lem5921305 A B x'''' s f x' y) (@lem5921324 A B x'''' s f x' y)). Qed.
Lemma lem5921326 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1400 A B x'''' s f x') = (term1416 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5921325 A B x'''' s f x' y)). Qed.
Lemma lem5921327 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921328 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1401 A B x'''' s f x') = (term1417 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921327 A) (@lem5921326 A B x'''' s f x')). Qed.
Lemma lem5921329 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1402 A B x'''' s f) = (term1418 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5921328 A B x'''' s f x')). Qed.
Lemma lem5921330 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921331 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1403 A B x'''' s f) = (term1419 A B x'''' s f).
Proof. exact (MK_COMB (@lem5921330 A) (@lem5921329 A B x'''' s f)). Qed.
Lemma lem5921332 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1354 A B x'''' s f) = (term1419 A B x'''' s f).
Proof. exact (TRANS (@lem5921274 A B x'''' s f) (@lem5921331 A B x'''' s f)). Qed.
Lemma lem5921333 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1419 A B x'''' s f.
Proof. exact (EQ_MP (@lem5921332 A B x'''' s f) (@lem5920873 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5921524 {A B : Type'} (x'' : type1448 A B) (y : B) (f : A -> B) (s : A -> Prop) : (term1286 A B x'' y f s) = (term1420 A B x'' y f s).
Proof. exact (@lem19490 (y = (term1274 A B x'' y s f)) (term1283 A B y f s) (term1271 A B x'' y f s)). Qed.
Lemma lem5921525 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (term1288 A B x'' y s) = (term1421 A B x'' y s).
Proof. exact (fun_ext (fun f : A -> B => @lem5921524 A B x'' y f s)). Qed.
Lemma lem5921526 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5921527 {A B : Type'} (x'' : type1448 A B) (y : B) (s : A -> Prop) : (term1290 A B x'' y s) = (term1422 A B x'' y s).
Proof. exact (MK_COMB (@lem5921526 A B) (@lem5921525 A B x'' y s)). Qed.
Lemma lem5921528 {A B : Type'} (x'' : type1448 A B) (y : B) : (term1292 A B x'' y) = (term1423 A B x'' y).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5921527 A B x'' y s)). Qed.
Lemma lem5921529 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5921530 {A B : Type'} (x'' : type1448 A B) (y : B) : (term1293 A B x'' y) = (term1424 A B x'' y).
Proof. exact (MK_COMB (@lem5921529 A) (@lem5921528 A B x'' y)). Qed.
Lemma lem5921531 {A B : Type'} (x'' : type1448 A B) : (term1294 A B x'') = (term1425 A B x'').
Proof. exact (fun_ext (fun y : B => @lem5921530 A B x'' y)). Qed.
Lemma lem5921532 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5921534 {A B : Type'} (x'' : type1448 A B) : (term1295 A B x'') = (term1426 A B x'').
Proof. exact (MK_COMB (@lem5921532 B) (@lem5921531 A B x'')). Qed.
Lemma lem5921535 {A B : Type'} (x'' : type1448 A B) (h1 : term1258 A B x'') : term1426 A B x''.
Proof. exact (EQ_MP (@lem5921534 A B x'') (@lem5920860 A B x'' h1)). Qed.
Lemma lem5921711 {A : Type'} (P : Prop) (Q : A -> Prop) : (term549 A P Q) = (term548 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5921712 {A : Type'} (P : Prop) (Q : A -> Prop) : (term549 A P Q) = (term548 A P Q).
Proof. exact (@lem5921711 A P Q). Qed.
Lemma lem5921713 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1390 A B x'''' s f x') = (term1391 A B x'''' s f x').
Proof. exact (@lem5921712 A (term1347 A x'''' x' s) (term1350 A B x'''' s f x')). Qed.
Lemma lem5921714 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1392 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (eq_refl (term1392 A B x'''' s f x' y)). Qed.
Lemma lem5921715 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1393 A B x'''' s f x') = (term1350 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5921714 A B x'''' s f x' y)). Qed.
Lemma lem5921716 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921717 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1394 A B x'''' s f x') = (term1351 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921716 A) (@lem5921715 A B x'''' s f x')). Qed.
Lemma lem5921718 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5921719 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1390 A B x'''' s f x') = (term1352 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921718 A x'''' x' s) (@lem5921717 A B x'''' s f x')). Qed.
Lemma lem5921720 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5921721 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1395 A B x'''' s f x') = (term1396 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921720) (@lem5921719 A B x'''' s f x')). Qed.
Lemma lem5921722 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1392 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (eq_refl (term1392 A B x'''' s f x' y)). Qed.
Lemma lem5921723 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5921724 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1397 A B x'''' s f x' y) = (term1398 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5921723 A x'''' x' s) (@lem5921722 A B x'''' s f x' y)). Qed.
Lemma lem5921725 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1399 A B x'''' s f x') = (term1400 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5921724 A B x'''' s f x' y)). Qed.
Lemma lem5921726 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921727 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1391 A B x'''' s f x') = (term1401 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921726 A) (@lem5921725 A B x'''' s f x')). Qed.
Lemma lem5921728 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : ((term1390 A B x'''' s f x') = (term1391 A B x'''' s f x')) = ((term1352 A B x'''' s f x') = (term1401 A B x'''' s f x')).
Proof. exact (MK_COMB (@lem5921721 A B x'''' s f x') (@lem5921727 A B x'''' s f x')). Qed.
Lemma lem5921729 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1352 A B x'''' s f x') = (term1401 A B x'''' s f x').
Proof. exact (EQ_MP (@lem5921728 A B x'''' s f x') (@lem5921713 A B x'''' s f x')). Qed.
Lemma lem5921730 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1353 A B x'''' s f) = (term1402 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5921729 A B x'''' s f x')). Qed.
Lemma lem5921731 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921732 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1354 A B x'''' s f) = (term1403 A B x'''' s f).
Proof. exact (MK_COMB (@lem5921731 A) (@lem5921730 A B x'''' s f)). Qed.
Lemma lem5921755 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1349 A B x'''' s f x' y) = (term1404 A B x'''' s f x' y).
Proof. exact (@lem19699 (term1361 A y x'''') (term1297 A y s) (term1345 A B f x' y)). Qed.
Lemma lem5921762 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5921763 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1398 A B x'''' s f x' y) = (term1405 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5921762 A x'''' x' s) (@lem5921755 A B x'''' s f x' y)). Qed.
Lemma lem5921764 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1405 A B x'''' s f x' y) = (term1406 A B x'''' s f x' y).
Proof. exact (@lem19490 (term1407 A B x'''' f x' y) (term1347 A x'''' x' s) (term1408 A B s f x' y)). Qed.
Lemma lem5921771 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1409 A B x'''' s f x' y) = (term1410 A B x'''' s f x' y).
Proof. exact (@lem19699 (term1361 A x' x'''') (term1297 A x' s) (term1408 A B s f x' y)). Qed.
Lemma lem5921778 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (x' : A) (y : A) : (term1411 A B s x'''' f x' y) = (term1412 A B s x'''' f x' y).
Proof. exact (@lem19699 (term1361 A x' x'''') (term1297 A x' s) (term1407 A B x'''' f x' y)). Qed.
Lemma lem5921779 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5921780 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (x' : A) (y : A) : (term1413 A B s x'''' f x' y) = (term1414 A B s x'''' f x' y).
Proof. exact (MK_COMB (@lem5921779) (@lem5921778 A B s x'''' f x' y)). Qed.
Lemma lem5921781 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1406 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5921780 A B s x'''' f x' y) (@lem5921771 A B x'''' s f x' y)). Qed.
Lemma lem5921782 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1405 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (TRANS (@lem5921764 A B x'''' s f x' y) (@lem5921781 A B x'''' s f x' y)). Qed.
Lemma lem5921783 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1398 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (TRANS (@lem5921763 A B x'''' s f x' y) (@lem5921782 A B x'''' s f x' y)). Qed.
Lemma lem5921784 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1400 A B x'''' s f x') = (term1416 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5921783 A B x'''' s f x' y)). Qed.
Lemma lem5921785 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921786 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1401 A B x'''' s f x') = (term1417 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5921785 A) (@lem5921784 A B x'''' s f x')). Qed.
Lemma lem5921787 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1402 A B x'''' s f) = (term1418 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5921786 A B x'''' s f x')). Qed.
Lemma lem5921788 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5921789 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1403 A B x'''' s f) = (term1419 A B x'''' s f).
Proof. exact (MK_COMB (@lem5921788 A) (@lem5921787 A B x'''' s f)). Qed.
Lemma lem5921790 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1354 A B x'''' s f) = (term1419 A B x'''' s f).
Proof. exact (TRANS (@lem5921732 A B x'''' s f) (@lem5921789 A B x'''' s f)). Qed.
Lemma lem5921791 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1419 A B x'''' s f.
Proof. exact (EQ_MP (@lem5921790 A B x'''' s f) (@lem5920873 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922157 {A : Type'} (P : Prop) (Q : A -> Prop) : (term549 A P Q) = (term548 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5922158 {A : Type'} (P : Prop) (Q : A -> Prop) : (term549 A P Q) = (term548 A P Q).
Proof. exact (@lem5922157 A P Q). Qed.
Lemma lem5922159 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1390 A B x'''' s f x') = (term1391 A B x'''' s f x').
Proof. exact (@lem5922158 A (term1347 A x'''' x' s) (term1350 A B x'''' s f x')). Qed.
Lemma lem5922160 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1392 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (eq_refl (term1392 A B x'''' s f x' y)). Qed.
Lemma lem5922161 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1393 A B x'''' s f x') = (term1350 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5922160 A B x'''' s f x' y)). Qed.
Lemma lem5922162 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5922163 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1394 A B x'''' s f x') = (term1351 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5922162 A) (@lem5922161 A B x'''' s f x')). Qed.
Lemma lem5922164 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5922165 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1390 A B x'''' s f x') = (term1352 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5922164 A x'''' x' s) (@lem5922163 A B x'''' s f x')). Qed.
Lemma lem5922166 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5922167 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1395 A B x'''' s f x') = (term1396 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5922166) (@lem5922165 A B x'''' s f x')). Qed.
Lemma lem5922168 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1392 A B x'''' s f x' y) = (term1349 A B x'''' s f x' y).
Proof. exact (eq_refl (term1392 A B x'''' s f x' y)). Qed.
Lemma lem5922169 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5922170 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1397 A B x'''' s f x' y) = (term1398 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5922169 A x'''' x' s) (@lem5922168 A B x'''' s f x' y)). Qed.
Lemma lem5922171 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1399 A B x'''' s f x') = (term1400 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5922170 A B x'''' s f x' y)). Qed.
Lemma lem5922172 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5922173 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1391 A B x'''' s f x') = (term1401 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5922172 A) (@lem5922171 A B x'''' s f x')). Qed.
Lemma lem5922174 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : ((term1390 A B x'''' s f x') = (term1391 A B x'''' s f x')) = ((term1352 A B x'''' s f x') = (term1401 A B x'''' s f x')).
Proof. exact (MK_COMB (@lem5922167 A B x'''' s f x') (@lem5922173 A B x'''' s f x')). Qed.
Lemma lem5922175 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1352 A B x'''' s f x') = (term1401 A B x'''' s f x').
Proof. exact (EQ_MP (@lem5922174 A B x'''' s f x') (@lem5922159 A B x'''' s f x')). Qed.
Lemma lem5922176 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1353 A B x'''' s f) = (term1402 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5922175 A B x'''' s f x')). Qed.
Lemma lem5922177 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5922178 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1354 A B x'''' s f) = (term1403 A B x'''' s f).
Proof. exact (MK_COMB (@lem5922177 A) (@lem5922176 A B x'''' s f)). Qed.
Lemma lem5922201 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1349 A B x'''' s f x' y) = (term1404 A B x'''' s f x' y).
Proof. exact (@lem19699 (term1361 A y x'''') (term1297 A y s) (term1345 A B f x' y)). Qed.
Lemma lem5922208 {A : Type'} (x'''' : A) (x' : A) (s : A -> Prop) : (term1348 A x'''' x' s) = (term1348 A x'''' x' s).
Proof. exact (eq_refl (term1348 A x'''' x' s)). Qed.
Lemma lem5922209 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1398 A B x'''' s f x' y) = (term1405 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5922208 A x'''' x' s) (@lem5922201 A B x'''' s f x' y)). Qed.
Lemma lem5922210 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1405 A B x'''' s f x' y) = (term1406 A B x'''' s f x' y).
Proof. exact (@lem19490 (term1407 A B x'''' f x' y) (term1347 A x'''' x' s) (term1408 A B s f x' y)). Qed.
Lemma lem5922217 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1409 A B x'''' s f x' y) = (term1410 A B x'''' s f x' y).
Proof. exact (@lem19699 (term1361 A x' x'''') (term1297 A x' s) (term1408 A B s f x' y)). Qed.
Lemma lem5922224 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (x' : A) (y : A) : (term1411 A B s x'''' f x' y) = (term1412 A B s x'''' f x' y).
Proof. exact (@lem19699 (term1361 A x' x'''') (term1297 A x' s) (term1407 A B x'''' f x' y)). Qed.
Lemma lem5922225 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5922226 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (x' : A) (y : A) : (term1413 A B s x'''' f x' y) = (term1414 A B s x'''' f x' y).
Proof. exact (MK_COMB (@lem5922225) (@lem5922224 A B s x'''' f x' y)). Qed.
Lemma lem5922227 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1406 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (MK_COMB (@lem5922226 A B s x'''' f x' y) (@lem5922217 A B x'''' s f x' y)). Qed.
Lemma lem5922228 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1405 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (TRANS (@lem5922210 A B x'''' s f x' y) (@lem5922227 A B x'''' s f x' y)). Qed.
Lemma lem5922229 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) (y : A) : (term1398 A B x'''' s f x' y) = (term1415 A B x'''' s f x' y).
Proof. exact (TRANS (@lem5922209 A B x'''' s f x' y) (@lem5922228 A B x'''' s f x' y)). Qed.
Lemma lem5922230 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1400 A B x'''' s f x') = (term1416 A B x'''' s f x').
Proof. exact (fun_ext (fun y : A => @lem5922229 A B x'''' s f x' y)). Qed.
Lemma lem5922231 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5922232 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x' : A) : (term1401 A B x'''' s f x') = (term1417 A B x'''' s f x').
Proof. exact (MK_COMB (@lem5922231 A) (@lem5922230 A B x'''' s f x')). Qed.
Lemma lem5922233 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1402 A B x'''' s f) = (term1418 A B x'''' s f).
Proof. exact (fun_ext (fun x' : A => @lem5922232 A B x'''' s f x')). Qed.
Lemma lem5922234 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5922235 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1403 A B x'''' s f) = (term1419 A B x'''' s f).
Proof. exact (MK_COMB (@lem5922234 A) (@lem5922233 A B x'''' s f)). Qed.
Lemma lem5922236 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1354 A B x'''' s f) = (term1419 A B x'''' s f).
Proof. exact (TRANS (@lem5922178 A B x'''' s f) (@lem5922235 A B x'''' s f)). Qed.
Lemma lem5922237 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1419 A B x'''' s f.
Proof. exact (EQ_MP (@lem5922236 A B x'''' s f) (@lem5920891 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922711 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1323 A B C op f s g) = (term1333 A B C op s g f).
Proof. exact (h1). Qed.
Lemma lem5922796 {A B C : Type'} (_73898 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1427 A B x'''' s f _73898.
Proof. exact (@lem5921333 A B C x''''' y x'''' op s g f h1 _73898). Qed.
Lemma lem5922797 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73898 : A) : (term1427 A B x'''' s f _73898) = (term1417 A B x'''' s f _73898).
Proof. exact (eq_refl (term1427 A B x'''' s f _73898)). Qed.
Lemma lem5922798 {A B C : Type'} (_73898 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1417 A B x'''' s f _73898.
Proof. exact (EQ_MP (@lem5922797 A B x'''' s f _73898) (@lem5922796 A B C _73898 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922799 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1428 A B x'''' s f _73898 _73899.
Proof. exact (@lem5922798 A B C _73898 x''''' y x'''' op s g f h1 _73899). Qed.
Lemma lem5922800 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73898 : A) (_73899 : A) : (term1428 A B x'''' s f _73898 _73899) = (term1415 A B x'''' s f _73898 _73899).
Proof. exact (eq_refl (term1428 A B x'''' s f _73898 _73899)). Qed.
Lemma lem5922801 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1415 A B x'''' s f _73898 _73899.
Proof. exact (EQ_MP (@lem5922800 A B x'''' s f _73898 _73899) (@lem5922799 A B C _73898 _73899 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922835 {A B : Type'} (_73911 : B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1429 A B x'' _73911.
Proof. exact (@lem5921535 A B x'' h1 _73911). Qed.
Lemma lem5922836 {A B : Type'} (x'' : type1448 A B) (_73911 : B) : (term1429 A B x'' _73911) = (term1424 A B x'' _73911).
Proof. exact (eq_refl (term1429 A B x'' _73911)). Qed.
Lemma lem5922837 {A B : Type'} (_73911 : B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1424 A B x'' _73911.
Proof. exact (EQ_MP (@lem5922836 A B x'' _73911) (@lem5922835 A B _73911 x'' h1)). Qed.
Lemma lem5922838 {A B : Type'} (_73911 : B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1430 A B x'' _73911 _73912.
Proof. exact (@lem5922837 A B _73911 x'' h1 _73912). Qed.
Lemma lem5922839 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73912 : A -> Prop) : (term1430 A B x'' _73911 _73912) = (term1422 A B x'' _73911 _73912).
Proof. exact (eq_refl (term1430 A B x'' _73911 _73912)). Qed.
Lemma lem5922840 {A B : Type'} (_73911 : B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1422 A B x'' _73911 _73912.
Proof. exact (EQ_MP (@lem5922839 A B x'' _73911 _73912) (@lem5922838 A B _73911 _73912 x'' h1)). Qed.
Lemma lem5922841 {A B : Type'} (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1431 A B x'' _73911 _73912 _73913.
Proof. exact (@lem5922840 A B _73911 _73912 x'' h1 _73913). Qed.
Lemma lem5922842 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1431 A B x'' _73911 _73912 _73913) = (term1420 A B x'' _73911 _73913 _73912).
Proof. exact (eq_refl (term1431 A B x'' _73911 _73912 _73913)). Qed.
Lemma lem5922843 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1420 A B x'' _73911 _73913 _73912.
Proof. exact (EQ_MP (@lem5922842 A B x'' _73911 _73913 _73912) (@lem5922841 A B _73911 _73912 _73913 x'' h1)). Qed.
Lemma lem5922886 {A B C : Type'} (_73928 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1427 A B x'''' s f _73928.
Proof. exact (@lem5921791 A B C x''''' y x'''' op s g f h1 _73928). Qed.
Lemma lem5922887 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73928 : A) : (term1427 A B x'''' s f _73928) = (term1417 A B x'''' s f _73928).
Proof. exact (eq_refl (term1427 A B x'''' s f _73928)). Qed.
Lemma lem5922888 {A B C : Type'} (_73928 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1417 A B x'''' s f _73928.
Proof. exact (EQ_MP (@lem5922887 A B x'''' s f _73928) (@lem5922886 A B C _73928 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922889 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1428 A B x'''' s f _73928 _73929.
Proof. exact (@lem5922888 A B C _73928 x''''' y x'''' op s g f h1 _73929). Qed.
Lemma lem5922890 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73928 : A) (_73929 : A) : (term1428 A B x'''' s f _73928 _73929) = (term1415 A B x'''' s f _73928 _73929).
Proof. exact (eq_refl (term1428 A B x'''' s f _73928 _73929)). Qed.
Lemma lem5922891 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1415 A B x'''' s f _73928 _73929.
Proof. exact (EQ_MP (@lem5922890 A B x'''' s f _73928 _73929) (@lem5922889 A B C _73928 _73929 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922976 {A B C : Type'} (_73958 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1427 A B x'''' s f _73958.
Proof. exact (@lem5922237 A B C x''''' y x'''' op s g f h1 _73958). Qed.
Lemma lem5922977 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73958 : A) : (term1427 A B x'''' s f _73958) = (term1417 A B x'''' s f _73958).
Proof. exact (eq_refl (term1427 A B x'''' s f _73958)). Qed.
Lemma lem5922978 {A B C : Type'} (_73958 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1417 A B x'''' s f _73958.
Proof. exact (EQ_MP (@lem5922977 A B x'''' s f _73958) (@lem5922976 A B C _73958 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5922979 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1428 A B x'''' s f _73958 _73959.
Proof. exact (@lem5922978 A B C _73958 x''''' y x'''' op s g f h1 _73959). Qed.
Lemma lem5922980 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73958 : A) (_73959 : A) : (term1428 A B x'''' s f _73958 _73959) = (term1415 A B x'''' s f _73958 _73959).
Proof. exact (eq_refl (term1428 A B x'''' s f _73958 _73959)). Qed.
Lemma lem5922981 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1415 A B x'''' s f _73958 _73959.
Proof. exact (EQ_MP (@lem5922980 A B x'''' s f _73958 _73959) (@lem5922979 A B C _73958 _73959 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923072 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1410 A B x'''' s f _73898 _73899.
Proof. exact (proj2 (@lem5922801 A B C _73898 _73899 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923087 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1412 A B s x'''' f _73928 _73929.
Proof. exact (proj1 (@lem5922891 A B C _73928 _73929 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923100 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1410 A B x'''' s f _73958 _73959.
Proof. exact (proj2 (@lem5922981 A B C _73958 _73959 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923185 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1361 A x''''' y.
Proof. exact (proj2 (@lem5920882 A B s f x''''' y h1)). Qed.
Lemma lem5923213 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1432 A B s f _73898 _73899.
Proof. exact (proj2 (@lem5923072 A B C _73898 _73899 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923337 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1297 A x'''' s.
Proof. exact (proj1 (@lem5920874 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923397 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1433 A B s x'''' f _73928 _73929.
Proof. exact (proj2 (@lem5923087 A B C _73928 _73929 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923427 {A B : Type'} (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1434 A B x'' _73911 _73912 _73913.
Proof. exact (proj1 (@lem5922843 A B _73911 _73913 _73912 x'' h1)). Qed.
Lemma lem5923433 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1435 A B x'' _73911 _73913 _73912.
Proof. exact (proj2 (@lem5922843 A B _73911 _73913 _73912 x'' h1)). Qed.
Lemma lem5923503 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1361 A x''''' y.
Proof. exact (proj2 (@lem5920900 A B s f x''''' y h1)). Qed.
Lemma lem5923531 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1432 A B s f _73958 _73959.
Proof. exact (proj2 (@lem5923100 A B C _73958 _73959 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923653 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1338 A B C x'''' op s g f.
Proof. exact (proj2 (@lem5920888 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5923659 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1323 A B C op f s g) = (term1333 A B C op s g f).
Proof. exact (h1). Qed.
Lemma lem5924507 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A x''''' s.
Proof. exact (proj1 (@lem5920878 A B s f x''''' y h1)). Qed.
Lemma lem5924508 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1436 A x''''' s.
Proof. exact (fun h0 : term1297 A x''''' s => @lem5924507 A B s f x''''' y h1). Qed.
Lemma lem5924510 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5924511 {A : Type'} (x''''' : A) (s : A -> Prop) : (term1436 A x''''' s) = (term1296 A x''''' s).
Proof. exact (@lem5924510 (term1296 A x''''' s)). Qed.
Lemma lem5924512 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A x''''' s.
Proof. exact (EQ_MP (@lem5924511 A x''''' s) (@lem5924508 A B s f x''''' y h1)). Qed.
Lemma lem5924514 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A y s.
Proof. exact (proj1 (@lem5920880 A B s f x''''' y h1)). Qed.
Lemma lem5924515 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1436 A y s.
Proof. exact (fun h0 : term1297 A y s => @lem5924514 A B s f x''''' y h1). Qed.
Lemma lem5924517 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5924518 {A : Type'} (y : A) (s : A -> Prop) : (term1436 A y s) = (term1296 A y s).
Proof. exact (@lem5924517 (term1296 A y s)). Qed.
Lemma lem5924519 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A y s.
Proof. exact (EQ_MP (@lem5924518 A y s) (@lem5924515 A B s f x''''' y h1)). Qed.
Lemma lem5924521 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : (@I (A -> B) f x''''') = (@I (A -> B) f y).
Proof. exact (proj1 (@lem5920882 A B s f x''''' y h1)). Qed.
Lemma lem5924522 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1438 A B x''''' f y.
Proof. exact (fun h0 : term1342 A B x''''' f y => @lem5924521 A B s f x''''' y h1). Qed.
Lemma lem5924524 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5924525 {A B : Type'} (x''''' : A) (f : A -> B) (y : A) : (term1438 A B x''''' f y) = ((@I (A -> B) f x''''') = (@I (A -> B) f y)).
Proof. exact (@lem5924524 ((@I (A -> B) f x''''') = (@I (A -> B) f y))). Qed.
Lemma lem5924526 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : (@I (A -> B) f x''''') = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem5924525 A B x''''' f y) (@lem5924522 A B s f x''''' y h1)). Qed.
Lemma lem5924542 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5924543 {A B : Type'} (f : A -> B) (s : A -> Prop) (_73898 : A) (_73899 : A) : (term1408 A B s f _73898 _73899) = (term1439 A B f s _73898 _73899).
Proof. exact (@lem5924542 (term1342 A B _73898 f _73899) (term1297 A _73899 s) (_73898 = _73899)). Qed.
Lemma lem5924559 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5924560 {A : Type'} (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1440 A s _73898 _73899) = (term1441 A _73898 _73899 s).
Proof. exact (@lem5924559 (_73898 = _73899) (term1297 A _73899 s)). Qed.
Lemma lem5924568 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) : (term1344 A B _73898 f _73899) = (term1344 A B _73898 f _73899).
Proof. exact (eq_refl (term1344 A B _73898 f _73899)). Qed.
Lemma lem5924569 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1439 A B f s _73898 _73899) = (term1442 A B f _73898 _73899 s).
Proof. exact (MK_COMB (@lem5924568 A B _73898 f _73899) (@lem5924560 A _73898 _73899 s)). Qed.
Lemma lem5924573 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5924574 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1442 A B f _73898 _73899 s) = (term1443 A B _73898 f _73899 s).
Proof. exact (@lem5924573 (_73898 = _73899) (term1342 A B _73898 f _73899) (term1297 A _73899 s)). Qed.
Lemma lem5924594 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1439 A B f s _73898 _73899) = (term1443 A B _73898 f _73899 s).
Proof. exact (TRANS (@lem5924569 A B f _73898 _73899 s) (@lem5924574 A B _73898 f _73899 s)). Qed.
Lemma lem5924595 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1408 A B s f _73898 _73899) = (term1443 A B _73898 f _73899 s).
Proof. exact (TRANS (@lem5924543 A B f s _73898 _73899) (@lem5924594 A B _73898 f _73899 s)). Qed.
Lemma lem5924596 {A : Type'} (_73898 : A) (s : A -> Prop) : (term1444 A _73898 s) = (term1444 A _73898 s).
Proof. exact (eq_refl (term1444 A _73898 s)). Qed.
Lemma lem5924597 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1432 A B s f _73898 _73899) = (term1445 A B _73898 f _73899 s).
Proof. exact (MK_COMB (@lem5924596 A _73898 s) (@lem5924595 A B _73898 f _73899 s)). Qed.
Lemma lem5924601 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5924602 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1445 A B _73898 f _73899 s) = (term1446 A B _73898 f _73899 s).
Proof. exact (@lem5924601 (_73898 = _73899) (term1297 A _73898 s) (term1447 A B _73898 f _73899 s)). Qed.
Lemma lem5924618 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5924619 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1448 A B _73898 f _73899 s) = (term1449 A B f _73898 _73899 s).
Proof. exact (@lem5924618 (term1342 A B _73898 f _73899) (term1297 A _73898 s) (term1297 A _73899 s)). Qed.
Lemma lem5924637 {A : Type'} (_73898 : A) (_73899 : A) : (term1450 A _73898 _73899) = (term1450 A _73898 _73899).
Proof. exact (eq_refl (term1450 A _73898 _73899)). Qed.
Lemma lem5924638 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1446 A B _73898 f _73899 s) = (term1451 A B f _73898 _73899 s).
Proof. exact (MK_COMB (@lem5924637 A _73898 _73899) (@lem5924619 A B f _73898 _73899 s)). Qed.
Lemma lem5924649 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1445 A B _73898 f _73899 s) = (term1451 A B f _73898 _73899 s).
Proof. exact (TRANS (@lem5924602 A B _73898 f _73899 s) (@lem5924638 A B f _73898 _73899 s)). Qed.
Lemma lem5924650 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1432 A B s f _73898 _73899) = (term1451 A B f _73898 _73899 s).
Proof. exact (TRANS (@lem5924597 A B _73898 f _73899 s) (@lem5924649 A B f _73898 _73899 s)). Qed.
Lemma lem5924651 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5924652 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1452 A B s f _73898 _73899) = (term1453 A B f _73898 _73899 s).
Proof. exact (MK_COMB (@lem5924651) (@lem5924650 A B f _73898 _73899 s)). Qed.
Lemma lem5924678 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5924679 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1454 A B s _73898 f _73899) = (term1447 A B _73898 f _73899 s).
Proof. exact (@lem5924678 (term1342 A B _73898 f _73899) (term1297 A _73899 s)). Qed.
Lemma lem5924687 {A : Type'} (_73898 : A) (s : A -> Prop) : (term1444 A _73898 s) = (term1444 A _73898 s).
Proof. exact (eq_refl (term1444 A _73898 s)). Qed.
Lemma lem5924688 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) (s : A -> Prop) : (term1455 A B s _73898 f _73899) = (term1448 A B _73898 f _73899 s).
Proof. exact (MK_COMB (@lem5924687 A _73898 s) (@lem5924679 A B _73898 f _73899 s)). Qed.
Lemma lem5924692 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5924693 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1448 A B _73898 f _73899 s) = (term1449 A B f _73898 _73899 s).
Proof. exact (@lem5924692 (term1342 A B _73898 f _73899) (term1297 A _73898 s) (term1297 A _73899 s)). Qed.
Lemma lem5924711 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1455 A B s _73898 f _73899) = (term1449 A B f _73898 _73899 s).
Proof. exact (TRANS (@lem5924688 A B _73898 f _73899 s) (@lem5924693 A B f _73898 _73899 s)). Qed.
Lemma lem5924712 {A : Type'} (_73898 : A) (_73899 : A) : (term1450 A _73898 _73899) = (term1450 A _73898 _73899).
Proof. exact (eq_refl (term1450 A _73898 _73899)). Qed.
Lemma lem5924713 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : (term1456 A B s _73898 f _73899) = (term1451 A B f _73898 _73899 s).
Proof. exact (MK_COMB (@lem5924712 A _73898 _73899) (@lem5924711 A B f _73898 _73899 s)). Qed.
Lemma lem5924724 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : ((term1432 A B s f _73898 _73899) = (term1456 A B s _73898 f _73899)) = ((term1451 A B f _73898 _73899 s) = (term1451 A B f _73898 _73899 s)).
Proof. exact (MK_COMB (@lem5924652 A B f _73898 _73899 s) (@lem5924713 A B f _73898 _73899 s)). Qed.
Lemma lem5924726 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5924727 (x : Prop) : (x = x) = True.
Proof. exact (@lem5924726 Prop x). Qed.
Lemma lem5924728 {A B : Type'} (f : A -> B) (_73898 : A) (_73899 : A) (s : A -> Prop) : ((term1451 A B f _73898 _73899 s) = (term1451 A B f _73898 _73899 s)) = True.
Proof. exact (@lem5924727 (term1451 A B f _73898 _73899 s)). Qed.
Lemma lem5924729 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : ((term1432 A B s f _73898 _73899) = (term1456 A B s _73898 f _73899)) = True.
Proof. exact (TRANS (@lem5924724 A B f _73898 _73899 s) (@lem5924728 A B f _73898 _73899 s)). Qed.
Lemma lem5924730 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : True = ((term1432 A B s f _73898 _73899) = (term1456 A B s _73898 f _73899)).
Proof. exact (SYM (@lem5924729 A B s _73898 f _73899)). Qed.
Lemma lem5924731 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1432 A B s f _73898 _73899) = (term1456 A B s _73898 f _73899).
Proof. exact (EQ_MP (@lem5924730 A B s _73898 f _73899) (@lem0)). Qed.
Lemma lem5924732 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1456 A B s _73898 f _73899.
Proof. exact (EQ_MP (@lem5924731 A B s _73898 f _73899) (@lem5923213 A B C _73898 _73899 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5924734 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5924735 {A B : Type'} (s : A -> Prop) (f : A -> B) (_73898 : A) (_73899 : A) : (term1456 A B s _73898 f _73899) = (term1458 A B s f _73898 _73899).
Proof. exact (@lem5924734 (term1455 A B s _73898 f _73899) (_73898 = _73899)). Qed.
Lemma lem5924737 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5924738 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1461 A B s _73898 f _73899) = (term1462 A B s _73898 f _73899).
Proof. exact (@lem5924737 (term1297 A _73898 s) (term1454 A B s _73898 f _73899)). Qed.
Lemma lem5924740 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5924741 {A : Type'} (_73898 : A) (s : A -> Prop) : (term1464 A _73898 s) = (term1296 A _73898 s).
Proof. exact (@lem5924740 (term1296 A _73898 s)). Qed.
Lemma lem5924742 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5924743 {A : Type'} (_73898 : A) (s : A -> Prop) : (term1465 A _73898 s) = (term1365 A _73898 s).
Proof. exact (MK_COMB (@lem5924742) (@lem5924741 A _73898 s)). Qed.
Lemma lem5924745 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5924746 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1466 A B s _73898 f _73899) = (term1467 A B s _73898 f _73899).
Proof. exact (@lem5924745 (term1297 A _73899 s) (term1342 A B _73898 f _73899)). Qed.
Lemma lem5924748 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5924749 {A : Type'} (_73899 : A) (s : A -> Prop) : (term1464 A _73899 s) = (term1296 A _73899 s).
Proof. exact (@lem5924748 (term1296 A _73899 s)). Qed.
Lemma lem5924750 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5924751 {A : Type'} (_73899 : A) (s : A -> Prop) : (term1465 A _73899 s) = (term1365 A _73899 s).
Proof. exact (MK_COMB (@lem5924750) (@lem5924749 A _73899 s)). Qed.
Lemma lem5924753 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5924754 {A B : Type'} (_73898 : A) (f : A -> B) (_73899 : A) : (term1468 A B _73898 f _73899) = ((@I (A -> B) f _73898) = (@I (A -> B) f _73899)).
Proof. exact (@lem5924753 ((@I (A -> B) f _73898) = (@I (A -> B) f _73899))). Qed.
Lemma lem5924755 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1467 A B s _73898 f _73899) = (term1469 A B s _73898 f _73899).
Proof. exact (MK_COMB (@lem5924751 A _73899 s) (@lem5924754 A B _73898 f _73899)). Qed.
Lemma lem5924756 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1466 A B s _73898 f _73899) = (term1469 A B s _73898 f _73899).
Proof. exact (TRANS (@lem5924746 A B s _73898 f _73899) (@lem5924755 A B s _73898 f _73899)). Qed.
Lemma lem5924757 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1462 A B s _73898 f _73899) = (term1470 A B s _73898 f _73899).
Proof. exact (MK_COMB (@lem5924743 A _73898 s) (@lem5924756 A B s _73898 f _73899)). Qed.
Lemma lem5924758 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1461 A B s _73898 f _73899) = (term1470 A B s _73898 f _73899).
Proof. exact (TRANS (@lem5924738 A B s _73898 f _73899) (@lem5924757 A B s _73898 f _73899)). Qed.
Lemma lem5924759 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5924760 {A B : Type'} (s : A -> Prop) (_73898 : A) (f : A -> B) (_73899 : A) : (term1471 A B s _73898 f _73899) = (term1472 A B s _73898 f _73899).
Proof. exact (MK_COMB (@lem5924759) (@lem5924758 A B s _73898 f _73899)). Qed.
Lemma lem5924761 {A : Type'} (_73898 : A) (_73899 : A) : (_73898 = _73899) = (_73898 = _73899).
Proof. exact (eq_refl (_73898 = _73899)). Qed.
Lemma lem5924762 {A B : Type'} (s : A -> Prop) (f : A -> B) (_73898 : A) (_73899 : A) : (term1458 A B s f _73898 _73899) = (term1473 A B s f _73898 _73899).
Proof. exact (MK_COMB (@lem5924760 A B s _73898 f _73899) (@lem5924761 A _73898 _73899)). Qed.
Lemma lem5924763 {A B : Type'} (s : A -> Prop) (f : A -> B) (_73898 : A) (_73899 : A) : (term1456 A B s _73898 f _73899) = (term1473 A B s f _73898 _73899).
Proof. exact (TRANS (@lem5924735 A B s f _73898 _73899) (@lem5924762 A B s f _73898 _73899)). Qed.
Lemma lem5924765 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1469 A B s x''''' f y.
Proof. exact (conj (@lem5924519 A B s f x''''' y h1) (@lem5924526 A B s f x''''' y h1)). Qed.
Lemma lem5924766 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1470 A B s x''''' f y.
Proof. exact (conj (@lem5924512 A B s f x''''' y h1) (@lem5924765 A B s f x''''' y h1)). Qed.
Lemma lem5924768 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1473 A B s f _73898 _73899.
Proof. exact (EQ_MP (@lem5924763 A B s f _73898 _73899) (@lem5924732 A B C _73898 _73899 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5924769 {A B C : Type'} (_73898 : A) (_73899 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1473 A B s f _73898 _73899.
Proof. exact (@lem5924768 A B C _73898 _73899 x''''' y x'''' op s g f h1). Qed.
Lemma lem5924770 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1473 A B s f x''''' y.
Proof. exact (@lem5924769 A B C x''''' y x''''' y x'''' op s g f h1). Qed.
Lemma lem5924773 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1367 A B s f x''''' y) (h2 : term1387 A B C x''''' y x'''' op s g f) : x''''' = y.
Proof. exact (@lem5924770 A B C x''''' y x'''' op s g f h2 (@lem5924766 A B s f x''''' y h1)). Qed.
Lemma lem5924774 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1367 A B s f x''''' y) (h2 : term1387 A B C x''''' y x'''' op s g f) : term1474 A x''''' y.
Proof. exact (fun h0 : term1361 A x''''' y => @lem5924773 A B C x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5924776 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5924777 {A : Type'} (x''''' : A) (y : A) : (term1474 A x''''' y) = (x''''' = y).
Proof. exact (@lem5924776 (x''''' = y)). Qed.
Lemma lem5924778 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1367 A B s f x''''' y) (h2 : term1387 A B C x''''' y x'''' op s g f) : x''''' = y.
Proof. exact (EQ_MP (@lem5924777 A x''''' y) (@lem5924774 A B C x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5924781 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5924783 {A : Type'} (x''''' : A) (y : A) : (term1361 A x''''' y) = (term1475 A x''''' y).
Proof. exact (@lem5924781 (x''''' = y)). Qed.
Lemma lem5924786 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1475 A x''''' y.
Proof. exact (EQ_MP (@lem5924783 A x''''' y) (@lem5923185 A B s f x''''' y h1)). Qed.
Lemma lem5924789 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1367 A B s f x''''' y) (h2 : term1387 A B C x''''' y x'''' op s g f) : False.
Proof. exact (@lem5924786 A B s f x''''' y h1 (@lem5924778 A B C x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5924790 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1367 A B s f x''''' y) (h2 : term1387 A B C x''''' y x'''' op s g f) : term1476.
Proof. exact (fun h0 : ~ False => @lem5924789 A B C x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5924792 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5924793 : term1476 = False.
Proof. exact (@lem5924792 False). Qed.
Lemma lem5924794 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1367 A B s f x''''' y) (h2 : term1387 A B C x''''' y x'''' op s g f) : False.
Proof. exact (EQ_MP (@lem5924793) (@lem5924790 A B C x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5924833 {A : Type'} : (@I ((A -> Prop) -> Prop)) = (@I ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@I ((A -> Prop) -> Prop))). Qed.
Lemma lem5924834 {A : Type'} (_74166 : type686 A) (_74168 : type686 A) (h1 : _74166 = _74168) : _74166 = _74168.
Proof. exact (h1). Qed.
Lemma lem5924835 {A : Type'} (_74167 : A -> Prop) (_74169 : A -> Prop) (h1 : _74167 = _74169) : _74167 = _74169.
Proof. exact (h1). Qed.
Lemma lem5924836 {A : Type'} (_74166 : type686 A) (_74168 : type686 A) (h1 : _74166 = _74168) : (@I ((A -> Prop) -> Prop) _74166) = (@I ((A -> Prop) -> Prop) _74168).
Proof. exact (MK_COMB (@lem5924833 A) (@lem5924834 A _74166 _74168 h1)). Qed.
Lemma lem5924837 {A : Type'} (_74167 : A -> Prop) (_74169 : A -> Prop) (_74166 : type686 A) (_74168 : type686 A) (h1 : _74167 = _74169) (h2 : _74166 = _74168) : (@I ((A -> Prop) -> Prop) _74166 _74167) = (@I ((A -> Prop) -> Prop) _74168 _74169).
Proof. exact (MK_COMB (@lem5924836 A _74166 _74168 h2) (@lem5924835 A _74167 _74169 h1)). Qed.
Lemma lem5924839 (b : Prop) (a : Prop) : term1477 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem5924840 {A : Type'} (_74168 : type686 A) (_74169 : A -> Prop) (_74166 : type686 A) (_74167 : A -> Prop) : term1478 A _74168 _74169 _74166 _74167.
Proof. exact (@lem5924839 (@I ((A -> Prop) -> Prop) _74168 _74169) (@I ((A -> Prop) -> Prop) _74166 _74167)). Qed.
Lemma lem5924841 {A : Type'} (_74167 : A -> Prop) (_74169 : A -> Prop) (_74166 : type686 A) (_74168 : type686 A) (h1 : _74167 = _74169) (h2 : _74166 = _74168) : term1479 A _74168 _74169 _74166 _74167.
Proof. exact (@lem5924840 A _74168 _74169 _74166 _74167 (@lem5924837 A _74167 _74169 _74166 _74168 h1 h2)). Qed.
Lemma lem5924842 {A : Type'} (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) (_74169 : A -> Prop) (h1 : _74167 = _74169) : term1480 A _74168 _74169 _74166 _74167.
Proof. exact (fun h0 : _74166 = _74168 => @lem5924841 A _74167 _74169 _74166 _74168 h1 h0). Qed.
Lemma lem5924844 (a : Prop) (b : Prop) : (a -> b) = (term1481 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5924845 {A : Type'} (_74168 : type686 A) (_74169 : A -> Prop) (_74166 : type686 A) (_74167 : A -> Prop) : (term1480 A _74168 _74169 _74166 _74167) = (term1482 A _74168 _74169 _74166 _74167).
Proof. exact (@lem5924844 (_74166 = _74168) (term1479 A _74168 _74169 _74166 _74167)). Qed.
Lemma lem5924846 {A : Type'} (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) (_74169 : A -> Prop) (h1 : _74167 = _74169) : term1482 A _74168 _74169 _74166 _74167.
Proof. exact (EQ_MP (@lem5924845 A _74168 _74169 _74166 _74167) (@lem5924842 A _74168 _74166 _74167 _74169 h1)). Qed.
Lemma lem5924847 {A : Type'} (_74168 : type686 A) (_74169 : A -> Prop) (_74166 : type686 A) (_74167 : A -> Prop) : term1483 A _74168 _74169 _74166 _74167.
Proof. exact (fun h0 : _74167 = _74169 => @lem5924846 A _74168 _74166 _74167 _74169 h0). Qed.
Lemma lem5924849 (a : Prop) (b : Prop) : (a -> b) = (term1481 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5924850 {A : Type'} (_74168 : type686 A) (_74169 : A -> Prop) (_74166 : type686 A) (_74167 : A -> Prop) : (term1483 A _74168 _74169 _74166 _74167) = (term1484 A _74168 _74169 _74166 _74167).
Proof. exact (@lem5924849 (_74167 = _74169) (term1482 A _74168 _74169 _74166 _74167)). Qed.
Lemma lem5924851 {A : Type'} (_74168 : type686 A) (_74169 : A -> Prop) (_74166 : type686 A) (_74167 : A -> Prop) : term1484 A _74168 _74169 _74166 _74167.
Proof. exact (EQ_MP (@lem5924850 A _74168 _74169 _74166 _74167) (@lem5924847 A _74168 _74169 _74166 _74167)). Qed.
Lemma lem5925426 {A : Type'} : (@I (A -> (A -> Prop) -> Prop)) = (@I (A -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@I (A -> (A -> Prop) -> Prop))). Qed.
Lemma lem5925427 {A : Type'} (_74322 : type1364 A) (_74324 : type1364 A) (h1 : _74322 = _74324) : _74322 = _74324.
Proof. exact (h1). Qed.
Lemma lem5925428 {A : Type'} (_74323 : A) (_74325 : A) (h1 : _74323 = _74325) : _74323 = _74325.
Proof. exact (h1). Qed.
Lemma lem5925429 {A : Type'} (_74322 : type1364 A) (_74324 : type1364 A) (h1 : _74322 = _74324) : (@I (A -> (A -> Prop) -> Prop) _74322) = (@I (A -> (A -> Prop) -> Prop) _74324).
Proof. exact (MK_COMB (@lem5925426 A) (@lem5925427 A _74322 _74324 h1)). Qed.
Lemma lem5925430 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) (h1 : _74323 = _74325) (h2 : _74322 = _74324) : (@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325).
Proof. exact (MK_COMB (@lem5925429 A _74322 _74324 h2) (@lem5925428 A _74323 _74325 h1)). Qed.
Lemma lem5925431 {A : Type'} (_74322 : type1364 A) (_74324 : type1364 A) (_74323 : A) (_74325 : A) (h1 : _74323 = _74325) : term1485 A _74322 _74323 _74324 _74325.
Proof. exact (fun h0 : _74322 = _74324 => @lem5925430 A _74323 _74325 _74322 _74324 h1 h0). Qed.
Lemma lem5925433 (a : Prop) (b : Prop) : (a -> b) = (term1481 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5925434 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : (term1485 A _74322 _74323 _74324 _74325) = (term1486 A _74322 _74323 _74324 _74325).
Proof. exact (@lem5925433 (_74322 = _74324) ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325))). Qed.
Lemma lem5925435 {A : Type'} (_74322 : type1364 A) (_74324 : type1364 A) (_74323 : A) (_74325 : A) (h1 : _74323 = _74325) : term1486 A _74322 _74323 _74324 _74325.
Proof. exact (EQ_MP (@lem5925434 A _74322 _74323 _74324 _74325) (@lem5925431 A _74322 _74324 _74323 _74325 h1)). Qed.
Lemma lem5925436 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : term1487 A _74322 _74323 _74324 _74325.
Proof. exact (fun h0 : _74323 = _74325 => @lem5925435 A _74322 _74324 _74323 _74325 h0). Qed.
Lemma lem5925438 (a : Prop) (b : Prop) : (a -> b) = (term1481 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5925439 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : (term1487 A _74322 _74323 _74324 _74325) = (term1488 A _74322 _74323 _74324 _74325).
Proof. exact (@lem5925438 (_74323 = _74325) (term1486 A _74322 _74323 _74324 _74325)). Qed.
Lemma lem5925440 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : term1488 A _74322 _74323 _74324 _74325.
Proof. exact (EQ_MP (@lem5925439 A _74322 _74323 _74324 _74325) (@lem5925436 A _74322 _74323 _74324 _74325)). Qed.
Lemma lem5925456 {B : Type'} (x : B) (y : B) (z : B) : term1489 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem5925538 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem21386 (A -> Prop) x). Qed.
Lemma lem5925539 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem5925538 A x). Qed.
Lemma lem5925540 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (@lem5925539 A s). Qed.
Lemma lem5925541 {A : Type'} (s : A -> Prop) : term1490 A s.
Proof. exact (fun h0 : term1491 A s => @lem5925540 A s). Qed.
Lemma lem5925543 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925544 {A : Type'} (s : A -> Prop) : (term1490 A s) = (s = s).
Proof. exact (@lem5925543 (s = s)). Qed.
Lemma lem5925545 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (EQ_MP (@lem5925544 A s) (@lem5925541 A s)). Qed.
Lemma lem5925547 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1379 A B x'''' f s.
Proof. exact (proj1 (@lem5920866 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5925548 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1492 A B x'''' f s.
Proof. exact (fun h0 : term1380 A B x'''' f s => @lem5925547 A B C x''''' y x'''' op s g f h1). Qed.
Lemma lem5925550 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925551 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1492 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (@lem5925550 (term1379 A B x'''' f s)). Qed.
Lemma lem5925552 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1379 A B x'''' f s.
Proof. exact (EQ_MP (@lem5925551 A B x'''' f s) (@lem5925548 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5925558 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5925559 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1435 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912).
Proof. exact (@lem5925558 (term1271 A B x'' _73911 _73913 _73912) (term1283 A B _73911 _73913 _73912)). Qed.
Lemma lem5925565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5925566 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1494 A B x'' _73911 _73913 _73912) = (term1495 A B x'' _73911 _73913 _73912).
Proof. exact (MK_COMB (@lem5925565) (@lem5925559 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925572 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1493 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912).
Proof. exact (eq_refl (term1493 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925573 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : ((term1435 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912)) = ((term1493 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912)).
Proof. exact (MK_COMB (@lem5925566 A B x'' _73911 _73913 _73912) (@lem5925572 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925575 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5925576 (x : Prop) : (x = x) = True.
Proof. exact (@lem5925575 Prop x). Qed.
Lemma lem5925577 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : ((term1493 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912)) = True.
Proof. exact (@lem5925576 (term1493 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925578 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : ((term1435 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912)) = True.
Proof. exact (TRANS (@lem5925573 A B x'' _73911 _73913 _73912) (@lem5925577 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925579 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : True = ((term1435 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912)).
Proof. exact (SYM (@lem5925578 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925580 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1435 A B x'' _73911 _73913 _73912) = (term1493 A B x'' _73911 _73913 _73912).
Proof. exact (EQ_MP (@lem5925579 A B x'' _73911 _73913 _73912) (@lem0)). Qed.
Lemma lem5925581 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1493 A B x'' _73911 _73913 _73912.
Proof. exact (EQ_MP (@lem5925580 A B x'' _73911 _73913 _73912) (@lem5923433 A B _73911 _73913 _73912 x'' h1)). Qed.
Lemma lem5925583 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5925584 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1493 A B x'' _73911 _73913 _73912) = (term1496 A B x'' _73911 _73913 _73912).
Proof. exact (@lem5925583 (term1283 A B _73911 _73913 _73912) (term1271 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925586 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5925587 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1497 A B _73911 _73913 _73912) = (term1282 A B _73911 _73913 _73912).
Proof. exact (@lem5925586 (term1282 A B _73911 _73913 _73912)). Qed.
Lemma lem5925588 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5925589 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1498 A B _73911 _73913 _73912) = (term1499 A B _73911 _73913 _73912).
Proof. exact (MK_COMB (@lem5925588) (@lem5925587 A B _73911 _73913 _73912)). Qed.
Lemma lem5925590 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1271 A B x'' _73911 _73913 _73912) = (term1271 A B x'' _73911 _73913 _73912).
Proof. exact (eq_refl (term1271 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925591 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1496 A B x'' _73911 _73913 _73912) = (term1500 A B x'' _73911 _73913 _73912).
Proof. exact (MK_COMB (@lem5925589 A B _73911 _73913 _73912) (@lem5925590 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925592 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1493 A B x'' _73911 _73913 _73912) = (term1500 A B x'' _73911 _73913 _73912).
Proof. exact (TRANS (@lem5925584 A B x'' _73911 _73913 _73912) (@lem5925591 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925595 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1500 A B x'' _73911 _73913 _73912.
Proof. exact (EQ_MP (@lem5925592 A B x'' _73911 _73913 _73912) (@lem5925581 A B _73911 _73913 _73912 x'' h1)). Qed.
Lemma lem5925596 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1500 A B x'' _73911 _73913 _73912.
Proof. exact (@lem5925595 A B _73911 _73913 _73912 x'' h1). Qed.
Lemma lem5925597 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1501 A B x'' x'''' f s.
Proof. exact (@lem5925596 A B (@I (A -> B) f x'''') f s x'' h1). Qed.
Lemma lem5925600 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1502 A B x'' x'''' f s.
Proof. exact (@lem5925597 A B x'''' f s x'' h1 (@lem5925552 A B C x''''' y x'''' op s g f h2)). Qed.
Lemma lem5925601 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1503 A B x'' x'''' f s.
Proof. exact (fun h0 : term1504 A B x'' x'''' f s => @lem5925600 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5925603 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925604 {A B : Type'} (x'' : type1448 A B) (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1503 A B x'' x'''' f s) = (term1502 A B x'' x'''' f s).
Proof. exact (@lem5925603 (term1502 A B x'' x'''' f s)). Qed.
Lemma lem5925605 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1502 A B x'' x'''' f s.
Proof. exact (EQ_MP (@lem5925604 A B x'' x'''' f s) (@lem5925601 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5925607 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem5925608 {A : Type'} (x : A) : x = x.
Proof. exact (@lem5925607 A x). Qed.
Lemma lem5925609 {A : Type'} (x'''' : A) : x'''' = x''''.
Proof. exact (@lem5925608 A x''''). Qed.
Lemma lem5925610 {A : Type'} (x'''' : A) : term1505 A x''''.
Proof. exact (fun h0 : term1506 A x'''' => @lem5925609 A x''''). Qed.
Lemma lem5925612 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925613 {A : Type'} (x'''' : A) : (term1505 A x'''') = (x'''' = x'''').
Proof. exact (@lem5925612 (x'''' = x'''')). Qed.
Lemma lem5925614 {A : Type'} (x'''' : A) : x'''' = x''''.
Proof. exact (EQ_MP (@lem5925613 A x'''') (@lem5925610 A x'''')). Qed.
Lemma lem5925616 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1379 A B x'''' f s.
Proof. exact (proj1 (@lem5920866 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5925617 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1492 A B x'''' f s.
Proof. exact (fun h0 : term1380 A B x'''' f s => @lem5925616 A B C x''''' y x'''' op s g f h1). Qed.
Lemma lem5925619 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925620 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1492 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (@lem5925619 (term1379 A B x'''' f s)). Qed.
Lemma lem5925621 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1379 A B x'''' f s.
Proof. exact (EQ_MP (@lem5925620 A B x'''' f s) (@lem5925617 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5925627 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5925628 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1434 A B x'' _73911 _73912 _73913) = (term1507 A B x'' _73911 _73913 _73912).
Proof. exact (@lem5925627 (_73911 = (term1274 A B x'' _73911 _73912 _73913)) (term1283 A B _73911 _73913 _73912)). Qed.
Lemma lem5925636 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5925637 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1508 A B x'' _73911 _73912 _73913) = (term1509 A B x'' _73911 _73913 _73912).
Proof. exact (MK_COMB (@lem5925636) (@lem5925628 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925645 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1507 A B x'' _73911 _73913 _73912) = (term1507 A B x'' _73911 _73913 _73912).
Proof. exact (eq_refl (term1507 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925646 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : ((term1434 A B x'' _73911 _73912 _73913) = (term1507 A B x'' _73911 _73913 _73912)) = ((term1507 A B x'' _73911 _73913 _73912) = (term1507 A B x'' _73911 _73913 _73912)).
Proof. exact (MK_COMB (@lem5925637 A B x'' _73911 _73913 _73912) (@lem5925645 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925648 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5925649 (x : Prop) : (x = x) = True.
Proof. exact (@lem5925648 Prop x). Qed.
Lemma lem5925650 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : ((term1507 A B x'' _73911 _73913 _73912) = (term1507 A B x'' _73911 _73913 _73912)) = True.
Proof. exact (@lem5925649 (term1507 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925651 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : ((term1434 A B x'' _73911 _73912 _73913) = (term1507 A B x'' _73911 _73913 _73912)) = True.
Proof. exact (TRANS (@lem5925646 A B x'' _73911 _73913 _73912) (@lem5925650 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925652 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : True = ((term1434 A B x'' _73911 _73912 _73913) = (term1507 A B x'' _73911 _73913 _73912)).
Proof. exact (SYM (@lem5925651 A B x'' _73911 _73913 _73912)). Qed.
Lemma lem5925653 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1434 A B x'' _73911 _73912 _73913) = (term1507 A B x'' _73911 _73913 _73912).
Proof. exact (EQ_MP (@lem5925652 A B x'' _73911 _73913 _73912) (@lem0)). Qed.
Lemma lem5925654 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1507 A B x'' _73911 _73913 _73912.
Proof. exact (EQ_MP (@lem5925653 A B x'' _73911 _73913 _73912) (@lem5923427 A B _73911 _73912 _73913 x'' h1)). Qed.
Lemma lem5925656 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5925657 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) : (term1507 A B x'' _73911 _73913 _73912) = (term1510 A B x'' _73911 _73912 _73913).
Proof. exact (@lem5925656 (term1283 A B _73911 _73913 _73912) (_73911 = (term1274 A B x'' _73911 _73912 _73913))). Qed.
Lemma lem5925659 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5925660 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1497 A B _73911 _73913 _73912) = (term1282 A B _73911 _73913 _73912).
Proof. exact (@lem5925659 (term1282 A B _73911 _73913 _73912)). Qed.
Lemma lem5925661 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5925662 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) : (term1498 A B _73911 _73913 _73912) = (term1499 A B _73911 _73913 _73912).
Proof. exact (MK_COMB (@lem5925661) (@lem5925660 A B _73911 _73913 _73912)). Qed.
Lemma lem5925663 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) : (_73911 = (term1274 A B x'' _73911 _73912 _73913)) = (_73911 = (term1274 A B x'' _73911 _73912 _73913)).
Proof. exact (eq_refl (_73911 = (term1274 A B x'' _73911 _73912 _73913))). Qed.
Lemma lem5925664 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) : (term1510 A B x'' _73911 _73912 _73913) = (term1511 A B x'' _73911 _73912 _73913).
Proof. exact (MK_COMB (@lem5925662 A B _73911 _73913 _73912) (@lem5925663 A B x'' _73911 _73912 _73913)). Qed.
Lemma lem5925665 {A B : Type'} (x'' : type1448 A B) (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) : (term1507 A B x'' _73911 _73913 _73912) = (term1511 A B x'' _73911 _73912 _73913).
Proof. exact (TRANS (@lem5925657 A B x'' _73911 _73912 _73913) (@lem5925664 A B x'' _73911 _73912 _73913)). Qed.
Lemma lem5925668 {A B : Type'} (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1511 A B x'' _73911 _73912 _73913.
Proof. exact (EQ_MP (@lem5925665 A B x'' _73911 _73912 _73913) (@lem5925654 A B _73911 _73913 _73912 x'' h1)). Qed.
Lemma lem5925669 {A B : Type'} (_73911 : B) (_73912 : A -> Prop) (_73913 : A -> B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1511 A B x'' _73911 _73912 _73913.
Proof. exact (@lem5925668 A B _73911 _73912 _73913 x'' h1). Qed.
Lemma lem5925670 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1512 A B x'' x'''' s f.
Proof. exact (@lem5925669 A B (@I (A -> B) f x'''') s f x'' h1). Qed.
Lemma lem5925673 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (@I (A -> B) f x'''') = (term1513 A B x'' x'''' s f).
Proof. exact (@lem5925670 A B x'''' s f x'' h1 (@lem5925621 A B C x''''' y x'''' op s g f h2)). Qed.
Lemma lem5925674 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1514 A B x'' x'''' s f.
Proof. exact (fun h0 : term1515 A B x'' x'''' s f => @lem5925673 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5925676 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925677 {A B : Type'} (x'' : type1448 A B) (x'''' : A) (s : A -> Prop) (f : A -> B) : (term1514 A B x'' x'''' s f) = ((@I (A -> B) f x'''') = (term1513 A B x'' x'''' s f)).
Proof. exact (@lem5925676 ((@I (A -> B) f x'''') = (term1513 A B x'' x'''' s f))). Qed.
Lemma lem5925678 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (@I (A -> B) f x'''') = (term1513 A B x'' x'''' s f).
Proof. exact (EQ_MP (@lem5925677 A B x'' x'''' s f) (@lem5925674 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5925680 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem5925681 {B : Type'} (x : B) : x = x.
Proof. exact (@lem5925680 B x). Qed.
Lemma lem5925682 {A B : Type'} (f : A -> B) (x'''' : A) : (@I (A -> B) f x'''') = (@I (A -> B) f x'''').
Proof. exact (@lem5925681 B (@I (A -> B) f x'''')). Qed.
Lemma lem5925683 {A B : Type'} (f : A -> B) (x'''' : A) : term1516 A B f x''''.
Proof. exact (fun h0 : term1517 A B f x'''' => @lem5925682 A B f x''''). Qed.
Lemma lem5925685 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925686 {A B : Type'} (f : A -> B) (x'''' : A) : (term1516 A B f x'''') = ((@I (A -> B) f x'''') = (@I (A -> B) f x'''')).
Proof. exact (@lem5925685 ((@I (A -> B) f x'''') = (@I (A -> B) f x''''))). Qed.
Lemma lem5925687 {A B : Type'} (f : A -> B) (x'''' : A) : (@I (A -> B) f x'''') = (@I (A -> B) f x'''').
Proof. exact (EQ_MP (@lem5925686 A B f x'''') (@lem5925683 A B f x'''')). Qed.
Lemma lem5925705 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5925706 {B : Type'} (y : B) (x : B) (z : B) : (term1518 B x y z) = (term1519 B y x z).
Proof. exact (@lem5925705 (y = z) (term1361 B x z)). Qed.
Lemma lem5925716 {B : Type'} (x : B) (y : B) : (term1520 B x y) = (term1520 B x y).
Proof. exact (eq_refl (term1520 B x y)). Qed.
Lemma lem5925717 {B : Type'} (y : B) (x : B) (z : B) : (term1489 B x y z) = (term1521 B y x z).
Proof. exact (MK_COMB (@lem5925716 B x y) (@lem5925706 B y x z)). Qed.
Lemma lem5925721 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5925722 {B : Type'} (y : B) (x : B) (z : B) : (term1521 B y x z) = (term1522 B y x z).
Proof. exact (@lem5925721 (y = z) (term1361 B x y) (term1361 B x z)). Qed.
Lemma lem5925744 {B : Type'} (y : B) (x : B) (z : B) : (term1489 B x y z) = (term1522 B y x z).
Proof. exact (TRANS (@lem5925717 B y x z) (@lem5925722 B y x z)). Qed.
Lemma lem5925745 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5925746 {B : Type'} (y : B) (x : B) (z : B) : (term1523 B x y z) = (term1524 B y x z).
Proof. exact (MK_COMB (@lem5925745) (@lem5925744 B y x z)). Qed.
Lemma lem5925768 {B : Type'} (y : B) (x : B) (z : B) : (term1522 B y x z) = (term1522 B y x z).
Proof. exact (eq_refl (term1522 B y x z)). Qed.
Lemma lem5925769 {B : Type'} (y : B) (x : B) (z : B) : ((term1489 B x y z) = (term1522 B y x z)) = ((term1522 B y x z) = (term1522 B y x z)).
Proof. exact (MK_COMB (@lem5925746 B y x z) (@lem5925768 B y x z)). Qed.
Lemma lem5925771 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5925772 (x : Prop) : (x = x) = True.
Proof. exact (@lem5925771 Prop x). Qed.
Lemma lem5925773 {B : Type'} (y : B) (x : B) (z : B) : ((term1522 B y x z) = (term1522 B y x z)) = True.
Proof. exact (@lem5925772 (term1522 B y x z)). Qed.
Lemma lem5925774 {B : Type'} (y : B) (x : B) (z : B) : ((term1489 B x y z) = (term1522 B y x z)) = True.
Proof. exact (TRANS (@lem5925769 B y x z) (@lem5925773 B y x z)). Qed.
Lemma lem5925775 {B : Type'} (y : B) (x : B) (z : B) : True = ((term1489 B x y z) = (term1522 B y x z)).
Proof. exact (SYM (@lem5925774 B y x z)). Qed.
Lemma lem5925776 {B : Type'} (y : B) (x : B) (z : B) : (term1489 B x y z) = (term1522 B y x z).
Proof. exact (EQ_MP (@lem5925775 B y x z) (@lem0)). Qed.
Lemma lem5925777 {B : Type'} (y : B) (x : B) (z : B) : term1522 B y x z.
Proof. exact (EQ_MP (@lem5925776 B y x z) (@lem5925456 B x y z)). Qed.
Lemma lem5925779 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5925780 {B : Type'} (x : B) (y : B) (z : B) : (term1522 B y x z) = (term1525 B x y z).
Proof. exact (@lem5925779 (term1526 B y x z) (y = z)). Qed.
Lemma lem5925782 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5925783 {B : Type'} (y : B) (x : B) (z : B) : (term1527 B y x z) = (term1528 B y x z).
Proof. exact (@lem5925782 (term1361 B x y) (term1361 B x z)). Qed.
Lemma lem5925785 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5925786 {B : Type'} (x : B) (y : B) : (term1529 B x y) = (x = y).
Proof. exact (@lem5925785 (x = y)). Qed.
Lemma lem5925787 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5925788 {B : Type'} (x : B) (y : B) : (term1530 B x y) = (term1531 B x y).
Proof. exact (MK_COMB (@lem5925787) (@lem5925786 B x y)). Qed.
Lemma lem5925790 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5925791 {B : Type'} (x : B) (z : B) : (term1529 B x z) = (x = z).
Proof. exact (@lem5925790 (x = z)). Qed.
Lemma lem5925792 {B : Type'} (y : B) (x : B) (z : B) : (term1528 B y x z) = (term1532 B y x z).
Proof. exact (MK_COMB (@lem5925788 B x y) (@lem5925791 B x z)). Qed.
Lemma lem5925793 {B : Type'} (y : B) (x : B) (z : B) : (term1527 B y x z) = (term1532 B y x z).
Proof. exact (TRANS (@lem5925783 B y x z) (@lem5925792 B y x z)). Qed.
Lemma lem5925794 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5925795 {B : Type'} (y : B) (x : B) (z : B) : (term1533 B y x z) = (term1534 B y x z).
Proof. exact (MK_COMB (@lem5925794) (@lem5925793 B y x z)). Qed.
Lemma lem5925796 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem5925797 {B : Type'} (x : B) (y : B) (z : B) : (term1525 B x y z) = (term1535 B x y z).
Proof. exact (MK_COMB (@lem5925795 B y x z) (@lem5925796 B y z)). Qed.
Lemma lem5925798 {B : Type'} (x : B) (y : B) (z : B) : (term1522 B y x z) = (term1535 B x y z).
Proof. exact (TRANS (@lem5925780 B x y z) (@lem5925797 B x y z)). Qed.
Lemma lem5925800 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1536 A B x'' s f x''''.
Proof. exact (conj (@lem5925678 A B C x'' x''''' y x'''' op s g f h1 h2) (@lem5925687 A B f x'''')). Qed.
Lemma lem5925802 {B : Type'} (x : B) (y : B) (z : B) : term1535 B x y z.
Proof. exact (EQ_MP (@lem5925798 B x y z) (@lem5925777 B y x z)). Qed.
Lemma lem5925803 {B : Type'} (x : B) (y : B) (z : B) : term1535 B x y z.
Proof. exact (@lem5925802 B x y z). Qed.
Lemma lem5925804 {A B : Type'} (x'' : type1448 A B) (s : A -> Prop) (f : A -> B) (x'''' : A) : term1537 A B x'' s f x''''.
Proof. exact (@lem5925803 B (@I (A -> B) f x'''') (term1513 A B x'' x'''' s f) (@I (A -> B) f x'''')). Qed.
Lemma lem5925807 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (term1513 A B x'' x'''' s f) = (@I (A -> B) f x'''').
Proof. exact (@lem5925804 A B x'' s f x'''' (@lem5925800 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5925808 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1538 A B x'' s f x''''.
Proof. exact (fun h0 : term1539 A B x'' s f x'''' => @lem5925807 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5925810 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5925811 {A B : Type'} (x'' : type1448 A B) (s : A -> Prop) (f : A -> B) (x'''' : A) : (term1538 A B x'' s f x'''') = ((term1513 A B x'' x'''' s f) = (@I (A -> B) f x'''')).
Proof. exact (@lem5925810 ((term1513 A B x'' x'''' s f) = (@I (A -> B) f x''''))). Qed.
Lemma lem5925812 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (term1513 A B x'' x'''' s f) = (@I (A -> B) f x'''').
Proof. exact (EQ_MP (@lem5925811 A B x'' s f x'''') (@lem5925808 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5925818 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5925819 {A B : Type'} (x'''' : A) (s : A -> Prop) (f : A -> B) (_73928 : A) (_73929 : A) : (term1433 A B s x'''' f _73928 _73929) = (term1540 A B x'''' s f _73928 _73929).
Proof. exact (@lem5925818 (term1361 A _73929 x'''') (term1297 A _73928 s) (term1345 A B f _73928 _73929)). Qed.
Lemma lem5925835 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5925836 {A B : Type'} (f : A -> B) (s : A -> Prop) (_73928 : A) (_73929 : A) : (term1541 A B s f _73928 _73929) = (term1542 A B f s _73928 _73929).
Proof. exact (@lem5925835 (term1342 A B _73928 f _73929) (term1297 A _73928 s) (_73928 = _73929)). Qed.
Lemma lem5925852 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5925853 {A : Type'} (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1543 A s _73928 _73929) = (term1544 A _73929 _73928 s).
Proof. exact (@lem5925852 (_73928 = _73929) (term1297 A _73928 s)). Qed.
Lemma lem5925861 {A B : Type'} (_73928 : A) (f : A -> B) (_73929 : A) : (term1344 A B _73928 f _73929) = (term1344 A B _73928 f _73929).
Proof. exact (eq_refl (term1344 A B _73928 f _73929)). Qed.
Lemma lem5925862 {A B : Type'} (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1542 A B f s _73928 _73929) = (term1545 A B f _73929 _73928 s).
Proof. exact (MK_COMB (@lem5925861 A B _73928 f _73929) (@lem5925853 A _73929 _73928 s)). Qed.
Lemma lem5925866 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5925867 {A B : Type'} (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1545 A B f _73929 _73928 s) = (term1546 A B f _73929 _73928 s).
Proof. exact (@lem5925866 (_73928 = _73929) (term1342 A B _73928 f _73929) (term1297 A _73928 s)). Qed.
Lemma lem5925887 {A B : Type'} (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1542 A B f s _73928 _73929) = (term1546 A B f _73929 _73928 s).
Proof. exact (TRANS (@lem5925862 A B f _73929 _73928 s) (@lem5925867 A B f _73929 _73928 s)). Qed.
Lemma lem5925888 {A B : Type'} (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1541 A B s f _73928 _73929) = (term1546 A B f _73929 _73928 s).
Proof. exact (TRANS (@lem5925836 A B f s _73928 _73929) (@lem5925887 A B f _73929 _73928 s)). Qed.
Lemma lem5925889 {A : Type'} (_73929 : A) (x'''' : A) : (term1520 A _73929 x'''') = (term1520 A _73929 x'''').
Proof. exact (eq_refl (term1520 A _73929 x'''')). Qed.
Lemma lem5925890 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1540 A B x'''' s f _73928 _73929) = (term1547 A B x'''' f _73929 _73928 s).
Proof. exact (MK_COMB (@lem5925889 A _73929 x'''') (@lem5925888 A B f _73929 _73928 s)). Qed.
Lemma lem5925894 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5925895 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1547 A B x'''' f _73929 _73928 s) = (term1548 A B x'''' f _73929 _73928 s).
Proof. exact (@lem5925894 (_73928 = _73929) (term1361 A _73929 x'''') (term1549 A B f _73929 _73928 s)). Qed.
Lemma lem5925927 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1540 A B x'''' s f _73928 _73929) = (term1548 A B x'''' f _73929 _73928 s).
Proof. exact (TRANS (@lem5925890 A B x'''' f _73929 _73928 s) (@lem5925895 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5925928 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1433 A B s x'''' f _73928 _73929) = (term1548 A B x'''' f _73929 _73928 s).
Proof. exact (TRANS (@lem5925819 A B x'''' s f _73928 _73929) (@lem5925927 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5925929 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5925930 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1550 A B s x'''' f _73928 _73929) = (term1551 A B x'''' f _73929 _73928 s).
Proof. exact (MK_COMB (@lem5925929) (@lem5925928 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5925946 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5925947 {A B : Type'} (x'''' : A) (s : A -> Prop) (_73928 : A) (f : A -> B) (_73929 : A) : (term1552 A B s x'''' _73928 f _73929) = (term1553 A B x'''' s _73928 f _73929).
Proof. exact (@lem5925946 (term1361 A _73929 x'''') (term1297 A _73928 s) (term1342 A B _73928 f _73929)). Qed.
Lemma lem5925963 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5925964 {A B : Type'} (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1554 A B s _73928 f _73929) = (term1549 A B f _73929 _73928 s).
Proof. exact (@lem5925963 (term1342 A B _73928 f _73929) (term1297 A _73928 s)). Qed.
Lemma lem5925972 {A : Type'} (_73929 : A) (x'''' : A) : (term1520 A _73929 x'''') = (term1520 A _73929 x'''').
Proof. exact (eq_refl (term1520 A _73929 x'''')). Qed.
Lemma lem5925973 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1553 A B x'''' s _73928 f _73929) = (term1555 A B x'''' f _73929 _73928 s).
Proof. exact (MK_COMB (@lem5925972 A _73929 x'''') (@lem5925964 A B f _73929 _73928 s)). Qed.
Lemma lem5925984 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1552 A B s x'''' _73928 f _73929) = (term1555 A B x'''' f _73929 _73928 s).
Proof. exact (TRANS (@lem5925947 A B x'''' s _73928 f _73929) (@lem5925973 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5925985 {A : Type'} (_73928 : A) (_73929 : A) : (term1450 A _73928 _73929) = (term1450 A _73928 _73929).
Proof. exact (eq_refl (term1450 A _73928 _73929)). Qed.
Lemma lem5925986 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : (term1556 A B s x'''' _73928 f _73929) = (term1548 A B x'''' f _73929 _73928 s).
Proof. exact (MK_COMB (@lem5925985 A _73928 _73929) (@lem5925984 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5925997 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : ((term1433 A B s x'''' f _73928 _73929) = (term1556 A B s x'''' _73928 f _73929)) = ((term1548 A B x'''' f _73929 _73928 s) = (term1548 A B x'''' f _73929 _73928 s)).
Proof. exact (MK_COMB (@lem5925930 A B x'''' f _73929 _73928 s) (@lem5925986 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5925999 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5926000 (x : Prop) : (x = x) = True.
Proof. exact (@lem5925999 Prop x). Qed.
Lemma lem5926001 {A B : Type'} (x'''' : A) (f : A -> B) (_73929 : A) (_73928 : A) (s : A -> Prop) : ((term1548 A B x'''' f _73929 _73928 s) = (term1548 A B x'''' f _73929 _73928 s)) = True.
Proof. exact (@lem5926000 (term1548 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5926002 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : ((term1433 A B s x'''' f _73928 _73929) = (term1556 A B s x'''' _73928 f _73929)) = True.
Proof. exact (TRANS (@lem5925997 A B x'''' f _73929 _73928 s) (@lem5926001 A B x'''' f _73929 _73928 s)). Qed.
Lemma lem5926003 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : True = ((term1433 A B s x'''' f _73928 _73929) = (term1556 A B s x'''' _73928 f _73929)).
Proof. exact (SYM (@lem5926002 A B s x'''' _73928 f _73929)). Qed.
Lemma lem5926004 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1433 A B s x'''' f _73928 _73929) = (term1556 A B s x'''' _73928 f _73929).
Proof. exact (EQ_MP (@lem5926003 A B s x'''' _73928 f _73929) (@lem0)). Qed.
Lemma lem5926005 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1556 A B s x'''' _73928 f _73929.
Proof. exact (EQ_MP (@lem5926004 A B s x'''' _73928 f _73929) (@lem5923397 A B C _73928 _73929 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5926007 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5926008 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (_73928 : A) (_73929 : A) : (term1556 A B s x'''' _73928 f _73929) = (term1557 A B s x'''' f _73928 _73929).
Proof. exact (@lem5926007 (term1552 A B s x'''' _73928 f _73929) (_73928 = _73929)). Qed.
Lemma lem5926010 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5926011 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1558 A B s x'''' _73928 f _73929) = (term1559 A B s x'''' _73928 f _73929).
Proof. exact (@lem5926010 (term1297 A _73928 s) (term1560 A B x'''' _73928 f _73929)). Qed.
Lemma lem5926013 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926014 {A : Type'} (_73928 : A) (s : A -> Prop) : (term1464 A _73928 s) = (term1296 A _73928 s).
Proof. exact (@lem5926013 (term1296 A _73928 s)). Qed.
Lemma lem5926015 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5926016 {A : Type'} (_73928 : A) (s : A -> Prop) : (term1465 A _73928 s) = (term1365 A _73928 s).
Proof. exact (MK_COMB (@lem5926015) (@lem5926014 A _73928 s)). Qed.
Lemma lem5926018 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5926019 {A B : Type'} (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1561 A B x'''' _73928 f _73929) = (term1562 A B x'''' _73928 f _73929).
Proof. exact (@lem5926018 (term1361 A _73929 x'''') (term1342 A B _73928 f _73929)). Qed.
Lemma lem5926021 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926022 {A : Type'} (_73929 : A) (x'''' : A) : (term1529 A _73929 x'''') = (_73929 = x'''').
Proof. exact (@lem5926021 (_73929 = x'''')). Qed.
Lemma lem5926023 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5926024 {A : Type'} (_73929 : A) (x'''' : A) : (term1530 A _73929 x'''') = (term1531 A _73929 x'''').
Proof. exact (MK_COMB (@lem5926023) (@lem5926022 A _73929 x'''')). Qed.
Lemma lem5926026 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926027 {A B : Type'} (_73928 : A) (f : A -> B) (_73929 : A) : (term1468 A B _73928 f _73929) = ((@I (A -> B) f _73928) = (@I (A -> B) f _73929)).
Proof. exact (@lem5926026 ((@I (A -> B) f _73928) = (@I (A -> B) f _73929))). Qed.
Lemma lem5926028 {A B : Type'} (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1562 A B x'''' _73928 f _73929) = (term1563 A B x'''' _73928 f _73929).
Proof. exact (MK_COMB (@lem5926024 A _73929 x'''') (@lem5926027 A B _73928 f _73929)). Qed.
Lemma lem5926029 {A B : Type'} (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1561 A B x'''' _73928 f _73929) = (term1563 A B x'''' _73928 f _73929).
Proof. exact (TRANS (@lem5926019 A B x'''' _73928 f _73929) (@lem5926028 A B x'''' _73928 f _73929)). Qed.
Lemma lem5926030 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1559 A B s x'''' _73928 f _73929) = (term1564 A B s x'''' _73928 f _73929).
Proof. exact (MK_COMB (@lem5926016 A _73928 s) (@lem5926029 A B x'''' _73928 f _73929)). Qed.
Lemma lem5926031 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1558 A B s x'''' _73928 f _73929) = (term1564 A B s x'''' _73928 f _73929).
Proof. exact (TRANS (@lem5926011 A B s x'''' _73928 f _73929) (@lem5926030 A B s x'''' _73928 f _73929)). Qed.
Lemma lem5926032 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5926033 {A B : Type'} (s : A -> Prop) (x'''' : A) (_73928 : A) (f : A -> B) (_73929 : A) : (term1565 A B s x'''' _73928 f _73929) = (term1566 A B s x'''' _73928 f _73929).
Proof. exact (MK_COMB (@lem5926032) (@lem5926031 A B s x'''' _73928 f _73929)). Qed.
Lemma lem5926034 {A : Type'} (_73928 : A) (_73929 : A) : (_73928 = _73929) = (_73928 = _73929).
Proof. exact (eq_refl (_73928 = _73929)). Qed.
Lemma lem5926035 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (_73928 : A) (_73929 : A) : (term1557 A B s x'''' f _73928 _73929) = (term1567 A B s x'''' f _73928 _73929).
Proof. exact (MK_COMB (@lem5926033 A B s x'''' _73928 f _73929) (@lem5926034 A _73928 _73929)). Qed.
Lemma lem5926036 {A B : Type'} (s : A -> Prop) (x'''' : A) (f : A -> B) (_73928 : A) (_73929 : A) : (term1556 A B s x'''' _73928 f _73929) = (term1567 A B s x'''' f _73928 _73929).
Proof. exact (TRANS (@lem5926008 A B s x'''' f _73928 _73929) (@lem5926035 A B s x'''' f _73928 _73929)). Qed.
Lemma lem5926038 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1568 A B x'' s f x''''.
Proof. exact (conj (@lem5925614 A x'''') (@lem5925812 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926039 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1569 A B x'' s f x''''.
Proof. exact (conj (@lem5925605 A B C x'' x''''' y x'''' op s g f h1 h2) (@lem5926038 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926041 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1567 A B s x'''' f _73928 _73929.
Proof. exact (EQ_MP (@lem5926036 A B s x'''' f _73928 _73929) (@lem5926005 A B C _73928 _73929 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5926042 {A B C : Type'} (_73928 : A) (_73929 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1567 A B s x'''' f _73928 _73929.
Proof. exact (@lem5926041 A B C _73928 _73929 x''''' y x'''' op s g f h1). Qed.
Lemma lem5926043 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1570 A B x'' s f x''''.
Proof. exact (@lem5926042 A B C (term1571 A B x'' x'''' s f) x'''' x''''' y x'''' op s g f h1). Qed.
Lemma lem5926046 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (term1571 A B x'' x'''' s f) = x''''.
Proof. exact (@lem5926043 A B C x'' x''''' y x'''' op s g f h2 (@lem5926039 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926047 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1572 A B x'' s f x''''.
Proof. exact (fun h0 : term1573 A B x'' s f x'''' => @lem5926046 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5926049 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926050 {A B : Type'} (x'' : type1448 A B) (s : A -> Prop) (f : A -> B) (x'''' : A) : (term1572 A B x'' s f x'''') = ((term1571 A B x'' x'''' s f) = x'''').
Proof. exact (@lem5926049 ((term1571 A B x'' x'''' s f) = x'''')). Qed.
Lemma lem5926051 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (term1571 A B x'' x'''' s f) = x''''.
Proof. exact (EQ_MP (@lem5926050 A B x'' s f x'''') (@lem5926047 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926053 {A : Type'} (x : type1364 A) : x = x.
Proof. exact (@lem21386 (type1364 A) x). Qed.
Lemma lem5926054 {A : Type'} (x : type1364 A) : x = x.
Proof. exact (@lem5926053 A x). Qed.
Lemma lem5926055 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (@lem5926054 A (@IN A)). Qed.
Lemma lem5926056 {A : Type'} : term1574 A.
Proof. exact (fun h0 : term1575 A => @lem5926055 A). Qed.
Lemma lem5926058 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926059 {A : Type'} : (term1574 A) = ((@IN A) = (@IN A)).
Proof. exact (@lem5926058 ((@IN A) = (@IN A))). Qed.
Lemma lem5926060 {A : Type'} : (@IN A) = (@IN A).
Proof. exact (EQ_MP (@lem5926059 A) (@lem5926056 A)). Qed.
Lemma lem5926078 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5926079 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1486 A _74322 _74323 _74324 _74325) = (term1576 A _74323 _74325 _74322 _74324).
Proof. exact (@lem5926078 ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325)) (term1577 A _74322 _74324)). Qed.
Lemma lem5926089 {A : Type'} (_74323 : A) (_74325 : A) : (term1520 A _74323 _74325) = (term1520 A _74323 _74325).
Proof. exact (eq_refl (term1520 A _74323 _74325)). Qed.
Lemma lem5926090 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1488 A _74322 _74323 _74324 _74325) = (term1578 A _74323 _74325 _74322 _74324).
Proof. exact (MK_COMB (@lem5926089 A _74323 _74325) (@lem5926079 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926094 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5926095 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1578 A _74323 _74325 _74322 _74324) = (term1579 A _74323 _74325 _74322 _74324).
Proof. exact (@lem5926094 ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325)) (term1361 A _74323 _74325) (term1577 A _74322 _74324)). Qed.
Lemma lem5926117 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1488 A _74322 _74323 _74324 _74325) = (term1579 A _74323 _74325 _74322 _74324).
Proof. exact (TRANS (@lem5926090 A _74323 _74325 _74322 _74324) (@lem5926095 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926118 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5926119 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1580 A _74322 _74323 _74324 _74325) = (term1581 A _74323 _74325 _74322 _74324).
Proof. exact (MK_COMB (@lem5926118) (@lem5926117 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926141 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1579 A _74323 _74325 _74322 _74324) = (term1579 A _74323 _74325 _74322 _74324).
Proof. exact (eq_refl (term1579 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926142 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : ((term1488 A _74322 _74323 _74324 _74325) = (term1579 A _74323 _74325 _74322 _74324)) = ((term1579 A _74323 _74325 _74322 _74324) = (term1579 A _74323 _74325 _74322 _74324)).
Proof. exact (MK_COMB (@lem5926119 A _74323 _74325 _74322 _74324) (@lem5926141 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926144 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5926145 (x : Prop) : (x = x) = True.
Proof. exact (@lem5926144 Prop x). Qed.
Lemma lem5926146 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : ((term1579 A _74323 _74325 _74322 _74324) = (term1579 A _74323 _74325 _74322 _74324)) = True.
Proof. exact (@lem5926145 (term1579 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926147 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : ((term1488 A _74322 _74323 _74324 _74325) = (term1579 A _74323 _74325 _74322 _74324)) = True.
Proof. exact (TRANS (@lem5926142 A _74323 _74325 _74322 _74324) (@lem5926146 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926148 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : True = ((term1488 A _74322 _74323 _74324 _74325) = (term1579 A _74323 _74325 _74322 _74324)).
Proof. exact (SYM (@lem5926147 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926149 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1488 A _74322 _74323 _74324 _74325) = (term1579 A _74323 _74325 _74322 _74324).
Proof. exact (EQ_MP (@lem5926148 A _74323 _74325 _74322 _74324) (@lem0)). Qed.
Lemma lem5926150 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : term1579 A _74323 _74325 _74322 _74324.
Proof. exact (EQ_MP (@lem5926149 A _74323 _74325 _74322 _74324) (@lem5925440 A _74322 _74323 _74324 _74325)). Qed.
Lemma lem5926152 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5926153 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : (term1579 A _74323 _74325 _74322 _74324) = (term1582 A _74322 _74323 _74324 _74325).
Proof. exact (@lem5926152 (term1583 A _74323 _74325 _74322 _74324) ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325))). Qed.
Lemma lem5926155 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5926156 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1584 A _74323 _74325 _74322 _74324) = (term1585 A _74323 _74325 _74322 _74324).
Proof. exact (@lem5926155 (term1361 A _74323 _74325) (term1577 A _74322 _74324)). Qed.
Lemma lem5926158 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926159 {A : Type'} (_74323 : A) (_74325 : A) : (term1529 A _74323 _74325) = (_74323 = _74325).
Proof. exact (@lem5926158 (_74323 = _74325)). Qed.
Lemma lem5926160 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5926161 {A : Type'} (_74323 : A) (_74325 : A) : (term1530 A _74323 _74325) = (term1531 A _74323 _74325).
Proof. exact (MK_COMB (@lem5926160) (@lem5926159 A _74323 _74325)). Qed.
Lemma lem5926163 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926164 {A : Type'} (_74322 : type1364 A) (_74324 : type1364 A) : (term1586 A _74322 _74324) = (_74322 = _74324).
Proof. exact (@lem5926163 (_74322 = _74324)). Qed.
Lemma lem5926165 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1585 A _74323 _74325 _74322 _74324) = (term1587 A _74323 _74325 _74322 _74324).
Proof. exact (MK_COMB (@lem5926161 A _74323 _74325) (@lem5926164 A _74322 _74324)). Qed.
Lemma lem5926166 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1584 A _74323 _74325 _74322 _74324) = (term1587 A _74323 _74325 _74322 _74324).
Proof. exact (TRANS (@lem5926156 A _74323 _74325 _74322 _74324) (@lem5926165 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926167 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5926168 {A : Type'} (_74323 : A) (_74325 : A) (_74322 : type1364 A) (_74324 : type1364 A) : (term1588 A _74323 _74325 _74322 _74324) = (term1589 A _74323 _74325 _74322 _74324).
Proof. exact (MK_COMB (@lem5926167) (@lem5926166 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926169 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325)) = ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325)).
Proof. exact (eq_refl ((@I (A -> (A -> Prop) -> Prop) _74322 _74323) = (@I (A -> (A -> Prop) -> Prop) _74324 _74325))). Qed.
Lemma lem5926170 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : (term1582 A _74322 _74323 _74324 _74325) = (term1590 A _74322 _74323 _74324 _74325).
Proof. exact (MK_COMB (@lem5926168 A _74323 _74325 _74322 _74324) (@lem5926169 A _74322 _74323 _74324 _74325)). Qed.
Lemma lem5926171 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : (term1579 A _74323 _74325 _74322 _74324) = (term1590 A _74322 _74323 _74324 _74325).
Proof. exact (TRANS (@lem5926153 A _74322 _74323 _74324 _74325) (@lem5926170 A _74322 _74323 _74324 _74325)). Qed.
Lemma lem5926173 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1591 A B x'' s f x''''.
Proof. exact (conj (@lem5926051 A B C x'' x''''' y x'''' op s g f h1 h2) (@lem5926060 A)). Qed.
Lemma lem5926175 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : term1590 A _74322 _74323 _74324 _74325.
Proof. exact (EQ_MP (@lem5926171 A _74322 _74323 _74324 _74325) (@lem5926150 A _74323 _74325 _74322 _74324)). Qed.
Lemma lem5926176 {A : Type'} (_74322 : type1364 A) (_74323 : A) (_74324 : type1364 A) (_74325 : A) : term1590 A _74322 _74323 _74324 _74325.
Proof. exact (@lem5926175 A _74322 _74323 _74324 _74325). Qed.
Lemma lem5926177 {A B : Type'} (x'' : type1448 A B) (s : A -> Prop) (f : A -> B) (x'''' : A) : term1592 A B x'' s f x''''.
Proof. exact (@lem5926176 A (@IN A) (term1571 A B x'' x'''' s f) (@IN A) x''''). Qed.
Lemma lem5926180 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (term1593 A B x'' x'''' s f) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''').
Proof. exact (@lem5926177 A B x'' s f x'''' (@lem5926173 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926181 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1594 A B x'' s f x''''.
Proof. exact (fun h0 : term1595 A B x'' s f x'''' => @lem5926180 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5926183 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926184 {A B : Type'} (x'' : type1448 A B) (s : A -> Prop) (f : A -> B) (x'''' : A) : (term1594 A B x'' s f x'''') = ((term1593 A B x'' x'''' s f) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''')).
Proof. exact (@lem5926183 ((term1593 A B x'' x'''' s f) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x''''))). Qed.
Lemma lem5926185 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : (term1593 A B x'' x'''' s f) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''').
Proof. exact (EQ_MP (@lem5926184 A B x'' s f x'''') (@lem5926181 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926187 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1379 A B x'''' f s.
Proof. exact (proj1 (@lem5920866 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5926188 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1492 A B x'''' f s.
Proof. exact (fun h0 : term1380 A B x'''' f s => @lem5926187 A B C x''''' y x'''' op s g f h1). Qed.
Lemma lem5926190 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926191 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1492 A B x'''' f s) = (term1379 A B x'''' f s).
Proof. exact (@lem5926190 (term1379 A B x'''' f s)). Qed.
Lemma lem5926192 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1379 A B x'''' f s.
Proof. exact (EQ_MP (@lem5926191 A B x'''' f s) (@lem5926188 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5926194 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1500 A B x'' _73911 _73913 _73912.
Proof. exact (EQ_MP (@lem5925592 A B x'' _73911 _73913 _73912) (@lem5925581 A B _73911 _73913 _73912 x'' h1)). Qed.
Lemma lem5926195 {A B : Type'} (_73911 : B) (_73913 : A -> B) (_73912 : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1500 A B x'' _73911 _73913 _73912.
Proof. exact (@lem5926194 A B _73911 _73913 _73912 x'' h1). Qed.
Lemma lem5926196 {A B : Type'} (x'''' : A) (f : A -> B) (s : A -> Prop) (x'' : type1448 A B) (h1 : term1258 A B x'') : term1501 A B x'' x'''' f s.
Proof. exact (@lem5926195 A B (@I (A -> B) f x'''') f s x'' h1). Qed.
Lemma lem5926199 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1502 A B x'' x'''' f s.
Proof. exact (@lem5926196 A B x'''' f s x'' h1 (@lem5926192 A B C x''''' y x'''' op s g f h2)). Qed.
Lemma lem5926200 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1503 A B x'' x'''' f s.
Proof. exact (fun h0 : term1504 A B x'' x'''' f s => @lem5926199 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5926202 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926203 {A B : Type'} (x'' : type1448 A B) (x'''' : A) (f : A -> B) (s : A -> Prop) : (term1503 A B x'' x'''' f s) = (term1502 A B x'' x'''' f s).
Proof. exact (@lem5926202 (term1502 A B x'' x'''' f s)). Qed.
Lemma lem5926204 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1502 A B x'' x'''' f s.
Proof. exact (EQ_MP (@lem5926203 A B x'' x'''' f s) (@lem5926200 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926222 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5926223 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1482 A _74168 _74169 _74166 _74167) = (term1596 A _74169 _74168 _74166 _74167).
Proof. exact (@lem5926222 (@I ((A -> Prop) -> Prop) _74168 _74169) (term1597 A _74166 _74168) (term1598 A _74166 _74167)). Qed.
Lemma lem5926241 {A : Type'} (_74167 : A -> Prop) (_74169 : A -> Prop) : (term1599 A _74167 _74169) = (term1599 A _74167 _74169).
Proof. exact (eq_refl (term1599 A _74167 _74169)). Qed.
Lemma lem5926242 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1484 A _74168 _74169 _74166 _74167) = (term1600 A _74169 _74168 _74166 _74167).
Proof. exact (MK_COMB (@lem5926241 A _74167 _74169) (@lem5926223 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926246 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5926247 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1600 A _74169 _74168 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167).
Proof. exact (@lem5926246 (@I ((A -> Prop) -> Prop) _74168 _74169) (term1602 A _74167 _74169) (term1603 A _74168 _74166 _74167)). Qed.
Lemma lem5926277 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1484 A _74168 _74169 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167).
Proof. exact (TRANS (@lem5926242 A _74169 _74168 _74166 _74167) (@lem5926247 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926278 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5926279 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1604 A _74168 _74169 _74166 _74167) = (term1605 A _74169 _74168 _74166 _74167).
Proof. exact (MK_COMB (@lem5926278) (@lem5926277 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926309 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1601 A _74169 _74168 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167).
Proof. exact (eq_refl (term1601 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926310 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : ((term1484 A _74168 _74169 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167)) = ((term1601 A _74169 _74168 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167)).
Proof. exact (MK_COMB (@lem5926279 A _74169 _74168 _74166 _74167) (@lem5926309 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926312 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5926313 (x : Prop) : (x = x) = True.
Proof. exact (@lem5926312 Prop x). Qed.
Lemma lem5926314 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : ((term1601 A _74169 _74168 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167)) = True.
Proof. exact (@lem5926313 (term1601 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926315 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : ((term1484 A _74168 _74169 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167)) = True.
Proof. exact (TRANS (@lem5926310 A _74169 _74168 _74166 _74167) (@lem5926314 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926316 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : True = ((term1484 A _74168 _74169 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167)).
Proof. exact (SYM (@lem5926315 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926317 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1484 A _74168 _74169 _74166 _74167) = (term1601 A _74169 _74168 _74166 _74167).
Proof. exact (EQ_MP (@lem5926316 A _74169 _74168 _74166 _74167) (@lem0)). Qed.
Lemma lem5926318 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : term1601 A _74169 _74168 _74166 _74167.
Proof. exact (EQ_MP (@lem5926317 A _74169 _74168 _74166 _74167) (@lem5924851 A _74168 _74169 _74166 _74167)). Qed.
Lemma lem5926320 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5926321 {A : Type'} (_74166 : type686 A) (_74167 : A -> Prop) (_74168 : type686 A) (_74169 : A -> Prop) : (term1601 A _74169 _74168 _74166 _74167) = (term1606 A _74166 _74167 _74168 _74169).
Proof. exact (@lem5926320 (term1607 A _74169 _74168 _74166 _74167) (@I ((A -> Prop) -> Prop) _74168 _74169)). Qed.
Lemma lem5926323 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5926324 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1608 A _74169 _74168 _74166 _74167) = (term1609 A _74169 _74168 _74166 _74167).
Proof. exact (@lem5926323 (term1602 A _74167 _74169) (term1603 A _74168 _74166 _74167)). Qed.
Lemma lem5926326 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926327 {A : Type'} (_74167 : A -> Prop) (_74169 : A -> Prop) : (term1610 A _74167 _74169) = (_74167 = _74169).
Proof. exact (@lem5926326 (_74167 = _74169)). Qed.
Lemma lem5926328 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5926329 {A : Type'} (_74167 : A -> Prop) (_74169 : A -> Prop) : (term1611 A _74167 _74169) = (term1612 A _74167 _74169).
Proof. exact (MK_COMB (@lem5926328) (@lem5926327 A _74167 _74169)). Qed.
Lemma lem5926331 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5926332 {A : Type'} (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1613 A _74168 _74166 _74167) = (term1614 A _74168 _74166 _74167).
Proof. exact (@lem5926331 (term1597 A _74166 _74168) (term1598 A _74166 _74167)). Qed.
Lemma lem5926334 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926335 {A : Type'} (_74166 : type686 A) (_74168 : type686 A) : (term1615 A _74166 _74168) = (_74166 = _74168).
Proof. exact (@lem5926334 (_74166 = _74168)). Qed.
Lemma lem5926336 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5926337 {A : Type'} (_74166 : type686 A) (_74168 : type686 A) : (term1616 A _74166 _74168) = (term1617 A _74166 _74168).
Proof. exact (MK_COMB (@lem5926336) (@lem5926335 A _74166 _74168)). Qed.
Lemma lem5926339 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5926340 {A : Type'} (_74166 : type686 A) (_74167 : A -> Prop) : (term1618 A _74166 _74167) = (@I ((A -> Prop) -> Prop) _74166 _74167).
Proof. exact (@lem5926339 (@I ((A -> Prop) -> Prop) _74166 _74167)). Qed.
Lemma lem5926341 {A : Type'} (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1614 A _74168 _74166 _74167) = (term1619 A _74168 _74166 _74167).
Proof. exact (MK_COMB (@lem5926337 A _74166 _74168) (@lem5926340 A _74166 _74167)). Qed.
Lemma lem5926342 {A : Type'} (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1613 A _74168 _74166 _74167) = (term1619 A _74168 _74166 _74167).
Proof. exact (TRANS (@lem5926332 A _74168 _74166 _74167) (@lem5926341 A _74168 _74166 _74167)). Qed.
Lemma lem5926343 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1609 A _74169 _74168 _74166 _74167) = (term1620 A _74169 _74168 _74166 _74167).
Proof. exact (MK_COMB (@lem5926329 A _74167 _74169) (@lem5926342 A _74168 _74166 _74167)). Qed.
Lemma lem5926344 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1608 A _74169 _74168 _74166 _74167) = (term1620 A _74169 _74168 _74166 _74167).
Proof. exact (TRANS (@lem5926324 A _74169 _74168 _74166 _74167) (@lem5926343 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926345 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5926346 {A : Type'} (_74169 : A -> Prop) (_74168 : type686 A) (_74166 : type686 A) (_74167 : A -> Prop) : (term1621 A _74169 _74168 _74166 _74167) = (term1622 A _74169 _74168 _74166 _74167).
Proof. exact (MK_COMB (@lem5926345) (@lem5926344 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926347 {A : Type'} (_74168 : type686 A) (_74169 : A -> Prop) : (@I ((A -> Prop) -> Prop) _74168 _74169) = (@I ((A -> Prop) -> Prop) _74168 _74169).
Proof. exact (eq_refl (@I ((A -> Prop) -> Prop) _74168 _74169)). Qed.
Lemma lem5926348 {A : Type'} (_74166 : type686 A) (_74167 : A -> Prop) (_74168 : type686 A) (_74169 : A -> Prop) : (term1606 A _74166 _74167 _74168 _74169) = (term1623 A _74166 _74167 _74168 _74169).
Proof. exact (MK_COMB (@lem5926346 A _74169 _74168 _74166 _74167) (@lem5926347 A _74168 _74169)). Qed.
Lemma lem5926349 {A : Type'} (_74166 : type686 A) (_74167 : A -> Prop) (_74168 : type686 A) (_74169 : A -> Prop) : (term1601 A _74169 _74168 _74166 _74167) = (term1623 A _74166 _74167 _74168 _74169).
Proof. exact (TRANS (@lem5926321 A _74166 _74167 _74168 _74169) (@lem5926348 A _74166 _74167 _74168 _74169)). Qed.
Lemma lem5926351 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1624 A B x'' x'''' f s.
Proof. exact (conj (@lem5926185 A B C x'' x''''' y x'''' op s g f h1 h2) (@lem5926204 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926352 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1625 A B x'' x'''' f s.
Proof. exact (conj (@lem5925545 A s) (@lem5926351 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926354 {A : Type'} (_74166 : type686 A) (_74167 : A -> Prop) (_74168 : type686 A) (_74169 : A -> Prop) : term1623 A _74166 _74167 _74168 _74169.
Proof. exact (EQ_MP (@lem5926349 A _74166 _74167 _74168 _74169) (@lem5926318 A _74169 _74168 _74166 _74167)). Qed.
Lemma lem5926355 {A : Type'} (_74166 : type686 A) (_74167 : A -> Prop) (_74168 : type686 A) (_74169 : A -> Prop) : term1623 A _74166 _74167 _74168 _74169.
Proof. exact (@lem5926354 A _74166 _74167 _74168 _74169). Qed.
Lemma lem5926356 {A B : Type'} (x'' : type1448 A B) (f : A -> B) (x'''' : A) (s : A -> Prop) : term1626 A B x'' f x'''' s.
Proof. exact (@lem5926355 A (term1593 A B x'' x'''' s f) s (@I (A -> (A -> Prop) -> Prop) (@IN A) x'''') s). Qed.
Lemma lem5926359 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1296 A x'''' s.
Proof. exact (@lem5926356 A B x'' f x'''' s (@lem5926352 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926360 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1436 A x'''' s.
Proof. exact (fun h0 : term1297 A x'''' s => @lem5926359 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5926362 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926363 {A : Type'} (x'''' : A) (s : A -> Prop) : (term1436 A x'''' s) = (term1296 A x'''' s).
Proof. exact (@lem5926362 (term1296 A x'''' s)). Qed.
Lemma lem5926364 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1296 A x'''' s.
Proof. exact (EQ_MP (@lem5926363 A x'''' s) (@lem5926360 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926367 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5926369 {A : Type'} (x'''' : A) (s : A -> Prop) : (term1297 A x'''' s) = (term1627 A x'''' s).
Proof. exact (@lem5926367 (term1296 A x'''' s)). Qed.
Lemma lem5926372 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1387 A B C x''''' y x'''' op s g f) : term1627 A x'''' s.
Proof. exact (EQ_MP (@lem5926369 A x'''' s) (@lem5923337 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5926375 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : False.
Proof. exact (@lem5926372 A B C x''''' y x'''' op s g f h2 (@lem5926364 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5926376 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : term1476.
Proof. exact (fun h0 : ~ False => @lem5926375 A B C x'' x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5926378 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5926379 : term1476 = False.
Proof. exact (@lem5926378 False). Qed.
Lemma lem5926380 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : False.
Proof. exact (EQ_MP (@lem5926379) (@lem5926376 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5927124 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A x''''' s.
Proof. exact (proj1 (@lem5920896 A B s f x''''' y h1)). Qed.
Lemma lem5927125 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1436 A x''''' s.
Proof. exact (fun h0 : term1297 A x''''' s => @lem5927124 A B s f x''''' y h1). Qed.
Lemma lem5927127 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5927128 {A : Type'} (x''''' : A) (s : A -> Prop) : (term1436 A x''''' s) = (term1296 A x''''' s).
Proof. exact (@lem5927127 (term1296 A x''''' s)). Qed.
Lemma lem5927129 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A x''''' s.
Proof. exact (EQ_MP (@lem5927128 A x''''' s) (@lem5927125 A B s f x''''' y h1)). Qed.
Lemma lem5927131 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A y s.
Proof. exact (proj1 (@lem5920898 A B s f x''''' y h1)). Qed.
Lemma lem5927132 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1436 A y s.
Proof. exact (fun h0 : term1297 A y s => @lem5927131 A B s f x''''' y h1). Qed.
Lemma lem5927134 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5927135 {A : Type'} (y : A) (s : A -> Prop) : (term1436 A y s) = (term1296 A y s).
Proof. exact (@lem5927134 (term1296 A y s)). Qed.
Lemma lem5927136 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1296 A y s.
Proof. exact (EQ_MP (@lem5927135 A y s) (@lem5927132 A B s f x''''' y h1)). Qed.
Lemma lem5927138 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : (@I (A -> B) f x''''') = (@I (A -> B) f y).
Proof. exact (proj1 (@lem5920900 A B s f x''''' y h1)). Qed.
Lemma lem5927139 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1438 A B x''''' f y.
Proof. exact (fun h0 : term1342 A B x''''' f y => @lem5927138 A B s f x''''' y h1). Qed.
Lemma lem5927141 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5927142 {A B : Type'} (x''''' : A) (f : A -> B) (y : A) : (term1438 A B x''''' f y) = ((@I (A -> B) f x''''') = (@I (A -> B) f y)).
Proof. exact (@lem5927141 ((@I (A -> B) f x''''') = (@I (A -> B) f y))). Qed.
Lemma lem5927143 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : (@I (A -> B) f x''''') = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem5927142 A B x''''' f y) (@lem5927139 A B s f x''''' y h1)). Qed.
Lemma lem5927159 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5927160 {A B : Type'} (f : A -> B) (s : A -> Prop) (_73958 : A) (_73959 : A) : (term1408 A B s f _73958 _73959) = (term1439 A B f s _73958 _73959).
Proof. exact (@lem5927159 (term1342 A B _73958 f _73959) (term1297 A _73959 s) (_73958 = _73959)). Qed.
Lemma lem5927176 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5927177 {A : Type'} (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1440 A s _73958 _73959) = (term1441 A _73958 _73959 s).
Proof. exact (@lem5927176 (_73958 = _73959) (term1297 A _73959 s)). Qed.
Lemma lem5927185 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) : (term1344 A B _73958 f _73959) = (term1344 A B _73958 f _73959).
Proof. exact (eq_refl (term1344 A B _73958 f _73959)). Qed.
Lemma lem5927186 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1439 A B f s _73958 _73959) = (term1442 A B f _73958 _73959 s).
Proof. exact (MK_COMB (@lem5927185 A B _73958 f _73959) (@lem5927177 A _73958 _73959 s)). Qed.
Lemma lem5927190 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5927191 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1442 A B f _73958 _73959 s) = (term1443 A B _73958 f _73959 s).
Proof. exact (@lem5927190 (_73958 = _73959) (term1342 A B _73958 f _73959) (term1297 A _73959 s)). Qed.
Lemma lem5927211 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1439 A B f s _73958 _73959) = (term1443 A B _73958 f _73959 s).
Proof. exact (TRANS (@lem5927186 A B f _73958 _73959 s) (@lem5927191 A B _73958 f _73959 s)). Qed.
Lemma lem5927212 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1408 A B s f _73958 _73959) = (term1443 A B _73958 f _73959 s).
Proof. exact (TRANS (@lem5927160 A B f s _73958 _73959) (@lem5927211 A B _73958 f _73959 s)). Qed.
Lemma lem5927213 {A : Type'} (_73958 : A) (s : A -> Prop) : (term1444 A _73958 s) = (term1444 A _73958 s).
Proof. exact (eq_refl (term1444 A _73958 s)). Qed.
Lemma lem5927214 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1432 A B s f _73958 _73959) = (term1445 A B _73958 f _73959 s).
Proof. exact (MK_COMB (@lem5927213 A _73958 s) (@lem5927212 A B _73958 f _73959 s)). Qed.
Lemma lem5927218 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5927219 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1445 A B _73958 f _73959 s) = (term1446 A B _73958 f _73959 s).
Proof. exact (@lem5927218 (_73958 = _73959) (term1297 A _73958 s) (term1447 A B _73958 f _73959 s)). Qed.
Lemma lem5927235 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5927236 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1448 A B _73958 f _73959 s) = (term1449 A B f _73958 _73959 s).
Proof. exact (@lem5927235 (term1342 A B _73958 f _73959) (term1297 A _73958 s) (term1297 A _73959 s)). Qed.
Lemma lem5927254 {A : Type'} (_73958 : A) (_73959 : A) : (term1450 A _73958 _73959) = (term1450 A _73958 _73959).
Proof. exact (eq_refl (term1450 A _73958 _73959)). Qed.
Lemma lem5927255 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1446 A B _73958 f _73959 s) = (term1451 A B f _73958 _73959 s).
Proof. exact (MK_COMB (@lem5927254 A _73958 _73959) (@lem5927236 A B f _73958 _73959 s)). Qed.
Lemma lem5927266 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1445 A B _73958 f _73959 s) = (term1451 A B f _73958 _73959 s).
Proof. exact (TRANS (@lem5927219 A B _73958 f _73959 s) (@lem5927255 A B f _73958 _73959 s)). Qed.
Lemma lem5927267 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1432 A B s f _73958 _73959) = (term1451 A B f _73958 _73959 s).
Proof. exact (TRANS (@lem5927214 A B _73958 f _73959 s) (@lem5927266 A B f _73958 _73959 s)). Qed.
Lemma lem5927268 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5927269 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1452 A B s f _73958 _73959) = (term1453 A B f _73958 _73959 s).
Proof. exact (MK_COMB (@lem5927268) (@lem5927267 A B f _73958 _73959 s)). Qed.
Lemma lem5927295 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5927296 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1454 A B s _73958 f _73959) = (term1447 A B _73958 f _73959 s).
Proof. exact (@lem5927295 (term1342 A B _73958 f _73959) (term1297 A _73959 s)). Qed.
Lemma lem5927304 {A : Type'} (_73958 : A) (s : A -> Prop) : (term1444 A _73958 s) = (term1444 A _73958 s).
Proof. exact (eq_refl (term1444 A _73958 s)). Qed.
Lemma lem5927305 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) (s : A -> Prop) : (term1455 A B s _73958 f _73959) = (term1448 A B _73958 f _73959 s).
Proof. exact (MK_COMB (@lem5927304 A _73958 s) (@lem5927296 A B _73958 f _73959 s)). Qed.
Lemma lem5927309 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5927310 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1448 A B _73958 f _73959 s) = (term1449 A B f _73958 _73959 s).
Proof. exact (@lem5927309 (term1342 A B _73958 f _73959) (term1297 A _73958 s) (term1297 A _73959 s)). Qed.
Lemma lem5927328 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1455 A B s _73958 f _73959) = (term1449 A B f _73958 _73959 s).
Proof. exact (TRANS (@lem5927305 A B _73958 f _73959 s) (@lem5927310 A B f _73958 _73959 s)). Qed.
Lemma lem5927329 {A : Type'} (_73958 : A) (_73959 : A) : (term1450 A _73958 _73959) = (term1450 A _73958 _73959).
Proof. exact (eq_refl (term1450 A _73958 _73959)). Qed.
Lemma lem5927330 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : (term1456 A B s _73958 f _73959) = (term1451 A B f _73958 _73959 s).
Proof. exact (MK_COMB (@lem5927329 A _73958 _73959) (@lem5927328 A B f _73958 _73959 s)). Qed.
Lemma lem5927341 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : ((term1432 A B s f _73958 _73959) = (term1456 A B s _73958 f _73959)) = ((term1451 A B f _73958 _73959 s) = (term1451 A B f _73958 _73959 s)).
Proof. exact (MK_COMB (@lem5927269 A B f _73958 _73959 s) (@lem5927330 A B f _73958 _73959 s)). Qed.
Lemma lem5927343 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5927344 (x : Prop) : (x = x) = True.
Proof. exact (@lem5927343 Prop x). Qed.
Lemma lem5927345 {A B : Type'} (f : A -> B) (_73958 : A) (_73959 : A) (s : A -> Prop) : ((term1451 A B f _73958 _73959 s) = (term1451 A B f _73958 _73959 s)) = True.
Proof. exact (@lem5927344 (term1451 A B f _73958 _73959 s)). Qed.
Lemma lem5927346 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : ((term1432 A B s f _73958 _73959) = (term1456 A B s _73958 f _73959)) = True.
Proof. exact (TRANS (@lem5927341 A B f _73958 _73959 s) (@lem5927345 A B f _73958 _73959 s)). Qed.
Lemma lem5927347 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : True = ((term1432 A B s f _73958 _73959) = (term1456 A B s _73958 f _73959)).
Proof. exact (SYM (@lem5927346 A B s _73958 f _73959)). Qed.
Lemma lem5927348 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1432 A B s f _73958 _73959) = (term1456 A B s _73958 f _73959).
Proof. exact (EQ_MP (@lem5927347 A B s _73958 f _73959) (@lem0)). Qed.
Lemma lem5927349 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1456 A B s _73958 f _73959.
Proof. exact (EQ_MP (@lem5927348 A B s _73958 f _73959) (@lem5923531 A B C _73958 _73959 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5927351 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5927352 {A B : Type'} (s : A -> Prop) (f : A -> B) (_73958 : A) (_73959 : A) : (term1456 A B s _73958 f _73959) = (term1458 A B s f _73958 _73959).
Proof. exact (@lem5927351 (term1455 A B s _73958 f _73959) (_73958 = _73959)). Qed.
Lemma lem5927354 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5927355 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1461 A B s _73958 f _73959) = (term1462 A B s _73958 f _73959).
Proof. exact (@lem5927354 (term1297 A _73958 s) (term1454 A B s _73958 f _73959)). Qed.
Lemma lem5927357 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5927358 {A : Type'} (_73958 : A) (s : A -> Prop) : (term1464 A _73958 s) = (term1296 A _73958 s).
Proof. exact (@lem5927357 (term1296 A _73958 s)). Qed.
Lemma lem5927359 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5927360 {A : Type'} (_73958 : A) (s : A -> Prop) : (term1465 A _73958 s) = (term1365 A _73958 s).
Proof. exact (MK_COMB (@lem5927359) (@lem5927358 A _73958 s)). Qed.
Lemma lem5927362 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5927363 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1466 A B s _73958 f _73959) = (term1467 A B s _73958 f _73959).
Proof. exact (@lem5927362 (term1297 A _73959 s) (term1342 A B _73958 f _73959)). Qed.
Lemma lem5927365 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5927366 {A : Type'} (_73959 : A) (s : A -> Prop) : (term1464 A _73959 s) = (term1296 A _73959 s).
Proof. exact (@lem5927365 (term1296 A _73959 s)). Qed.
Lemma lem5927367 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5927368 {A : Type'} (_73959 : A) (s : A -> Prop) : (term1465 A _73959 s) = (term1365 A _73959 s).
Proof. exact (MK_COMB (@lem5927367) (@lem5927366 A _73959 s)). Qed.
Lemma lem5927370 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5927371 {A B : Type'} (_73958 : A) (f : A -> B) (_73959 : A) : (term1468 A B _73958 f _73959) = ((@I (A -> B) f _73958) = (@I (A -> B) f _73959)).
Proof. exact (@lem5927370 ((@I (A -> B) f _73958) = (@I (A -> B) f _73959))). Qed.
Lemma lem5927372 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1467 A B s _73958 f _73959) = (term1469 A B s _73958 f _73959).
Proof. exact (MK_COMB (@lem5927368 A _73959 s) (@lem5927371 A B _73958 f _73959)). Qed.
Lemma lem5927373 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1466 A B s _73958 f _73959) = (term1469 A B s _73958 f _73959).
Proof. exact (TRANS (@lem5927363 A B s _73958 f _73959) (@lem5927372 A B s _73958 f _73959)). Qed.
Lemma lem5927374 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1462 A B s _73958 f _73959) = (term1470 A B s _73958 f _73959).
Proof. exact (MK_COMB (@lem5927360 A _73958 s) (@lem5927373 A B s _73958 f _73959)). Qed.
Lemma lem5927375 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1461 A B s _73958 f _73959) = (term1470 A B s _73958 f _73959).
Proof. exact (TRANS (@lem5927355 A B s _73958 f _73959) (@lem5927374 A B s _73958 f _73959)). Qed.
Lemma lem5927376 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5927377 {A B : Type'} (s : A -> Prop) (_73958 : A) (f : A -> B) (_73959 : A) : (term1471 A B s _73958 f _73959) = (term1472 A B s _73958 f _73959).
Proof. exact (MK_COMB (@lem5927376) (@lem5927375 A B s _73958 f _73959)). Qed.
Lemma lem5927378 {A : Type'} (_73958 : A) (_73959 : A) : (_73958 = _73959) = (_73958 = _73959).
Proof. exact (eq_refl (_73958 = _73959)). Qed.
Lemma lem5927379 {A B : Type'} (s : A -> Prop) (f : A -> B) (_73958 : A) (_73959 : A) : (term1458 A B s f _73958 _73959) = (term1473 A B s f _73958 _73959).
Proof. exact (MK_COMB (@lem5927377 A B s _73958 f _73959) (@lem5927378 A _73958 _73959)). Qed.
Lemma lem5927380 {A B : Type'} (s : A -> Prop) (f : A -> B) (_73958 : A) (_73959 : A) : (term1456 A B s _73958 f _73959) = (term1473 A B s f _73958 _73959).
Proof. exact (TRANS (@lem5927352 A B s f _73958 _73959) (@lem5927379 A B s f _73958 _73959)). Qed.
Lemma lem5927382 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1469 A B s x''''' f y.
Proof. exact (conj (@lem5927136 A B s f x''''' y h1) (@lem5927143 A B s f x''''' y h1)). Qed.
Lemma lem5927383 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1470 A B s x''''' f y.
Proof. exact (conj (@lem5927129 A B s f x''''' y h1) (@lem5927382 A B s f x''''' y h1)). Qed.
Lemma lem5927385 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1473 A B s f _73958 _73959.
Proof. exact (EQ_MP (@lem5927380 A B s f _73958 _73959) (@lem5927349 A B C _73958 _73959 x''''' y x'''' op s g f h1)). Qed.
Lemma lem5927386 {A B C : Type'} (_73958 : A) (_73959 : A) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1473 A B s f _73958 _73959.
Proof. exact (@lem5927385 A B C _73958 _73959 x''''' y x'''' op s g f h1). Qed.
Lemma lem5927387 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1473 A B s f x''''' y.
Proof. exact (@lem5927386 A B C x''''' y x''''' y x'''' op s g f h1). Qed.
Lemma lem5927390 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : term1367 A B s f x''''' y) : x''''' = y.
Proof. exact (@lem5927387 A B C x''''' y x'''' op s g f h1 (@lem5927383 A B s f x''''' y h2)). Qed.
Lemma lem5927391 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : term1367 A B s f x''''' y) : term1474 A x''''' y.
Proof. exact (fun h0 : term1361 A x''''' y => @lem5927390 A B C x'''' op g s f x''''' y h1 h2). Qed.
Lemma lem5927393 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5927394 {A : Type'} (x''''' : A) (y : A) : (term1474 A x''''' y) = (x''''' = y).
Proof. exact (@lem5927393 (x''''' = y)). Qed.
Lemma lem5927395 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : term1367 A B s f x''''' y) : x''''' = y.
Proof. exact (EQ_MP (@lem5927394 A x''''' y) (@lem5927391 A B C x'''' op g s f x''''' y h1 h2)). Qed.
Lemma lem5927398 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5927400 {A : Type'} (x''''' : A) (y : A) : (term1361 A x''''' y) = (term1475 A x''''' y).
Proof. exact (@lem5927398 (x''''' = y)). Qed.
Lemma lem5927403 {A B : Type'} (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1367 A B s f x''''' y) : term1475 A x''''' y.
Proof. exact (EQ_MP (@lem5927400 A x''''' y) (@lem5923503 A B s f x''''' y h1)). Qed.
Lemma lem5927406 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : term1367 A B s f x''''' y) : False.
Proof. exact (@lem5927403 A B s f x''''' y h2 (@lem5927395 A B C x'''' op g s f x''''' y h1 h2)). Qed.
Lemma lem5927407 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : term1367 A B s f x''''' y) : term1476.
Proof. exact (fun h0 : ~ False => @lem5927406 A B C x'''' op g s f x''''' y h1 h2). Qed.
Lemma lem5927409 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5927410 : term1476 = False.
Proof. exact (@lem5927409 False). Qed.
Lemma lem5927411 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x''''' : A) (y : A) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : term1367 A B s f x''''' y) : False.
Proof. exact (EQ_MP (@lem5927410) (@lem5927407 A B C x'''' op g s f x''''' y h1 h2)). Qed.
Lemma lem5927818 {C : Type'} : (@I (C -> C)) = (@I (C -> C)).
Proof. exact (eq_refl (@I (C -> C))). Qed.
Lemma lem5927819 {C : Type'} (_74598 : C -> C) (_74600 : C -> C) (h1 : _74598 = _74600) : _74598 = _74600.
Proof. exact (h1). Qed.
Lemma lem5927820 {C : Type'} (_74599 : C) (_74601 : C) (h1 : _74599 = _74601) : _74599 = _74601.
Proof. exact (h1). Qed.
Lemma lem5927821 {C : Type'} (_74598 : C -> C) (_74600 : C -> C) (h1 : _74598 = _74600) : (@I (C -> C) _74598) = (@I (C -> C) _74600).
Proof. exact (MK_COMB (@lem5927818 C) (@lem5927819 C _74598 _74600 h1)). Qed.
Lemma lem5927822 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) (h1 : _74599 = _74601) (h2 : _74598 = _74600) : (@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601).
Proof. exact (MK_COMB (@lem5927821 C _74598 _74600 h2) (@lem5927820 C _74599 _74601 h1)). Qed.
Lemma lem5927823 {C : Type'} (_74598 : C -> C) (_74600 : C -> C) (_74599 : C) (_74601 : C) (h1 : _74599 = _74601) : term1628 C _74598 _74599 _74600 _74601.
Proof. exact (fun h0 : _74598 = _74600 => @lem5927822 C _74599 _74601 _74598 _74600 h1 h0). Qed.
Lemma lem5927825 (a : Prop) (b : Prop) : (a -> b) = (term1481 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5927826 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : (term1628 C _74598 _74599 _74600 _74601) = (term1629 C _74598 _74599 _74600 _74601).
Proof. exact (@lem5927825 (_74598 = _74600) ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601))). Qed.
Lemma lem5927827 {C : Type'} (_74598 : C -> C) (_74600 : C -> C) (_74599 : C) (_74601 : C) (h1 : _74599 = _74601) : term1629 C _74598 _74599 _74600 _74601.
Proof. exact (EQ_MP (@lem5927826 C _74598 _74599 _74600 _74601) (@lem5927823 C _74598 _74600 _74599 _74601 h1)). Qed.
Lemma lem5927828 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : term1630 C _74598 _74599 _74600 _74601.
Proof. exact (fun h0 : _74599 = _74601 => @lem5927827 C _74598 _74600 _74599 _74601 h0). Qed.
Lemma lem5927830 (a : Prop) (b : Prop) : (a -> b) = (term1481 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5927831 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : (term1630 C _74598 _74599 _74600 _74601) = (term1631 C _74598 _74599 _74600 _74601).
Proof. exact (@lem5927830 (_74599 = _74601) (term1629 C _74598 _74599 _74600 _74601)). Qed.
Lemma lem5927832 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : term1631 C _74598 _74599 _74600 _74601.
Proof. exact (EQ_MP (@lem5927831 C _74598 _74599 _74600 _74601) (@lem5927828 C _74598 _74599 _74600 _74601)). Qed.
Lemma lem5928155 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1323 A B C op f s g) = (term1333 A B C op s g f).
Proof. exact (h1). Qed.
Lemma lem5928156 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : term1632 A B C op s g f.
Proof. exact (fun h0 : term1633 A B C op s g f => @lem5928155 A B C op s g f h1). Qed.
Lemma lem5928158 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5928159 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1632 A B C op s g f) = ((term1323 A B C op f s g) = (term1333 A B C op s g f)).
Proof. exact (@lem5928158 ((term1323 A B C op f s g) = (term1333 A B C op s g f))). Qed.
Lemma lem5928160 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1323 A B C op f s g) = (term1333 A B C op s g f).
Proof. exact (EQ_MP (@lem5928159 A B C op s g f) (@lem5928156 A B C op s g f h1)). Qed.
Lemma lem5928162 {C : Type'} (x : C -> C) : x = x.
Proof. exact (@lem21386 (C -> C) x). Qed.
Lemma lem5928163 {C : Type'} (x : C -> C) : x = x.
Proof. exact (@lem5928162 C x). Qed.
Lemma lem5928164 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term1326 A B C op g f x'''') = (term1326 A B C op g f x'''').
Proof. exact (@lem5928163 C (term1326 A B C op g f x'''')). Qed.
Lemma lem5928165 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : term1634 A B C op g f x''''.
Proof. exact (fun h0 : term1635 A B C op g f x'''' => @lem5928164 A B C op g f x''''). Qed.
Lemma lem5928167 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5928168 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term1634 A B C op g f x'''') = ((term1326 A B C op g f x'''') = (term1326 A B C op g f x'''')).
Proof. exact (@lem5928167 ((term1326 A B C op g f x'''') = (term1326 A B C op g f x''''))). Qed.
Lemma lem5928169 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'''' : A) : (term1326 A B C op g f x'''') = (term1326 A B C op g f x'''').
Proof. exact (EQ_MP (@lem5928168 A B C op g f x'''') (@lem5928165 A B C op g f x'''')). Qed.
Lemma lem5928187 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5928188 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1629 C _74598 _74599 _74600 _74601) = (term1636 C _74599 _74601 _74598 _74600).
Proof. exact (@lem5928187 ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601)) (term1637 C _74598 _74600)). Qed.
Lemma lem5928198 {C : Type'} (_74599 : C) (_74601 : C) : (term1520 C _74599 _74601) = (term1520 C _74599 _74601).
Proof. exact (eq_refl (term1520 C _74599 _74601)). Qed.
Lemma lem5928199 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1631 C _74598 _74599 _74600 _74601) = (term1638 C _74599 _74601 _74598 _74600).
Proof. exact (MK_COMB (@lem5928198 C _74599 _74601) (@lem5928188 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928203 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5928204 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1638 C _74599 _74601 _74598 _74600) = (term1639 C _74599 _74601 _74598 _74600).
Proof. exact (@lem5928203 ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601)) (term1361 C _74599 _74601) (term1637 C _74598 _74600)). Qed.
Lemma lem5928226 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1631 C _74598 _74599 _74600 _74601) = (term1639 C _74599 _74601 _74598 _74600).
Proof. exact (TRANS (@lem5928199 C _74599 _74601 _74598 _74600) (@lem5928204 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928227 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5928228 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1640 C _74598 _74599 _74600 _74601) = (term1641 C _74599 _74601 _74598 _74600).
Proof. exact (MK_COMB (@lem5928227) (@lem5928226 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928250 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1639 C _74599 _74601 _74598 _74600) = (term1639 C _74599 _74601 _74598 _74600).
Proof. exact (eq_refl (term1639 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928251 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : ((term1631 C _74598 _74599 _74600 _74601) = (term1639 C _74599 _74601 _74598 _74600)) = ((term1639 C _74599 _74601 _74598 _74600) = (term1639 C _74599 _74601 _74598 _74600)).
Proof. exact (MK_COMB (@lem5928228 C _74599 _74601 _74598 _74600) (@lem5928250 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928253 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5928254 (x : Prop) : (x = x) = True.
Proof. exact (@lem5928253 Prop x). Qed.
Lemma lem5928255 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : ((term1639 C _74599 _74601 _74598 _74600) = (term1639 C _74599 _74601 _74598 _74600)) = True.
Proof. exact (@lem5928254 (term1639 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928256 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : ((term1631 C _74598 _74599 _74600 _74601) = (term1639 C _74599 _74601 _74598 _74600)) = True.
Proof. exact (TRANS (@lem5928251 C _74599 _74601 _74598 _74600) (@lem5928255 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928257 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : True = ((term1631 C _74598 _74599 _74600 _74601) = (term1639 C _74599 _74601 _74598 _74600)).
Proof. exact (SYM (@lem5928256 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928258 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1631 C _74598 _74599 _74600 _74601) = (term1639 C _74599 _74601 _74598 _74600).
Proof. exact (EQ_MP (@lem5928257 C _74599 _74601 _74598 _74600) (@lem0)). Qed.
Lemma lem5928259 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : term1639 C _74599 _74601 _74598 _74600.
Proof. exact (EQ_MP (@lem5928258 C _74599 _74601 _74598 _74600) (@lem5927832 C _74598 _74599 _74600 _74601)). Qed.
Lemma lem5928261 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5928262 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : (term1639 C _74599 _74601 _74598 _74600) = (term1642 C _74598 _74599 _74600 _74601).
Proof. exact (@lem5928261 (term1643 C _74599 _74601 _74598 _74600) ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601))). Qed.
Lemma lem5928264 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5928265 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1644 C _74599 _74601 _74598 _74600) = (term1645 C _74599 _74601 _74598 _74600).
Proof. exact (@lem5928264 (term1361 C _74599 _74601) (term1637 C _74598 _74600)). Qed.
Lemma lem5928267 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5928268 {C : Type'} (_74599 : C) (_74601 : C) : (term1529 C _74599 _74601) = (_74599 = _74601).
Proof. exact (@lem5928267 (_74599 = _74601)). Qed.
Lemma lem5928269 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5928270 {C : Type'} (_74599 : C) (_74601 : C) : (term1530 C _74599 _74601) = (term1531 C _74599 _74601).
Proof. exact (MK_COMB (@lem5928269) (@lem5928268 C _74599 _74601)). Qed.
Lemma lem5928272 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5928273 {C : Type'} (_74598 : C -> C) (_74600 : C -> C) : (term1646 C _74598 _74600) = (_74598 = _74600).
Proof. exact (@lem5928272 (_74598 = _74600)). Qed.
Lemma lem5928274 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1645 C _74599 _74601 _74598 _74600) = (term1647 C _74599 _74601 _74598 _74600).
Proof. exact (MK_COMB (@lem5928270 C _74599 _74601) (@lem5928273 C _74598 _74600)). Qed.
Lemma lem5928275 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1644 C _74599 _74601 _74598 _74600) = (term1647 C _74599 _74601 _74598 _74600).
Proof. exact (TRANS (@lem5928265 C _74599 _74601 _74598 _74600) (@lem5928274 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928276 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928277 {C : Type'} (_74599 : C) (_74601 : C) (_74598 : C -> C) (_74600 : C -> C) : (term1648 C _74599 _74601 _74598 _74600) = (term1649 C _74599 _74601 _74598 _74600).
Proof. exact (MK_COMB (@lem5928276) (@lem5928275 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928278 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601)) = ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601)).
Proof. exact (eq_refl ((@I (C -> C) _74598 _74599) = (@I (C -> C) _74600 _74601))). Qed.
Lemma lem5928279 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : (term1642 C _74598 _74599 _74600 _74601) = (term1650 C _74598 _74599 _74600 _74601).
Proof. exact (MK_COMB (@lem5928277 C _74599 _74601 _74598 _74600) (@lem5928278 C _74598 _74599 _74600 _74601)). Qed.
Lemma lem5928280 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : (term1639 C _74599 _74601 _74598 _74600) = (term1650 C _74598 _74599 _74600 _74601).
Proof. exact (TRANS (@lem5928262 C _74598 _74599 _74600 _74601) (@lem5928279 C _74598 _74599 _74600 _74601)). Qed.
Lemma lem5928282 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : term1651 A B C s op g f x''''.
Proof. exact (conj (@lem5928160 A B C op s g f h1) (@lem5928169 A B C op g f x'''')). Qed.
Lemma lem5928284 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : term1650 C _74598 _74599 _74600 _74601.
Proof. exact (EQ_MP (@lem5928280 C _74598 _74599 _74600 _74601) (@lem5928259 C _74599 _74601 _74598 _74600)). Qed.
Lemma lem5928285 {C : Type'} (_74598 : C -> C) (_74599 : C) (_74600 : C -> C) (_74601 : C) : term1650 C _74598 _74599 _74600 _74601.
Proof. exact (@lem5928284 C _74598 _74599 _74600 _74601). Qed.
Lemma lem5928286 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : term1652 A B C x'''' op s g f.
Proof. exact (@lem5928285 C (term1326 A B C op g f x'''') (term1323 A B C op f s g) (term1326 A B C op g f x'''') (term1333 A B C op s g f)). Qed.
Lemma lem5928289 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f).
Proof. exact (@lem5928286 A B C x'''' op s g f (@lem5928282 A B C x'''' op s g f h1)). Qed.
Lemma lem5928290 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f).
Proof. exact (@lem5928289 A B C x'''' op s g f h1). Qed.
Lemma lem5928291 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : term1653 A B C x'''' op s g f.
Proof. exact (fun h0 : term1338 A B C x'''' op s g f => @lem5928290 A B C x'''' op s g f h1). Qed.
Lemma lem5928293 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5928294 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1653 A B C x'''' op s g f) = ((term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f)).
Proof. exact (@lem5928293 ((term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f))). Qed.
Lemma lem5928295 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : (term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f).
Proof. exact (EQ_MP (@lem5928294 A B C x'''' op s g f) (@lem5928291 A B C x'''' op s g f h1)). Qed.
Lemma lem5928298 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5928300 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1338 A B C x'''' op s g f) = (term1654 A B C x'''' op s g f).
Proof. exact (@lem5928298 ((term1328 A B C x'''' op f s g) = (term1336 A B C x'''' op s g f))). Qed.
Lemma lem5928303 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : term1654 A B C x'''' op s g f.
Proof. exact (EQ_MP (@lem5928300 A B C x'''' op s g f) (@lem5923653 A B C x''''' y x'''' op s g f h1)). Qed.
Lemma lem5928306 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : False.
Proof. exact (@lem5928303 A B C x''''' y x'''' op s g f h1 (@lem5928295 A B C x'''' op s g f h2)). Qed.
Lemma lem5928307 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : term1476.
Proof. exact (fun h0 : ~ False => @lem5928306 A B C x''''' y x'''' op s g f h1 h2). Qed.
Lemma lem5928309 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5928310 : term1476 = False.
Proof. exact (@lem5928309 False). Qed.
Lemma lem5928311 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : False.
Proof. exact (EQ_MP (@lem5928310) (@lem5928307 A B C x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5928312 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : ((term1323 A B C op f s g) = (term1333 A B C op s g f)) = False.
Proof. exact (prop_ext (fun h3 : (term1323 A B C op f s g) = (term1333 A B C op s g f) => @lem5928311 A B C x''''' y x'''' op s g f h1 h2) (fun h3 : False => @lem5923659 A B C op s g f h2)). Qed.
Lemma lem5928313 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : False.
Proof. exact (EQ_MP (@lem5928312 A B C x''''' y x'''' op s g f h1 h2) (@lem5923659 A B C op s g f h2)). Qed.
Lemma lem5928314 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : ((term1323 A B C op f s g) = (term1333 A B C op s g f)) = False.
Proof. exact (prop_ext (fun h3 : (term1323 A B C op f s g) = (term1333 A B C op s g f) => @lem5928313 A B C x''''' y x'''' op s g f h1 h2) (fun h3 : False => @lem5922711 A B C op s g f h2)). Qed.
Lemma lem5928315 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : False.
Proof. exact (EQ_MP (@lem5928314 A B C x''''' y x'''' op s g f h1 h2) (@lem5922711 A B C op s g f h2)). Qed.
Lemma lem5928316 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : ((term1323 A B C op f s g) = (term1333 A B C op s g f)) = False.
Proof. exact (prop_ext (fun h3 : (term1323 A B C op f s g) = (term1333 A B C op s g f) => @lem5928315 A B C x''''' y x'''' op s g f h1 h2) (fun h3 : False => @lem5922711 A B C op s g f h2)). Qed.
Lemma lem5928317 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) (h2 : (term1323 A B C op f s g) = (term1333 A B C op s g f)) : False.
Proof. exact (EQ_MP (@lem5928316 A B C x''''' y x'''' op s g f h1 h2) (@lem5922711 A B C op s g f h2)). Qed.
Lemma lem5928318 {A B C : Type'} (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1382 A B C x''''' y x'''' op s g f) : False.
Proof. exact (or_elim (@lem5920893 A B C x''''' y x'''' op s g f h1) (fun h0 : term1367 A B s f x''''' y => @lem5927411 A B C x'''' op g s f x''''' y h1 h0) (fun h0 : (term1323 A B C op f s g) = (term1333 A B C op s g f) => @lem5928317 A B C x''''' y x'''' op s g f h1 h0)). Qed.
Lemma lem5928319 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term1387 A B C x''''' y x'''' op s g f) : False.
Proof. exact (or_elim (@lem5920875 A B C x''''' y x'''' op s g f h2) (fun h0 : term1367 A B s f x''''' y => @lem5924794 A B C x''''' y x'''' op s g f h0 h2) (fun h0 : (term1323 A B C op f s g) = (term1333 A B C op s g f) => @lem5926380 A B C x'' x''''' y x'''' op s g f h1 h2)). Qed.
Lemma lem5928320 {A B C : Type'} (x'' : type1448 A B) (x''''' : A) (y : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (h1 : term1258 A B x'') (h2 : term858 A B C x''''' y x'''' op s g f) : False.
Proof. exact (or_elim (@lem5920857 A B C x''''' y x'''' op s g f h2) (fun h0 : term1387 A B C x''''' y x'''' op s g f => @lem5928319 A B C x'' x''''' y x'''' op s g f h1 h0) (fun h0 : term1382 A B C x''''' y x'''' op s g f => @lem5928318 A B C x''''' y x'''' op s g f h0)). Qed.
Lemma lem5928321 {A B C : Type'} (x''''' : A) (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (x'' : type1448 A B) (h1 : term861 A B C x''''' x'''' op s g f) (h2 : term1258 A B x'') : False.
Proof. exact (ex_elim (@lem5919029 A B C x''''' x'''' op s g f h1) (fun y : A => fun h0 : term860 A B C x''''' x'''' op s g f y => @lem5928320 A B C x'' x''''' y x'''' op s g f h2 h0)). Qed.
Lemma lem5928322 {A B C : Type'} (x'''' : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (x'' : type1448 A B) (h1 : term863 A B C x'''' op s g f) (h2 : term1258 A B x'') : False.
Proof. exact (ex_elim (@lem5919028 A B C x'''' op s g f h1) (fun x''''' : A => fun h0 : term862 A B C x'''' op s g f x''''' => @lem5928321 A B C x''''' x'''' op s g f x'' h0 h2)). Qed.
Lemma lem5928323 {A B C : Type'} (x'''' : A) (op : type1400 C) (g : B -> C) (f : A -> B) (x'' : type1448 A B) (h1 : term865 A B C x'''' op g f) (h2 : term1258 A B x'') : False.
Proof. exact (ex_elim (@lem5919027 A B C x'''' op g f h1) (fun s : A -> Prop => fun h0 : term864 A B C x'''' op g f s => @lem5928322 A B C x'''' op s g f x'' h0 h2)). Qed.
Lemma lem5928324 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'' : type1448 A B) (h1 : term400 A B C op g f) (h2 : term1258 A B x'') : False.
Proof. exact (ex_elim (@lem5915454 A B C op g f h1) (fun x'''' : A => fun h0 : term866 A B C op g f x'''' => @lem5928323 A B C x'''' op g f x'' h0 h2)). Qed.
Lemma lem5928325 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x'' : type1448 A B) (h1 : term317 A) (h2 : term400 A B C op g f) (h3 : term1258 A B x'') : False.
Proof. exact (ex_elim (@lem5916346 A h1) (fun x''' : type1361 A => fun h0 : term1068 A x''' => @lem5928324 A B C op g f x'' h2 h3)). Qed.
Lemma lem5928326 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term318 A B) (h3 : term400 A B C op g f) : False.
Proof. exact (ex_elim (@lem5917238 A B h2) (fun x'' : type1448 A B => fun h0 : term1260 A B x'' => @lem5928325 A B C op g f x'' h1 h3 h0)). Qed.
Lemma lem5928327 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term318 A B) (h3 : term317 B) (h4 : term400 A B C op g f) : False.
Proof. exact (ex_elim (@lem5918130 B h3) (fun x' : type1361 B => fun h0 : term1068 B x' => @lem5928326 A B C op g f h1 h2 h4)). Qed.
Lemma lem5928328 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term318 A B) (h3 : term317 B) (h4 : term318 A C) (h5 : term400 A B C op g f) : False.
Proof. exact (ex_elim (@lem5919022 A C h4) (fun x : type1448 A C => fun h0 : term1260 A C x => @lem5928327 A B C op g f h1 h2 h3 h5)). Qed.
Lemma lem5928329 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term318 A B) (h3 : term317 B) (h4 : term400 A B C op g f) : term323 A C.
Proof. exact (fun h0 : term318 A C => @lem5928328 A B C op g f h1 h2 h3 h0 h4). Qed.
Lemma lem5928330 {A C : Type'} : (term323 A C) = (term324 A C).
Proof. exact (@lem69 (term318 A C)). Qed.
Lemma lem5928331 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term318 A B) (h3 : term317 B) (h4 : term400 A B C op g f) : term324 A C.
Proof. exact (EQ_MP (@lem5928330 A C) (@lem5928329 A B C op g f h1 h2 h3 h4)). Qed.
Lemma lem5928332 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term318 A B) (h3 : term400 A B C op g f) : term327 A B C.
Proof. exact (fun h0 : term317 B => @lem5928331 A B C op g f h1 h2 h0 h3). Qed.
Lemma lem5928333 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term317 A) (h2 : term400 A B C op g f) : term330 A B C.
Proof. exact (fun h0 : term318 A B => @lem5928332 A B C op g f h1 h0 h2). Qed.
Lemma lem5928334 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term400 A B C op g f) : term332 A B C.
Proof. exact (fun h0 : term317 A => @lem5928333 A B C op g f h0 h1). Qed.
Lemma lem5928335 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term402 A B C op g f.
Proof. exact (fun h0 : term400 A B C op g f => @lem5928334 A B C op g f h0). Qed.
Lemma lem5928336 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term403 A B C op g f.
Proof. exact (fun h0 : @monoidal C op => @lem5928335 A B C op g f). Qed.
Lemma lem5928341 {A B C : Type'} (g : B -> C) (f : A -> B) : term405 A B C g f.
Proof. exact (fun op : type1400 C => @lem5928336 A B C op g f). Qed.
Lemma lem5928346 {A B C : Type'} (f : A -> B) : term407 A B C f.
Proof. exact (fun g : B -> C => @lem5928341 A B C g f). Qed.
Lemma lem5928351 {A B C : Type'} : term409 A B C.
Proof. exact (fun f : A -> B => @lem5928346 A B C f). Qed.
Lemma lem5928352 {A B C : Type'} : term348 A B C.
Proof. exact (EQ_MP (@lem5913302 A B C) (@lem5928351 A B C)). Qed.
Lemma lem5928353 {A B C : Type'} (f : A -> B) : term1655 A B C f.
Proof. exact (@lem5928352 A B C f). Qed.
Lemma lem5928354 {A B C : Type'} (f : A -> B) : (term1655 A B C f) = (term344 A B C f).
Proof. exact (eq_refl (term1655 A B C f)). Qed.
Lemma lem5928355 {A B C : Type'} (f : A -> B) : term344 A B C f.
Proof. exact (EQ_MP (@lem5928354 A B C f) (@lem5928353 A B C f)). Qed.
Lemma lem5928356 {A B C : Type'} (f : A -> B) (g : B -> C) : term1656 A B C f g.
Proof. exact (@lem5928355 A B C f g). Qed.
Lemma lem5928357 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1656 A B C f g) = (term340 A B C g f).
Proof. exact (eq_refl (term1656 A B C f g)). Qed.
Lemma lem5928358 {A B C : Type'} (g : B -> C) (f : A -> B) : term340 A B C g f.
Proof. exact (EQ_MP (@lem5928357 A B C g f) (@lem5928356 A B C f g)). Qed.
Lemma lem5928359 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) : term1657 A B C g f op.
Proof. exact (@lem5928358 A B C g f op). Qed.
Lemma lem5928360 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1657 A B C g f op) = (term319 A B C op g f).
Proof. exact (eq_refl (term1657 A B C g f op)). Qed.
Lemma lem5928361 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term319 A B C op g f.
Proof. exact (EQ_MP (@lem5928360 A B C op g f) (@lem5928359 A B C g f op)). Qed.
Lemma lem5928363 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term319 A B C op g f.
Proof. exact (@lem5912222 A B C op g f (@lem5928361 A B C op g f)). Qed.
Lemma lem5928364 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term334 A B C op g f.
Proof. exact (@lem5928363 A B C op g f (@lem5826509 C op h1)). Qed.
Lemma lem5928365 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : term331 A B C.
Proof. exact (@lem5928364 A B C g f op h1 (@lem5912198 A B C op g f h2)). Qed.
Lemma lem5928366 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : term329 A B C.
Proof. exact (@lem5928365 A B C op g f h1 h2 (@lem5912199 A)). Qed.
Lemma lem5928367 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : term326 A B C.
Proof. exact (@lem5928366 A B C op g f h1 h2 (@lem5912200 A B)). Qed.
Lemma lem5928368 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : term323 A C.
Proof. exact (@lem5928367 A B C op g f h1 h2 (@lem5912206 B)). Qed.
Lemma lem5928369 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : False.
Proof. exact (@lem5928368 A B C op g f h1 h2 (@lem5912204 A C)). Qed.
Lemma lem5928370 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : (term316 A B C op g f) = False.
Proof. exact (prop_ext (fun h3 : term316 A B C op g f => @lem5928369 A B C op g f h1 h2) (fun h3 : False => @lem5912198 A B C op g f h2)). Qed.
Lemma lem5928371 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : @monoidal C op) (h2 : term316 A B C op g f) : False.
Proof. exact (EQ_MP (@lem5928370 A B C op g f h1 h2) (@lem5912198 A B C op g f h2)). Qed.
Lemma lem5928372 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term315 A B C op g f.
Proof. exact (fun h0 : term316 A B C op g f => @lem5928371 A B C op g f h1 h0). Qed.
Lemma lem5928373 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term313 A B C op g f.
Proof. exact (EQ_MP (@lem5912197 A B C op g f) (@lem5928372 A B C g f op h1)). Qed.
Lemma lem5928374 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term287 A B C op g f.
Proof. exact (EQ_MP (@lem5912193 A B C op g f) (@lem5928373 A B C g f op h1)). Qed.
Lemma lem5928375 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term173 A B C op g f.
Proof. exact (EQ_MP (@lem5912054 A B C g f op h1) (@lem5928374 A B C g f op h1)). Qed.
Lemma lem5928376 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term145 A B C op g f.
Proof. exact (@lem5826620 A B C op g f (@lem5928375 A B C g f op h1)). Qed.
Lemma lem5928377 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term116 A B C op g f.
Proof. exact (EQ_MP (@lem5826587 A B C op g f) (@lem5928376 A B C g f op h1)). Qed.
Lemma lem5928378 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term12 A B s f.
Proof. exact (h1). Qed.
Lemma lem5928382 {_120327 _120333 : Type'} (s : _120333 -> Prop) (f : _120333 -> _120327) (op : type1400 _120327) : (@iterate _120327 _120333 op s f) = (term95 _120327 _120333 s f op).
Proof. exact (EQ_MP (@lem5826463 _120327 _120333 s f op) (@lem5826462 _120327 _120333 f op s)). Qed.
Lemma lem5928383 {B C : Type'} (s : B -> Prop) (f : B -> C) (op : type1400 C) : (@iterate C B op s f) = (term1658 B C s f op).
Proof. exact (@lem5928382 C B s f op). Qed.
Lemma lem5928384 {A B C : Type'} (f : A -> B) (s : A -> Prop) (g : B -> C) (op : type1400 C) : (term121 A B C op f s g) = (term1659 A B C f s g op).
Proof. exact (@lem5928383 B C (@IMAGE A B f s) g op). Qed.
Lemma lem5928385 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5928386 {A B C : Type'} (f : A -> B) (s : A -> Prop) (g : B -> C) (op : type1400 C) : (term382 A B C op f s g) = (term1660 A B C f s g op).
Proof. exact (MK_COMB (@lem5928385 C) (@lem5928384 A B C f s g op)). Qed.
Lemma lem5928388 {_120327 _120333 : Type'} (s : _120333 -> Prop) (f : _120333 -> _120327) (op : type1400 _120327) : (@iterate _120327 _120333 op s f) = (term95 _120327 _120333 s f op).
Proof. exact (EQ_MP (@lem5826463 _120327 _120333 s f op) (@lem5826462 _120327 _120333 f op s)). Qed.
Lemma lem5928389 {A C : Type'} (s : A -> Prop) (f : A -> C) (op : type1400 C) : (@iterate C A op s f) = (term1658 A C s f op).
Proof. exact (@lem5928388 C A s f op). Qed.
Lemma lem5928390 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) : (term122 A B C op s g f) = (term1661 A B C s g f op).
Proof. exact (@lem5928389 A C s (@o A B C g f) op). Qed.
Lemma lem5928391 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term1659 A B C f s g op) = (term1661 A B C s g f op)).
Proof. exact (MK_COMB (@lem5928386 A B C f s g op) (@lem5928390 A B C s g f op)). Qed.
Lemma lem5928392 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term1659 A B C f s g op) = (term1661 A B C s g f op)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (SYM (@lem5928391 A B C s g f op)). Qed.
Lemma lem5928394 {_121547 : Type'} (a : Prop) (b : _121547) (a' : Prop) (b' : _121547) (c : _121547) : term36 _121547 a b a' b' c.
Proof. exact (@lem5826454 _121547 a b a' b' c (@lem5826446 _121547 a b a' b' c)). Qed.
Lemma lem5928395 {C : Type'} (a : Prop) (b : C) (a' : Prop) (b' : C) (c : C) : term36 C a b a' b' c.
Proof. exact (@lem5928394 C a b a' b' c). Qed.
Lemma lem5928396 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) : term1662 A B C s g f op.
Proof. exact (@lem5928395 C (term1663 A B C op g f s) (term1664 A B C op f s g) (term1665 A B C op g f s) (term1666 A B C op s g f) (@neutral C op)). Qed.
Lemma lem5928402 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (g : _120186 -> _120196) (f : _120195 -> _120186) (s : _120195 -> Prop) : (term27 _120186 _120195 _120196 op g f s) = (term28 _120186 _120195 _120196 op g f s).
Proof. exact (EQ_MP (@lem5826030 _120186 _120195 _120196 op g f s) (@lem5826029 _120186 _120195 _120196 op g f s)). Qed.
Lemma lem5928403 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1667 A B C op g f s) = (term1668 A B C op g f s).
Proof. exact (@lem5928402 B A C op g f s). Qed.
Lemma lem5928404 {B : Type'} : (@FINITE B) = (@FINITE B).
Proof. exact (eq_refl (@FINITE B)). Qed.
Lemma lem5928405 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1663 A B C op g f s) = (term1669 A B C op g f s).
Proof. exact (MK_COMB (@lem5928404 B) (@lem5928403 A B C op g f s)). Qed.
Lemma lem5928406 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5928407 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1670 A B C op g f s) = (term1671 A B C op g f s).
Proof. exact (MK_COMB (@lem5928406) (@lem5928405 A B C op g f s)). Qed.
Lemma lem5928408 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1665 A B C op g f s) = (term1665 A B C op g f s).
Proof. exact (eq_refl (term1665 A B C op g f s)). Qed.
Lemma lem5928409 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : ((term1663 A B C op g f s) = (term1665 A B C op g f s)) = ((term1669 A B C op g f s) = (term1665 A B C op g f s)).
Proof. exact (MK_COMB (@lem5928407 A B C op g f s) (@lem5928408 A B C op g f s)). Qed.
Lemma lem5928412 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5928413 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1672 A B C op g f s) = (term1673 A B C op g f s).
Proof. exact (MK_COMB (@lem5928412) (@lem5928409 A B C op g f s)). Qed.
Lemma lem5928419 {_120186 _120195 _120196 : Type'} (op : type1400 _120196) (g : _120186 -> _120196) (f : _120195 -> _120186) (s : _120195 -> Prop) : (term27 _120186 _120195 _120196 op g f s) = (term28 _120186 _120195 _120196 op g f s).
Proof. exact (EQ_MP (@lem5826030 _120186 _120195 _120196 op g f s) (@lem5826029 _120186 _120195 _120196 op g f s)). Qed.
Lemma lem5928420 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1667 A B C op g f s) = (term1668 A B C op g f s).
Proof. exact (@lem5928419 B A C op g f s). Qed.
Lemma lem5928421 {B C : Type'} (op : type1400 C) : (@iterate C B op) = (@iterate C B op).
Proof. exact (eq_refl (@iterate C B op)). Qed.
Lemma lem5928422 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1674 A B C op g f s) = (term1675 A B C op g f s).
Proof. exact (MK_COMB (@lem5928421 B C op) (@lem5928420 A B C op g f s)). Qed.
Lemma lem5928423 {B C : Type'} (g : B -> C) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem5928424 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1664 A B C op f s g) = (term1676 A B C op f s g).
Proof. exact (MK_COMB (@lem5928422 A B C op g f s) (@lem5928423 B C g)). Qed.
Lemma lem5928425 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5928426 {A B C : Type'} (op : type1400 C) (f : A -> B) (s : A -> Prop) (g : B -> C) : (term1677 A B C op f s g) = (term1678 A B C op f s g).
Proof. exact (MK_COMB (@lem5928425 C) (@lem5928424 A B C op f s g)). Qed.
Lemma lem5928427 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1666 A B C op s g f) = (term1666 A B C op s g f).
Proof. exact (eq_refl (term1666 A B C op s g f)). Qed.
Lemma lem5928428 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term1664 A B C op f s g) = (term1666 A B C op s g f)) = ((term1676 A B C op f s g) = (term1666 A B C op s g f)).
Proof. exact (MK_COMB (@lem5928426 A B C op f s g) (@lem5928427 A B C op s g f)). Qed.
Lemma lem5928431 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1679 A B C op g f s) = (term1679 A B C op g f s).
Proof. exact (eq_refl (term1679 A B C op g f s)). Qed.
Lemma lem5928432 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1680 A B C op s g f) = (term1681 A B C op s g f).
Proof. exact (MK_COMB (@lem5928431 A B C op g f s) (@lem5928428 A B C op s g f)). Qed.
Lemma lem5928435 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1682 A B C op s g f) = (term1683 A B C op s g f).
Proof. exact (MK_COMB (@lem5928413 A B C op g f s) (@lem5928432 A B C op s g f)). Qed.
Lemma lem5928438 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1683 A B C op s g f) = (term1682 A B C op s g f).
Proof. exact (SYM (@lem5928435 A B C op s g f)). Qed.
Lemma lem5928439 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) : term1665 A B C op g f s.
Proof. exact (h1). Qed.
Lemma lem5928441 {A B : Type'} (f : A -> B) (s : A -> Prop) : term11 A B f s.
Proof. exact (EQ_MP (@lem5826015 A B f s) (@lem5826014 A B f s)). Qed.
Lemma lem5928442 {A B : Type'} (f : A -> B) (s : A -> Prop) : term11 A B f s.
Proof. exact (@lem5928441 A B f s). Qed.
Lemma lem5928443 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : term1684 A B C op g f s.
Proof. exact (@lem5928442 A B f (term1685 A B C op g f s)). Qed.
Lemma lem5928445 (p : Prop) : p = (term314 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem5928446 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1686 A B C op g s f) = (term1687 A B C op g s f).
Proof. exact (@lem5928445 (term1686 A B C op g s f)). Qed.
Lemma lem5928447 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1687 A B C op g s f) = (term1686 A B C op g s f).
Proof. exact (SYM (@lem5928446 A B C op g s f)). Qed.
Lemma lem5928448 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1688 A B C op g s f) : term1688 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5928449 {_119826 A : Type'} : term1689 _119826 A.
Proof. exact (@lem5718201 _119826 A). Qed.
Lemma lem5928450 {A C : Type'} : term1690 A C.
Proof. exact (@lem5718201 C A). Qed.
Lemma lem5928451 {_119829 B : Type'} : term1690 _119829 B.
Proof. exact (@lem5718201 B _119829). Qed.
Lemma lem5928452 {_119829 A : Type'} : term1690 _119829 A.
Proof. exact (@lem5718201 A _119829). Qed.
Lemma lem5928453 {_119829 C : Type'} : term1690 _119829 C.
Proof. exact (@lem5718201 C _119829). Qed.
Lemma lem5928456 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1691 _119826 _119829 A B C op g s f) : term1691 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5928457 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1692 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term1691 _119826 _119829 A B C op g s f => @lem5928456 _119826 _119829 A B C op g s f h0). Qed.
Lemma lem5928458 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1692 _119826 _119829 A B C op g s f) : term1692 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5928459 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1691 _119826 _119829 A B C op g s f) : term1691 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5928460 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1691 _119826 _119829 A B C op g s f) (h2 : term1692 _119826 _119829 A B C op g s f) : term1691 _119826 _119829 A B C op g s f.
Proof. exact (@lem5928458 _119826 _119829 A B C op g s f h2 (@lem5928459 _119826 _119829 A B C op g s f h1)). Qed.
Lemma lem5928461 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1691 _119826 _119829 A B C op g s f) : term1693 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term1692 _119826 _119829 A B C op g s f => @lem5928460 _119826 _119829 A B C op g s f h1 h0). Qed.
Lemma lem5928462 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1692 _119826 _119829 A B C op g s f) : term1692 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5928463 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1691 _119826 _119829 A B C op g s f) (h2 : term1692 _119826 _119829 A B C op g s f) : term1691 _119826 _119829 A B C op g s f.
Proof. exact (@lem5928461 _119826 _119829 A B C op g s f h1 (@lem5928462 _119826 _119829 A B C op g s f h2)). Qed.
Lemma lem5928464 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1692 _119826 _119829 A B C op g s f) : term1692 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term1691 _119826 _119829 A B C op g s f => @lem5928463 _119826 _119829 A B C op g s f h0 h1). Qed.
Lemma lem5928465 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1694 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term1692 _119826 _119829 A B C op g s f => @lem5928464 _119826 _119829 A B C op g s f h0). Qed.
Lemma lem5928468 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1692 _119826 _119829 A B C op g s f.
Proof. exact (@lem5928465 _119826 _119829 A B C op g s f (@lem5928457 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928469 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1692 _119826 _119829 A B C op g s f.
Proof. exact (@lem5928468 _119826 _119829 A B C op g s f). Qed.
Lemma lem5928625 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem5928626 {A C : Type'} : (term1695 A C) = (term1696 A C).
Proof. exact (@lem5928625 (term1690 A C)). Qed.
Lemma lem5928645 {_119829 C : Type'} : (term1697 _119829 C) = (term1697 _119829 C).
Proof. exact (eq_refl (term1697 _119829 C)). Qed.
Lemma lem5928646 {_119829 A C : Type'} : (term1698 _119829 A C) = (term1699 _119829 A C).
Proof. exact (MK_COMB (@lem5928645 _119829 C) (@lem5928626 A C)). Qed.
Lemma lem5928649 {_119829 B : Type'} : (term1697 _119829 B) = (term1697 _119829 B).
Proof. exact (eq_refl (term1697 _119829 B)). Qed.
Lemma lem5928650 {_119829 A B C : Type'} : (term1700 _119829 A B C) = (term1701 _119829 A B C).
Proof. exact (MK_COMB (@lem5928649 _119829 B) (@lem5928646 _119829 A C)). Qed.
Lemma lem5928653 {_119829 A : Type'} : (term1697 _119829 A) = (term1697 _119829 A).
Proof. exact (eq_refl (term1697 _119829 A)). Qed.
Lemma lem5928654 {_119829 A B C : Type'} : (term1702 _119829 A B C) = (term1703 _119829 A B C).
Proof. exact (MK_COMB (@lem5928653 _119829 A) (@lem5928650 _119829 A B C)). Qed.
Lemma lem5928657 {_119826 A : Type'} : (term1704 _119826 A) = (term1704 _119826 A).
Proof. exact (eq_refl (term1704 _119826 A)). Qed.
Lemma lem5928658 {_119826 _119829 A B C : Type'} : (term1705 _119826 _119829 A B C) = (term1706 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5928657 _119826 A) (@lem5928654 _119829 A B C)). Qed.
Lemma lem5928661 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1707 A B C op g s f) = (term1707 A B C op g s f).
Proof. exact (eq_refl (term1707 A B C op g s f)). Qed.
Lemma lem5928662 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1708 _119826 _119829 A B C op g s f) = (term1709 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928661 A B C op g s f) (@lem5928658 _119826 _119829 A B C)). Qed.
Lemma lem5928665 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term137 A B s f) = (term137 A B s f).
Proof. exact (eq_refl (term137 A B s f)). Qed.
Lemma lem5928666 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1710 _119826 _119829 A B C op g s f) = (term1711 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928665 A B s f) (@lem5928662 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928669 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1712 A B C op g f) = (term1712 A B C op g f).
Proof. exact (eq_refl (term1712 A B C op g f)). Qed.
Lemma lem5928670 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1713 _119826 _119829 A B C op g s f) = (term1714 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928669 A B C op g f) (@lem5928666 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928673 {C : Type'} (op : type1400 C) : (term336 C op) = (term336 C op).
Proof. exact (eq_refl (term336 C op)). Qed.
Lemma lem5928674 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1691 _119826 _119829 A B C op g s f) = (term1715 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928673 C op) (@lem5928670 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928677 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1716 _119826 _119829 A B C g s f) = (term1717 _119826 _119829 A B C g s f).
Proof. exact (fun_ext (fun op : type1400 C => @lem5928674 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928678 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5928679 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1718 _119826 _119829 A B C g s f) = (term1719 _119826 _119829 A B C g s f).
Proof. exact (MK_COMB (@lem5928678 C) (@lem5928677 _119826 _119829 A B C g s f)). Qed.
Lemma lem5928684 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term1720 _119826 _119829 A B C s f) = (term1721 _119826 _119829 A B C s f).
Proof. exact (fun_ext (fun g : B -> C => @lem5928679 _119826 _119829 A B C g s f)). Qed.
Lemma lem5928685 {B C : Type'} : (@all (B -> C)) = (@all (B -> C)).
Proof. exact (eq_refl (@all (B -> C))). Qed.
Lemma lem5928686 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term1722 _119826 _119829 A B C s f) = (term1723 _119826 _119829 A B C s f).
Proof. exact (MK_COMB (@lem5928685 B C) (@lem5928684 _119826 _119829 A B C s f)). Qed.
Lemma lem5928691 {_119826 _119829 A B C : Type'} (f : A -> B) : (term1724 _119826 _119829 A B C f) = (term1725 _119826 _119829 A B C f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5928686 _119826 _119829 A B C s f)). Qed.
Lemma lem5928692 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5928693 {_119826 _119829 A B C : Type'} (f : A -> B) : (term1726 _119826 _119829 A B C f) = (term1727 _119826 _119829 A B C f).
Proof. exact (MK_COMB (@lem5928692 A) (@lem5928691 _119826 _119829 A B C f)). Qed.
Lemma lem5928698 {_119826 _119829 A B C : Type'} : (term1728 _119826 _119829 A B C) = (term1729 _119826 _119829 A B C).
Proof. exact (fun_ext (fun f : A -> B => @lem5928693 _119826 _119829 A B C f)). Qed.
Lemma lem5928699 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5928708 {_119826 _119829 A B C : Type'} : (term1730 _119826 _119829 A B C) = (term1731 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5928699 A B) (@lem5928698 _119826 _119829 A B C)). Qed.
Lemma lem5928719 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : ((term1732 A C x op f s) = (term1733 A C s f x op)) = ((term1732 A C x op f s) = (term1733 A C s f x op)).
Proof. exact (eq_refl ((term1732 A C x op f s) = (term1733 A C s f x op))). Qed.
Lemma lem5928720 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1734 A C f x op) = (term1734 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5928719 A C s f x op)). Qed.
Lemma lem5928721 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5928722 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1735 A C f x op) = (term1735 A C f x op).
Proof. exact (MK_COMB (@lem5928721 A) (@lem5928720 A C f x op)). Qed.
Lemma lem5928723 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1736 A C f op) = (term1736 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5928722 A C f x op)). Qed.
Lemma lem5928724 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928725 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1737 A C f op) = (term1737 A C f op).
Proof. exact (MK_COMB (@lem5928724 A) (@lem5928723 A C f op)). Qed.
Lemma lem5928726 {A C : Type'} (op : type1400 C) : (term1738 A C op) = (term1738 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5928725 A C f op)). Qed.
Lemma lem5928727 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5928728 {A C : Type'} (op : type1400 C) : (term1739 A C op) = (term1739 A C op).
Proof. exact (MK_COMB (@lem5928727 A C) (@lem5928726 A C op)). Qed.
Lemma lem5928729 {A C : Type'} : (term1740 A C) = (term1740 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5928728 A C op)). Qed.
Lemma lem5928730 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5928731 {A C : Type'} : (term1690 A C) = (term1690 A C).
Proof. exact (MK_COMB (@lem5928730 C) (@lem5928729 A C)). Qed.
Lemma lem5928732 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5928733 {A C : Type'} : (term1696 A C) = (term1696 A C).
Proof. exact (MK_COMB (@lem5928732) (@lem5928731 A C)). Qed.
Lemma lem5928744 {_119829 C : Type'} (s : _119829 -> Prop) (f : _119829 -> C) (x : _119829) (op : type1400 C) : ((term1732 _119829 C x op f s) = (term1733 _119829 C s f x op)) = ((term1732 _119829 C x op f s) = (term1733 _119829 C s f x op)).
Proof. exact (eq_refl ((term1732 _119829 C x op f s) = (term1733 _119829 C s f x op))). Qed.
Lemma lem5928745 {_119829 C : Type'} (f : _119829 -> C) (x : _119829) (op : type1400 C) : (term1734 _119829 C f x op) = (term1734 _119829 C f x op).
Proof. exact (fun_ext (fun s : _119829 -> Prop => @lem5928744 _119829 C s f x op)). Qed.
Lemma lem5928746 {_119829 : Type'} : (@all (_119829 -> Prop)) = (@all (_119829 -> Prop)).
Proof. exact (eq_refl (@all (_119829 -> Prop))). Qed.
Lemma lem5928747 {_119829 C : Type'} (f : _119829 -> C) (x : _119829) (op : type1400 C) : (term1735 _119829 C f x op) = (term1735 _119829 C f x op).
Proof. exact (MK_COMB (@lem5928746 _119829) (@lem5928745 _119829 C f x op)). Qed.
Lemma lem5928748 {_119829 C : Type'} (f : _119829 -> C) (op : type1400 C) : (term1736 _119829 C f op) = (term1736 _119829 C f op).
Proof. exact (fun_ext (fun x : _119829 => @lem5928747 _119829 C f x op)). Qed.
Lemma lem5928749 {_119829 : Type'} : (@all _119829) = (@all _119829).
Proof. exact (eq_refl (@all _119829)). Qed.
Lemma lem5928750 {_119829 C : Type'} (f : _119829 -> C) (op : type1400 C) : (term1737 _119829 C f op) = (term1737 _119829 C f op).
Proof. exact (MK_COMB (@lem5928749 _119829) (@lem5928748 _119829 C f op)). Qed.
Lemma lem5928751 {_119829 C : Type'} (op : type1400 C) : (term1738 _119829 C op) = (term1738 _119829 C op).
Proof. exact (fun_ext (fun f : _119829 -> C => @lem5928750 _119829 C f op)). Qed.
Lemma lem5928752 {_119829 C : Type'} : (@all (_119829 -> C)) = (@all (_119829 -> C)).
Proof. exact (eq_refl (@all (_119829 -> C))). Qed.
Lemma lem5928753 {_119829 C : Type'} (op : type1400 C) : (term1739 _119829 C op) = (term1739 _119829 C op).
Proof. exact (MK_COMB (@lem5928752 _119829 C) (@lem5928751 _119829 C op)). Qed.
Lemma lem5928754 {_119829 C : Type'} : (term1740 _119829 C) = (term1740 _119829 C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5928753 _119829 C op)). Qed.
Lemma lem5928755 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5928756 {_119829 C : Type'} : (term1690 _119829 C) = (term1690 _119829 C).
Proof. exact (MK_COMB (@lem5928755 C) (@lem5928754 _119829 C)). Qed.
Lemma lem5928757 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928758 {_119829 C : Type'} : (term1697 _119829 C) = (term1697 _119829 C).
Proof. exact (MK_COMB (@lem5928757) (@lem5928756 _119829 C)). Qed.
Lemma lem5928759 {_119829 A C : Type'} : (term1699 _119829 A C) = (term1699 _119829 A C).
Proof. exact (MK_COMB (@lem5928758 _119829 C) (@lem5928733 A C)). Qed.
Lemma lem5928770 {_119829 B : Type'} (s : _119829 -> Prop) (f : _119829 -> B) (x : _119829) (op : type1400 B) : ((term1732 _119829 B x op f s) = (term1733 _119829 B s f x op)) = ((term1732 _119829 B x op f s) = (term1733 _119829 B s f x op)).
Proof. exact (eq_refl ((term1732 _119829 B x op f s) = (term1733 _119829 B s f x op))). Qed.
Lemma lem5928771 {_119829 B : Type'} (f : _119829 -> B) (x : _119829) (op : type1400 B) : (term1734 _119829 B f x op) = (term1734 _119829 B f x op).
Proof. exact (fun_ext (fun s : _119829 -> Prop => @lem5928770 _119829 B s f x op)). Qed.
Lemma lem5928772 {_119829 : Type'} : (@all (_119829 -> Prop)) = (@all (_119829 -> Prop)).
Proof. exact (eq_refl (@all (_119829 -> Prop))). Qed.
Lemma lem5928773 {_119829 B : Type'} (f : _119829 -> B) (x : _119829) (op : type1400 B) : (term1735 _119829 B f x op) = (term1735 _119829 B f x op).
Proof. exact (MK_COMB (@lem5928772 _119829) (@lem5928771 _119829 B f x op)). Qed.
Lemma lem5928774 {_119829 B : Type'} (f : _119829 -> B) (op : type1400 B) : (term1736 _119829 B f op) = (term1736 _119829 B f op).
Proof. exact (fun_ext (fun x : _119829 => @lem5928773 _119829 B f x op)). Qed.
Lemma lem5928775 {_119829 : Type'} : (@all _119829) = (@all _119829).
Proof. exact (eq_refl (@all _119829)). Qed.
Lemma lem5928776 {_119829 B : Type'} (f : _119829 -> B) (op : type1400 B) : (term1737 _119829 B f op) = (term1737 _119829 B f op).
Proof. exact (MK_COMB (@lem5928775 _119829) (@lem5928774 _119829 B f op)). Qed.
Lemma lem5928777 {_119829 B : Type'} (op : type1400 B) : (term1738 _119829 B op) = (term1738 _119829 B op).
Proof. exact (fun_ext (fun f : _119829 -> B => @lem5928776 _119829 B f op)). Qed.
Lemma lem5928778 {_119829 B : Type'} : (@all (_119829 -> B)) = (@all (_119829 -> B)).
Proof. exact (eq_refl (@all (_119829 -> B))). Qed.
Lemma lem5928779 {_119829 B : Type'} (op : type1400 B) : (term1739 _119829 B op) = (term1739 _119829 B op).
Proof. exact (MK_COMB (@lem5928778 _119829 B) (@lem5928777 _119829 B op)). Qed.
Lemma lem5928780 {_119829 B : Type'} : (term1740 _119829 B) = (term1740 _119829 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5928779 _119829 B op)). Qed.
Lemma lem5928781 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5928782 {_119829 B : Type'} : (term1690 _119829 B) = (term1690 _119829 B).
Proof. exact (MK_COMB (@lem5928781 B) (@lem5928780 _119829 B)). Qed.
Lemma lem5928783 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928784 {_119829 B : Type'} : (term1697 _119829 B) = (term1697 _119829 B).
Proof. exact (MK_COMB (@lem5928783) (@lem5928782 _119829 B)). Qed.
Lemma lem5928785 {_119829 A B C : Type'} : (term1701 _119829 A B C) = (term1701 _119829 A B C).
Proof. exact (MK_COMB (@lem5928784 _119829 B) (@lem5928759 _119829 A C)). Qed.
Lemma lem5928796 {_119829 A : Type'} (s : _119829 -> Prop) (f : _119829 -> A) (x : _119829) (op : type1400 A) : ((term1732 _119829 A x op f s) = (term1733 _119829 A s f x op)) = ((term1732 _119829 A x op f s) = (term1733 _119829 A s f x op)).
Proof. exact (eq_refl ((term1732 _119829 A x op f s) = (term1733 _119829 A s f x op))). Qed.
Lemma lem5928797 {_119829 A : Type'} (f : _119829 -> A) (x : _119829) (op : type1400 A) : (term1734 _119829 A f x op) = (term1734 _119829 A f x op).
Proof. exact (fun_ext (fun s : _119829 -> Prop => @lem5928796 _119829 A s f x op)). Qed.
Lemma lem5928798 {_119829 : Type'} : (@all (_119829 -> Prop)) = (@all (_119829 -> Prop)).
Proof. exact (eq_refl (@all (_119829 -> Prop))). Qed.
Lemma lem5928799 {_119829 A : Type'} (f : _119829 -> A) (x : _119829) (op : type1400 A) : (term1735 _119829 A f x op) = (term1735 _119829 A f x op).
Proof. exact (MK_COMB (@lem5928798 _119829) (@lem5928797 _119829 A f x op)). Qed.
Lemma lem5928800 {_119829 A : Type'} (f : _119829 -> A) (op : type1400 A) : (term1736 _119829 A f op) = (term1736 _119829 A f op).
Proof. exact (fun_ext (fun x : _119829 => @lem5928799 _119829 A f x op)). Qed.
Lemma lem5928801 {_119829 : Type'} : (@all _119829) = (@all _119829).
Proof. exact (eq_refl (@all _119829)). Qed.
Lemma lem5928802 {_119829 A : Type'} (f : _119829 -> A) (op : type1400 A) : (term1737 _119829 A f op) = (term1737 _119829 A f op).
Proof. exact (MK_COMB (@lem5928801 _119829) (@lem5928800 _119829 A f op)). Qed.
Lemma lem5928803 {_119829 A : Type'} (op : type1400 A) : (term1738 _119829 A op) = (term1738 _119829 A op).
Proof. exact (fun_ext (fun f : _119829 -> A => @lem5928802 _119829 A f op)). Qed.
Lemma lem5928804 {_119829 A : Type'} : (@all (_119829 -> A)) = (@all (_119829 -> A)).
Proof. exact (eq_refl (@all (_119829 -> A))). Qed.
Lemma lem5928805 {_119829 A : Type'} (op : type1400 A) : (term1739 _119829 A op) = (term1739 _119829 A op).
Proof. exact (MK_COMB (@lem5928804 _119829 A) (@lem5928803 _119829 A op)). Qed.
Lemma lem5928806 {_119829 A : Type'} : (term1740 _119829 A) = (term1740 _119829 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5928805 _119829 A op)). Qed.
Lemma lem5928807 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5928808 {_119829 A : Type'} : (term1690 _119829 A) = (term1690 _119829 A).
Proof. exact (MK_COMB (@lem5928807 A) (@lem5928806 _119829 A)). Qed.
Lemma lem5928809 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928810 {_119829 A : Type'} : (term1697 _119829 A) = (term1697 _119829 A).
Proof. exact (MK_COMB (@lem5928809) (@lem5928808 _119829 A)). Qed.
Lemma lem5928811 {_119829 A B C : Type'} : (term1703 _119829 A B C) = (term1703 _119829 A B C).
Proof. exact (MK_COMB (@lem5928810 _119829 A) (@lem5928785 _119829 A B C)). Qed.
Lemma lem5928822 {_119826 A : Type'} (s : A -> Prop) (f : A -> _119826) (x : A) (op : type1400 _119826) : ((term1741 _119826 A x op f s) = (term1742 _119826 A s f x op)) = ((term1741 _119826 A x op f s) = (term1742 _119826 A s f x op)).
Proof. exact (eq_refl ((term1741 _119826 A x op f s) = (term1742 _119826 A s f x op))). Qed.
Lemma lem5928823 {_119826 A : Type'} (f : A -> _119826) (x : A) (op : type1400 _119826) : (term1743 _119826 A f x op) = (term1743 _119826 A f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5928822 _119826 A s f x op)). Qed.
Lemma lem5928824 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5928825 {_119826 A : Type'} (f : A -> _119826) (x : A) (op : type1400 _119826) : (term1744 _119826 A f x op) = (term1744 _119826 A f x op).
Proof. exact (MK_COMB (@lem5928824 A) (@lem5928823 _119826 A f x op)). Qed.
Lemma lem5928826 {_119826 A : Type'} (f : A -> _119826) (op : type1400 _119826) : (term1745 _119826 A f op) = (term1745 _119826 A f op).
Proof. exact (fun_ext (fun x : A => @lem5928825 _119826 A f x op)). Qed.
Lemma lem5928827 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928828 {_119826 A : Type'} (f : A -> _119826) (op : type1400 _119826) : (term1746 _119826 A f op) = (term1746 _119826 A f op).
Proof. exact (MK_COMB (@lem5928827 A) (@lem5928826 _119826 A f op)). Qed.
Lemma lem5928829 {_119826 A : Type'} (op : type1400 _119826) : (term1747 _119826 A op) = (term1747 _119826 A op).
Proof. exact (fun_ext (fun f : A -> _119826 => @lem5928828 _119826 A f op)). Qed.
Lemma lem5928830 {_119826 A : Type'} : (@all (A -> _119826)) = (@all (A -> _119826)).
Proof. exact (eq_refl (@all (A -> _119826))). Qed.
Lemma lem5928831 {_119826 A : Type'} (op : type1400 _119826) : (term1748 _119826 A op) = (term1748 _119826 A op).
Proof. exact (MK_COMB (@lem5928830 _119826 A) (@lem5928829 _119826 A op)). Qed.
Lemma lem5928832 {_119826 A : Type'} : (term1749 _119826 A) = (term1749 _119826 A).
Proof. exact (fun_ext (fun op : type1400 _119826 => @lem5928831 _119826 A op)). Qed.
Lemma lem5928833 {_119826 : Type'} : (@all (_119826 -> _119826 -> _119826)) = (@all (_119826 -> _119826 -> _119826)).
Proof. exact (eq_refl (@all (_119826 -> _119826 -> _119826))). Qed.
Lemma lem5928834 {_119826 A : Type'} : (term1689 _119826 A) = (term1689 _119826 A).
Proof. exact (MK_COMB (@lem5928833 _119826) (@lem5928832 _119826 A)). Qed.
Lemma lem5928835 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928836 {_119826 A : Type'} : (term1704 _119826 A) = (term1704 _119826 A).
Proof. exact (MK_COMB (@lem5928835) (@lem5928834 _119826 A)). Qed.
Lemma lem5928837 {_119826 _119829 A B C : Type'} : (term1706 _119826 _119829 A B C) = (term1706 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5928836 _119826 A) (@lem5928811 _119829 A B C)). Qed.
Lemma lem5928850 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1750 A B C op g s f x y) = (term1750 A B C op g s f x y).
Proof. exact (eq_refl (term1750 A B C op g s f x y)). Qed.
Lemma lem5928851 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1751 A B C op g s f x) = (term1751 A B C op g s f x).
Proof. exact (fun_ext (fun y : A => @lem5928850 A B C op g s f x y)). Qed.
Lemma lem5928852 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928853 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1752 A B C op g s f x) = (term1752 A B C op g s f x).
Proof. exact (MK_COMB (@lem5928852 A) (@lem5928851 A B C op g s f x)). Qed.
Lemma lem5928854 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1753 A B C op g s f) = (term1753 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5928853 A B C op g s f x)). Qed.
Lemma lem5928855 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928856 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1686 A B C op g s f) = (term1686 A B C op g s f).
Proof. exact (MK_COMB (@lem5928855 A) (@lem5928854 A B C op g s f)). Qed.
Lemma lem5928857 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5928858 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1688 A B C op g s f) = (term1688 A B C op g s f).
Proof. exact (MK_COMB (@lem5928857) (@lem5928856 A B C op g s f)). Qed.
Lemma lem5928859 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928860 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1707 A B C op g s f) = (term1707 A B C op g s f).
Proof. exact (MK_COMB (@lem5928859) (@lem5928858 A B C op g s f)). Qed.
Lemma lem5928861 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1709 _119826 _119829 A B C op g s f) = (term1709 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928860 A B C op g s f) (@lem5928837 _119826 _119829 A B C)). Qed.
Lemma lem5928874 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term123 A B s f x y).
Proof. exact (eq_refl (term123 A B s f x y)). Qed.
Lemma lem5928875 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term130 A B s f x) = (term130 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5928874 A B s f x y)). Qed.
Lemma lem5928876 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928877 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term132 A B s f x) = (term132 A B s f x).
Proof. exact (MK_COMB (@lem5928876 A) (@lem5928875 A B s f x)). Qed.
Lemma lem5928878 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term134 A B s f) = (term134 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5928877 A B s f x)). Qed.
Lemma lem5928879 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928880 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term12 A B s f) = (term12 A B s f).
Proof. exact (MK_COMB (@lem5928879 A) (@lem5928878 A B s f)). Qed.
Lemma lem5928881 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928882 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term137 A B s f) = (term137 A B s f).
Proof. exact (MK_COMB (@lem5928881) (@lem5928880 A B s f)). Qed.
Lemma lem5928883 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1711 _119826 _119829 A B C op g s f) = (term1711 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928882 A B s f) (@lem5928861 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928884 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5928897 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term123 A B s f x y).
Proof. exact (eq_refl (term123 A B s f x y)). Qed.
Lemma lem5928898 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term130 A B s f x) = (term130 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5928897 A B s f x y)). Qed.
Lemma lem5928899 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928900 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term132 A B s f x) = (term132 A B s f x).
Proof. exact (MK_COMB (@lem5928899 A) (@lem5928898 A B s f x)). Qed.
Lemma lem5928901 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term134 A B s f) = (term134 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5928900 A B s f x)). Qed.
Lemma lem5928902 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5928903 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term12 A B s f) = (term12 A B s f).
Proof. exact (MK_COMB (@lem5928902 A) (@lem5928901 A B s f)). Qed.
Lemma lem5928906 {A : Type'} (s : A -> Prop) : (term255 A s) = (term255 A s).
Proof. exact (eq_refl (term255 A s)). Qed.
Lemma lem5928907 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1754 A B s f) = (term1754 A B s f).
Proof. exact (MK_COMB (@lem5928906 A s) (@lem5928903 A B s f)). Qed.
Lemma lem5928908 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928909 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1755 A B s f) = (term1755 A B s f).
Proof. exact (MK_COMB (@lem5928908) (@lem5928907 A B s f)). Qed.
Lemma lem5928910 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term119 A B C op s g f) = (term119 A B C op s g f).
Proof. exact (MK_COMB (@lem5928909 A B s f) (@lem5928884 A B C op s g f)). Qed.
Lemma lem5928911 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term143 A B C op g f) = (term143 A B C op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5928910 A B C op s g f)). Qed.
Lemma lem5928912 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5928913 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term116 A B C op g f) = (term116 A B C op g f).
Proof. exact (MK_COMB (@lem5928912 A) (@lem5928911 A B C op g f)). Qed.
Lemma lem5928914 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5928915 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1712 A B C op g f) = (term1712 A B C op g f).
Proof. exact (MK_COMB (@lem5928914) (@lem5928913 A B C op g f)). Qed.
Lemma lem5928916 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1714 _119826 _119829 A B C op g s f) = (term1714 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928915 A B C op g f) (@lem5928883 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928919 {C : Type'} (op : type1400 C) : (term336 C op) = (term336 C op).
Proof. exact (eq_refl (term336 C op)). Qed.
Lemma lem5928920 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1715 _119826 _119829 A B C op g s f) = (term1715 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5928919 C op) (@lem5928916 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928921 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1717 _119826 _119829 A B C g s f) = (term1717 _119826 _119829 A B C g s f).
Proof. exact (fun_ext (fun op : type1400 C => @lem5928920 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5928922 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5928923 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1719 _119826 _119829 A B C g s f) = (term1719 _119826 _119829 A B C g s f).
Proof. exact (MK_COMB (@lem5928922 C) (@lem5928921 _119826 _119829 A B C g s f)). Qed.
Lemma lem5928924 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term1721 _119826 _119829 A B C s f) = (term1721 _119826 _119829 A B C s f).
Proof. exact (fun_ext (fun g : B -> C => @lem5928923 _119826 _119829 A B C g s f)). Qed.
Lemma lem5928925 {B C : Type'} : (@all (B -> C)) = (@all (B -> C)).
Proof. exact (eq_refl (@all (B -> C))). Qed.
Lemma lem5928926 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term1723 _119826 _119829 A B C s f) = (term1723 _119826 _119829 A B C s f).
Proof. exact (MK_COMB (@lem5928925 B C) (@lem5928924 _119826 _119829 A B C s f)). Qed.
Lemma lem5928927 {_119826 _119829 A B C : Type'} (f : A -> B) : (term1725 _119826 _119829 A B C f) = (term1725 _119826 _119829 A B C f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5928926 _119826 _119829 A B C s f)). Qed.
Lemma lem5928928 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5928929 {_119826 _119829 A B C : Type'} (f : A -> B) : (term1727 _119826 _119829 A B C f) = (term1727 _119826 _119829 A B C f).
Proof. exact (MK_COMB (@lem5928928 A) (@lem5928927 _119826 _119829 A B C f)). Qed.
Lemma lem5928930 {_119826 _119829 A B C : Type'} : (term1729 _119826 _119829 A B C) = (term1729 _119826 _119829 A B C).
Proof. exact (fun_ext (fun f : A -> B => @lem5928929 _119826 _119829 A B C f)). Qed.
Lemma lem5928931 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5928932 {_119826 _119829 A B C : Type'} : (term1731 _119826 _119829 A B C) = (term1731 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5928931 A B) (@lem5928930 _119826 _119829 A B C)). Qed.
Lemma lem5929169 {_119826 _119829 A B C : Type'} : (term1730 _119826 _119829 A B C) = (term1731 _119826 _119829 A B C).
Proof. exact (TRANS (@lem5928708 _119826 _119829 A B C) (@lem5928932 _119826 _119829 A B C)). Qed.
Lemma lem5929170 {_119826 _119829 A B C : Type'} : (term1731 _119826 _119829 A B C) = (term1730 _119826 _119829 A B C).
Proof. exact (SYM (@lem5929169 _119826 _119829 A B C)). Qed.
Lemma lem5929172 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term116 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5929173 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term12 A B s f.
Proof. exact (h1). Qed.
Lemma lem5929174 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1688 A B C op g s f) : term1688 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5929179 {A C : Type'} (h1 : term1690 A C) : term1690 A C.
Proof. exact (h1). Qed.
Lemma lem5929201 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1756 A B s f x y) = (term1757 A B s f x y).
Proof. exact (@lem17362 (term1758 A B s x f y) (x = y)). Qed.
Lemma lem5929202 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5929203 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1759 A B s f x) = (term1760 A B s f x).
Proof. exact (@lem5929202 A (term130 A B s f x)). Qed.
Lemma lem5929204 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1761 A B s f x y) = (term123 A B s f x y).
Proof. exact (eq_refl (term1761 A B s f x y)). Qed.
Lemma lem5929205 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5929206 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1762 A B s f x y) = (term1756 A B s f x y).
Proof. exact (MK_COMB (@lem5929205) (@lem5929204 A B s f x y)). Qed.
Lemma lem5929207 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1762 A B s f x y) = (term1757 A B s f x y).
Proof. exact (TRANS (@lem5929206 A B s f x y) (@lem5929201 A B s f x y)). Qed.
Lemma lem5929208 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1763 A B s f x) = (term1764 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5929207 A B s f x y)). Qed.
Lemma lem5929209 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929210 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1760 A B s f x) = (term1765 A B s f x).
Proof. exact (MK_COMB (@lem5929209 A) (@lem5929208 A B s f x)). Qed.
Lemma lem5929211 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1759 A B s f x) = (term1765 A B s f x).
Proof. exact (TRANS (@lem5929203 A B s f x) (@lem5929210 A B s f x)). Qed.
Lemma lem5929212 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5929213 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1766 A B s f) = (term1767 A B s f).
Proof. exact (@lem5929212 A (term134 A B s f)). Qed.
Lemma lem5929214 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1768 A B s f x) = (term132 A B s f x).
Proof. exact (eq_refl (term1768 A B s f x)). Qed.
Lemma lem5929215 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5929216 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1769 A B s f x) = (term1759 A B s f x).
Proof. exact (MK_COMB (@lem5929215) (@lem5929214 A B s f x)). Qed.
Lemma lem5929217 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1769 A B s f x) = (term1765 A B s f x).
Proof. exact (TRANS (@lem5929216 A B s f x) (@lem5929211 A B s f x)). Qed.
Lemma lem5929218 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1770 A B s f) = (term1771 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5929217 A B s f x)). Qed.
Lemma lem5929219 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929220 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1767 A B s f) = (term1772 A B s f).
Proof. exact (MK_COMB (@lem5929219 A) (@lem5929218 A B s f)). Qed.
Lemma lem5929221 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1766 A B s f) = (term1772 A B s f).
Proof. exact (TRANS (@lem5929213 A B s f) (@lem5929220 A B s f)). Qed.
Lemma lem5929223 {A : Type'} (s : A -> Prop) : (term1773 A s) = (term1773 A s).
Proof. exact (eq_refl (term1773 A s)). Qed.
Lemma lem5929224 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1774 A B s f) = (term1775 A B s f).
Proof. exact (MK_COMB (@lem5929223 A s) (@lem5929221 A B s f)). Qed.
Lemma lem5929225 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1776 A B s f) = (term1774 A B s f).
Proof. exact (@lem17045 (@FINITE A s) (term12 A B s f)). Qed.
Lemma lem5929226 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1776 A B s f) = (term1775 A B s f).
Proof. exact (TRANS (@lem5929225 A B s f) (@lem5929224 A B s f)). Qed.
Lemma lem5929227 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929228 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929229 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1777 A B s f) = (term1778 A B s f).
Proof. exact (MK_COMB (@lem5929228) (@lem5929226 A B s f)). Qed.
Lemma lem5929230 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1779 A B C op s g f) = (term1780 A B C op s g f).
Proof. exact (MK_COMB (@lem5929229 A B s f) (@lem5929227 A B C op s g f)). Qed.
Lemma lem5929231 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term119 A B C op s g f) = (term1779 A B C op s g f).
Proof. exact (@lem17265 (term1754 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929232 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term119 A B C op s g f) = (term1780 A B C op s g f).
Proof. exact (TRANS (@lem5929231 A B C op s g f) (@lem5929230 A B C op s g f)). Qed.
Lemma lem5929233 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term143 A B C op g f) = (term1781 A B C op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5929232 A B C op s g f)). Qed.
Lemma lem5929234 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5929235 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term116 A B C op g f) = (term1782 A B C op g f).
Proof. exact (MK_COMB (@lem5929234 A) (@lem5929233 A B C op g f)). Qed.
Lemma lem5929338 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5929339 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5929338 A P Q). Qed.
Lemma lem5929340 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1783 A B s f) = (term1784 A B s f).
Proof. exact (@lem5929339 A (term1785 A s) (term1771 A B s f)). Qed.
Lemma lem5929341 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1786 A B s f x) = (term1765 A B s f x).
Proof. exact (eq_refl (term1786 A B s f x)). Qed.
Lemma lem5929342 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1787 A B s f) = (term1771 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5929341 A B s f x)). Qed.
Lemma lem5929343 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929344 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1788 A B s f) = (term1772 A B s f).
Proof. exact (MK_COMB (@lem5929343 A) (@lem5929342 A B s f)). Qed.
Lemma lem5929345 {A : Type'} (s : A -> Prop) : (term1773 A s) = (term1773 A s).
Proof. exact (eq_refl (term1773 A s)). Qed.
Lemma lem5929346 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1783 A B s f) = (term1775 A B s f).
Proof. exact (MK_COMB (@lem5929345 A s) (@lem5929344 A B s f)). Qed.
Lemma lem5929347 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5929348 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1789 A B s f) = (term1790 A B s f).
Proof. exact (MK_COMB (@lem5929347) (@lem5929346 A B s f)). Qed.
Lemma lem5929349 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1786 A B s f x) = (term1765 A B s f x).
Proof. exact (eq_refl (term1786 A B s f x)). Qed.
Lemma lem5929350 {A : Type'} (s : A -> Prop) : (term1773 A s) = (term1773 A s).
Proof. exact (eq_refl (term1773 A s)). Qed.
Lemma lem5929351 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1791 A B s f x) = (term1792 A B s f x).
Proof. exact (MK_COMB (@lem5929350 A s) (@lem5929349 A B s f x)). Qed.
Lemma lem5929352 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1793 A B s f) = (term1794 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5929351 A B s f x)). Qed.
Lemma lem5929353 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929354 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1784 A B s f) = (term1795 A B s f).
Proof. exact (MK_COMB (@lem5929353 A) (@lem5929352 A B s f)). Qed.
Lemma lem5929355 {A B : Type'} (s : A -> Prop) (f : A -> B) : ((term1783 A B s f) = (term1784 A B s f)) = ((term1775 A B s f) = (term1795 A B s f)).
Proof. exact (MK_COMB (@lem5929348 A B s f) (@lem5929354 A B s f)). Qed.
Lemma lem5929356 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1775 A B s f) = (term1795 A B s f).
Proof. exact (EQ_MP (@lem5929355 A B s f) (@lem5929340 A B s f)). Qed.
Lemma lem5929358 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5929359 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5929358 A P Q). Qed.
Lemma lem5929360 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1796 A B s f x) = (term1797 A B s f x).
Proof. exact (@lem5929359 A (term1785 A s) (term1764 A B s f x)). Qed.
Lemma lem5929361 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1798 A B s f x y) = (term1757 A B s f x y).
Proof. exact (eq_refl (term1798 A B s f x y)). Qed.
Lemma lem5929362 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1799 A B s f x) = (term1764 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5929361 A B s f x y)). Qed.
Lemma lem5929363 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929364 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1800 A B s f x) = (term1765 A B s f x).
Proof. exact (MK_COMB (@lem5929363 A) (@lem5929362 A B s f x)). Qed.
Lemma lem5929365 {A : Type'} (s : A -> Prop) : (term1773 A s) = (term1773 A s).
Proof. exact (eq_refl (term1773 A s)). Qed.
Lemma lem5929366 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1796 A B s f x) = (term1792 A B s f x).
Proof. exact (MK_COMB (@lem5929365 A s) (@lem5929364 A B s f x)). Qed.
Lemma lem5929367 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5929368 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1801 A B s f x) = (term1802 A B s f x).
Proof. exact (MK_COMB (@lem5929367) (@lem5929366 A B s f x)). Qed.
Lemma lem5929369 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1798 A B s f x y) = (term1757 A B s f x y).
Proof. exact (eq_refl (term1798 A B s f x y)). Qed.
Lemma lem5929370 {A : Type'} (s : A -> Prop) : (term1773 A s) = (term1773 A s).
Proof. exact (eq_refl (term1773 A s)). Qed.
Lemma lem5929371 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1803 A B s f x y) = (term1804 A B s f x y).
Proof. exact (MK_COMB (@lem5929370 A s) (@lem5929369 A B s f x y)). Qed.
Lemma lem5929372 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1805 A B s f x) = (term1806 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5929371 A B s f x y)). Qed.
Lemma lem5929373 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929374 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1797 A B s f x) = (term1807 A B s f x).
Proof. exact (MK_COMB (@lem5929373 A) (@lem5929372 A B s f x)). Qed.
Lemma lem5929375 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : ((term1796 A B s f x) = (term1797 A B s f x)) = ((term1792 A B s f x) = (term1807 A B s f x)).
Proof. exact (MK_COMB (@lem5929368 A B s f x) (@lem5929374 A B s f x)). Qed.
Lemma lem5929376 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1792 A B s f x) = (term1807 A B s f x).
Proof. exact (EQ_MP (@lem5929375 A B s f x) (@lem5929360 A B s f x)). Qed.
Lemma lem5929377 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1794 A B s f) = (term1808 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5929376 A B s f x)). Qed.
Lemma lem5929378 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929379 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1795 A B s f) = (term1809 A B s f).
Proof. exact (MK_COMB (@lem5929378 A) (@lem5929377 A B s f)). Qed.
Lemma lem5929380 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1775 A B s f) = (term1809 A B s f).
Proof. exact (TRANS (@lem5929356 A B s f) (@lem5929379 A B s f)). Qed.
Lemma lem5929381 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929382 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1778 A B s f) = (term1810 A B s f).
Proof. exact (MK_COMB (@lem5929381) (@lem5929380 A B s f)). Qed.
Lemma lem5929383 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929384 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1780 A B C op s g f) = (term1811 A B C op s g f).
Proof. exact (MK_COMB (@lem5929382 A B s f) (@lem5929383 A B C op s g f)). Qed.
Lemma lem5929386 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5929387 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (@lem5929386 A P Q). Qed.
Lemma lem5929388 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1812 A B C op s g f) = (term1813 A B C op s g f).
Proof. exact (@lem5929387 A (term1808 A B s f) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929389 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1814 A B s f x) = (term1807 A B s f x).
Proof. exact (eq_refl (term1814 A B s f x)). Qed.
Lemma lem5929390 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1815 A B s f) = (term1808 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5929389 A B s f x)). Qed.
Lemma lem5929391 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929392 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1816 A B s f) = (term1809 A B s f).
Proof. exact (MK_COMB (@lem5929391 A) (@lem5929390 A B s f)). Qed.
Lemma lem5929393 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929394 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1817 A B s f) = (term1810 A B s f).
Proof. exact (MK_COMB (@lem5929393) (@lem5929392 A B s f)). Qed.
Lemma lem5929395 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929396 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1812 A B C op s g f) = (term1811 A B C op s g f).
Proof. exact (MK_COMB (@lem5929394 A B s f) (@lem5929395 A B C op s g f)). Qed.
Lemma lem5929397 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5929398 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1818 A B C op s g f) = (term1819 A B C op s g f).
Proof. exact (MK_COMB (@lem5929397) (@lem5929396 A B C op s g f)). Qed.
Lemma lem5929399 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1814 A B s f x) = (term1807 A B s f x).
Proof. exact (eq_refl (term1814 A B s f x)). Qed.
Lemma lem5929400 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929401 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1820 A B s f x) = (term1821 A B s f x).
Proof. exact (MK_COMB (@lem5929400) (@lem5929399 A B s f x)). Qed.
Lemma lem5929402 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929403 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1822 A B C x op s g f) = (term1823 A B C x op s g f).
Proof. exact (MK_COMB (@lem5929401 A B s f x) (@lem5929402 A B C op s g f)). Qed.
Lemma lem5929404 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1824 A B C op s g f) = (term1825 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5929403 A B C x op s g f)). Qed.
Lemma lem5929405 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929406 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1813 A B C op s g f) = (term1826 A B C op s g f).
Proof. exact (MK_COMB (@lem5929405 A) (@lem5929404 A B C op s g f)). Qed.
Lemma lem5929407 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term1812 A B C op s g f) = (term1813 A B C op s g f)) = ((term1811 A B C op s g f) = (term1826 A B C op s g f)).
Proof. exact (MK_COMB (@lem5929398 A B C op s g f) (@lem5929406 A B C op s g f)). Qed.
Lemma lem5929408 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1811 A B C op s g f) = (term1826 A B C op s g f).
Proof. exact (EQ_MP (@lem5929407 A B C op s g f) (@lem5929388 A B C op s g f)). Qed.
Lemma lem5929410 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5929411 {A : Type'} (P : A -> Prop) (Q : Prop) : (term601 A P Q) = (term602 A P Q).
Proof. exact (@lem5929410 A P Q). Qed.
Lemma lem5929412 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1827 A B C x op s g f) = (term1828 A B C x op s g f).
Proof. exact (@lem5929411 A (term1806 A B s f x) ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929413 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1829 A B s f x y) = (term1804 A B s f x y).
Proof. exact (eq_refl (term1829 A B s f x y)). Qed.
Lemma lem5929414 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1830 A B s f x) = (term1806 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5929413 A B s f x y)). Qed.
Lemma lem5929415 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929416 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1831 A B s f x) = (term1807 A B s f x).
Proof. exact (MK_COMB (@lem5929415 A) (@lem5929414 A B s f x)). Qed.
Lemma lem5929417 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929418 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1832 A B s f x) = (term1821 A B s f x).
Proof. exact (MK_COMB (@lem5929417) (@lem5929416 A B s f x)). Qed.
Lemma lem5929419 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929420 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1827 A B C x op s g f) = (term1823 A B C x op s g f).
Proof. exact (MK_COMB (@lem5929418 A B s f x) (@lem5929419 A B C op s g f)). Qed.
Lemma lem5929421 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5929422 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1833 A B C x op s g f) = (term1834 A B C x op s g f).
Proof. exact (MK_COMB (@lem5929421) (@lem5929420 A B C x op s g f)). Qed.
Lemma lem5929423 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1829 A B s f x y) = (term1804 A B s f x y).
Proof. exact (eq_refl (term1829 A B s f x y)). Qed.
Lemma lem5929424 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929425 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1835 A B s f x y) = (term1836 A B s f x y).
Proof. exact (MK_COMB (@lem5929424) (@lem5929423 A B s f x y)). Qed.
Lemma lem5929426 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term121 A B C op f s g) = (term122 A B C op s g f)) = ((term121 A B C op f s g) = (term122 A B C op s g f)).
Proof. exact (eq_refl ((term121 A B C op f s g) = (term122 A B C op s g f))). Qed.
Lemma lem5929427 {A B C : Type'} (x : A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1837 A B C x y op s g f) = (term1838 A B C x y op s g f).
Proof. exact (MK_COMB (@lem5929425 A B s f x y) (@lem5929426 A B C op s g f)). Qed.
Lemma lem5929428 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1839 A B C x op s g f) = (term1840 A B C x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5929427 A B C x y op s g f)). Qed.
Lemma lem5929429 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929430 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1828 A B C x op s g f) = (term1841 A B C x op s g f).
Proof. exact (MK_COMB (@lem5929429 A) (@lem5929428 A B C x op s g f)). Qed.
Lemma lem5929431 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : ((term1827 A B C x op s g f) = (term1828 A B C x op s g f)) = ((term1823 A B C x op s g f) = (term1841 A B C x op s g f)).
Proof. exact (MK_COMB (@lem5929422 A B C x op s g f) (@lem5929430 A B C x op s g f)). Qed.
Lemma lem5929432 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1823 A B C x op s g f) = (term1841 A B C x op s g f).
Proof. exact (EQ_MP (@lem5929431 A B C x op s g f) (@lem5929412 A B C x op s g f)). Qed.
Lemma lem5929433 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1825 A B C op s g f) = (term1842 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5929432 A B C x op s g f)). Qed.
Lemma lem5929434 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929435 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1826 A B C op s g f) = (term1843 A B C op s g f).
Proof. exact (MK_COMB (@lem5929434 A) (@lem5929433 A B C op s g f)). Qed.
Lemma lem5929436 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1811 A B C op s g f) = (term1843 A B C op s g f).
Proof. exact (TRANS (@lem5929408 A B C op s g f) (@lem5929435 A B C op s g f)). Qed.
Lemma lem5929437 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1780 A B C op s g f) = (term1843 A B C op s g f).
Proof. exact (TRANS (@lem5929384 A B C op s g f) (@lem5929436 A B C op s g f)). Qed.
Lemma lem5929438 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1781 A B C op g f) = (term1844 A B C op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5929437 A B C op s g f)). Qed.
Lemma lem5929439 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5929440 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1782 A B C op g f) = (term1845 A B C op g f).
Proof. exact (MK_COMB (@lem5929439 A) (@lem5929438 A B C op g f)). Qed.
Lemma lem5929442 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5929443 {A : Type'} (P : type672 A) : (term1846 A P) = (term1847 A P).
Proof. exact (@lem5929442 (A -> Prop) A P). Qed.
Lemma lem5929444 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1848 A B C op g f) = (term1849 A B C op g f).
Proof. exact (@lem5929443 A (term1850 A B C op g f)). Qed.
Lemma lem5929445 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1851 A B C op g f s) = (term1842 A B C op s g f).
Proof. exact (eq_refl (term1851 A B C op g f s)). Qed.
Lemma lem5929446 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5929447 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (x : A) : (term1852 A B C op g f s x) = (term1853 A B C op s g f x).
Proof. exact (MK_COMB (@lem5929445 A B C op s g f) (@lem5929446 A x)). Qed.
Lemma lem5929448 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1853 A B C op s g f x) = (term1841 A B C x op s g f).
Proof. exact (eq_refl (term1853 A B C op s g f x)). Qed.
Lemma lem5929449 {A B C : Type'} (x : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1852 A B C op g f s x) = (term1841 A B C x op s g f).
Proof. exact (TRANS (@lem5929447 A B C op s g f x) (@lem5929448 A B C x op s g f)). Qed.
Lemma lem5929450 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1854 A B C op g f s) = (term1842 A B C op s g f).
Proof. exact (fun_ext (fun x : A => @lem5929449 A B C x op s g f)). Qed.
Lemma lem5929451 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929452 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1855 A B C op g f s) = (term1843 A B C op s g f).
Proof. exact (MK_COMB (@lem5929451 A) (@lem5929450 A B C op s g f)). Qed.
Lemma lem5929453 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1856 A B C op g f) = (term1844 A B C op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5929452 A B C op s g f)). Qed.
Lemma lem5929454 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5929455 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1848 A B C op g f) = (term1845 A B C op g f).
Proof. exact (MK_COMB (@lem5929454 A) (@lem5929453 A B C op g f)). Qed.
Lemma lem5929456 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5929457 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1857 A B C op g f) = (term1858 A B C op g f).
Proof. exact (MK_COMB (@lem5929456) (@lem5929455 A B C op g f)). Qed.
Lemma lem5929458 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1851 A B C op g f s) = (term1842 A B C op s g f).
Proof. exact (eq_refl (term1851 A B C op g f s)). Qed.
Lemma lem5929459 {A : Type'} (x : type684 A) (s : A -> Prop) : (x s) = (x s).
Proof. exact (eq_refl (x s)). Qed.
Lemma lem5929460 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : type684 A) (s : A -> Prop) : (term1859 A B C op g f x s) = (term1860 A B C op g f x s).
Proof. exact (MK_COMB (@lem5929458 A B C op s g f) (@lem5929459 A x s)). Qed.
Lemma lem5929461 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1860 A B C op g f x s) = (term1861 A B C x op s g f).
Proof. exact (eq_refl (term1860 A B C op g f x s)). Qed.
Lemma lem5929462 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1859 A B C op g f x s) = (term1861 A B C x op s g f).
Proof. exact (TRANS (@lem5929460 A B C op g f x s) (@lem5929461 A B C x op s g f)). Qed.
Lemma lem5929463 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1862 A B C op g f x) = (term1863 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5929462 A B C x op s g f)). Qed.
Lemma lem5929464 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5929465 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1864 A B C op g f x) = (term1865 A B C x op g f).
Proof. exact (MK_COMB (@lem5929464 A) (@lem5929463 A B C x op g f)). Qed.
Lemma lem5929466 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1866 A B C op g f) = (term1867 A B C op g f).
Proof. exact (fun_ext (fun x : type684 A => @lem5929465 A B C x op g f)). Qed.
Lemma lem5929467 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem5929468 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1849 A B C op g f) = (term1868 A B C op g f).
Proof. exact (MK_COMB (@lem5929467 A) (@lem5929466 A B C op g f)). Qed.
Lemma lem5929469 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : ((term1848 A B C op g f) = (term1849 A B C op g f)) = ((term1845 A B C op g f) = (term1868 A B C op g f)).
Proof. exact (MK_COMB (@lem5929457 A B C op g f) (@lem5929468 A B C op g f)). Qed.
Lemma lem5929470 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1845 A B C op g f) = (term1868 A B C op g f).
Proof. exact (EQ_MP (@lem5929469 A B C op g f) (@lem5929444 A B C op g f)). Qed.
Lemma lem5929472 {A B : Type'} (P : type1413 A B) : (term980 A B P) = (term981 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5929473 {A : Type'} (P : type672 A) : (term1846 A P) = (term1847 A P).
Proof. exact (@lem5929472 (A -> Prop) A P). Qed.
Lemma lem5929474 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1869 A B C x op g f) = (term1870 A B C x op g f).
Proof. exact (@lem5929473 A (term1871 A B C x op g f)). Qed.
Lemma lem5929475 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1872 A B C x op g f s) = (term1873 A B C x op s g f).
Proof. exact (eq_refl (term1872 A B C x op g f s)). Qed.
Lemma lem5929476 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5929477 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) (y : A) : (term1874 A B C x op g f s y) = (term1875 A B C x op s g f y).
Proof. exact (MK_COMB (@lem5929475 A B C x op s g f) (@lem5929476 A y)). Qed.
Lemma lem5929478 {A B C : Type'} (x : type684 A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1875 A B C x op s g f y) = (term1876 A B C x y op s g f).
Proof. exact (eq_refl (term1875 A B C x op s g f y)). Qed.
Lemma lem5929479 {A B C : Type'} (x : type684 A) (y : A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1874 A B C x op g f s y) = (term1876 A B C x y op s g f).
Proof. exact (TRANS (@lem5929477 A B C x op s g f y) (@lem5929478 A B C x y op s g f)). Qed.
Lemma lem5929480 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1877 A B C x op g f s) = (term1873 A B C x op s g f).
Proof. exact (fun_ext (fun y : A => @lem5929479 A B C x y op s g f)). Qed.
Lemma lem5929481 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929482 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1878 A B C x op g f s) = (term1861 A B C x op s g f).
Proof. exact (MK_COMB (@lem5929481 A) (@lem5929480 A B C x op s g f)). Qed.
Lemma lem5929483 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1879 A B C x op g f) = (term1863 A B C x op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5929482 A B C x op s g f)). Qed.
Lemma lem5929484 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5929485 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1869 A B C x op g f) = (term1865 A B C x op g f).
Proof. exact (MK_COMB (@lem5929484 A) (@lem5929483 A B C x op g f)). Qed.
Lemma lem5929486 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5929487 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1880 A B C x op g f) = (term1881 A B C x op g f).
Proof. exact (MK_COMB (@lem5929486) (@lem5929485 A B C x op g f)). Qed.
Lemma lem5929488 {A B C : Type'} (x : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1872 A B C x op g f s) = (term1873 A B C x op s g f).
Proof. exact (eq_refl (term1872 A B C x op g f s)). Qed.
Lemma lem5929489 {A : Type'} (y : type684 A) (s : A -> Prop) : (y s) = (y s).
Proof. exact (eq_refl (y s)). Qed.
Lemma lem5929490 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) (y : type684 A) (s : A -> Prop) : (term1882 A B C x op g f y s) = (term1883 A B C x op g f y s).
Proof. exact (MK_COMB (@lem5929488 A B C x op s g f) (@lem5929489 A y s)). Qed.
Lemma lem5929491 {A B C : Type'} (x : type684 A) (y : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1883 A B C x op g f y s) = (term1884 A B C x y op s g f).
Proof. exact (eq_refl (term1883 A B C x op g f y s)). Qed.
Lemma lem5929492 {A B C : Type'} (x : type684 A) (y : type684 A) (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term1882 A B C x op g f y s) = (term1884 A B C x y op s g f).
Proof. exact (TRANS (@lem5929490 A B C x op g f y s) (@lem5929491 A B C x y op s g f)). Qed.
Lemma lem5929493 {A B C : Type'} (x : type684 A) (y : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1885 A B C x op g f y) = (term1886 A B C x y op g f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5929492 A B C x y op s g f)). Qed.
Lemma lem5929494 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5929495 {A B C : Type'} (x : type684 A) (y : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1887 A B C x op g f y) = (term1888 A B C x y op g f).
Proof. exact (MK_COMB (@lem5929494 A) (@lem5929493 A B C x y op g f)). Qed.
Lemma lem5929496 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1889 A B C x op g f) = (term1890 A B C x op g f).
Proof. exact (fun_ext (fun y : type684 A => @lem5929495 A B C x y op g f)). Qed.
Lemma lem5929497 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem5929498 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1870 A B C x op g f) = (term1891 A B C x op g f).
Proof. exact (MK_COMB (@lem5929497 A) (@lem5929496 A B C x op g f)). Qed.
Lemma lem5929499 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : ((term1869 A B C x op g f) = (term1870 A B C x op g f)) = ((term1865 A B C x op g f) = (term1891 A B C x op g f)).
Proof. exact (MK_COMB (@lem5929487 A B C x op g f) (@lem5929498 A B C x op g f)). Qed.
Lemma lem5929500 {A B C : Type'} (x : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) : (term1865 A B C x op g f) = (term1891 A B C x op g f).
Proof. exact (EQ_MP (@lem5929499 A B C x op g f) (@lem5929474 A B C x op g f)). Qed.
Lemma lem5929501 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1867 A B C op g f) = (term1892 A B C op g f).
Proof. exact (fun_ext (fun x : type684 A => @lem5929500 A B C x op g f)). Qed.
Lemma lem5929502 {A : Type'} : (@ex ((A -> Prop) -> A)) = (@ex ((A -> Prop) -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A))). Qed.
Lemma lem5929503 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1868 A B C op g f) = (term1893 A B C op g f).
Proof. exact (MK_COMB (@lem5929502 A) (@lem5929501 A B C op g f)). Qed.
Lemma lem5929504 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1845 A B C op g f) = (term1893 A B C op g f).
Proof. exact (TRANS (@lem5929470 A B C op g f) (@lem5929503 A B C op g f)). Qed.
Lemma lem5929506 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term1782 A B C op g f) = (term1893 A B C op g f).
Proof. exact (TRANS (@lem5929440 A B C op g f) (@lem5929504 A B C op g f)). Qed.
Lemma lem5929507 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term116 A B C op g f) = (term1893 A B C op g f).
Proof. exact (TRANS (@lem5929235 A B C op g f) (@lem5929506 A B C op g f)). Qed.
Lemma lem5929508 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term1893 A B C op g f.
Proof. exact (EQ_MP (@lem5929507 A B C op g f) (@lem5929172 A B C op g f h1)). Qed.
Lemma lem5929516 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1894 A B s x f y) = (term1895 A B s x f y).
Proof. exact (@lem17045 (@IN A y s) ((f x) = (f y))). Qed.
Lemma lem5929518 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1896 A x s).
Proof. exact (eq_refl (term1896 A x s)). Qed.
Lemma lem5929519 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1897 A B s x f y) = (term1898 A B s x f y).
Proof. exact (MK_COMB (@lem5929518 A x s) (@lem5929516 A B s x f y)). Qed.
Lemma lem5929520 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1899 A B s x f y) = (term1897 A B s x f y).
Proof. exact (@lem17045 (@IN A x s) (term125 A B s x f y)). Qed.
Lemma lem5929521 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1899 A B s x f y) = (term1898 A B s x f y).
Proof. exact (TRANS (@lem5929520 A B s x f y) (@lem5929519 A B s x f y)). Qed.
Lemma lem5929522 {A : Type'} (x : A) (y : A) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem5929523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5929524 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1900 A B s x f y) = (term1901 A B s x f y).
Proof. exact (MK_COMB (@lem5929523) (@lem5929521 A B s x f y)). Qed.
Lemma lem5929525 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1902 A B s f x y) = (term1903 A B s f x y).
Proof. exact (MK_COMB (@lem5929524 A B s x f y) (@lem5929522 A x y)). Qed.
Lemma lem5929526 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term1902 A B s f x y).
Proof. exact (@lem17265 (term1758 A B s x f y) (x = y)). Qed.
Lemma lem5929527 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term1903 A B s f x y).
Proof. exact (TRANS (@lem5929526 A B s f x y) (@lem5929525 A B s f x y)). Qed.
Lemma lem5929528 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term130 A B s f x) = (term1904 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5929527 A B s f x y)). Qed.
Lemma lem5929529 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5929530 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term132 A B s f x) = (term1905 A B s f x).
Proof. exact (MK_COMB (@lem5929529 A) (@lem5929528 A B s f x)). Qed.
Lemma lem5929531 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term134 A B s f) = (term1906 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5929530 A B s f x)). Qed.
Lemma lem5929532 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5929589 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term12 A B s f) = (term1907 A B s f).
Proof. exact (MK_COMB (@lem5929532 A) (@lem5929531 A B s f)). Qed.
Lemma lem5929590 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1907 A B s f.
Proof. exact (EQ_MP (@lem5929589 A B s f) (@lem5929173 A B s f h1)). Qed.
Lemma lem5929605 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1908 A B C op g s f x y) = (term1909 A B C op g s f x y).
Proof. exact (@lem17362 (term1910 A B C op g s x f y) (x = y)). Qed.
Lemma lem5929606 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5929607 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1911 A B C op g s f x) = (term1912 A B C op g s f x).
Proof. exact (@lem5929606 A (term1751 A B C op g s f x)). Qed.
Lemma lem5929608 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1913 A B C op g s f x y) = (term1750 A B C op g s f x y).
Proof. exact (eq_refl (term1913 A B C op g s f x y)). Qed.
Lemma lem5929609 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5929610 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1914 A B C op g s f x y) = (term1908 A B C op g s f x y).
Proof. exact (MK_COMB (@lem5929609) (@lem5929608 A B C op g s f x y)). Qed.
Lemma lem5929611 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1914 A B C op g s f x y) = (term1909 A B C op g s f x y).
Proof. exact (TRANS (@lem5929610 A B C op g s f x y) (@lem5929605 A B C op g s f x y)). Qed.
Lemma lem5929612 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1915 A B C op g s f x) = (term1916 A B C op g s f x).
Proof. exact (fun_ext (fun y : A => @lem5929611 A B C op g s f x y)). Qed.
Lemma lem5929613 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929614 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1912 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (MK_COMB (@lem5929613 A) (@lem5929612 A B C op g s f x)). Qed.
Lemma lem5929615 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1911 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (TRANS (@lem5929607 A B C op g s f x) (@lem5929614 A B C op g s f x)). Qed.
Lemma lem5929616 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5929617 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1688 A B C op g s f) = (term1918 A B C op g s f).
Proof. exact (@lem5929616 A (term1753 A B C op g s f)). Qed.
Lemma lem5929618 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1919 A B C op g s f x) = (term1752 A B C op g s f x).
Proof. exact (eq_refl (term1919 A B C op g s f x)). Qed.
Lemma lem5929619 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5929620 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1920 A B C op g s f x) = (term1911 A B C op g s f x).
Proof. exact (MK_COMB (@lem5929619) (@lem5929618 A B C op g s f x)). Qed.
Lemma lem5929621 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1920 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (TRANS (@lem5929620 A B C op g s f x) (@lem5929615 A B C op g s f x)). Qed.
Lemma lem5929622 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1921 A B C op g s f) = (term1922 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5929621 A B C op g s f x)). Qed.
Lemma lem5929623 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5929624 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1918 A B C op g s f) = (term1923 A B C op g s f).
Proof. exact (MK_COMB (@lem5929623 A) (@lem5929622 A B C op g s f)). Qed.
Lemma lem5929681 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1688 A B C op g s f) = (term1923 A B C op g s f).
Proof. exact (TRANS (@lem5929617 A B C op g s f) (@lem5929624 A B C op g s f)). Qed.
Lemma lem5929682 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1688 A B C op g s f) : term1923 A B C op g s f.
Proof. exact (EQ_MP (@lem5929681 A B C op g s f) (@lem5929174 A B C op g s f h1)). Qed.
Lemma lem5932118 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1924 A C f x op) = ((f x) = (@neutral C op)).
Proof. exact (@lem16933 ((f x) = (@neutral C op))). Qed.
Lemma lem5932120 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1896 A x s).
Proof. exact (eq_refl (term1896 A x s)). Qed.
Lemma lem5932121 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1925 A C s f x op) = (term1926 A C s f x op).
Proof. exact (MK_COMB (@lem5932120 A x s) (@lem5932118 A C f x op)). Qed.
Lemma lem5932122 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1927 A C s f x op) = (term1925 A C s f x op).
Proof. exact (@lem17045 (@IN A x s) (term1928 A C f x op)). Qed.
Lemma lem5932123 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1927 A C s f x op) = (term1926 A C s f x op).
Proof. exact (TRANS (@lem5932122 A C s f x op) (@lem5932121 A C s f x op)). Qed.
Lemma lem5932129 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1929 A C s f x op) = (term1929 A C s f x op).
Proof. exact (eq_refl (term1929 A C s f x op)). Qed.
Lemma lem5932131 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1930 A C x op f s) = (term1930 A C x op f s).
Proof. exact (eq_refl (term1930 A C x op f s)). Qed.
Lemma lem5932132 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1931 A C s f x op) = (term1932 A C s f x op).
Proof. exact (MK_COMB (@lem5932131 A C x op f s) (@lem5932123 A C s f x op)). Qed.
Lemma lem5932133 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932134 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1933 A C s f x op) = (term1934 A C s f x op).
Proof. exact (MK_COMB (@lem5932133) (@lem5932132 A C s f x op)). Qed.
Lemma lem5932135 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1935 A C s f x op) = (term1936 A C s f x op).
Proof. exact (MK_COMB (@lem5932134 A C s f x op) (@lem5932129 A C s f x op)). Qed.
Lemma lem5932136 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : ((term1732 A C x op f s) = (term1733 A C s f x op)) = (term1935 A C s f x op).
Proof. exact (@lem17784 (term1732 A C x op f s) (term1733 A C s f x op)). Qed.
Lemma lem5932137 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : ((term1732 A C x op f s) = (term1733 A C s f x op)) = (term1936 A C s f x op).
Proof. exact (TRANS (@lem5932136 A C s f x op) (@lem5932135 A C s f x op)). Qed.
Lemma lem5932138 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1734 A C f x op) = (term1937 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5932137 A C s f x op)). Qed.
Lemma lem5932139 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5932140 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1735 A C f x op) = (term1938 A C f x op).
Proof. exact (MK_COMB (@lem5932139 A) (@lem5932138 A C f x op)). Qed.
Lemma lem5932141 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1736 A C f op) = (term1939 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5932140 A C f x op)). Qed.
Lemma lem5932142 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932143 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1737 A C f op) = (term1940 A C f op).
Proof. exact (MK_COMB (@lem5932142 A) (@lem5932141 A C f op)). Qed.
Lemma lem5932144 {A C : Type'} (op : type1400 C) : (term1738 A C op) = (term1941 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5932143 A C f op)). Qed.
Lemma lem5932145 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5932146 {A C : Type'} (op : type1400 C) : (term1739 A C op) = (term1942 A C op).
Proof. exact (MK_COMB (@lem5932145 A C) (@lem5932144 A C op)). Qed.
Lemma lem5932147 {A C : Type'} : (term1740 A C) = (term1943 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5932146 A C op)). Qed.
Lemma lem5932148 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5932149 {A C : Type'} : (term1690 A C) = (term1944 A C).
Proof. exact (MK_COMB (@lem5932148 C) (@lem5932147 A C)). Qed.
Lemma lem5932163 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5932164 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem5932163 (A -> Prop) P Q). Qed.
Lemma lem5932165 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1945 A C f x op) = (term1946 A C f x op).
Proof. exact (@lem5932164 A (term1947 A C f x op) (term1948 A C f x op)). Qed.
Lemma lem5932166 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1949 A C f x op s) = (term1932 A C s f x op).
Proof. exact (eq_refl (term1949 A C f x op s)). Qed.
Lemma lem5932167 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932168 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1950 A C f x op s) = (term1934 A C s f x op).
Proof. exact (MK_COMB (@lem5932167) (@lem5932166 A C s f x op)). Qed.
Lemma lem5932169 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1951 A C f x op s) = (term1929 A C s f x op).
Proof. exact (eq_refl (term1951 A C f x op s)). Qed.
Lemma lem5932170 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1952 A C f x op s) = (term1936 A C s f x op).
Proof. exact (MK_COMB (@lem5932168 A C s f x op) (@lem5932169 A C s f x op)). Qed.
Lemma lem5932171 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1953 A C f x op) = (term1937 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5932170 A C s f x op)). Qed.
Lemma lem5932172 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5932173 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1945 A C f x op) = (term1938 A C f x op).
Proof. exact (MK_COMB (@lem5932172 A) (@lem5932171 A C f x op)). Qed.
Lemma lem5932174 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5932175 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1954 A C f x op) = (term1955 A C f x op).
Proof. exact (MK_COMB (@lem5932174) (@lem5932173 A C f x op)). Qed.
Lemma lem5932176 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1949 A C f x op s) = (term1932 A C s f x op).
Proof. exact (eq_refl (term1949 A C f x op s)). Qed.
Lemma lem5932177 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1956 A C f x op) = (term1947 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5932176 A C s f x op)). Qed.
Lemma lem5932178 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5932179 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1957 A C f x op) = (term1958 A C f x op).
Proof. exact (MK_COMB (@lem5932178 A) (@lem5932177 A C f x op)). Qed.
Lemma lem5932180 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932181 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1959 A C f x op) = (term1960 A C f x op).
Proof. exact (MK_COMB (@lem5932180) (@lem5932179 A C f x op)). Qed.
Lemma lem5932182 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1951 A C f x op s) = (term1929 A C s f x op).
Proof. exact (eq_refl (term1951 A C f x op s)). Qed.
Lemma lem5932183 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1961 A C f x op) = (term1948 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5932182 A C s f x op)). Qed.
Lemma lem5932184 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5932185 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1962 A C f x op) = (term1963 A C f x op).
Proof. exact (MK_COMB (@lem5932184 A) (@lem5932183 A C f x op)). Qed.
Lemma lem5932186 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1946 A C f x op) = (term1964 A C f x op).
Proof. exact (MK_COMB (@lem5932181 A C f x op) (@lem5932185 A C f x op)). Qed.
Lemma lem5932187 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : ((term1945 A C f x op) = (term1946 A C f x op)) = ((term1938 A C f x op) = (term1964 A C f x op)).
Proof. exact (MK_COMB (@lem5932175 A C f x op) (@lem5932186 A C f x op)). Qed.
Lemma lem5932188 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1938 A C f x op) = (term1964 A C f x op).
Proof. exact (EQ_MP (@lem5932187 A C f x op) (@lem5932165 A C f x op)). Qed.
Lemma lem5932285 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1939 A C f op) = (term1965 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5932188 A C f x op)). Qed.
Lemma lem5932286 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932287 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1940 A C f op) = (term1966 A C f op).
Proof. exact (MK_COMB (@lem5932286 A) (@lem5932285 A C f op)). Qed.
Lemma lem5932289 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5932290 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (@lem5932289 A P Q). Qed.
Lemma lem5932291 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1967 A C f op) = (term1968 A C f op).
Proof. exact (@lem5932290 A (term1969 A C f op) (term1970 A C f op)). Qed.
Lemma lem5932292 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1971 A C f op x) = (term1958 A C f x op).
Proof. exact (eq_refl (term1971 A C f op x)). Qed.
Lemma lem5932293 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932294 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1972 A C f op x) = (term1960 A C f x op).
Proof. exact (MK_COMB (@lem5932293) (@lem5932292 A C f x op)). Qed.
Lemma lem5932295 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1973 A C f op x) = (term1963 A C f x op).
Proof. exact (eq_refl (term1973 A C f op x)). Qed.
Lemma lem5932296 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1974 A C f op x) = (term1964 A C f x op).
Proof. exact (MK_COMB (@lem5932294 A C f x op) (@lem5932295 A C f x op)). Qed.
Lemma lem5932297 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1975 A C f op) = (term1965 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5932296 A C f x op)). Qed.
Lemma lem5932298 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932299 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1967 A C f op) = (term1966 A C f op).
Proof. exact (MK_COMB (@lem5932298 A) (@lem5932297 A C f op)). Qed.
Lemma lem5932300 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5932301 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1976 A C f op) = (term1977 A C f op).
Proof. exact (MK_COMB (@lem5932300) (@lem5932299 A C f op)). Qed.
Lemma lem5932302 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1971 A C f op x) = (term1958 A C f x op).
Proof. exact (eq_refl (term1971 A C f op x)). Qed.
Lemma lem5932303 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1978 A C f op) = (term1969 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5932302 A C f x op)). Qed.
Lemma lem5932304 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932305 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1979 A C f op) = (term1980 A C f op).
Proof. exact (MK_COMB (@lem5932304 A) (@lem5932303 A C f op)). Qed.
Lemma lem5932306 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932307 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1981 A C f op) = (term1982 A C f op).
Proof. exact (MK_COMB (@lem5932306) (@lem5932305 A C f op)). Qed.
Lemma lem5932308 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1973 A C f op x) = (term1963 A C f x op).
Proof. exact (eq_refl (term1973 A C f op x)). Qed.
Lemma lem5932309 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1983 A C f op) = (term1970 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5932308 A C f x op)). Qed.
Lemma lem5932310 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932311 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1984 A C f op) = (term1985 A C f op).
Proof. exact (MK_COMB (@lem5932310 A) (@lem5932309 A C f op)). Qed.
Lemma lem5932312 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1968 A C f op) = (term1986 A C f op).
Proof. exact (MK_COMB (@lem5932307 A C f op) (@lem5932311 A C f op)). Qed.
Lemma lem5932313 {A C : Type'} (f : A -> C) (op : type1400 C) : ((term1967 A C f op) = (term1968 A C f op)) = ((term1966 A C f op) = (term1986 A C f op)).
Proof. exact (MK_COMB (@lem5932301 A C f op) (@lem5932312 A C f op)). Qed.
Lemma lem5932314 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1966 A C f op) = (term1986 A C f op).
Proof. exact (EQ_MP (@lem5932313 A C f op) (@lem5932291 A C f op)). Qed.
Lemma lem5932419 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1940 A C f op) = (term1986 A C f op).
Proof. exact (TRANS (@lem5932287 A C f op) (@lem5932314 A C f op)). Qed.
Lemma lem5932420 {A C : Type'} (op : type1400 C) : (term1941 A C op) = (term1987 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5932419 A C f op)). Qed.
Lemma lem5932421 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5932422 {A C : Type'} (op : type1400 C) : (term1942 A C op) = (term1988 A C op).
Proof. exact (MK_COMB (@lem5932421 A C) (@lem5932420 A C op)). Qed.
Lemma lem5932424 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5932425 {A C : Type'} (P : type572 A C) (Q : type572 A C) : (term1094 A C P Q) = (term1095 A C P Q).
Proof. exact (@lem5932424 (A -> C) P Q). Qed.
Lemma lem5932426 {A C : Type'} (op : type1400 C) : (term1989 A C op) = (term1990 A C op).
Proof. exact (@lem5932425 A C (term1991 A C op) (term1992 A C op)). Qed.
Lemma lem5932427 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1993 A C op f) = (term1980 A C f op).
Proof. exact (eq_refl (term1993 A C op f)). Qed.
Lemma lem5932428 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932429 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1994 A C op f) = (term1982 A C f op).
Proof. exact (MK_COMB (@lem5932428) (@lem5932427 A C f op)). Qed.
Lemma lem5932430 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1995 A C op f) = (term1985 A C f op).
Proof. exact (eq_refl (term1995 A C op f)). Qed.
Lemma lem5932431 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1996 A C op f) = (term1986 A C f op).
Proof. exact (MK_COMB (@lem5932429 A C f op) (@lem5932430 A C f op)). Qed.
Lemma lem5932432 {A C : Type'} (op : type1400 C) : (term1997 A C op) = (term1987 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5932431 A C f op)). Qed.
Lemma lem5932433 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5932434 {A C : Type'} (op : type1400 C) : (term1989 A C op) = (term1988 A C op).
Proof. exact (MK_COMB (@lem5932433 A C) (@lem5932432 A C op)). Qed.
Lemma lem5932435 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5932436 {A C : Type'} (op : type1400 C) : (term1998 A C op) = (term1999 A C op).
Proof. exact (MK_COMB (@lem5932435) (@lem5932434 A C op)). Qed.
Lemma lem5932437 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1993 A C op f) = (term1980 A C f op).
Proof. exact (eq_refl (term1993 A C op f)). Qed.
Lemma lem5932438 {A C : Type'} (op : type1400 C) : (term2000 A C op) = (term1991 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5932437 A C f op)). Qed.
Lemma lem5932439 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5932440 {A C : Type'} (op : type1400 C) : (term2001 A C op) = (term2002 A C op).
Proof. exact (MK_COMB (@lem5932439 A C) (@lem5932438 A C op)). Qed.
Lemma lem5932441 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932442 {A C : Type'} (op : type1400 C) : (term2003 A C op) = (term2004 A C op).
Proof. exact (MK_COMB (@lem5932441) (@lem5932440 A C op)). Qed.
Lemma lem5932443 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1995 A C op f) = (term1985 A C f op).
Proof. exact (eq_refl (term1995 A C op f)). Qed.
Lemma lem5932444 {A C : Type'} (op : type1400 C) : (term2005 A C op) = (term1992 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5932443 A C f op)). Qed.
Lemma lem5932445 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5932446 {A C : Type'} (op : type1400 C) : (term2006 A C op) = (term2007 A C op).
Proof. exact (MK_COMB (@lem5932445 A C) (@lem5932444 A C op)). Qed.
Lemma lem5932447 {A C : Type'} (op : type1400 C) : (term1990 A C op) = (term2008 A C op).
Proof. exact (MK_COMB (@lem5932442 A C op) (@lem5932446 A C op)). Qed.
Lemma lem5932448 {A C : Type'} (op : type1400 C) : ((term1989 A C op) = (term1990 A C op)) = ((term1988 A C op) = (term2008 A C op)).
Proof. exact (MK_COMB (@lem5932436 A C op) (@lem5932447 A C op)). Qed.
Lemma lem5932449 {A C : Type'} (op : type1400 C) : (term1988 A C op) = (term2008 A C op).
Proof. exact (EQ_MP (@lem5932448 A C op) (@lem5932426 A C op)). Qed.
Lemma lem5932562 {A C : Type'} (op : type1400 C) : (term1942 A C op) = (term2008 A C op).
Proof. exact (TRANS (@lem5932422 A C op) (@lem5932449 A C op)). Qed.
Lemma lem5932563 {A C : Type'} : (term1943 A C) = (term2009 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5932562 A C op)). Qed.
Lemma lem5932564 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5932565 {A C : Type'} : (term1944 A C) = (term2010 A C).
Proof. exact (MK_COMB (@lem5932564 C) (@lem5932563 A C)). Qed.
Lemma lem5932567 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5932568 {C : Type'} (P : type403 C) (Q : type403 C) : (term2011 C P Q) = (term2012 C P Q).
Proof. exact (@lem5932567 (type1400 C) P Q). Qed.
Lemma lem5932569 {A C : Type'} : (term2013 A C) = (term2014 A C).
Proof. exact (@lem5932568 C (term2015 A C) (term2016 A C)). Qed.
Lemma lem5932570 {A C : Type'} (op : type1400 C) : (term2017 A C op) = (term2002 A C op).
Proof. exact (eq_refl (term2017 A C op)). Qed.
Lemma lem5932571 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932572 {A C : Type'} (op : type1400 C) : (term2018 A C op) = (term2004 A C op).
Proof. exact (MK_COMB (@lem5932571) (@lem5932570 A C op)). Qed.
Lemma lem5932573 {A C : Type'} (op : type1400 C) : (term2019 A C op) = (term2007 A C op).
Proof. exact (eq_refl (term2019 A C op)). Qed.
Lemma lem5932574 {A C : Type'} (op : type1400 C) : (term2020 A C op) = (term2008 A C op).
Proof. exact (MK_COMB (@lem5932572 A C op) (@lem5932573 A C op)). Qed.
Lemma lem5932575 {A C : Type'} : (term2021 A C) = (term2009 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5932574 A C op)). Qed.
Lemma lem5932576 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5932577 {A C : Type'} : (term2013 A C) = (term2010 A C).
Proof. exact (MK_COMB (@lem5932576 C) (@lem5932575 A C)). Qed.
Lemma lem5932578 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5932579 {A C : Type'} : (term2022 A C) = (term2023 A C).
Proof. exact (MK_COMB (@lem5932578) (@lem5932577 A C)). Qed.
Lemma lem5932580 {A C : Type'} (op : type1400 C) : (term2017 A C op) = (term2002 A C op).
Proof. exact (eq_refl (term2017 A C op)). Qed.
Lemma lem5932581 {A C : Type'} : (term2024 A C) = (term2015 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5932580 A C op)). Qed.
Lemma lem5932582 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5932583 {A C : Type'} : (term2025 A C) = (term2026 A C).
Proof. exact (MK_COMB (@lem5932582 C) (@lem5932581 A C)). Qed.
Lemma lem5932584 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5932585 {A C : Type'} : (term2027 A C) = (term2028 A C).
Proof. exact (MK_COMB (@lem5932584) (@lem5932583 A C)). Qed.
Lemma lem5932586 {A C : Type'} (op : type1400 C) : (term2019 A C op) = (term2007 A C op).
Proof. exact (eq_refl (term2019 A C op)). Qed.
Lemma lem5932587 {A C : Type'} : (term2029 A C) = (term2016 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5932586 A C op)). Qed.
Lemma lem5932588 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5932589 {A C : Type'} : (term2030 A C) = (term2031 A C).
Proof. exact (MK_COMB (@lem5932588 C) (@lem5932587 A C)). Qed.
Lemma lem5932590 {A C : Type'} : (term2014 A C) = (term2032 A C).
Proof. exact (MK_COMB (@lem5932585 A C) (@lem5932589 A C)). Qed.
Lemma lem5932591 {A C : Type'} : ((term2013 A C) = (term2014 A C)) = ((term2010 A C) = (term2032 A C)).
Proof. exact (MK_COMB (@lem5932579 A C) (@lem5932590 A C)). Qed.
Lemma lem5932592 {A C : Type'} : (term2010 A C) = (term2032 A C).
Proof. exact (EQ_MP (@lem5932591 A C) (@lem5932569 A C)). Qed.
Lemma lem5932715 {A C : Type'} : (term1944 A C) = (term2032 A C).
Proof. exact (TRANS (@lem5932565 A C) (@lem5932592 A C)). Qed.
Lemma lem5932716 {A C : Type'} : (term1690 A C) = (term2032 A C).
Proof. exact (TRANS (@lem5932149 A C) (@lem5932715 A C)). Qed.
Lemma lem5932717 {A C : Type'} (h1 : term1690 A C) : term2032 A C.
Proof. exact (EQ_MP (@lem5932716 A C) (@lem5929179 A C h1)). Qed.
Lemma lem5932718 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (h1 : term1917 A B C op g s f x) : term1917 A B C op g s f x.
Proof. exact (h1). Qed.
Lemma lem5932719 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term1909 A B C op g s f x y.
Proof. exact (h1). Qed.
Lemma lem5932720 {A B C : Type'} (x' : type684 A) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term1891 A B C x' op g f) : term1891 A B C x' op g f.
Proof. exact (h1). Qed.
Lemma lem5932735 {A : Type'} (x : A) (y : A) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem5932736 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5932737 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5932742 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5932744 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5932742 A B f x). Qed.
Lemma lem5932749 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5932750 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5932749 A B f x). Qed.
Lemma lem5932752 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5932750 A B f y). Qed.
Lemma lem5932753 {A B : Type'} (f : A -> B) (x : A) : (term1339 A B f x) = (term1340 A B f x).
Proof. exact (MK_COMB (@lem5932737 B) (@lem5932744 A B f x)). Qed.
Lemma lem5932754 {A B : Type'} (x : A) (f : A -> B) (y : A) : ((f x) = (f y)) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5932753 A B f x) (@lem5932752 A B f y)). Qed.
Lemma lem5932755 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term1341 A B x f y) = (term1342 A B x f y).
Proof. exact (MK_COMB (@lem5932736) (@lem5932754 A B x f y)). Qed.
Lemma lem5932756 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5932763 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5932764 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5932763 A (type686 A) f x). Qed.
Lemma lem5932765 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5932764 A (@IN A) y). Qed.
Lemma lem5932766 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5932767 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem5932765 A y) (@lem5932766 A s)). Qed.
Lemma lem5932769 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5932770 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5932769 (A -> Prop) Prop f x). Qed.
Lemma lem5932771 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term1296 A y s).
Proof. exact (@lem5932770 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem5932773 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term1296 A y s).
Proof. exact (TRANS (@lem5932767 A y s) (@lem5932771 A y s)). Qed.
Lemma lem5932774 {A : Type'} (y : A) (s : A -> Prop) : (term229 A y s) = (term1297 A y s).
Proof. exact (MK_COMB (@lem5932756) (@lem5932773 A y s)). Qed.
Lemma lem5932775 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5932776 {A : Type'} (y : A) (s : A -> Prop) : (term1896 A y s) = (term1444 A y s).
Proof. exact (MK_COMB (@lem5932775) (@lem5932774 A y s)). Qed.
Lemma lem5932777 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1895 A B s x f y) = (term1454 A B s x f y).
Proof. exact (MK_COMB (@lem5932776 A y s) (@lem5932755 A B x f y)). Qed.
Lemma lem5932778 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5932785 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5932786 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5932785 A (type686 A) f x). Qed.
Lemma lem5932787 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5932786 A (@IN A) x). Qed.
Lemma lem5932788 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5932789 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5932787 A x) (@lem5932788 A s)). Qed.
Lemma lem5932791 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5932792 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5932791 (A -> Prop) Prop f x). Qed.
Lemma lem5932793 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5932792 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5932795 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5932789 A x s) (@lem5932793 A x s)). Qed.
Lemma lem5932796 {A : Type'} (x : A) (s : A -> Prop) : (term229 A x s) = (term1297 A x s).
Proof. exact (MK_COMB (@lem5932778) (@lem5932795 A x s)). Qed.
Lemma lem5932797 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5932798 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1444 A x s).
Proof. exact (MK_COMB (@lem5932797) (@lem5932796 A x s)). Qed.
Lemma lem5932799 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1898 A B s x f y) = (term1455 A B s x f y).
Proof. exact (MK_COMB (@lem5932798 A x s) (@lem5932777 A B s x f y)). Qed.
Lemma lem5932800 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5932801 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1901 A B s x f y) = (term2033 A B s x f y).
Proof. exact (MK_COMB (@lem5932800) (@lem5932799 A B s x f y)). Qed.
Lemma lem5932802 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1903 A B s f x y) = (term2034 A B s f x y).
Proof. exact (MK_COMB (@lem5932801 A B s x f y) (@lem5932735 A x y)). Qed.
Lemma lem5932803 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1904 A B s f x) = (term2035 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5932802 A B s f x y)). Qed.
Lemma lem5932804 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932805 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1905 A B s f x) = (term2036 A B s f x).
Proof. exact (MK_COMB (@lem5932804 A) (@lem5932803 A B s f x)). Qed.
Lemma lem5932806 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1906 A B s f) = (term2037 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5932805 A B s f x)). Qed.
Lemma lem5932807 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5932808 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1907 A B s f) = (term2038 A B s f).
Proof. exact (MK_COMB (@lem5932807 A) (@lem5932806 A B s f)). Qed.
Lemma lem5932809 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2038 A B s f.
Proof. exact (EQ_MP (@lem5932808 A B s f) (@lem5929590 A B s f h1)). Qed.
Lemma lem5933610 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5933611 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5933616 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933618 {A C : Type'} (f : A -> C) (x : A) : (f x) = (@I (A -> C) f x).
Proof. exact (@lem5933616 A C f x). Qed.
Lemma lem5933623 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933624 {C : Type'} (f : type402 C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> C) f x).
Proof. exact (@lem5933623 (type1400 C) C f x). Qed.
Lemma lem5933626 {C : Type'} (op : type1400 C) : (@neutral C op) = (@I ((C -> C -> C) -> C) (@neutral C) op).
Proof. exact (@lem5933624 C (@neutral C) op). Qed.
Lemma lem5933627 {A C : Type'} (f : A -> C) (x : A) : (term1339 A C f x) = (term1340 A C f x).
Proof. exact (MK_COMB (@lem5933611 C) (@lem5933618 A C f x)). Qed.
Lemma lem5933628 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : ((f x) = (@neutral C op)) = ((@I (A -> C) f x) = (@I ((C -> C -> C) -> C) (@neutral C) op)).
Proof. exact (MK_COMB (@lem5933627 A C f x) (@lem5933626 C op)). Qed.
Lemma lem5933629 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1928 A C f x op) = (term2039 A C f x op).
Proof. exact (MK_COMB (@lem5933610) (@lem5933628 A C f x op)). Qed.
Lemma lem5933636 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933637 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5933636 A (type686 A) f x). Qed.
Lemma lem5933638 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5933637 A (@IN A) x). Qed.
Lemma lem5933639 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933640 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5933638 A x) (@lem5933639 A s)). Qed.
Lemma lem5933642 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933643 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5933642 (A -> Prop) Prop f x). Qed.
Lemma lem5933644 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5933643 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5933646 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5933640 A x s) (@lem5933644 A x s)). Qed.
Lemma lem5933647 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5933648 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term1365 A x s).
Proof. exact (MK_COMB (@lem5933647) (@lem5933646 A x s)). Qed.
Lemma lem5933649 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1733 A C s f x op) = (term2040 A C s f x op).
Proof. exact (MK_COMB (@lem5933648 A x s) (@lem5933629 A C f x op)). Qed.
Lemma lem5933650 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5933661 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933662 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933661 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5933663 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5933662 A C (@support A C) op). Qed.
Lemma lem5933664 {A C : Type'} (f : A -> C) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5933665 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f).
Proof. exact (MK_COMB (@lem5933663 A C op) (@lem5933664 A C f)). Qed.
Lemma lem5933667 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933668 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933667 (A -> C) (type672 A) f x). Qed.
Lemma lem5933669 {A C : Type'} (op : type1400 C) (f : A -> C) : (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f) = (term2041 A C op f).
Proof. exact (@lem5933668 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) f). Qed.
Lemma lem5933670 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (term2041 A C op f).
Proof. exact (TRANS (@lem5933665 A C op f) (@lem5933669 A C op f)). Qed.
Lemma lem5933671 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933672 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2042 A C op f s).
Proof. exact (MK_COMB (@lem5933670 A C op f) (@lem5933671 A s)). Qed.
Lemma lem5933674 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933675 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933674 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5933676 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2042 A C op f s) = (term2043 A C op f s).
Proof. exact (@lem5933675 A (term2041 A C op f) s). Qed.
Lemma lem5933678 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2043 A C op f s).
Proof. exact (TRANS (@lem5933672 A C op f s) (@lem5933676 A C op f s)). Qed.
Lemma lem5933679 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem5933680 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2044 A C x op f s).
Proof. exact (MK_COMB (@lem5933679 A x) (@lem5933678 A C op f s)). Qed.
Lemma lem5933682 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933683 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5933682 A (type686 A) f x). Qed.
Lemma lem5933684 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5933683 A (@IN A) x). Qed.
Lemma lem5933685 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2043 A C op f s) = (term2043 A C op f s).
Proof. exact (eq_refl (term2043 A C op f s)). Qed.
Lemma lem5933686 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2045 A C x op f s).
Proof. exact (MK_COMB (@lem5933684 A x) (@lem5933685 A C op f s)). Qed.
Lemma lem5933688 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933689 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5933688 (A -> Prop) Prop f x). Qed.
Lemma lem5933690 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2045 A C x op f s) = (term2046 A C x op f s).
Proof. exact (@lem5933689 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) (term2043 A C op f s)). Qed.
Lemma lem5933691 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5933686 A C x op f s) (@lem5933690 A C x op f s)). Qed.
Lemma lem5933692 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5933680 A C x op f s) (@lem5933691 A C x op f s)). Qed.
Lemma lem5933693 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2047 A C x op f s) = (term2048 A C x op f s).
Proof. exact (MK_COMB (@lem5933650) (@lem5933692 A C x op f s)). Qed.
Lemma lem5933694 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5933695 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2049 A C x op f s) = (term2050 A C x op f s).
Proof. exact (MK_COMB (@lem5933694) (@lem5933693 A C x op f s)). Qed.
Lemma lem5933696 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1929 A C s f x op) = (term2051 A C s f x op).
Proof. exact (MK_COMB (@lem5933695 A C x op f s) (@lem5933649 A C s f x op)). Qed.
Lemma lem5933697 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1948 A C f x op) = (term2052 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5933696 A C s f x op)). Qed.
Lemma lem5933698 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5933699 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1963 A C f x op) = (term2053 A C f x op).
Proof. exact (MK_COMB (@lem5933698 A) (@lem5933697 A C f x op)). Qed.
Lemma lem5933700 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1970 A C f op) = (term2054 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5933699 A C f x op)). Qed.
Lemma lem5933701 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5933702 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1985 A C f op) = (term2055 A C f op).
Proof. exact (MK_COMB (@lem5933701 A) (@lem5933700 A C f op)). Qed.
Lemma lem5933703 {A C : Type'} (op : type1400 C) : (term1992 A C op) = (term2056 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5933702 A C f op)). Qed.
Lemma lem5933704 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5933705 {A C : Type'} (op : type1400 C) : (term2007 A C op) = (term2057 A C op).
Proof. exact (MK_COMB (@lem5933704 A C) (@lem5933703 A C op)). Qed.
Lemma lem5933706 {A C : Type'} : (term2016 A C) = (term2058 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5933705 A C op)). Qed.
Lemma lem5933707 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5933708 {A C : Type'} : (term2031 A C) = (term2059 A C).
Proof. exact (MK_COMB (@lem5933707 C) (@lem5933706 A C)). Qed.
Lemma lem5933709 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5933714 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933716 {A C : Type'} (f : A -> C) (x : A) : (f x) = (@I (A -> C) f x).
Proof. exact (@lem5933714 A C f x). Qed.
Lemma lem5933721 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933722 {C : Type'} (f : type402 C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> C) f x).
Proof. exact (@lem5933721 (type1400 C) C f x). Qed.
Lemma lem5933724 {C : Type'} (op : type1400 C) : (@neutral C op) = (@I ((C -> C -> C) -> C) (@neutral C) op).
Proof. exact (@lem5933722 C (@neutral C) op). Qed.
Lemma lem5933725 {A C : Type'} (f : A -> C) (x : A) : (term1339 A C f x) = (term1340 A C f x).
Proof. exact (MK_COMB (@lem5933709 C) (@lem5933716 A C f x)). Qed.
Lemma lem5933726 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : ((f x) = (@neutral C op)) = ((@I (A -> C) f x) = (@I ((C -> C -> C) -> C) (@neutral C) op)).
Proof. exact (MK_COMB (@lem5933725 A C f x) (@lem5933724 C op)). Qed.
Lemma lem5933727 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5933734 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933735 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5933734 A (type686 A) f x). Qed.
Lemma lem5933736 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5933735 A (@IN A) x). Qed.
Lemma lem5933737 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933738 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5933736 A x) (@lem5933737 A s)). Qed.
Lemma lem5933740 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933741 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5933740 (A -> Prop) Prop f x). Qed.
Lemma lem5933742 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5933741 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5933744 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5933738 A x s) (@lem5933742 A x s)). Qed.
Lemma lem5933745 {A : Type'} (x : A) (s : A -> Prop) : (term229 A x s) = (term1297 A x s).
Proof. exact (MK_COMB (@lem5933727) (@lem5933744 A x s)). Qed.
Lemma lem5933746 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5933747 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1444 A x s).
Proof. exact (MK_COMB (@lem5933746) (@lem5933745 A x s)). Qed.
Lemma lem5933748 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1926 A C s f x op) = (term2060 A C s f x op).
Proof. exact (MK_COMB (@lem5933747 A x s) (@lem5933726 A C f x op)). Qed.
Lemma lem5933759 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933760 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933759 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5933761 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5933760 A C (@support A C) op). Qed.
Lemma lem5933762 {A C : Type'} (f : A -> C) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5933763 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f).
Proof. exact (MK_COMB (@lem5933761 A C op) (@lem5933762 A C f)). Qed.
Lemma lem5933765 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933766 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933765 (A -> C) (type672 A) f x). Qed.
Lemma lem5933767 {A C : Type'} (op : type1400 C) (f : A -> C) : (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f) = (term2041 A C op f).
Proof. exact (@lem5933766 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) f). Qed.
Lemma lem5933768 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (term2041 A C op f).
Proof. exact (TRANS (@lem5933763 A C op f) (@lem5933767 A C op f)). Qed.
Lemma lem5933769 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933770 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2042 A C op f s).
Proof. exact (MK_COMB (@lem5933768 A C op f) (@lem5933769 A s)). Qed.
Lemma lem5933772 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933773 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933772 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5933774 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2042 A C op f s) = (term2043 A C op f s).
Proof. exact (@lem5933773 A (term2041 A C op f) s). Qed.
Lemma lem5933776 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2043 A C op f s).
Proof. exact (TRANS (@lem5933770 A C op f s) (@lem5933774 A C op f s)). Qed.
Lemma lem5933777 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem5933778 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2044 A C x op f s).
Proof. exact (MK_COMB (@lem5933777 A x) (@lem5933776 A C op f s)). Qed.
Lemma lem5933780 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933781 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5933780 A (type686 A) f x). Qed.
Lemma lem5933782 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5933781 A (@IN A) x). Qed.
Lemma lem5933783 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2043 A C op f s) = (term2043 A C op f s).
Proof. exact (eq_refl (term2043 A C op f s)). Qed.
Lemma lem5933784 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2045 A C x op f s).
Proof. exact (MK_COMB (@lem5933782 A x) (@lem5933783 A C op f s)). Qed.
Lemma lem5933786 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933787 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5933786 (A -> Prop) Prop f x). Qed.
Lemma lem5933788 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2045 A C x op f s) = (term2046 A C x op f s).
Proof. exact (@lem5933787 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) (term2043 A C op f s)). Qed.
Lemma lem5933789 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5933784 A C x op f s) (@lem5933788 A C x op f s)). Qed.
Lemma lem5933790 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5933778 A C x op f s) (@lem5933789 A C x op f s)). Qed.
Lemma lem5933791 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5933792 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1930 A C x op f s) = (term2061 A C x op f s).
Proof. exact (MK_COMB (@lem5933791) (@lem5933790 A C x op f s)). Qed.
Lemma lem5933793 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1932 A C s f x op) = (term2062 A C s f x op).
Proof. exact (MK_COMB (@lem5933792 A C x op f s) (@lem5933748 A C s f x op)). Qed.
Lemma lem5933794 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1947 A C f x op) = (term2063 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5933793 A C s f x op)). Qed.
Lemma lem5933795 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5933796 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1958 A C f x op) = (term2064 A C f x op).
Proof. exact (MK_COMB (@lem5933795 A) (@lem5933794 A C f x op)). Qed.
Lemma lem5933797 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1969 A C f op) = (term2065 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5933796 A C f x op)). Qed.
Lemma lem5933798 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5933799 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1980 A C f op) = (term2066 A C f op).
Proof. exact (MK_COMB (@lem5933798 A) (@lem5933797 A C f op)). Qed.
Lemma lem5933800 {A C : Type'} (op : type1400 C) : (term1991 A C op) = (term2067 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5933799 A C f op)). Qed.
Lemma lem5933801 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5933802 {A C : Type'} (op : type1400 C) : (term2002 A C op) = (term2068 A C op).
Proof. exact (MK_COMB (@lem5933801 A C) (@lem5933800 A C op)). Qed.
Lemma lem5933803 {A C : Type'} : (term2015 A C) = (term2069 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5933802 A C op)). Qed.
Lemma lem5933804 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5933805 {A C : Type'} : (term2026 A C) = (term2070 A C).
Proof. exact (MK_COMB (@lem5933804 C) (@lem5933803 A C)). Qed.
Lemma lem5933806 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5933807 {A C : Type'} : (term2028 A C) = (term2071 A C).
Proof. exact (MK_COMB (@lem5933806) (@lem5933805 A C)). Qed.
Lemma lem5933808 {A C : Type'} : (term2032 A C) = (term2072 A C).
Proof. exact (MK_COMB (@lem5933807 A C) (@lem5933708 A C)). Qed.
Lemma lem5933809 {A C : Type'} (h1 : term1690 A C) : term2072 A C.
Proof. exact (EQ_MP (@lem5933808 A C) (@lem5932717 A C h1)). Qed.
Lemma lem5933816 {A : Type'} (x : A) (y : A) : (term1361 A x y) = (term1361 A x y).
Proof. exact (eq_refl (term1361 A x y)). Qed.
Lemma lem5933817 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5933822 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933824 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5933822 A B f x). Qed.
Lemma lem5933829 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933830 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5933829 A B f x). Qed.
Lemma lem5933832 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5933830 A B f y). Qed.
Lemma lem5933833 {A B : Type'} (f : A -> B) (x : A) : (term1339 A B f x) = (term1340 A B f x).
Proof. exact (MK_COMB (@lem5933817 B) (@lem5933824 A B f x)). Qed.
Lemma lem5933834 {A B : Type'} (x : A) (f : A -> B) (y : A) : ((f x) = (f y)) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5933833 A B f x) (@lem5933832 A B f y)). Qed.
Lemma lem5933845 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933846 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5933845 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5933847 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5933846 A B C (@o A B C) g). Qed.
Lemma lem5933848 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5933849 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5933847 A B C g) (@lem5933848 A B f)). Qed.
Lemma lem5933851 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933852 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5933851 (A -> B) (A -> C) f x). Qed.
Lemma lem5933853 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5933852 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5933855 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5933849 A B C g f) (@lem5933853 A B C g f)). Qed.
Lemma lem5933856 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933857 {A C : Type'} (op : type1400 C) : (@support A C op) = (@support A C op).
Proof. exact (eq_refl (@support A C op)). Qed.
Lemma lem5933858 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2073 A B C op g f) = (term2074 A B C op g f).
Proof. exact (MK_COMB (@lem5933857 A C op) (@lem5933855 A B C g f)). Qed.
Lemma lem5933859 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2075 A B C op g f s).
Proof. exact (MK_COMB (@lem5933858 A B C op g f) (@lem5933856 A s)). Qed.
Lemma lem5933861 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933862 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933861 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5933863 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5933862 A C (@support A C) op). Qed.
Lemma lem5933864 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5933865 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2076 A B C op g f).
Proof. exact (MK_COMB (@lem5933863 A C op) (@lem5933864 A B C g f)). Qed.
Lemma lem5933867 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933868 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933867 (A -> C) (type672 A) f x). Qed.
Lemma lem5933869 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2076 A B C op g f) = (term2077 A B C op g f).
Proof. exact (@lem5933868 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) (term1329 A B C g f)). Qed.
Lemma lem5933870 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2077 A B C op g f).
Proof. exact (TRANS (@lem5933865 A B C op g f) (@lem5933869 A B C op g f)). Qed.
Lemma lem5933871 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933872 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2078 A B C op g f s).
Proof. exact (MK_COMB (@lem5933870 A B C op g f) (@lem5933871 A s)). Qed.
Lemma lem5933874 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933875 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933874 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5933876 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2078 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (@lem5933875 A (term2077 A B C op g f) s). Qed.
Lemma lem5933877 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5933872 A B C op g f s) (@lem5933876 A B C op g f s)). Qed.
Lemma lem5933878 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5933859 A B C op g f s) (@lem5933877 A B C op g f s)). Qed.
Lemma lem5933879 {A : Type'} (y : A) : (@IN A y) = (@IN A y).
Proof. exact (eq_refl (@IN A y)). Qed.
Lemma lem5933880 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C y op g f s) = (term2081 A B C y op g f s).
Proof. exact (MK_COMB (@lem5933879 A y) (@lem5933878 A B C op g f s)). Qed.
Lemma lem5933882 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933883 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5933882 A (type686 A) f x). Qed.
Lemma lem5933884 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5933883 A (@IN A) y). Qed.
Lemma lem5933885 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2079 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (eq_refl (term2079 A B C op g f s)). Qed.
Lemma lem5933886 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C y op g f s) = (term2082 A B C y op g f s).
Proof. exact (MK_COMB (@lem5933884 A y) (@lem5933885 A B C op g f s)). Qed.
Lemma lem5933888 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933889 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5933888 (A -> Prop) Prop f x). Qed.
Lemma lem5933890 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2082 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (@lem5933889 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) (term2079 A B C op g f s)). Qed.
Lemma lem5933891 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (TRANS (@lem5933886 A B C y op g f s) (@lem5933890 A B C y op g f s)). Qed.
Lemma lem5933892 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (TRANS (@lem5933880 A B C y op g f s) (@lem5933891 A B C y op g f s)). Qed.
Lemma lem5933893 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5933894 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2084 A B C y op g f s) = (term2085 A B C y op g f s).
Proof. exact (MK_COMB (@lem5933893) (@lem5933892 A B C y op g f s)). Qed.
Lemma lem5933895 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2086 A B C op g s x f y) = (term2087 A B C op g s x f y).
Proof. exact (MK_COMB (@lem5933894 A B C y op g f s) (@lem5933834 A B x f y)). Qed.
Lemma lem5933906 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933907 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5933906 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5933908 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5933907 A B C (@o A B C) g). Qed.
Lemma lem5933909 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5933910 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5933908 A B C g) (@lem5933909 A B f)). Qed.
Lemma lem5933912 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933913 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5933912 (A -> B) (A -> C) f x). Qed.
Lemma lem5933914 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5933913 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5933916 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5933910 A B C g f) (@lem5933914 A B C g f)). Qed.
Lemma lem5933917 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933918 {A C : Type'} (op : type1400 C) : (@support A C op) = (@support A C op).
Proof. exact (eq_refl (@support A C op)). Qed.
Lemma lem5933919 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2073 A B C op g f) = (term2074 A B C op g f).
Proof. exact (MK_COMB (@lem5933918 A C op) (@lem5933916 A B C g f)). Qed.
Lemma lem5933920 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2075 A B C op g f s).
Proof. exact (MK_COMB (@lem5933919 A B C op g f) (@lem5933917 A s)). Qed.
Lemma lem5933922 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933923 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933922 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5933924 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5933923 A C (@support A C) op). Qed.
Lemma lem5933925 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5933926 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2076 A B C op g f).
Proof. exact (MK_COMB (@lem5933924 A C op) (@lem5933925 A B C g f)). Qed.
Lemma lem5933928 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933929 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933928 (A -> C) (type672 A) f x). Qed.
Lemma lem5933930 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2076 A B C op g f) = (term2077 A B C op g f).
Proof. exact (@lem5933929 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) (term1329 A B C g f)). Qed.
Lemma lem5933931 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2077 A B C op g f).
Proof. exact (TRANS (@lem5933926 A B C op g f) (@lem5933930 A B C op g f)). Qed.
Lemma lem5933932 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5933933 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2078 A B C op g f s).
Proof. exact (MK_COMB (@lem5933931 A B C op g f) (@lem5933932 A s)). Qed.
Lemma lem5933935 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933936 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5933935 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5933937 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2078 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (@lem5933936 A (term2077 A B C op g f) s). Qed.
Lemma lem5933938 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5933933 A B C op g f s) (@lem5933937 A B C op g f s)). Qed.
Lemma lem5933939 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5933920 A B C op g f s) (@lem5933938 A B C op g f s)). Qed.
Lemma lem5933940 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem5933941 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C x op g f s) = (term2081 A B C x op g f s).
Proof. exact (MK_COMB (@lem5933940 A x) (@lem5933939 A B C op g f s)). Qed.
Lemma lem5933943 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933944 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5933943 A (type686 A) f x). Qed.
Lemma lem5933945 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5933944 A (@IN A) x). Qed.
Lemma lem5933946 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2079 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (eq_refl (term2079 A B C op g f s)). Qed.
Lemma lem5933947 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C x op g f s) = (term2082 A B C x op g f s).
Proof. exact (MK_COMB (@lem5933945 A x) (@lem5933946 A B C op g f s)). Qed.
Lemma lem5933949 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5933950 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5933949 (A -> Prop) Prop f x). Qed.
Lemma lem5933951 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2082 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (@lem5933950 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) (term2079 A B C op g f s)). Qed.
Lemma lem5933952 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (TRANS (@lem5933947 A B C x op g f s) (@lem5933951 A B C x op g f s)). Qed.
Lemma lem5933953 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (TRANS (@lem5933941 A B C x op g f s) (@lem5933952 A B C x op g f s)). Qed.
Lemma lem5933954 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5933955 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2084 A B C x op g f s) = (term2085 A B C x op g f s).
Proof. exact (MK_COMB (@lem5933954) (@lem5933953 A B C x op g f s)). Qed.
Lemma lem5933956 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1910 A B C op g s x f y) = (term2088 A B C op g s x f y).
Proof. exact (MK_COMB (@lem5933955 A B C x op g f s) (@lem5933895 A B C op g s x f y)). Qed.
Lemma lem5933957 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5933958 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2089 A B C op g s x f y) = (term2090 A B C op g s x f y).
Proof. exact (MK_COMB (@lem5933957) (@lem5933956 A B C op g s x f y)). Qed.
Lemma lem5933959 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1909 A B C op g s f x y) = (term2091 A B C op g s f x y).
Proof. exact (MK_COMB (@lem5933958 A B C op g s x f y) (@lem5933816 A x y)). Qed.
Lemma lem5933960 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2091 A B C op g s f x y.
Proof. exact (EQ_MP (@lem5933959 A B C op g s f x y) (@lem5932719 A B C op g s f x y h1)). Qed.
Lemma lem5934180 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2088 A B C op g s x f y.
Proof. exact (proj1 (@lem5933960 A B C op g s f x y h1)). Qed.
Lemma lem5934181 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2087 A B C op g s x f y.
Proof. exact (proj2 (@lem5934180 A B C op g s f x y h1)). Qed.
Lemma lem5934185 {A C : Type'} (h1 : term1690 A C) : term2059 A C.
Proof. exact (proj2 (@lem5933809 A C h1)). Qed.
Lemma lem5934218 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2034 A B s f x y) = (term2034 A B s f x y).
Proof. exact (eq_refl (term2034 A B s f x y)). Qed.
Lemma lem5934219 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term2035 A B s f x) = (term2035 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5934218 A B s f x y)). Qed.
Lemma lem5934220 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5934221 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term2036 A B s f x) = (term2036 A B s f x).
Proof. exact (MK_COMB (@lem5934220 A) (@lem5934219 A B s f x)). Qed.
Lemma lem5934222 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2037 A B s f) = (term2037 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5934221 A B s f x)). Qed.
Lemma lem5934223 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5934225 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2038 A B s f) = (term2038 A B s f).
Proof. exact (MK_COMB (@lem5934223 A) (@lem5934222 A B s f)). Qed.
Lemma lem5934226 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2038 A B s f.
Proof. exact (EQ_MP (@lem5934225 A B s f) (@lem5932809 A B s f h1)). Qed.
Lemma lem5934355 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term2051 A C s f x op) = (term2092 A C s f x op).
Proof. exact (@lem19490 (term1296 A x s) (term2048 A C x op f s) (term2039 A C f x op)). Qed.
Lemma lem5934356 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term2052 A C f x op) = (term2093 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5934355 A C s f x op)). Qed.
Lemma lem5934357 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5934358 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term2053 A C f x op) = (term2094 A C f x op).
Proof. exact (MK_COMB (@lem5934357 A) (@lem5934356 A C f x op)). Qed.
Lemma lem5934359 {A C : Type'} (f : A -> C) (op : type1400 C) : (term2054 A C f op) = (term2095 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5934358 A C f x op)). Qed.
Lemma lem5934360 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5934361 {A C : Type'} (f : A -> C) (op : type1400 C) : (term2055 A C f op) = (term2096 A C f op).
Proof. exact (MK_COMB (@lem5934360 A) (@lem5934359 A C f op)). Qed.
Lemma lem5934362 {A C : Type'} (op : type1400 C) : (term2056 A C op) = (term2097 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5934361 A C f op)). Qed.
Lemma lem5934363 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5934364 {A C : Type'} (op : type1400 C) : (term2057 A C op) = (term2098 A C op).
Proof. exact (MK_COMB (@lem5934363 A C) (@lem5934362 A C op)). Qed.
Lemma lem5934365 {A C : Type'} : (term2058 A C) = (term2099 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5934364 A C op)). Qed.
Lemma lem5934366 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5934368 {A C : Type'} : (term2059 A C) = (term2100 A C).
Proof. exact (MK_COMB (@lem5934366 C) (@lem5934365 A C)). Qed.
Lemma lem5934369 {A C : Type'} (h1 : term1690 A C) : term2100 A C.
Proof. exact (EQ_MP (@lem5934368 A C) (@lem5934185 A C h1)). Qed.
Lemma lem5934610 {A B : Type'} (_74662 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2101 A B s f _74662.
Proof. exact (@lem5934226 A B s f h1 _74662). Qed.
Lemma lem5934611 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) : (term2101 A B s f _74662) = (term2036 A B s f _74662).
Proof. exact (eq_refl (term2101 A B s f _74662)). Qed.
Lemma lem5934612 {A B : Type'} (_74662 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2036 A B s f _74662.
Proof. exact (EQ_MP (@lem5934611 A B s f _74662) (@lem5934610 A B _74662 s f h1)). Qed.
Lemma lem5934613 {A B : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2102 A B s f _74662 _74663.
Proof. exact (@lem5934612 A B _74662 s f h1 _74663). Qed.
Lemma lem5934614 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term2102 A B s f _74662 _74663) = (term2034 A B s f _74662 _74663).
Proof. exact (eq_refl (term2102 A B s f _74662 _74663)). Qed.
Lemma lem5934615 {A B : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2034 A B s f _74662 _74663.
Proof. exact (EQ_MP (@lem5934614 A B s f _74662 _74663) (@lem5934613 A B _74662 _74663 s f h1)). Qed.
Lemma lem5934631 {A C : Type'} (_74669 : type1400 C) (h1 : term1690 A C) : term2103 A C _74669.
Proof. exact (@lem5934369 A C h1 _74669). Qed.
Lemma lem5934632 {A C : Type'} (_74669 : type1400 C) : (term2103 A C _74669) = (term2098 A C _74669).
Proof. exact (eq_refl (term2103 A C _74669)). Qed.
Lemma lem5934633 {A C : Type'} (_74669 : type1400 C) (h1 : term1690 A C) : term2098 A C _74669.
Proof. exact (EQ_MP (@lem5934632 A C _74669) (@lem5934631 A C _74669 h1)). Qed.
Lemma lem5934634 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (h1 : term1690 A C) : term2104 A C _74669 _74670.
Proof. exact (@lem5934633 A C _74669 h1 _74670). Qed.
Lemma lem5934635 {A C : Type'} (_74670 : A -> C) (_74669 : type1400 C) : (term2104 A C _74669 _74670) = (term2096 A C _74670 _74669).
Proof. exact (eq_refl (term2104 A C _74669 _74670)). Qed.
Lemma lem5934636 {A C : Type'} (_74670 : A -> C) (_74669 : type1400 C) (h1 : term1690 A C) : term2096 A C _74670 _74669.
Proof. exact (EQ_MP (@lem5934635 A C _74670 _74669) (@lem5934634 A C _74669 _74670 h1)). Qed.
Lemma lem5934637 {A C : Type'} (_74670 : A -> C) (_74669 : type1400 C) (_74671 : A) (h1 : term1690 A C) : term2105 A C _74670 _74669 _74671.
Proof. exact (@lem5934636 A C _74670 _74669 h1 _74671). Qed.
Lemma lem5934638 {A C : Type'} (_74670 : A -> C) (_74671 : A) (_74669 : type1400 C) : (term2105 A C _74670 _74669 _74671) = (term2094 A C _74670 _74671 _74669).
Proof. exact (eq_refl (term2105 A C _74670 _74669 _74671)). Qed.
Lemma lem5934639 {A C : Type'} (_74670 : A -> C) (_74671 : A) (_74669 : type1400 C) (h1 : term1690 A C) : term2094 A C _74670 _74671 _74669.
Proof. exact (EQ_MP (@lem5934638 A C _74670 _74671 _74669) (@lem5934637 A C _74670 _74669 _74671 h1)). Qed.
Lemma lem5934640 {A C : Type'} (_74670 : A -> C) (_74671 : A) (_74669 : type1400 C) (_74672 : A -> Prop) (h1 : term1690 A C) : term2106 A C _74670 _74671 _74669 _74672.
Proof. exact (@lem5934639 A C _74670 _74671 _74669 h1 _74672). Qed.
Lemma lem5934641 {A C : Type'} (_74672 : A -> Prop) (_74670 : A -> C) (_74671 : A) (_74669 : type1400 C) : (term2106 A C _74670 _74671 _74669 _74672) = (term2092 A C _74672 _74670 _74671 _74669).
Proof. exact (eq_refl (term2106 A C _74670 _74671 _74669 _74672)). Qed.
Lemma lem5934642 {A C : Type'} (_74672 : A -> Prop) (_74670 : A -> C) (_74671 : A) (_74669 : type1400 C) (h1 : term1690 A C) : term2092 A C _74672 _74670 _74671 _74669.
Proof. exact (EQ_MP (@lem5934641 A C _74672 _74670 _74671 _74669) (@lem5934640 A C _74670 _74671 _74669 _74672 h1)). Qed.
Lemma lem5934760 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term2034 A B s f _74662 _74663) = (term2107 A B s f _74662 _74663).
Proof. exact (@lem5825993 (term1297 A _74662 s) (term1454 A B s _74662 f _74663) (_74662 = _74663)). Qed.
Lemma lem5934767 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term2108 A B s f _74662 _74663) = (term1408 A B s f _74662 _74663).
Proof. exact (@lem5825993 (term1297 A _74663 s) (term1342 A B _74662 f _74663) (_74662 = _74663)). Qed.
Lemma lem5934768 {A : Type'} (_74662 : A) (s : A -> Prop) : (term1444 A _74662 s) = (term1444 A _74662 s).
Proof. exact (eq_refl (term1444 A _74662 s)). Qed.
Lemma lem5934771 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term2107 A B s f _74662 _74663) = (term1432 A B s f _74662 _74663).
Proof. exact (MK_COMB (@lem5934768 A _74662 s) (@lem5934767 A B s f _74662 _74663)). Qed.
Lemma lem5934773 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term2034 A B s f _74662 _74663) = (term1432 A B s f _74662 _74663).
Proof. exact (TRANS (@lem5934760 A B s f _74662 _74663) (@lem5934771 A B s f _74662 _74663)). Qed.
Lemma lem5934774 {A B : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1432 A B s f _74662 _74663.
Proof. exact (EQ_MP (@lem5934773 A B s f _74662 _74663) (@lem5934615 A B _74662 _74663 s f h1)). Qed.
Lemma lem5934776 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term1361 A x y.
Proof. exact (proj2 (@lem5933960 A B C op g s f x y h1)). Qed.
Lemma lem5934886 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) (h1 : term1690 A C) : term2109 A C _74669 _74670 _74671 _74672.
Proof. exact (proj1 (@lem5934642 A C _74672 _74670 _74671 _74669 h1)). Qed.
Lemma lem5935626 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2083 A B C x op g f s.
Proof. exact (proj1 (@lem5934180 A B C op g s f x y h1)). Qed.
Lemma lem5935627 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2110 A B C x op g f s.
Proof. exact (fun h0 : term2111 A B C x op g f s => @lem5935626 A B C op g s f x y h1). Qed.
Lemma lem5935629 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935630 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2110 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (@lem5935629 (term2083 A B C x op g f s)). Qed.
Lemma lem5935631 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2083 A B C x op g f s.
Proof. exact (EQ_MP (@lem5935630 A B C x op g f s) (@lem5935627 A B C op g s f x y h1)). Qed.
Lemma lem5935637 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5935638 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : (term2109 A C _74669 _74670 _74671 _74672) = (term2112 A C _74671 _74669 _74670 _74672).
Proof. exact (@lem5935637 (term1296 A _74671 _74672) (term2048 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935644 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5935645 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : (term2113 A C _74669 _74670 _74671 _74672) = (term2114 A C _74671 _74669 _74670 _74672).
Proof. exact (MK_COMB (@lem5935644) (@lem5935638 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935651 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : (term2112 A C _74671 _74669 _74670 _74672) = (term2112 A C _74671 _74669 _74670 _74672).
Proof. exact (eq_refl (term2112 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935652 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : ((term2109 A C _74669 _74670 _74671 _74672) = (term2112 A C _74671 _74669 _74670 _74672)) = ((term2112 A C _74671 _74669 _74670 _74672) = (term2112 A C _74671 _74669 _74670 _74672)).
Proof. exact (MK_COMB (@lem5935645 A C _74671 _74669 _74670 _74672) (@lem5935651 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935654 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5935655 (x : Prop) : (x = x) = True.
Proof. exact (@lem5935654 Prop x). Qed.
Lemma lem5935656 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : ((term2112 A C _74671 _74669 _74670 _74672) = (term2112 A C _74671 _74669 _74670 _74672)) = True.
Proof. exact (@lem5935655 (term2112 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935657 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : ((term2109 A C _74669 _74670 _74671 _74672) = (term2112 A C _74671 _74669 _74670 _74672)) = True.
Proof. exact (TRANS (@lem5935652 A C _74671 _74669 _74670 _74672) (@lem5935656 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935658 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : True = ((term2109 A C _74669 _74670 _74671 _74672) = (term2112 A C _74671 _74669 _74670 _74672)).
Proof. exact (SYM (@lem5935657 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935659 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : (term2109 A C _74669 _74670 _74671 _74672) = (term2112 A C _74671 _74669 _74670 _74672).
Proof. exact (EQ_MP (@lem5935658 A C _74671 _74669 _74670 _74672) (@lem0)). Qed.
Lemma lem5935660 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) (h1 : term1690 A C) : term2112 A C _74671 _74669 _74670 _74672.
Proof. exact (EQ_MP (@lem5935659 A C _74671 _74669 _74670 _74672) (@lem5934886 A C _74669 _74670 _74671 _74672 h1)). Qed.
Lemma lem5935662 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5935663 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) : (term2112 A C _74671 _74669 _74670 _74672) = (term2115 A C _74669 _74670 _74671 _74672).
Proof. exact (@lem5935662 (term2048 A C _74671 _74669 _74670 _74672) (term1296 A _74671 _74672)). Qed.
Lemma lem5935665 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5935666 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : (term2116 A C _74671 _74669 _74670 _74672) = (term2046 A C _74671 _74669 _74670 _74672).
Proof. exact (@lem5935665 (term2046 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935667 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5935668 {A C : Type'} (_74671 : A) (_74669 : type1400 C) (_74670 : A -> C) (_74672 : A -> Prop) : (term2117 A C _74671 _74669 _74670 _74672) = (term2118 A C _74671 _74669 _74670 _74672).
Proof. exact (MK_COMB (@lem5935667) (@lem5935666 A C _74671 _74669 _74670 _74672)). Qed.
Lemma lem5935669 {A : Type'} (_74671 : A) (_74672 : A -> Prop) : (term1296 A _74671 _74672) = (term1296 A _74671 _74672).
Proof. exact (eq_refl (term1296 A _74671 _74672)). Qed.
Lemma lem5935670 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) : (term2115 A C _74669 _74670 _74671 _74672) = (term2119 A C _74669 _74670 _74671 _74672).
Proof. exact (MK_COMB (@lem5935668 A C _74671 _74669 _74670 _74672) (@lem5935669 A _74671 _74672)). Qed.
Lemma lem5935671 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) : (term2112 A C _74671 _74669 _74670 _74672) = (term2119 A C _74669 _74670 _74671 _74672).
Proof. exact (TRANS (@lem5935663 A C _74669 _74670 _74671 _74672) (@lem5935670 A C _74669 _74670 _74671 _74672)). Qed.
Lemma lem5935674 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74669 _74670 _74671 _74672.
Proof. exact (EQ_MP (@lem5935671 A C _74669 _74670 _74671 _74672) (@lem5935660 A C _74671 _74669 _74670 _74672 h1)). Qed.
Lemma lem5935675 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74669 _74670 _74671 _74672.
Proof. exact (@lem5935674 A C _74669 _74670 _74671 _74672 h1). Qed.
Lemma lem5935676 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term1690 A C) : term2120 A B C op g f x s.
Proof. exact (@lem5935675 A C op (term1329 A B C g f) x s h1). Qed.
Lemma lem5935679 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1296 A x s.
Proof. exact (@lem5935676 A B C op g f x s h1 (@lem5935631 A B C op g s f x y h2)). Qed.
Lemma lem5935680 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1436 A x s.
Proof. exact (fun h0 : term1297 A x s => @lem5935679 A B C op g s f x y h1 h2). Qed.
Lemma lem5935682 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935683 {A : Type'} (x : A) (s : A -> Prop) : (term1436 A x s) = (term1296 A x s).
Proof. exact (@lem5935682 (term1296 A x s)). Qed.
Lemma lem5935684 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1296 A x s.
Proof. exact (EQ_MP (@lem5935683 A x s) (@lem5935680 A B C op g s f x y h1 h2)). Qed.
Lemma lem5935686 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2083 A B C y op g f s.
Proof. exact (proj1 (@lem5934181 A B C op g s f x y h1)). Qed.
Lemma lem5935687 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2110 A B C y op g f s.
Proof. exact (fun h0 : term2111 A B C y op g f s => @lem5935686 A B C op g s f x y h1). Qed.
Lemma lem5935689 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935690 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2110 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (@lem5935689 (term2083 A B C y op g f s)). Qed.
Lemma lem5935691 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term2083 A B C y op g f s.
Proof. exact (EQ_MP (@lem5935690 A B C y op g f s) (@lem5935687 A B C op g s f x y h1)). Qed.
Lemma lem5935693 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74669 _74670 _74671 _74672.
Proof. exact (EQ_MP (@lem5935671 A C _74669 _74670 _74671 _74672) (@lem5935660 A C _74671 _74669 _74670 _74672 h1)). Qed.
Lemma lem5935694 {A C : Type'} (_74669 : type1400 C) (_74670 : A -> C) (_74671 : A) (_74672 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74669 _74670 _74671 _74672.
Proof. exact (@lem5935693 A C _74669 _74670 _74671 _74672 h1). Qed.
Lemma lem5935695 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (y : A) (s : A -> Prop) (h1 : term1690 A C) : term2120 A B C op g f y s.
Proof. exact (@lem5935694 A C op (term1329 A B C g f) y s h1). Qed.
Lemma lem5935698 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1296 A y s.
Proof. exact (@lem5935695 A B C op g f y s h1 (@lem5935691 A B C op g s f x y h2)). Qed.
Lemma lem5935699 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1436 A y s.
Proof. exact (fun h0 : term1297 A y s => @lem5935698 A B C op g s f x y h1 h2). Qed.
Lemma lem5935701 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935702 {A : Type'} (y : A) (s : A -> Prop) : (term1436 A y s) = (term1296 A y s).
Proof. exact (@lem5935701 (term1296 A y s)). Qed.
Lemma lem5935703 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1296 A y s.
Proof. exact (EQ_MP (@lem5935702 A y s) (@lem5935699 A B C op g s f x y h1 h2)). Qed.
Lemma lem5935705 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : (@I (A -> B) f x) = (@I (A -> B) f y).
Proof. exact (proj2 (@lem5934181 A B C op g s f x y h1)). Qed.
Lemma lem5935706 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term1438 A B x f y.
Proof. exact (fun h0 : term1342 A B x f y => @lem5935705 A B C op g s f x y h1). Qed.
Lemma lem5935708 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935709 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term1438 A B x f y) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (@lem5935708 ((@I (A -> B) f x) = (@I (A -> B) f y))). Qed.
Lemma lem5935710 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : (@I (A -> B) f x) = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem5935709 A B x f y) (@lem5935706 A B C op g s f x y h1)). Qed.
Lemma lem5935726 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5935727 {A B : Type'} (f : A -> B) (s : A -> Prop) (_74662 : A) (_74663 : A) : (term1408 A B s f _74662 _74663) = (term1439 A B f s _74662 _74663).
Proof. exact (@lem5935726 (term1342 A B _74662 f _74663) (term1297 A _74663 s) (_74662 = _74663)). Qed.
Lemma lem5935743 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5935744 {A : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1440 A s _74662 _74663) = (term1441 A _74662 _74663 s).
Proof. exact (@lem5935743 (_74662 = _74663) (term1297 A _74663 s)). Qed.
Lemma lem5935752 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) : (term1344 A B _74662 f _74663) = (term1344 A B _74662 f _74663).
Proof. exact (eq_refl (term1344 A B _74662 f _74663)). Qed.
Lemma lem5935753 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1439 A B f s _74662 _74663) = (term1442 A B f _74662 _74663 s).
Proof. exact (MK_COMB (@lem5935752 A B _74662 f _74663) (@lem5935744 A _74662 _74663 s)). Qed.
Lemma lem5935757 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5935758 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1442 A B f _74662 _74663 s) = (term1443 A B _74662 f _74663 s).
Proof. exact (@lem5935757 (_74662 = _74663) (term1342 A B _74662 f _74663) (term1297 A _74663 s)). Qed.
Lemma lem5935778 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1439 A B f s _74662 _74663) = (term1443 A B _74662 f _74663 s).
Proof. exact (TRANS (@lem5935753 A B f _74662 _74663 s) (@lem5935758 A B _74662 f _74663 s)). Qed.
Lemma lem5935779 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1408 A B s f _74662 _74663) = (term1443 A B _74662 f _74663 s).
Proof. exact (TRANS (@lem5935727 A B f s _74662 _74663) (@lem5935778 A B _74662 f _74663 s)). Qed.
Lemma lem5935780 {A : Type'} (_74662 : A) (s : A -> Prop) : (term1444 A _74662 s) = (term1444 A _74662 s).
Proof. exact (eq_refl (term1444 A _74662 s)). Qed.
Lemma lem5935781 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1432 A B s f _74662 _74663) = (term1445 A B _74662 f _74663 s).
Proof. exact (MK_COMB (@lem5935780 A _74662 s) (@lem5935779 A B _74662 f _74663 s)). Qed.
Lemma lem5935785 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5935786 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1445 A B _74662 f _74663 s) = (term1446 A B _74662 f _74663 s).
Proof. exact (@lem5935785 (_74662 = _74663) (term1297 A _74662 s) (term1447 A B _74662 f _74663 s)). Qed.
Lemma lem5935802 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5935803 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1448 A B _74662 f _74663 s) = (term1449 A B f _74662 _74663 s).
Proof. exact (@lem5935802 (term1342 A B _74662 f _74663) (term1297 A _74662 s) (term1297 A _74663 s)). Qed.
Lemma lem5935821 {A : Type'} (_74662 : A) (_74663 : A) : (term1450 A _74662 _74663) = (term1450 A _74662 _74663).
Proof. exact (eq_refl (term1450 A _74662 _74663)). Qed.
Lemma lem5935822 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1446 A B _74662 f _74663 s) = (term1451 A B f _74662 _74663 s).
Proof. exact (MK_COMB (@lem5935821 A _74662 _74663) (@lem5935803 A B f _74662 _74663 s)). Qed.
Lemma lem5935833 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1445 A B _74662 f _74663 s) = (term1451 A B f _74662 _74663 s).
Proof. exact (TRANS (@lem5935786 A B _74662 f _74663 s) (@lem5935822 A B f _74662 _74663 s)). Qed.
Lemma lem5935834 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1432 A B s f _74662 _74663) = (term1451 A B f _74662 _74663 s).
Proof. exact (TRANS (@lem5935781 A B _74662 f _74663 s) (@lem5935833 A B f _74662 _74663 s)). Qed.
Lemma lem5935835 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5935836 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1452 A B s f _74662 _74663) = (term1453 A B f _74662 _74663 s).
Proof. exact (MK_COMB (@lem5935835) (@lem5935834 A B f _74662 _74663 s)). Qed.
Lemma lem5935862 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5935863 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1454 A B s _74662 f _74663) = (term1447 A B _74662 f _74663 s).
Proof. exact (@lem5935862 (term1342 A B _74662 f _74663) (term1297 A _74663 s)). Qed.
Lemma lem5935871 {A : Type'} (_74662 : A) (s : A -> Prop) : (term1444 A _74662 s) = (term1444 A _74662 s).
Proof. exact (eq_refl (term1444 A _74662 s)). Qed.
Lemma lem5935872 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) (s : A -> Prop) : (term1455 A B s _74662 f _74663) = (term1448 A B _74662 f _74663 s).
Proof. exact (MK_COMB (@lem5935871 A _74662 s) (@lem5935863 A B _74662 f _74663 s)). Qed.
Lemma lem5935876 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5935877 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1448 A B _74662 f _74663 s) = (term1449 A B f _74662 _74663 s).
Proof. exact (@lem5935876 (term1342 A B _74662 f _74663) (term1297 A _74662 s) (term1297 A _74663 s)). Qed.
Lemma lem5935895 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1455 A B s _74662 f _74663) = (term1449 A B f _74662 _74663 s).
Proof. exact (TRANS (@lem5935872 A B _74662 f _74663 s) (@lem5935877 A B f _74662 _74663 s)). Qed.
Lemma lem5935896 {A : Type'} (_74662 : A) (_74663 : A) : (term1450 A _74662 _74663) = (term1450 A _74662 _74663).
Proof. exact (eq_refl (term1450 A _74662 _74663)). Qed.
Lemma lem5935897 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : (term1456 A B s _74662 f _74663) = (term1451 A B f _74662 _74663 s).
Proof. exact (MK_COMB (@lem5935896 A _74662 _74663) (@lem5935895 A B f _74662 _74663 s)). Qed.
Lemma lem5935908 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : ((term1432 A B s f _74662 _74663) = (term1456 A B s _74662 f _74663)) = ((term1451 A B f _74662 _74663 s) = (term1451 A B f _74662 _74663 s)).
Proof. exact (MK_COMB (@lem5935836 A B f _74662 _74663 s) (@lem5935897 A B f _74662 _74663 s)). Qed.
Lemma lem5935910 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5935911 (x : Prop) : (x = x) = True.
Proof. exact (@lem5935910 Prop x). Qed.
Lemma lem5935912 {A B : Type'} (f : A -> B) (_74662 : A) (_74663 : A) (s : A -> Prop) : ((term1451 A B f _74662 _74663 s) = (term1451 A B f _74662 _74663 s)) = True.
Proof. exact (@lem5935911 (term1451 A B f _74662 _74663 s)). Qed.
Lemma lem5935913 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : ((term1432 A B s f _74662 _74663) = (term1456 A B s _74662 f _74663)) = True.
Proof. exact (TRANS (@lem5935908 A B f _74662 _74663 s) (@lem5935912 A B f _74662 _74663 s)). Qed.
Lemma lem5935914 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : True = ((term1432 A B s f _74662 _74663) = (term1456 A B s _74662 f _74663)).
Proof. exact (SYM (@lem5935913 A B s _74662 f _74663)). Qed.
Lemma lem5935915 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1432 A B s f _74662 _74663) = (term1456 A B s _74662 f _74663).
Proof. exact (EQ_MP (@lem5935914 A B s _74662 f _74663) (@lem0)). Qed.
Lemma lem5935916 {A B : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1456 A B s _74662 f _74663.
Proof. exact (EQ_MP (@lem5935915 A B s _74662 f _74663) (@lem5934774 A B _74662 _74663 s f h1)). Qed.
Lemma lem5935918 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5935919 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term1456 A B s _74662 f _74663) = (term1458 A B s f _74662 _74663).
Proof. exact (@lem5935918 (term1455 A B s _74662 f _74663) (_74662 = _74663)). Qed.
Lemma lem5935921 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5935922 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1461 A B s _74662 f _74663) = (term1462 A B s _74662 f _74663).
Proof. exact (@lem5935921 (term1297 A _74662 s) (term1454 A B s _74662 f _74663)). Qed.
Lemma lem5935924 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5935925 {A : Type'} (_74662 : A) (s : A -> Prop) : (term1464 A _74662 s) = (term1296 A _74662 s).
Proof. exact (@lem5935924 (term1296 A _74662 s)). Qed.
Lemma lem5935926 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5935927 {A : Type'} (_74662 : A) (s : A -> Prop) : (term1465 A _74662 s) = (term1365 A _74662 s).
Proof. exact (MK_COMB (@lem5935926) (@lem5935925 A _74662 s)). Qed.
Lemma lem5935929 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5935930 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1466 A B s _74662 f _74663) = (term1467 A B s _74662 f _74663).
Proof. exact (@lem5935929 (term1297 A _74663 s) (term1342 A B _74662 f _74663)). Qed.
Lemma lem5935932 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5935933 {A : Type'} (_74663 : A) (s : A -> Prop) : (term1464 A _74663 s) = (term1296 A _74663 s).
Proof. exact (@lem5935932 (term1296 A _74663 s)). Qed.
Lemma lem5935934 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5935935 {A : Type'} (_74663 : A) (s : A -> Prop) : (term1465 A _74663 s) = (term1365 A _74663 s).
Proof. exact (MK_COMB (@lem5935934) (@lem5935933 A _74663 s)). Qed.
Lemma lem5935937 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5935938 {A B : Type'} (_74662 : A) (f : A -> B) (_74663 : A) : (term1468 A B _74662 f _74663) = ((@I (A -> B) f _74662) = (@I (A -> B) f _74663)).
Proof. exact (@lem5935937 ((@I (A -> B) f _74662) = (@I (A -> B) f _74663))). Qed.
Lemma lem5935939 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1467 A B s _74662 f _74663) = (term1469 A B s _74662 f _74663).
Proof. exact (MK_COMB (@lem5935935 A _74663 s) (@lem5935938 A B _74662 f _74663)). Qed.
Lemma lem5935940 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1466 A B s _74662 f _74663) = (term1469 A B s _74662 f _74663).
Proof. exact (TRANS (@lem5935930 A B s _74662 f _74663) (@lem5935939 A B s _74662 f _74663)). Qed.
Lemma lem5935941 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1462 A B s _74662 f _74663) = (term1470 A B s _74662 f _74663).
Proof. exact (MK_COMB (@lem5935927 A _74662 s) (@lem5935940 A B s _74662 f _74663)). Qed.
Lemma lem5935942 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1461 A B s _74662 f _74663) = (term1470 A B s _74662 f _74663).
Proof. exact (TRANS (@lem5935922 A B s _74662 f _74663) (@lem5935941 A B s _74662 f _74663)). Qed.
Lemma lem5935943 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5935944 {A B : Type'} (s : A -> Prop) (_74662 : A) (f : A -> B) (_74663 : A) : (term1471 A B s _74662 f _74663) = (term1472 A B s _74662 f _74663).
Proof. exact (MK_COMB (@lem5935943) (@lem5935942 A B s _74662 f _74663)). Qed.
Lemma lem5935945 {A : Type'} (_74662 : A) (_74663 : A) : (_74662 = _74663) = (_74662 = _74663).
Proof. exact (eq_refl (_74662 = _74663)). Qed.
Lemma lem5935946 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term1458 A B s f _74662 _74663) = (term1473 A B s f _74662 _74663).
Proof. exact (MK_COMB (@lem5935944 A B s _74662 f _74663) (@lem5935945 A _74662 _74663)). Qed.
Lemma lem5935947 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74662 : A) (_74663 : A) : (term1456 A B s _74662 f _74663) = (term1473 A B s f _74662 _74663).
Proof. exact (TRANS (@lem5935919 A B s f _74662 _74663) (@lem5935946 A B s f _74662 _74663)). Qed.
Lemma lem5935949 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1469 A B s x f y.
Proof. exact (conj (@lem5935703 A B C op g s f x y h1 h2) (@lem5935710 A B C op g s f x y h2)). Qed.
Lemma lem5935950 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term1909 A B C op g s f x y) : term1470 A B s x f y.
Proof. exact (conj (@lem5935684 A B C op g s f x y h1 h2) (@lem5935949 A B C op g s f x y h1 h2)). Qed.
Lemma lem5935952 {A B : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1473 A B s f _74662 _74663.
Proof. exact (EQ_MP (@lem5935947 A B s f _74662 _74663) (@lem5935916 A B _74662 _74663 s f h1)). Qed.
Lemma lem5935953 {A B : Type'} (_74662 : A) (_74663 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1473 A B s f _74662 _74663.
Proof. exact (@lem5935952 A B _74662 _74663 s f h1). Qed.
Lemma lem5935954 {A B : Type'} (x : A) (y : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1473 A B s f x y.
Proof. exact (@lem5935953 A B x y s f h1). Qed.
Lemma lem5935957 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1909 A B C op g s f x y) : x = y.
Proof. exact (@lem5935954 A B x y s f h1 (@lem5935950 A B C op g s f x y h2 h3)). Qed.
Lemma lem5935958 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1909 A B C op g s f x y) : term1474 A x y.
Proof. exact (fun h0 : term1361 A x y => @lem5935957 A B C op g s f x y h1 h2 h3). Qed.
Lemma lem5935960 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935961 {A : Type'} (x : A) (y : A) : (term1474 A x y) = (x = y).
Proof. exact (@lem5935960 (x = y)). Qed.
Lemma lem5935962 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1909 A B C op g s f x y) : x = y.
Proof. exact (EQ_MP (@lem5935961 A x y) (@lem5935958 A B C op g s f x y h1 h2 h3)). Qed.
Lemma lem5935965 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5935967 {A : Type'} (x : A) (y : A) : (term1361 A x y) = (term1475 A x y).
Proof. exact (@lem5935965 (x = y)). Qed.
Lemma lem5935970 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1909 A B C op g s f x y) : term1475 A x y.
Proof. exact (EQ_MP (@lem5935967 A x y) (@lem5934776 A B C op g s f x y h1)). Qed.
Lemma lem5935973 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1909 A B C op g s f x y) : False.
Proof. exact (@lem5935970 A B C op g s f x y h3 (@lem5935962 A B C op g s f x y h1 h2 h3)). Qed.
Lemma lem5935974 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1909 A B C op g s f x y) : term1476.
Proof. exact (fun h0 : ~ False => @lem5935973 A B C op g s f x y h1 h2 h3). Qed.
Lemma lem5935976 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5935977 : term1476 = False.
Proof. exact (@lem5935976 False). Qed.
Lemma lem5935978 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1909 A B C op g s f x y) : False.
Proof. exact (EQ_MP (@lem5935977) (@lem5935974 A B C op g s f x y h1 h2 h3)). Qed.
Lemma lem5935979 {A B C : Type'} (x' : type684 A) (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1891 A B C x' op g f) (h4 : term1909 A B C op g s f x y) : False.
Proof. exact (ex_elim (@lem5932720 A B C x' op g f h3) (fun y' : type684 A => fun h0 : term1890 A B C x' op g f y' => @lem5935978 A B C op g s f x y h1 h2 h4)). Qed.
Lemma lem5935980 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1690 A C) (h4 : term1909 A B C op g s f x y) : False.
Proof. exact (ex_elim (@lem5929508 A B C op g f h2) (fun x' : type684 A => fun h0 : term1892 A B C op g f x' => @lem5935979 A B C x' op g s f x y h1 h3 h0 h4)). Qed.
Lemma lem5935981 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1690 A C) (h4 : term1917 A B C op g s f x) : False.
Proof. exact (ex_elim (@lem5932718 A B C op g s f x h4) (fun y : A => fun h0 : term1916 A B C op g s f x y => @lem5935980 A B C op g s f x y h1 h2 h3 h0)). Qed.
Lemma lem5935982 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1690 A C) (h4 : term1688 A B C op g s f) : False.
Proof. exact (ex_elim (@lem5929682 A B C op g s f h4) (fun x : A => fun h0 : term1922 A B C op g s f x => @lem5935981 A B C op g s f x h1 h2 h3 h0)). Qed.
Lemma lem5935983 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1688 A B C op g s f) : term1695 A C.
Proof. exact (fun h0 : term1690 A C => @lem5935982 A B C op g s f h1 h2 h0 h3). Qed.
Lemma lem5935984 {A C : Type'} : (term1695 A C) = (term1696 A C).
Proof. exact (@lem69 (term1690 A C)). Qed.
Lemma lem5935985 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1688 A B C op g s f) : term1696 A C.
Proof. exact (EQ_MP (@lem5935984 A C) (@lem5935983 A B C op g s f h1 h2 h3)). Qed.
Lemma lem5935986 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1688 A B C op g s f) : term1699 _119829 A C.
Proof. exact (fun h0 : term1690 _119829 C => @lem5935985 A B C op g s f h1 h2 h3). Qed.
Lemma lem5935987 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1688 A B C op g s f) : term1701 _119829 A B C.
Proof. exact (fun h0 : term1690 _119829 B => @lem5935986 _119829 A B C op g s f h1 h2 h3). Qed.
Lemma lem5935988 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1688 A B C op g s f) : term1703 _119829 A B C.
Proof. exact (fun h0 : term1690 _119829 A => @lem5935987 _119829 A B C op g s f h1 h2 h3). Qed.
Lemma lem5935989 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1688 A B C op g s f) : term1706 _119826 _119829 A B C.
Proof. exact (fun h0 : term1689 _119826 A => @lem5935988 _119829 A B C op g s f h1 h2 h3). Qed.
Lemma lem5935990 {_119826 _119829 A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) : term1709 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term1688 A B C op g s f => @lem5935989 _119826 _119829 A B C op g s f h1 h2 h0). Qed.
Lemma lem5935991 {_119826 _119829 A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term1711 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term12 A B s f => @lem5935990 _119826 _119829 A B C s op g f h0 h1). Qed.
Lemma lem5935992 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1714 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term116 A B C op g f => @lem5935991 _119826 _119829 A B C s op g f h0). Qed.
Lemma lem5935993 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1715 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : @monoidal C op => @lem5935992 _119826 _119829 A B C op g s f). Qed.
Lemma lem5935998 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : term1719 _119826 _119829 A B C g s f.
Proof. exact (fun op : type1400 C => @lem5935993 _119826 _119829 A B C op g s f). Qed.
Lemma lem5936003 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : term1723 _119826 _119829 A B C s f.
Proof. exact (fun g : B -> C => @lem5935998 _119826 _119829 A B C g s f). Qed.
Lemma lem5936008 {_119826 _119829 A B C : Type'} (f : A -> B) : term1727 _119826 _119829 A B C f.
Proof. exact (fun s : A -> Prop => @lem5936003 _119826 _119829 A B C s f). Qed.
Lemma lem5936013 {_119826 _119829 A B C : Type'} : term1731 _119826 _119829 A B C.
Proof. exact (fun f : A -> B => @lem5936008 _119826 _119829 A B C f). Qed.
Lemma lem5936014 {_119826 _119829 A B C : Type'} : term1730 _119826 _119829 A B C.
Proof. exact (EQ_MP (@lem5929170 _119826 _119829 A B C) (@lem5936013 _119826 _119829 A B C)). Qed.
Lemma lem5936015 {_119826 _119829 A B C : Type'} (f : A -> B) : term2121 _119826 _119829 A B C f.
Proof. exact (@lem5936014 _119826 _119829 A B C f). Qed.
Lemma lem5936016 {_119826 _119829 A B C : Type'} (f : A -> B) : (term2121 _119826 _119829 A B C f) = (term1726 _119826 _119829 A B C f).
Proof. exact (eq_refl (term2121 _119826 _119829 A B C f)). Qed.
Lemma lem5936017 {_119826 _119829 A B C : Type'} (f : A -> B) : term1726 _119826 _119829 A B C f.
Proof. exact (EQ_MP (@lem5936016 _119826 _119829 A B C f) (@lem5936015 _119826 _119829 A B C f)). Qed.
Lemma lem5936018 {_119826 _119829 A B C : Type'} (f : A -> B) (s : A -> Prop) : term2122 _119826 _119829 A B C f s.
Proof. exact (@lem5936017 _119826 _119829 A B C f s). Qed.
Lemma lem5936019 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term2122 _119826 _119829 A B C f s) = (term1722 _119826 _119829 A B C s f).
Proof. exact (eq_refl (term2122 _119826 _119829 A B C f s)). Qed.
Lemma lem5936020 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : term1722 _119826 _119829 A B C s f.
Proof. exact (EQ_MP (@lem5936019 _119826 _119829 A B C s f) (@lem5936018 _119826 _119829 A B C f s)). Qed.
Lemma lem5936021 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) (g : B -> C) : term2123 _119826 _119829 A B C s f g.
Proof. exact (@lem5936020 _119826 _119829 A B C s f g). Qed.
Lemma lem5936022 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2123 _119826 _119829 A B C s f g) = (term1718 _119826 _119829 A B C g s f).
Proof. exact (eq_refl (term2123 _119826 _119829 A B C s f g)). Qed.
Lemma lem5936023 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : term1718 _119826 _119829 A B C g s f.
Proof. exact (EQ_MP (@lem5936022 _119826 _119829 A B C g s f) (@lem5936021 _119826 _119829 A B C s f g)). Qed.
Lemma lem5936024 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) (op : type1400 C) : term2124 _119826 _119829 A B C g s f op.
Proof. exact (@lem5936023 _119826 _119829 A B C g s f op). Qed.
Lemma lem5936025 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2124 _119826 _119829 A B C g s f op) = (term1691 _119826 _119829 A B C op g s f).
Proof. exact (eq_refl (term2124 _119826 _119829 A B C g s f op)). Qed.
Lemma lem5936026 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1691 _119826 _119829 A B C op g s f.
Proof. exact (EQ_MP (@lem5936025 _119826 _119829 A B C op g s f) (@lem5936024 _119826 _119829 A B C g s f op)). Qed.
Lemma lem5936028 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term1691 _119826 _119829 A B C op g s f.
Proof. exact (@lem5928469 _119826 _119829 A B C op g s f (@lem5936026 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936029 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term1713 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936028 _119826 _119829 A B C op g s f (@lem5826509 C op h1)). Qed.
Lemma lem5936030 {_119826 _119829 A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term116 A B C op g f) (h2 : @monoidal C op) : term1710 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936029 _119826 _119829 A B C g s f op h2 (@lem5826510 A B C op g f h1)). Qed.
Lemma lem5936031 {_119826 _119829 A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : term1708 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936030 _119826 _119829 A B C s g f op h2 h3 (@lem5928378 A B s f h1)). Qed.
Lemma lem5936032 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : term1705 _119826 _119829 A B C.
Proof. exact (@lem5936031 _119826 _119829 A B C s g f op h1 h2 h3 (@lem5928448 A B C op g s f h4)). Qed.
Lemma lem5936033 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : term1702 _119829 A B C.
Proof. exact (@lem5936032 Prop _119829 A B C op g s f h1 h2 h3 h4 (@lem5928449 Prop A)). Qed.
Lemma lem5936034 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : term1700 _119829 A B C.
Proof. exact (@lem5936033 _119829 A B C op g s f h1 h2 h3 h4 (@lem5928452 _119829 A)). Qed.
Lemma lem5936035 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : term1698 _119829 A C.
Proof. exact (@lem5936034 _119829 A B C op g s f h1 h2 h3 h4 (@lem5928451 _119829 B)). Qed.
Lemma lem5936036 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : term1695 A C.
Proof. exact (@lem5936035 Prop A B C op g s f h1 h2 h3 h4 (@lem5928453 Prop C)). Qed.
Lemma lem5936037 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : False.
Proof. exact (@lem5936036 A B C op g s f h1 h2 h3 h4 (@lem5928450 A C)). Qed.
Lemma lem5936038 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : (term1688 A B C op g s f) = False.
Proof. exact (prop_ext (fun h5 : term1688 A B C op g s f => @lem5936037 A B C op g s f h1 h2 h3 h4) (fun h5 : False => @lem5928448 A B C op g s f h4)). Qed.
Lemma lem5936039 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) (h4 : term1688 A B C op g s f) : False.
Proof. exact (EQ_MP (@lem5936038 A B C op g s f h1 h2 h3 h4) (@lem5928448 A B C op g s f h4)). Qed.
Lemma lem5936040 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : term1687 A B C op g s f.
Proof. exact (fun h0 : term1688 A B C op g s f => @lem5936039 A B C op g s f h1 h2 h3 h0). Qed.
Lemma lem5936041 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : term1686 A B C op g s f.
Proof. exact (EQ_MP (@lem5928447 A B C op g s f) (@lem5936040 A B C s g f op h1 h2 h3)). Qed.
Lemma lem5936042 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : (term1669 A B C op g f s) = (term1665 A B C op g f s).
Proof. exact (@lem5928443 A B C op g f s (@lem5936041 A B C s g f op h1 h2 h3)). Qed.
Lemma lem5936070 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term116 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5936071 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term2125 A B C op g f s.
Proof. exact (@lem5936070 A B C op g f h1 s). Qed.
Lemma lem5936072 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term2125 A B C op g f s) = (term119 A B C op s g f).
Proof. exact (eq_refl (term2125 A B C op g f s)). Qed.
Lemma lem5936073 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term119 A B C op s g f.
Proof. exact (EQ_MP (@lem5936072 A B C op s g f) (@lem5936071 A B C s op g f h1)). Qed.
Lemma lem5936074 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term1754 A B s f) : term1754 A B s f.
Proof. exact (h1). Qed.
Lemma lem5936075 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term116 A B C op g f) (h2 : term1754 A B s f) : (term121 A B C op f s g) = (term122 A B C op s g f).
Proof. exact (@lem5936073 A B C s op g f h1 (@lem5936074 A B s f h2)). Qed.
Lemma lem5936076 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term1754 A B s f) : term2126 A B C op s g f.
Proof. exact (fun h0 : term116 A B C op g f => @lem5936075 A B C op g s f h0 h1). Qed.
Lemma lem5936077 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term116 A B C op g f.
Proof. exact (h1). Qed.
Lemma lem5936078 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term116 A B C op g f) (h2 : term1754 A B s f) : (term121 A B C op f s g) = (term122 A B C op s g f).
Proof. exact (@lem5936076 A B C op g s f h2 (@lem5936077 A B C op g f h1)). Qed.
Lemma lem5936079 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term119 A B C op s g f.
Proof. exact (fun h0 : term1754 A B s f => @lem5936078 A B C op g s f h1 h0). Qed.
Lemma lem5936080 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term116 A B C op g f.
Proof. exact (fun s : A -> Prop => @lem5936079 A B C s op g f h1). Qed.
Lemma lem5936081 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : term2127 A B C op g f.
Proof. exact (fun h0 : term116 A B C op g f => @lem5936080 A B C op g f h0). Qed.
Lemma lem5936082 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term116 A B C op g f.
Proof. exact (@lem5936081 A B C op g f (@lem5826510 A B C op g f h1)). Qed.
Lemma lem5936083 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term2125 A B C op g f s.
Proof. exact (@lem5936082 A B C op g f h1 s). Qed.
Lemma lem5936084 {A B C : Type'} (op : type1400 C) (s : A -> Prop) (g : B -> C) (f : A -> B) : (term2125 A B C op g f s) = (term119 A B C op s g f).
Proof. exact (eq_refl (term2125 A B C op g f s)). Qed.
Lemma lem5936087 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term119 A B C op s g f.
Proof. exact (EQ_MP (@lem5936084 A B C op s g f) (@lem5936083 A B C s op g f h1)). Qed.
Lemma lem5936088 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term119 A B C op s g f.
Proof. exact (@lem5936087 A B C s op g f h1). Qed.
Lemma lem5936089 {A B C : Type'} (s : A -> Prop) (op : type1400 C) (g : B -> C) (f : A -> B) (h1 : term116 A B C op g f) : term2128 A B C op s g f.
Proof. exact (@lem5936088 A B C (term1685 A B C op g f s) op g f h1). Qed.
Lemma lem5936091 (p : Prop) : p = (term314 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem5936092 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2129 A B C op g s f) = (term2130 A B C op g s f).
Proof. exact (@lem5936091 (term2129 A B C op g s f)). Qed.
Lemma lem5936093 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2130 A B C op g s f) = (term2129 A B C op g s f).
Proof. exact (SYM (@lem5936092 A B C op g s f)). Qed.
Lemma lem5936094 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2131 A B C op g s f) : term2131 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5936095 {_119826 A : Type'} : term1689 _119826 A.
Proof. exact (@lem5718201 _119826 A). Qed.
Lemma lem5936096 {A C : Type'} : term1690 A C.
Proof. exact (@lem5718201 C A). Qed.
Lemma lem5936097 {_119829 B : Type'} : term1690 _119829 B.
Proof. exact (@lem5718201 B _119829). Qed.
Lemma lem5936098 {_119829 A : Type'} : term1690 _119829 A.
Proof. exact (@lem5718201 A _119829). Qed.
Lemma lem5936101 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2132 _119826 _119829 A B C op g s f) : term2132 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5936102 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2133 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term2132 _119826 _119829 A B C op g s f => @lem5936101 _119826 _119829 A B C op g s f h0). Qed.
Lemma lem5936103 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2133 _119826 _119829 A B C op g s f) : term2133 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5936104 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2132 _119826 _119829 A B C op g s f) : term2132 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5936105 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2132 _119826 _119829 A B C op g s f) (h2 : term2133 _119826 _119829 A B C op g s f) : term2132 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936103 _119826 _119829 A B C op g s f h2 (@lem5936104 _119826 _119829 A B C op g s f h1)). Qed.
Lemma lem5936106 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2132 _119826 _119829 A B C op g s f) : term2134 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term2133 _119826 _119829 A B C op g s f => @lem5936105 _119826 _119829 A B C op g s f h1 h0). Qed.
Lemma lem5936107 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2133 _119826 _119829 A B C op g s f) : term2133 _119826 _119829 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5936108 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2132 _119826 _119829 A B C op g s f) (h2 : term2133 _119826 _119829 A B C op g s f) : term2132 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936106 _119826 _119829 A B C op g s f h1 (@lem5936107 _119826 _119829 A B C op g s f h2)). Qed.
Lemma lem5936109 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2133 _119826 _119829 A B C op g s f) : term2133 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term2132 _119826 _119829 A B C op g s f => @lem5936108 _119826 _119829 A B C op g s f h0 h1). Qed.
Lemma lem5936110 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2135 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term2133 _119826 _119829 A B C op g s f => @lem5936109 _119826 _119829 A B C op g s f h0). Qed.
Lemma lem5936113 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2133 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936110 _119826 _119829 A B C op g s f (@lem5936102 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936114 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2133 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936113 _119826 _119829 A B C op g s f). Qed.
Lemma lem5936230 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem5936231 {A C : Type'} : (term1695 A C) = (term1696 A C).
Proof. exact (@lem5936230 (term1690 A C)). Qed.
Lemma lem5936250 {_119829 B : Type'} : (term1697 _119829 B) = (term1697 _119829 B).
Proof. exact (eq_refl (term1697 _119829 B)). Qed.
Lemma lem5936251 {_119829 A B C : Type'} : (term2136 _119829 A B C) = (term2137 _119829 A B C).
Proof. exact (MK_COMB (@lem5936250 _119829 B) (@lem5936231 A C)). Qed.
Lemma lem5936254 {_119829 A : Type'} : (term1697 _119829 A) = (term1697 _119829 A).
Proof. exact (eq_refl (term1697 _119829 A)). Qed.
Lemma lem5936255 {_119829 A B C : Type'} : (term2138 _119829 A B C) = (term2139 _119829 A B C).
Proof. exact (MK_COMB (@lem5936254 _119829 A) (@lem5936251 _119829 A B C)). Qed.
Lemma lem5936258 {_119826 A : Type'} : (term1704 _119826 A) = (term1704 _119826 A).
Proof. exact (eq_refl (term1704 _119826 A)). Qed.
Lemma lem5936259 {_119826 _119829 A B C : Type'} : (term2140 _119826 _119829 A B C) = (term2141 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5936258 _119826 A) (@lem5936255 _119829 A B C)). Qed.
Lemma lem5936262 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2142 A B C op g s f) = (term2142 A B C op g s f).
Proof. exact (eq_refl (term2142 A B C op g s f)). Qed.
Lemma lem5936263 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2143 _119826 _119829 A B C op g s f) = (term2144 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936262 A B C op g s f) (@lem5936259 _119826 _119829 A B C)). Qed.
Lemma lem5936266 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1679 A B C op g f s) = (term1679 A B C op g f s).
Proof. exact (eq_refl (term1679 A B C op g f s)). Qed.
Lemma lem5936267 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2145 _119826 _119829 A B C op g s f) = (term2146 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936266 A B C op g f s) (@lem5936263 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936270 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term137 A B s f) = (term137 A B s f).
Proof. exact (eq_refl (term137 A B s f)). Qed.
Lemma lem5936271 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2147 _119826 _119829 A B C op g s f) = (term2148 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936270 A B s f) (@lem5936267 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936274 {C : Type'} (op : type1400 C) : (term336 C op) = (term336 C op).
Proof. exact (eq_refl (term336 C op)). Qed.
Lemma lem5936275 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2132 _119826 _119829 A B C op g s f) = (term2149 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936274 C op) (@lem5936271 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936278 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2150 _119826 _119829 A B C g s f) = (term2151 _119826 _119829 A B C g s f).
Proof. exact (fun_ext (fun op : type1400 C => @lem5936275 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936279 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5936280 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2152 _119826 _119829 A B C g s f) = (term2153 _119826 _119829 A B C g s f).
Proof. exact (MK_COMB (@lem5936279 C) (@lem5936278 _119826 _119829 A B C g s f)). Qed.
Lemma lem5936285 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term2154 _119826 _119829 A B C s f) = (term2155 _119826 _119829 A B C s f).
Proof. exact (fun_ext (fun g : B -> C => @lem5936280 _119826 _119829 A B C g s f)). Qed.
Lemma lem5936286 {B C : Type'} : (@all (B -> C)) = (@all (B -> C)).
Proof. exact (eq_refl (@all (B -> C))). Qed.
Lemma lem5936287 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term2156 _119826 _119829 A B C s f) = (term2157 _119826 _119829 A B C s f).
Proof. exact (MK_COMB (@lem5936286 B C) (@lem5936285 _119826 _119829 A B C s f)). Qed.
Lemma lem5936292 {_119826 _119829 A B C : Type'} (f : A -> B) : (term2158 _119826 _119829 A B C f) = (term2159 _119826 _119829 A B C f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5936287 _119826 _119829 A B C s f)). Qed.
Lemma lem5936293 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5936294 {_119826 _119829 A B C : Type'} (f : A -> B) : (term2160 _119826 _119829 A B C f) = (term2161 _119826 _119829 A B C f).
Proof. exact (MK_COMB (@lem5936293 A) (@lem5936292 _119826 _119829 A B C f)). Qed.
Lemma lem5936299 {_119826 _119829 A B C : Type'} : (term2162 _119826 _119829 A B C) = (term2163 _119826 _119829 A B C).
Proof. exact (fun_ext (fun f : A -> B => @lem5936294 _119826 _119829 A B C f)). Qed.
Lemma lem5936300 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5936309 {_119826 _119829 A B C : Type'} : (term2164 _119826 _119829 A B C) = (term2165 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5936300 A B) (@lem5936299 _119826 _119829 A B C)). Qed.
Lemma lem5936320 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : ((term1732 A C x op f s) = (term1733 A C s f x op)) = ((term1732 A C x op f s) = (term1733 A C s f x op)).
Proof. exact (eq_refl ((term1732 A C x op f s) = (term1733 A C s f x op))). Qed.
Lemma lem5936321 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1734 A C f x op) = (term1734 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5936320 A C s f x op)). Qed.
Lemma lem5936322 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5936323 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1735 A C f x op) = (term1735 A C f x op).
Proof. exact (MK_COMB (@lem5936322 A) (@lem5936321 A C f x op)). Qed.
Lemma lem5936324 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1736 A C f op) = (term1736 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5936323 A C f x op)). Qed.
Lemma lem5936325 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936326 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1737 A C f op) = (term1737 A C f op).
Proof. exact (MK_COMB (@lem5936325 A) (@lem5936324 A C f op)). Qed.
Lemma lem5936327 {A C : Type'} (op : type1400 C) : (term1738 A C op) = (term1738 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5936326 A C f op)). Qed.
Lemma lem5936328 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5936329 {A C : Type'} (op : type1400 C) : (term1739 A C op) = (term1739 A C op).
Proof. exact (MK_COMB (@lem5936328 A C) (@lem5936327 A C op)). Qed.
Lemma lem5936330 {A C : Type'} : (term1740 A C) = (term1740 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5936329 A C op)). Qed.
Lemma lem5936331 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5936332 {A C : Type'} : (term1690 A C) = (term1690 A C).
Proof. exact (MK_COMB (@lem5936331 C) (@lem5936330 A C)). Qed.
Lemma lem5936333 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5936334 {A C : Type'} : (term1696 A C) = (term1696 A C).
Proof. exact (MK_COMB (@lem5936333) (@lem5936332 A C)). Qed.
Lemma lem5936345 {_119829 B : Type'} (s : _119829 -> Prop) (f : _119829 -> B) (x : _119829) (op : type1400 B) : ((term1732 _119829 B x op f s) = (term1733 _119829 B s f x op)) = ((term1732 _119829 B x op f s) = (term1733 _119829 B s f x op)).
Proof. exact (eq_refl ((term1732 _119829 B x op f s) = (term1733 _119829 B s f x op))). Qed.
Lemma lem5936346 {_119829 B : Type'} (f : _119829 -> B) (x : _119829) (op : type1400 B) : (term1734 _119829 B f x op) = (term1734 _119829 B f x op).
Proof. exact (fun_ext (fun s : _119829 -> Prop => @lem5936345 _119829 B s f x op)). Qed.
Lemma lem5936347 {_119829 : Type'} : (@all (_119829 -> Prop)) = (@all (_119829 -> Prop)).
Proof. exact (eq_refl (@all (_119829 -> Prop))). Qed.
Lemma lem5936348 {_119829 B : Type'} (f : _119829 -> B) (x : _119829) (op : type1400 B) : (term1735 _119829 B f x op) = (term1735 _119829 B f x op).
Proof. exact (MK_COMB (@lem5936347 _119829) (@lem5936346 _119829 B f x op)). Qed.
Lemma lem5936349 {_119829 B : Type'} (f : _119829 -> B) (op : type1400 B) : (term1736 _119829 B f op) = (term1736 _119829 B f op).
Proof. exact (fun_ext (fun x : _119829 => @lem5936348 _119829 B f x op)). Qed.
Lemma lem5936350 {_119829 : Type'} : (@all _119829) = (@all _119829).
Proof. exact (eq_refl (@all _119829)). Qed.
Lemma lem5936351 {_119829 B : Type'} (f : _119829 -> B) (op : type1400 B) : (term1737 _119829 B f op) = (term1737 _119829 B f op).
Proof. exact (MK_COMB (@lem5936350 _119829) (@lem5936349 _119829 B f op)). Qed.
Lemma lem5936352 {_119829 B : Type'} (op : type1400 B) : (term1738 _119829 B op) = (term1738 _119829 B op).
Proof. exact (fun_ext (fun f : _119829 -> B => @lem5936351 _119829 B f op)). Qed.
Lemma lem5936353 {_119829 B : Type'} : (@all (_119829 -> B)) = (@all (_119829 -> B)).
Proof. exact (eq_refl (@all (_119829 -> B))). Qed.
Lemma lem5936354 {_119829 B : Type'} (op : type1400 B) : (term1739 _119829 B op) = (term1739 _119829 B op).
Proof. exact (MK_COMB (@lem5936353 _119829 B) (@lem5936352 _119829 B op)). Qed.
Lemma lem5936355 {_119829 B : Type'} : (term1740 _119829 B) = (term1740 _119829 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5936354 _119829 B op)). Qed.
Lemma lem5936356 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5936357 {_119829 B : Type'} : (term1690 _119829 B) = (term1690 _119829 B).
Proof. exact (MK_COMB (@lem5936356 B) (@lem5936355 _119829 B)). Qed.
Lemma lem5936358 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5936359 {_119829 B : Type'} : (term1697 _119829 B) = (term1697 _119829 B).
Proof. exact (MK_COMB (@lem5936358) (@lem5936357 _119829 B)). Qed.
Lemma lem5936360 {_119829 A B C : Type'} : (term2137 _119829 A B C) = (term2137 _119829 A B C).
Proof. exact (MK_COMB (@lem5936359 _119829 B) (@lem5936334 A C)). Qed.
Lemma lem5936371 {_119829 A : Type'} (s : _119829 -> Prop) (f : _119829 -> A) (x : _119829) (op : type1400 A) : ((term1732 _119829 A x op f s) = (term1733 _119829 A s f x op)) = ((term1732 _119829 A x op f s) = (term1733 _119829 A s f x op)).
Proof. exact (eq_refl ((term1732 _119829 A x op f s) = (term1733 _119829 A s f x op))). Qed.
Lemma lem5936372 {_119829 A : Type'} (f : _119829 -> A) (x : _119829) (op : type1400 A) : (term1734 _119829 A f x op) = (term1734 _119829 A f x op).
Proof. exact (fun_ext (fun s : _119829 -> Prop => @lem5936371 _119829 A s f x op)). Qed.
Lemma lem5936373 {_119829 : Type'} : (@all (_119829 -> Prop)) = (@all (_119829 -> Prop)).
Proof. exact (eq_refl (@all (_119829 -> Prop))). Qed.
Lemma lem5936374 {_119829 A : Type'} (f : _119829 -> A) (x : _119829) (op : type1400 A) : (term1735 _119829 A f x op) = (term1735 _119829 A f x op).
Proof. exact (MK_COMB (@lem5936373 _119829) (@lem5936372 _119829 A f x op)). Qed.
Lemma lem5936375 {_119829 A : Type'} (f : _119829 -> A) (op : type1400 A) : (term1736 _119829 A f op) = (term1736 _119829 A f op).
Proof. exact (fun_ext (fun x : _119829 => @lem5936374 _119829 A f x op)). Qed.
Lemma lem5936376 {_119829 : Type'} : (@all _119829) = (@all _119829).
Proof. exact (eq_refl (@all _119829)). Qed.
Lemma lem5936377 {_119829 A : Type'} (f : _119829 -> A) (op : type1400 A) : (term1737 _119829 A f op) = (term1737 _119829 A f op).
Proof. exact (MK_COMB (@lem5936376 _119829) (@lem5936375 _119829 A f op)). Qed.
Lemma lem5936378 {_119829 A : Type'} (op : type1400 A) : (term1738 _119829 A op) = (term1738 _119829 A op).
Proof. exact (fun_ext (fun f : _119829 -> A => @lem5936377 _119829 A f op)). Qed.
Lemma lem5936379 {_119829 A : Type'} : (@all (_119829 -> A)) = (@all (_119829 -> A)).
Proof. exact (eq_refl (@all (_119829 -> A))). Qed.
Lemma lem5936380 {_119829 A : Type'} (op : type1400 A) : (term1739 _119829 A op) = (term1739 _119829 A op).
Proof. exact (MK_COMB (@lem5936379 _119829 A) (@lem5936378 _119829 A op)). Qed.
Lemma lem5936381 {_119829 A : Type'} : (term1740 _119829 A) = (term1740 _119829 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5936380 _119829 A op)). Qed.
Lemma lem5936382 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5936383 {_119829 A : Type'} : (term1690 _119829 A) = (term1690 _119829 A).
Proof. exact (MK_COMB (@lem5936382 A) (@lem5936381 _119829 A)). Qed.
Lemma lem5936384 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5936385 {_119829 A : Type'} : (term1697 _119829 A) = (term1697 _119829 A).
Proof. exact (MK_COMB (@lem5936384) (@lem5936383 _119829 A)). Qed.
Lemma lem5936386 {_119829 A B C : Type'} : (term2139 _119829 A B C) = (term2139 _119829 A B C).
Proof. exact (MK_COMB (@lem5936385 _119829 A) (@lem5936360 _119829 A B C)). Qed.
Lemma lem5936397 {_119826 A : Type'} (s : A -> Prop) (f : A -> _119826) (x : A) (op : type1400 _119826) : ((term1741 _119826 A x op f s) = (term1742 _119826 A s f x op)) = ((term1741 _119826 A x op f s) = (term1742 _119826 A s f x op)).
Proof. exact (eq_refl ((term1741 _119826 A x op f s) = (term1742 _119826 A s f x op))). Qed.
Lemma lem5936398 {_119826 A : Type'} (f : A -> _119826) (x : A) (op : type1400 _119826) : (term1743 _119826 A f x op) = (term1743 _119826 A f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5936397 _119826 A s f x op)). Qed.
Lemma lem5936399 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5936400 {_119826 A : Type'} (f : A -> _119826) (x : A) (op : type1400 _119826) : (term1744 _119826 A f x op) = (term1744 _119826 A f x op).
Proof. exact (MK_COMB (@lem5936399 A) (@lem5936398 _119826 A f x op)). Qed.
Lemma lem5936401 {_119826 A : Type'} (f : A -> _119826) (op : type1400 _119826) : (term1745 _119826 A f op) = (term1745 _119826 A f op).
Proof. exact (fun_ext (fun x : A => @lem5936400 _119826 A f x op)). Qed.
Lemma lem5936402 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936403 {_119826 A : Type'} (f : A -> _119826) (op : type1400 _119826) : (term1746 _119826 A f op) = (term1746 _119826 A f op).
Proof. exact (MK_COMB (@lem5936402 A) (@lem5936401 _119826 A f op)). Qed.
Lemma lem5936404 {_119826 A : Type'} (op : type1400 _119826) : (term1747 _119826 A op) = (term1747 _119826 A op).
Proof. exact (fun_ext (fun f : A -> _119826 => @lem5936403 _119826 A f op)). Qed.
Lemma lem5936405 {_119826 A : Type'} : (@all (A -> _119826)) = (@all (A -> _119826)).
Proof. exact (eq_refl (@all (A -> _119826))). Qed.
Lemma lem5936406 {_119826 A : Type'} (op : type1400 _119826) : (term1748 _119826 A op) = (term1748 _119826 A op).
Proof. exact (MK_COMB (@lem5936405 _119826 A) (@lem5936404 _119826 A op)). Qed.
Lemma lem5936407 {_119826 A : Type'} : (term1749 _119826 A) = (term1749 _119826 A).
Proof. exact (fun_ext (fun op : type1400 _119826 => @lem5936406 _119826 A op)). Qed.
Lemma lem5936408 {_119826 : Type'} : (@all (_119826 -> _119826 -> _119826)) = (@all (_119826 -> _119826 -> _119826)).
Proof. exact (eq_refl (@all (_119826 -> _119826 -> _119826))). Qed.
Lemma lem5936409 {_119826 A : Type'} : (term1689 _119826 A) = (term1689 _119826 A).
Proof. exact (MK_COMB (@lem5936408 _119826) (@lem5936407 _119826 A)). Qed.
Lemma lem5936410 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5936411 {_119826 A : Type'} : (term1704 _119826 A) = (term1704 _119826 A).
Proof. exact (MK_COMB (@lem5936410) (@lem5936409 _119826 A)). Qed.
Lemma lem5936412 {_119826 _119829 A B C : Type'} : (term2141 _119826 _119829 A B C) = (term2141 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5936411 _119826 A) (@lem5936386 _119829 A B C)). Qed.
Lemma lem5936425 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1750 A B C op g s f x y) = (term1750 A B C op g s f x y).
Proof. exact (eq_refl (term1750 A B C op g s f x y)). Qed.
Lemma lem5936426 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1751 A B C op g s f x) = (term1751 A B C op g s f x).
Proof. exact (fun_ext (fun y : A => @lem5936425 A B C op g s f x y)). Qed.
Lemma lem5936427 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936428 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1752 A B C op g s f x) = (term1752 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936427 A) (@lem5936426 A B C op g s f x)). Qed.
Lemma lem5936429 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1753 A B C op g s f) = (term1753 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5936428 A B C op g s f x)). Qed.
Lemma lem5936430 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936431 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1686 A B C op g s f) = (term1686 A B C op g s f).
Proof. exact (MK_COMB (@lem5936430 A) (@lem5936429 A B C op g s f)). Qed.
Lemma lem5936434 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2166 A B C op g f s) = (term2166 A B C op g f s).
Proof. exact (eq_refl (term2166 A B C op g f s)). Qed.
Lemma lem5936435 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2129 A B C op g s f) = (term2129 A B C op g s f).
Proof. exact (MK_COMB (@lem5936434 A B C op g f s) (@lem5936431 A B C op g s f)). Qed.
Lemma lem5936436 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5936437 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2131 A B C op g s f) = (term2131 A B C op g s f).
Proof. exact (MK_COMB (@lem5936436) (@lem5936435 A B C op g s f)). Qed.
Lemma lem5936438 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5936439 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2142 A B C op g s f) = (term2142 A B C op g s f).
Proof. exact (MK_COMB (@lem5936438) (@lem5936437 A B C op g s f)). Qed.
Lemma lem5936440 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2144 _119826 _119829 A B C op g s f) = (term2144 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936439 A B C op g s f) (@lem5936412 _119826 _119829 A B C)). Qed.
Lemma lem5936443 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1679 A B C op g f s) = (term1679 A B C op g f s).
Proof. exact (eq_refl (term1679 A B C op g f s)). Qed.
Lemma lem5936444 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2146 _119826 _119829 A B C op g s f) = (term2146 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936443 A B C op g f s) (@lem5936440 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936457 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term123 A B s f x y).
Proof. exact (eq_refl (term123 A B s f x y)). Qed.
Lemma lem5936458 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term130 A B s f x) = (term130 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5936457 A B s f x y)). Qed.
Lemma lem5936459 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936460 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term132 A B s f x) = (term132 A B s f x).
Proof. exact (MK_COMB (@lem5936459 A) (@lem5936458 A B s f x)). Qed.
Lemma lem5936461 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term134 A B s f) = (term134 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5936460 A B s f x)). Qed.
Lemma lem5936462 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936463 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term12 A B s f) = (term12 A B s f).
Proof. exact (MK_COMB (@lem5936462 A) (@lem5936461 A B s f)). Qed.
Lemma lem5936464 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5936465 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term137 A B s f) = (term137 A B s f).
Proof. exact (MK_COMB (@lem5936464) (@lem5936463 A B s f)). Qed.
Lemma lem5936466 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2148 _119826 _119829 A B C op g s f) = (term2148 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936465 A B s f) (@lem5936444 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936469 {C : Type'} (op : type1400 C) : (term336 C op) = (term336 C op).
Proof. exact (eq_refl (term336 C op)). Qed.
Lemma lem5936470 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2149 _119826 _119829 A B C op g s f) = (term2149 _119826 _119829 A B C op g s f).
Proof. exact (MK_COMB (@lem5936469 C op) (@lem5936466 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936471 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2151 _119826 _119829 A B C g s f) = (term2151 _119826 _119829 A B C g s f).
Proof. exact (fun_ext (fun op : type1400 C => @lem5936470 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5936472 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5936473 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2153 _119826 _119829 A B C g s f) = (term2153 _119826 _119829 A B C g s f).
Proof. exact (MK_COMB (@lem5936472 C) (@lem5936471 _119826 _119829 A B C g s f)). Qed.
Lemma lem5936474 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term2155 _119826 _119829 A B C s f) = (term2155 _119826 _119829 A B C s f).
Proof. exact (fun_ext (fun g : B -> C => @lem5936473 _119826 _119829 A B C g s f)). Qed.
Lemma lem5936475 {B C : Type'} : (@all (B -> C)) = (@all (B -> C)).
Proof. exact (eq_refl (@all (B -> C))). Qed.
Lemma lem5936476 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term2157 _119826 _119829 A B C s f) = (term2157 _119826 _119829 A B C s f).
Proof. exact (MK_COMB (@lem5936475 B C) (@lem5936474 _119826 _119829 A B C s f)). Qed.
Lemma lem5936477 {_119826 _119829 A B C : Type'} (f : A -> B) : (term2159 _119826 _119829 A B C f) = (term2159 _119826 _119829 A B C f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5936476 _119826 _119829 A B C s f)). Qed.
Lemma lem5936478 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5936479 {_119826 _119829 A B C : Type'} (f : A -> B) : (term2161 _119826 _119829 A B C f) = (term2161 _119826 _119829 A B C f).
Proof. exact (MK_COMB (@lem5936478 A) (@lem5936477 _119826 _119829 A B C f)). Qed.
Lemma lem5936480 {_119826 _119829 A B C : Type'} : (term2163 _119826 _119829 A B C) = (term2163 _119826 _119829 A B C).
Proof. exact (fun_ext (fun f : A -> B => @lem5936479 _119826 _119829 A B C f)). Qed.
Lemma lem5936481 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5936482 {_119826 _119829 A B C : Type'} : (term2165 _119826 _119829 A B C) = (term2165 _119826 _119829 A B C).
Proof. exact (MK_COMB (@lem5936481 A B) (@lem5936480 _119826 _119829 A B C)). Qed.
Lemma lem5936665 {_119826 _119829 A B C : Type'} : (term2164 _119826 _119829 A B C) = (term2165 _119826 _119829 A B C).
Proof. exact (TRANS (@lem5936309 _119826 _119829 A B C) (@lem5936482 _119826 _119829 A B C)). Qed.
Lemma lem5936666 {_119826 _119829 A B C : Type'} : (term2165 _119826 _119829 A B C) = (term2164 _119826 _119829 A B C).
Proof. exact (SYM (@lem5936665 _119826 _119829 A B C)). Qed.
Lemma lem5936668 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term12 A B s f.
Proof. exact (h1). Qed.
Lemma lem5936670 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2131 A B C op g s f) : term2131 A B C op g s f.
Proof. exact (h1). Qed.
Lemma lem5936674 {A C : Type'} (h1 : term1690 A C) : term1690 A C.
Proof. exact (h1). Qed.
Lemma lem5936688 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1894 A B s x f y) = (term1895 A B s x f y).
Proof. exact (@lem17045 (@IN A y s) ((f x) = (f y))). Qed.
Lemma lem5936690 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1896 A x s).
Proof. exact (eq_refl (term1896 A x s)). Qed.
Lemma lem5936691 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1897 A B s x f y) = (term1898 A B s x f y).
Proof. exact (MK_COMB (@lem5936690 A x s) (@lem5936688 A B s x f y)). Qed.
Lemma lem5936692 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1899 A B s x f y) = (term1897 A B s x f y).
Proof. exact (@lem17045 (@IN A x s) (term125 A B s x f y)). Qed.
Lemma lem5936693 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1899 A B s x f y) = (term1898 A B s x f y).
Proof. exact (TRANS (@lem5936692 A B s x f y) (@lem5936691 A B s x f y)). Qed.
Lemma lem5936694 {A : Type'} (x : A) (y : A) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem5936695 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5936696 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1900 A B s x f y) = (term1901 A B s x f y).
Proof. exact (MK_COMB (@lem5936695) (@lem5936693 A B s x f y)). Qed.
Lemma lem5936697 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1902 A B s f x y) = (term1903 A B s f x y).
Proof. exact (MK_COMB (@lem5936696 A B s x f y) (@lem5936694 A x y)). Qed.
Lemma lem5936698 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term1902 A B s f x y).
Proof. exact (@lem17265 (term1758 A B s x f y) (x = y)). Qed.
Lemma lem5936699 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term123 A B s f x y) = (term1903 A B s f x y).
Proof. exact (TRANS (@lem5936698 A B s f x y) (@lem5936697 A B s f x y)). Qed.
Lemma lem5936700 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term130 A B s f x) = (term1904 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5936699 A B s f x y)). Qed.
Lemma lem5936701 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936702 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term132 A B s f x) = (term1905 A B s f x).
Proof. exact (MK_COMB (@lem5936701 A) (@lem5936700 A B s f x)). Qed.
Lemma lem5936703 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term134 A B s f) = (term1906 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5936702 A B s f x)). Qed.
Lemma lem5936704 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5936761 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term12 A B s f) = (term1907 A B s f).
Proof. exact (MK_COMB (@lem5936704 A) (@lem5936703 A B s f)). Qed.
Lemma lem5936762 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1907 A B s f.
Proof. exact (EQ_MP (@lem5936761 A B s f) (@lem5936668 A B s f h1)). Qed.
Lemma lem5936768 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) : term1665 A B C op g f s.
Proof. exact (h1). Qed.
Lemma lem5936784 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1908 A B C op g s f x y) = (term1909 A B C op g s f x y).
Proof. exact (@lem17362 (term1910 A B C op g s x f y) (x = y)). Qed.
Lemma lem5936785 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5936786 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1911 A B C op g s f x) = (term1912 A B C op g s f x).
Proof. exact (@lem5936785 A (term1751 A B C op g s f x)). Qed.
Lemma lem5936787 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1913 A B C op g s f x y) = (term1750 A B C op g s f x y).
Proof. exact (eq_refl (term1913 A B C op g s f x y)). Qed.
Lemma lem5936788 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5936789 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1914 A B C op g s f x y) = (term1908 A B C op g s f x y).
Proof. exact (MK_COMB (@lem5936788) (@lem5936787 A B C op g s f x y)). Qed.
Lemma lem5936790 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1914 A B C op g s f x y) = (term1909 A B C op g s f x y).
Proof. exact (TRANS (@lem5936789 A B C op g s f x y) (@lem5936784 A B C op g s f x y)). Qed.
Lemma lem5936791 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1915 A B C op g s f x) = (term1916 A B C op g s f x).
Proof. exact (fun_ext (fun y : A => @lem5936790 A B C op g s f x y)). Qed.
Lemma lem5936792 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936793 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1912 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936792 A) (@lem5936791 A B C op g s f x)). Qed.
Lemma lem5936794 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1911 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (TRANS (@lem5936786 A B C op g s f x) (@lem5936793 A B C op g s f x)). Qed.
Lemma lem5936795 {A : Type'} (P : A -> Prop) : (term420 A P) = (term421 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5936796 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1688 A B C op g s f) = (term1918 A B C op g s f).
Proof. exact (@lem5936795 A (term1753 A B C op g s f)). Qed.
Lemma lem5936797 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1919 A B C op g s f x) = (term1752 A B C op g s f x).
Proof. exact (eq_refl (term1919 A B C op g s f x)). Qed.
Lemma lem5936798 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5936799 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1920 A B C op g s f x) = (term1911 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936798) (@lem5936797 A B C op g s f x)). Qed.
Lemma lem5936800 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term1920 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (TRANS (@lem5936799 A B C op g s f x) (@lem5936794 A B C op g s f x)). Qed.
Lemma lem5936801 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1921 A B C op g s f) = (term1922 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5936800 A B C op g s f x)). Qed.
Lemma lem5936802 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936803 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1918 A B C op g s f) = (term1923 A B C op g s f).
Proof. exact (MK_COMB (@lem5936802 A) (@lem5936801 A B C op g s f)). Qed.
Lemma lem5936804 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term1688 A B C op g s f) = (term1923 A B C op g s f).
Proof. exact (TRANS (@lem5936796 A B C op g s f) (@lem5936803 A B C op g s f)). Qed.
Lemma lem5936806 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2167 A B C op g f s) = (term2167 A B C op g f s).
Proof. exact (eq_refl (term2167 A B C op g f s)). Qed.
Lemma lem5936807 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2168 A B C op g s f) = (term2169 A B C op g s f).
Proof. exact (MK_COMB (@lem5936806 A B C op g f s) (@lem5936804 A B C op g s f)). Qed.
Lemma lem5936808 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2131 A B C op g s f) = (term2168 A B C op g s f).
Proof. exact (@lem17045 (term1665 A B C op g f s) (term1686 A B C op g s f)). Qed.
Lemma lem5936809 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2131 A B C op g s f) = (term2169 A B C op g s f).
Proof. exact (TRANS (@lem5936808 A B C op g s f) (@lem5936807 A B C op g s f)). Qed.
Lemma lem5936864 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5936865 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5936864 A P Q). Qed.
Lemma lem5936866 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2170 A B C op g s f) = (term2171 A B C op g s f).
Proof. exact (@lem5936865 A (term2172 A B C op g f s) (term1922 A B C op g s f)). Qed.
Lemma lem5936867 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2173 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (eq_refl (term2173 A B C op g s f x)). Qed.
Lemma lem5936868 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2174 A B C op g s f) = (term1922 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5936867 A B C op g s f x)). Qed.
Lemma lem5936869 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936870 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2175 A B C op g s f) = (term1923 A B C op g s f).
Proof. exact (MK_COMB (@lem5936869 A) (@lem5936868 A B C op g s f)). Qed.
Lemma lem5936871 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2167 A B C op g f s) = (term2167 A B C op g f s).
Proof. exact (eq_refl (term2167 A B C op g f s)). Qed.
Lemma lem5936872 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2170 A B C op g s f) = (term2169 A B C op g s f).
Proof. exact (MK_COMB (@lem5936871 A B C op g f s) (@lem5936870 A B C op g s f)). Qed.
Lemma lem5936873 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5936874 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2176 A B C op g s f) = (term2177 A B C op g s f).
Proof. exact (MK_COMB (@lem5936873) (@lem5936872 A B C op g s f)). Qed.
Lemma lem5936875 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2173 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (eq_refl (term2173 A B C op g s f x)). Qed.
Lemma lem5936876 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2167 A B C op g f s) = (term2167 A B C op g f s).
Proof. exact (eq_refl (term2167 A B C op g f s)). Qed.
Lemma lem5936877 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2178 A B C op g s f x) = (term2179 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936876 A B C op g f s) (@lem5936875 A B C op g s f x)). Qed.
Lemma lem5936878 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2180 A B C op g s f) = (term2181 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5936877 A B C op g s f x)). Qed.
Lemma lem5936879 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936880 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2171 A B C op g s f) = (term2182 A B C op g s f).
Proof. exact (MK_COMB (@lem5936879 A) (@lem5936878 A B C op g s f)). Qed.
Lemma lem5936881 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : ((term2170 A B C op g s f) = (term2171 A B C op g s f)) = ((term2169 A B C op g s f) = (term2182 A B C op g s f)).
Proof. exact (MK_COMB (@lem5936874 A B C op g s f) (@lem5936880 A B C op g s f)). Qed.
Lemma lem5936882 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2169 A B C op g s f) = (term2182 A B C op g s f).
Proof. exact (EQ_MP (@lem5936881 A B C op g s f) (@lem5936866 A B C op g s f)). Qed.
Lemma lem5936884 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5936885 {A : Type'} (P : Prop) (Q : A -> Prop) : (term964 A P Q) = (term965 A P Q).
Proof. exact (@lem5936884 A P Q). Qed.
Lemma lem5936886 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2183 A B C op g s f x) = (term2184 A B C op g s f x).
Proof. exact (@lem5936885 A (term2172 A B C op g f s) (term1916 A B C op g s f x)). Qed.
Lemma lem5936887 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2185 A B C op g s f x y) = (term1909 A B C op g s f x y).
Proof. exact (eq_refl (term2185 A B C op g s f x y)). Qed.
Lemma lem5936888 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2186 A B C op g s f x) = (term1916 A B C op g s f x).
Proof. exact (fun_ext (fun y : A => @lem5936887 A B C op g s f x y)). Qed.
Lemma lem5936889 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936890 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2187 A B C op g s f x) = (term1917 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936889 A) (@lem5936888 A B C op g s f x)). Qed.
Lemma lem5936891 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2167 A B C op g f s) = (term2167 A B C op g f s).
Proof. exact (eq_refl (term2167 A B C op g f s)). Qed.
Lemma lem5936892 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2183 A B C op g s f x) = (term2179 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936891 A B C op g f s) (@lem5936890 A B C op g s f x)). Qed.
Lemma lem5936893 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5936894 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2188 A B C op g s f x) = (term2189 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936893) (@lem5936892 A B C op g s f x)). Qed.
Lemma lem5936895 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2185 A B C op g s f x y) = (term1909 A B C op g s f x y).
Proof. exact (eq_refl (term2185 A B C op g s f x y)). Qed.
Lemma lem5936896 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2167 A B C op g f s) = (term2167 A B C op g f s).
Proof. exact (eq_refl (term2167 A B C op g f s)). Qed.
Lemma lem5936897 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2190 A B C op g s f x y) = (term2191 A B C op g s f x y).
Proof. exact (MK_COMB (@lem5936896 A B C op g f s) (@lem5936895 A B C op g s f x y)). Qed.
Lemma lem5936898 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2192 A B C op g s f x) = (term2193 A B C op g s f x).
Proof. exact (fun_ext (fun y : A => @lem5936897 A B C op g s f x y)). Qed.
Lemma lem5936899 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936900 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2184 A B C op g s f x) = (term2194 A B C op g s f x).
Proof. exact (MK_COMB (@lem5936899 A) (@lem5936898 A B C op g s f x)). Qed.
Lemma lem5936901 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : ((term2183 A B C op g s f x) = (term2184 A B C op g s f x)) = ((term2179 A B C op g s f x) = (term2194 A B C op g s f x)).
Proof. exact (MK_COMB (@lem5936894 A B C op g s f x) (@lem5936900 A B C op g s f x)). Qed.
Lemma lem5936902 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) : (term2179 A B C op g s f x) = (term2194 A B C op g s f x).
Proof. exact (EQ_MP (@lem5936901 A B C op g s f x) (@lem5936886 A B C op g s f x)). Qed.
Lemma lem5936903 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2181 A B C op g s f) = (term2195 A B C op g s f).
Proof. exact (fun_ext (fun x : A => @lem5936902 A B C op g s f x)). Qed.
Lemma lem5936904 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5936905 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2182 A B C op g s f) = (term2196 A B C op g s f).
Proof. exact (MK_COMB (@lem5936904 A) (@lem5936903 A B C op g s f)). Qed.
Lemma lem5936907 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2169 A B C op g s f) = (term2196 A B C op g s f).
Proof. exact (TRANS (@lem5936882 A B C op g s f) (@lem5936905 A B C op g s f)). Qed.
Lemma lem5936908 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2131 A B C op g s f) = (term2196 A B C op g s f).
Proof. exact (TRANS (@lem5936809 A B C op g s f) (@lem5936907 A B C op g s f)). Qed.
Lemma lem5936909 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term2131 A B C op g s f) : term2196 A B C op g s f.
Proof. exact (EQ_MP (@lem5936908 A B C op g s f) (@lem5936670 A B C op g s f h1)). Qed.
Lemma lem5938738 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1924 A C f x op) = ((f x) = (@neutral C op)).
Proof. exact (@lem16933 ((f x) = (@neutral C op))). Qed.
Lemma lem5938740 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1896 A x s).
Proof. exact (eq_refl (term1896 A x s)). Qed.
Lemma lem5938741 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1925 A C s f x op) = (term1926 A C s f x op).
Proof. exact (MK_COMB (@lem5938740 A x s) (@lem5938738 A C f x op)). Qed.
Lemma lem5938742 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1927 A C s f x op) = (term1925 A C s f x op).
Proof. exact (@lem17045 (@IN A x s) (term1928 A C f x op)). Qed.
Lemma lem5938743 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1927 A C s f x op) = (term1926 A C s f x op).
Proof. exact (TRANS (@lem5938742 A C s f x op) (@lem5938741 A C s f x op)). Qed.
Lemma lem5938749 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1929 A C s f x op) = (term1929 A C s f x op).
Proof. exact (eq_refl (term1929 A C s f x op)). Qed.
Lemma lem5938751 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1930 A C x op f s) = (term1930 A C x op f s).
Proof. exact (eq_refl (term1930 A C x op f s)). Qed.
Lemma lem5938752 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1931 A C s f x op) = (term1932 A C s f x op).
Proof. exact (MK_COMB (@lem5938751 A C x op f s) (@lem5938743 A C s f x op)). Qed.
Lemma lem5938753 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5938754 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1933 A C s f x op) = (term1934 A C s f x op).
Proof. exact (MK_COMB (@lem5938753) (@lem5938752 A C s f x op)). Qed.
Lemma lem5938755 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1935 A C s f x op) = (term1936 A C s f x op).
Proof. exact (MK_COMB (@lem5938754 A C s f x op) (@lem5938749 A C s f x op)). Qed.
Lemma lem5938756 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : ((term1732 A C x op f s) = (term1733 A C s f x op)) = (term1935 A C s f x op).
Proof. exact (@lem17784 (term1732 A C x op f s) (term1733 A C s f x op)). Qed.
Lemma lem5938757 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : ((term1732 A C x op f s) = (term1733 A C s f x op)) = (term1936 A C s f x op).
Proof. exact (TRANS (@lem5938756 A C s f x op) (@lem5938755 A C s f x op)). Qed.
Lemma lem5938758 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1734 A C f x op) = (term1937 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5938757 A C s f x op)). Qed.
Lemma lem5938759 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5938760 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1735 A C f x op) = (term1938 A C f x op).
Proof. exact (MK_COMB (@lem5938759 A) (@lem5938758 A C f x op)). Qed.
Lemma lem5938761 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1736 A C f op) = (term1939 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5938760 A C f x op)). Qed.
Lemma lem5938762 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5938763 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1737 A C f op) = (term1940 A C f op).
Proof. exact (MK_COMB (@lem5938762 A) (@lem5938761 A C f op)). Qed.
Lemma lem5938764 {A C : Type'} (op : type1400 C) : (term1738 A C op) = (term1941 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5938763 A C f op)). Qed.
Lemma lem5938765 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5938766 {A C : Type'} (op : type1400 C) : (term1739 A C op) = (term1942 A C op).
Proof. exact (MK_COMB (@lem5938765 A C) (@lem5938764 A C op)). Qed.
Lemma lem5938767 {A C : Type'} : (term1740 A C) = (term1943 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5938766 A C op)). Qed.
Lemma lem5938768 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5938769 {A C : Type'} : (term1690 A C) = (term1944 A C).
Proof. exact (MK_COMB (@lem5938768 C) (@lem5938767 A C)). Qed.
Lemma lem5938783 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5938784 {A : Type'} (P : type686 A) (Q : type686 A) : (term920 A P Q) = (term921 A P Q).
Proof. exact (@lem5938783 (A -> Prop) P Q). Qed.
Lemma lem5938785 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1945 A C f x op) = (term1946 A C f x op).
Proof. exact (@lem5938784 A (term1947 A C f x op) (term1948 A C f x op)). Qed.
Lemma lem5938786 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1949 A C f x op s) = (term1932 A C s f x op).
Proof. exact (eq_refl (term1949 A C f x op s)). Qed.
Lemma lem5938787 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5938788 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1950 A C f x op s) = (term1934 A C s f x op).
Proof. exact (MK_COMB (@lem5938787) (@lem5938786 A C s f x op)). Qed.
Lemma lem5938789 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1951 A C f x op s) = (term1929 A C s f x op).
Proof. exact (eq_refl (term1951 A C f x op s)). Qed.
Lemma lem5938790 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1952 A C f x op s) = (term1936 A C s f x op).
Proof. exact (MK_COMB (@lem5938788 A C s f x op) (@lem5938789 A C s f x op)). Qed.
Lemma lem5938791 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1953 A C f x op) = (term1937 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5938790 A C s f x op)). Qed.
Lemma lem5938792 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5938793 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1945 A C f x op) = (term1938 A C f x op).
Proof. exact (MK_COMB (@lem5938792 A) (@lem5938791 A C f x op)). Qed.
Lemma lem5938794 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5938795 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1954 A C f x op) = (term1955 A C f x op).
Proof. exact (MK_COMB (@lem5938794) (@lem5938793 A C f x op)). Qed.
Lemma lem5938796 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1949 A C f x op s) = (term1932 A C s f x op).
Proof. exact (eq_refl (term1949 A C f x op s)). Qed.
Lemma lem5938797 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1956 A C f x op) = (term1947 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5938796 A C s f x op)). Qed.
Lemma lem5938798 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5938799 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1957 A C f x op) = (term1958 A C f x op).
Proof. exact (MK_COMB (@lem5938798 A) (@lem5938797 A C f x op)). Qed.
Lemma lem5938800 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5938801 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1959 A C f x op) = (term1960 A C f x op).
Proof. exact (MK_COMB (@lem5938800) (@lem5938799 A C f x op)). Qed.
Lemma lem5938802 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1951 A C f x op s) = (term1929 A C s f x op).
Proof. exact (eq_refl (term1951 A C f x op s)). Qed.
Lemma lem5938803 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1961 A C f x op) = (term1948 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5938802 A C s f x op)). Qed.
Lemma lem5938804 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5938805 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1962 A C f x op) = (term1963 A C f x op).
Proof. exact (MK_COMB (@lem5938804 A) (@lem5938803 A C f x op)). Qed.
Lemma lem5938806 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1946 A C f x op) = (term1964 A C f x op).
Proof. exact (MK_COMB (@lem5938801 A C f x op) (@lem5938805 A C f x op)). Qed.
Lemma lem5938807 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : ((term1945 A C f x op) = (term1946 A C f x op)) = ((term1938 A C f x op) = (term1964 A C f x op)).
Proof. exact (MK_COMB (@lem5938795 A C f x op) (@lem5938806 A C f x op)). Qed.
Lemma lem5938808 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1938 A C f x op) = (term1964 A C f x op).
Proof. exact (EQ_MP (@lem5938807 A C f x op) (@lem5938785 A C f x op)). Qed.
Lemma lem5938905 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1939 A C f op) = (term1965 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5938808 A C f x op)). Qed.
Lemma lem5938906 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5938907 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1940 A C f op) = (term1966 A C f op).
Proof. exact (MK_COMB (@lem5938906 A) (@lem5938905 A C f op)). Qed.
Lemma lem5938909 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5938910 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (@lem5938909 A P Q). Qed.
Lemma lem5938911 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1967 A C f op) = (term1968 A C f op).
Proof. exact (@lem5938910 A (term1969 A C f op) (term1970 A C f op)). Qed.
Lemma lem5938912 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1971 A C f op x) = (term1958 A C f x op).
Proof. exact (eq_refl (term1971 A C f op x)). Qed.
Lemma lem5938913 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5938914 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1972 A C f op x) = (term1960 A C f x op).
Proof. exact (MK_COMB (@lem5938913) (@lem5938912 A C f x op)). Qed.
Lemma lem5938915 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1973 A C f op x) = (term1963 A C f x op).
Proof. exact (eq_refl (term1973 A C f op x)). Qed.
Lemma lem5938916 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1974 A C f op x) = (term1964 A C f x op).
Proof. exact (MK_COMB (@lem5938914 A C f x op) (@lem5938915 A C f x op)). Qed.
Lemma lem5938917 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1975 A C f op) = (term1965 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5938916 A C f x op)). Qed.
Lemma lem5938918 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5938919 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1967 A C f op) = (term1966 A C f op).
Proof. exact (MK_COMB (@lem5938918 A) (@lem5938917 A C f op)). Qed.
Lemma lem5938920 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5938921 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1976 A C f op) = (term1977 A C f op).
Proof. exact (MK_COMB (@lem5938920) (@lem5938919 A C f op)). Qed.
Lemma lem5938922 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1971 A C f op x) = (term1958 A C f x op).
Proof. exact (eq_refl (term1971 A C f op x)). Qed.
Lemma lem5938923 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1978 A C f op) = (term1969 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5938922 A C f x op)). Qed.
Lemma lem5938924 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5938925 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1979 A C f op) = (term1980 A C f op).
Proof. exact (MK_COMB (@lem5938924 A) (@lem5938923 A C f op)). Qed.
Lemma lem5938926 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5938927 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1981 A C f op) = (term1982 A C f op).
Proof. exact (MK_COMB (@lem5938926) (@lem5938925 A C f op)). Qed.
Lemma lem5938928 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1973 A C f op x) = (term1963 A C f x op).
Proof. exact (eq_refl (term1973 A C f op x)). Qed.
Lemma lem5938929 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1983 A C f op) = (term1970 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5938928 A C f x op)). Qed.
Lemma lem5938930 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5938931 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1984 A C f op) = (term1985 A C f op).
Proof. exact (MK_COMB (@lem5938930 A) (@lem5938929 A C f op)). Qed.
Lemma lem5938932 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1968 A C f op) = (term1986 A C f op).
Proof. exact (MK_COMB (@lem5938927 A C f op) (@lem5938931 A C f op)). Qed.
Lemma lem5938933 {A C : Type'} (f : A -> C) (op : type1400 C) : ((term1967 A C f op) = (term1968 A C f op)) = ((term1966 A C f op) = (term1986 A C f op)).
Proof. exact (MK_COMB (@lem5938921 A C f op) (@lem5938932 A C f op)). Qed.
Lemma lem5938934 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1966 A C f op) = (term1986 A C f op).
Proof. exact (EQ_MP (@lem5938933 A C f op) (@lem5938911 A C f op)). Qed.
Lemma lem5939039 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1940 A C f op) = (term1986 A C f op).
Proof. exact (TRANS (@lem5938907 A C f op) (@lem5938934 A C f op)). Qed.
Lemma lem5939040 {A C : Type'} (op : type1400 C) : (term1941 A C op) = (term1987 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5939039 A C f op)). Qed.
Lemma lem5939041 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5939042 {A C : Type'} (op : type1400 C) : (term1942 A C op) = (term1988 A C op).
Proof. exact (MK_COMB (@lem5939041 A C) (@lem5939040 A C op)). Qed.
Lemma lem5939044 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5939045 {A C : Type'} (P : type572 A C) (Q : type572 A C) : (term1094 A C P Q) = (term1095 A C P Q).
Proof. exact (@lem5939044 (A -> C) P Q). Qed.
Lemma lem5939046 {A C : Type'} (op : type1400 C) : (term1989 A C op) = (term1990 A C op).
Proof. exact (@lem5939045 A C (term1991 A C op) (term1992 A C op)). Qed.
Lemma lem5939047 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1993 A C op f) = (term1980 A C f op).
Proof. exact (eq_refl (term1993 A C op f)). Qed.
Lemma lem5939048 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5939049 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1994 A C op f) = (term1982 A C f op).
Proof. exact (MK_COMB (@lem5939048) (@lem5939047 A C f op)). Qed.
Lemma lem5939050 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1995 A C op f) = (term1985 A C f op).
Proof. exact (eq_refl (term1995 A C op f)). Qed.
Lemma lem5939051 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1996 A C op f) = (term1986 A C f op).
Proof. exact (MK_COMB (@lem5939049 A C f op) (@lem5939050 A C f op)). Qed.
Lemma lem5939052 {A C : Type'} (op : type1400 C) : (term1997 A C op) = (term1987 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5939051 A C f op)). Qed.
Lemma lem5939053 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5939054 {A C : Type'} (op : type1400 C) : (term1989 A C op) = (term1988 A C op).
Proof. exact (MK_COMB (@lem5939053 A C) (@lem5939052 A C op)). Qed.
Lemma lem5939055 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5939056 {A C : Type'} (op : type1400 C) : (term1998 A C op) = (term1999 A C op).
Proof. exact (MK_COMB (@lem5939055) (@lem5939054 A C op)). Qed.
Lemma lem5939057 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1993 A C op f) = (term1980 A C f op).
Proof. exact (eq_refl (term1993 A C op f)). Qed.
Lemma lem5939058 {A C : Type'} (op : type1400 C) : (term2000 A C op) = (term1991 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5939057 A C f op)). Qed.
Lemma lem5939059 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5939060 {A C : Type'} (op : type1400 C) : (term2001 A C op) = (term2002 A C op).
Proof. exact (MK_COMB (@lem5939059 A C) (@lem5939058 A C op)). Qed.
Lemma lem5939061 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5939062 {A C : Type'} (op : type1400 C) : (term2003 A C op) = (term2004 A C op).
Proof. exact (MK_COMB (@lem5939061) (@lem5939060 A C op)). Qed.
Lemma lem5939063 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1995 A C op f) = (term1985 A C f op).
Proof. exact (eq_refl (term1995 A C op f)). Qed.
Lemma lem5939064 {A C : Type'} (op : type1400 C) : (term2005 A C op) = (term1992 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5939063 A C f op)). Qed.
Lemma lem5939065 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5939066 {A C : Type'} (op : type1400 C) : (term2006 A C op) = (term2007 A C op).
Proof. exact (MK_COMB (@lem5939065 A C) (@lem5939064 A C op)). Qed.
Lemma lem5939067 {A C : Type'} (op : type1400 C) : (term1990 A C op) = (term2008 A C op).
Proof. exact (MK_COMB (@lem5939062 A C op) (@lem5939066 A C op)). Qed.
Lemma lem5939068 {A C : Type'} (op : type1400 C) : ((term1989 A C op) = (term1990 A C op)) = ((term1988 A C op) = (term2008 A C op)).
Proof. exact (MK_COMB (@lem5939056 A C op) (@lem5939067 A C op)). Qed.
Lemma lem5939069 {A C : Type'} (op : type1400 C) : (term1988 A C op) = (term2008 A C op).
Proof. exact (EQ_MP (@lem5939068 A C op) (@lem5939046 A C op)). Qed.
Lemma lem5939182 {A C : Type'} (op : type1400 C) : (term1942 A C op) = (term2008 A C op).
Proof. exact (TRANS (@lem5939042 A C op) (@lem5939069 A C op)). Qed.
Lemma lem5939183 {A C : Type'} : (term1943 A C) = (term2009 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5939182 A C op)). Qed.
Lemma lem5939184 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5939185 {A C : Type'} : (term1944 A C) = (term2010 A C).
Proof. exact (MK_COMB (@lem5939184 C) (@lem5939183 A C)). Qed.
Lemma lem5939187 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term894 A P Q) = (term895 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5939188 {C : Type'} (P : type403 C) (Q : type403 C) : (term2011 C P Q) = (term2012 C P Q).
Proof. exact (@lem5939187 (type1400 C) P Q). Qed.
Lemma lem5939189 {A C : Type'} : (term2013 A C) = (term2014 A C).
Proof. exact (@lem5939188 C (term2015 A C) (term2016 A C)). Qed.
Lemma lem5939190 {A C : Type'} (op : type1400 C) : (term2017 A C op) = (term2002 A C op).
Proof. exact (eq_refl (term2017 A C op)). Qed.
Lemma lem5939191 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5939192 {A C : Type'} (op : type1400 C) : (term2018 A C op) = (term2004 A C op).
Proof. exact (MK_COMB (@lem5939191) (@lem5939190 A C op)). Qed.
Lemma lem5939193 {A C : Type'} (op : type1400 C) : (term2019 A C op) = (term2007 A C op).
Proof. exact (eq_refl (term2019 A C op)). Qed.
Lemma lem5939194 {A C : Type'} (op : type1400 C) : (term2020 A C op) = (term2008 A C op).
Proof. exact (MK_COMB (@lem5939192 A C op) (@lem5939193 A C op)). Qed.
Lemma lem5939195 {A C : Type'} : (term2021 A C) = (term2009 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5939194 A C op)). Qed.
Lemma lem5939196 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5939197 {A C : Type'} : (term2013 A C) = (term2010 A C).
Proof. exact (MK_COMB (@lem5939196 C) (@lem5939195 A C)). Qed.
Lemma lem5939198 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5939199 {A C : Type'} : (term2022 A C) = (term2023 A C).
Proof. exact (MK_COMB (@lem5939198) (@lem5939197 A C)). Qed.
Lemma lem5939200 {A C : Type'} (op : type1400 C) : (term2017 A C op) = (term2002 A C op).
Proof. exact (eq_refl (term2017 A C op)). Qed.
Lemma lem5939201 {A C : Type'} : (term2024 A C) = (term2015 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5939200 A C op)). Qed.
Lemma lem5939202 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5939203 {A C : Type'} : (term2025 A C) = (term2026 A C).
Proof. exact (MK_COMB (@lem5939202 C) (@lem5939201 A C)). Qed.
Lemma lem5939204 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5939205 {A C : Type'} : (term2027 A C) = (term2028 A C).
Proof. exact (MK_COMB (@lem5939204) (@lem5939203 A C)). Qed.
Lemma lem5939206 {A C : Type'} (op : type1400 C) : (term2019 A C op) = (term2007 A C op).
Proof. exact (eq_refl (term2019 A C op)). Qed.
Lemma lem5939207 {A C : Type'} : (term2029 A C) = (term2016 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5939206 A C op)). Qed.
Lemma lem5939208 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5939209 {A C : Type'} : (term2030 A C) = (term2031 A C).
Proof. exact (MK_COMB (@lem5939208 C) (@lem5939207 A C)). Qed.
Lemma lem5939210 {A C : Type'} : (term2014 A C) = (term2032 A C).
Proof. exact (MK_COMB (@lem5939205 A C) (@lem5939209 A C)). Qed.
Lemma lem5939211 {A C : Type'} : ((term2013 A C) = (term2014 A C)) = ((term2010 A C) = (term2032 A C)).
Proof. exact (MK_COMB (@lem5939199 A C) (@lem5939210 A C)). Qed.
Lemma lem5939212 {A C : Type'} : (term2010 A C) = (term2032 A C).
Proof. exact (EQ_MP (@lem5939211 A C) (@lem5939189 A C)). Qed.
Lemma lem5939335 {A C : Type'} : (term1944 A C) = (term2032 A C).
Proof. exact (TRANS (@lem5939185 A C) (@lem5939212 A C)). Qed.
Lemma lem5939336 {A C : Type'} : (term1690 A C) = (term2032 A C).
Proof. exact (TRANS (@lem5938769 A C) (@lem5939335 A C)). Qed.
Lemma lem5939337 {A C : Type'} (h1 : term1690 A C) : term2032 A C.
Proof. exact (EQ_MP (@lem5939336 A C) (@lem5936674 A C h1)). Qed.
Lemma lem5939338 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (h1 : term2194 A B C op g s f x) : term2194 A B C op g s f x.
Proof. exact (h1). Qed.
Lemma lem5939339 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2191 A B C op g s f x y) : term2191 A B C op g s f x y.
Proof. exact (h1). Qed.
Lemma lem5939353 {A : Type'} (x : A) (y : A) : (x = y) = (x = y).
Proof. exact (eq_refl (x = y)). Qed.
Lemma lem5939354 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5939355 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5939360 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939362 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5939360 A B f x). Qed.
Lemma lem5939367 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939368 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5939367 A B f x). Qed.
Lemma lem5939370 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5939368 A B f y). Qed.
Lemma lem5939371 {A B : Type'} (f : A -> B) (x : A) : (term1339 A B f x) = (term1340 A B f x).
Proof. exact (MK_COMB (@lem5939355 B) (@lem5939362 A B f x)). Qed.
Lemma lem5939372 {A B : Type'} (x : A) (f : A -> B) (y : A) : ((f x) = (f y)) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5939371 A B f x) (@lem5939370 A B f y)). Qed.
Lemma lem5939373 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term1341 A B x f y) = (term1342 A B x f y).
Proof. exact (MK_COMB (@lem5939354) (@lem5939372 A B x f y)). Qed.
Lemma lem5939374 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5939381 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939382 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5939381 A (type686 A) f x). Qed.
Lemma lem5939383 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5939382 A (@IN A) y). Qed.
Lemma lem5939384 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5939385 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y s).
Proof. exact (MK_COMB (@lem5939383 A y) (@lem5939384 A s)). Qed.
Lemma lem5939387 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939388 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5939387 (A -> Prop) Prop f x). Qed.
Lemma lem5939389 {A : Type'} (y : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) y s) = (term1296 A y s).
Proof. exact (@lem5939388 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) s). Qed.
Lemma lem5939391 {A : Type'} (y : A) (s : A -> Prop) : (@IN A y s) = (term1296 A y s).
Proof. exact (TRANS (@lem5939385 A y s) (@lem5939389 A y s)). Qed.
Lemma lem5939392 {A : Type'} (y : A) (s : A -> Prop) : (term229 A y s) = (term1297 A y s).
Proof. exact (MK_COMB (@lem5939374) (@lem5939391 A y s)). Qed.
Lemma lem5939393 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5939394 {A : Type'} (y : A) (s : A -> Prop) : (term1896 A y s) = (term1444 A y s).
Proof. exact (MK_COMB (@lem5939393) (@lem5939392 A y s)). Qed.
Lemma lem5939395 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1895 A B s x f y) = (term1454 A B s x f y).
Proof. exact (MK_COMB (@lem5939394 A y s) (@lem5939373 A B x f y)). Qed.
Lemma lem5939396 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5939403 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939404 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5939403 A (type686 A) f x). Qed.
Lemma lem5939405 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5939404 A (@IN A) x). Qed.
Lemma lem5939406 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5939407 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5939405 A x) (@lem5939406 A s)). Qed.
Lemma lem5939409 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939410 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5939409 (A -> Prop) Prop f x). Qed.
Lemma lem5939411 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5939410 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5939413 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5939407 A x s) (@lem5939411 A x s)). Qed.
Lemma lem5939414 {A : Type'} (x : A) (s : A -> Prop) : (term229 A x s) = (term1297 A x s).
Proof. exact (MK_COMB (@lem5939396) (@lem5939413 A x s)). Qed.
Lemma lem5939415 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5939416 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1444 A x s).
Proof. exact (MK_COMB (@lem5939415) (@lem5939414 A x s)). Qed.
Lemma lem5939417 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1898 A B s x f y) = (term1455 A B s x f y).
Proof. exact (MK_COMB (@lem5939416 A x s) (@lem5939395 A B s x f y)). Qed.
Lemma lem5939418 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5939419 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1901 A B s x f y) = (term2033 A B s x f y).
Proof. exact (MK_COMB (@lem5939418) (@lem5939417 A B s x f y)). Qed.
Lemma lem5939420 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1903 A B s f x y) = (term2034 A B s f x y).
Proof. exact (MK_COMB (@lem5939419 A B s x f y) (@lem5939353 A x y)). Qed.
Lemma lem5939421 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1904 A B s f x) = (term2035 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5939420 A B s f x y)). Qed.
Lemma lem5939422 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5939423 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term1905 A B s f x) = (term2036 A B s f x).
Proof. exact (MK_COMB (@lem5939422 A) (@lem5939421 A B s f x)). Qed.
Lemma lem5939424 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1906 A B s f) = (term2037 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5939423 A B s f x)). Qed.
Lemma lem5939425 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5939426 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1907 A B s f) = (term2038 A B s f).
Proof. exact (MK_COMB (@lem5939425 A) (@lem5939424 A B s f)). Qed.
Lemma lem5939427 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2038 A B s f.
Proof. exact (EQ_MP (@lem5939426 A B s f) (@lem5936762 A B s f h1)). Qed.
Lemma lem5939428 {A : Type'} : (@FINITE A) = (@FINITE A).
Proof. exact (eq_refl (@FINITE A)). Qed.
Lemma lem5939437 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939438 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5939437 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5939439 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5939438 A B C (@o A B C) g). Qed.
Lemma lem5939440 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5939441 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5939439 A B C g) (@lem5939440 A B f)). Qed.
Lemma lem5939443 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939444 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5939443 (A -> B) (A -> C) f x). Qed.
Lemma lem5939445 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5939444 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5939447 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5939441 A B C g f) (@lem5939445 A B C g f)). Qed.
Lemma lem5939448 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5939449 {A C : Type'} (op : type1400 C) : (@support A C op) = (@support A C op).
Proof. exact (eq_refl (@support A C op)). Qed.
Lemma lem5939450 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2073 A B C op g f) = (term2074 A B C op g f).
Proof. exact (MK_COMB (@lem5939449 A C op) (@lem5939447 A B C g f)). Qed.
Lemma lem5939451 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2075 A B C op g f s).
Proof. exact (MK_COMB (@lem5939450 A B C op g f) (@lem5939448 A s)). Qed.
Lemma lem5939453 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939454 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5939453 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5939455 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5939454 A C (@support A C) op). Qed.
Lemma lem5939456 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5939457 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2076 A B C op g f).
Proof. exact (MK_COMB (@lem5939455 A C op) (@lem5939456 A B C g f)). Qed.
Lemma lem5939459 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939460 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5939459 (A -> C) (type672 A) f x). Qed.
Lemma lem5939461 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2076 A B C op g f) = (term2077 A B C op g f).
Proof. exact (@lem5939460 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) (term1329 A B C g f)). Qed.
Lemma lem5939462 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2077 A B C op g f).
Proof. exact (TRANS (@lem5939457 A B C op g f) (@lem5939461 A B C op g f)). Qed.
Lemma lem5939463 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5939464 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2078 A B C op g f s).
Proof. exact (MK_COMB (@lem5939462 A B C op g f) (@lem5939463 A s)). Qed.
Lemma lem5939466 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939467 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5939466 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5939468 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2078 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (@lem5939467 A (term2077 A B C op g f) s). Qed.
Lemma lem5939469 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5939464 A B C op g f s) (@lem5939468 A B C op g f s)). Qed.
Lemma lem5939470 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5939451 A B C op g f s) (@lem5939469 A B C op g f s)). Qed.
Lemma lem5939471 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1665 A B C op g f s) = (term2197 A B C op g f s).
Proof. exact (MK_COMB (@lem5939428 A) (@lem5939470 A B C op g f s)). Qed.
Lemma lem5939473 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5939474 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5939473 (A -> Prop) Prop f x). Qed.
Lemma lem5939475 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2197 A B C op g f s) = (term2198 A B C op g f s).
Proof. exact (@lem5939474 A (@FINITE A) (term2079 A B C op g f s)). Qed.
Lemma lem5939476 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1665 A B C op g f s) = (term2198 A B C op g f s).
Proof. exact (TRANS (@lem5939471 A B C op g f s) (@lem5939475 A B C op g f s)). Qed.
Lemma lem5940078 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5940079 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5940084 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940086 {A C : Type'} (f : A -> C) (x : A) : (f x) = (@I (A -> C) f x).
Proof. exact (@lem5940084 A C f x). Qed.
Lemma lem5940091 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940092 {C : Type'} (f : type402 C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> C) f x).
Proof. exact (@lem5940091 (type1400 C) C f x). Qed.
Lemma lem5940094 {C : Type'} (op : type1400 C) : (@neutral C op) = (@I ((C -> C -> C) -> C) (@neutral C) op).
Proof. exact (@lem5940092 C (@neutral C) op). Qed.
Lemma lem5940095 {A C : Type'} (f : A -> C) (x : A) : (term1339 A C f x) = (term1340 A C f x).
Proof. exact (MK_COMB (@lem5940079 C) (@lem5940086 A C f x)). Qed.
Lemma lem5940096 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : ((f x) = (@neutral C op)) = ((@I (A -> C) f x) = (@I ((C -> C -> C) -> C) (@neutral C) op)).
Proof. exact (MK_COMB (@lem5940095 A C f x) (@lem5940094 C op)). Qed.
Lemma lem5940097 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1928 A C f x op) = (term2039 A C f x op).
Proof. exact (MK_COMB (@lem5940078) (@lem5940096 A C f x op)). Qed.
Lemma lem5940104 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940105 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5940104 A (type686 A) f x). Qed.
Lemma lem5940106 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5940105 A (@IN A) x). Qed.
Lemma lem5940107 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940108 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5940106 A x) (@lem5940107 A s)). Qed.
Lemma lem5940110 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940111 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940110 (A -> Prop) Prop f x). Qed.
Lemma lem5940112 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5940111 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5940114 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5940108 A x s) (@lem5940112 A x s)). Qed.
Lemma lem5940115 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5940116 {A : Type'} (x : A) (s : A -> Prop) : (term413 A x s) = (term1365 A x s).
Proof. exact (MK_COMB (@lem5940115) (@lem5940114 A x s)). Qed.
Lemma lem5940117 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1733 A C s f x op) = (term2040 A C s f x op).
Proof. exact (MK_COMB (@lem5940116 A x s) (@lem5940097 A C f x op)). Qed.
Lemma lem5940118 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5940129 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940130 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940129 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5940131 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5940130 A C (@support A C) op). Qed.
Lemma lem5940132 {A C : Type'} (f : A -> C) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5940133 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f).
Proof. exact (MK_COMB (@lem5940131 A C op) (@lem5940132 A C f)). Qed.
Lemma lem5940135 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940136 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940135 (A -> C) (type672 A) f x). Qed.
Lemma lem5940137 {A C : Type'} (op : type1400 C) (f : A -> C) : (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f) = (term2041 A C op f).
Proof. exact (@lem5940136 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) f). Qed.
Lemma lem5940138 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (term2041 A C op f).
Proof. exact (TRANS (@lem5940133 A C op f) (@lem5940137 A C op f)). Qed.
Lemma lem5940139 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940140 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2042 A C op f s).
Proof. exact (MK_COMB (@lem5940138 A C op f) (@lem5940139 A s)). Qed.
Lemma lem5940142 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940143 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940142 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5940144 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2042 A C op f s) = (term2043 A C op f s).
Proof. exact (@lem5940143 A (term2041 A C op f) s). Qed.
Lemma lem5940146 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2043 A C op f s).
Proof. exact (TRANS (@lem5940140 A C op f s) (@lem5940144 A C op f s)). Qed.
Lemma lem5940147 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem5940148 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2044 A C x op f s).
Proof. exact (MK_COMB (@lem5940147 A x) (@lem5940146 A C op f s)). Qed.
Lemma lem5940150 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940151 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5940150 A (type686 A) f x). Qed.
Lemma lem5940152 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5940151 A (@IN A) x). Qed.
Lemma lem5940153 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2043 A C op f s) = (term2043 A C op f s).
Proof. exact (eq_refl (term2043 A C op f s)). Qed.
Lemma lem5940154 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2045 A C x op f s).
Proof. exact (MK_COMB (@lem5940152 A x) (@lem5940153 A C op f s)). Qed.
Lemma lem5940156 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940157 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940156 (A -> Prop) Prop f x). Qed.
Lemma lem5940158 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2045 A C x op f s) = (term2046 A C x op f s).
Proof. exact (@lem5940157 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) (term2043 A C op f s)). Qed.
Lemma lem5940159 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5940154 A C x op f s) (@lem5940158 A C x op f s)). Qed.
Lemma lem5940160 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5940148 A C x op f s) (@lem5940159 A C x op f s)). Qed.
Lemma lem5940161 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2047 A C x op f s) = (term2048 A C x op f s).
Proof. exact (MK_COMB (@lem5940118) (@lem5940160 A C x op f s)). Qed.
Lemma lem5940162 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5940163 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2049 A C x op f s) = (term2050 A C x op f s).
Proof. exact (MK_COMB (@lem5940162) (@lem5940161 A C x op f s)). Qed.
Lemma lem5940164 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1929 A C s f x op) = (term2051 A C s f x op).
Proof. exact (MK_COMB (@lem5940163 A C x op f s) (@lem5940117 A C s f x op)). Qed.
Lemma lem5940165 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1948 A C f x op) = (term2052 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5940164 A C s f x op)). Qed.
Lemma lem5940166 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5940167 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1963 A C f x op) = (term2053 A C f x op).
Proof. exact (MK_COMB (@lem5940166 A) (@lem5940165 A C f x op)). Qed.
Lemma lem5940168 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1970 A C f op) = (term2054 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5940167 A C f x op)). Qed.
Lemma lem5940169 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5940170 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1985 A C f op) = (term2055 A C f op).
Proof. exact (MK_COMB (@lem5940169 A) (@lem5940168 A C f op)). Qed.
Lemma lem5940171 {A C : Type'} (op : type1400 C) : (term1992 A C op) = (term2056 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5940170 A C f op)). Qed.
Lemma lem5940172 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5940173 {A C : Type'} (op : type1400 C) : (term2007 A C op) = (term2057 A C op).
Proof. exact (MK_COMB (@lem5940172 A C) (@lem5940171 A C op)). Qed.
Lemma lem5940174 {A C : Type'} : (term2016 A C) = (term2058 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5940173 A C op)). Qed.
Lemma lem5940175 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5940176 {A C : Type'} : (term2031 A C) = (term2059 A C).
Proof. exact (MK_COMB (@lem5940175 C) (@lem5940174 A C)). Qed.
Lemma lem5940177 {C : Type'} : (@eq C) = (@eq C).
Proof. exact (eq_refl (@eq C)). Qed.
Lemma lem5940182 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940184 {A C : Type'} (f : A -> C) (x : A) : (f x) = (@I (A -> C) f x).
Proof. exact (@lem5940182 A C f x). Qed.
Lemma lem5940189 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940190 {C : Type'} (f : type402 C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> C) f x).
Proof. exact (@lem5940189 (type1400 C) C f x). Qed.
Lemma lem5940192 {C : Type'} (op : type1400 C) : (@neutral C op) = (@I ((C -> C -> C) -> C) (@neutral C) op).
Proof. exact (@lem5940190 C (@neutral C) op). Qed.
Lemma lem5940193 {A C : Type'} (f : A -> C) (x : A) : (term1339 A C f x) = (term1340 A C f x).
Proof. exact (MK_COMB (@lem5940177 C) (@lem5940184 A C f x)). Qed.
Lemma lem5940194 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : ((f x) = (@neutral C op)) = ((@I (A -> C) f x) = (@I ((C -> C -> C) -> C) (@neutral C) op)).
Proof. exact (MK_COMB (@lem5940193 A C f x) (@lem5940192 C op)). Qed.
Lemma lem5940195 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5940202 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940203 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5940202 A (type686 A) f x). Qed.
Lemma lem5940204 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5940203 A (@IN A) x). Qed.
Lemma lem5940205 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940206 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x s).
Proof. exact (MK_COMB (@lem5940204 A x) (@lem5940205 A s)). Qed.
Lemma lem5940208 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940209 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940208 (A -> Prop) Prop f x). Qed.
Lemma lem5940210 {A : Type'} (x : A) (s : A -> Prop) : (@I (A -> (A -> Prop) -> Prop) (@IN A) x s) = (term1296 A x s).
Proof. exact (@lem5940209 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) s). Qed.
Lemma lem5940212 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (term1296 A x s).
Proof. exact (TRANS (@lem5940206 A x s) (@lem5940210 A x s)). Qed.
Lemma lem5940213 {A : Type'} (x : A) (s : A -> Prop) : (term229 A x s) = (term1297 A x s).
Proof. exact (MK_COMB (@lem5940195) (@lem5940212 A x s)). Qed.
Lemma lem5940214 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5940215 {A : Type'} (x : A) (s : A -> Prop) : (term1896 A x s) = (term1444 A x s).
Proof. exact (MK_COMB (@lem5940214) (@lem5940213 A x s)). Qed.
Lemma lem5940216 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1926 A C s f x op) = (term2060 A C s f x op).
Proof. exact (MK_COMB (@lem5940215 A x s) (@lem5940194 A C f x op)). Qed.
Lemma lem5940227 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940228 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940227 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5940229 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5940228 A C (@support A C) op). Qed.
Lemma lem5940230 {A C : Type'} (f : A -> C) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5940231 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f).
Proof. exact (MK_COMB (@lem5940229 A C op) (@lem5940230 A C f)). Qed.
Lemma lem5940233 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940234 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940233 (A -> C) (type672 A) f x). Qed.
Lemma lem5940235 {A C : Type'} (op : type1400 C) (f : A -> C) : (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op f) = (term2041 A C op f).
Proof. exact (@lem5940234 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) f). Qed.
Lemma lem5940236 {A C : Type'} (op : type1400 C) (f : A -> C) : (@support A C op f) = (term2041 A C op f).
Proof. exact (TRANS (@lem5940231 A C op f) (@lem5940235 A C op f)). Qed.
Lemma lem5940237 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940238 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2042 A C op f s).
Proof. exact (MK_COMB (@lem5940236 A C op f) (@lem5940237 A s)). Qed.
Lemma lem5940240 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940241 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940240 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5940242 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2042 A C op f s) = (term2043 A C op f s).
Proof. exact (@lem5940241 A (term2041 A C op f) s). Qed.
Lemma lem5940244 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (@support A C op f s) = (term2043 A C op f s).
Proof. exact (TRANS (@lem5940238 A C op f s) (@lem5940242 A C op f s)). Qed.
Lemma lem5940245 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem5940246 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2044 A C x op f s).
Proof. exact (MK_COMB (@lem5940245 A x) (@lem5940244 A C op f s)). Qed.
Lemma lem5940248 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940249 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5940248 A (type686 A) f x). Qed.
Lemma lem5940250 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5940249 A (@IN A) x). Qed.
Lemma lem5940251 {A C : Type'} (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2043 A C op f s) = (term2043 A C op f s).
Proof. exact (eq_refl (term2043 A C op f s)). Qed.
Lemma lem5940252 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2045 A C x op f s).
Proof. exact (MK_COMB (@lem5940250 A x) (@lem5940251 A C op f s)). Qed.
Lemma lem5940254 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940255 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940254 (A -> Prop) Prop f x). Qed.
Lemma lem5940256 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2045 A C x op f s) = (term2046 A C x op f s).
Proof. exact (@lem5940255 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) (term2043 A C op f s)). Qed.
Lemma lem5940257 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term2044 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5940252 A C x op f s) (@lem5940256 A C x op f s)). Qed.
Lemma lem5940258 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1732 A C x op f s) = (term2046 A C x op f s).
Proof. exact (TRANS (@lem5940246 A C x op f s) (@lem5940257 A C x op f s)). Qed.
Lemma lem5940259 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5940260 {A C : Type'} (x : A) (op : type1400 C) (f : A -> C) (s : A -> Prop) : (term1930 A C x op f s) = (term2061 A C x op f s).
Proof. exact (MK_COMB (@lem5940259) (@lem5940258 A C x op f s)). Qed.
Lemma lem5940261 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term1932 A C s f x op) = (term2062 A C s f x op).
Proof. exact (MK_COMB (@lem5940260 A C x op f s) (@lem5940216 A C s f x op)). Qed.
Lemma lem5940262 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1947 A C f x op) = (term2063 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5940261 A C s f x op)). Qed.
Lemma lem5940263 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5940264 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term1958 A C f x op) = (term2064 A C f x op).
Proof. exact (MK_COMB (@lem5940263 A) (@lem5940262 A C f x op)). Qed.
Lemma lem5940265 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1969 A C f op) = (term2065 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5940264 A C f x op)). Qed.
Lemma lem5940266 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5940267 {A C : Type'} (f : A -> C) (op : type1400 C) : (term1980 A C f op) = (term2066 A C f op).
Proof. exact (MK_COMB (@lem5940266 A) (@lem5940265 A C f op)). Qed.
Lemma lem5940268 {A C : Type'} (op : type1400 C) : (term1991 A C op) = (term2067 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5940267 A C f op)). Qed.
Lemma lem5940269 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5940270 {A C : Type'} (op : type1400 C) : (term2002 A C op) = (term2068 A C op).
Proof. exact (MK_COMB (@lem5940269 A C) (@lem5940268 A C op)). Qed.
Lemma lem5940271 {A C : Type'} : (term2015 A C) = (term2069 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5940270 A C op)). Qed.
Lemma lem5940272 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5940273 {A C : Type'} : (term2026 A C) = (term2070 A C).
Proof. exact (MK_COMB (@lem5940272 C) (@lem5940271 A C)). Qed.
Lemma lem5940274 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5940275 {A C : Type'} : (term2028 A C) = (term2071 A C).
Proof. exact (MK_COMB (@lem5940274) (@lem5940273 A C)). Qed.
Lemma lem5940276 {A C : Type'} : (term2032 A C) = (term2072 A C).
Proof. exact (MK_COMB (@lem5940275 A C) (@lem5940176 A C)). Qed.
Lemma lem5940277 {A C : Type'} (h1 : term1690 A C) : term2072 A C.
Proof. exact (EQ_MP (@lem5940276 A C) (@lem5939337 A C h1)). Qed.
Lemma lem5940284 {A : Type'} (x : A) (y : A) : (term1361 A x y) = (term1361 A x y).
Proof. exact (eq_refl (term1361 A x y)). Qed.
Lemma lem5940285 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5940290 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940292 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5940290 A B f x). Qed.
Lemma lem5940297 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940298 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5940297 A B f x). Qed.
Lemma lem5940300 {A B : Type'} (f : A -> B) (y : A) : (f y) = (@I (A -> B) f y).
Proof. exact (@lem5940298 A B f y). Qed.
Lemma lem5940301 {A B : Type'} (f : A -> B) (x : A) : (term1339 A B f x) = (term1340 A B f x).
Proof. exact (MK_COMB (@lem5940285 B) (@lem5940292 A B f x)). Qed.
Lemma lem5940302 {A B : Type'} (x : A) (f : A -> B) (y : A) : ((f x) = (f y)) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (MK_COMB (@lem5940301 A B f x) (@lem5940300 A B f y)). Qed.
Lemma lem5940313 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940314 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5940313 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5940315 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5940314 A B C (@o A B C) g). Qed.
Lemma lem5940316 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5940317 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5940315 A B C g) (@lem5940316 A B f)). Qed.
Lemma lem5940319 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940320 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5940319 (A -> B) (A -> C) f x). Qed.
Lemma lem5940321 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5940320 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5940323 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5940317 A B C g f) (@lem5940321 A B C g f)). Qed.
Lemma lem5940324 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940325 {A C : Type'} (op : type1400 C) : (@support A C op) = (@support A C op).
Proof. exact (eq_refl (@support A C op)). Qed.
Lemma lem5940326 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2073 A B C op g f) = (term2074 A B C op g f).
Proof. exact (MK_COMB (@lem5940325 A C op) (@lem5940323 A B C g f)). Qed.
Lemma lem5940327 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2075 A B C op g f s).
Proof. exact (MK_COMB (@lem5940326 A B C op g f) (@lem5940324 A s)). Qed.
Lemma lem5940329 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940330 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940329 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5940331 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5940330 A C (@support A C) op). Qed.
Lemma lem5940332 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5940333 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2076 A B C op g f).
Proof. exact (MK_COMB (@lem5940331 A C op) (@lem5940332 A B C g f)). Qed.
Lemma lem5940335 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940336 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940335 (A -> C) (type672 A) f x). Qed.
Lemma lem5940337 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2076 A B C op g f) = (term2077 A B C op g f).
Proof. exact (@lem5940336 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) (term1329 A B C g f)). Qed.
Lemma lem5940338 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2077 A B C op g f).
Proof. exact (TRANS (@lem5940333 A B C op g f) (@lem5940337 A B C op g f)). Qed.
Lemma lem5940339 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940340 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2078 A B C op g f s).
Proof. exact (MK_COMB (@lem5940338 A B C op g f) (@lem5940339 A s)). Qed.
Lemma lem5940342 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940343 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940342 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5940344 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2078 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (@lem5940343 A (term2077 A B C op g f) s). Qed.
Lemma lem5940345 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5940340 A B C op g f s) (@lem5940344 A B C op g f s)). Qed.
Lemma lem5940346 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5940327 A B C op g f s) (@lem5940345 A B C op g f s)). Qed.
Lemma lem5940347 {A : Type'} (y : A) : (@IN A y) = (@IN A y).
Proof. exact (eq_refl (@IN A y)). Qed.
Lemma lem5940348 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C y op g f s) = (term2081 A B C y op g f s).
Proof. exact (MK_COMB (@lem5940347 A y) (@lem5940346 A B C op g f s)). Qed.
Lemma lem5940350 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940351 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5940350 A (type686 A) f x). Qed.
Lemma lem5940352 {A : Type'} (y : A) : (@IN A y) = (@I (A -> (A -> Prop) -> Prop) (@IN A) y).
Proof. exact (@lem5940351 A (@IN A) y). Qed.
Lemma lem5940353 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2079 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (eq_refl (term2079 A B C op g f s)). Qed.
Lemma lem5940354 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C y op g f s) = (term2082 A B C y op g f s).
Proof. exact (MK_COMB (@lem5940352 A y) (@lem5940353 A B C op g f s)). Qed.
Lemma lem5940356 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940357 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940356 (A -> Prop) Prop f x). Qed.
Lemma lem5940358 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2082 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (@lem5940357 A (@I (A -> (A -> Prop) -> Prop) (@IN A) y) (term2079 A B C op g f s)). Qed.
Lemma lem5940359 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (TRANS (@lem5940354 A B C y op g f s) (@lem5940358 A B C y op g f s)). Qed.
Lemma lem5940360 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (TRANS (@lem5940348 A B C y op g f s) (@lem5940359 A B C y op g f s)). Qed.
Lemma lem5940361 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5940362 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2084 A B C y op g f s) = (term2085 A B C y op g f s).
Proof. exact (MK_COMB (@lem5940361) (@lem5940360 A B C y op g f s)). Qed.
Lemma lem5940363 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2086 A B C op g s x f y) = (term2087 A B C op g s x f y).
Proof. exact (MK_COMB (@lem5940362 A B C y op g f s) (@lem5940302 A B x f y)). Qed.
Lemma lem5940374 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940375 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5940374 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5940376 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5940375 A B C (@o A B C) g). Qed.
Lemma lem5940377 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5940378 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5940376 A B C g) (@lem5940377 A B f)). Qed.
Lemma lem5940380 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940381 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5940380 (A -> B) (A -> C) f x). Qed.
Lemma lem5940382 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5940381 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5940384 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5940378 A B C g f) (@lem5940382 A B C g f)). Qed.
Lemma lem5940385 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940386 {A C : Type'} (op : type1400 C) : (@support A C op) = (@support A C op).
Proof. exact (eq_refl (@support A C op)). Qed.
Lemma lem5940387 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2073 A B C op g f) = (term2074 A B C op g f).
Proof. exact (MK_COMB (@lem5940386 A C op) (@lem5940384 A B C g f)). Qed.
Lemma lem5940388 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2075 A B C op g f s).
Proof. exact (MK_COMB (@lem5940387 A B C op g f) (@lem5940385 A s)). Qed.
Lemma lem5940390 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940391 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940390 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5940392 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5940391 A C (@support A C) op). Qed.
Lemma lem5940393 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5940394 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2076 A B C op g f).
Proof. exact (MK_COMB (@lem5940392 A C op) (@lem5940393 A B C g f)). Qed.
Lemma lem5940396 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940397 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940396 (A -> C) (type672 A) f x). Qed.
Lemma lem5940398 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2076 A B C op g f) = (term2077 A B C op g f).
Proof. exact (@lem5940397 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) (term1329 A B C g f)). Qed.
Lemma lem5940399 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2077 A B C op g f).
Proof. exact (TRANS (@lem5940394 A B C op g f) (@lem5940398 A B C op g f)). Qed.
Lemma lem5940400 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940401 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2078 A B C op g f s).
Proof. exact (MK_COMB (@lem5940399 A B C op g f) (@lem5940400 A s)). Qed.
Lemma lem5940403 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940404 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940403 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5940405 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2078 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (@lem5940404 A (term2077 A B C op g f) s). Qed.
Lemma lem5940406 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5940401 A B C op g f s) (@lem5940405 A B C op g f s)). Qed.
Lemma lem5940407 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5940388 A B C op g f s) (@lem5940406 A B C op g f s)). Qed.
Lemma lem5940408 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem5940409 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C x op g f s) = (term2081 A B C x op g f s).
Proof. exact (MK_COMB (@lem5940408 A x) (@lem5940407 A B C op g f s)). Qed.
Lemma lem5940411 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940412 {A : Type'} (f : type1364 A) (x : A) : (f x) = (@I (A -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem5940411 A (type686 A) f x). Qed.
Lemma lem5940413 {A : Type'} (x : A) : (@IN A x) = (@I (A -> (A -> Prop) -> Prop) (@IN A) x).
Proof. exact (@lem5940412 A (@IN A) x). Qed.
Lemma lem5940414 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2079 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (eq_refl (term2079 A B C op g f s)). Qed.
Lemma lem5940415 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C x op g f s) = (term2082 A B C x op g f s).
Proof. exact (MK_COMB (@lem5940413 A x) (@lem5940414 A B C op g f s)). Qed.
Lemma lem5940417 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940418 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940417 (A -> Prop) Prop f x). Qed.
Lemma lem5940419 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2082 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (@lem5940418 A (@I (A -> (A -> Prop) -> Prop) (@IN A) x) (term2079 A B C op g f s)). Qed.
Lemma lem5940420 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2081 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (TRANS (@lem5940415 A B C x op g f s) (@lem5940419 A B C x op g f s)). Qed.
Lemma lem5940421 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2080 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (TRANS (@lem5940409 A B C x op g f s) (@lem5940420 A B C x op g f s)). Qed.
Lemma lem5940422 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5940423 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2084 A B C x op g f s) = (term2085 A B C x op g f s).
Proof. exact (MK_COMB (@lem5940422) (@lem5940421 A B C x op g f s)). Qed.
Lemma lem5940424 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term1910 A B C op g s x f y) = (term2088 A B C op g s x f y).
Proof. exact (MK_COMB (@lem5940423 A B C x op g f s) (@lem5940363 A B C op g s x f y)). Qed.
Lemma lem5940425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5940426 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (x : A) (f : A -> B) (y : A) : (term2089 A B C op g s x f y) = (term2090 A B C op g s x f y).
Proof. exact (MK_COMB (@lem5940425) (@lem5940424 A B C op g s x f y)). Qed.
Lemma lem5940427 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term1909 A B C op g s f x y) = (term2091 A B C op g s f x y).
Proof. exact (MK_COMB (@lem5940426 A B C op g s x f y) (@lem5940284 A x y)). Qed.
Lemma lem5940428 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5940429 {A : Type'} : (@FINITE A) = (@FINITE A).
Proof. exact (eq_refl (@FINITE A)). Qed.
Lemma lem5940438 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940439 {A B C : Type'} (f : type808 A B C) (x : B -> C) : (f x) = (@I ((B -> C) -> (A -> B) -> A -> C) f x).
Proof. exact (@lem5940438 (B -> C) (type550 A B C) f x). Qed.
Lemma lem5940440 {A B C : Type'} (g : B -> C) : (@o A B C g) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g).
Proof. exact (@lem5940439 A B C (@o A B C) g). Qed.
Lemma lem5940441 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5940442 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f).
Proof. exact (MK_COMB (@lem5940440 A B C g) (@lem5940441 A B f)). Qed.
Lemma lem5940444 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940445 {A B C : Type'} (f : type550 A B C) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> C) f x).
Proof. exact (@lem5940444 (A -> B) (A -> C) f x). Qed.
Lemma lem5940446 {A B C : Type'} (g : B -> C) (f : A -> B) : (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g f) = (term1329 A B C g f).
Proof. exact (@lem5940445 A B C (@I ((B -> C) -> (A -> B) -> A -> C) (@o A B C) g) f). Qed.
Lemma lem5940448 {A B C : Type'} (g : B -> C) (f : A -> B) : (@o A B C g f) = (term1329 A B C g f).
Proof. exact (TRANS (@lem5940442 A B C g f) (@lem5940446 A B C g f)). Qed.
Lemma lem5940449 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940450 {A C : Type'} (op : type1400 C) : (@support A C op) = (@support A C op).
Proof. exact (eq_refl (@support A C op)). Qed.
Lemma lem5940451 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2073 A B C op g f) = (term2074 A B C op g f).
Proof. exact (MK_COMB (@lem5940450 A C op) (@lem5940448 A B C g f)). Qed.
Lemma lem5940452 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2075 A B C op g f s).
Proof. exact (MK_COMB (@lem5940451 A B C op g f) (@lem5940449 A s)). Qed.
Lemma lem5940454 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940455 {A C : Type'} (f : type748 A C) (x : type1400 C) : (f x) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940454 (type1400 C) (type527 A C) f x). Qed.
Lemma lem5940456 {A C : Type'} (op : type1400 C) : (@support A C op) = (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op).
Proof. exact (@lem5940455 A C (@support A C) op). Qed.
Lemma lem5940457 {A B C : Type'} (g : B -> C) (f : A -> B) : (term1329 A B C g f) = (term1329 A B C g f).
Proof. exact (eq_refl (term1329 A B C g f)). Qed.
Lemma lem5940458 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2076 A B C op g f).
Proof. exact (MK_COMB (@lem5940456 A C op) (@lem5940457 A B C g f)). Qed.
Lemma lem5940460 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940461 {A C : Type'} (f : type527 A C) (x : A -> C) : (f x) = (@I ((A -> C) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940460 (A -> C) (type672 A) f x). Qed.
Lemma lem5940462 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2076 A B C op g f) = (term2077 A B C op g f).
Proof. exact (@lem5940461 A C (@I ((C -> C -> C) -> (A -> C) -> (A -> Prop) -> A -> Prop) (@support A C) op) (term1329 A B C g f)). Qed.
Lemma lem5940463 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) : (term2074 A B C op g f) = (term2077 A B C op g f).
Proof. exact (TRANS (@lem5940458 A B C op g f) (@lem5940462 A B C op g f)). Qed.
Lemma lem5940464 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5940465 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2078 A B C op g f s).
Proof. exact (MK_COMB (@lem5940463 A B C op g f) (@lem5940464 A s)). Qed.
Lemma lem5940467 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940468 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5940467 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5940469 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2078 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (@lem5940468 A (term2077 A B C op g f) s). Qed.
Lemma lem5940470 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2075 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5940465 A B C op g f s) (@lem5940469 A B C op g f s)). Qed.
Lemma lem5940471 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1685 A B C op g f s) = (term2079 A B C op g f s).
Proof. exact (TRANS (@lem5940452 A B C op g f s) (@lem5940470 A B C op g f s)). Qed.
Lemma lem5940472 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1665 A B C op g f s) = (term2197 A B C op g f s).
Proof. exact (MK_COMB (@lem5940429 A) (@lem5940471 A B C op g f s)). Qed.
Lemma lem5940474 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5940475 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem5940474 (A -> Prop) Prop f x). Qed.
Lemma lem5940476 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2197 A B C op g f s) = (term2198 A B C op g f s).
Proof. exact (@lem5940475 A (@FINITE A) (term2079 A B C op g f s)). Qed.
Lemma lem5940477 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term1665 A B C op g f s) = (term2198 A B C op g f s).
Proof. exact (TRANS (@lem5940472 A B C op g f s) (@lem5940476 A B C op g f s)). Qed.
Lemma lem5940478 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2172 A B C op g f s) = (term2199 A B C op g f s).
Proof. exact (MK_COMB (@lem5940428) (@lem5940477 A B C op g f s)). Qed.
Lemma lem5940479 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5940480 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2167 A B C op g f s) = (term2200 A B C op g f s).
Proof. exact (MK_COMB (@lem5940479) (@lem5940478 A B C op g f s)). Qed.
Lemma lem5940481 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2191 A B C op g s f x y) = (term2201 A B C op g s f x y).
Proof. exact (MK_COMB (@lem5940480 A B C op g f s) (@lem5940427 A B C op g s f x y)). Qed.
Lemma lem5940482 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2191 A B C op g s f x y) : term2201 A B C op g s f x y.
Proof. exact (EQ_MP (@lem5940481 A B C op g s f x y) (@lem5939339 A B C op g s f x y h1)). Qed.
Lemma lem5940483 {A C : Type'} (h1 : term1690 A C) : term2059 A C.
Proof. exact (proj2 (@lem5940277 A C h1)). Qed.
Lemma lem5940492 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2091 A B C op g s f x y.
Proof. exact (h1). Qed.
Lemma lem5940494 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2088 A B C op g s x f y.
Proof. exact (proj1 (@lem5940492 A B C op g s f x y h1)). Qed.
Lemma lem5940495 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2087 A B C op g s x f y.
Proof. exact (proj2 (@lem5940494 A B C op g s f x y h1)). Qed.
Lemma lem5940778 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term2199 A B C op g f s) : term2199 A B C op g f s.
Proof. exact (h1). Qed.
Lemma lem5940802 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (y : A) : (term2034 A B s f x y) = (term2034 A B s f x y).
Proof. exact (eq_refl (term2034 A B s f x y)). Qed.
Lemma lem5940803 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term2035 A B s f x) = (term2035 A B s f x).
Proof. exact (fun_ext (fun y : A => @lem5940802 A B s f x y)). Qed.
Lemma lem5940804 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5940805 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) : (term2036 A B s f x) = (term2036 A B s f x).
Proof. exact (MK_COMB (@lem5940804 A) (@lem5940803 A B s f x)). Qed.
Lemma lem5940806 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2037 A B s f) = (term2037 A B s f).
Proof. exact (fun_ext (fun x : A => @lem5940805 A B s f x)). Qed.
Lemma lem5940807 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5940809 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term2038 A B s f) = (term2038 A B s f).
Proof. exact (MK_COMB (@lem5940807 A) (@lem5940806 A B s f)). Qed.
Lemma lem5940810 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2038 A B s f.
Proof. exact (EQ_MP (@lem5940809 A B s f) (@lem5939427 A B s f h1)). Qed.
Lemma lem5940860 {A C : Type'} (s : A -> Prop) (f : A -> C) (x : A) (op : type1400 C) : (term2051 A C s f x op) = (term2092 A C s f x op).
Proof. exact (@lem19490 (term1296 A x s) (term2048 A C x op f s) (term2039 A C f x op)). Qed.
Lemma lem5940861 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term2052 A C f x op) = (term2093 A C f x op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5940860 A C s f x op)). Qed.
Lemma lem5940862 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5940863 {A C : Type'} (f : A -> C) (x : A) (op : type1400 C) : (term2053 A C f x op) = (term2094 A C f x op).
Proof. exact (MK_COMB (@lem5940862 A) (@lem5940861 A C f x op)). Qed.
Lemma lem5940864 {A C : Type'} (f : A -> C) (op : type1400 C) : (term2054 A C f op) = (term2095 A C f op).
Proof. exact (fun_ext (fun x : A => @lem5940863 A C f x op)). Qed.
Lemma lem5940865 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5940866 {A C : Type'} (f : A -> C) (op : type1400 C) : (term2055 A C f op) = (term2096 A C f op).
Proof. exact (MK_COMB (@lem5940865 A) (@lem5940864 A C f op)). Qed.
Lemma lem5940867 {A C : Type'} (op : type1400 C) : (term2056 A C op) = (term2097 A C op).
Proof. exact (fun_ext (fun f : A -> C => @lem5940866 A C f op)). Qed.
Lemma lem5940868 {A C : Type'} : (@all (A -> C)) = (@all (A -> C)).
Proof. exact (eq_refl (@all (A -> C))). Qed.
Lemma lem5940869 {A C : Type'} (op : type1400 C) : (term2057 A C op) = (term2098 A C op).
Proof. exact (MK_COMB (@lem5940868 A C) (@lem5940867 A C op)). Qed.
Lemma lem5940870 {A C : Type'} : (term2058 A C) = (term2099 A C).
Proof. exact (fun_ext (fun op : type1400 C => @lem5940869 A C op)). Qed.
Lemma lem5940871 {C : Type'} : (@all (C -> C -> C)) = (@all (C -> C -> C)).
Proof. exact (eq_refl (@all (C -> C -> C))). Qed.
Lemma lem5940873 {A C : Type'} : (term2059 A C) = (term2100 A C).
Proof. exact (MK_COMB (@lem5940871 C) (@lem5940870 A C)). Qed.
Lemma lem5940874 {A C : Type'} (h1 : term1690 A C) : term2100 A C.
Proof. exact (EQ_MP (@lem5940873 A C) (@lem5940483 A C h1)). Qed.
Lemma lem5941173 {A B : Type'} (_74891 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2101 A B s f _74891.
Proof. exact (@lem5940810 A B s f h1 _74891). Qed.
Lemma lem5941174 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) : (term2101 A B s f _74891) = (term2036 A B s f _74891).
Proof. exact (eq_refl (term2101 A B s f _74891)). Qed.
Lemma lem5941175 {A B : Type'} (_74891 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2036 A B s f _74891.
Proof. exact (EQ_MP (@lem5941174 A B s f _74891) (@lem5941173 A B _74891 s f h1)). Qed.
Lemma lem5941176 {A B : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2102 A B s f _74891 _74892.
Proof. exact (@lem5941175 A B _74891 s f h1 _74892). Qed.
Lemma lem5941177 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term2102 A B s f _74891 _74892) = (term2034 A B s f _74891 _74892).
Proof. exact (eq_refl (term2102 A B s f _74891 _74892)). Qed.
Lemma lem5941178 {A B : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2034 A B s f _74891 _74892.
Proof. exact (EQ_MP (@lem5941177 A B s f _74891 _74892) (@lem5941176 A B _74891 _74892 s f h1)). Qed.
Lemma lem5941191 {A C : Type'} (_74897 : type1400 C) (h1 : term1690 A C) : term2103 A C _74897.
Proof. exact (@lem5940874 A C h1 _74897). Qed.
Lemma lem5941192 {A C : Type'} (_74897 : type1400 C) : (term2103 A C _74897) = (term2098 A C _74897).
Proof. exact (eq_refl (term2103 A C _74897)). Qed.
Lemma lem5941193 {A C : Type'} (_74897 : type1400 C) (h1 : term1690 A C) : term2098 A C _74897.
Proof. exact (EQ_MP (@lem5941192 A C _74897) (@lem5941191 A C _74897 h1)). Qed.
Lemma lem5941194 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (h1 : term1690 A C) : term2104 A C _74897 _74898.
Proof. exact (@lem5941193 A C _74897 h1 _74898). Qed.
Lemma lem5941195 {A C : Type'} (_74898 : A -> C) (_74897 : type1400 C) : (term2104 A C _74897 _74898) = (term2096 A C _74898 _74897).
Proof. exact (eq_refl (term2104 A C _74897 _74898)). Qed.
Lemma lem5941196 {A C : Type'} (_74898 : A -> C) (_74897 : type1400 C) (h1 : term1690 A C) : term2096 A C _74898 _74897.
Proof. exact (EQ_MP (@lem5941195 A C _74898 _74897) (@lem5941194 A C _74897 _74898 h1)). Qed.
Lemma lem5941197 {A C : Type'} (_74898 : A -> C) (_74897 : type1400 C) (_74899 : A) (h1 : term1690 A C) : term2105 A C _74898 _74897 _74899.
Proof. exact (@lem5941196 A C _74898 _74897 h1 _74899). Qed.
Lemma lem5941198 {A C : Type'} (_74898 : A -> C) (_74899 : A) (_74897 : type1400 C) : (term2105 A C _74898 _74897 _74899) = (term2094 A C _74898 _74899 _74897).
Proof. exact (eq_refl (term2105 A C _74898 _74897 _74899)). Qed.
Lemma lem5941199 {A C : Type'} (_74898 : A -> C) (_74899 : A) (_74897 : type1400 C) (h1 : term1690 A C) : term2094 A C _74898 _74899 _74897.
Proof. exact (EQ_MP (@lem5941198 A C _74898 _74899 _74897) (@lem5941197 A C _74898 _74897 _74899 h1)). Qed.
Lemma lem5941200 {A C : Type'} (_74898 : A -> C) (_74899 : A) (_74897 : type1400 C) (_74900 : A -> Prop) (h1 : term1690 A C) : term2106 A C _74898 _74899 _74897 _74900.
Proof. exact (@lem5941199 A C _74898 _74899 _74897 h1 _74900). Qed.
Lemma lem5941201 {A C : Type'} (_74900 : A -> Prop) (_74898 : A -> C) (_74899 : A) (_74897 : type1400 C) : (term2106 A C _74898 _74899 _74897 _74900) = (term2092 A C _74900 _74898 _74899 _74897).
Proof. exact (eq_refl (term2106 A C _74898 _74899 _74897 _74900)). Qed.
Lemma lem5941202 {A C : Type'} (_74900 : A -> Prop) (_74898 : A -> C) (_74899 : A) (_74897 : type1400 C) (h1 : term1690 A C) : term2092 A C _74900 _74898 _74899 _74897.
Proof. exact (EQ_MP (@lem5941201 A C _74900 _74898 _74899 _74897) (@lem5941200 A C _74898 _74899 _74897 _74900 h1)). Qed.
Lemma lem5941354 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term2199 A B C op g f s) : term2199 A B C op g f s.
Proof. exact (h1). Qed.
Lemma lem5941408 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term2034 A B s f _74891 _74892) = (term2107 A B s f _74891 _74892).
Proof. exact (@lem5825983 (term1297 A _74891 s) (term1454 A B s _74891 f _74892) (_74891 = _74892)). Qed.
Lemma lem5941415 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term2108 A B s f _74891 _74892) = (term1408 A B s f _74891 _74892).
Proof. exact (@lem5825983 (term1297 A _74892 s) (term1342 A B _74891 f _74892) (_74891 = _74892)). Qed.
Lemma lem5941416 {A : Type'} (_74891 : A) (s : A -> Prop) : (term1444 A _74891 s) = (term1444 A _74891 s).
Proof. exact (eq_refl (term1444 A _74891 s)). Qed.
Lemma lem5941419 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term2107 A B s f _74891 _74892) = (term1432 A B s f _74891 _74892).
Proof. exact (MK_COMB (@lem5941416 A _74891 s) (@lem5941415 A B s f _74891 _74892)). Qed.
Lemma lem5941421 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term2034 A B s f _74891 _74892) = (term1432 A B s f _74891 _74892).
Proof. exact (TRANS (@lem5941408 A B s f _74891 _74892) (@lem5941419 A B s f _74891 _74892)). Qed.
Lemma lem5941422 {A B : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1432 A B s f _74891 _74892.
Proof. exact (EQ_MP (@lem5941421 A B s f _74891 _74892) (@lem5941178 A B _74891 _74892 s f h1)). Qed.
Lemma lem5941466 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term1361 A x y.
Proof. exact (proj2 (@lem5940492 A B C op g s f x y h1)). Qed.
Lemma lem5941514 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) (h1 : term1690 A C) : term2109 A C _74897 _74898 _74899 _74900.
Proof. exact (proj1 (@lem5941202 A C _74900 _74898 _74899 _74897 h1)). Qed.
Lemma lem5942000 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) : term2198 A B C op g f s.
Proof. exact (EQ_MP (@lem5939476 A B C op g f s) (@lem5936768 A B C op g f s h1)). Qed.
Lemma lem5942001 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) : term2202 A B C op g f s.
Proof. exact (fun h0 : term2199 A B C op g f s => @lem5942000 A B C op g f s h1). Qed.
Lemma lem5942003 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942004 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2202 A B C op g f s) = (term2198 A B C op g f s).
Proof. exact (@lem5942003 (term2198 A B C op g f s)). Qed.
Lemma lem5942005 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) : term2198 A B C op g f s.
Proof. exact (EQ_MP (@lem5942004 A B C op g f s) (@lem5942001 A B C op g f s h1)). Qed.
Lemma lem5942008 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5942010 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2199 A B C op g f s) = (term2203 A B C op g f s).
Proof. exact (@lem5942008 (term2198 A B C op g f s)). Qed.
Lemma lem5942013 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term2199 A B C op g f s) : term2203 A B C op g f s.
Proof. exact (EQ_MP (@lem5942010 A B C op g f s) (@lem5941354 A B C op g f s h1)). Qed.
Lemma lem5942016 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : False.
Proof. exact (@lem5942013 A B C op g f s h2 (@lem5942005 A B C op g f s h1)). Qed.
Lemma lem5942017 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : term1476.
Proof. exact (fun h0 : ~ False => @lem5942016 A B C op g f s h1 h2). Qed.
Lemma lem5942019 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942020 : term1476 = False.
Proof. exact (@lem5942019 False). Qed.
Lemma lem5942021 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : False.
Proof. exact (EQ_MP (@lem5942020) (@lem5942017 A B C op g f s h1 h2)). Qed.
Lemma lem5942501 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2083 A B C x op g f s.
Proof. exact (proj1 (@lem5940494 A B C op g s f x y h1)). Qed.
Lemma lem5942502 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2110 A B C x op g f s.
Proof. exact (fun h0 : term2111 A B C x op g f s => @lem5942501 A B C op g s f x y h1). Qed.
Lemma lem5942504 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942505 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2110 A B C x op g f s) = (term2083 A B C x op g f s).
Proof. exact (@lem5942504 (term2083 A B C x op g f s)). Qed.
Lemma lem5942506 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2083 A B C x op g f s.
Proof. exact (EQ_MP (@lem5942505 A B C x op g f s) (@lem5942502 A B C op g s f x y h1)). Qed.
Lemma lem5942512 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5942513 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : (term2109 A C _74897 _74898 _74899 _74900) = (term2112 A C _74899 _74897 _74898 _74900).
Proof. exact (@lem5942512 (term1296 A _74899 _74900) (term2048 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942519 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5942520 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : (term2113 A C _74897 _74898 _74899 _74900) = (term2114 A C _74899 _74897 _74898 _74900).
Proof. exact (MK_COMB (@lem5942519) (@lem5942513 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942526 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : (term2112 A C _74899 _74897 _74898 _74900) = (term2112 A C _74899 _74897 _74898 _74900).
Proof. exact (eq_refl (term2112 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942527 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : ((term2109 A C _74897 _74898 _74899 _74900) = (term2112 A C _74899 _74897 _74898 _74900)) = ((term2112 A C _74899 _74897 _74898 _74900) = (term2112 A C _74899 _74897 _74898 _74900)).
Proof. exact (MK_COMB (@lem5942520 A C _74899 _74897 _74898 _74900) (@lem5942526 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942529 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5942530 (x : Prop) : (x = x) = True.
Proof. exact (@lem5942529 Prop x). Qed.
Lemma lem5942531 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : ((term2112 A C _74899 _74897 _74898 _74900) = (term2112 A C _74899 _74897 _74898 _74900)) = True.
Proof. exact (@lem5942530 (term2112 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942532 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : ((term2109 A C _74897 _74898 _74899 _74900) = (term2112 A C _74899 _74897 _74898 _74900)) = True.
Proof. exact (TRANS (@lem5942527 A C _74899 _74897 _74898 _74900) (@lem5942531 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942533 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : True = ((term2109 A C _74897 _74898 _74899 _74900) = (term2112 A C _74899 _74897 _74898 _74900)).
Proof. exact (SYM (@lem5942532 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942534 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : (term2109 A C _74897 _74898 _74899 _74900) = (term2112 A C _74899 _74897 _74898 _74900).
Proof. exact (EQ_MP (@lem5942533 A C _74899 _74897 _74898 _74900) (@lem0)). Qed.
Lemma lem5942535 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) (h1 : term1690 A C) : term2112 A C _74899 _74897 _74898 _74900.
Proof. exact (EQ_MP (@lem5942534 A C _74899 _74897 _74898 _74900) (@lem5941514 A C _74897 _74898 _74899 _74900 h1)). Qed.
Lemma lem5942537 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5942538 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) : (term2112 A C _74899 _74897 _74898 _74900) = (term2115 A C _74897 _74898 _74899 _74900).
Proof. exact (@lem5942537 (term2048 A C _74899 _74897 _74898 _74900) (term1296 A _74899 _74900)). Qed.
Lemma lem5942540 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5942541 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : (term2116 A C _74899 _74897 _74898 _74900) = (term2046 A C _74899 _74897 _74898 _74900).
Proof. exact (@lem5942540 (term2046 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942542 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5942543 {A C : Type'} (_74899 : A) (_74897 : type1400 C) (_74898 : A -> C) (_74900 : A -> Prop) : (term2117 A C _74899 _74897 _74898 _74900) = (term2118 A C _74899 _74897 _74898 _74900).
Proof. exact (MK_COMB (@lem5942542) (@lem5942541 A C _74899 _74897 _74898 _74900)). Qed.
Lemma lem5942544 {A : Type'} (_74899 : A) (_74900 : A -> Prop) : (term1296 A _74899 _74900) = (term1296 A _74899 _74900).
Proof. exact (eq_refl (term1296 A _74899 _74900)). Qed.
Lemma lem5942545 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) : (term2115 A C _74897 _74898 _74899 _74900) = (term2119 A C _74897 _74898 _74899 _74900).
Proof. exact (MK_COMB (@lem5942543 A C _74899 _74897 _74898 _74900) (@lem5942544 A _74899 _74900)). Qed.
Lemma lem5942546 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) : (term2112 A C _74899 _74897 _74898 _74900) = (term2119 A C _74897 _74898 _74899 _74900).
Proof. exact (TRANS (@lem5942538 A C _74897 _74898 _74899 _74900) (@lem5942545 A C _74897 _74898 _74899 _74900)). Qed.
Lemma lem5942549 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74897 _74898 _74899 _74900.
Proof. exact (EQ_MP (@lem5942546 A C _74897 _74898 _74899 _74900) (@lem5942535 A C _74899 _74897 _74898 _74900 h1)). Qed.
Lemma lem5942550 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74897 _74898 _74899 _74900.
Proof. exact (@lem5942549 A C _74897 _74898 _74899 _74900 h1). Qed.
Lemma lem5942551 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (x : A) (s : A -> Prop) (h1 : term1690 A C) : term2120 A B C op g f x s.
Proof. exact (@lem5942550 A C op (term1329 A B C g f) x s h1). Qed.
Lemma lem5942554 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1296 A x s.
Proof. exact (@lem5942551 A B C op g f x s h1 (@lem5942506 A B C op g s f x y h2)). Qed.
Lemma lem5942555 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1436 A x s.
Proof. exact (fun h0 : term1297 A x s => @lem5942554 A B C op g s f x y h1 h2). Qed.
Lemma lem5942557 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942558 {A : Type'} (x : A) (s : A -> Prop) : (term1436 A x s) = (term1296 A x s).
Proof. exact (@lem5942557 (term1296 A x s)). Qed.
Lemma lem5942559 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1296 A x s.
Proof. exact (EQ_MP (@lem5942558 A x s) (@lem5942555 A B C op g s f x y h1 h2)). Qed.
Lemma lem5942561 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2083 A B C y op g f s.
Proof. exact (proj1 (@lem5940495 A B C op g s f x y h1)). Qed.
Lemma lem5942562 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2110 A B C y op g f s.
Proof. exact (fun h0 : term2111 A B C y op g f s => @lem5942561 A B C op g s f x y h1). Qed.
Lemma lem5942564 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942565 {A B C : Type'} (y : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) : (term2110 A B C y op g f s) = (term2083 A B C y op g f s).
Proof. exact (@lem5942564 (term2083 A B C y op g f s)). Qed.
Lemma lem5942566 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term2083 A B C y op g f s.
Proof. exact (EQ_MP (@lem5942565 A B C y op g f s) (@lem5942562 A B C op g s f x y h1)). Qed.
Lemma lem5942568 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74897 _74898 _74899 _74900.
Proof. exact (EQ_MP (@lem5942546 A C _74897 _74898 _74899 _74900) (@lem5942535 A C _74899 _74897 _74898 _74900 h1)). Qed.
Lemma lem5942569 {A C : Type'} (_74897 : type1400 C) (_74898 : A -> C) (_74899 : A) (_74900 : A -> Prop) (h1 : term1690 A C) : term2119 A C _74897 _74898 _74899 _74900.
Proof. exact (@lem5942568 A C _74897 _74898 _74899 _74900 h1). Qed.
Lemma lem5942570 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (y : A) (s : A -> Prop) (h1 : term1690 A C) : term2120 A B C op g f y s.
Proof. exact (@lem5942569 A C op (term1329 A B C g f) y s h1). Qed.
Lemma lem5942573 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1296 A y s.
Proof. exact (@lem5942570 A B C op g f y s h1 (@lem5942566 A B C op g s f x y h2)). Qed.
Lemma lem5942574 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1436 A y s.
Proof. exact (fun h0 : term1297 A y s => @lem5942573 A B C op g s f x y h1 h2). Qed.
Lemma lem5942576 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942577 {A : Type'} (y : A) (s : A -> Prop) : (term1436 A y s) = (term1296 A y s).
Proof. exact (@lem5942576 (term1296 A y s)). Qed.
Lemma lem5942578 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1296 A y s.
Proof. exact (EQ_MP (@lem5942577 A y s) (@lem5942574 A B C op g s f x y h1 h2)). Qed.
Lemma lem5942580 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : (@I (A -> B) f x) = (@I (A -> B) f y).
Proof. exact (proj2 (@lem5940495 A B C op g s f x y h1)). Qed.
Lemma lem5942581 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term1438 A B x f y.
Proof. exact (fun h0 : term1342 A B x f y => @lem5942580 A B C op g s f x y h1). Qed.
Lemma lem5942583 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942584 {A B : Type'} (x : A) (f : A -> B) (y : A) : (term1438 A B x f y) = ((@I (A -> B) f x) = (@I (A -> B) f y)).
Proof. exact (@lem5942583 ((@I (A -> B) f x) = (@I (A -> B) f y))). Qed.
Lemma lem5942585 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : (@I (A -> B) f x) = (@I (A -> B) f y).
Proof. exact (EQ_MP (@lem5942584 A B x f y) (@lem5942581 A B C op g s f x y h1)). Qed.
Lemma lem5942601 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5942602 {A B : Type'} (f : A -> B) (s : A -> Prop) (_74891 : A) (_74892 : A) : (term1408 A B s f _74891 _74892) = (term1439 A B f s _74891 _74892).
Proof. exact (@lem5942601 (term1342 A B _74891 f _74892) (term1297 A _74892 s) (_74891 = _74892)). Qed.
Lemma lem5942618 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5942619 {A : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1440 A s _74891 _74892) = (term1441 A _74891 _74892 s).
Proof. exact (@lem5942618 (_74891 = _74892) (term1297 A _74892 s)). Qed.
Lemma lem5942627 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) : (term1344 A B _74891 f _74892) = (term1344 A B _74891 f _74892).
Proof. exact (eq_refl (term1344 A B _74891 f _74892)). Qed.
Lemma lem5942628 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1439 A B f s _74891 _74892) = (term1442 A B f _74891 _74892 s).
Proof. exact (MK_COMB (@lem5942627 A B _74891 f _74892) (@lem5942619 A _74891 _74892 s)). Qed.
Lemma lem5942632 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5942633 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1442 A B f _74891 _74892 s) = (term1443 A B _74891 f _74892 s).
Proof. exact (@lem5942632 (_74891 = _74892) (term1342 A B _74891 f _74892) (term1297 A _74892 s)). Qed.
Lemma lem5942653 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1439 A B f s _74891 _74892) = (term1443 A B _74891 f _74892 s).
Proof. exact (TRANS (@lem5942628 A B f _74891 _74892 s) (@lem5942633 A B _74891 f _74892 s)). Qed.
Lemma lem5942654 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1408 A B s f _74891 _74892) = (term1443 A B _74891 f _74892 s).
Proof. exact (TRANS (@lem5942602 A B f s _74891 _74892) (@lem5942653 A B _74891 f _74892 s)). Qed.
Lemma lem5942655 {A : Type'} (_74891 : A) (s : A -> Prop) : (term1444 A _74891 s) = (term1444 A _74891 s).
Proof. exact (eq_refl (term1444 A _74891 s)). Qed.
Lemma lem5942656 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1432 A B s f _74891 _74892) = (term1445 A B _74891 f _74892 s).
Proof. exact (MK_COMB (@lem5942655 A _74891 s) (@lem5942654 A B _74891 f _74892 s)). Qed.
Lemma lem5942660 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5942661 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1445 A B _74891 f _74892 s) = (term1446 A B _74891 f _74892 s).
Proof. exact (@lem5942660 (_74891 = _74892) (term1297 A _74891 s) (term1447 A B _74891 f _74892 s)). Qed.
Lemma lem5942677 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5942678 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1448 A B _74891 f _74892 s) = (term1449 A B f _74891 _74892 s).
Proof. exact (@lem5942677 (term1342 A B _74891 f _74892) (term1297 A _74891 s) (term1297 A _74892 s)). Qed.
Lemma lem5942696 {A : Type'} (_74891 : A) (_74892 : A) : (term1450 A _74891 _74892) = (term1450 A _74891 _74892).
Proof. exact (eq_refl (term1450 A _74891 _74892)). Qed.
Lemma lem5942697 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1446 A B _74891 f _74892 s) = (term1451 A B f _74891 _74892 s).
Proof. exact (MK_COMB (@lem5942696 A _74891 _74892) (@lem5942678 A B f _74891 _74892 s)). Qed.
Lemma lem5942708 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1445 A B _74891 f _74892 s) = (term1451 A B f _74891 _74892 s).
Proof. exact (TRANS (@lem5942661 A B _74891 f _74892 s) (@lem5942697 A B f _74891 _74892 s)). Qed.
Lemma lem5942709 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1432 A B s f _74891 _74892) = (term1451 A B f _74891 _74892 s).
Proof. exact (TRANS (@lem5942656 A B _74891 f _74892 s) (@lem5942708 A B f _74891 _74892 s)). Qed.
Lemma lem5942710 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5942711 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1452 A B s f _74891 _74892) = (term1453 A B f _74891 _74892 s).
Proof. exact (MK_COMB (@lem5942710) (@lem5942709 A B f _74891 _74892 s)). Qed.
Lemma lem5942737 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5942738 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1454 A B s _74891 f _74892) = (term1447 A B _74891 f _74892 s).
Proof. exact (@lem5942737 (term1342 A B _74891 f _74892) (term1297 A _74892 s)). Qed.
Lemma lem5942746 {A : Type'} (_74891 : A) (s : A -> Prop) : (term1444 A _74891 s) = (term1444 A _74891 s).
Proof. exact (eq_refl (term1444 A _74891 s)). Qed.
Lemma lem5942747 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) (s : A -> Prop) : (term1455 A B s _74891 f _74892) = (term1448 A B _74891 f _74892 s).
Proof. exact (MK_COMB (@lem5942746 A _74891 s) (@lem5942738 A B _74891 f _74892 s)). Qed.
Lemma lem5942751 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5942752 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1448 A B _74891 f _74892 s) = (term1449 A B f _74891 _74892 s).
Proof. exact (@lem5942751 (term1342 A B _74891 f _74892) (term1297 A _74891 s) (term1297 A _74892 s)). Qed.
Lemma lem5942770 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1455 A B s _74891 f _74892) = (term1449 A B f _74891 _74892 s).
Proof. exact (TRANS (@lem5942747 A B _74891 f _74892 s) (@lem5942752 A B f _74891 _74892 s)). Qed.
Lemma lem5942771 {A : Type'} (_74891 : A) (_74892 : A) : (term1450 A _74891 _74892) = (term1450 A _74891 _74892).
Proof. exact (eq_refl (term1450 A _74891 _74892)). Qed.
Lemma lem5942772 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : (term1456 A B s _74891 f _74892) = (term1451 A B f _74891 _74892 s).
Proof. exact (MK_COMB (@lem5942771 A _74891 _74892) (@lem5942770 A B f _74891 _74892 s)). Qed.
Lemma lem5942783 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : ((term1432 A B s f _74891 _74892) = (term1456 A B s _74891 f _74892)) = ((term1451 A B f _74891 _74892 s) = (term1451 A B f _74891 _74892 s)).
Proof. exact (MK_COMB (@lem5942711 A B f _74891 _74892 s) (@lem5942772 A B f _74891 _74892 s)). Qed.
Lemma lem5942785 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5942786 (x : Prop) : (x = x) = True.
Proof. exact (@lem5942785 Prop x). Qed.
Lemma lem5942787 {A B : Type'} (f : A -> B) (_74891 : A) (_74892 : A) (s : A -> Prop) : ((term1451 A B f _74891 _74892 s) = (term1451 A B f _74891 _74892 s)) = True.
Proof. exact (@lem5942786 (term1451 A B f _74891 _74892 s)). Qed.
Lemma lem5942788 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : ((term1432 A B s f _74891 _74892) = (term1456 A B s _74891 f _74892)) = True.
Proof. exact (TRANS (@lem5942783 A B f _74891 _74892 s) (@lem5942787 A B f _74891 _74892 s)). Qed.
Lemma lem5942789 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : True = ((term1432 A B s f _74891 _74892) = (term1456 A B s _74891 f _74892)).
Proof. exact (SYM (@lem5942788 A B s _74891 f _74892)). Qed.
Lemma lem5942790 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1432 A B s f _74891 _74892) = (term1456 A B s _74891 f _74892).
Proof. exact (EQ_MP (@lem5942789 A B s _74891 f _74892) (@lem0)). Qed.
Lemma lem5942791 {A B : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1456 A B s _74891 f _74892.
Proof. exact (EQ_MP (@lem5942790 A B s _74891 f _74892) (@lem5941422 A B _74891 _74892 s f h1)). Qed.
Lemma lem5942793 (b : Prop) (a : Prop) : (a \/ b) = (term1457 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5942794 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term1456 A B s _74891 f _74892) = (term1458 A B s f _74891 _74892).
Proof. exact (@lem5942793 (term1455 A B s _74891 f _74892) (_74891 = _74892)). Qed.
Lemma lem5942796 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5942797 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1461 A B s _74891 f _74892) = (term1462 A B s _74891 f _74892).
Proof. exact (@lem5942796 (term1297 A _74891 s) (term1454 A B s _74891 f _74892)). Qed.
Lemma lem5942799 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5942800 {A : Type'} (_74891 : A) (s : A -> Prop) : (term1464 A _74891 s) = (term1296 A _74891 s).
Proof. exact (@lem5942799 (term1296 A _74891 s)). Qed.
Lemma lem5942801 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5942802 {A : Type'} (_74891 : A) (s : A -> Prop) : (term1465 A _74891 s) = (term1365 A _74891 s).
Proof. exact (MK_COMB (@lem5942801) (@lem5942800 A _74891 s)). Qed.
Lemma lem5942804 (a : Prop) (b : Prop) : (term1459 a b) = (term1460 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5942805 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1466 A B s _74891 f _74892) = (term1467 A B s _74891 f _74892).
Proof. exact (@lem5942804 (term1297 A _74892 s) (term1342 A B _74891 f _74892)). Qed.
Lemma lem5942807 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5942808 {A : Type'} (_74892 : A) (s : A -> Prop) : (term1464 A _74892 s) = (term1296 A _74892 s).
Proof. exact (@lem5942807 (term1296 A _74892 s)). Qed.
Lemma lem5942809 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5942810 {A : Type'} (_74892 : A) (s : A -> Prop) : (term1465 A _74892 s) = (term1365 A _74892 s).
Proof. exact (MK_COMB (@lem5942809) (@lem5942808 A _74892 s)). Qed.
Lemma lem5942812 (a : Prop) : (term1463 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5942813 {A B : Type'} (_74891 : A) (f : A -> B) (_74892 : A) : (term1468 A B _74891 f _74892) = ((@I (A -> B) f _74891) = (@I (A -> B) f _74892)).
Proof. exact (@lem5942812 ((@I (A -> B) f _74891) = (@I (A -> B) f _74892))). Qed.
Lemma lem5942814 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1467 A B s _74891 f _74892) = (term1469 A B s _74891 f _74892).
Proof. exact (MK_COMB (@lem5942810 A _74892 s) (@lem5942813 A B _74891 f _74892)). Qed.
Lemma lem5942815 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1466 A B s _74891 f _74892) = (term1469 A B s _74891 f _74892).
Proof. exact (TRANS (@lem5942805 A B s _74891 f _74892) (@lem5942814 A B s _74891 f _74892)). Qed.
Lemma lem5942816 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1462 A B s _74891 f _74892) = (term1470 A B s _74891 f _74892).
Proof. exact (MK_COMB (@lem5942802 A _74891 s) (@lem5942815 A B s _74891 f _74892)). Qed.
Lemma lem5942817 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1461 A B s _74891 f _74892) = (term1470 A B s _74891 f _74892).
Proof. exact (TRANS (@lem5942797 A B s _74891 f _74892) (@lem5942816 A B s _74891 f _74892)). Qed.
Lemma lem5942818 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5942819 {A B : Type'} (s : A -> Prop) (_74891 : A) (f : A -> B) (_74892 : A) : (term1471 A B s _74891 f _74892) = (term1472 A B s _74891 f _74892).
Proof. exact (MK_COMB (@lem5942818) (@lem5942817 A B s _74891 f _74892)). Qed.
Lemma lem5942820 {A : Type'} (_74891 : A) (_74892 : A) : (_74891 = _74892) = (_74891 = _74892).
Proof. exact (eq_refl (_74891 = _74892)). Qed.
Lemma lem5942821 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term1458 A B s f _74891 _74892) = (term1473 A B s f _74891 _74892).
Proof. exact (MK_COMB (@lem5942819 A B s _74891 f _74892) (@lem5942820 A _74891 _74892)). Qed.
Lemma lem5942822 {A B : Type'} (s : A -> Prop) (f : A -> B) (_74891 : A) (_74892 : A) : (term1456 A B s _74891 f _74892) = (term1473 A B s f _74891 _74892).
Proof. exact (TRANS (@lem5942794 A B s f _74891 _74892) (@lem5942821 A B s f _74891 _74892)). Qed.
Lemma lem5942824 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1469 A B s x f y.
Proof. exact (conj (@lem5942578 A B C op g s f x y h1 h2) (@lem5942585 A B C op g s f x y h2)). Qed.
Lemma lem5942825 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term1690 A C) (h2 : term2091 A B C op g s f x y) : term1470 A B s x f y.
Proof. exact (conj (@lem5942559 A B C op g s f x y h1 h2) (@lem5942824 A B C op g s f x y h1 h2)). Qed.
Lemma lem5942827 {A B : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1473 A B s f _74891 _74892.
Proof. exact (EQ_MP (@lem5942822 A B s f _74891 _74892) (@lem5942791 A B _74891 _74892 s f h1)). Qed.
Lemma lem5942828 {A B : Type'} (_74891 : A) (_74892 : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1473 A B s f _74891 _74892.
Proof. exact (@lem5942827 A B _74891 _74892 s f h1). Qed.
Lemma lem5942829 {A B : Type'} (x : A) (y : A) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term1473 A B s f x y.
Proof. exact (@lem5942828 A B x y s f h1). Qed.
Lemma lem5942832 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2091 A B C op g s f x y) : x = y.
Proof. exact (@lem5942829 A B x y s f h1 (@lem5942825 A B C op g s f x y h2 h3)). Qed.
Lemma lem5942833 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2091 A B C op g s f x y) : term1474 A x y.
Proof. exact (fun h0 : term1361 A x y => @lem5942832 A B C op g s f x y h1 h2 h3). Qed.
Lemma lem5942835 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942836 {A : Type'} (x : A) (y : A) : (term1474 A x y) = (x = y).
Proof. exact (@lem5942835 (x = y)). Qed.
Lemma lem5942837 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2091 A B C op g s f x y) : x = y.
Proof. exact (EQ_MP (@lem5942836 A x y) (@lem5942833 A B C op g s f x y h1 h2 h3)). Qed.
Lemma lem5942840 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5942842 {A : Type'} (x : A) (y : A) : (term1361 A x y) = (term1475 A x y).
Proof. exact (@lem5942840 (x = y)). Qed.
Lemma lem5942845 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term2091 A B C op g s f x y) : term1475 A x y.
Proof. exact (EQ_MP (@lem5942842 A x y) (@lem5941466 A B C op g s f x y h1)). Qed.
Lemma lem5942848 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2091 A B C op g s f x y) : False.
Proof. exact (@lem5942845 A B C op g s f x y h3 (@lem5942837 A B C op g s f x y h1 h2 h3)). Qed.
Lemma lem5942849 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2091 A B C op g s f x y) : term1476.
Proof. exact (fun h0 : ~ False => @lem5942848 A B C op g s f x y h1 h2 h3). Qed.
Lemma lem5942851 (p : Prop) : (term1437 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5942852 : term1476 = False.
Proof. exact (@lem5942851 False). Qed.
Lemma lem5942853 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2091 A B C op g s f x y) : False.
Proof. exact (EQ_MP (@lem5942852) (@lem5942849 A B C op g s f x y h1 h2 h3)). Qed.
Lemma lem5942854 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : (term2199 A B C op g f s) = False.
Proof. exact (prop_ext (fun h3 : term2199 A B C op g f s => @lem5942021 A B C op g f s h1 h2) (fun h3 : False => @lem5941354 A B C op g f s h2)). Qed.
Lemma lem5942855 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : False.
Proof. exact (EQ_MP (@lem5942854 A B C op g f s h1 h2) (@lem5941354 A B C op g f s h2)). Qed.
Lemma lem5942856 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : (term2199 A B C op g f s) = False.
Proof. exact (prop_ext (fun h3 : term2199 A B C op g f s => @lem5942855 A B C op g f s h1 h2) (fun h3 : False => @lem5940778 A B C op g f s h2)). Qed.
Lemma lem5942857 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : False.
Proof. exact (EQ_MP (@lem5942856 A B C op g f s h1 h2) (@lem5940778 A B C op g f s h2)). Qed.
Lemma lem5942858 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : (term2199 A B C op g f s) = False.
Proof. exact (prop_ext (fun h3 : term2199 A B C op g f s => @lem5942857 A B C op g f s h1 h2) (fun h3 : False => @lem5940778 A B C op g f s h2)). Qed.
Lemma lem5942859 {A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term1665 A B C op g f s) (h2 : term2199 A B C op g f s) : False.
Proof. exact (EQ_MP (@lem5942858 A B C op g f s h1 h2) (@lem5940778 A B C op g f s h2)). Qed.
Lemma lem5942860 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (x : A) (y : A) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1665 A B C op g f s) (h4 : term2191 A B C op g s f x y) : False.
Proof. exact (or_elim (@lem5940482 A B C op g s f x y h4) (fun h0 : term2199 A B C op g f s => @lem5942859 A B C op g f s h3 h0) (fun h0 : term2091 A B C op g s f x y => @lem5942853 A B C op g s f x y h1 h2 h0)). Qed.
Lemma lem5942861 {A B C : Type'} (x : A) (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term2194 A B C op g s f x) (h4 : term1665 A B C op g f s) : False.
Proof. exact (ex_elim (@lem5939338 A B C op g s f x h3) (fun y : A => fun h0 : term2193 A B C op g s f x y => @lem5942860 A B C op g s f x y h1 h2 h4 h0)). Qed.
Lemma lem5942862 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1665 A B C op g f s) (h4 : term2131 A B C op g s f) : False.
Proof. exact (ex_elim (@lem5936909 A B C op g s f h4) (fun x : A => fun h0 : term2195 A B C op g s f x => @lem5942861 A B C x op g f s h1 h2 h0 h3)). Qed.
Lemma lem5942863 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1665 A B C op g f s) (h4 : term2131 A B C op g s f) : (term1665 A B C op g f s) = False.
Proof. exact (prop_ext (fun h5 : term1665 A B C op g f s => @lem5942862 A B C op g s f h1 h2 h3 h4) (fun h5 : False => @lem5936768 A B C op g f s h3)). Qed.
Lemma lem5942864 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1690 A C) (h3 : term1665 A B C op g f s) (h4 : term2131 A B C op g s f) : False.
Proof. exact (EQ_MP (@lem5942863 A B C op g s f h1 h2 h3 h4) (@lem5936768 A B C op g f s h3)). Qed.
Lemma lem5942865 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : term2131 A B C op g s f) : term1695 A C.
Proof. exact (fun h0 : term1690 A C => @lem5942864 A B C op g s f h1 h0 h2 h3). Qed.
Lemma lem5942866 {A C : Type'} : (term1695 A C) = (term1696 A C).
Proof. exact (@lem69 (term1690 A C)). Qed.
Lemma lem5942867 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : term2131 A B C op g s f) : term1696 A C.
Proof. exact (EQ_MP (@lem5942866 A C) (@lem5942865 A B C op g s f h1 h2 h3)). Qed.
Lemma lem5942868 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : term2131 A B C op g s f) : term2137 _119829 A B C.
Proof. exact (fun h0 : term1690 _119829 B => @lem5942867 A B C op g s f h1 h2 h3). Qed.
Lemma lem5942869 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : term2131 A B C op g s f) : term2139 _119829 A B C.
Proof. exact (fun h0 : term1690 _119829 A => @lem5942868 _119829 A B C op g s f h1 h2 h3). Qed.
Lemma lem5942870 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : term2131 A B C op g s f) : term2141 _119826 _119829 A B C.
Proof. exact (fun h0 : term1689 _119826 A => @lem5942869 _119829 A B C op g s f h1 h2 h3). Qed.
Lemma lem5942871 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (f : A -> B) (s : A -> Prop) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) : term2144 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term2131 A B C op g s f => @lem5942870 _119826 _119829 A B C op g s f h1 h2 h0). Qed.
Lemma lem5942872 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) : term2146 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term1665 A B C op g f s => @lem5942871 _119826 _119829 A B C op g f s h1 h0). Qed.
Lemma lem5942873 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2148 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : term12 A B s f => @lem5942872 _119826 _119829 A B C op g s f h0). Qed.
Lemma lem5942874 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2149 _119826 _119829 A B C op g s f.
Proof. exact (fun h0 : @monoidal C op => @lem5942873 _119826 _119829 A B C op g s f). Qed.
Lemma lem5942879 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : term2153 _119826 _119829 A B C g s f.
Proof. exact (fun op : type1400 C => @lem5942874 _119826 _119829 A B C op g s f). Qed.
Lemma lem5942884 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : term2157 _119826 _119829 A B C s f.
Proof. exact (fun g : B -> C => @lem5942879 _119826 _119829 A B C g s f). Qed.
Lemma lem5942889 {_119826 _119829 A B C : Type'} (f : A -> B) : term2161 _119826 _119829 A B C f.
Proof. exact (fun s : A -> Prop => @lem5942884 _119826 _119829 A B C s f). Qed.
Lemma lem5942894 {_119826 _119829 A B C : Type'} : term2165 _119826 _119829 A B C.
Proof. exact (fun f : A -> B => @lem5942889 _119826 _119829 A B C f). Qed.
Lemma lem5942895 {_119826 _119829 A B C : Type'} : term2164 _119826 _119829 A B C.
Proof. exact (EQ_MP (@lem5936666 _119826 _119829 A B C) (@lem5942894 _119826 _119829 A B C)). Qed.
Lemma lem5942896 {_119826 _119829 A B C : Type'} (f : A -> B) : term2204 _119826 _119829 A B C f.
Proof. exact (@lem5942895 _119826 _119829 A B C f). Qed.
Lemma lem5942897 {_119826 _119829 A B C : Type'} (f : A -> B) : (term2204 _119826 _119829 A B C f) = (term2160 _119826 _119829 A B C f).
Proof. exact (eq_refl (term2204 _119826 _119829 A B C f)). Qed.
Lemma lem5942898 {_119826 _119829 A B C : Type'} (f : A -> B) : term2160 _119826 _119829 A B C f.
Proof. exact (EQ_MP (@lem5942897 _119826 _119829 A B C f) (@lem5942896 _119826 _119829 A B C f)). Qed.
Lemma lem5942899 {_119826 _119829 A B C : Type'} (f : A -> B) (s : A -> Prop) : term2205 _119826 _119829 A B C f s.
Proof. exact (@lem5942898 _119826 _119829 A B C f s). Qed.
Lemma lem5942900 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : (term2205 _119826 _119829 A B C f s) = (term2156 _119826 _119829 A B C s f).
Proof. exact (eq_refl (term2205 _119826 _119829 A B C f s)). Qed.
Lemma lem5942901 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) : term2156 _119826 _119829 A B C s f.
Proof. exact (EQ_MP (@lem5942900 _119826 _119829 A B C s f) (@lem5942899 _119826 _119829 A B C f s)). Qed.
Lemma lem5942902 {_119826 _119829 A B C : Type'} (s : A -> Prop) (f : A -> B) (g : B -> C) : term2206 _119826 _119829 A B C s f g.
Proof. exact (@lem5942901 _119826 _119829 A B C s f g). Qed.
Lemma lem5942903 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2206 _119826 _119829 A B C s f g) = (term2152 _119826 _119829 A B C g s f).
Proof. exact (eq_refl (term2206 _119826 _119829 A B C s f g)). Qed.
Lemma lem5942904 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) : term2152 _119826 _119829 A B C g s f.
Proof. exact (EQ_MP (@lem5942903 _119826 _119829 A B C g s f) (@lem5942902 _119826 _119829 A B C s f g)). Qed.
Lemma lem5942905 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) (op : type1400 C) : term2207 _119826 _119829 A B C g s f op.
Proof. exact (@lem5942904 _119826 _119829 A B C g s f op). Qed.
Lemma lem5942906 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : (term2207 _119826 _119829 A B C g s f op) = (term2132 _119826 _119829 A B C op g s f).
Proof. exact (eq_refl (term2207 _119826 _119829 A B C g s f op)). Qed.
Lemma lem5942907 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2132 _119826 _119829 A B C op g s f.
Proof. exact (EQ_MP (@lem5942906 _119826 _119829 A B C op g s f) (@lem5942905 _119826 _119829 A B C g s f op)). Qed.
Lemma lem5942909 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) : term2132 _119826 _119829 A B C op g s f.
Proof. exact (@lem5936114 _119826 _119829 A B C op g s f (@lem5942907 _119826 _119829 A B C op g s f)). Qed.
Lemma lem5942910 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term2147 _119826 _119829 A B C op g s f.
Proof. exact (@lem5942909 _119826 _119829 A B C op g s f (@lem5826509 C op h1)). Qed.
Lemma lem5942911 {_119826 _119829 A B C : Type'} (g : B -> C) (s : A -> Prop) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : @monoidal C op) : term2145 _119826 _119829 A B C op g s f.
Proof. exact (@lem5942910 _119826 _119829 A B C g s f op h2 (@lem5928378 A B s f h1)). Qed.
Lemma lem5942912 {_119826 _119829 A B C : Type'} (g : B -> C) (f : A -> B) (s : A -> Prop) (op : type1400 C) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) : term2143 _119826 _119829 A B C op g s f.
Proof. exact (@lem5942911 _119826 _119829 A B C g s f op h1 h3 (@lem5928439 A B C op g f s h2)). Qed.
Lemma lem5942913 {_119826 _119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : term2140 _119826 _119829 A B C.
Proof. exact (@lem5942912 _119826 _119829 A B C g f s op h1 h2 h3 (@lem5936094 A B C op g s f h4)). Qed.
Lemma lem5942914 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : term2138 _119829 A B C.
Proof. exact (@lem5942913 Prop _119829 A B C op g s f h1 h2 h3 h4 (@lem5936095 Prop A)). Qed.
Lemma lem5942915 {_119829 A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : term2136 _119829 A B C.
Proof. exact (@lem5942914 _119829 A B C op g s f h1 h2 h3 h4 (@lem5936098 _119829 A)). Qed.
Lemma lem5942916 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : term1695 A C.
Proof. exact (@lem5942915 Prop A B C op g s f h1 h2 h3 h4 (@lem5936097 Prop B)). Qed.
Lemma lem5942917 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : False.
Proof. exact (@lem5942916 A B C op g s f h1 h2 h3 h4 (@lem5936096 A C)). Qed.
Lemma lem5942918 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : (term2131 A B C op g s f) = False.
Proof. exact (prop_ext (fun h5 : term2131 A B C op g s f => @lem5942917 A B C op g s f h1 h2 h3 h4) (fun h5 : False => @lem5936094 A B C op g s f h4)). Qed.
Lemma lem5942919 {A B C : Type'} (op : type1400 C) (g : B -> C) (s : A -> Prop) (f : A -> B) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) (h4 : term2131 A B C op g s f) : False.
Proof. exact (EQ_MP (@lem5942918 A B C op g s f h1 h2 h3 h4) (@lem5936094 A B C op g s f h4)). Qed.
Lemma lem5942920 {A B C : Type'} (g : B -> C) (f : A -> B) (s : A -> Prop) (op : type1400 C) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) : term2130 A B C op g s f.
Proof. exact (fun h0 : term2131 A B C op g s f => @lem5942919 A B C op g s f h1 h2 h3 h0). Qed.
Lemma lem5942921 {A B C : Type'} (g : B -> C) (f : A -> B) (s : A -> Prop) (op : type1400 C) (h1 : term12 A B s f) (h2 : term1665 A B C op g f s) (h3 : @monoidal C op) : term2129 A B C op g s f.
Proof. exact (EQ_MP (@lem5936093 A B C op g s f) (@lem5942920 A B C g f s op h1 h2 h3)). Qed.
Lemma lem5942922 {A B C : Type'} (g : B -> C) (f : A -> B) (s : A -> Prop) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1665 A B C op g f s) (h4 : @monoidal C op) : (term1676 A B C op f s g) = (term1666 A B C op s g f).
Proof. exact (@lem5936089 A B C s op g f h2 (@lem5942921 A B C g f s op h1 h3 h4)). Qed.
Lemma lem5942923 {A B C : Type'} (g : B -> C) (f : A -> B) (s : A -> Prop) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1665 A B C op g f s) (h4 : @monoidal C op) : (term1665 A B C op g f s) = ((term1676 A B C op f s g) = (term1666 A B C op s g f)).
Proof. exact (prop_ext (fun h5 : term1665 A B C op g f s => @lem5942922 A B C g f s op h1 h2 h3 h4) (fun h5 : (term1676 A B C op f s g) = (term1666 A B C op s g f) => @lem5928439 A B C op g f s h3)). Qed.
Lemma lem5942924 {A B C : Type'} (g : B -> C) (f : A -> B) (s : A -> Prop) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : term1665 A B C op g f s) (h4 : @monoidal C op) : (term1676 A B C op f s g) = (term1666 A B C op s g f).
Proof. exact (EQ_MP (@lem5942923 A B C g f s op h1 h2 h3 h4) (@lem5928439 A B C op g f s h3)). Qed.
Lemma lem5942925 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : term1681 A B C op s g f.
Proof. exact (fun h0 : term1665 A B C op g f s => @lem5942924 A B C g f s op h1 h2 h0 h3). Qed.
Lemma lem5942926 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : term1683 A B C op s g f.
Proof. exact (conj (@lem5936042 A B C s g f op h1 h2 h3) (@lem5942925 A B C s g f op h1 h2 h3)). Qed.
Lemma lem5942927 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : term1682 A B C op s g f.
Proof. exact (EQ_MP (@lem5928438 A B C op s g f) (@lem5942926 A B C s g f op h1 h2 h3)). Qed.
Lemma lem5942928 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : (term1659 A B C f s g op) = (term1661 A B C s g f op).
Proof. exact (@lem5928396 A B C s g f op (@lem5942927 A B C s g f op h1 h2 h3)). Qed.
Lemma lem5942929 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term12 A B s f) (h2 : term116 A B C op g f) (h3 : @monoidal C op) : (term121 A B C op f s g) = (term122 A B C op s g f).
Proof. exact (EQ_MP (@lem5928392 A B C op s g f) (@lem5942928 A B C s g f op h1 h2 h3)). Qed.
Lemma lem5942930 {A B C : Type'} (s : A -> Prop) (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term116 A B C op g f) (h2 : @monoidal C op) : term139 A B C op s g f.
Proof. exact (fun h0 : term12 A B s f => @lem5942929 A B C s g f op h0 h1 h2). Qed.
Lemma lem5942935 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term116 A B C op g f) (h2 : @monoidal C op) : term2208 A B C op g f.
Proof. exact (fun s : A -> Prop => @lem5942930 A B C s g f op h1 h2). Qed.
Lemma lem5942936 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term116 A B C op g f) (h2 : @monoidal C op) : (term116 A B C op g f) = (term2208 A B C op g f).
Proof. exact (prop_ext (fun h3 : term116 A B C op g f => @lem5942935 A B C g f op h1 h2) (fun h3 : term2208 A B C op g f => @lem5826510 A B C op g f h1)). Qed.
Lemma lem5942937 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : term116 A B C op g f) (h2 : @monoidal C op) : term2208 A B C op g f.
Proof. exact (EQ_MP (@lem5942936 A B C g f op h1 h2) (@lem5826510 A B C op g f h1)). Qed.
Lemma lem5942938 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : (term116 A B C op g f) = (term2208 A B C op g f).
Proof. exact (prop_ext (fun h2 : term116 A B C op g f => @lem5942937 A B C g f op h2 h1) (fun h2 : term2208 A B C op g f => @lem5928377 A B C g f op h1)). Qed.
Lemma lem5942939 {A B C : Type'} (g : B -> C) (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term2208 A B C op g f.
Proof. exact (EQ_MP (@lem5942938 A B C g f op h1) (@lem5928377 A B C g f op h1)). Qed.
Lemma lem5942944 {A B C : Type'} (f : A -> B) (op : type1400 C) (h1 : @monoidal C op) : term2209 A B C op f.
Proof. exact (fun g : B -> C => @lem5942939 A B C g f op h1). Qed.
Lemma lem5942949 {A B C : Type'} (op : type1400 C) (h1 : @monoidal C op) : term2210 A B C op.
Proof. exact (fun f : A -> B => @lem5942944 A B C f op h1). Qed.
Lemma lem5942950 {A B C : Type'} (op : type1400 C) : term2211 A B C op.
Proof. exact (fun h0 : @monoidal C op => @lem5942949 A B C op h0). Qed.
Lemma lem5942955 {A B C : Type'} : term2212 A B C.
Proof. exact (fun op : type1400 C => @lem5942950 A B C op). Qed.
