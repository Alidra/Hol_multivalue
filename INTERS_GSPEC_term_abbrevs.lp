require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term1 a0 a1 a2 a3 a4 a5 a6 a7 a8 ≔ (∧ (∀ (λ y0 : El (fun a1 bool), (∀ (λ y1 : El (type1470 a0 a1), (= ((@INTERS a0) ((@GSPEC (fun a0 bool)) (λ y2 : El (fun a0 bool), (∃ (λ y3 : El a1, ((@SETSPEC (fun a0 bool)) y2 (y0 y3) (y1 y3))))))) ((@GSPEC a0) (λ y2 : El a0, (∃ (λ y3 : El a0, ((@SETSPEC a0) y2 (∀ (λ y4 : El a1, (⇒ (y0 y4) ((@IN a0) y3 (y1 y4))))) y3)))))))))) (∧ (∀ (λ y0 : El (type1470 a3 a4), (∀ (λ y1 : El (type1517 a2 a3 a4), (= ((@INTERS a2) ((@GSPEC (fun a2 bool)) (λ y2 : El (fun a2 bool), (∃ (λ y3 : El a4, (∃ (λ y4 : El a3, ((@SETSPEC (fun a2 bool)) y2 (y0 y3 y4) (y1 y3 y4))))))))) ((@GSPEC a2) (λ y2 : El a2, (∃ (λ y3 : El a2, ((@SETSPEC a2) y2 (∀ (λ y4 : El a4, (∀ (λ y5 : El a3, (⇒ (y0 y4 y5) ((@IN a2) y3 (y1 y4 y5))))))) y3)))))))))) (∀ (λ y0 : El (type1517 a6 a7 a8), (∀ (λ y1 : El (type1524 a5 a6 a7 a8), (= ((@INTERS a5) ((@GSPEC (fun a5 bool)) (λ y2 : El (fun a5 bool), (∃ (λ y3 : El a8, (∃ (λ y4 : El a7, (∃ (λ y5 : El a6, ((@SETSPEC (fun a5 bool)) y2 (y0 y3 y4 y5) (y1 y3 y4 y5))))))))))) ((@GSPEC a5) (λ y2 : El a5, (∃ (λ y3 : El a5, ((@SETSPEC a5) y2 (∀ (λ y4 : El a8, (∀ (λ y5 : El a7, (∀ (λ y6 : El a6, (⇒ (y0 y4 y5 y6) ((@IN a5) y3 (y1 y4 y5 y6))))))))) y3))))))))))));
symbol term0 a0 a1 ≔ (∀ (λ y0 : El (fun a1 bool), (∀ (λ y1 : El (type1470 a0 a1), (= ((@INTERS a0) ((@GSPEC (fun a0 bool)) (λ y2 : El (fun a0 bool), (∃ (λ y3 : El a1, ((@SETSPEC (fun a0 bool)) y2 (y0 y3) (y1 y3))))))) ((@GSPEC a0) (λ y2 : El a0, (∃ (λ y3 : El a0, ((@SETSPEC a0) y2 (∀ (λ y4 : El a1, (⇒ (y0 y4) ((@IN a0) y3 (y1 y4))))) y3))))))))));
