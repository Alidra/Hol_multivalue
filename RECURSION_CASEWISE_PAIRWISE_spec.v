Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Axiom lem8440648 : forall {_146879 _146895 _146899 : Type'}, forall clauses : list (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)), ((exists lt2 : _146879 -> _146879 -> Prop, (@WF _146879 lt2) /\ (@List.Forall (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) (@GABS ((prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop) (fun f : (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop => forall s : _146899 -> _146879, forall t : (_146879 -> _146895) -> _146899 -> _146895, @GEQ Prop (f (@pair (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895) s t)) (@tailadmissible _146879 _146895 _146899 lt2 (fun f' : _146879 -> _146895 => fun a : _146899 => True) s t))) clauses)) /\ ((@List.Forall (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) (@GABS ((prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop) (fun f : (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop => forall s : _146899 -> _146879, forall t : (_146879 -> _146895) -> _146899 -> _146895, @GEQ Prop (f (@pair (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895) s t)) (forall f' : _146879 -> _146895, forall x : _146899, forall y : _146899, ((s x) = (s y)) -> (t f' x) = (t f' y)))) clauses) /\ (@List.ForallOrdPairs (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) (@GABS ((prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop) (fun f : (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop => forall s : _146899 -> _146879, forall t : (_146879 -> _146895) -> _146899 -> _146895, @GEQ ((prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop) (f (@pair (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895) s t)) (@GABS ((prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop) (fun f' : (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop => forall s' : _146899 -> _146879, forall t' : (_146879 -> _146895) -> _146899 -> _146895, @GEQ Prop (f' (@pair (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895) s' t')) (forall f'' : _146879 -> _146895, forall x : _146899, forall y : _146899, ((s x) = (s' y)) -> (t f'' x) = (t' f'' y)))))) clauses))) -> exists f : _146879 -> _146895, @List.Forall (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) (@GABS ((prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop) (fun f' : (prod (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895)) -> Prop => forall s : _146899 -> _146879, forall t : (_146879 -> _146895) -> _146899 -> _146895, @GEQ Prop (f' (@pair (_146899 -> _146879) ((_146879 -> _146895) -> _146899 -> _146895) s t)) (forall x : _146899, (f (s x)) = (t f x)))) clauses.
