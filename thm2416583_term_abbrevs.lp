require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term3 (x0: El int) (x1: El int) (x2: El int) (x3: El num) ≔ (∧ (= (int_mul x2 (int_add x0 x1)) (int_add (int_mul x2 x0) (int_mul x2 x1))) (= (int_pow x2 (SUC x3)) (int_mul x2 (int_pow x2 x3))));
symbol term1 (x0: El int) (x1: El int) (x2: El int) (x3: El num) ≔ (∧ (= (int_pow x2 (NUMERAL _0)) (int_of_num (NUMERAL (BIT1 _0)))) (∧ (= (int_pow x2 (NUMERAL (BIT1 _0))) x2) (∧ (= (int_mul x2 (int_add x0 x1)) (int_add (int_mul x2 x0) (int_mul x2 x1))) (= (int_pow x2 (SUC x3)) (int_mul x2 (int_pow x2 x3))))));
symbol term4 (x0: El int) (x1: El int) (x2: El int) ≔ (int_mul x0 (int_add x1 x2));
symbol term2 (x0: El int) (x1: El int) (x2: El int) (x3: El num) ≔ (∧ (= (int_pow x2 (NUMERAL (BIT1 _0))) x2) (∧ (= (int_mul x2 (int_add x0 x1)) (int_add (int_mul x2 x0) (int_mul x2 x1))) (= (int_pow x2 (SUC x3)) (int_mul x2 (int_pow x2 x3)))));
symbol term0 (x0: El num) (x1: El int) (x2: El int) (x3: El int) (x4: El num) ≔ (∧ (= (int_pow (int_pow x3 x0) x4) (int_pow x3 (* x0 x4))) (∧ (= (int_pow x3 (NUMERAL _0)) (int_of_num (NUMERAL (BIT1 _0)))) (∧ (= (int_pow x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (int_mul x3 (int_add x1 x2)) (int_add (int_mul x3 x1) (int_mul x3 x2))) (= (int_pow x3 (SUC x4)) (int_mul x3 (int_pow x3 x4)))))));
symbol term5 (x0: El int) (x1: El int) (x2: El int) ≔ (int_add (int_mul x1 x0) (int_mul x1 x2));
