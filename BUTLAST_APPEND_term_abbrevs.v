Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term179 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := ((~ False) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = (@cons a0 x0 (@List.app a0 x1 (@List.removelast a0 x2)))) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) False (@nil a0) (@cons a0 x0 (@List.app a0 x1 (@List.removelast a0 x2)))).
Definition term138 (a0 : Type') := forall y0 : a0, forall y1 : list a0, forall y2 : list a0, (@List.app a0 (@cons a0 y0 y1) y2) = (@cons a0 y0 (@List.app a0 y1 y2)).
Definition term38 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0, forall y2 : a0, (y0 (@COND a0 x0 y1 y2)) = (@COND a1 x0 (y0 y1) (y0 y2))) x1.
Definition term69 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) := ((~ (x1 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = x2) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop (x1 = (@nil a0)) True x2).
Definition term105 (a0 : Type') := (forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) y0)) = (@List.app a0 (@nil a0) (@List.removelast a0 y0))) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) -> forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@List.app a0 (@cons a0 y0 y1) (@List.removelast a0 y2))).
Definition term18 (x0 : Prop) := imp (~ x0).
Definition term173 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : list a0) (x4 : list a0) := (False -> (@nil a0) = x3) -> ((~ False) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = x4) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) False x3 x4).
Definition term8 (x0 : Prop) := ~ (~ x0).
Definition term144 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @List.app a0 (@cons a0 x0 x1) x2.
Definition term172 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : list a0) (x4 : list a0) := (((@List.app a0 x1 x2) = (@nil a0)) = False) -> (False -> (@nil a0) = x3) -> ((~ False) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = x4) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) False x3 x4).
Definition term142 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a0, (@List.app a0 (@cons a0 x0 x1) y0) = (@cons a0 x0 (@List.app a0 x1 y0)).
Definition term106 (a0 : Type') := imp (((fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) (@cons a0 y0 y1))).
Definition term32 (x0 : Prop) := forall y0 : Prop, x0.
Definition term31 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term137 (a0 : Type') (x0 : list a0) (x1 : list a0) := (x0 = (@nil a0)) /\ (x1 = (@nil a0)).
Definition term158 (a0 : Type') (x0 : a0) (x1 : list a0) := @List.removelast a0 (@cons a0 x0 x1).
Definition term156 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) -> (x0 = (@nil a0)) = False.
Definition term14 := fun y0 : Prop => forall y1 : Prop, (@COND Prop y1 True y0) = ((~ y1) -> y0).
Definition term85 (a0 : Type') := (fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@nil a0).
Definition term87 (a0 : Type') := and ((fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@nil a0)).
Definition term0 (x0 : Prop) := (~ x0) -> False.
Definition term84 (a0 : Type') := (((fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) (@cons a0 y0 y1))) -> forall y0 : list a0, (fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) y0.
Definition term99 (a0 : Type') (x0 : a0) := forall y0 : list a0, (forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) -> forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 y0) y1)) = (@List.app a0 (@cons a0 x0 y0) (@List.removelast a0 y1)).
Definition term83 (a0 : Type') (x0 : type1143 a0) := ((x0 (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (x0 y1) -> x0 (@cons a0 y0 y1))) -> forall y0 : list a0, x0 y0.
Definition term11 (x0 : Prop) := forall y0 : Prop, (~ ((@COND Prop y0 True x0) = ((~ y0) -> x0))) -> False.
Definition term65 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) := ((x1 = (@nil a0)) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = x2) -> ((~ (x1 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = x3) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop (x1 = (@nil a0)) x2 x3).
Definition term20 (x0 : Prop) (x1 : Prop) := (x0 = True) -> ((@COND Prop x0 True x1) = ((~ x0) -> x1)) = True.
Definition term165 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) := forall y0 : list a0, forall y1 : list a0, (((@List.app a0 x1 x2) = (@nil a0)) = x3) -> (x3 -> (@nil a0) = y0) -> ((~ x3) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = y1) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) x3 y0 y1).
Definition term140 (a0 : Type') (x0 : a0) := forall y0 : list a0, forall y1 : list a0, (@List.app a0 (@cons a0 x0 y0) y1) = (@cons a0 x0 (@List.app a0 y0 y1)).
Definition term82 (a0 : Type') := forall y0 : list a0, forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1)).
Definition term81 (a0 : Type') := forall y0 : list a0, forall y1 : list a0, (@List.removelast a0 (@List.app a0 y0 y1)) = (@COND (list a0) (y1 = (@nil a0)) (@List.removelast a0 y0) (@List.app a0 y0 (@List.removelast a0 y1))).
Definition term182 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @eq (list a0) (@cons a0 x0 (@List.app a0 x1 (@List.removelast a0 x2))).
Definition term64 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) := ((x1 = (@nil a0)) = (x1 = (@nil a0))) -> ((x1 = (@nil a0)) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = x2) -> ((~ (x1 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = x3) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop (x1 = (@nil a0)) x2 x3).
Definition term73 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND Prop (x1 = (@nil a0)) True ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))).
Definition term68 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) := ((x1 = (@nil a0)) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = True) -> ((~ (x1 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = x2) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop (x1 = (@nil a0)) True x2).
Definition term7 (x0 : Prop) (x1 : Prop) := ~ (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))).
Definition term53 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) := forall y0 : a0, (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = y0) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 y0).
Definition term41 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : a0) (x2 : a0 -> a1) := forall y0 : a0, (x2 (@COND a0 x0 x1 y0)) = (@COND a1 x0 (x2 x1) (x2 y0)).
Definition term163 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)).
Definition term1 (x0 : Prop) (x1 : Prop) := (~ x0) -> x1.
Definition term128 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0)).
Definition term72 (a0 : Type') (x0 : list a0) (x1 : list a0) := ((~ (x1 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop (x1 = (@nil a0)) True ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))).
Definition term9 (x0 : Prop) := fun y0 : Prop => (~ ((@COND Prop y0 True x0) = ((~ y0) -> x0))) -> False.
Definition term34 (x0 : Prop) (x1 : Prop) := (fun y0 : Prop => (~ ((@COND Prop y0 True x0) = ((~ y0) -> x0))) -> False) x1.
Definition term176 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : list a0) := ((~ False) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = x3) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) False (@nil a0) x3).
Definition term100 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) (@cons a0 y0 y1).
Definition term75 (a0 : Type') (x0 : list a0) := fun y0 : list a0 => (@List.removelast a0 (@List.app a0 x0 y0)) = (@COND (list a0) (y0 = (@nil a0)) (@List.removelast a0 x0) (@List.app a0 x0 (@List.removelast a0 y0))).
Definition term139 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : list a0, forall y2 : list a0, (@List.app a0 (@cons a0 y0 y1) y2) = (@cons a0 y0 (@List.app a0 y1 y2))) x0.
Definition term10 (x0 : Prop) := fun y0 : Prop => (@COND Prop y0 True x0) = ((~ y0) -> x0).
Definition term150 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((~ (x2 = (@nil a0))) = y0) -> (y0 -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = y1) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = (y0 -> y1)) x3.
Definition term60 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((x1 = (@nil a0)) = x2) -> (x2 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = y0) -> ((~ x2) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = y1) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop x2 y0 y1)) x3.
Definition term168 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) (x4 : list a0) (x5 : list a0) := (fun y0 : list a0 => (((@List.app a0 x1 x2) = (@nil a0)) = x3) -> (x3 -> (@nil a0) = x4) -> ((~ x3) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = y0) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) x3 x4 y0)) x5.
Definition term134 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : list a0, ((@List.app a0 y0 y1) = (@nil a0)) = ((y0 = (@nil a0)) /\ (y1 = (@nil a0)))) x0.
Definition term89 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) x0.
Definition term47 (a0 : Type') (x0 : list a0) (x1 : list a0) := @List.removelast a0 (@List.app a0 x0 x1).
Definition term154 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) := ((~ (x2 = (@nil a0))) = (~ (x2 = (@nil a0)))) -> ((~ (x2 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = x3) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = ((~ (x2 = (@nil a0))) -> x3).
Definition term129 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) -> True.
Definition term67 (a0 : Type') (x0 : list a0) (x1 : list a0) := (x0 = (@nil a0)) -> ((@List.removelast a0 (@List.app a0 x1 x0)) = (@List.removelast a0 x1)) = True.
Definition term132 (a0 : Type') := forall y0 : list a0, True.
Definition term153 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) (x4 : Prop) := ((~ (x2 = (@nil a0))) = x3) -> (x3 -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = x4) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = (x3 -> x4).
Definition term160 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))).
Definition term121 (a0 : Type') (x0 : list a0) (x1 : Prop) (x2 : Prop) := (fun y0 : Prop => ((~ (x0 = (@nil a0))) = x1) -> (x1 -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = y0) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = (x1 -> y0)) x2.
Definition term97 (a0 : Type') (x0 : a0) := fun y0 : list a0 => (forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) -> forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 y0) y1)) = (@List.app a0 (@cons a0 x0 y0) (@List.removelast a0 y1)).
Definition term113 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term58 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, forall y2 : Prop, ((x1 = (@nil a0)) = y0) -> (y0 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = y1) -> ((~ y0) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = y2) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop y0 y1 y2)) x2.
Definition term21 (x0 : Prop) (x1 : Prop) := ((x0 = False) -> ((@COND Prop x0 True x1) = ((~ x0) -> x1)) = True) /\ ((x0 = True) -> ((@COND Prop x0 True x1) = ((~ x0) -> x1)) = True).
Definition term125 (a0 : Type') (x0 : list a0) := @eq (list a0) (@List.removelast a0 (@List.app a0 (@nil a0) x0)).
Definition term43 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : Prop) (x2 : a0) (x3 : a0) := x0 (@COND a0 x1 x2 x3).
Definition term109 (a0 : Type') := forall y0 : list a0, (fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) y0.
Definition term170 (a0 : Type') (x0 : list a0) := and (x0 = (@nil a0)).
Definition term112 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => (@List.app a0 (@nil a0) y0) = y0) x0.
Definition term3 (x0 : Prop) (x1 : Prop) := ~ ((@COND Prop x0 True x1) = ((~ x0) -> x1)).
Definition term17 (x0 : Prop) (x1 : Prop) := @eq Prop (@COND Prop x0 True x1).
Definition term25 (x0 : Prop) := (~ x0) \/ True.
Definition term62 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((x1 = (@nil a0)) = x2) -> (x2 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = x3) -> ((~ x2) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = y0) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop x2 x3 y0)) x4.
Definition term110 (a0 : Type') := ((forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) y0)) = (@List.app a0 (@nil a0) (@List.removelast a0 y0))) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) -> forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@List.app a0 (@cons a0 y0 y1) (@List.removelast a0 y2)))) -> forall y0 : list a0, forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1)).
Definition term130 (a0 : Type') := fun y0 : list a0 => (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) y0)) = (@List.app a0 (@nil a0) (@List.removelast a0 y0)).
Definition term135 (a0 : Type') (x0 : list a0) := forall y0 : list a0, ((@List.app a0 x0 y0) = (@nil a0)) = ((x0 = (@nil a0)) /\ (y0 = (@nil a0))).
Definition term23 (x0 : Prop) (x1 : Prop) := (((x1 = False) -> ((@COND Prop x1 True x0) = ((~ x1) -> x0)) = True) /\ ((x1 = True) -> ((@COND Prop x1 True x0) = ((~ x1) -> x0)) = True)) -> ((@COND Prop x1 True x0) = ((~ x1) -> x0)) = (((~ x1) \/ True) /\ (x1 \/ True)).
Definition term44 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : a0) (x2 : a0 -> a1) (x3 : a0) := @COND a1 x0 (x2 x1) (x2 x3).
Definition term4 (x0 : Prop) (x1 : Prop) := ((~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False) -> (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False.
Definition term107 (a0 : Type') := imp ((forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) y0)) = (@List.app a0 (@nil a0) (@List.removelast a0 y0))) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) -> forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@List.app a0 (@cons a0 y0 y1) (@List.removelast a0 y2)))).
Definition term27 := fun y0 : Prop => True.
Definition term19 (x0 : Prop) (x1 : Prop) := (x0 = False) -> ((@COND Prop x0 True x1) = ((~ x0) -> x1)) = True.
Definition term42 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : a0) (x2 : a0 -> a1) (x3 : a0) := (fun y0 : a0 => (x2 (@COND a0 x0 x1 y0)) = (@COND a1 x0 (x2 x1) (x2 y0))) x3.
Definition term98 (a0 : Type') (x0 : a0) := forall y0 : list a0, ((fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) y0) -> (fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) (@cons a0 x0 y0).
Definition term66 (a0 : Type') (x0 : list a0) := @eq (list a0) (@List.removelast a0 x0).
Definition term124 (a0 : Type') (x0 : list a0) (x1 : Prop) := ((~ (x0 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = x1) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = ((~ (x0 = (@nil a0))) -> x1).
Definition term77 (a0 : Type') (x0 : list a0) := forall y0 : list a0, (@List.removelast a0 (@List.app a0 x0 y0)) = (@COND (list a0) (y0 = (@nil a0)) (@List.removelast a0 x0) (@List.app a0 x0 (@List.removelast a0 y0))).
Definition term108 (a0 : Type') := fun y0 : list a0 => (fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) y0.
Definition term167 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) (x4 : list a0) := forall y0 : list a0, (((@List.app a0 x1 x2) = (@nil a0)) = x3) -> (x3 -> (@nil a0) = x4) -> ((~ x3) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = y0) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) x3 x4 y0).
Definition term90 (a0 : Type') (x0 : list a0) := imp ((fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) x0).
Definition term111 (a0 : Type') := forall y0 : list a0, (@List.app a0 (@nil a0) y0) = y0.
Definition term13 := fun y0 : Prop => forall y1 : Prop, (~ ((@COND Prop y1 True y0) = ((~ y1) -> y0))) -> False.
Definition term80 (a0 : Type') := fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1)).
Definition term79 (a0 : Type') := fun y0 : list a0 => forall y1 : list a0, (@List.removelast a0 (@List.app a0 y0 y1)) = (@COND (list a0) (y1 = (@nil a0)) (@List.removelast a0 y0) (@List.app a0 y0 (@List.removelast a0 y1))).
Definition term157 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @List.removelast a0 (@cons a0 x0 (@List.app a0 x1 x2)).
Definition term91 (a0 : Type') (x0 : list a0) := imp (forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 x0 y0)) = (@List.app a0 x0 (@List.removelast a0 y0))).
Definition term177 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @cons a0 x0 (@List.app a0 x1 (@List.removelast a0 x2)).
Definition term36 (a0 : Type') (a1 : Type') (x0 : Prop) := (fun y0 : Prop => forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0, (y1 (@COND a0 y0 y2 y3)) = (@COND a1 y0 (y1 y2) (y1 y3))) x0.
Definition term146 (a0 : Type') (x0 : list a0) (x1 : list a0) := (fun y0 : list a0 => (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 x0 y0)) = (@List.app a0 x0 (@List.removelast a0 y0))) x1.
Definition term48 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND (list a0) (x1 = (@nil a0)) (@List.removelast a0 x0) (@List.app a0 x0 (@List.removelast a0 x1)).
Definition term101 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, (forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) -> forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@List.app a0 (@cons a0 y0 y1) (@List.removelast a0 y2)).
Definition term70 (a0 : Type') (x0 : list a0) (x1 : list a0) := (~ (x1 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))).
Definition term145 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @cons a0 x0 (@List.app a0 x1 x2).
Definition term33 (x0 : Prop) := (fun y0 : Prop => forall y1 : Prop, (~ ((@COND Prop y1 True y0) = ((~ y1) -> y0))) -> False) x0.
Definition term26 (x0 : Prop) := and ((~ x0) \/ True).
Definition term45 (a0 : Type') (x0 : type1143 a0) (x1 : Prop) (x2 : list a0) (x3 : list a0) := x0 (@COND (list a0) x1 x2 x3).
Definition term50 (a0 : Type') (x0 : list a0) (x1 : list a0) := @eq (list a0) (@List.removelast a0 (@List.app a0 x0 x1)).
Definition term148 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2).
Definition term186 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : list a0 => (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) y0)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 y0)).
Definition term141 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (@List.app a0 (@cons a0 x0 y0) y1) = (@cons a0 x0 (@List.app a0 y0 y1))) x1.
Definition term151 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) := forall y0 : Prop, ((~ (x2 = (@nil a0))) = x3) -> (x3 -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = y0) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = (x3 -> y0).
Definition term120 (a0 : Type') (x0 : list a0) (x1 : Prop) := forall y0 : Prop, ((~ (x0 = (@nil a0))) = x1) -> (x1 -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = y0) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = (x1 -> y0).
Definition term114 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term61 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) := forall y0 : Prop, ((x1 = (@nil a0)) = x2) -> (x2 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = x3) -> ((~ x2) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = y0) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop x2 x3 y0).
Definition term136 (a0 : Type') (x0 : list a0) (x1 : list a0) := (fun y0 : list a0 => ((@List.app a0 x0 y0) = (@nil a0)) = ((x0 = (@nil a0)) /\ (y0 = (@nil a0)))) x1.
Definition term35 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => (@List.app a0 y0 (@nil a0)) = y0) x0.
Definition term104 (a0 : Type') := ((fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) (@cons a0 y0 y1)).
Definition term28 := forall y0 : Prop, True.
Definition term5 (x0 : Prop) (x1 : Prop) := (((~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False) -> (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False) -> (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False.
Definition term92 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@cons a0 x0 x1).
Definition term63 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) (x4 : Prop) := ((x1 = (@nil a0)) = x2) -> (x2 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = x3) -> ((~ x2) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = x4) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop x2 x3 x4).
Definition term162 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := forall y0 : Prop, forall y1 : list a0, forall y2 : list a0, (((@List.app a0 x1 x2) = (@nil a0)) = y0) -> (y0 -> (@nil a0) = y1) -> ((~ y0) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = y2) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) y0 y1 y2).
Definition term161 (a0 : Type') (x0 : Prop) (x1 : list a0) (x2 : list a0) := forall y0 : Prop, forall y1 : list a0, forall y2 : list a0, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND (list a0) x0 x1 x2) = (@COND (list a0) y0 y1 y2).
Definition term147 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := forall y0 : Prop, forall y1 : Prop, ((~ (x2 = (@nil a0))) = y0) -> (y0 -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = y1) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = (y0 -> y1).
Definition term116 (a0 : Type') (x0 : list a0) := forall y0 : Prop, forall y1 : Prop, ((~ (x0 = (@nil a0))) = y0) -> (y0 -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = y1) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = (y0 -> y1).
Definition term115 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term59 (a0 : Type') (x0 : list a0) (x1 : list a0) (x2 : Prop) := forall y0 : Prop, forall y1 : Prop, ((x1 = (@nil a0)) = x2) -> (x2 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = y0) -> ((~ x2) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = y1) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop x2 y0 y1).
Definition term57 (a0 : Type') (x0 : list a0) (x1 : list a0) := forall y0 : Prop, forall y1 : Prop, forall y2 : Prop, ((x1 = (@nil a0)) = y0) -> (y0 -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) = y1) -> ((~ y0) -> ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))) = y2) -> (@COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)))) = (@COND Prop y0 y1 y2).
Definition term56 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, forall y1 : Prop, forall y2 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND Prop x0 x1 x2) = (@COND Prop y0 y1 y2).
Definition term55 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) := forall y0 : Prop, forall y1 : a0, forall y2 : a0, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND a0 x0 x1 x2) = (@COND a0 y0 y1 y2).
Definition term16 := forall y0 : Prop, forall y1 : Prop, (@COND Prop y1 True y0) = ((~ y1) -> y0).
Definition term15 := forall y0 : Prop, forall y1 : Prop, (~ ((@COND Prop y1 True y0) = ((~ y1) -> y0))) -> False.
Definition term49 (a0 : Type') (x0 : list a0) (x1 : list a0) := @COND Prop (x1 = (@nil a0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.removelast a0 x0)) ((@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1))).
Definition term152 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((~ (x2 = (@nil a0))) = x3) -> (x3 -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = y0) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = (x3 -> y0)) x4.
Definition term71 (a0 : Type') (x0 : list a0) := ~ (x0 = (@nil a0)).
Definition term181 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @eq (list a0) (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)).
Definition term164 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) := (fun y0 : Prop => forall y1 : list a0, forall y2 : list a0, (((@List.app a0 x1 x2) = (@nil a0)) = y0) -> (y0 -> (@nil a0) = y1) -> ((~ y0) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = y2) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) y0 y1 y2)) x3.
Definition term174 (a0 : Type') := False -> (@nil a0) = (@nil a0).
Definition term94 (a0 : Type') (x0 : a0) (x1 : list a0) := ((fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) x1) -> (fun y0 : list a0 => forall y1 : list a0, (~ (y1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y0 y1)) = (@List.app a0 y0 (@List.removelast a0 y1))) (@cons a0 x0 x1).
Definition term155 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) := ((~ (x2 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = x3) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = ((~ (x2 = (@nil a0))) -> x3).
Definition term22 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (((x2 = False) -> x0 = x3) /\ ((x2 = True) -> x0 = x1)) -> x0 = (((~ x2) \/ x1) /\ (x2 \/ x3)).
Definition term74 (a0 : Type') (x0 : list a0) (x1 : list a0) := (~ (x1 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 x0 x1)) = (@List.app a0 x0 (@List.removelast a0 x1)).
Definition term149 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2).
Definition term24 (x0 : Prop) := ((~ x0) \/ True) /\ (x0 \/ True).
Definition term183 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := (~ (x2 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = True.
Definition term126 (a0 : Type') (x0 : list a0) := (~ (x0 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = True.
Definition term29 := fun y0 : Prop => forall y1 : Prop, True.
Definition term54 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) := forall y0 : a0, forall y1 : a0, (x0 = x3) -> (x3 -> x1 = y0) -> ((~ x3) -> x2 = y1) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 y0 y1).
Definition term39 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : a0 -> a1) := forall y0 : a0, forall y1 : a0, (x1 (@COND a0 x0 y0 y1)) = (@COND a1 x0 (x1 y0) (x1 y1)).
Definition term185 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := (~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2)).
Definition term40 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : a0 -> a1) (x2 : a0) := (fun y0 : a0 => forall y1 : a0, (x1 (@COND a0 x0 y0 y1)) = (@COND a1 x0 (x1 y0) (x1 y1))) x2.
Definition term159 (a0 : Type') (x0 : a0) (x1 : list a0) := @COND (list a0) (x1 = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 x1)).
Definition term184 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := ((~ (x2 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = True) -> ((~ (x2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) x2)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 x2))) = ((~ (x2 = (@nil a0))) -> True).
Definition term127 (a0 : Type') (x0 : list a0) := ((~ (x0 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = True) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = ((~ (x0 = (@nil a0))) -> True).
Definition term169 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) (x4 : list a0) (x5 : list a0) := (((@List.app a0 x1 x2) = (@nil a0)) = x3) -> (x3 -> (@nil a0) = x4) -> ((~ x3) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = x5) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) x3 x4 x5).
Definition term119 (a0 : Type') (x0 : list a0) (x1 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((~ (x0 = (@nil a0))) = y0) -> (y0 -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = y1) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = (y0 -> y1)) x1.
Definition term175 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : list a0) := (False -> (@nil a0) = (@nil a0)) -> ((~ False) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = x3) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) False (@nil a0) x3).
Definition term30 := forall y0 : Prop, forall y1 : Prop, True.
Definition term37 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : a0 -> a1, forall y1 : a0, forall y2 : a0, (y0 (@COND a0 x0 y1 y2)) = (@COND a1 x0 (y0 y1) (y0 y2)).
Definition term123 (a0 : Type') (x0 : list a0) (x1 : Prop) := ((~ (x0 = (@nil a0))) = (~ (x0 = (@nil a0)))) -> ((~ (x0 = (@nil a0))) -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = x1) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = ((~ (x0 = (@nil a0))) -> x1).
Definition term180 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := @COND (list a0) False (@nil a0) (@cons a0 x0 (@List.app a0 x1 (@List.removelast a0 x2))).
Definition term131 (a0 : Type') := fun y0 : list a0 => True.
Definition term178 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := (~ False) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = (@cons a0 x0 (@List.app a0 x1 (@List.removelast a0 x2))).
Definition term2 (x0 : Prop) (x1 : Prop) := (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False.
Definition term46 (a0 : Type') (x0 : Prop) (x1 : list a0) (x2 : type1143 a0) (x3 : list a0) := @COND Prop x0 (x2 x1) (x2 x3).
Definition term6 (x0 : Prop) (x1 : Prop) := (((~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False) -> (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False) -> ((~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False) -> (~ ((@COND Prop x0 True x1) = ((~ x0) -> x1))) -> False.
Definition term118 (a0 : Type') (x0 : list a0) := @List.app a0 (@nil a0) (@List.removelast a0 x0).
Definition term51 (a0 : Type') (x0 : list a0) (x1 : list a0) := @List.app a0 x0 (@List.removelast a0 x1).
Definition term133 (a0 : Type') (x0 : Prop) := forall y0 : list a0, x0.
Definition term143 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) := (fun y0 : list a0 => (@List.app a0 (@cons a0 x0 x1) y0) = (@cons a0 x0 (@List.app a0 x1 y0))) x2.
Definition term122 (a0 : Type') (x0 : list a0) (x1 : Prop) (x2 : Prop) := ((~ (x0 = (@nil a0))) = x1) -> (x1 -> ((@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = x2) -> ((~ (x0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) x0)) = (@List.app a0 (@nil a0) (@List.removelast a0 x0))) = (x1 -> x2).
Definition term171 (a0 : Type') (x0 : list a0) := (x0 = (@nil a0)) /\ False.
Definition term103 (a0 : Type') := forall y0 : a0, forall y1 : list a0, (forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) -> forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 y0 y1) y2)) = (@List.app a0 (@cons a0 y0 y1) (@List.removelast a0 y2)).
Definition term102 (a0 : Type') := forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) y1) -> (fun y2 : list a0 => forall y3 : list a0, (~ (y3 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y2 y3)) = (@List.app a0 y2 (@List.removelast a0 y3))) (@cons a0 y0 y1).
Definition term52 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) (x5 : a0) := (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = x5) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 x5).
Definition term76 (a0 : Type') (x0 : list a0) := fun y0 : list a0 => (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 x0 y0)) = (@List.app a0 x0 (@List.removelast a0 y0)).
Definition term88 (a0 : Type') := and (forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) y0)) = (@List.app a0 (@nil a0) (@List.removelast a0 y0))).
Definition term95 (a0 : Type') (x0 : a0) (x1 : list a0) := (forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 x1 y0)) = (@List.app a0 x1 (@List.removelast a0 y0))) -> forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) y0)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 y0)).
Definition term166 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : list a0) (x3 : Prop) (x4 : list a0) := (fun y0 : list a0 => forall y1 : list a0, (((@List.app a0 x1 x2) = (@nil a0)) = x3) -> (x3 -> (@nil a0) = y0) -> ((~ x3) -> (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2))) = y1) -> (@COND (list a0) ((@List.app a0 x1 x2) = (@nil a0)) (@nil a0) (@cons a0 x0 (@List.removelast a0 (@List.app a0 x1 x2)))) = (@COND (list a0) x3 y0 y1)) x4.
Definition term12 (x0 : Prop) := forall y0 : Prop, (@COND Prop y0 True x0) = ((~ y0) -> x0).
Definition term117 (a0 : Type') (x0 : list a0) := @List.removelast a0 (@List.app a0 (@nil a0) x0).
Definition term96 (a0 : Type') (x0 : a0) := fun y0 : list a0 => ((fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) y0) -> (fun y1 : list a0 => forall y2 : list a0, (~ (y2 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 y1 y2)) = (@List.app a0 y1 (@List.removelast a0 y2))) (@cons a0 x0 y0).
Definition term93 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@cons a0 x0 x1) y0)) = (@List.app a0 (@cons a0 x0 x1) (@List.removelast a0 y0)).
Definition term86 (a0 : Type') := forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 (@nil a0) y0)) = (@List.app a0 (@nil a0) (@List.removelast a0 y0)).
Definition term78 (a0 : Type') (x0 : list a0) := forall y0 : list a0, (~ (y0 = (@nil a0))) -> (@List.removelast a0 (@List.app a0 x0 y0)) = (@List.app a0 x0 (@List.removelast a0 y0)).
