Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term9 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @iterate real a1 real_add (@IMAGE a0 a1 x0 x1).
Definition term14 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a1) (x3 : a0 -> real) := @iterate real a0 real_add (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((x1 y1) = x2)) y1)) x3.
Definition term34 (a0 : Type') (a1 : Type') (x0 : type1627) := (@monoidal real x0) -> forall y0 : a0 -> a1, forall y1 : a0 -> real, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate real a0 x0 y2 y1) = (@iterate real a1 x0 (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate real a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a2) := (@monoidal a2 x0) -> forall y0 : a0 -> a1, forall y1 : a0 -> a2, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate a2 a0 x0 y2 y1) = (@iterate a2 a1 x0 (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate a2 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term23 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> real) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@iterate real a0 real_add y0 x1) = (@iterate real a1 real_add (@IMAGE a0 a1 x0 y0) (fun y1 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ ((x0 y3) = y1)) y3)) x1)).
Definition term18 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> real) := @iterate real a1 real_add (@IMAGE a0 a1 x1 x0) (fun y0 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ ((x1 y2) = y0)) y2)) x2).
Definition term19 (a0 : Type') (x0 : a0 -> Prop) := imp (@FINITE a0 x0).
Definition term33 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : a0 -> real, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate real a0 real_add y2 y1) = (@iterate real a1 real_add (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term32 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : a0 -> real, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@sum a0 y2 y1) = (@sum a1 (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @sum a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a2) := forall y0 : a0 -> a1, forall y1 : a0 -> a2, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate a2 a0 x0 y2 y1) = (@iterate a2 a1 x0 (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate a2 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1400 a2, (@monoidal a2 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> a2, forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate a2 a0 y0 y3 y2) = (@iterate a2 a1 y0 (@IMAGE a0 a1 y1 y3) (fun y4 : a1 => @iterate a2 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ ((y1 y6) = y4)) y6)) y2)).
Definition term11 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a1) := @sum a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((x1 y1) = x2)) y1)).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> real) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@iterate real a0 real_add y0 x1) = (@iterate real a1 real_add (@IMAGE a0 a1 x0 y0) (fun y1 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ ((x0 y3) = y1)) y3)) x1)).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> real) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@sum a0 y0 x1) = (@sum a1 (@IMAGE a0 a1 x0 y0) (fun y1 : a1 => @sum a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ ((x0 y3) = y1)) y3)) x1)).
Definition term35 (a0 : Type') (a1 : Type') := (@monoidal real real_add) -> forall y0 : a0 -> a1, forall y1 : a0 -> real, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate real a0 real_add y2 y1) = (@iterate real a1 real_add (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term15 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> real) := fun y0 : a1 => @sum a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ ((x1 y2) = y0)) y2)) x2.
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a2) := (forall y0 : type1400 a2, (@monoidal a2 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> a2, forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate a2 a0 y0 y3 y2) = (@iterate a2 a1 y0 (@IMAGE a0 a1 y1 y3) (fun y4 : a1 => @iterate a2 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ ((y1 y6) = y4)) y6)) y2))) -> forall y0 : a0 -> a1, forall y1 : a0 -> a2, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate a2 a0 x0 y2 y1) = (@iterate a2 a1 x0 (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate a2 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term27 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := fun y0 : a0 -> real => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate real a0 real_add y1 y0) = (@iterate real a1 real_add (@IMAGE a0 a1 x0 y1) (fun y2 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ ((x0 y4) = y2)) y4)) y0)).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := fun y0 : a0 -> real => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@sum a0 y1 y0) = (@sum a1 (@IMAGE a0 a1 x0 y1) (fun y2 : a1 => @sum a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ ((x0 y4) = y2)) y4)) y0)).
Definition term10 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a1) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((x1 y1) = x2)) y1).
Definition term20 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> real) := (@FINITE a0 x0) -> (@sum a0 x0 x2) = (@sum a1 (@IMAGE a0 a1 x1 x0) (fun y0 : a1 => @sum a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ ((x1 y2) = y0)) y2)) x2)).
Definition term6 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> real) := @eq real (@sum a0 x0 x1).
Definition term16 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> real) := fun y0 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ ((x1 y2) = y0)) y2)) x2.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> real) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@sum a0 y0 x1) = (@sum a1 (@IMAGE a0 a1 x0 y0) (fun y1 : a1 => @sum a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ ((x0 y3) = y1)) y3)) x1)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a1) (x3 : a0 -> real) := @sum a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((x1 y1) = x2)) y1)) x3.
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a1) := @iterate real a0 real_add (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((x1 y1) = x2)) y1)).
Definition term29 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0 -> real, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate real a0 real_add y1 y0) = (@iterate real a1 real_add (@IMAGE a0 a1 x0 y1) (fun y2 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ ((x0 y4) = y2)) y4)) y0)).
Definition term28 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0 -> real, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@sum a0 y1 y0) = (@sum a1 (@IMAGE a0 a1 x0 y1) (fun y2 : a1 => @sum a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ ((x0 y4) = y2)) y4)) y0)).
Definition term21 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> real) := (@FINITE a0 x0) -> (@iterate real a0 real_add x0 x2) = (@iterate real a1 real_add (@IMAGE a0 a1 x1 x0) (fun y0 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ ((x1 y2) = y0)) y2)) x2)).
Definition term8 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @sum a1 (@IMAGE a0 a1 x0 x1).
Definition term31 (a0 : Type') (a1 : Type') := fun y0 : a0 -> a1 => forall y1 : a0 -> real, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate real a0 real_add y2 y1) = (@iterate real a1 real_add (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @iterate real a0 real_add (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term30 (a0 : Type') (a1 : Type') := fun y0 : a0 -> a1 => forall y1 : a0 -> real, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@sum a0 y2 y1) = (@sum a1 (@IMAGE a0 a1 y0 y2) (fun y3 : a1 => @sum a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ ((y0 y5) = y3)) y5)) y1)).
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> real) := @sum a1 (@IMAGE a0 a1 x1 x0) (fun y0 : a1 => @sum a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ ((x1 y2) = y0)) y2)) x2).
Definition term7 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> real) := @eq real (@iterate real a0 real_add x0 x1).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') := (forall y0 : type1400 a2, (@monoidal a2 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> a2, forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate a2 a0 y0 y3 y2) = (@iterate a2 a1 y0 (@IMAGE a0 a1 y1 y3) (fun y4 : a1 => @iterate a2 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ ((y1 y6) = y4)) y6)) y2))) -> forall y0 : type1400 a2, (@monoidal a2 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> a2, forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate a2 a0 y0 y3 y2) = (@iterate a2 a1 y0 (@IMAGE a0 a1 y1 y3) (fun y4 : a1 => @iterate a2 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ ((y1 y6) = y4)) y6)) y2)).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a2) := (fun y0 : type1400 a2 => (@monoidal a2 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> a2, forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate a2 a0 y0 y3 y2) = (@iterate a2 a1 y0 (@IMAGE a0 a1 y1 y3) (fun y4 : a1 => @iterate a2 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ ((y1 y6) = y4)) y6)) y2))) x0.
