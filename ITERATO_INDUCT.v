Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ITERATO_INDUCT_term_abbrevs.
Require Import BOOL_CASES_AX_spec.
Require Import CARD_DELETE_spec.
Require Import CARD_EQ_0_spec.
Require Import COND_RAND_spec.
Require Import CONJ_ASSOC_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXCLUDED_MIDDLE_spec.
Require Import FINITE_DELETE_spec.
Require Import FINITE_RESTRICT_spec.
Require Import IMP_CONJ_spec.
Require Import INT_POS_spec.
Require Import IN_DELETE_spec.
Require Import IN_DIFF_spec.
Require Import IN_SING_spec.
Require Import ITERATO_CLAUSES_EXISTS_spec.
Require Import ITERATO_EXPAND_CASES_spec.
Require Import ITERATO_SUPPORT_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import RIGHT_IMP_FORALL_THM_spec.
Require Import num_WF_spec.
Require Import thm0_spec.
Require Import thm1008952_spec.
Require Import thm1009824_spec.
Require Import thm1013352_spec.
Require Import thm1013364_spec.
Require Import thm1032098_spec.
Require Import thm1032781_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm11004_spec.
Require Import thm11005_spec.
Require Import thm12653_spec.
Require Import thm1365106_spec.
Require Import thm1365406_spec.
Require Import thm1365721_spec.
Require Import thm1367111_spec.
Require Import thm1367247_spec.
Require Import thm1367248_spec.
Require Import thm1367254_spec.
Require Import thm1367303_spec.
Require Import thm1386578_spec.
Require Import thm1393126_spec.
Require Import thm1396750_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17500_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm1820_spec.
Require Import thm1821_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm1834_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1844_spec.
Require Import thm1855_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm19158_spec.
Require Import thm19367_spec.
Require Import thm19490_spec.
Require Import thm1980010_spec.
Require Import thm1980011_spec.
Require Import thm1980026_spec.
Require Import thm1980255_spec.
Require Import thm1980259_spec.
Require Import thm1980260_spec.
Require Import thm1980265_spec.
Require Import thm1980266_spec.
Require Import thm1981473_spec.
Require Import thm1981474_spec.
Require Import thm1981475_spec.
Require Import thm1981613_spec.
Require Import thm1982627_spec.
Require Import thm1982628_spec.
Require Import thm1982713_spec.
Require Import thm1982715_spec.
Require Import thm1982719_spec.
Require Import thm1982721_spec.
Require Import thm1982723_spec.
Require Import thm1982733_spec.
Require Import thm1982753_spec.
Require Import thm1982757_spec.
Require Import thm1982759_spec.
Require Import thm1982763_spec.
Require Import thm1982781_spec.
Require Import thm1982792_spec.
Require Import thm1988287_spec.
Require Import thm1988293_spec.
Require Import thm1988330_spec.
Require Import thm1988332_spec.
Require Import thm1988336_spec.
Require Import thm1988342_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm21735_spec.
Require Import thm21736_spec.
Require Import thm21742_spec.
Require Import thm21761_spec.
Require Import thm21763_spec.
Require Import thm21780_spec.
Require Import thm2318496_spec.
Require Import thm2318497_spec.
Require Import thm2318538_spec.
Require Import thm2318539_spec.
Require Import thm2318544_spec.
Require Import thm2318545_spec.
Require Import thm2318568_spec.
Require Import thm2318569_spec.
Require Import thm2318574_spec.
Require Import thm2318575_spec.
Require Import thm2318604_spec.
Require Import thm2841383_spec.
Require Import thm2841384_spec.
Require Import thm2841401_spec.
Require Import thm2841402_spec.
Require Import thm2841413_spec.
Require Import thm2841414_spec.
Require Import thm3211609_spec.
Require Import thm3211610_spec.
Require Import thm3211640_spec.
Require Import thm3211641_spec.
Require Import thm3211692_spec.
Require Import thm3211693_spec.
Require Import thm3211701_spec.
Require Import thm3211702_spec.
Require Import thm3211729_spec.
Require Import thm3211730_spec.
Require Import thm4211_spec.
Require Import thm69_spec.
Require Import thm7_spec.
Require Import thm892_spec.
Require Import thm912739_spec.
Require Import thm940073_spec.
Lemma lem6861334 (n : nat) : (term0 n) = (n = (NUMERAL 0)).
Proof. exact (@lem16933 (n = (NUMERAL 0))). Qed.
Lemma lem6861336 (n : nat) : (term1 n) = (term1 n).
Proof. exact (eq_refl (term1 n)). Qed.
Lemma lem6861337 (n : nat) : (term2 n) = (term3 n).
Proof. exact (MK_COMB (@lem6861336 n) (@lem6861334 n)). Qed.
Lemma lem6861342 (n : nat) : (term4 n) = (term4 n).
Proof. exact (eq_refl (term4 n)). Qed.
Lemma lem6861343 (n : nat) : (term5 n) = (term6 n).
Proof. exact (MK_COMB (@lem6861342 n) (@lem6861337 n)). Qed.
Lemma lem6861344 (n : nat) : ((term7 n) = (term8 n)) = (term5 n).
Proof. exact (@lem17500 (term7 n) (term8 n)). Qed.
Lemma lem6861346 (n : nat) : ((term7 n) = (term8 n)) = (term6 n).
Proof. exact (TRANS (@lem6861344 n) (@lem6861343 n)). Qed.
Lemma lem6861347 (n : nat) : (term9 n) = (term10 n).
Proof. exact (@lem1032781 n term11 (term12 n)). Qed.
Lemma lem6861348 (d : nat) (n : nat) : (term13 n d) = (term14 d n).
Proof. exact (eq_refl (term13 n d)). Qed.
Lemma lem6861349 (n : nat) (d : nat) : (term15 n d) = (term15 n d).
Proof. exact (eq_refl (term15 n d)). Qed.
Lemma lem6861350 (d : nat) (n : nat) : (term16 n d) = (term17 d n).
Proof. exact (MK_COMB (@lem6861349 n d) (@lem6861348 d n)). Qed.
Lemma lem6861351 (n : nat) : (term18 n) = (term19 n).
Proof. exact (fun_ext (fun d : nat => @lem6861350 d n)). Qed.
Lemma lem6861352 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6861353 (n : nat) : (term10 n) = (term20 n).
Proof. exact (MK_COMB (@lem6861352) (@lem6861351 n)). Qed.
Lemma lem6861354 (n : nat) : (term9 n) = (term6 n).
Proof. exact (eq_refl (term9 n)). Qed.
Lemma lem6861355 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6861356 (n : nat) : (term21 n) = (term22 n).
Proof. exact (MK_COMB (@lem6861355) (@lem6861354 n)). Qed.
Lemma lem6861357 (n : nat) : ((term9 n) = (term10 n)) = ((term6 n) = (term20 n)).
Proof. exact (MK_COMB (@lem6861356 n) (@lem6861353 n)). Qed.
Lemma lem6861358 (n : nat) : (term6 n) = (term20 n).
Proof. exact (EQ_MP (@lem6861357 n) (@lem6861347 n)). Qed.
Lemma lem6861359 (d : nat) (n : nat) : (term17 d n) = (term17 d n).
Proof. exact (eq_refl (term17 d n)). Qed.
Lemma lem6861360 (n : nat) : (term19 n) = (term19 n).
Proof. exact (fun_ext (fun d : nat => @lem6861359 d n)). Qed.
Lemma lem6861361 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6861362 (n : nat) : (term20 n) = (term20 n).
Proof. exact (MK_COMB (@lem6861361) (@lem6861360 n)). Qed.
Lemma lem6861363 (n : nat) : (term22 n) = (term22 n).
Proof. exact (eq_refl (term22 n)). Qed.
Lemma lem6861364 (n : nat) : ((term6 n) = (term20 n)) = ((term6 n) = (term20 n)).
Proof. exact (MK_COMB (@lem6861363 n) (@lem6861362 n)). Qed.
Lemma lem6861365 (n : nat) : (term6 n) = (term20 n).
Proof. exact (EQ_MP (@lem6861364 n) (@lem6861358 n)). Qed.
Lemma lem6861396 (n : nat) : ((term7 n) = (term8 n)) = (term20 n).
Proof. exact (TRANS (@lem6861346 n) (@lem6861365 n)). Qed.
Lemma lem6861429 (d : nat) (n : nat) : (term14 d n) = (term14 d n).
Proof. exact (eq_refl (term14 d n)). Qed.
Lemma lem6861446 (n : nat) (d : nat) : (term23 n d) = (term23 n d).
Proof. exact (eq_refl (term23 n d)). Qed.
Lemma lem6861453 (d : nat) : (term24 d) = (term25 d).
Proof. exact (@lem1032098 d term11). Qed.
Lemma lem6861456 (n : nat) : (@eq nat n) = (@eq nat n).
Proof. exact (eq_refl (@eq nat n)). Qed.
Lemma lem6861457 (n : nat) (d : nat) : (n = (term24 d)) = (n = (term25 d)).
Proof. exact (MK_COMB (@lem6861456 n) (@lem6861453 d)). Qed.
Lemma lem6861458 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6861459 (n : nat) (d : nat) : (term26 n d) = (term27 n d).
Proof. exact (MK_COMB (@lem6861458) (@lem6861457 n d)). Qed.
Lemma lem6861460 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861461 (n : nat) (d : nat) : (term28 n d) = (term29 n d).
Proof. exact (MK_COMB (@lem6861460) (@lem6861459 n d)). Qed.
Lemma lem6861462 (n : nat) (d : nat) : (term30 n d) = (term31 n d).
Proof. exact (MK_COMB (@lem6861461 n d) (@lem6861446 n d)). Qed.
Lemma lem6861463 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861464 (n : nat) (d : nat) : (term15 n d) = (term32 n d).
Proof. exact (MK_COMB (@lem6861463) (@lem6861462 n d)). Qed.
Lemma lem6861465 (d : nat) (n : nat) : (term17 d n) = (term33 d n).
Proof. exact (MK_COMB (@lem6861464 n d) (@lem6861429 d n)). Qed.
Lemma lem6861466 (n : nat) : (term19 n) = (term34 n).
Proof. exact (fun_ext (fun d : nat => @lem6861465 d n)). Qed.
Lemma lem6861467 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6861468 (n : nat) : (term20 n) = (term35 n).
Proof. exact (MK_COMB (@lem6861467) (@lem6861466 n)). Qed.
Lemma lem6861471 (n : nat) : ((term7 n) = (term8 n)) = (term35 n).
Proof. exact (TRANS (@lem6861396 n) (@lem6861468 n)). Qed.
Lemma lem6861473 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6861474 (n : nat) (d : nat) : (n = (term25 d)) = ((int_of_num n) = (term36 d)).
Proof. exact (@lem6861473 n (term25 d)). Qed.
Lemma lem6861478 (m : nat) (n : nat) : (term37 m n) = (term38 m n).
Proof. exact (EQ_MP (@lem2841384 m n) (@lem2841383 m n)). Qed.
Lemma lem6861479 (d : nat) : (term36 d) = (term39 d).
Proof. exact (@lem6861478 d term11). Qed.
Lemma lem6861480 (n : nat) : (term40 n) = (term40 n).
Proof. exact (eq_refl (term40 n)). Qed.
Lemma lem6861481 (n : nat) (d : nat) : ((int_of_num n) = (term36 d)) = ((int_of_num n) = (term39 d)).
Proof. exact (MK_COMB (@lem6861480 n) (@lem6861479 d)). Qed.
Lemma lem6861482 (n : nat) (d : nat) : (n = (term25 d)) = ((int_of_num n) = (term39 d)).
Proof. exact (TRANS (@lem6861474 n d) (@lem6861481 n d)). Qed.
Lemma lem6861483 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6861484 (n : nat) (d : nat) : (term27 n d) = (term41 n d).
Proof. exact (MK_COMB (@lem6861483) (@lem6861482 n d)). Qed.
Lemma lem6861485 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861486 (n : nat) (d : nat) : (term29 n d) = (term42 n d).
Proof. exact (MK_COMB (@lem6861485) (@lem6861484 n d)). Qed.
Lemma lem6861488 (m : nat) (n : nat) : (Peano.lt m n) = (term43 m n).
Proof. exact (EQ_MP (@lem2841402 m n) (@lem2841401 m n)). Qed.
Lemma lem6861489 (n : nat) : (term44 n) = (term45 n).
Proof. exact (@lem6861488 n term11). Qed.
Lemma lem6861490 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6861491 (n : nat) : (term46 n) = (term47 n).
Proof. exact (MK_COMB (@lem6861490) (@lem6861489 n)). Qed.
Lemma lem6861492 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861493 (n : nat) : (term48 n) = (term49 n).
Proof. exact (MK_COMB (@lem6861492) (@lem6861491 n)). Qed.
Lemma lem6861495 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6861496 (d : nat) : (d = (NUMERAL 0)) = ((int_of_num d) = term50).
Proof. exact (@lem6861495 d (NUMERAL 0)). Qed.
Lemma lem6861499 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6861500 (d : nat) : (term8 d) = (term51 d).
Proof. exact (MK_COMB (@lem6861499) (@lem6861496 d)). Qed.
Lemma lem6861501 (n : nat) (d : nat) : (term23 n d) = (term52 n d).
Proof. exact (MK_COMB (@lem6861493 n) (@lem6861500 d)). Qed.
Lemma lem6861502 (n : nat) (d : nat) : (term31 n d) = (term53 n d).
Proof. exact (MK_COMB (@lem6861486 n d) (@lem6861501 n d)). Qed.
Lemma lem6861503 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861504 (n : nat) (d : nat) : (term32 n d) = (term54 n d).
Proof. exact (MK_COMB (@lem6861503) (@lem6861502 n d)). Qed.
Lemma lem6861506 (m : nat) (n : nat) : (Peano.lt m n) = (term43 m n).
Proof. exact (EQ_MP (@lem2841402 m n) (@lem2841401 m n)). Qed.
Lemma lem6861507 (d : nat) (n : nat) : (Peano.lt d n) = (term43 d n).
Proof. exact (@lem6861506 d n). Qed.
Lemma lem6861508 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861509 (d : nat) (n : nat) : (term55 d n) = (term56 d n).
Proof. exact (MK_COMB (@lem6861508) (@lem6861507 d n)). Qed.
Lemma lem6861511 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6861512 (n : nat) : (n = (NUMERAL 0)) = ((int_of_num n) = term50).
Proof. exact (@lem6861511 n (NUMERAL 0)). Qed.
Lemma lem6861515 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6861516 (n : nat) : (term8 n) = (term51 n).
Proof. exact (MK_COMB (@lem6861515) (@lem6861512 n)). Qed.
Lemma lem6861517 (d : nat) (n : nat) : (term57 d n) = (term58 d n).
Proof. exact (MK_COMB (@lem6861509 d n) (@lem6861516 n)). Qed.
Lemma lem6861518 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861519 (d : nat) (n : nat) : (term59 d n) = (term60 d n).
Proof. exact (MK_COMB (@lem6861518) (@lem6861517 d n)). Qed.
Lemma lem6861521 (m : nat) (n : nat) : (Peano.lt m n) = (term43 m n).
Proof. exact (EQ_MP (@lem2841402 m n) (@lem2841401 m n)). Qed.
Lemma lem6861522 (d : nat) (n : nat) : (Peano.lt d n) = (term43 d n).
Proof. exact (@lem6861521 d n). Qed.
Lemma lem6861523 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6861524 (d : nat) (n : nat) : (term61 d n) = (term62 d n).
Proof. exact (MK_COMB (@lem6861523) (@lem6861522 d n)). Qed.
Lemma lem6861525 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861526 (d : nat) (n : nat) : (term63 d n) = (term64 d n).
Proof. exact (MK_COMB (@lem6861525) (@lem6861524 d n)). Qed.
Lemma lem6861528 (m : nat) (n : nat) : (m = n) = ((int_of_num m) = (int_of_num n)).
Proof. exact (EQ_MP (@lem2841414 m n) (@lem2841413 m n)). Qed.
Lemma lem6861529 (n : nat) : (n = (NUMERAL 0)) = ((int_of_num n) = term50).
Proof. exact (@lem6861528 n (NUMERAL 0)). Qed.
Lemma lem6861532 (d : nat) (n : nat) : (term65 d n) = (term66 d n).
Proof. exact (MK_COMB (@lem6861526 d n) (@lem6861529 n)). Qed.
Lemma lem6861533 (d : nat) (n : nat) : (term14 d n) = (term67 d n).
Proof. exact (MK_COMB (@lem6861519 d n) (@lem6861532 d n)). Qed.
Lemma lem6861534 (d : nat) (n : nat) : (term33 d n) = (term68 d n).
Proof. exact (MK_COMB (@lem6861504 n d) (@lem6861533 d n)). Qed.
Lemma lem6861535 (n : nat) : (term34 n) = (term69 n).
Proof. exact (fun_ext (fun d : nat => @lem6861534 d n)). Qed.
Lemma lem6861536 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6861537 (n : nat) : (term35 n) = (term70 n).
Proof. exact (MK_COMB (@lem6861536) (@lem6861535 n)). Qed.
Lemma lem6861538 (n : nat) : ((term7 n) = (term8 n)) = (term70 n).
Proof. exact (TRANS (@lem6861471 n) (@lem6861537 n)). Qed.
Lemma lem6861539 (d : nat) : term71 d.
Proof. exact (@lem2307535 d). Qed.
Lemma lem6861540 (d : nat) : (term71 d) = (term72 d).
Proof. exact (eq_refl (term71 d)). Qed.
Lemma lem6861541 (d : nat) : term72 d.
Proof. exact (EQ_MP (@lem6861540 d) (@lem6861539 d)). Qed.
Lemma lem6861542 (n : nat) : term71 n.
Proof. exact (@lem2307535 n). Qed.
Lemma lem6861543 (n : nat) : (term71 n) = (term72 n).
Proof. exact (eq_refl (term71 n)). Qed.
Lemma lem6861544 (n : nat) : term72 n.
Proof. exact (EQ_MP (@lem6861543 n) (@lem6861542 n)). Qed.
Lemma lem6861545 (_91746 : int) (_91747 : int) : (term73 _91746 _91747) = (term74 _91746 _91747).
Proof. exact (@lem2318604 (term74 _91746 _91747)). Qed.
Lemma lem6861571 (_91747 : int) (_91746 : int) : (term75 _91747 _91746) = (_91747 = (term76 _91746)).
Proof. exact (@lem16933 (_91747 = (term76 _91746))). Qed.
Lemma lem6861574 (_91747 : int) : (term77 _91747) = (term78 _91747).
Proof. exact (@lem16933 (term78 _91747)). Qed.
Lemma lem6861577 (_91746 : int) : (term79 _91746) = (_91746 = term50).
Proof. exact (@lem16933 (_91746 = term50)). Qed.
Lemma lem6861578 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861579 (_91747 : int) : (term80 _91747) = (term81 _91747).
Proof. exact (MK_COMB (@lem6861578) (@lem6861574 _91747)). Qed.
Lemma lem6861580 (_91747 : int) (_91746 : int) : (term82 _91747 _91746) = (term83 _91747 _91746).
Proof. exact (MK_COMB (@lem6861579 _91747) (@lem6861577 _91746)). Qed.
Lemma lem6861581 (_91747 : int) (_91746 : int) : (term84 _91747 _91746) = (term82 _91747 _91746).
Proof. exact (@lem17160 (term85 _91747) (term86 _91746)). Qed.
Lemma lem6861582 (_91747 : int) (_91746 : int) : (term84 _91747 _91746) = (term83 _91747 _91746).
Proof. exact (TRANS (@lem6861581 _91747 _91746) (@lem6861580 _91747 _91746)). Qed.
Lemma lem6861583 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861584 (_91747 : int) (_91746 : int) : (term87 _91747 _91746) = (term88 _91747 _91746).
Proof. exact (MK_COMB (@lem6861583) (@lem6861571 _91747 _91746)). Qed.
Lemma lem6861585 (_91747 : int) (_91746 : int) : (term89 _91747 _91746) = (term90 _91747 _91746).
Proof. exact (MK_COMB (@lem6861584 _91747 _91746) (@lem6861582 _91747 _91746)). Qed.
Lemma lem6861586 (_91747 : int) (_91746 : int) : (term91 _91747 _91746) = (term89 _91747 _91746).
Proof. exact (@lem17045 (term92 _91747 _91746) (term93 _91747 _91746)). Qed.
Lemma lem6861587 (_91747 : int) (_91746 : int) : (term91 _91747 _91746) = (term90 _91747 _91746).
Proof. exact (TRANS (@lem6861586 _91747 _91746) (@lem6861585 _91747 _91746)). Qed.
Lemma lem6861591 (_91747 : int) : (term79 _91747) = (_91747 = term50).
Proof. exact (@lem16933 (_91747 = term50)). Qed.
Lemma lem6861593 (_91746 : int) (_91747 : int) : (term94 _91746 _91747) = (term94 _91746 _91747).
Proof. exact (eq_refl (term94 _91746 _91747)). Qed.
Lemma lem6861594 (_91746 : int) (_91747 : int) : (term95 _91746 _91747) = (term96 _91746 _91747).
Proof. exact (MK_COMB (@lem6861593 _91746 _91747) (@lem6861591 _91747)). Qed.
Lemma lem6861595 (_91746 : int) (_91747 : int) : (term97 _91746 _91747) = (term95 _91746 _91747).
Proof. exact (@lem17045 (int_lt _91746 _91747) (term86 _91747)). Qed.
Lemma lem6861596 (_91746 : int) (_91747 : int) : (term97 _91746 _91747) = (term96 _91746 _91747).
Proof. exact (TRANS (@lem6861595 _91746 _91747) (@lem6861594 _91746 _91747)). Qed.
Lemma lem6861599 (_91746 : int) (_91747 : int) : (term98 _91746 _91747) = (int_lt _91746 _91747).
Proof. exact (@lem16933 (int_lt _91746 _91747)). Qed.
Lemma lem6861600 (_91747 : int) : (term86 _91747) = (term86 _91747).
Proof. exact (eq_refl (term86 _91747)). Qed.
Lemma lem6861601 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861602 (_91746 : int) (_91747 : int) : (term99 _91746 _91747) = (term100 _91746 _91747).
Proof. exact (MK_COMB (@lem6861601) (@lem6861599 _91746 _91747)). Qed.
Lemma lem6861603 (_91746 : int) (_91747 : int) : (term101 _91746 _91747) = (term102 _91746 _91747).
Proof. exact (MK_COMB (@lem6861602 _91746 _91747) (@lem6861600 _91747)). Qed.
Lemma lem6861604 (_91746 : int) (_91747 : int) : (term103 _91746 _91747) = (term101 _91746 _91747).
Proof. exact (@lem17045 (term104 _91746 _91747) (_91747 = term50)). Qed.
Lemma lem6861605 (_91746 : int) (_91747 : int) : (term103 _91746 _91747) = (term102 _91746 _91747).
Proof. exact (TRANS (@lem6861604 _91746 _91747) (@lem6861603 _91746 _91747)). Qed.
Lemma lem6861606 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861607 (_91746 : int) (_91747 : int) : (term105 _91746 _91747) = (term106 _91746 _91747).
Proof. exact (MK_COMB (@lem6861606) (@lem6861596 _91746 _91747)). Qed.
Lemma lem6861608 (_91746 : int) (_91747 : int) : (term107 _91746 _91747) = (term108 _91746 _91747).
Proof. exact (MK_COMB (@lem6861607 _91746 _91747) (@lem6861605 _91746 _91747)). Qed.
Lemma lem6861609 (_91746 : int) (_91747 : int) : (term109 _91746 _91747) = (term107 _91746 _91747).
Proof. exact (@lem17160 (term110 _91746 _91747) (term111 _91746 _91747)). Qed.
Lemma lem6861610 (_91746 : int) (_91747 : int) : (term109 _91746 _91747) = (term108 _91746 _91747).
Proof. exact (TRANS (@lem6861609 _91746 _91747) (@lem6861608 _91746 _91747)). Qed.
Lemma lem6861611 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861612 (_91747 : int) (_91746 : int) : (term112 _91747 _91746) = (term113 _91747 _91746).
Proof. exact (MK_COMB (@lem6861611) (@lem6861587 _91747 _91746)). Qed.
Lemma lem6861613 (_91746 : int) (_91747 : int) : (term114 _91746 _91747) = (term115 _91746 _91747).
Proof. exact (MK_COMB (@lem6861612 _91747 _91746) (@lem6861610 _91746 _91747)). Qed.
Lemma lem6861614 (_91746 : int) (_91747 : int) : (term116 _91746 _91747) = (term114 _91746 _91747).
Proof. exact (@lem17160 (term117 _91747 _91746) (term118 _91746 _91747)). Qed.
Lemma lem6861615 (_91746 : int) (_91747 : int) : (term116 _91746 _91747) = (term115 _91746 _91747).
Proof. exact (TRANS (@lem6861614 _91746 _91747) (@lem6861613 _91746 _91747)). Qed.
Lemma lem6861617 (_91747 : int) : (term119 _91747) = (term119 _91747).
Proof. exact (eq_refl (term119 _91747)). Qed.
Lemma lem6861618 (_91746 : int) (_91747 : int) : (term120 _91746 _91747) = (term121 _91746 _91747).
Proof. exact (MK_COMB (@lem6861617 _91747) (@lem6861615 _91746 _91747)). Qed.
Lemma lem6861619 (_91746 : int) (_91747 : int) : (term122 _91746 _91747) = (term120 _91746 _91747).
Proof. exact (@lem17362 (term123 _91747) (term124 _91746 _91747)). Qed.
Lemma lem6861620 (_91746 : int) (_91747 : int) : (term122 _91746 _91747) = (term121 _91746 _91747).
Proof. exact (TRANS (@lem6861619 _91746 _91747) (@lem6861618 _91746 _91747)). Qed.
Lemma lem6861622 (_91746 : int) : (term119 _91746) = (term119 _91746).
Proof. exact (eq_refl (term119 _91746)). Qed.
Lemma lem6861623 (_91746 : int) (_91747 : int) : (term125 _91746 _91747) = (term126 _91746 _91747).
Proof. exact (MK_COMB (@lem6861622 _91746) (@lem6861620 _91746 _91747)). Qed.
Lemma lem6861624 (_91746 : int) (_91747 : int) : (term127 _91746 _91747) = (term125 _91746 _91747).
Proof. exact (@lem17362 (term123 _91746) (term128 _91746 _91747)). Qed.
Lemma lem6861664 (_91746 : int) (_91747 : int) : (term127 _91746 _91747) = (term126 _91746 _91747).
Proof. exact (TRANS (@lem6861624 _91746 _91747) (@lem6861623 _91746 _91747)). Qed.
Lemma lem6861667 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861668 (_91746 : int) : (term123 _91746) = (term130 _91746).
Proof. exact (@lem6861667 term50 _91746). Qed.
Lemma lem6861670 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861671 : term132 = term133.
Proof. exact (@lem6861670 (NUMERAL 0)). Qed.
Lemma lem6861672 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6861673 : term134 = term135.
Proof. exact (MK_COMB (@lem6861672) (@lem6861671)). Qed.
Lemma lem6861674 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6861675 (_91746 : int) : (term130 _91746) = (term136 _91746).
Proof. exact (MK_COMB (@lem6861673) (@lem6861674 _91746)). Qed.
Lemma lem6861677 (_91746 : int) : (term123 _91746) = (term136 _91746).
Proof. exact (TRANS (@lem6861668 _91746) (@lem6861675 _91746)). Qed.
Lemma lem6861680 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861681 (_91747 : int) : (term123 _91747) = (term130 _91747).
Proof. exact (@lem6861680 term50 _91747). Qed.
Lemma lem6861683 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861684 : term132 = term133.
Proof. exact (@lem6861683 (NUMERAL 0)). Qed.
Lemma lem6861685 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6861686 : term134 = term135.
Proof. exact (MK_COMB (@lem6861685) (@lem6861684)). Qed.
Lemma lem6861687 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6861688 (_91747 : int) : (term130 _91747) = (term136 _91747).
Proof. exact (MK_COMB (@lem6861686) (@lem6861687 _91747)). Qed.
Lemma lem6861690 (_91747 : int) : (term123 _91747) = (term136 _91747).
Proof. exact (TRANS (@lem6861681 _91747) (@lem6861688 _91747)). Qed.
Lemma lem6861693 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem6861694 (_91747 : int) (_91746 : int) : (_91747 = (term76 _91746)) = ((real_of_int _91747) = (term137 _91746)).
Proof. exact (@lem6861693 _91747 (term76 _91746)). Qed.
Lemma lem6861698 (x : int) (y : int) : (term138 x y) = (term139 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6861699 (_91746 : int) : (term137 _91746) = (term140 _91746).
Proof. exact (@lem6861698 _91746 term141). Qed.
Lemma lem6861701 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861702 : term142 = term143.
Proof. exact (@lem6861701 term11). Qed.
Lemma lem6861703 (_91746 : int) : (term144 _91746) = (term144 _91746).
Proof. exact (eq_refl (term144 _91746)). Qed.
Lemma lem6861704 (_91746 : int) : (term140 _91746) = (term145 _91746).
Proof. exact (MK_COMB (@lem6861703 _91746) (@lem6861702)). Qed.
Lemma lem6861705 (_91746 : int) : (term137 _91746) = (term145 _91746).
Proof. exact (TRANS (@lem6861699 _91746) (@lem6861704 _91746)). Qed.
Lemma lem6861706 (_91747 : int) : (term146 _91747) = (term146 _91747).
Proof. exact (eq_refl (term146 _91747)). Qed.
Lemma lem6861707 (_91747 : int) (_91746 : int) : ((real_of_int _91747) = (term137 _91746)) = ((real_of_int _91747) = (term145 _91746)).
Proof. exact (MK_COMB (@lem6861706 _91747) (@lem6861705 _91746)). Qed.
Lemma lem6861709 (_91747 : int) (_91746 : int) : (_91747 = (term76 _91746)) = ((real_of_int _91747) = (term145 _91746)).
Proof. exact (TRANS (@lem6861694 _91747 _91746) (@lem6861707 _91747 _91746)). Qed.
Lemma lem6861711 (x : int) (y : int) : (int_lt x y) = (term147 x y).
Proof. exact (proj2 (@lem2318497 x y)). Qed.
Lemma lem6861712 (_91747 : int) : (term78 _91747) = (term148 _91747).
Proof. exact (@lem6861711 _91747 term141). Qed.
Lemma lem6861714 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861715 (_91747 : int) : (term148 _91747) = (term149 _91747).
Proof. exact (@lem6861714 (term76 _91747) term141). Qed.
Lemma lem6861717 (x : int) (y : int) : (term138 x y) = (term139 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6861718 (_91747 : int) : (term137 _91747) = (term140 _91747).
Proof. exact (@lem6861717 _91747 term141). Qed.
Lemma lem6861720 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861721 : term142 = term143.
Proof. exact (@lem6861720 term11). Qed.
Lemma lem6861722 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6861723 (_91747 : int) : (term140 _91747) = (term145 _91747).
Proof. exact (MK_COMB (@lem6861722 _91747) (@lem6861721)). Qed.
Lemma lem6861724 (_91747 : int) : (term137 _91747) = (term145 _91747).
Proof. exact (TRANS (@lem6861718 _91747) (@lem6861723 _91747)). Qed.
Lemma lem6861725 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6861726 (_91747 : int) : (term150 _91747) = (term151 _91747).
Proof. exact (MK_COMB (@lem6861725) (@lem6861724 _91747)). Qed.
Lemma lem6861728 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861729 : term142 = term143.
Proof. exact (@lem6861728 term11). Qed.
Lemma lem6861730 (_91747 : int) : (term149 _91747) = (term152 _91747).
Proof. exact (MK_COMB (@lem6861726 _91747) (@lem6861729)). Qed.
Lemma lem6861731 (_91747 : int) : (term148 _91747) = (term152 _91747).
Proof. exact (TRANS (@lem6861715 _91747) (@lem6861730 _91747)). Qed.
Lemma lem6861732 (_91747 : int) : (term78 _91747) = (term152 _91747).
Proof. exact (TRANS (@lem6861712 _91747) (@lem6861731 _91747)). Qed.
Lemma lem6861735 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem6861736 (_91746 : int) : (_91746 = term50) = ((real_of_int _91746) = term132).
Proof. exact (@lem6861735 _91746 term50). Qed.
Lemma lem6861740 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861741 : term132 = term133.
Proof. exact (@lem6861740 (NUMERAL 0)). Qed.
Lemma lem6861742 (_91746 : int) : (term146 _91746) = (term146 _91746).
Proof. exact (eq_refl (term146 _91746)). Qed.
Lemma lem6861743 (_91746 : int) : ((real_of_int _91746) = term132) = ((real_of_int _91746) = term133).
Proof. exact (MK_COMB (@lem6861742 _91746) (@lem6861741)). Qed.
Lemma lem6861745 (_91746 : int) : (_91746 = term50) = ((real_of_int _91746) = term133).
Proof. exact (TRANS (@lem6861736 _91746) (@lem6861743 _91746)). Qed.
Lemma lem6861746 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861747 (_91747 : int) : (term81 _91747) = (term153 _91747).
Proof. exact (MK_COMB (@lem6861746) (@lem6861732 _91747)). Qed.
Lemma lem6861748 (_91747 : int) (_91746 : int) : (term83 _91747 _91746) = (term154 _91747 _91746).
Proof. exact (MK_COMB (@lem6861747 _91747) (@lem6861745 _91746)). Qed.
Lemma lem6861749 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861750 (_91747 : int) (_91746 : int) : (term88 _91747 _91746) = (term155 _91747 _91746).
Proof. exact (MK_COMB (@lem6861749) (@lem6861709 _91747 _91746)). Qed.
Lemma lem6861751 (_91747 : int) (_91746 : int) : (term90 _91747 _91746) = (term156 _91747 _91746).
Proof. exact (MK_COMB (@lem6861750 _91747 _91746) (@lem6861748 _91747 _91746)). Qed.
Lemma lem6861753 (y : int) (x : int) : (term104 x y) = (int_le y x).
Proof. exact (proj1 (@lem2318496 x y)). Qed.
Lemma lem6861754 (_91747 : int) (_91746 : int) : (term104 _91746 _91747) = (int_le _91747 _91746).
Proof. exact (@lem6861753 _91747 _91746). Qed.
Lemma lem6861756 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861757 (_91747 : int) (_91746 : int) : (int_le _91747 _91746) = (term129 _91747 _91746).
Proof. exact (@lem6861756 _91747 _91746). Qed.
Lemma lem6861758 (_91747 : int) (_91746 : int) : (term104 _91746 _91747) = (term129 _91747 _91746).
Proof. exact (TRANS (@lem6861754 _91747 _91746) (@lem6861757 _91747 _91746)). Qed.
Lemma lem6861761 (x : int) (y : int) : (x = y) = ((real_of_int x) = (real_of_int y)).
Proof. exact (EQ_MP (@lem2318575 x y) (@lem2318574 x y)). Qed.
Lemma lem6861762 (_91747 : int) : (_91747 = term50) = ((real_of_int _91747) = term132).
Proof. exact (@lem6861761 _91747 term50). Qed.
Lemma lem6861766 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861767 : term132 = term133.
Proof. exact (@lem6861766 (NUMERAL 0)). Qed.
Lemma lem6861768 (_91747 : int) : (term146 _91747) = (term146 _91747).
Proof. exact (eq_refl (term146 _91747)). Qed.
Lemma lem6861769 (_91747 : int) : ((real_of_int _91747) = term132) = ((real_of_int _91747) = term133).
Proof. exact (MK_COMB (@lem6861768 _91747) (@lem6861767)). Qed.
Lemma lem6861771 (_91747 : int) : (_91747 = term50) = ((real_of_int _91747) = term133).
Proof. exact (TRANS (@lem6861762 _91747) (@lem6861769 _91747)). Qed.
Lemma lem6861772 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861773 (_91747 : int) (_91746 : int) : (term94 _91746 _91747) = (term157 _91747 _91746).
Proof. exact (MK_COMB (@lem6861772) (@lem6861758 _91747 _91746)). Qed.
Lemma lem6861774 (_91746 : int) (_91747 : int) : (term96 _91746 _91747) = (term158 _91746 _91747).
Proof. exact (MK_COMB (@lem6861773 _91747 _91746) (@lem6861771 _91747)). Qed.
Lemma lem6861776 (x : int) (y : int) : (int_lt x y) = (term147 x y).
Proof. exact (proj2 (@lem2318497 x y)). Qed.
Lemma lem6861777 (_91746 : int) (_91747 : int) : (int_lt _91746 _91747) = (term147 _91746 _91747).
Proof. exact (@lem6861776 _91746 _91747). Qed.
Lemma lem6861779 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861780 (_91746 : int) (_91747 : int) : (term147 _91746 _91747) = (term159 _91746 _91747).
Proof. exact (@lem6861779 (term76 _91746) _91747). Qed.
Lemma lem6861782 (x : int) (y : int) : (term138 x y) = (term139 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6861783 (_91746 : int) : (term137 _91746) = (term140 _91746).
Proof. exact (@lem6861782 _91746 term141). Qed.
Lemma lem6861785 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861786 : term142 = term143.
Proof. exact (@lem6861785 term11). Qed.
Lemma lem6861787 (_91746 : int) : (term144 _91746) = (term144 _91746).
Proof. exact (eq_refl (term144 _91746)). Qed.
Lemma lem6861788 (_91746 : int) : (term140 _91746) = (term145 _91746).
Proof. exact (MK_COMB (@lem6861787 _91746) (@lem6861786)). Qed.
Lemma lem6861789 (_91746 : int) : (term137 _91746) = (term145 _91746).
Proof. exact (TRANS (@lem6861783 _91746) (@lem6861788 _91746)). Qed.
Lemma lem6861790 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6861791 (_91746 : int) : (term150 _91746) = (term151 _91746).
Proof. exact (MK_COMB (@lem6861790) (@lem6861789 _91746)). Qed.
Lemma lem6861792 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6861793 (_91746 : int) (_91747 : int) : (term159 _91746 _91747) = (term160 _91746 _91747).
Proof. exact (MK_COMB (@lem6861791 _91746) (@lem6861792 _91747)). Qed.
Lemma lem6861794 (_91746 : int) (_91747 : int) : (term147 _91746 _91747) = (term160 _91746 _91747).
Proof. exact (TRANS (@lem6861780 _91746 _91747) (@lem6861793 _91746 _91747)). Qed.
Lemma lem6861795 (_91746 : int) (_91747 : int) : (int_lt _91746 _91747) = (term160 _91746 _91747).
Proof. exact (TRANS (@lem6861777 _91746 _91747) (@lem6861794 _91746 _91747)). Qed.
Lemma lem6861797 (y : int) (x : int) : (term161 x y) = (term162 y x).
Proof. exact (proj1 (@lem2318497 x y)). Qed.
Lemma lem6861798 (_91747 : int) : (term86 _91747) = (term163 _91747).
Proof. exact (@lem6861797 term50 _91747). Qed.
Lemma lem6861800 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861801 (_91747 : int) : (term164 _91747) = (term165 _91747).
Proof. exact (@lem6861800 (term76 _91747) term50). Qed.
Lemma lem6861803 (x : int) (y : int) : (term138 x y) = (term139 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6861804 (_91747 : int) : (term137 _91747) = (term140 _91747).
Proof. exact (@lem6861803 _91747 term141). Qed.
Lemma lem6861806 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861807 : term142 = term143.
Proof. exact (@lem6861806 term11). Qed.
Lemma lem6861808 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6861809 (_91747 : int) : (term140 _91747) = (term145 _91747).
Proof. exact (MK_COMB (@lem6861808 _91747) (@lem6861807)). Qed.
Lemma lem6861810 (_91747 : int) : (term137 _91747) = (term145 _91747).
Proof. exact (TRANS (@lem6861804 _91747) (@lem6861809 _91747)). Qed.
Lemma lem6861811 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6861812 (_91747 : int) : (term150 _91747) = (term151 _91747).
Proof. exact (MK_COMB (@lem6861811) (@lem6861810 _91747)). Qed.
Lemma lem6861814 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861815 : term132 = term133.
Proof. exact (@lem6861814 (NUMERAL 0)). Qed.
Lemma lem6861816 (_91747 : int) : (term165 _91747) = (term166 _91747).
Proof. exact (MK_COMB (@lem6861812 _91747) (@lem6861815)). Qed.
Lemma lem6861817 (_91747 : int) : (term164 _91747) = (term166 _91747).
Proof. exact (TRANS (@lem6861801 _91747) (@lem6861816 _91747)). Qed.
Lemma lem6861818 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861819 (_91747 : int) : (term167 _91747) = (term168 _91747).
Proof. exact (MK_COMB (@lem6861818) (@lem6861817 _91747)). Qed.
Lemma lem6861821 (x : int) (y : int) : (int_le x y) = (term129 x y).
Proof. exact (EQ_MP (@lem2318569 x y) (@lem2318568 x y)). Qed.
Lemma lem6861822 (_91747 : int) : (term169 _91747) = (term170 _91747).
Proof. exact (@lem6861821 term171 _91747). Qed.
Lemma lem6861824 (x : int) (y : int) : (term138 x y) = (term139 x y).
Proof. exact (EQ_MP (@lem2318539 x y) (@lem2318538 x y)). Qed.
Lemma lem6861825 : term172 = term173.
Proof. exact (@lem6861824 term50 term141). Qed.
Lemma lem6861827 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861828 : term132 = term133.
Proof. exact (@lem6861827 (NUMERAL 0)). Qed.
Lemma lem6861829 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6861830 : term174 = term175.
Proof. exact (MK_COMB (@lem6861829) (@lem6861828)). Qed.
Lemma lem6861832 (n : nat) : (term131 n) = (real_of_num n).
Proof. exact (EQ_MP (@lem2318545 n) (@lem2318544 n)). Qed.
Lemma lem6861833 : term142 = term143.
Proof. exact (@lem6861832 term11). Qed.
Lemma lem6861834 : term173 = term176.
Proof. exact (MK_COMB (@lem6861830) (@lem6861833)). Qed.
Lemma lem6861835 : term172 = term176.
Proof. exact (TRANS (@lem6861825) (@lem6861834)). Qed.
Lemma lem6861836 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6861837 : term177 = term178.
Proof. exact (MK_COMB (@lem6861836) (@lem6861835)). Qed.
Lemma lem6861838 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6861839 (_91747 : int) : (term170 _91747) = (term179 _91747).
Proof. exact (MK_COMB (@lem6861837) (@lem6861838 _91747)). Qed.
Lemma lem6861840 (_91747 : int) : (term169 _91747) = (term179 _91747).
Proof. exact (TRANS (@lem6861822 _91747) (@lem6861839 _91747)). Qed.
Lemma lem6861841 (_91747 : int) : (term163 _91747) = (term180 _91747).
Proof. exact (MK_COMB (@lem6861819 _91747) (@lem6861840 _91747)). Qed.
Lemma lem6861842 (_91747 : int) : (term86 _91747) = (term180 _91747).
Proof. exact (TRANS (@lem6861798 _91747) (@lem6861841 _91747)). Qed.
Lemma lem6861843 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6861844 (_91746 : int) (_91747 : int) : (term100 _91746 _91747) = (term181 _91746 _91747).
Proof. exact (MK_COMB (@lem6861843) (@lem6861795 _91746 _91747)). Qed.
Lemma lem6861845 (_91746 : int) (_91747 : int) : (term102 _91746 _91747) = (term182 _91746 _91747).
Proof. exact (MK_COMB (@lem6861844 _91746 _91747) (@lem6861842 _91747)). Qed.
Lemma lem6861846 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861847 (_91746 : int) (_91747 : int) : (term106 _91746 _91747) = (term183 _91746 _91747).
Proof. exact (MK_COMB (@lem6861846) (@lem6861774 _91746 _91747)). Qed.
Lemma lem6861848 (_91746 : int) (_91747 : int) : (term108 _91746 _91747) = (term184 _91746 _91747).
Proof. exact (MK_COMB (@lem6861847 _91746 _91747) (@lem6861845 _91746 _91747)). Qed.
Lemma lem6861849 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861850 (_91747 : int) (_91746 : int) : (term113 _91747 _91746) = (term185 _91747 _91746).
Proof. exact (MK_COMB (@lem6861849) (@lem6861751 _91747 _91746)). Qed.
Lemma lem6861851 (_91746 : int) (_91747 : int) : (term115 _91746 _91747) = (term186 _91746 _91747).
Proof. exact (MK_COMB (@lem6861850 _91747 _91746) (@lem6861848 _91746 _91747)). Qed.
Lemma lem6861852 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861853 (_91747 : int) : (term119 _91747) = (term187 _91747).
Proof. exact (MK_COMB (@lem6861852) (@lem6861690 _91747)). Qed.
Lemma lem6861854 (_91746 : int) (_91747 : int) : (term121 _91746 _91747) = (term188 _91746 _91747).
Proof. exact (MK_COMB (@lem6861853 _91747) (@lem6861851 _91746 _91747)). Qed.
Lemma lem6861855 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6861856 (_91746 : int) : (term119 _91746) = (term187 _91746).
Proof. exact (MK_COMB (@lem6861855) (@lem6861677 _91746)). Qed.
Lemma lem6861857 (_91746 : int) (_91747 : int) : (term126 _91746 _91747) = (term189 _91746 _91747).
Proof. exact (MK_COMB (@lem6861856 _91746) (@lem6861854 _91746 _91747)). Qed.
Lemma lem6861858 (_91746 : int) (_91747 : int) : (term127 _91746 _91747) = (term189 _91746 _91747).
Proof. exact (TRANS (@lem6861664 _91746 _91747) (@lem6861857 _91746 _91747)). Qed.
Lemma lem6861862 (t : Prop) : (term190 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6861958 (_91746 : int) (_91747 : int) : (term191 _91746 _91747) = (term189 _91746 _91747).
Proof. exact (@lem6861862 (term189 _91746 _91747)). Qed.
Lemma lem6861959 (_91746 : int) : (term136 _91746) = (term192 _91746).
Proof. exact (@lem1988287 (real_of_int _91746) term133). Qed.
Lemma lem6861965 (_91746 : int) : (term193 _91746) = (term194 _91746).
Proof. exact (@lem1982792 (real_of_int _91746) term133). Qed.
Lemma lem6861967 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6861968 : term133 = term196.
Proof. exact (@lem6861967 (NUMERAL 0)). Qed.
Lemma lem6861970 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6861971 : term199 = term200.
Proof. exact (@lem6861970 term11). Qed.
Lemma lem6861972 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6861973 : term201 = term202.
Proof. exact (MK_COMB (@lem6861972) (@lem6861971)). Qed.
Lemma lem6861974 : term203 = term204.
Proof. exact (MK_COMB (@lem6861973) (@lem6861968)). Qed.
Lemma lem6861975 : term204 = term205.
Proof. exact (@lem1981613 term199 term133 term143 term143). Qed.
Lemma lem6861977 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6861978 : term208 = term209.
Proof. exact (@lem6861977 term11 term11). Qed.
Lemma lem6861979 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6861980 : term211 = term11.
Proof. exact (EQ_MP (@lem6861979) (@lem940073)). Qed.
Lemma lem6861981 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6861982 : term209 = term143.
Proof. exact (MK_COMB (@lem6861981) (@lem6861980)). Qed.
Lemma lem6861983 : term208 = term143.
Proof. exact (TRANS (@lem6861978) (@lem6861982)). Qed.
Lemma lem6861985 (x : nat) : (term212 x) = term133.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6861986 : term203 = term133.
Proof. exact (@lem6861985 term11). Qed.
Lemma lem6861987 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6861988 : term213 = term214.
Proof. exact (MK_COMB (@lem6861987) (@lem6861986)). Qed.
Lemma lem6861989 : term205 = term196.
Proof. exact (MK_COMB (@lem6861988) (@lem6861983)). Qed.
Lemma lem6861990 : term204 = term196.
Proof. exact (TRANS (@lem6861975) (@lem6861989)). Qed.
Lemma lem6861991 : term203 = term196.
Proof. exact (TRANS (@lem6861974) (@lem6861990)). Qed.
Lemma lem6861993 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6861994 : term196 = term133.
Proof. exact (@lem6861993 term133). Qed.
Lemma lem6861995 : term203 = term133.
Proof. exact (TRANS (@lem6861991) (@lem6861994)). Qed.
Lemma lem6861996 (_91746 : int) : (term144 _91746) = (term144 _91746).
Proof. exact (eq_refl (term144 _91746)). Qed.
Lemma lem6861997 (_91746 : int) : (term194 _91746) = (term216 _91746).
Proof. exact (MK_COMB (@lem6861996 _91746) (@lem6861995)). Qed.
Lemma lem6861998 (_91746 : int) : (term216 _91746) = (real_of_int _91746).
Proof. exact (@lem1982723 (real_of_int _91746)). Qed.
Lemma lem6861999 (_91746 : int) : (term194 _91746) = (real_of_int _91746).
Proof. exact (TRANS (@lem6861997 _91746) (@lem6861998 _91746)). Qed.
Lemma lem6862001 (_91746 : int) : (term193 _91746) = (real_of_int _91746).
Proof. exact (TRANS (@lem6861965 _91746) (@lem6861999 _91746)). Qed.
Lemma lem6862002 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862003 (_91746 : int) : (term217 _91746) = (term218 _91746).
Proof. exact (MK_COMB (@lem6862002) (@lem6862001 _91746)). Qed.
Lemma lem6862004 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862005 (_91746 : int) : (term192 _91746) = (term219 _91746).
Proof. exact (MK_COMB (@lem6862003 _91746) (@lem6862004)). Qed.
Lemma lem6862006 (_91746 : int) : (term136 _91746) = (term219 _91746).
Proof. exact (TRANS (@lem6861959 _91746) (@lem6862005 _91746)). Qed.
Lemma lem6862007 (_91747 : int) : (term136 _91747) = (term192 _91747).
Proof. exact (@lem1988287 (real_of_int _91747) term133). Qed.
Lemma lem6862013 (_91747 : int) : (term193 _91747) = (term194 _91747).
Proof. exact (@lem1982792 (real_of_int _91747) term133). Qed.
Lemma lem6862015 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862016 : term133 = term196.
Proof. exact (@lem6862015 (NUMERAL 0)). Qed.
Lemma lem6862018 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862019 : term199 = term200.
Proof. exact (@lem6862018 term11). Qed.
Lemma lem6862020 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862021 : term201 = term202.
Proof. exact (MK_COMB (@lem6862020) (@lem6862019)). Qed.
Lemma lem6862022 : term203 = term204.
Proof. exact (MK_COMB (@lem6862021) (@lem6862016)). Qed.
Lemma lem6862023 : term204 = term205.
Proof. exact (@lem1981613 term199 term133 term143 term143). Qed.
Lemma lem6862025 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862026 : term208 = term209.
Proof. exact (@lem6862025 term11 term11). Qed.
Lemma lem6862027 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862028 : term211 = term11.
Proof. exact (EQ_MP (@lem6862027) (@lem940073)). Qed.
Lemma lem6862029 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862030 : term209 = term143.
Proof. exact (MK_COMB (@lem6862029) (@lem6862028)). Qed.
Lemma lem6862031 : term208 = term143.
Proof. exact (TRANS (@lem6862026) (@lem6862030)). Qed.
Lemma lem6862033 (x : nat) : (term212 x) = term133.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6862034 : term203 = term133.
Proof. exact (@lem6862033 term11). Qed.
Lemma lem6862035 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862036 : term213 = term214.
Proof. exact (MK_COMB (@lem6862035) (@lem6862034)). Qed.
Lemma lem6862037 : term205 = term196.
Proof. exact (MK_COMB (@lem6862036) (@lem6862031)). Qed.
Lemma lem6862038 : term204 = term196.
Proof. exact (TRANS (@lem6862023) (@lem6862037)). Qed.
Lemma lem6862039 : term203 = term196.
Proof. exact (TRANS (@lem6862022) (@lem6862038)). Qed.
Lemma lem6862041 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862042 : term196 = term133.
Proof. exact (@lem6862041 term133). Qed.
Lemma lem6862043 : term203 = term133.
Proof. exact (TRANS (@lem6862039) (@lem6862042)). Qed.
Lemma lem6862044 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6862045 (_91747 : int) : (term194 _91747) = (term216 _91747).
Proof. exact (MK_COMB (@lem6862044 _91747) (@lem6862043)). Qed.
Lemma lem6862046 (_91747 : int) : (term216 _91747) = (real_of_int _91747).
Proof. exact (@lem1982723 (real_of_int _91747)). Qed.
Lemma lem6862047 (_91747 : int) : (term194 _91747) = (real_of_int _91747).
Proof. exact (TRANS (@lem6862045 _91747) (@lem6862046 _91747)). Qed.
Lemma lem6862049 (_91747 : int) : (term193 _91747) = (real_of_int _91747).
Proof. exact (TRANS (@lem6862013 _91747) (@lem6862047 _91747)). Qed.
Lemma lem6862050 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862051 (_91747 : int) : (term217 _91747) = (term218 _91747).
Proof. exact (MK_COMB (@lem6862050) (@lem6862049 _91747)). Qed.
Lemma lem6862052 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862053 (_91747 : int) : (term192 _91747) = (term219 _91747).
Proof. exact (MK_COMB (@lem6862051 _91747) (@lem6862052)). Qed.
Lemma lem6862054 (_91747 : int) : (term136 _91747) = (term219 _91747).
Proof. exact (TRANS (@lem6862007 _91747) (@lem6862053 _91747)). Qed.
Lemma lem6862055 (_91747 : int) (_91746 : int) : ((real_of_int _91747) = (term145 _91746)) = ((term220 _91747 _91746) = term133).
Proof. exact (@lem1988293 (real_of_int _91747) (term145 _91746)). Qed.
Lemma lem6862067 (_91747 : int) (_91746 : int) : (term220 _91747 _91746) = (term221 _91747 _91746).
Proof. exact (@lem1982792 (real_of_int _91747) (term145 _91746)). Qed.
Lemma lem6862068 (_91746 : int) : (term222 _91746) = (term223 _91746).
Proof. exact (@lem1982781 (real_of_int _91746) term199 term143). Qed.
Lemma lem6862070 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862071 : term143 = term224.
Proof. exact (@lem6862070 term11). Qed.
Lemma lem6862073 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862074 : term199 = term200.
Proof. exact (@lem6862073 term11). Qed.
Lemma lem6862075 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862076 : term201 = term202.
Proof. exact (MK_COMB (@lem6862075) (@lem6862074)). Qed.
Lemma lem6862077 : term225 = term226.
Proof. exact (MK_COMB (@lem6862076) (@lem6862071)). Qed.
Lemma lem6862078 : term226 = term227.
Proof. exact (@lem1981613 term199 term143 term143 term143). Qed.
Lemma lem6862080 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862081 : term208 = term209.
Proof. exact (@lem6862080 term11 term11). Qed.
Lemma lem6862082 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862083 : term211 = term11.
Proof. exact (EQ_MP (@lem6862082) (@lem940073)). Qed.
Lemma lem6862084 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862085 : term209 = term143.
Proof. exact (MK_COMB (@lem6862084) (@lem6862083)). Qed.
Lemma lem6862086 : term208 = term143.
Proof. exact (TRANS (@lem6862081) (@lem6862085)). Qed.
Lemma lem6862088 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6862089 : term225 = term230.
Proof. exact (@lem6862088 term11 term11). Qed.
Lemma lem6862090 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862091 : term211 = term11.
Proof. exact (EQ_MP (@lem6862090) (@lem940073)). Qed.
Lemma lem6862092 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862093 : term209 = term143.
Proof. exact (MK_COMB (@lem6862092) (@lem6862091)). Qed.
Lemma lem6862094 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6862095 : term230 = term199.
Proof. exact (MK_COMB (@lem6862094) (@lem6862093)). Qed.
Lemma lem6862096 : term225 = term199.
Proof. exact (TRANS (@lem6862089) (@lem6862095)). Qed.
Lemma lem6862097 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862098 : term231 = term232.
Proof. exact (MK_COMB (@lem6862097) (@lem6862096)). Qed.
Lemma lem6862099 : term227 = term200.
Proof. exact (MK_COMB (@lem6862098) (@lem6862086)). Qed.
Lemma lem6862100 : term226 = term200.
Proof. exact (TRANS (@lem6862078) (@lem6862099)). Qed.
Lemma lem6862101 : term225 = term200.
Proof. exact (TRANS (@lem6862077) (@lem6862100)). Qed.
Lemma lem6862103 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862104 : term200 = term199.
Proof. exact (@lem6862103 term199). Qed.
Lemma lem6862105 : term225 = term199.
Proof. exact (TRANS (@lem6862101) (@lem6862104)). Qed.
Lemma lem6862108 (_91746 : int) : (term233 _91746) = (term233 _91746).
Proof. exact (eq_refl (term233 _91746)). Qed.
Lemma lem6862109 (_91746 : int) : (term223 _91746) = (term234 _91746).
Proof. exact (MK_COMB (@lem6862108 _91746) (@lem6862105)). Qed.
Lemma lem6862110 (_91746 : int) : (term222 _91746) = (term234 _91746).
Proof. exact (TRANS (@lem6862068 _91746) (@lem6862109 _91746)). Qed.
Lemma lem6862111 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6862112 (_91747 : int) (_91746 : int) : (term221 _91747 _91746) = (term235 _91747 _91746).
Proof. exact (MK_COMB (@lem6862111 _91747) (@lem6862110 _91746)). Qed.
Lemma lem6862117 (_91746 : int) (_91747 : int) : (term235 _91747 _91746) = (term236 _91746 _91747).
Proof. exact (@lem1982757 (term237 _91746) (real_of_int _91747) term199). Qed.
Lemma lem6862118 (_91746 : int) (_91747 : int) : (term221 _91747 _91746) = (term236 _91746 _91747).
Proof. exact (TRANS (@lem6862112 _91747 _91746) (@lem6862117 _91746 _91747)). Qed.
Lemma lem6862120 (_91746 : int) (_91747 : int) : (term220 _91747 _91746) = (term236 _91746 _91747).
Proof. exact (TRANS (@lem6862067 _91747 _91746) (@lem6862118 _91746 _91747)). Qed.
Lemma lem6862121 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6862122 (_91746 : int) (_91747 : int) : (term238 _91747 _91746) = (term239 _91746 _91747).
Proof. exact (MK_COMB (@lem6862121) (@lem6862120 _91746 _91747)). Qed.
Lemma lem6862123 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862124 (_91746 : int) (_91747 : int) : ((term220 _91747 _91746) = term133) = ((term236 _91746 _91747) = term133).
Proof. exact (MK_COMB (@lem6862122 _91746 _91747) (@lem6862123)). Qed.
Lemma lem6862125 (_91746 : int) (_91747 : int) : ((real_of_int _91747) = (term145 _91746)) = ((term236 _91746 _91747) = term133).
Proof. exact (TRANS (@lem6862055 _91747 _91746) (@lem6862124 _91746 _91747)). Qed.
Lemma lem6862126 (_91747 : int) : (term152 _91747) = (term240 _91747).
Proof. exact (@lem1988287 term143 (term145 _91747)). Qed.
Lemma lem6862138 (_91747 : int) : (term241 _91747) = (term242 _91747).
Proof. exact (@lem1982792 term143 (term145 _91747)). Qed.
Lemma lem6862139 (_91747 : int) : (term222 _91747) = (term223 _91747).
Proof. exact (@lem1982781 (real_of_int _91747) term199 term143). Qed.
Lemma lem6862141 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862142 : term143 = term224.
Proof. exact (@lem6862141 term11). Qed.
Lemma lem6862144 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862145 : term199 = term200.
Proof. exact (@lem6862144 term11). Qed.
Lemma lem6862146 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862147 : term201 = term202.
Proof. exact (MK_COMB (@lem6862146) (@lem6862145)). Qed.
Lemma lem6862148 : term225 = term226.
Proof. exact (MK_COMB (@lem6862147) (@lem6862142)). Qed.
Lemma lem6862149 : term226 = term227.
Proof. exact (@lem1981613 term199 term143 term143 term143). Qed.
Lemma lem6862151 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862152 : term208 = term209.
Proof. exact (@lem6862151 term11 term11). Qed.
Lemma lem6862153 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862154 : term211 = term11.
Proof. exact (EQ_MP (@lem6862153) (@lem940073)). Qed.
Lemma lem6862155 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862156 : term209 = term143.
Proof. exact (MK_COMB (@lem6862155) (@lem6862154)). Qed.
Lemma lem6862157 : term208 = term143.
Proof. exact (TRANS (@lem6862152) (@lem6862156)). Qed.
Lemma lem6862159 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6862160 : term225 = term230.
Proof. exact (@lem6862159 term11 term11). Qed.
Lemma lem6862161 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862162 : term211 = term11.
Proof. exact (EQ_MP (@lem6862161) (@lem940073)). Qed.
Lemma lem6862163 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862164 : term209 = term143.
Proof. exact (MK_COMB (@lem6862163) (@lem6862162)). Qed.
Lemma lem6862165 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6862166 : term230 = term199.
Proof. exact (MK_COMB (@lem6862165) (@lem6862164)). Qed.
Lemma lem6862167 : term225 = term199.
Proof. exact (TRANS (@lem6862160) (@lem6862166)). Qed.
Lemma lem6862168 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862169 : term231 = term232.
Proof. exact (MK_COMB (@lem6862168) (@lem6862167)). Qed.
Lemma lem6862170 : term227 = term200.
Proof. exact (MK_COMB (@lem6862169) (@lem6862157)). Qed.
Lemma lem6862171 : term226 = term200.
Proof. exact (TRANS (@lem6862149) (@lem6862170)). Qed.
Lemma lem6862172 : term225 = term200.
Proof. exact (TRANS (@lem6862148) (@lem6862171)). Qed.
Lemma lem6862174 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862175 : term200 = term199.
Proof. exact (@lem6862174 term199). Qed.
Lemma lem6862176 : term225 = term199.
Proof. exact (TRANS (@lem6862172) (@lem6862175)). Qed.
Lemma lem6862179 (_91747 : int) : (term233 _91747) = (term233 _91747).
Proof. exact (eq_refl (term233 _91747)). Qed.
Lemma lem6862180 (_91747 : int) : (term223 _91747) = (term234 _91747).
Proof. exact (MK_COMB (@lem6862179 _91747) (@lem6862176)). Qed.
Lemma lem6862181 (_91747 : int) : (term222 _91747) = (term234 _91747).
Proof. exact (TRANS (@lem6862139 _91747) (@lem6862180 _91747)). Qed.
Lemma lem6862182 : term243 = term243.
Proof. exact (eq_refl term243). Qed.
Lemma lem6862183 (_91747 : int) : (term242 _91747) = (term244 _91747).
Proof. exact (MK_COMB (@lem6862182) (@lem6862181 _91747)). Qed.
Lemma lem6862184 (_91747 : int) : (term244 _91747) = (term245 _91747).
Proof. exact (@lem1982757 (term237 _91747) term143 term199). Qed.
Lemma lem6862186 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862187 : term199 = term200.
Proof. exact (@lem6862186 term11). Qed.
Lemma lem6862189 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862190 : term143 = term224.
Proof. exact (@lem6862189 term11). Qed.
Lemma lem6862191 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6862192 : term243 = term246.
Proof. exact (MK_COMB (@lem6862191) (@lem6862190)). Qed.
Lemma lem6862193 : term247 = term248.
Proof. exact (MK_COMB (@lem6862192) (@lem6862187)). Qed.
Lemma lem6862194 : term249.
Proof. exact (@lem1981473 term143 term143 term199 term143 term133 term143). Qed.
Lemma lem6862196 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6862197 : term251 = term252.
Proof. exact (@lem6862196 (NUMERAL 0) term11). Qed.
Lemma lem6862198 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6862199 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6862200 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6862199 h1) (fun h1 : term252 = True => @lem6862198)). Qed.
Lemma lem6862201 : term252 = True.
Proof. exact (EQ_MP (@lem6862200) (@lem6862198)). Qed.
Lemma lem6862202 : term251 = True.
Proof. exact (TRANS (@lem6862197) (@lem6862201)). Qed.
Lemma lem6862203 : True = term251.
Proof. exact (SYM (@lem6862202)). Qed.
Lemma lem6862204 : term251.
Proof. exact (EQ_MP (@lem6862203) (@lem0)). Qed.
Lemma lem6862205 : term254.
Proof. exact (@lem6862194 (@lem6862204)). Qed.
Lemma lem6862207 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6862208 : term251 = term252.
Proof. exact (@lem6862207 (NUMERAL 0) term11). Qed.
Lemma lem6862209 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6862210 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6862211 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6862210 h1) (fun h1 : term252 = True => @lem6862209)). Qed.
Lemma lem6862212 : term252 = True.
Proof. exact (EQ_MP (@lem6862211) (@lem6862209)). Qed.
Lemma lem6862213 : term251 = True.
Proof. exact (TRANS (@lem6862208) (@lem6862212)). Qed.
Lemma lem6862214 : True = term251.
Proof. exact (SYM (@lem6862213)). Qed.
Lemma lem6862215 : term251.
Proof. exact (EQ_MP (@lem6862214) (@lem0)). Qed.
Lemma lem6862216 : term255.
Proof. exact (@lem6862205 (@lem6862215)). Qed.
Lemma lem6862218 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6862219 : term251 = term252.
Proof. exact (@lem6862218 (NUMERAL 0) term11). Qed.
Lemma lem6862220 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6862221 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6862222 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6862221 h1) (fun h1 : term252 = True => @lem6862220)). Qed.
Lemma lem6862223 : term252 = True.
Proof. exact (EQ_MP (@lem6862222) (@lem6862220)). Qed.
Lemma lem6862224 : term251 = True.
Proof. exact (TRANS (@lem6862219) (@lem6862223)). Qed.
Lemma lem6862225 : True = term251.
Proof. exact (SYM (@lem6862224)). Qed.
Lemma lem6862226 : term251.
Proof. exact (EQ_MP (@lem6862225) (@lem0)). Qed.
Lemma lem6862227 : term256.
Proof. exact (@lem6862216 (@lem6862226)). Qed.
Lemma lem6862229 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6862230 : term225 = term230.
Proof. exact (@lem6862229 term11 term11). Qed.
Lemma lem6862231 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862232 : term211 = term11.
Proof. exact (EQ_MP (@lem6862231) (@lem940073)). Qed.
Lemma lem6862233 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862234 : term209 = term143.
Proof. exact (MK_COMB (@lem6862233) (@lem6862232)). Qed.
Lemma lem6862235 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6862236 : term230 = term199.
Proof. exact (MK_COMB (@lem6862235) (@lem6862234)). Qed.
Lemma lem6862237 : term225 = term199.
Proof. exact (TRANS (@lem6862230) (@lem6862236)). Qed.
Lemma lem6862239 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862240 : term208 = term209.
Proof. exact (@lem6862239 term11 term11). Qed.
Lemma lem6862241 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862242 : term211 = term11.
Proof. exact (EQ_MP (@lem6862241) (@lem940073)). Qed.
Lemma lem6862243 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862244 : term209 = term143.
Proof. exact (MK_COMB (@lem6862243) (@lem6862242)). Qed.
Lemma lem6862245 : term208 = term143.
Proof. exact (TRANS (@lem6862240) (@lem6862244)). Qed.
Lemma lem6862246 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6862247 : term257 = term243.
Proof. exact (MK_COMB (@lem6862246) (@lem6862245)). Qed.
Lemma lem6862248 : term258 = term247.
Proof. exact (MK_COMB (@lem6862247) (@lem6862237)). Qed.
Lemma lem6862250 (m : nat) : (term259 m) = term133.
Proof. exact (proj2 (@lem1367303 m)). Qed.
Lemma lem6862251 : term247 = term133.
Proof. exact (@lem6862250 term11). Qed.
Lemma lem6862252 : term258 = term133.
Proof. exact (TRANS (@lem6862248) (@lem6862251)). Qed.
Lemma lem6862253 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862254 : term260 = term261.
Proof. exact (MK_COMB (@lem6862253) (@lem6862252)). Qed.
Lemma lem6862255 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6862256 : term262 = term263.
Proof. exact (MK_COMB (@lem6862254) (@lem6862255)). Qed.
Lemma lem6862258 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6862259 : term263 = term133.
Proof. exact (@lem6862258 term11). Qed.
Lemma lem6862260 : term262 = term133.
Proof. exact (TRANS (@lem6862256) (@lem6862259)). Qed.
Lemma lem6862262 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862263 : term208 = term209.
Proof. exact (@lem6862262 term11 term11). Qed.
Lemma lem6862264 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862265 : term211 = term11.
Proof. exact (EQ_MP (@lem6862264) (@lem940073)). Qed.
Lemma lem6862266 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862267 : term209 = term143.
Proof. exact (MK_COMB (@lem6862266) (@lem6862265)). Qed.
Lemma lem6862268 : term208 = term143.
Proof. exact (TRANS (@lem6862263) (@lem6862267)). Qed.
Lemma lem6862269 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6862270 : term265 = term263.
Proof. exact (MK_COMB (@lem6862269) (@lem6862268)). Qed.
Lemma lem6862272 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6862273 : term263 = term133.
Proof. exact (@lem6862272 term11). Qed.
Lemma lem6862274 : term265 = term133.
Proof. exact (TRANS (@lem6862270) (@lem6862273)). Qed.
Lemma lem6862275 : term133 = term265.
Proof. exact (SYM (@lem6862274)). Qed.
Lemma lem6862276 : term262 = term265.
Proof. exact (TRANS (@lem6862260) (@lem6862275)). Qed.
Lemma lem6862277 : term248 = term196.
Proof. exact (@lem6862227 (@lem6862276)). Qed.
Lemma lem6862278 : term247 = term196.
Proof. exact (TRANS (@lem6862193) (@lem6862277)). Qed.
Lemma lem6862280 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6862281 : term196 = term133.
Proof. exact (@lem6862280 term133). Qed.
Lemma lem6862282 : term247 = term133.
Proof. exact (TRANS (@lem6862278) (@lem6862281)). Qed.
Lemma lem6862283 (_91747 : int) : (term233 _91747) = (term233 _91747).
Proof. exact (eq_refl (term233 _91747)). Qed.
Lemma lem6862284 (_91747 : int) : (term245 _91747) = (term266 _91747).
Proof. exact (MK_COMB (@lem6862283 _91747) (@lem6862282)). Qed.
Lemma lem6862285 (_91747 : int) : (term244 _91747) = (term266 _91747).
Proof. exact (TRANS (@lem6862184 _91747) (@lem6862284 _91747)). Qed.
Lemma lem6862286 (_91747 : int) : (term266 _91747) = (term237 _91747).
Proof. exact (@lem1982723 (term237 _91747)). Qed.
Lemma lem6862287 (_91747 : int) : (term244 _91747) = (term237 _91747).
Proof. exact (TRANS (@lem6862285 _91747) (@lem6862286 _91747)). Qed.
Lemma lem6862288 (_91747 : int) : (term242 _91747) = (term237 _91747).
Proof. exact (TRANS (@lem6862183 _91747) (@lem6862287 _91747)). Qed.
Lemma lem6862290 (_91747 : int) : (term241 _91747) = (term237 _91747).
Proof. exact (TRANS (@lem6862138 _91747) (@lem6862288 _91747)). Qed.
Lemma lem6862291 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862292 (_91747 : int) : (term267 _91747) = (term268 _91747).
Proof. exact (MK_COMB (@lem6862291) (@lem6862290 _91747)). Qed.
Lemma lem6862293 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862294 (_91747 : int) : (term240 _91747) = (term269 _91747).
Proof. exact (MK_COMB (@lem6862292 _91747) (@lem6862293)). Qed.
Lemma lem6862295 (_91747 : int) : (term152 _91747) = (term269 _91747).
Proof. exact (TRANS (@lem6862126 _91747) (@lem6862294 _91747)). Qed.
Lemma lem6862296 (_91746 : int) : ((real_of_int _91746) = term133) = ((term193 _91746) = term133).
Proof. exact (@lem1988293 (real_of_int _91746) term133). Qed.
Lemma lem6862302 (_91746 : int) : (term193 _91746) = (term194 _91746).
Proof. exact (@lem1982792 (real_of_int _91746) term133). Qed.
Lemma lem6862304 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862305 : term133 = term196.
Proof. exact (@lem6862304 (NUMERAL 0)). Qed.
Lemma lem6862307 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862308 : term199 = term200.
Proof. exact (@lem6862307 term11). Qed.
Lemma lem6862309 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862310 : term201 = term202.
Proof. exact (MK_COMB (@lem6862309) (@lem6862308)). Qed.
Lemma lem6862311 : term203 = term204.
Proof. exact (MK_COMB (@lem6862310) (@lem6862305)). Qed.
Lemma lem6862312 : term204 = term205.
Proof. exact (@lem1981613 term199 term133 term143 term143). Qed.
Lemma lem6862314 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862315 : term208 = term209.
Proof. exact (@lem6862314 term11 term11). Qed.
Lemma lem6862316 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862317 : term211 = term11.
Proof. exact (EQ_MP (@lem6862316) (@lem940073)). Qed.
Lemma lem6862318 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862319 : term209 = term143.
Proof. exact (MK_COMB (@lem6862318) (@lem6862317)). Qed.
Lemma lem6862320 : term208 = term143.
Proof. exact (TRANS (@lem6862315) (@lem6862319)). Qed.
Lemma lem6862322 (x : nat) : (term212 x) = term133.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6862323 : term203 = term133.
Proof. exact (@lem6862322 term11). Qed.
Lemma lem6862324 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862325 : term213 = term214.
Proof. exact (MK_COMB (@lem6862324) (@lem6862323)). Qed.
Lemma lem6862326 : term205 = term196.
Proof. exact (MK_COMB (@lem6862325) (@lem6862320)). Qed.
Lemma lem6862327 : term204 = term196.
Proof. exact (TRANS (@lem6862312) (@lem6862326)). Qed.
Lemma lem6862328 : term203 = term196.
Proof. exact (TRANS (@lem6862311) (@lem6862327)). Qed.
Lemma lem6862330 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862331 : term196 = term133.
Proof. exact (@lem6862330 term133). Qed.
Lemma lem6862332 : term203 = term133.
Proof. exact (TRANS (@lem6862328) (@lem6862331)). Qed.
Lemma lem6862333 (_91746 : int) : (term144 _91746) = (term144 _91746).
Proof. exact (eq_refl (term144 _91746)). Qed.
Lemma lem6862334 (_91746 : int) : (term194 _91746) = (term216 _91746).
Proof. exact (MK_COMB (@lem6862333 _91746) (@lem6862332)). Qed.
Lemma lem6862335 (_91746 : int) : (term216 _91746) = (real_of_int _91746).
Proof. exact (@lem1982723 (real_of_int _91746)). Qed.
Lemma lem6862336 (_91746 : int) : (term194 _91746) = (real_of_int _91746).
Proof. exact (TRANS (@lem6862334 _91746) (@lem6862335 _91746)). Qed.
Lemma lem6862338 (_91746 : int) : (term193 _91746) = (real_of_int _91746).
Proof. exact (TRANS (@lem6862302 _91746) (@lem6862336 _91746)). Qed.
Lemma lem6862339 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6862340 (_91746 : int) : (term270 _91746) = (term146 _91746).
Proof. exact (MK_COMB (@lem6862339) (@lem6862338 _91746)). Qed.
Lemma lem6862341 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862342 (_91746 : int) : ((term193 _91746) = term133) = ((real_of_int _91746) = term133).
Proof. exact (MK_COMB (@lem6862340 _91746) (@lem6862341)). Qed.
Lemma lem6862343 (_91746 : int) : ((real_of_int _91746) = term133) = ((real_of_int _91746) = term133).
Proof. exact (TRANS (@lem6862296 _91746) (@lem6862342 _91746)). Qed.
Lemma lem6862344 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6862345 (_91747 : int) : (term153 _91747) = (term271 _91747).
Proof. exact (MK_COMB (@lem6862344) (@lem6862295 _91747)). Qed.
Lemma lem6862346 (_91747 : int) (_91746 : int) : (term154 _91747 _91746) = (term272 _91747 _91746).
Proof. exact (MK_COMB (@lem6862345 _91747) (@lem6862343 _91746)). Qed.
Lemma lem6862347 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862348 (_91746 : int) (_91747 : int) : (term155 _91747 _91746) = (term273 _91746 _91747).
Proof. exact (MK_COMB (@lem6862347) (@lem6862125 _91746 _91747)). Qed.
Lemma lem6862349 (_91747 : int) (_91746 : int) : (term156 _91747 _91746) = (term274 _91747 _91746).
Proof. exact (MK_COMB (@lem6862348 _91746 _91747) (@lem6862346 _91747 _91746)). Qed.
Lemma lem6862350 (_91746 : int) (_91747 : int) : (term129 _91747 _91746) = (term275 _91746 _91747).
Proof. exact (@lem1988287 (real_of_int _91746) (real_of_int _91747)). Qed.
Lemma lem6862363 (_91746 : int) (_91747 : int) : (term276 _91746 _91747) = (term277 _91746 _91747).
Proof. exact (@lem1982792 (real_of_int _91746) (real_of_int _91747)). Qed.
Lemma lem6862364 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862365 (_91746 : int) (_91747 : int) : (term278 _91746 _91747) = (term279 _91746 _91747).
Proof. exact (MK_COMB (@lem6862364) (@lem6862363 _91746 _91747)). Qed.
Lemma lem6862366 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862367 (_91746 : int) (_91747 : int) : (term275 _91746 _91747) = (term280 _91746 _91747).
Proof. exact (MK_COMB (@lem6862365 _91746 _91747) (@lem6862366)). Qed.
Lemma lem6862368 (_91746 : int) (_91747 : int) : (term129 _91747 _91746) = (term280 _91746 _91747).
Proof. exact (TRANS (@lem6862350 _91746 _91747) (@lem6862367 _91746 _91747)). Qed.
Lemma lem6862369 (_91747 : int) : ((real_of_int _91747) = term133) = ((term193 _91747) = term133).
Proof. exact (@lem1988293 (real_of_int _91747) term133). Qed.
Lemma lem6862375 (_91747 : int) : (term193 _91747) = (term194 _91747).
Proof. exact (@lem1982792 (real_of_int _91747) term133). Qed.
Lemma lem6862377 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862378 : term133 = term196.
Proof. exact (@lem6862377 (NUMERAL 0)). Qed.
Lemma lem6862380 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862381 : term199 = term200.
Proof. exact (@lem6862380 term11). Qed.
Lemma lem6862382 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862383 : term201 = term202.
Proof. exact (MK_COMB (@lem6862382) (@lem6862381)). Qed.
Lemma lem6862384 : term203 = term204.
Proof. exact (MK_COMB (@lem6862383) (@lem6862378)). Qed.
Lemma lem6862385 : term204 = term205.
Proof. exact (@lem1981613 term199 term133 term143 term143). Qed.
Lemma lem6862387 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862388 : term208 = term209.
Proof. exact (@lem6862387 term11 term11). Qed.
Lemma lem6862389 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862390 : term211 = term11.
Proof. exact (EQ_MP (@lem6862389) (@lem940073)). Qed.
Lemma lem6862391 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862392 : term209 = term143.
Proof. exact (MK_COMB (@lem6862391) (@lem6862390)). Qed.
Lemma lem6862393 : term208 = term143.
Proof. exact (TRANS (@lem6862388) (@lem6862392)). Qed.
Lemma lem6862395 (x : nat) : (term212 x) = term133.
Proof. exact (proj2 (@lem1367254 x)). Qed.
Lemma lem6862396 : term203 = term133.
Proof. exact (@lem6862395 term11). Qed.
Lemma lem6862397 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862398 : term213 = term214.
Proof. exact (MK_COMB (@lem6862397) (@lem6862396)). Qed.
Lemma lem6862399 : term205 = term196.
Proof. exact (MK_COMB (@lem6862398) (@lem6862393)). Qed.
Lemma lem6862400 : term204 = term196.
Proof. exact (TRANS (@lem6862385) (@lem6862399)). Qed.
Lemma lem6862401 : term203 = term196.
Proof. exact (TRANS (@lem6862384) (@lem6862400)). Qed.
Lemma lem6862403 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862404 : term196 = term133.
Proof. exact (@lem6862403 term133). Qed.
Lemma lem6862405 : term203 = term133.
Proof. exact (TRANS (@lem6862401) (@lem6862404)). Qed.
Lemma lem6862406 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6862407 (_91747 : int) : (term194 _91747) = (term216 _91747).
Proof. exact (MK_COMB (@lem6862406 _91747) (@lem6862405)). Qed.
Lemma lem6862408 (_91747 : int) : (term216 _91747) = (real_of_int _91747).
Proof. exact (@lem1982723 (real_of_int _91747)). Qed.
Lemma lem6862409 (_91747 : int) : (term194 _91747) = (real_of_int _91747).
Proof. exact (TRANS (@lem6862407 _91747) (@lem6862408 _91747)). Qed.
Lemma lem6862411 (_91747 : int) : (term193 _91747) = (real_of_int _91747).
Proof. exact (TRANS (@lem6862375 _91747) (@lem6862409 _91747)). Qed.
Lemma lem6862412 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6862413 (_91747 : int) : (term270 _91747) = (term146 _91747).
Proof. exact (MK_COMB (@lem6862412) (@lem6862411 _91747)). Qed.
Lemma lem6862414 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862415 (_91747 : int) : ((term193 _91747) = term133) = ((real_of_int _91747) = term133).
Proof. exact (MK_COMB (@lem6862413 _91747) (@lem6862414)). Qed.
Lemma lem6862416 (_91747 : int) : ((real_of_int _91747) = term133) = ((real_of_int _91747) = term133).
Proof. exact (TRANS (@lem6862369 _91747) (@lem6862415 _91747)). Qed.
Lemma lem6862417 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862418 (_91746 : int) (_91747 : int) : (term157 _91747 _91746) = (term281 _91746 _91747).
Proof. exact (MK_COMB (@lem6862417) (@lem6862368 _91746 _91747)). Qed.
Lemma lem6862419 (_91746 : int) (_91747 : int) : (term158 _91746 _91747) = (term282 _91746 _91747).
Proof. exact (MK_COMB (@lem6862418 _91746 _91747) (@lem6862416 _91747)). Qed.
Lemma lem6862420 (_91747 : int) (_91746 : int) : (term160 _91746 _91747) = (term283 _91747 _91746).
Proof. exact (@lem1988287 (real_of_int _91747) (term145 _91746)). Qed.
Lemma lem6862432 (_91747 : int) (_91746 : int) : (term220 _91747 _91746) = (term221 _91747 _91746).
Proof. exact (@lem1982792 (real_of_int _91747) (term145 _91746)). Qed.
Lemma lem6862433 (_91746 : int) : (term222 _91746) = (term223 _91746).
Proof. exact (@lem1982781 (real_of_int _91746) term199 term143). Qed.
Lemma lem6862435 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862436 : term143 = term224.
Proof. exact (@lem6862435 term11). Qed.
Lemma lem6862438 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862439 : term199 = term200.
Proof. exact (@lem6862438 term11). Qed.
Lemma lem6862440 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862441 : term201 = term202.
Proof. exact (MK_COMB (@lem6862440) (@lem6862439)). Qed.
Lemma lem6862442 : term225 = term226.
Proof. exact (MK_COMB (@lem6862441) (@lem6862436)). Qed.
Lemma lem6862443 : term226 = term227.
Proof. exact (@lem1981613 term199 term143 term143 term143). Qed.
Lemma lem6862445 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862446 : term208 = term209.
Proof. exact (@lem6862445 term11 term11). Qed.
Lemma lem6862447 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862448 : term211 = term11.
Proof. exact (EQ_MP (@lem6862447) (@lem940073)). Qed.
Lemma lem6862449 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862450 : term209 = term143.
Proof. exact (MK_COMB (@lem6862449) (@lem6862448)). Qed.
Lemma lem6862451 : term208 = term143.
Proof. exact (TRANS (@lem6862446) (@lem6862450)). Qed.
Lemma lem6862453 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6862454 : term225 = term230.
Proof. exact (@lem6862453 term11 term11). Qed.
Lemma lem6862455 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862456 : term211 = term11.
Proof. exact (EQ_MP (@lem6862455) (@lem940073)). Qed.
Lemma lem6862457 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862458 : term209 = term143.
Proof. exact (MK_COMB (@lem6862457) (@lem6862456)). Qed.
Lemma lem6862459 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6862460 : term230 = term199.
Proof. exact (MK_COMB (@lem6862459) (@lem6862458)). Qed.
Lemma lem6862461 : term225 = term199.
Proof. exact (TRANS (@lem6862454) (@lem6862460)). Qed.
Lemma lem6862462 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862463 : term231 = term232.
Proof. exact (MK_COMB (@lem6862462) (@lem6862461)). Qed.
Lemma lem6862464 : term227 = term200.
Proof. exact (MK_COMB (@lem6862463) (@lem6862451)). Qed.
Lemma lem6862465 : term226 = term200.
Proof. exact (TRANS (@lem6862443) (@lem6862464)). Qed.
Lemma lem6862466 : term225 = term200.
Proof. exact (TRANS (@lem6862442) (@lem6862465)). Qed.
Lemma lem6862468 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862469 : term200 = term199.
Proof. exact (@lem6862468 term199). Qed.
Lemma lem6862470 : term225 = term199.
Proof. exact (TRANS (@lem6862466) (@lem6862469)). Qed.
Lemma lem6862473 (_91746 : int) : (term233 _91746) = (term233 _91746).
Proof. exact (eq_refl (term233 _91746)). Qed.
Lemma lem6862474 (_91746 : int) : (term223 _91746) = (term234 _91746).
Proof. exact (MK_COMB (@lem6862473 _91746) (@lem6862470)). Qed.
Lemma lem6862475 (_91746 : int) : (term222 _91746) = (term234 _91746).
Proof. exact (TRANS (@lem6862433 _91746) (@lem6862474 _91746)). Qed.
Lemma lem6862476 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6862477 (_91747 : int) (_91746 : int) : (term221 _91747 _91746) = (term235 _91747 _91746).
Proof. exact (MK_COMB (@lem6862476 _91747) (@lem6862475 _91746)). Qed.
Lemma lem6862482 (_91746 : int) (_91747 : int) : (term235 _91747 _91746) = (term236 _91746 _91747).
Proof. exact (@lem1982757 (term237 _91746) (real_of_int _91747) term199). Qed.
Lemma lem6862483 (_91746 : int) (_91747 : int) : (term221 _91747 _91746) = (term236 _91746 _91747).
Proof. exact (TRANS (@lem6862477 _91747 _91746) (@lem6862482 _91746 _91747)). Qed.
Lemma lem6862485 (_91746 : int) (_91747 : int) : (term220 _91747 _91746) = (term236 _91746 _91747).
Proof. exact (TRANS (@lem6862432 _91747 _91746) (@lem6862483 _91746 _91747)). Qed.
Lemma lem6862486 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862487 (_91746 : int) (_91747 : int) : (term284 _91747 _91746) = (term285 _91746 _91747).
Proof. exact (MK_COMB (@lem6862486) (@lem6862485 _91746 _91747)). Qed.
Lemma lem6862488 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862489 (_91746 : int) (_91747 : int) : (term283 _91747 _91746) = (term286 _91746 _91747).
Proof. exact (MK_COMB (@lem6862487 _91746 _91747) (@lem6862488)). Qed.
Lemma lem6862490 (_91746 : int) (_91747 : int) : (term160 _91746 _91747) = (term286 _91746 _91747).
Proof. exact (TRANS (@lem6862420 _91747 _91746) (@lem6862489 _91746 _91747)). Qed.
Lemma lem6862491 (_91747 : int) : (term166 _91747) = (term287 _91747).
Proof. exact (@lem1988287 term133 (term145 _91747)). Qed.
Lemma lem6862503 (_91747 : int) : (term288 _91747) = (term289 _91747).
Proof. exact (@lem1982792 term133 (term145 _91747)). Qed.
Lemma lem6862504 (_91747 : int) : (term222 _91747) = (term223 _91747).
Proof. exact (@lem1982781 (real_of_int _91747) term199 term143). Qed.
Lemma lem6862506 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862507 : term143 = term224.
Proof. exact (@lem6862506 term11). Qed.
Lemma lem6862509 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862510 : term199 = term200.
Proof. exact (@lem6862509 term11). Qed.
Lemma lem6862511 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862512 : term201 = term202.
Proof. exact (MK_COMB (@lem6862511) (@lem6862510)). Qed.
Lemma lem6862513 : term225 = term226.
Proof. exact (MK_COMB (@lem6862512) (@lem6862507)). Qed.
Lemma lem6862514 : term226 = term227.
Proof. exact (@lem1981613 term199 term143 term143 term143). Qed.
Lemma lem6862516 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862517 : term208 = term209.
Proof. exact (@lem6862516 term11 term11). Qed.
Lemma lem6862518 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862519 : term211 = term11.
Proof. exact (EQ_MP (@lem6862518) (@lem940073)). Qed.
Lemma lem6862520 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862521 : term209 = term143.
Proof. exact (MK_COMB (@lem6862520) (@lem6862519)). Qed.
Lemma lem6862522 : term208 = term143.
Proof. exact (TRANS (@lem6862517) (@lem6862521)). Qed.
Lemma lem6862524 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6862525 : term225 = term230.
Proof. exact (@lem6862524 term11 term11). Qed.
Lemma lem6862526 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862527 : term211 = term11.
Proof. exact (EQ_MP (@lem6862526) (@lem940073)). Qed.
Lemma lem6862528 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862529 : term209 = term143.
Proof. exact (MK_COMB (@lem6862528) (@lem6862527)). Qed.
Lemma lem6862530 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6862531 : term230 = term199.
Proof. exact (MK_COMB (@lem6862530) (@lem6862529)). Qed.
Lemma lem6862532 : term225 = term199.
Proof. exact (TRANS (@lem6862525) (@lem6862531)). Qed.
Lemma lem6862533 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862534 : term231 = term232.
Proof. exact (MK_COMB (@lem6862533) (@lem6862532)). Qed.
Lemma lem6862535 : term227 = term200.
Proof. exact (MK_COMB (@lem6862534) (@lem6862522)). Qed.
Lemma lem6862536 : term226 = term200.
Proof. exact (TRANS (@lem6862514) (@lem6862535)). Qed.
Lemma lem6862537 : term225 = term200.
Proof. exact (TRANS (@lem6862513) (@lem6862536)). Qed.
Lemma lem6862539 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862540 : term200 = term199.
Proof. exact (@lem6862539 term199). Qed.
Lemma lem6862541 : term225 = term199.
Proof. exact (TRANS (@lem6862537) (@lem6862540)). Qed.
Lemma lem6862544 (_91747 : int) : (term233 _91747) = (term233 _91747).
Proof. exact (eq_refl (term233 _91747)). Qed.
Lemma lem6862545 (_91747 : int) : (term223 _91747) = (term234 _91747).
Proof. exact (MK_COMB (@lem6862544 _91747) (@lem6862541)). Qed.
Lemma lem6862546 (_91747 : int) : (term222 _91747) = (term234 _91747).
Proof. exact (TRANS (@lem6862504 _91747) (@lem6862545 _91747)). Qed.
Lemma lem6862547 : term175 = term175.
Proof. exact (eq_refl term175). Qed.
Lemma lem6862548 (_91747 : int) : (term289 _91747) = (term290 _91747).
Proof. exact (MK_COMB (@lem6862547) (@lem6862546 _91747)). Qed.
Lemma lem6862549 (_91747 : int) : (term290 _91747) = (term234 _91747).
Proof. exact (@lem1982721 (term234 _91747)). Qed.
Lemma lem6862550 (_91747 : int) : (term289 _91747) = (term234 _91747).
Proof. exact (TRANS (@lem6862548 _91747) (@lem6862549 _91747)). Qed.
Lemma lem6862552 (_91747 : int) : (term288 _91747) = (term234 _91747).
Proof. exact (TRANS (@lem6862503 _91747) (@lem6862550 _91747)). Qed.
Lemma lem6862553 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862554 (_91747 : int) : (term291 _91747) = (term292 _91747).
Proof. exact (MK_COMB (@lem6862553) (@lem6862552 _91747)). Qed.
Lemma lem6862555 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862556 (_91747 : int) : (term287 _91747) = (term293 _91747).
Proof. exact (MK_COMB (@lem6862554 _91747) (@lem6862555)). Qed.
Lemma lem6862557 (_91747 : int) : (term166 _91747) = (term293 _91747).
Proof. exact (TRANS (@lem6862491 _91747) (@lem6862556 _91747)). Qed.
Lemma lem6862558 (_91747 : int) : (term179 _91747) = (term294 _91747).
Proof. exact (@lem1988287 (real_of_int _91747) term176). Qed.
Lemma lem6862565 : term176 = term143.
Proof. exact (@lem1982721 term143). Qed.
Lemma lem6862568 (_91747 : int) : (term295 _91747) = (term295 _91747).
Proof. exact (eq_refl (term295 _91747)). Qed.
Lemma lem6862569 (_91747 : int) : (term296 _91747) = (term297 _91747).
Proof. exact (MK_COMB (@lem6862568 _91747) (@lem6862565)). Qed.
Lemma lem6862570 (_91747 : int) : (term297 _91747) = (term298 _91747).
Proof. exact (@lem1982792 (real_of_int _91747) term143). Qed.
Lemma lem6862572 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6862573 : term143 = term224.
Proof. exact (@lem6862572 term11). Qed.
Lemma lem6862575 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6862576 : term199 = term200.
Proof. exact (@lem6862575 term11). Qed.
Lemma lem6862577 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6862578 : term201 = term202.
Proof. exact (MK_COMB (@lem6862577) (@lem6862576)). Qed.
Lemma lem6862579 : term225 = term226.
Proof. exact (MK_COMB (@lem6862578) (@lem6862573)). Qed.
Lemma lem6862580 : term226 = term227.
Proof. exact (@lem1981613 term199 term143 term143 term143). Qed.
Lemma lem6862582 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6862583 : term208 = term209.
Proof. exact (@lem6862582 term11 term11). Qed.
Lemma lem6862584 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862585 : term211 = term11.
Proof. exact (EQ_MP (@lem6862584) (@lem940073)). Qed.
Lemma lem6862586 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862587 : term209 = term143.
Proof. exact (MK_COMB (@lem6862586) (@lem6862585)). Qed.
Lemma lem6862588 : term208 = term143.
Proof. exact (TRANS (@lem6862583) (@lem6862587)). Qed.
Lemma lem6862590 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6862591 : term225 = term230.
Proof. exact (@lem6862590 term11 term11). Qed.
Lemma lem6862592 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6862593 : term211 = term11.
Proof. exact (EQ_MP (@lem6862592) (@lem940073)). Qed.
Lemma lem6862594 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6862595 : term209 = term143.
Proof. exact (MK_COMB (@lem6862594) (@lem6862593)). Qed.
Lemma lem6862596 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6862597 : term230 = term199.
Proof. exact (MK_COMB (@lem6862596) (@lem6862595)). Qed.
Lemma lem6862598 : term225 = term199.
Proof. exact (TRANS (@lem6862591) (@lem6862597)). Qed.
Lemma lem6862599 : real_div = real_div.
Proof. exact (eq_refl real_div). Qed.
Lemma lem6862600 : term231 = term232.
Proof. exact (MK_COMB (@lem6862599) (@lem6862598)). Qed.
Lemma lem6862601 : term227 = term200.
Proof. exact (MK_COMB (@lem6862600) (@lem6862588)). Qed.
Lemma lem6862602 : term226 = term200.
Proof. exact (TRANS (@lem6862580) (@lem6862601)). Qed.
Lemma lem6862603 : term225 = term200.
Proof. exact (TRANS (@lem6862579) (@lem6862602)). Qed.
Lemma lem6862605 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1982628 x) (@lem1982627 x)). Qed.
Lemma lem6862606 : term200 = term199.
Proof. exact (@lem6862605 term199). Qed.
Lemma lem6862607 : term225 = term199.
Proof. exact (TRANS (@lem6862603) (@lem6862606)). Qed.
Lemma lem6862608 (_91747 : int) : (term144 _91747) = (term144 _91747).
Proof. exact (eq_refl (term144 _91747)). Qed.
Lemma lem6862611 (_91747 : int) : (term298 _91747) = (term299 _91747).
Proof. exact (MK_COMB (@lem6862608 _91747) (@lem6862607)). Qed.
Lemma lem6862612 (_91747 : int) : (term297 _91747) = (term299 _91747).
Proof. exact (TRANS (@lem6862570 _91747) (@lem6862611 _91747)). Qed.
Lemma lem6862613 (_91747 : int) : (term296 _91747) = (term299 _91747).
Proof. exact (TRANS (@lem6862569 _91747) (@lem6862612 _91747)). Qed.
Lemma lem6862614 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6862615 (_91747 : int) : (term300 _91747) = (term301 _91747).
Proof. exact (MK_COMB (@lem6862614) (@lem6862613 _91747)). Qed.
Lemma lem6862616 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6862617 (_91747 : int) : (term294 _91747) = (term302 _91747).
Proof. exact (MK_COMB (@lem6862615 _91747) (@lem6862616)). Qed.
Lemma lem6862618 (_91747 : int) : (term179 _91747) = (term302 _91747).
Proof. exact (TRANS (@lem6862558 _91747) (@lem6862617 _91747)). Qed.
Lemma lem6862619 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862620 (_91747 : int) : (term168 _91747) = (term303 _91747).
Proof. exact (MK_COMB (@lem6862619) (@lem6862557 _91747)). Qed.
Lemma lem6862621 (_91747 : int) : (term180 _91747) = (term304 _91747).
Proof. exact (MK_COMB (@lem6862620 _91747) (@lem6862618 _91747)). Qed.
Lemma lem6862622 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862623 (_91746 : int) (_91747 : int) : (term181 _91746 _91747) = (term305 _91746 _91747).
Proof. exact (MK_COMB (@lem6862622) (@lem6862490 _91746 _91747)). Qed.
Lemma lem6862624 (_91746 : int) (_91747 : int) : (term182 _91746 _91747) = (term306 _91746 _91747).
Proof. exact (MK_COMB (@lem6862623 _91746 _91747) (@lem6862621 _91747)). Qed.
Lemma lem6862625 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6862626 (_91746 : int) (_91747 : int) : (term183 _91746 _91747) = (term307 _91746 _91747).
Proof. exact (MK_COMB (@lem6862625) (@lem6862419 _91746 _91747)). Qed.
Lemma lem6862627 (_91746 : int) (_91747 : int) : (term184 _91746 _91747) = (term308 _91746 _91747).
Proof. exact (MK_COMB (@lem6862626 _91746 _91747) (@lem6862624 _91746 _91747)). Qed.
Lemma lem6862628 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6862629 (_91747 : int) (_91746 : int) : (term185 _91747 _91746) = (term309 _91747 _91746).
Proof. exact (MK_COMB (@lem6862628) (@lem6862349 _91747 _91746)). Qed.
Lemma lem6862630 (_91746 : int) (_91747 : int) : (term186 _91746 _91747) = (term310 _91746 _91747).
Proof. exact (MK_COMB (@lem6862629 _91747 _91746) (@lem6862627 _91746 _91747)). Qed.
Lemma lem6862631 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6862632 (_91747 : int) : (term187 _91747) = (term311 _91747).
Proof. exact (MK_COMB (@lem6862631) (@lem6862054 _91747)). Qed.
Lemma lem6862633 (_91746 : int) (_91747 : int) : (term188 _91746 _91747) = (term312 _91746 _91747).
Proof. exact (MK_COMB (@lem6862632 _91747) (@lem6862630 _91746 _91747)). Qed.
Lemma lem6862634 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6862635 (_91746 : int) : (term187 _91746) = (term311 _91746).
Proof. exact (MK_COMB (@lem6862634) (@lem6862006 _91746)). Qed.
Lemma lem6862636 (_91746 : int) (_91747 : int) : (term189 _91746 _91747) = (term313 _91746 _91747).
Proof. exact (MK_COMB (@lem6862635 _91746) (@lem6862633 _91746 _91747)). Qed.
Lemma lem6862643 (_91746 : int) (_91747 : int) : (term191 _91746 _91747) = (term313 _91746 _91747).
Proof. exact (TRANS (@lem6861958 _91746 _91747) (@lem6862636 _91746 _91747)). Qed.
Lemma lem6862661 (_91746 : int) (_91747 : int) : (term308 _91746 _91747) = (term314 _91746 _91747).
Proof. exact (@lem19158 (term286 _91746 _91747) (term282 _91746 _91747) (term304 _91747)). Qed.
Lemma lem6862662 (_91746 : int) (_91747 : int) : (term315 _91746 _91747) = (term316 _91746 _91747).
Proof. exact (@lem19158 (term293 _91747) (term282 _91746 _91747) (term302 _91747)). Qed.
Lemma lem6862669 (_91746 : int) (_91747 : int) : (term317 _91746 _91747) = (term318 _91746 _91747).
Proof. exact (@lem19367 (term280 _91746 _91747) ((real_of_int _91747) = term133) (term302 _91747)). Qed.
Lemma lem6862676 (_91746 : int) (_91747 : int) : (term319 _91746 _91747) = (term320 _91746 _91747).
Proof. exact (@lem19367 (term280 _91746 _91747) ((real_of_int _91747) = term133) (term293 _91747)). Qed.
Lemma lem6862677 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862678 (_91746 : int) (_91747 : int) : (term321 _91746 _91747) = (term322 _91746 _91747).
Proof. exact (MK_COMB (@lem6862677) (@lem6862676 _91746 _91747)). Qed.
Lemma lem6862679 (_91746 : int) (_91747 : int) : (term316 _91746 _91747) = (term323 _91746 _91747).
Proof. exact (MK_COMB (@lem6862678 _91746 _91747) (@lem6862669 _91746 _91747)). Qed.
Lemma lem6862680 (_91746 : int) (_91747 : int) : (term315 _91746 _91747) = (term323 _91746 _91747).
Proof. exact (TRANS (@lem6862662 _91746 _91747) (@lem6862679 _91746 _91747)). Qed.
Lemma lem6862687 (_91746 : int) (_91747 : int) : (term324 _91746 _91747) = (term325 _91746 _91747).
Proof. exact (@lem19367 (term280 _91746 _91747) ((real_of_int _91747) = term133) (term286 _91746 _91747)). Qed.
Lemma lem6862688 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862689 (_91746 : int) (_91747 : int) : (term326 _91746 _91747) = (term327 _91746 _91747).
Proof. exact (MK_COMB (@lem6862688) (@lem6862687 _91746 _91747)). Qed.
Lemma lem6862690 (_91746 : int) (_91747 : int) : (term314 _91746 _91747) = (term328 _91746 _91747).
Proof. exact (MK_COMB (@lem6862689 _91746 _91747) (@lem6862680 _91746 _91747)). Qed.
Lemma lem6862692 (_91746 : int) (_91747 : int) : (term308 _91746 _91747) = (term328 _91746 _91747).
Proof. exact (TRANS (@lem6862661 _91746 _91747) (@lem6862690 _91746 _91747)). Qed.
Lemma lem6862705 (_91747 : int) (_91746 : int) : (term309 _91747 _91746) = (term309 _91747 _91746).
Proof. exact (eq_refl (term309 _91747 _91746)). Qed.
Lemma lem6862706 (_91746 : int) (_91747 : int) : (term310 _91746 _91747) = (term329 _91746 _91747).
Proof. exact (MK_COMB (@lem6862705 _91747 _91746) (@lem6862692 _91746 _91747)). Qed.
Lemma lem6862707 (_91746 : int) (_91747 : int) : (term329 _91746 _91747) = (term330 _91746 _91747).
Proof. exact (@lem19158 (term325 _91746 _91747) (term274 _91747 _91746) (term323 _91746 _91747)). Qed.
Lemma lem6862708 (_91746 : int) (_91747 : int) : (term331 _91746 _91747) = (term332 _91746 _91747).
Proof. exact (@lem19158 (term320 _91746 _91747) (term274 _91747 _91746) (term318 _91746 _91747)). Qed.
Lemma lem6862709 (_91746 : int) (_91747 : int) : (term333 _91746 _91747) = (term334 _91746 _91747).
Proof. exact (@lem19158 (term335 _91746 _91747) (term274 _91747 _91746) (term336 _91747)). Qed.
Lemma lem6862716 (_91746 : int) (_91747 : int) : (term337 _91746 _91747) = (term338 _91746 _91747).
Proof. exact (@lem19367 ((term236 _91746 _91747) = term133) (term272 _91747 _91746) (term336 _91747)). Qed.
Lemma lem6862723 (_91746 : int) (_91747 : int) : (term339 _91746 _91747) = (term340 _91746 _91747).
Proof. exact (@lem19367 ((term236 _91746 _91747) = term133) (term272 _91747 _91746) (term335 _91746 _91747)). Qed.
Lemma lem6862724 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862725 (_91746 : int) (_91747 : int) : (term341 _91746 _91747) = (term342 _91746 _91747).
Proof. exact (MK_COMB (@lem6862724) (@lem6862723 _91746 _91747)). Qed.
Lemma lem6862726 (_91746 : int) (_91747 : int) : (term334 _91746 _91747) = (term343 _91746 _91747).
Proof. exact (MK_COMB (@lem6862725 _91746 _91747) (@lem6862716 _91746 _91747)). Qed.
Lemma lem6862727 (_91746 : int) (_91747 : int) : (term333 _91746 _91747) = (term343 _91746 _91747).
Proof. exact (TRANS (@lem6862709 _91746 _91747) (@lem6862726 _91746 _91747)). Qed.
Lemma lem6862728 (_91746 : int) (_91747 : int) : (term344 _91746 _91747) = (term345 _91746 _91747).
Proof. exact (@lem19158 (term346 _91746 _91747) (term274 _91747 _91746) (term347 _91747)). Qed.
Lemma lem6862735 (_91746 : int) (_91747 : int) : (term348 _91746 _91747) = (term349 _91746 _91747).
Proof. exact (@lem19367 ((term236 _91746 _91747) = term133) (term272 _91747 _91746) (term347 _91747)). Qed.
Lemma lem6862742 (_91746 : int) (_91747 : int) : (term350 _91746 _91747) = (term351 _91746 _91747).
Proof. exact (@lem19367 ((term236 _91746 _91747) = term133) (term272 _91747 _91746) (term346 _91746 _91747)). Qed.
Lemma lem6862743 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862744 (_91746 : int) (_91747 : int) : (term352 _91746 _91747) = (term353 _91746 _91747).
Proof. exact (MK_COMB (@lem6862743) (@lem6862742 _91746 _91747)). Qed.
Lemma lem6862745 (_91746 : int) (_91747 : int) : (term345 _91746 _91747) = (term354 _91746 _91747).
Proof. exact (MK_COMB (@lem6862744 _91746 _91747) (@lem6862735 _91746 _91747)). Qed.
Lemma lem6862746 (_91746 : int) (_91747 : int) : (term344 _91746 _91747) = (term354 _91746 _91747).
Proof. exact (TRANS (@lem6862728 _91746 _91747) (@lem6862745 _91746 _91747)). Qed.
Lemma lem6862747 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862748 (_91746 : int) (_91747 : int) : (term355 _91746 _91747) = (term356 _91746 _91747).
Proof. exact (MK_COMB (@lem6862747) (@lem6862746 _91746 _91747)). Qed.
Lemma lem6862749 (_91746 : int) (_91747 : int) : (term332 _91746 _91747) = (term357 _91746 _91747).
Proof. exact (MK_COMB (@lem6862748 _91746 _91747) (@lem6862727 _91746 _91747)). Qed.
Lemma lem6862750 (_91746 : int) (_91747 : int) : (term331 _91746 _91747) = (term357 _91746 _91747).
Proof. exact (TRANS (@lem6862708 _91746 _91747) (@lem6862749 _91746 _91747)). Qed.
Lemma lem6862751 (_91746 : int) (_91747 : int) : (term358 _91746 _91747) = (term359 _91746 _91747).
Proof. exact (@lem19158 (term360 _91746 _91747) (term274 _91747 _91746) (term361 _91746 _91747)). Qed.
Lemma lem6862758 (_91746 : int) (_91747 : int) : (term362 _91746 _91747) = (term363 _91746 _91747).
Proof. exact (@lem19367 ((term236 _91746 _91747) = term133) (term272 _91747 _91746) (term361 _91746 _91747)). Qed.
Lemma lem6862765 (_91746 : int) (_91747 : int) : (term364 _91746 _91747) = (term365 _91746 _91747).
Proof. exact (@lem19367 ((term236 _91746 _91747) = term133) (term272 _91747 _91746) (term360 _91746 _91747)). Qed.
Lemma lem6862766 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862767 (_91746 : int) (_91747 : int) : (term366 _91746 _91747) = (term367 _91746 _91747).
Proof. exact (MK_COMB (@lem6862766) (@lem6862765 _91746 _91747)). Qed.
Lemma lem6862768 (_91746 : int) (_91747 : int) : (term359 _91746 _91747) = (term368 _91746 _91747).
Proof. exact (MK_COMB (@lem6862767 _91746 _91747) (@lem6862758 _91746 _91747)). Qed.
Lemma lem6862769 (_91746 : int) (_91747 : int) : (term358 _91746 _91747) = (term368 _91746 _91747).
Proof. exact (TRANS (@lem6862751 _91746 _91747) (@lem6862768 _91746 _91747)). Qed.
Lemma lem6862770 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862771 (_91746 : int) (_91747 : int) : (term369 _91746 _91747) = (term370 _91746 _91747).
Proof. exact (MK_COMB (@lem6862770) (@lem6862769 _91746 _91747)). Qed.
Lemma lem6862772 (_91746 : int) (_91747 : int) : (term330 _91746 _91747) = (term371 _91746 _91747).
Proof. exact (MK_COMB (@lem6862771 _91746 _91747) (@lem6862750 _91746 _91747)). Qed.
Lemma lem6862773 (_91746 : int) (_91747 : int) : (term329 _91746 _91747) = (term371 _91746 _91747).
Proof. exact (TRANS (@lem6862707 _91746 _91747) (@lem6862772 _91746 _91747)). Qed.
Lemma lem6862774 (_91746 : int) (_91747 : int) : (term310 _91746 _91747) = (term371 _91746 _91747).
Proof. exact (TRANS (@lem6862706 _91746 _91747) (@lem6862773 _91746 _91747)). Qed.
Lemma lem6862777 (_91747 : int) : (term311 _91747) = (term311 _91747).
Proof. exact (eq_refl (term311 _91747)). Qed.
Lemma lem6862778 (_91746 : int) (_91747 : int) : (term312 _91746 _91747) = (term372 _91746 _91747).
Proof. exact (MK_COMB (@lem6862777 _91747) (@lem6862774 _91746 _91747)). Qed.
Lemma lem6862779 (_91746 : int) (_91747 : int) : (term372 _91746 _91747) = (term373 _91746 _91747).
Proof. exact (@lem19158 (term368 _91746 _91747) (term219 _91747) (term357 _91746 _91747)). Qed.
Lemma lem6862780 (_91746 : int) (_91747 : int) : (term374 _91746 _91747) = (term375 _91746 _91747).
Proof. exact (@lem19158 (term354 _91746 _91747) (term219 _91747) (term343 _91746 _91747)). Qed.
Lemma lem6862781 (_91746 : int) (_91747 : int) : (term376 _91746 _91747) = (term377 _91746 _91747).
Proof. exact (@lem19158 (term340 _91746 _91747) (term219 _91747) (term338 _91746 _91747)). Qed.
Lemma lem6862788 (_91746 : int) (_91747 : int) : (term378 _91746 _91747) = (term379 _91746 _91747).
Proof. exact (@lem19158 (term380 _91746 _91747) (term219 _91747) (term381 _91746 _91747)). Qed.
Lemma lem6862795 (_91746 : int) (_91747 : int) : (term382 _91746 _91747) = (term383 _91746 _91747).
Proof. exact (@lem19158 (term384 _91746 _91747) (term219 _91747) (term385 _91746 _91747)). Qed.
Lemma lem6862796 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862797 (_91746 : int) (_91747 : int) : (term386 _91746 _91747) = (term387 _91746 _91747).
Proof. exact (MK_COMB (@lem6862796) (@lem6862795 _91746 _91747)). Qed.
Lemma lem6862798 (_91746 : int) (_91747 : int) : (term377 _91746 _91747) = (term388 _91746 _91747).
Proof. exact (MK_COMB (@lem6862797 _91746 _91747) (@lem6862788 _91746 _91747)). Qed.
Lemma lem6862799 (_91746 : int) (_91747 : int) : (term376 _91746 _91747) = (term388 _91746 _91747).
Proof. exact (TRANS (@lem6862781 _91746 _91747) (@lem6862798 _91746 _91747)). Qed.
Lemma lem6862800 (_91746 : int) (_91747 : int) : (term389 _91746 _91747) = (term390 _91746 _91747).
Proof. exact (@lem19158 (term351 _91746 _91747) (term219 _91747) (term349 _91746 _91747)). Qed.
Lemma lem6862807 (_91746 : int) (_91747 : int) : (term391 _91746 _91747) = (term392 _91746 _91747).
Proof. exact (@lem19158 (term393 _91746 _91747) (term219 _91747) (term394 _91746 _91747)). Qed.
Lemma lem6862814 (_91746 : int) (_91747 : int) : (term395 _91746 _91747) = (term396 _91746 _91747).
Proof. exact (@lem19158 (term397 _91746 _91747) (term219 _91747) (term398 _91746 _91747)). Qed.
Lemma lem6862815 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862816 (_91746 : int) (_91747 : int) : (term399 _91746 _91747) = (term400 _91746 _91747).
Proof. exact (MK_COMB (@lem6862815) (@lem6862814 _91746 _91747)). Qed.
Lemma lem6862817 (_91746 : int) (_91747 : int) : (term390 _91746 _91747) = (term401 _91746 _91747).
Proof. exact (MK_COMB (@lem6862816 _91746 _91747) (@lem6862807 _91746 _91747)). Qed.
Lemma lem6862818 (_91746 : int) (_91747 : int) : (term389 _91746 _91747) = (term401 _91746 _91747).
Proof. exact (TRANS (@lem6862800 _91746 _91747) (@lem6862817 _91746 _91747)). Qed.
Lemma lem6862819 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862820 (_91746 : int) (_91747 : int) : (term402 _91746 _91747) = (term403 _91746 _91747).
Proof. exact (MK_COMB (@lem6862819) (@lem6862818 _91746 _91747)). Qed.
Lemma lem6862821 (_91746 : int) (_91747 : int) : (term375 _91746 _91747) = (term404 _91746 _91747).
Proof. exact (MK_COMB (@lem6862820 _91746 _91747) (@lem6862799 _91746 _91747)). Qed.
Lemma lem6862822 (_91746 : int) (_91747 : int) : (term374 _91746 _91747) = (term404 _91746 _91747).
Proof. exact (TRANS (@lem6862780 _91746 _91747) (@lem6862821 _91746 _91747)). Qed.
Lemma lem6862823 (_91746 : int) (_91747 : int) : (term405 _91746 _91747) = (term406 _91746 _91747).
Proof. exact (@lem19158 (term365 _91746 _91747) (term219 _91747) (term363 _91746 _91747)). Qed.
Lemma lem6862830 (_91746 : int) (_91747 : int) : (term407 _91746 _91747) = (term408 _91746 _91747).
Proof. exact (@lem19158 (term409 _91746 _91747) (term219 _91747) (term410 _91746 _91747)). Qed.
Lemma lem6862837 (_91746 : int) (_91747 : int) : (term411 _91746 _91747) = (term412 _91746 _91747).
Proof. exact (@lem19158 (term413 _91746 _91747) (term219 _91747) (term414 _91746 _91747)). Qed.
Lemma lem6862838 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862839 (_91746 : int) (_91747 : int) : (term415 _91746 _91747) = (term416 _91746 _91747).
Proof. exact (MK_COMB (@lem6862838) (@lem6862837 _91746 _91747)). Qed.
Lemma lem6862840 (_91746 : int) (_91747 : int) : (term406 _91746 _91747) = (term417 _91746 _91747).
Proof. exact (MK_COMB (@lem6862839 _91746 _91747) (@lem6862830 _91746 _91747)). Qed.
Lemma lem6862841 (_91746 : int) (_91747 : int) : (term405 _91746 _91747) = (term417 _91746 _91747).
Proof. exact (TRANS (@lem6862823 _91746 _91747) (@lem6862840 _91746 _91747)). Qed.
Lemma lem6862842 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862843 (_91746 : int) (_91747 : int) : (term418 _91746 _91747) = (term419 _91746 _91747).
Proof. exact (MK_COMB (@lem6862842) (@lem6862841 _91746 _91747)). Qed.
Lemma lem6862844 (_91746 : int) (_91747 : int) : (term373 _91746 _91747) = (term420 _91746 _91747).
Proof. exact (MK_COMB (@lem6862843 _91746 _91747) (@lem6862822 _91746 _91747)). Qed.
Lemma lem6862845 (_91746 : int) (_91747 : int) : (term372 _91746 _91747) = (term420 _91746 _91747).
Proof. exact (TRANS (@lem6862779 _91746 _91747) (@lem6862844 _91746 _91747)). Qed.
Lemma lem6862846 (_91746 : int) (_91747 : int) : (term312 _91746 _91747) = (term420 _91746 _91747).
Proof. exact (TRANS (@lem6862778 _91746 _91747) (@lem6862845 _91746 _91747)). Qed.
Lemma lem6862849 (_91746 : int) : (term311 _91746) = (term311 _91746).
Proof. exact (eq_refl (term311 _91746)). Qed.
Lemma lem6862850 (_91746 : int) (_91747 : int) : (term313 _91746 _91747) = (term421 _91746 _91747).
Proof. exact (MK_COMB (@lem6862849 _91746) (@lem6862846 _91746 _91747)). Qed.
Lemma lem6862851 (_91746 : int) (_91747 : int) : (term421 _91746 _91747) = (term422 _91746 _91747).
Proof. exact (@lem19158 (term417 _91746 _91747) (term219 _91746) (term404 _91746 _91747)). Qed.
Lemma lem6862852 (_91746 : int) (_91747 : int) : (term423 _91746 _91747) = (term424 _91746 _91747).
Proof. exact (@lem19158 (term401 _91746 _91747) (term219 _91746) (term388 _91746 _91747)). Qed.
Lemma lem6862853 (_91746 : int) (_91747 : int) : (term425 _91746 _91747) = (term426 _91746 _91747).
Proof. exact (@lem19158 (term383 _91746 _91747) (term219 _91746) (term379 _91746 _91747)). Qed.
Lemma lem6862860 (_91746 : int) (_91747 : int) : (term427 _91746 _91747) = (term428 _91746 _91747).
Proof. exact (@lem19158 (term429 _91746 _91747) (term219 _91746) (term430 _91746 _91747)). Qed.
Lemma lem6862867 (_91746 : int) (_91747 : int) : (term431 _91746 _91747) = (term432 _91746 _91747).
Proof. exact (@lem19158 (term433 _91746 _91747) (term219 _91746) (term434 _91746 _91747)). Qed.
Lemma lem6862868 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862869 (_91746 : int) (_91747 : int) : (term435 _91746 _91747) = (term436 _91746 _91747).
Proof. exact (MK_COMB (@lem6862868) (@lem6862867 _91746 _91747)). Qed.
Lemma lem6862870 (_91746 : int) (_91747 : int) : (term426 _91746 _91747) = (term437 _91746 _91747).
Proof. exact (MK_COMB (@lem6862869 _91746 _91747) (@lem6862860 _91746 _91747)). Qed.
Lemma lem6862871 (_91746 : int) (_91747 : int) : (term425 _91746 _91747) = (term437 _91746 _91747).
Proof. exact (TRANS (@lem6862853 _91746 _91747) (@lem6862870 _91746 _91747)). Qed.
Lemma lem6862872 (_91746 : int) (_91747 : int) : (term438 _91746 _91747) = (term439 _91746 _91747).
Proof. exact (@lem19158 (term396 _91746 _91747) (term219 _91746) (term392 _91746 _91747)). Qed.
Lemma lem6862879 (_91746 : int) (_91747 : int) : (term440 _91746 _91747) = (term441 _91746 _91747).
Proof. exact (@lem19158 (term442 _91746 _91747) (term219 _91746) (term443 _91746 _91747)). Qed.
Lemma lem6862886 (_91746 : int) (_91747 : int) : (term444 _91746 _91747) = (term445 _91746 _91747).
Proof. exact (@lem19158 (term446 _91746 _91747) (term219 _91746) (term447 _91746 _91747)). Qed.
Lemma lem6862887 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862888 (_91746 : int) (_91747 : int) : (term448 _91746 _91747) = (term449 _91746 _91747).
Proof. exact (MK_COMB (@lem6862887) (@lem6862886 _91746 _91747)). Qed.
Lemma lem6862889 (_91746 : int) (_91747 : int) : (term439 _91746 _91747) = (term450 _91746 _91747).
Proof. exact (MK_COMB (@lem6862888 _91746 _91747) (@lem6862879 _91746 _91747)). Qed.
Lemma lem6862890 (_91746 : int) (_91747 : int) : (term438 _91746 _91747) = (term450 _91746 _91747).
Proof. exact (TRANS (@lem6862872 _91746 _91747) (@lem6862889 _91746 _91747)). Qed.
Lemma lem6862891 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862892 (_91746 : int) (_91747 : int) : (term451 _91746 _91747) = (term452 _91746 _91747).
Proof. exact (MK_COMB (@lem6862891) (@lem6862890 _91746 _91747)). Qed.
Lemma lem6862893 (_91746 : int) (_91747 : int) : (term424 _91746 _91747) = (term453 _91746 _91747).
Proof. exact (MK_COMB (@lem6862892 _91746 _91747) (@lem6862871 _91746 _91747)). Qed.
Lemma lem6862894 (_91746 : int) (_91747 : int) : (term423 _91746 _91747) = (term453 _91746 _91747).
Proof. exact (TRANS (@lem6862852 _91746 _91747) (@lem6862893 _91746 _91747)). Qed.
Lemma lem6862895 (_91746 : int) (_91747 : int) : (term454 _91746 _91747) = (term455 _91746 _91747).
Proof. exact (@lem19158 (term412 _91746 _91747) (term219 _91746) (term408 _91746 _91747)). Qed.
Lemma lem6862902 (_91746 : int) (_91747 : int) : (term456 _91746 _91747) = (term457 _91746 _91747).
Proof. exact (@lem19158 (term458 _91746 _91747) (term219 _91746) (term459 _91746 _91747)). Qed.
Lemma lem6862909 (_91746 : int) (_91747 : int) : (term460 _91746 _91747) = (term461 _91746 _91747).
Proof. exact (@lem19158 (term462 _91746 _91747) (term219 _91746) (term463 _91746 _91747)). Qed.
Lemma lem6862910 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862911 (_91746 : int) (_91747 : int) : (term464 _91746 _91747) = (term465 _91746 _91747).
Proof. exact (MK_COMB (@lem6862910) (@lem6862909 _91746 _91747)). Qed.
Lemma lem6862912 (_91746 : int) (_91747 : int) : (term455 _91746 _91747) = (term466 _91746 _91747).
Proof. exact (MK_COMB (@lem6862911 _91746 _91747) (@lem6862902 _91746 _91747)). Qed.
Lemma lem6862913 (_91746 : int) (_91747 : int) : (term454 _91746 _91747) = (term466 _91746 _91747).
Proof. exact (TRANS (@lem6862895 _91746 _91747) (@lem6862912 _91746 _91747)). Qed.
Lemma lem6862914 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6862915 (_91746 : int) (_91747 : int) : (term467 _91746 _91747) = (term468 _91746 _91747).
Proof. exact (MK_COMB (@lem6862914) (@lem6862913 _91746 _91747)). Qed.
Lemma lem6862916 (_91746 : int) (_91747 : int) : (term422 _91746 _91747) = (term469 _91746 _91747).
Proof. exact (MK_COMB (@lem6862915 _91746 _91747) (@lem6862894 _91746 _91747)). Qed.
Lemma lem6862917 (_91746 : int) (_91747 : int) : (term421 _91746 _91747) = (term469 _91746 _91747).
Proof. exact (TRANS (@lem6862851 _91746 _91747) (@lem6862916 _91746 _91747)). Qed.
Lemma lem6862918 (_91746 : int) (_91747 : int) : (term313 _91746 _91747) = (term469 _91746 _91747).
Proof. exact (TRANS (@lem6862850 _91746 _91747) (@lem6862917 _91746 _91747)). Qed.
Lemma lem6862919 (_91746 : int) (_91747 : int) : (term191 _91746 _91747) = (term469 _91746 _91747).
Proof. exact (TRANS (@lem6862643 _91746 _91747) (@lem6862918 _91746 _91747)). Qed.
Lemma lem6862989 (_91746 : int) (_91747 : int) (h1 : term469 _91746 _91747) : term469 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6862990 (_91746 : int) (_91747 : int) (h1 : term466 _91746 _91747) : term466 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6862991 (_91746 : int) (_91747 : int) (h1 : term461 _91746 _91747) : term461 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6862992 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term470 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6862993 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term462 _91746 _91747.
Proof. exact (proj2 (@lem6862992 _91746 _91747 h1)). Qed.
Lemma lem6862995 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term413 _91746 _91747.
Proof. exact (proj2 (@lem6862993 _91746 _91747 h1)). Qed.
Lemma lem6862997 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term360 _91746 _91747.
Proof. exact (proj2 (@lem6862995 _91746 _91747 h1)). Qed.
Lemma lem6862998 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (proj1 (@lem6862995 _91746 _91747 h1)). Qed.
Lemma lem6863000 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term280 _91746 _91747.
Proof. exact (proj1 (@lem6862997 _91746 _91747 h1)). Qed.
Lemma lem6863002 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6863003 : term471 = term251.
Proof. exact (@lem6863002 term133 term143). Qed.
Lemma lem6863005 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863006 : term143 = term224.
Proof. exact (@lem6863005 term11). Qed.
Lemma lem6863008 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863009 : term133 = term196.
Proof. exact (@lem6863008 (NUMERAL 0)). Qed.
Lemma lem6863010 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863011 : term472 = term473.
Proof. exact (MK_COMB (@lem6863010) (@lem6863009)). Qed.
Lemma lem6863012 : term251 = term474.
Proof. exact (MK_COMB (@lem6863011) (@lem6863006)). Qed.
Lemma lem6863013 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6863015 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863016 : term251 = term252.
Proof. exact (@lem6863015 (NUMERAL 0) term11). Qed.
Lemma lem6863017 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863018 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863019 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863018 h1) (fun h1 : term252 = True => @lem6863017)). Qed.
Lemma lem6863020 : term252 = True.
Proof. exact (EQ_MP (@lem6863019) (@lem6863017)). Qed.
Lemma lem6863021 : term251 = True.
Proof. exact (TRANS (@lem6863016) (@lem6863020)). Qed.
Lemma lem6863022 : True = term251.
Proof. exact (SYM (@lem6863021)). Qed.
Lemma lem6863023 : term251.
Proof. exact (EQ_MP (@lem6863022) (@lem0)). Qed.
Lemma lem6863024 : term476.
Proof. exact (@lem6863013 (@lem6863023)). Qed.
Lemma lem6863026 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863027 : term251 = term252.
Proof. exact (@lem6863026 (NUMERAL 0) term11). Qed.
Lemma lem6863028 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863029 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863030 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863029 h1) (fun h1 : term252 = True => @lem6863028)). Qed.
Lemma lem6863031 : term252 = True.
Proof. exact (EQ_MP (@lem6863030) (@lem6863028)). Qed.
Lemma lem6863032 : term251 = True.
Proof. exact (TRANS (@lem6863027) (@lem6863031)). Qed.
Lemma lem6863033 : True = term251.
Proof. exact (SYM (@lem6863032)). Qed.
Lemma lem6863034 : term251.
Proof. exact (EQ_MP (@lem6863033) (@lem0)). Qed.
Lemma lem6863035 : term474 = term477.
Proof. exact (@lem6863024 (@lem6863034)). Qed.
Lemma lem6863037 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863038 : term208 = term209.
Proof. exact (@lem6863037 term11 term11). Qed.
Lemma lem6863039 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863040 : term211 = term11.
Proof. exact (EQ_MP (@lem6863039) (@lem940073)). Qed.
Lemma lem6863041 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863042 : term209 = term143.
Proof. exact (MK_COMB (@lem6863041) (@lem6863040)). Qed.
Lemma lem6863043 : term208 = term143.
Proof. exact (TRANS (@lem6863038) (@lem6863042)). Qed.
Lemma lem6863045 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863046 : term263 = term133.
Proof. exact (@lem6863045 term11). Qed.
Lemma lem6863047 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863048 : term478 = term472.
Proof. exact (MK_COMB (@lem6863047) (@lem6863046)). Qed.
Lemma lem6863049 : term477 = term251.
Proof. exact (MK_COMB (@lem6863048) (@lem6863043)). Qed.
Lemma lem6863051 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863052 : term251 = term252.
Proof. exact (@lem6863051 (NUMERAL 0) term11). Qed.
Lemma lem6863053 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863054 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863055 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863054 h1) (fun h1 : term252 = True => @lem6863053)). Qed.
Lemma lem6863056 : term252 = True.
Proof. exact (EQ_MP (@lem6863055) (@lem6863053)). Qed.
Lemma lem6863057 : term251 = True.
Proof. exact (TRANS (@lem6863052) (@lem6863056)). Qed.
Lemma lem6863058 : term477 = True.
Proof. exact (TRANS (@lem6863049) (@lem6863057)). Qed.
Lemma lem6863059 : term474 = True.
Proof. exact (TRANS (@lem6863035) (@lem6863058)). Qed.
Lemma lem6863060 : term251 = True.
Proof. exact (TRANS (@lem6863012) (@lem6863059)). Qed.
Lemma lem6863061 : term471 = True.
Proof. exact (TRANS (@lem6863003) (@lem6863060)). Qed.
Lemma lem6863062 : True = term471.
Proof. exact (SYM (@lem6863061)). Qed.
Lemma lem6863063 : term471.
Proof. exact (EQ_MP (@lem6863062) (@lem0)). Qed.
Lemma lem6863064 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term479 _91746 _91747.
Proof. exact (conj (@lem6863063) (@lem6863000 _91746 _91747 h1)). Qed.
Lemma lem6863066 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6863067 (_91746 : int) (_91747 : int) : term481 _91746 _91747.
Proof. exact (@lem6863066 term143 (term277 _91746 _91747)). Qed.
Lemma lem6863068 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term482 _91746 _91747.
Proof. exact (@lem6863067 _91746 _91747 (@lem6863064 _91746 _91747 h1)). Qed.
Lemma lem6863069 (_91746 : int) (_91747 : int) : (term483 _91746 _91747) = (term277 _91746 _91747).
Proof. exact (@lem1982733 (term277 _91746 _91747)). Qed.
Lemma lem6863070 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863071 (_91746 : int) (_91747 : int) : (term484 _91746 _91747) = (term279 _91746 _91747).
Proof. exact (MK_COMB (@lem6863070) (@lem6863069 _91746 _91747)). Qed.
Lemma lem6863072 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863073 (_91746 : int) (_91747 : int) : (term482 _91746 _91747) = (term280 _91746 _91747).
Proof. exact (MK_COMB (@lem6863071 _91746 _91747) (@lem6863072)). Qed.
Lemma lem6863074 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term280 _91746 _91747.
Proof. exact (EQ_MP (@lem6863073 _91746 _91747) (@lem6863068 _91746 _91747 h1)). Qed.
Lemma lem6863076 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6863077 (_91746 : int) (_91747 : int) : term486 _91746 _91747.
Proof. exact (@lem6863076 (term236 _91746 _91747)). Qed.
Lemma lem6863078 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term487 _91746 _91747.
Proof. exact (@lem6863077 _91746 _91747 (@lem6862998 _91746 _91747 h1)). Qed.
Lemma lem6863079 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term488 _91746 _91747.
Proof. exact (@lem6863078 _91746 _91747 h1 term143). Qed.
Lemma lem6863080 (_91746 : int) (_91747 : int) : (term488 _91746 _91747) = ((term489 _91746 _91747) = term133).
Proof. exact (eq_refl (term488 _91746 _91747)). Qed.
Lemma lem6863081 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : (term489 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6863080 _91746 _91747) (@lem6863079 _91746 _91747 h1)). Qed.
Lemma lem6863082 (_91746 : int) (_91747 : int) : (term489 _91746 _91747) = (term236 _91746 _91747).
Proof. exact (@lem1982733 (term236 _91746 _91747)). Qed.
Lemma lem6863083 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6863084 (_91746 : int) (_91747 : int) : (term490 _91746 _91747) = (term239 _91746 _91747).
Proof. exact (MK_COMB (@lem6863083) (@lem6863082 _91746 _91747)). Qed.
Lemma lem6863085 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863086 (_91746 : int) (_91747 : int) : ((term489 _91746 _91747) = term133) = ((term236 _91746 _91747) = term133).
Proof. exact (MK_COMB (@lem6863084 _91746 _91747) (@lem6863085)). Qed.
Lemma lem6863087 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6863086 _91746 _91747) (@lem6863081 _91746 _91747 h1)). Qed.
Lemma lem6863088 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term491 _91746 _91747.
Proof. exact (conj (@lem6863087 _91746 _91747 h1) (@lem6863074 _91746 _91747 h1)). Qed.
Lemma lem6863090 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6863091 (_91746 : int) (_91747 : int) : term493 _91746 _91747.
Proof. exact (@lem6863090 (term236 _91746 _91747) (term277 _91746 _91747)). Qed.
Lemma lem6863092 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term494 _91746 _91747.
Proof. exact (@lem6863091 _91746 _91747 (@lem6863088 _91746 _91747 h1)). Qed.
Lemma lem6863093 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = (term496 _91746 _91747).
Proof. exact (@lem1982753 (term237 _91746) (real_of_int _91746) (term299 _91747) (term237 _91747)). Qed.
Lemma lem6863094 (_91746 : int) : (term497 _91746) = (term498 _91746).
Proof. exact (@lem1982713 term199 (real_of_int _91746)). Qed.
Lemma lem6863096 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863097 : term143 = term224.
Proof. exact (@lem6863096 term11). Qed.
Lemma lem6863099 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6863100 : term199 = term200.
Proof. exact (@lem6863099 term11). Qed.
Lemma lem6863101 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863102 : term499 = term500.
Proof. exact (MK_COMB (@lem6863101) (@lem6863100)). Qed.
Lemma lem6863103 : term501 = term502.
Proof. exact (MK_COMB (@lem6863102) (@lem6863097)). Qed.
Lemma lem6863104 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6863106 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863107 : term251 = term252.
Proof. exact (@lem6863106 (NUMERAL 0) term11). Qed.
Lemma lem6863108 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863109 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863110 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863109 h1) (fun h1 : term252 = True => @lem6863108)). Qed.
Lemma lem6863111 : term252 = True.
Proof. exact (EQ_MP (@lem6863110) (@lem6863108)). Qed.
Lemma lem6863112 : term251 = True.
Proof. exact (TRANS (@lem6863107) (@lem6863111)). Qed.
Lemma lem6863113 : True = term251.
Proof. exact (SYM (@lem6863112)). Qed.
Lemma lem6863114 : term251.
Proof. exact (EQ_MP (@lem6863113) (@lem0)). Qed.
Lemma lem6863115 : term504.
Proof. exact (@lem6863104 (@lem6863114)). Qed.
Lemma lem6863117 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863118 : term251 = term252.
Proof. exact (@lem6863117 (NUMERAL 0) term11). Qed.
Lemma lem6863119 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863120 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863121 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863120 h1) (fun h1 : term252 = True => @lem6863119)). Qed.
Lemma lem6863122 : term252 = True.
Proof. exact (EQ_MP (@lem6863121) (@lem6863119)). Qed.
Lemma lem6863123 : term251 = True.
Proof. exact (TRANS (@lem6863118) (@lem6863122)). Qed.
Lemma lem6863124 : True = term251.
Proof. exact (SYM (@lem6863123)). Qed.
Lemma lem6863125 : term251.
Proof. exact (EQ_MP (@lem6863124) (@lem0)). Qed.
Lemma lem6863126 : term505.
Proof. exact (@lem6863115 (@lem6863125)). Qed.
Lemma lem6863128 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863129 : term251 = term252.
Proof. exact (@lem6863128 (NUMERAL 0) term11). Qed.
Lemma lem6863130 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863131 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863132 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863131 h1) (fun h1 : term252 = True => @lem6863130)). Qed.
Lemma lem6863133 : term252 = True.
Proof. exact (EQ_MP (@lem6863132) (@lem6863130)). Qed.
Lemma lem6863134 : term251 = True.
Proof. exact (TRANS (@lem6863129) (@lem6863133)). Qed.
Lemma lem6863135 : True = term251.
Proof. exact (SYM (@lem6863134)). Qed.
Lemma lem6863136 : term251.
Proof. exact (EQ_MP (@lem6863135) (@lem0)). Qed.
Lemma lem6863137 : term506.
Proof. exact (@lem6863126 (@lem6863136)). Qed.
Lemma lem6863139 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863140 : term208 = term209.
Proof. exact (@lem6863139 term11 term11). Qed.
Lemma lem6863141 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863142 : term211 = term11.
Proof. exact (EQ_MP (@lem6863141) (@lem940073)). Qed.
Lemma lem6863143 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863144 : term209 = term143.
Proof. exact (MK_COMB (@lem6863143) (@lem6863142)). Qed.
Lemma lem6863145 : term208 = term143.
Proof. exact (TRANS (@lem6863140) (@lem6863144)). Qed.
Lemma lem6863147 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6863148 : term225 = term230.
Proof. exact (@lem6863147 term11 term11). Qed.
Lemma lem6863149 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863150 : term211 = term11.
Proof. exact (EQ_MP (@lem6863149) (@lem940073)). Qed.
Lemma lem6863151 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863152 : term209 = term143.
Proof. exact (MK_COMB (@lem6863151) (@lem6863150)). Qed.
Lemma lem6863153 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6863154 : term230 = term199.
Proof. exact (MK_COMB (@lem6863153) (@lem6863152)). Qed.
Lemma lem6863155 : term225 = term199.
Proof. exact (TRANS (@lem6863148) (@lem6863154)). Qed.
Lemma lem6863156 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863157 : term507 = term499.
Proof. exact (MK_COMB (@lem6863156) (@lem6863155)). Qed.
Lemma lem6863158 : term508 = term501.
Proof. exact (MK_COMB (@lem6863157) (@lem6863145)). Qed.
Lemma lem6863160 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6863161 : term501 = term133.
Proof. exact (@lem6863160 term11). Qed.
Lemma lem6863162 : term508 = term133.
Proof. exact (TRANS (@lem6863158) (@lem6863161)). Qed.
Lemma lem6863163 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863164 : term510 = term261.
Proof. exact (MK_COMB (@lem6863163) (@lem6863162)). Qed.
Lemma lem6863165 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6863166 : term511 = term263.
Proof. exact (MK_COMB (@lem6863164) (@lem6863165)). Qed.
Lemma lem6863168 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863169 : term263 = term133.
Proof. exact (@lem6863168 term11). Qed.
Lemma lem6863170 : term511 = term133.
Proof. exact (TRANS (@lem6863166) (@lem6863169)). Qed.
Lemma lem6863172 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863173 : term208 = term209.
Proof. exact (@lem6863172 term11 term11). Qed.
Lemma lem6863174 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863175 : term211 = term11.
Proof. exact (EQ_MP (@lem6863174) (@lem940073)). Qed.
Lemma lem6863176 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863177 : term209 = term143.
Proof. exact (MK_COMB (@lem6863176) (@lem6863175)). Qed.
Lemma lem6863178 : term208 = term143.
Proof. exact (TRANS (@lem6863173) (@lem6863177)). Qed.
Lemma lem6863179 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6863180 : term265 = term263.
Proof. exact (MK_COMB (@lem6863179) (@lem6863178)). Qed.
Lemma lem6863182 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863183 : term263 = term133.
Proof. exact (@lem6863182 term11). Qed.
Lemma lem6863184 : term265 = term133.
Proof. exact (TRANS (@lem6863180) (@lem6863183)). Qed.
Lemma lem6863185 : term133 = term265.
Proof. exact (SYM (@lem6863184)). Qed.
Lemma lem6863186 : term511 = term265.
Proof. exact (TRANS (@lem6863170) (@lem6863185)). Qed.
Lemma lem6863187 : term502 = term196.
Proof. exact (@lem6863137 (@lem6863186)). Qed.
Lemma lem6863188 : term501 = term196.
Proof. exact (TRANS (@lem6863103) (@lem6863187)). Qed.
Lemma lem6863190 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6863191 : term196 = term133.
Proof. exact (@lem6863190 term133). Qed.
Lemma lem6863192 : term501 = term133.
Proof. exact (TRANS (@lem6863188) (@lem6863191)). Qed.
Lemma lem6863193 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863194 : term512 = term261.
Proof. exact (MK_COMB (@lem6863193) (@lem6863192)). Qed.
Lemma lem6863195 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6863196 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6863194) (@lem6863195 _91746)). Qed.
Lemma lem6863197 (_91746 : int) : (term497 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6863094 _91746) (@lem6863196 _91746)). Qed.
Lemma lem6863198 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6863199 (_91746 : int) : (term497 _91746) = term133.
Proof. exact (TRANS (@lem6863197 _91746) (@lem6863198 _91746)). Qed.
Lemma lem6863200 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863201 (_91746 : int) : (term514 _91746) = term175.
Proof. exact (MK_COMB (@lem6863200) (@lem6863199 _91746)). Qed.
Lemma lem6863202 (_91747 : int) : (term515 _91747) = (term516 _91747).
Proof. exact (@lem1982759 (real_of_int _91747) (term237 _91747) term199). Qed.
Lemma lem6863203 (_91747 : int) : (term517 _91747) = (term498 _91747).
Proof. exact (@lem1982715 term199 (real_of_int _91747)). Qed.
Lemma lem6863205 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863206 : term143 = term224.
Proof. exact (@lem6863205 term11). Qed.
Lemma lem6863208 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6863209 : term199 = term200.
Proof. exact (@lem6863208 term11). Qed.
Lemma lem6863210 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863211 : term499 = term500.
Proof. exact (MK_COMB (@lem6863210) (@lem6863209)). Qed.
Lemma lem6863212 : term501 = term502.
Proof. exact (MK_COMB (@lem6863211) (@lem6863206)). Qed.
Lemma lem6863213 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6863215 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863216 : term251 = term252.
Proof. exact (@lem6863215 (NUMERAL 0) term11). Qed.
Lemma lem6863217 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863218 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863219 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863218 h1) (fun h1 : term252 = True => @lem6863217)). Qed.
Lemma lem6863220 : term252 = True.
Proof. exact (EQ_MP (@lem6863219) (@lem6863217)). Qed.
Lemma lem6863221 : term251 = True.
Proof. exact (TRANS (@lem6863216) (@lem6863220)). Qed.
Lemma lem6863222 : True = term251.
Proof. exact (SYM (@lem6863221)). Qed.
Lemma lem6863223 : term251.
Proof. exact (EQ_MP (@lem6863222) (@lem0)). Qed.
Lemma lem6863224 : term504.
Proof. exact (@lem6863213 (@lem6863223)). Qed.
Lemma lem6863226 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863227 : term251 = term252.
Proof. exact (@lem6863226 (NUMERAL 0) term11). Qed.
Lemma lem6863228 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863229 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863230 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863229 h1) (fun h1 : term252 = True => @lem6863228)). Qed.
Lemma lem6863231 : term252 = True.
Proof. exact (EQ_MP (@lem6863230) (@lem6863228)). Qed.
Lemma lem6863232 : term251 = True.
Proof. exact (TRANS (@lem6863227) (@lem6863231)). Qed.
Lemma lem6863233 : True = term251.
Proof. exact (SYM (@lem6863232)). Qed.
Lemma lem6863234 : term251.
Proof. exact (EQ_MP (@lem6863233) (@lem0)). Qed.
Lemma lem6863235 : term505.
Proof. exact (@lem6863224 (@lem6863234)). Qed.
Lemma lem6863237 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863238 : term251 = term252.
Proof. exact (@lem6863237 (NUMERAL 0) term11). Qed.
Lemma lem6863239 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863240 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863241 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863240 h1) (fun h1 : term252 = True => @lem6863239)). Qed.
Lemma lem6863242 : term252 = True.
Proof. exact (EQ_MP (@lem6863241) (@lem6863239)). Qed.
Lemma lem6863243 : term251 = True.
Proof. exact (TRANS (@lem6863238) (@lem6863242)). Qed.
Lemma lem6863244 : True = term251.
Proof. exact (SYM (@lem6863243)). Qed.
Lemma lem6863245 : term251.
Proof. exact (EQ_MP (@lem6863244) (@lem0)). Qed.
Lemma lem6863246 : term506.
Proof. exact (@lem6863235 (@lem6863245)). Qed.
Lemma lem6863248 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863249 : term208 = term209.
Proof. exact (@lem6863248 term11 term11). Qed.
Lemma lem6863250 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863251 : term211 = term11.
Proof. exact (EQ_MP (@lem6863250) (@lem940073)). Qed.
Lemma lem6863252 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863253 : term209 = term143.
Proof. exact (MK_COMB (@lem6863252) (@lem6863251)). Qed.
Lemma lem6863254 : term208 = term143.
Proof. exact (TRANS (@lem6863249) (@lem6863253)). Qed.
Lemma lem6863256 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6863257 : term225 = term230.
Proof. exact (@lem6863256 term11 term11). Qed.
Lemma lem6863258 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863259 : term211 = term11.
Proof. exact (EQ_MP (@lem6863258) (@lem940073)). Qed.
Lemma lem6863260 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863261 : term209 = term143.
Proof. exact (MK_COMB (@lem6863260) (@lem6863259)). Qed.
Lemma lem6863262 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6863263 : term230 = term199.
Proof. exact (MK_COMB (@lem6863262) (@lem6863261)). Qed.
Lemma lem6863264 : term225 = term199.
Proof. exact (TRANS (@lem6863257) (@lem6863263)). Qed.
Lemma lem6863265 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863266 : term507 = term499.
Proof. exact (MK_COMB (@lem6863265) (@lem6863264)). Qed.
Lemma lem6863267 : term508 = term501.
Proof. exact (MK_COMB (@lem6863266) (@lem6863254)). Qed.
Lemma lem6863269 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6863270 : term501 = term133.
Proof. exact (@lem6863269 term11). Qed.
Lemma lem6863271 : term508 = term133.
Proof. exact (TRANS (@lem6863267) (@lem6863270)). Qed.
Lemma lem6863272 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863273 : term510 = term261.
Proof. exact (MK_COMB (@lem6863272) (@lem6863271)). Qed.
Lemma lem6863274 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6863275 : term511 = term263.
Proof. exact (MK_COMB (@lem6863273) (@lem6863274)). Qed.
Lemma lem6863277 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863278 : term263 = term133.
Proof. exact (@lem6863277 term11). Qed.
Lemma lem6863279 : term511 = term133.
Proof. exact (TRANS (@lem6863275) (@lem6863278)). Qed.
Lemma lem6863281 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863282 : term208 = term209.
Proof. exact (@lem6863281 term11 term11). Qed.
Lemma lem6863283 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863284 : term211 = term11.
Proof. exact (EQ_MP (@lem6863283) (@lem940073)). Qed.
Lemma lem6863285 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863286 : term209 = term143.
Proof. exact (MK_COMB (@lem6863285) (@lem6863284)). Qed.
Lemma lem6863287 : term208 = term143.
Proof. exact (TRANS (@lem6863282) (@lem6863286)). Qed.
Lemma lem6863288 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6863289 : term265 = term263.
Proof. exact (MK_COMB (@lem6863288) (@lem6863287)). Qed.
Lemma lem6863291 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863292 : term263 = term133.
Proof. exact (@lem6863291 term11). Qed.
Lemma lem6863293 : term265 = term133.
Proof. exact (TRANS (@lem6863289) (@lem6863292)). Qed.
Lemma lem6863294 : term133 = term265.
Proof. exact (SYM (@lem6863293)). Qed.
Lemma lem6863295 : term511 = term265.
Proof. exact (TRANS (@lem6863279) (@lem6863294)). Qed.
Lemma lem6863296 : term502 = term196.
Proof. exact (@lem6863246 (@lem6863295)). Qed.
Lemma lem6863297 : term501 = term196.
Proof. exact (TRANS (@lem6863212) (@lem6863296)). Qed.
Lemma lem6863299 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6863300 : term196 = term133.
Proof. exact (@lem6863299 term133). Qed.
Lemma lem6863301 : term501 = term133.
Proof. exact (TRANS (@lem6863297) (@lem6863300)). Qed.
Lemma lem6863302 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863303 : term512 = term261.
Proof. exact (MK_COMB (@lem6863302) (@lem6863301)). Qed.
Lemma lem6863304 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6863305 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6863303) (@lem6863304 _91747)). Qed.
Lemma lem6863306 (_91747 : int) : (term517 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6863203 _91747) (@lem6863305 _91747)). Qed.
Lemma lem6863307 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6863308 (_91747 : int) : (term517 _91747) = term133.
Proof. exact (TRANS (@lem6863306 _91747) (@lem6863307 _91747)). Qed.
Lemma lem6863309 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863310 (_91747 : int) : (term518 _91747) = term175.
Proof. exact (MK_COMB (@lem6863309) (@lem6863308 _91747)). Qed.
Lemma lem6863311 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6863312 (_91747 : int) : (term516 _91747) = term519.
Proof. exact (MK_COMB (@lem6863310 _91747) (@lem6863311)). Qed.
Lemma lem6863313 (_91747 : int) : (term515 _91747) = term519.
Proof. exact (TRANS (@lem6863202 _91747) (@lem6863312 _91747)). Qed.
Lemma lem6863314 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6863315 (_91747 : int) : (term515 _91747) = term199.
Proof. exact (TRANS (@lem6863313 _91747) (@lem6863314)). Qed.
Lemma lem6863316 (_91746 : int) (_91747 : int) : (term496 _91746 _91747) = term519.
Proof. exact (MK_COMB (@lem6863201 _91746) (@lem6863315 _91747)). Qed.
Lemma lem6863317 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = term519.
Proof. exact (TRANS (@lem6863093 _91746 _91747) (@lem6863316 _91746 _91747)). Qed.
Lemma lem6863318 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6863319 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = term199.
Proof. exact (TRANS (@lem6863317 _91746 _91747) (@lem6863318)). Qed.
Lemma lem6863320 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863321 (_91746 : int) (_91747 : int) : (term520 _91746 _91747) = term521.
Proof. exact (MK_COMB (@lem6863320) (@lem6863319 _91746 _91747)). Qed.
Lemma lem6863322 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863323 (_91746 : int) (_91747 : int) : (term494 _91746 _91747) = term522.
Proof. exact (MK_COMB (@lem6863321 _91746 _91747) (@lem6863322)). Qed.
Lemma lem6863324 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6863323 _91746 _91747) (@lem6863092 _91746 _91747 h1)). Qed.
Lemma lem6863326 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6863327 : term522 = term523.
Proof. exact (@lem6863326 term133 term199). Qed.
Lemma lem6863329 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6863330 : term199 = term200.
Proof. exact (@lem6863329 term11). Qed.
Lemma lem6863332 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863333 : term133 = term196.
Proof. exact (@lem6863332 (NUMERAL 0)). Qed.
Lemma lem6863334 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6863335 : term135 = term524.
Proof. exact (MK_COMB (@lem6863334) (@lem6863333)). Qed.
Lemma lem6863336 : term523 = term525.
Proof. exact (MK_COMB (@lem6863335) (@lem6863330)). Qed.
Lemma lem6863337 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6863339 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863340 : term251 = term252.
Proof. exact (@lem6863339 (NUMERAL 0) term11). Qed.
Lemma lem6863341 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863342 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863343 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863342 h1) (fun h1 : term252 = True => @lem6863341)). Qed.
Lemma lem6863344 : term252 = True.
Proof. exact (EQ_MP (@lem6863343) (@lem6863341)). Qed.
Lemma lem6863345 : term251 = True.
Proof. exact (TRANS (@lem6863340) (@lem6863344)). Qed.
Lemma lem6863346 : True = term251.
Proof. exact (SYM (@lem6863345)). Qed.
Lemma lem6863347 : term251.
Proof. exact (EQ_MP (@lem6863346) (@lem0)). Qed.
Lemma lem6863348 : term527.
Proof. exact (@lem6863337 (@lem6863347)). Qed.
Lemma lem6863350 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863351 : term251 = term252.
Proof. exact (@lem6863350 (NUMERAL 0) term11). Qed.
Lemma lem6863352 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863353 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863354 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863353 h1) (fun h1 : term252 = True => @lem6863352)). Qed.
Lemma lem6863355 : term252 = True.
Proof. exact (EQ_MP (@lem6863354) (@lem6863352)). Qed.
Lemma lem6863356 : term251 = True.
Proof. exact (TRANS (@lem6863351) (@lem6863355)). Qed.
Lemma lem6863357 : True = term251.
Proof. exact (SYM (@lem6863356)). Qed.
Lemma lem6863358 : term251.
Proof. exact (EQ_MP (@lem6863357) (@lem0)). Qed.
Lemma lem6863359 : term525 = term528.
Proof. exact (@lem6863348 (@lem6863358)). Qed.
Lemma lem6863361 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6863362 : term225 = term230.
Proof. exact (@lem6863361 term11 term11). Qed.
Lemma lem6863363 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863364 : term211 = term11.
Proof. exact (EQ_MP (@lem6863363) (@lem940073)). Qed.
Lemma lem6863365 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863366 : term209 = term143.
Proof. exact (MK_COMB (@lem6863365) (@lem6863364)). Qed.
Lemma lem6863367 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6863368 : term230 = term199.
Proof. exact (MK_COMB (@lem6863367) (@lem6863366)). Qed.
Lemma lem6863369 : term225 = term199.
Proof. exact (TRANS (@lem6863362) (@lem6863368)). Qed.
Lemma lem6863371 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863372 : term263 = term133.
Proof. exact (@lem6863371 term11). Qed.
Lemma lem6863373 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6863374 : term529 = term135.
Proof. exact (MK_COMB (@lem6863373) (@lem6863372)). Qed.
Lemma lem6863375 : term528 = term523.
Proof. exact (MK_COMB (@lem6863374) (@lem6863369)). Qed.
Lemma lem6863377 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6863378 : term523 = term532.
Proof. exact (@lem6863377 (NUMERAL 0) term11). Qed.
Lemma lem6863379 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863380 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6863381 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863380 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6863379)). Qed.
Lemma lem6863382 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6863381) (@lem6863379)). Qed.
Lemma lem6863383 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6863384 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6863385 : term533 = (and True).
Proof. exact (MK_COMB (@lem6863384) (@lem6863383)). Qed.
Lemma lem6863386 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6863385) (@lem6863382)). Qed.
Lemma lem6863388 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6863389 : term532 = False.
Proof. exact (TRANS (@lem6863386) (@lem6863388)). Qed.
Lemma lem6863390 : term523 = False.
Proof. exact (TRANS (@lem6863378) (@lem6863389)). Qed.
Lemma lem6863391 : term528 = False.
Proof. exact (TRANS (@lem6863375) (@lem6863390)). Qed.
Lemma lem6863392 : term525 = False.
Proof. exact (TRANS (@lem6863359) (@lem6863391)). Qed.
Lemma lem6863393 : term523 = False.
Proof. exact (TRANS (@lem6863336) (@lem6863392)). Qed.
Lemma lem6863394 : term522 = False.
Proof. exact (TRANS (@lem6863327) (@lem6863393)). Qed.
Lemma lem6863395 (_91746 : int) (_91747 : int) (h1 : term470 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6863394) (@lem6863324 _91746 _91747 h1)). Qed.
Lemma lem6863396 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term534 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6863397 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term463 _91746 _91747.
Proof. exact (proj2 (@lem6863396 _91746 _91747 h1)). Qed.
Lemma lem6863399 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term414 _91746 _91747.
Proof. exact (proj2 (@lem6863397 _91746 _91747 h1)). Qed.
Lemma lem6863401 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term360 _91746 _91747.
Proof. exact (proj2 (@lem6863399 _91746 _91747 h1)). Qed.
Lemma lem6863402 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term272 _91747 _91746.
Proof. exact (proj1 (@lem6863399 _91746 _91747 h1)). Qed.
Lemma lem6863403 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : (real_of_int _91746) = term133.
Proof. exact (proj2 (@lem6863402 _91746 _91747 h1)). Qed.
Lemma lem6863405 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term286 _91746 _91747.
Proof. exact (proj2 (@lem6863401 _91746 _91747 h1)). Qed.
Lemma lem6863406 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term280 _91746 _91747.
Proof. exact (proj1 (@lem6863401 _91746 _91747 h1)). Qed.
Lemma lem6863408 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6863409 : term471 = term251.
Proof. exact (@lem6863408 term133 term143). Qed.
Lemma lem6863411 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863412 : term143 = term224.
Proof. exact (@lem6863411 term11). Qed.
Lemma lem6863414 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863415 : term133 = term196.
Proof. exact (@lem6863414 (NUMERAL 0)). Qed.
Lemma lem6863416 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863417 : term472 = term473.
Proof. exact (MK_COMB (@lem6863416) (@lem6863415)). Qed.
Lemma lem6863418 : term251 = term474.
Proof. exact (MK_COMB (@lem6863417) (@lem6863412)). Qed.
Lemma lem6863419 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6863421 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863422 : term251 = term252.
Proof. exact (@lem6863421 (NUMERAL 0) term11). Qed.
Lemma lem6863423 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863424 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863425 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863424 h1) (fun h1 : term252 = True => @lem6863423)). Qed.
Lemma lem6863426 : term252 = True.
Proof. exact (EQ_MP (@lem6863425) (@lem6863423)). Qed.
Lemma lem6863427 : term251 = True.
Proof. exact (TRANS (@lem6863422) (@lem6863426)). Qed.
Lemma lem6863428 : True = term251.
Proof. exact (SYM (@lem6863427)). Qed.
Lemma lem6863429 : term251.
Proof. exact (EQ_MP (@lem6863428) (@lem0)). Qed.
Lemma lem6863430 : term476.
Proof. exact (@lem6863419 (@lem6863429)). Qed.
Lemma lem6863432 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863433 : term251 = term252.
Proof. exact (@lem6863432 (NUMERAL 0) term11). Qed.
Lemma lem6863434 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863435 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863436 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863435 h1) (fun h1 : term252 = True => @lem6863434)). Qed.
Lemma lem6863437 : term252 = True.
Proof. exact (EQ_MP (@lem6863436) (@lem6863434)). Qed.
Lemma lem6863438 : term251 = True.
Proof. exact (TRANS (@lem6863433) (@lem6863437)). Qed.
Lemma lem6863439 : True = term251.
Proof. exact (SYM (@lem6863438)). Qed.
Lemma lem6863440 : term251.
Proof. exact (EQ_MP (@lem6863439) (@lem0)). Qed.
Lemma lem6863441 : term474 = term477.
Proof. exact (@lem6863430 (@lem6863440)). Qed.
Lemma lem6863443 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863444 : term208 = term209.
Proof. exact (@lem6863443 term11 term11). Qed.
Lemma lem6863445 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863446 : term211 = term11.
Proof. exact (EQ_MP (@lem6863445) (@lem940073)). Qed.
Lemma lem6863447 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863448 : term209 = term143.
Proof. exact (MK_COMB (@lem6863447) (@lem6863446)). Qed.
Lemma lem6863449 : term208 = term143.
Proof. exact (TRANS (@lem6863444) (@lem6863448)). Qed.
Lemma lem6863451 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863452 : term263 = term133.
Proof. exact (@lem6863451 term11). Qed.
Lemma lem6863453 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863454 : term478 = term472.
Proof. exact (MK_COMB (@lem6863453) (@lem6863452)). Qed.
Lemma lem6863455 : term477 = term251.
Proof. exact (MK_COMB (@lem6863454) (@lem6863449)). Qed.
Lemma lem6863457 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863458 : term251 = term252.
Proof. exact (@lem6863457 (NUMERAL 0) term11). Qed.
Lemma lem6863459 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863460 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863461 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863460 h1) (fun h1 : term252 = True => @lem6863459)). Qed.
Lemma lem6863462 : term252 = True.
Proof. exact (EQ_MP (@lem6863461) (@lem6863459)). Qed.
Lemma lem6863463 : term251 = True.
Proof. exact (TRANS (@lem6863458) (@lem6863462)). Qed.
Lemma lem6863464 : term477 = True.
Proof. exact (TRANS (@lem6863455) (@lem6863463)). Qed.
Lemma lem6863465 : term474 = True.
Proof. exact (TRANS (@lem6863441) (@lem6863464)). Qed.
Lemma lem6863466 : term251 = True.
Proof. exact (TRANS (@lem6863418) (@lem6863465)). Qed.
Lemma lem6863467 : term471 = True.
Proof. exact (TRANS (@lem6863409) (@lem6863466)). Qed.
Lemma lem6863468 : True = term471.
Proof. exact (SYM (@lem6863467)). Qed.
Lemma lem6863469 : term471.
Proof. exact (EQ_MP (@lem6863468) (@lem0)). Qed.
Lemma lem6863470 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term535 _91746 _91747.
Proof. exact (conj (@lem6863469) (@lem6863405 _91746 _91747 h1)). Qed.
Lemma lem6863472 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6863473 (_91746 : int) (_91747 : int) : term536 _91746 _91747.
Proof. exact (@lem6863472 term143 (term236 _91746 _91747)). Qed.
Lemma lem6863474 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term537 _91746 _91747.
Proof. exact (@lem6863473 _91746 _91747 (@lem6863470 _91746 _91747 h1)). Qed.
Lemma lem6863475 (_91746 : int) (_91747 : int) : (term489 _91746 _91747) = (term236 _91746 _91747).
Proof. exact (@lem1982733 (term236 _91746 _91747)). Qed.
Lemma lem6863476 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863477 (_91746 : int) (_91747 : int) : (term538 _91746 _91747) = (term285 _91746 _91747).
Proof. exact (MK_COMB (@lem6863476) (@lem6863475 _91746 _91747)). Qed.
Lemma lem6863478 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863479 (_91746 : int) (_91747 : int) : (term537 _91746 _91747) = (term286 _91746 _91747).
Proof. exact (MK_COMB (@lem6863477 _91746 _91747) (@lem6863478)). Qed.
Lemma lem6863480 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term286 _91746 _91747.
Proof. exact (EQ_MP (@lem6863479 _91746 _91747) (@lem6863474 _91746 _91747 h1)). Qed.
Lemma lem6863482 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6863483 (_91746 : int) : term539 _91746.
Proof. exact (@lem6863482 (real_of_int _91746)). Qed.
Lemma lem6863484 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term540 _91746.
Proof. exact (@lem6863483 _91746 (@lem6863403 _91746 _91747 h1)). Qed.
Lemma lem6863485 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term541 _91746.
Proof. exact (@lem6863484 _91746 _91747 h1 term143). Qed.
Lemma lem6863486 (_91746 : int) : (term541 _91746) = ((term542 _91746) = term133).
Proof. exact (eq_refl (term541 _91746)). Qed.
Lemma lem6863487 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : (term542 _91746) = term133.
Proof. exact (EQ_MP (@lem6863486 _91746) (@lem6863485 _91746 _91747 h1)). Qed.
Lemma lem6863488 (_91746 : int) : (term542 _91746) = (real_of_int _91746).
Proof. exact (@lem1982733 (real_of_int _91746)). Qed.
Lemma lem6863489 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6863490 (_91746 : int) : (term543 _91746) = (term146 _91746).
Proof. exact (MK_COMB (@lem6863489) (@lem6863488 _91746)). Qed.
Lemma lem6863491 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863492 (_91746 : int) : ((term542 _91746) = term133) = ((real_of_int _91746) = term133).
Proof. exact (MK_COMB (@lem6863490 _91746) (@lem6863491)). Qed.
Lemma lem6863493 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : (real_of_int _91746) = term133.
Proof. exact (EQ_MP (@lem6863492 _91746) (@lem6863487 _91746 _91747 h1)). Qed.
Lemma lem6863494 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term544 _91746 _91747.
Proof. exact (conj (@lem6863493 _91746 _91747 h1) (@lem6863480 _91746 _91747 h1)). Qed.
Lemma lem6863496 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6863497 (_91746 : int) (_91747 : int) : term545 _91746 _91747.
Proof. exact (@lem6863496 (real_of_int _91746) (term236 _91746 _91747)). Qed.
Lemma lem6863498 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term546 _91746 _91747.
Proof. exact (@lem6863497 _91746 _91747 (@lem6863494 _91746 _91747 h1)). Qed.
Lemma lem6863499 (_91746 : int) (_91747 : int) : (term547 _91746 _91747) = (term548 _91746 _91747).
Proof. exact (@lem1982763 (real_of_int _91746) (term237 _91746) (term299 _91747)). Qed.
Lemma lem6863500 (_91746 : int) : (term517 _91746) = (term498 _91746).
Proof. exact (@lem1982715 term199 (real_of_int _91746)). Qed.
Lemma lem6863502 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863503 : term143 = term224.
Proof. exact (@lem6863502 term11). Qed.
Lemma lem6863505 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6863506 : term199 = term200.
Proof. exact (@lem6863505 term11). Qed.
Lemma lem6863507 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863508 : term499 = term500.
Proof. exact (MK_COMB (@lem6863507) (@lem6863506)). Qed.
Lemma lem6863509 : term501 = term502.
Proof. exact (MK_COMB (@lem6863508) (@lem6863503)). Qed.
Lemma lem6863510 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6863512 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863513 : term251 = term252.
Proof. exact (@lem6863512 (NUMERAL 0) term11). Qed.
Lemma lem6863514 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863515 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863516 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863515 h1) (fun h1 : term252 = True => @lem6863514)). Qed.
Lemma lem6863517 : term252 = True.
Proof. exact (EQ_MP (@lem6863516) (@lem6863514)). Qed.
Lemma lem6863518 : term251 = True.
Proof. exact (TRANS (@lem6863513) (@lem6863517)). Qed.
Lemma lem6863519 : True = term251.
Proof. exact (SYM (@lem6863518)). Qed.
Lemma lem6863520 : term251.
Proof. exact (EQ_MP (@lem6863519) (@lem0)). Qed.
Lemma lem6863521 : term504.
Proof. exact (@lem6863510 (@lem6863520)). Qed.
Lemma lem6863523 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863524 : term251 = term252.
Proof. exact (@lem6863523 (NUMERAL 0) term11). Qed.
Lemma lem6863525 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863526 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863527 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863526 h1) (fun h1 : term252 = True => @lem6863525)). Qed.
Lemma lem6863528 : term252 = True.
Proof. exact (EQ_MP (@lem6863527) (@lem6863525)). Qed.
Lemma lem6863529 : term251 = True.
Proof. exact (TRANS (@lem6863524) (@lem6863528)). Qed.
Lemma lem6863530 : True = term251.
Proof. exact (SYM (@lem6863529)). Qed.
Lemma lem6863531 : term251.
Proof. exact (EQ_MP (@lem6863530) (@lem0)). Qed.
Lemma lem6863532 : term505.
Proof. exact (@lem6863521 (@lem6863531)). Qed.
Lemma lem6863534 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863535 : term251 = term252.
Proof. exact (@lem6863534 (NUMERAL 0) term11). Qed.
Lemma lem6863536 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863537 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863538 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863537 h1) (fun h1 : term252 = True => @lem6863536)). Qed.
Lemma lem6863539 : term252 = True.
Proof. exact (EQ_MP (@lem6863538) (@lem6863536)). Qed.
Lemma lem6863540 : term251 = True.
Proof. exact (TRANS (@lem6863535) (@lem6863539)). Qed.
Lemma lem6863541 : True = term251.
Proof. exact (SYM (@lem6863540)). Qed.
Lemma lem6863542 : term251.
Proof. exact (EQ_MP (@lem6863541) (@lem0)). Qed.
Lemma lem6863543 : term506.
Proof. exact (@lem6863532 (@lem6863542)). Qed.
Lemma lem6863545 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863546 : term208 = term209.
Proof. exact (@lem6863545 term11 term11). Qed.
Lemma lem6863547 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863548 : term211 = term11.
Proof. exact (EQ_MP (@lem6863547) (@lem940073)). Qed.
Lemma lem6863549 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863550 : term209 = term143.
Proof. exact (MK_COMB (@lem6863549) (@lem6863548)). Qed.
Lemma lem6863551 : term208 = term143.
Proof. exact (TRANS (@lem6863546) (@lem6863550)). Qed.
Lemma lem6863553 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6863554 : term225 = term230.
Proof. exact (@lem6863553 term11 term11). Qed.
Lemma lem6863555 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863556 : term211 = term11.
Proof. exact (EQ_MP (@lem6863555) (@lem940073)). Qed.
Lemma lem6863557 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863558 : term209 = term143.
Proof. exact (MK_COMB (@lem6863557) (@lem6863556)). Qed.
Lemma lem6863559 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6863560 : term230 = term199.
Proof. exact (MK_COMB (@lem6863559) (@lem6863558)). Qed.
Lemma lem6863561 : term225 = term199.
Proof. exact (TRANS (@lem6863554) (@lem6863560)). Qed.
Lemma lem6863562 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863563 : term507 = term499.
Proof. exact (MK_COMB (@lem6863562) (@lem6863561)). Qed.
Lemma lem6863564 : term508 = term501.
Proof. exact (MK_COMB (@lem6863563) (@lem6863551)). Qed.
Lemma lem6863566 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6863567 : term501 = term133.
Proof. exact (@lem6863566 term11). Qed.
Lemma lem6863568 : term508 = term133.
Proof. exact (TRANS (@lem6863564) (@lem6863567)). Qed.
Lemma lem6863569 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863570 : term510 = term261.
Proof. exact (MK_COMB (@lem6863569) (@lem6863568)). Qed.
Lemma lem6863571 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6863572 : term511 = term263.
Proof. exact (MK_COMB (@lem6863570) (@lem6863571)). Qed.
Lemma lem6863574 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863575 : term263 = term133.
Proof. exact (@lem6863574 term11). Qed.
Lemma lem6863576 : term511 = term133.
Proof. exact (TRANS (@lem6863572) (@lem6863575)). Qed.
Lemma lem6863578 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863579 : term208 = term209.
Proof. exact (@lem6863578 term11 term11). Qed.
Lemma lem6863580 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863581 : term211 = term11.
Proof. exact (EQ_MP (@lem6863580) (@lem940073)). Qed.
Lemma lem6863582 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863583 : term209 = term143.
Proof. exact (MK_COMB (@lem6863582) (@lem6863581)). Qed.
Lemma lem6863584 : term208 = term143.
Proof. exact (TRANS (@lem6863579) (@lem6863583)). Qed.
Lemma lem6863585 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6863586 : term265 = term263.
Proof. exact (MK_COMB (@lem6863585) (@lem6863584)). Qed.
Lemma lem6863588 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863589 : term263 = term133.
Proof. exact (@lem6863588 term11). Qed.
Lemma lem6863590 : term265 = term133.
Proof. exact (TRANS (@lem6863586) (@lem6863589)). Qed.
Lemma lem6863591 : term133 = term265.
Proof. exact (SYM (@lem6863590)). Qed.
Lemma lem6863592 : term511 = term265.
Proof. exact (TRANS (@lem6863576) (@lem6863591)). Qed.
Lemma lem6863593 : term502 = term196.
Proof. exact (@lem6863543 (@lem6863592)). Qed.
Lemma lem6863594 : term501 = term196.
Proof. exact (TRANS (@lem6863509) (@lem6863593)). Qed.
Lemma lem6863596 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6863597 : term196 = term133.
Proof. exact (@lem6863596 term133). Qed.
Lemma lem6863598 : term501 = term133.
Proof. exact (TRANS (@lem6863594) (@lem6863597)). Qed.
Lemma lem6863599 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863600 : term512 = term261.
Proof. exact (MK_COMB (@lem6863599) (@lem6863598)). Qed.
Lemma lem6863601 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6863602 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6863600) (@lem6863601 _91746)). Qed.
Lemma lem6863603 (_91746 : int) : (term517 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6863500 _91746) (@lem6863602 _91746)). Qed.
Lemma lem6863604 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6863605 (_91746 : int) : (term517 _91746) = term133.
Proof. exact (TRANS (@lem6863603 _91746) (@lem6863604 _91746)). Qed.
Lemma lem6863606 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863607 (_91746 : int) : (term518 _91746) = term175.
Proof. exact (MK_COMB (@lem6863606) (@lem6863605 _91746)). Qed.
Lemma lem6863608 (_91747 : int) : (term299 _91747) = (term299 _91747).
Proof. exact (eq_refl (term299 _91747)). Qed.
Lemma lem6863609 (_91746 : int) (_91747 : int) : (term548 _91746 _91747) = (term549 _91747).
Proof. exact (MK_COMB (@lem6863607 _91746) (@lem6863608 _91747)). Qed.
Lemma lem6863610 (_91746 : int) (_91747 : int) : (term547 _91746 _91747) = (term549 _91747).
Proof. exact (TRANS (@lem6863499 _91746 _91747) (@lem6863609 _91746 _91747)). Qed.
Lemma lem6863611 (_91747 : int) : (term549 _91747) = (term299 _91747).
Proof. exact (@lem1982721 (term299 _91747)). Qed.
Lemma lem6863612 (_91746 : int) (_91747 : int) : (term547 _91746 _91747) = (term299 _91747).
Proof. exact (TRANS (@lem6863610 _91746 _91747) (@lem6863611 _91747)). Qed.
Lemma lem6863613 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863614 (_91746 : int) (_91747 : int) : (term550 _91746 _91747) = (term301 _91747).
Proof. exact (MK_COMB (@lem6863613) (@lem6863612 _91746 _91747)). Qed.
Lemma lem6863615 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863616 (_91746 : int) (_91747 : int) : (term546 _91746 _91747) = (term302 _91747).
Proof. exact (MK_COMB (@lem6863614 _91746 _91747) (@lem6863615)). Qed.
Lemma lem6863617 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term302 _91747.
Proof. exact (EQ_MP (@lem6863616 _91746 _91747) (@lem6863498 _91746 _91747 h1)). Qed.
Lemma lem6863619 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6863620 : term471 = term251.
Proof. exact (@lem6863619 term133 term143). Qed.
Lemma lem6863622 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863623 : term143 = term224.
Proof. exact (@lem6863622 term11). Qed.
Lemma lem6863625 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863626 : term133 = term196.
Proof. exact (@lem6863625 (NUMERAL 0)). Qed.
Lemma lem6863627 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863628 : term472 = term473.
Proof. exact (MK_COMB (@lem6863627) (@lem6863626)). Qed.
Lemma lem6863629 : term251 = term474.
Proof. exact (MK_COMB (@lem6863628) (@lem6863623)). Qed.
Lemma lem6863630 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6863632 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863633 : term251 = term252.
Proof. exact (@lem6863632 (NUMERAL 0) term11). Qed.
Lemma lem6863634 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863635 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863636 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863635 h1) (fun h1 : term252 = True => @lem6863634)). Qed.
Lemma lem6863637 : term252 = True.
Proof. exact (EQ_MP (@lem6863636) (@lem6863634)). Qed.
Lemma lem6863638 : term251 = True.
Proof. exact (TRANS (@lem6863633) (@lem6863637)). Qed.
Lemma lem6863639 : True = term251.
Proof. exact (SYM (@lem6863638)). Qed.
Lemma lem6863640 : term251.
Proof. exact (EQ_MP (@lem6863639) (@lem0)). Qed.
Lemma lem6863641 : term476.
Proof. exact (@lem6863630 (@lem6863640)). Qed.
Lemma lem6863643 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863644 : term251 = term252.
Proof. exact (@lem6863643 (NUMERAL 0) term11). Qed.
Lemma lem6863645 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863646 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863647 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863646 h1) (fun h1 : term252 = True => @lem6863645)). Qed.
Lemma lem6863648 : term252 = True.
Proof. exact (EQ_MP (@lem6863647) (@lem6863645)). Qed.
Lemma lem6863649 : term251 = True.
Proof. exact (TRANS (@lem6863644) (@lem6863648)). Qed.
Lemma lem6863650 : True = term251.
Proof. exact (SYM (@lem6863649)). Qed.
Lemma lem6863651 : term251.
Proof. exact (EQ_MP (@lem6863650) (@lem0)). Qed.
Lemma lem6863652 : term474 = term477.
Proof. exact (@lem6863641 (@lem6863651)). Qed.
Lemma lem6863654 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863655 : term208 = term209.
Proof. exact (@lem6863654 term11 term11). Qed.
Lemma lem6863656 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863657 : term211 = term11.
Proof. exact (EQ_MP (@lem6863656) (@lem940073)). Qed.
Lemma lem6863658 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863659 : term209 = term143.
Proof. exact (MK_COMB (@lem6863658) (@lem6863657)). Qed.
Lemma lem6863660 : term208 = term143.
Proof. exact (TRANS (@lem6863655) (@lem6863659)). Qed.
Lemma lem6863662 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863663 : term263 = term133.
Proof. exact (@lem6863662 term11). Qed.
Lemma lem6863664 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863665 : term478 = term472.
Proof. exact (MK_COMB (@lem6863664) (@lem6863663)). Qed.
Lemma lem6863666 : term477 = term251.
Proof. exact (MK_COMB (@lem6863665) (@lem6863660)). Qed.
Lemma lem6863668 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863669 : term251 = term252.
Proof. exact (@lem6863668 (NUMERAL 0) term11). Qed.
Lemma lem6863670 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863671 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863672 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863671 h1) (fun h1 : term252 = True => @lem6863670)). Qed.
Lemma lem6863673 : term252 = True.
Proof. exact (EQ_MP (@lem6863672) (@lem6863670)). Qed.
Lemma lem6863674 : term251 = True.
Proof. exact (TRANS (@lem6863669) (@lem6863673)). Qed.
Lemma lem6863675 : term477 = True.
Proof. exact (TRANS (@lem6863666) (@lem6863674)). Qed.
Lemma lem6863676 : term474 = True.
Proof. exact (TRANS (@lem6863652) (@lem6863675)). Qed.
Lemma lem6863677 : term251 = True.
Proof. exact (TRANS (@lem6863629) (@lem6863676)). Qed.
Lemma lem6863678 : term471 = True.
Proof. exact (TRANS (@lem6863620) (@lem6863677)). Qed.
Lemma lem6863679 : True = term471.
Proof. exact (SYM (@lem6863678)). Qed.
Lemma lem6863680 : term471.
Proof. exact (EQ_MP (@lem6863679) (@lem0)). Qed.
Lemma lem6863681 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term551 _91747.
Proof. exact (conj (@lem6863680) (@lem6863617 _91746 _91747 h1)). Qed.
Lemma lem6863683 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6863684 (_91747 : int) : term552 _91747.
Proof. exact (@lem6863683 term143 (term299 _91747)). Qed.
Lemma lem6863685 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term553 _91747.
Proof. exact (@lem6863684 _91747 (@lem6863681 _91746 _91747 h1)). Qed.
Lemma lem6863686 (_91747 : int) : (term554 _91747) = (term299 _91747).
Proof. exact (@lem1982733 (term299 _91747)). Qed.
Lemma lem6863687 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863688 (_91747 : int) : (term555 _91747) = (term301 _91747).
Proof. exact (MK_COMB (@lem6863687) (@lem6863686 _91747)). Qed.
Lemma lem6863689 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863690 (_91747 : int) : (term553 _91747) = (term302 _91747).
Proof. exact (MK_COMB (@lem6863688 _91747) (@lem6863689)). Qed.
Lemma lem6863691 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term302 _91747.
Proof. exact (EQ_MP (@lem6863690 _91747) (@lem6863685 _91746 _91747 h1)). Qed.
Lemma lem6863693 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6863694 : term471 = term251.
Proof. exact (@lem6863693 term133 term143). Qed.
Lemma lem6863696 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863697 : term143 = term224.
Proof. exact (@lem6863696 term11). Qed.
Lemma lem6863699 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863700 : term133 = term196.
Proof. exact (@lem6863699 (NUMERAL 0)). Qed.
Lemma lem6863701 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863702 : term472 = term473.
Proof. exact (MK_COMB (@lem6863701) (@lem6863700)). Qed.
Lemma lem6863703 : term251 = term474.
Proof. exact (MK_COMB (@lem6863702) (@lem6863697)). Qed.
Lemma lem6863704 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6863706 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863707 : term251 = term252.
Proof. exact (@lem6863706 (NUMERAL 0) term11). Qed.
Lemma lem6863708 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863709 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863710 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863709 h1) (fun h1 : term252 = True => @lem6863708)). Qed.
Lemma lem6863711 : term252 = True.
Proof. exact (EQ_MP (@lem6863710) (@lem6863708)). Qed.
Lemma lem6863712 : term251 = True.
Proof. exact (TRANS (@lem6863707) (@lem6863711)). Qed.
Lemma lem6863713 : True = term251.
Proof. exact (SYM (@lem6863712)). Qed.
Lemma lem6863714 : term251.
Proof. exact (EQ_MP (@lem6863713) (@lem0)). Qed.
Lemma lem6863715 : term476.
Proof. exact (@lem6863704 (@lem6863714)). Qed.
Lemma lem6863717 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863718 : term251 = term252.
Proof. exact (@lem6863717 (NUMERAL 0) term11). Qed.
Lemma lem6863719 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863720 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863721 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863720 h1) (fun h1 : term252 = True => @lem6863719)). Qed.
Lemma lem6863722 : term252 = True.
Proof. exact (EQ_MP (@lem6863721) (@lem6863719)). Qed.
Lemma lem6863723 : term251 = True.
Proof. exact (TRANS (@lem6863718) (@lem6863722)). Qed.
Lemma lem6863724 : True = term251.
Proof. exact (SYM (@lem6863723)). Qed.
Lemma lem6863725 : term251.
Proof. exact (EQ_MP (@lem6863724) (@lem0)). Qed.
Lemma lem6863726 : term474 = term477.
Proof. exact (@lem6863715 (@lem6863725)). Qed.
Lemma lem6863728 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863729 : term208 = term209.
Proof. exact (@lem6863728 term11 term11). Qed.
Lemma lem6863730 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863731 : term211 = term11.
Proof. exact (EQ_MP (@lem6863730) (@lem940073)). Qed.
Lemma lem6863732 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863733 : term209 = term143.
Proof. exact (MK_COMB (@lem6863732) (@lem6863731)). Qed.
Lemma lem6863734 : term208 = term143.
Proof. exact (TRANS (@lem6863729) (@lem6863733)). Qed.
Lemma lem6863736 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863737 : term263 = term133.
Proof. exact (@lem6863736 term11). Qed.
Lemma lem6863738 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863739 : term478 = term472.
Proof. exact (MK_COMB (@lem6863738) (@lem6863737)). Qed.
Lemma lem6863740 : term477 = term251.
Proof. exact (MK_COMB (@lem6863739) (@lem6863734)). Qed.
Lemma lem6863742 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863743 : term251 = term252.
Proof. exact (@lem6863742 (NUMERAL 0) term11). Qed.
Lemma lem6863744 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863745 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863746 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863745 h1) (fun h1 : term252 = True => @lem6863744)). Qed.
Lemma lem6863747 : term252 = True.
Proof. exact (EQ_MP (@lem6863746) (@lem6863744)). Qed.
Lemma lem6863748 : term251 = True.
Proof. exact (TRANS (@lem6863743) (@lem6863747)). Qed.
Lemma lem6863749 : term477 = True.
Proof. exact (TRANS (@lem6863740) (@lem6863748)). Qed.
Lemma lem6863750 : term474 = True.
Proof. exact (TRANS (@lem6863726) (@lem6863749)). Qed.
Lemma lem6863751 : term251 = True.
Proof. exact (TRANS (@lem6863703) (@lem6863750)). Qed.
Lemma lem6863752 : term471 = True.
Proof. exact (TRANS (@lem6863694) (@lem6863751)). Qed.
Lemma lem6863753 : True = term471.
Proof. exact (SYM (@lem6863752)). Qed.
Lemma lem6863754 : term471.
Proof. exact (EQ_MP (@lem6863753) (@lem0)). Qed.
Lemma lem6863755 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term479 _91746 _91747.
Proof. exact (conj (@lem6863754) (@lem6863406 _91746 _91747 h1)). Qed.
Lemma lem6863757 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6863758 (_91746 : int) (_91747 : int) : term481 _91746 _91747.
Proof. exact (@lem6863757 term143 (term277 _91746 _91747)). Qed.
Lemma lem6863759 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term482 _91746 _91747.
Proof. exact (@lem6863758 _91746 _91747 (@lem6863755 _91746 _91747 h1)). Qed.
Lemma lem6863760 (_91746 : int) (_91747 : int) : (term483 _91746 _91747) = (term277 _91746 _91747).
Proof. exact (@lem1982733 (term277 _91746 _91747)). Qed.
Lemma lem6863761 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863762 (_91746 : int) (_91747 : int) : (term484 _91746 _91747) = (term279 _91746 _91747).
Proof. exact (MK_COMB (@lem6863761) (@lem6863760 _91746 _91747)). Qed.
Lemma lem6863763 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863764 (_91746 : int) (_91747 : int) : (term482 _91746 _91747) = (term280 _91746 _91747).
Proof. exact (MK_COMB (@lem6863762 _91746 _91747) (@lem6863763)). Qed.
Lemma lem6863765 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term280 _91746 _91747.
Proof. exact (EQ_MP (@lem6863764 _91746 _91747) (@lem6863759 _91746 _91747 h1)). Qed.
Lemma lem6863767 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6863768 (_91746 : int) : term539 _91746.
Proof. exact (@lem6863767 (real_of_int _91746)). Qed.
Lemma lem6863769 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term540 _91746.
Proof. exact (@lem6863768 _91746 (@lem6863403 _91746 _91747 h1)). Qed.
Lemma lem6863770 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term556 _91746.
Proof. exact (@lem6863769 _91746 _91747 h1 term199). Qed.
Lemma lem6863771 (_91746 : int) : (term556 _91746) = ((term237 _91746) = term133).
Proof. exact (eq_refl (term556 _91746)). Qed.
Lemma lem6863778 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : (term237 _91746) = term133.
Proof. exact (EQ_MP (@lem6863771 _91746) (@lem6863770 _91746 _91747 h1)). Qed.
Lemma lem6863779 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term557 _91746 _91747.
Proof. exact (conj (@lem6863778 _91746 _91747 h1) (@lem6863765 _91746 _91747 h1)). Qed.
Lemma lem6863781 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6863782 (_91746 : int) (_91747 : int) : term558 _91746 _91747.
Proof. exact (@lem6863781 (term237 _91746) (term277 _91746 _91747)). Qed.
Lemma lem6863783 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term559 _91746 _91747.
Proof. exact (@lem6863782 _91746 _91747 (@lem6863779 _91746 _91747 h1)). Qed.
Lemma lem6863784 (_91746 : int) (_91747 : int) : (term560 _91746 _91747) = (term561 _91746 _91747).
Proof. exact (@lem1982763 (term237 _91746) (real_of_int _91746) (term237 _91747)). Qed.
Lemma lem6863785 (_91746 : int) : (term497 _91746) = (term498 _91746).
Proof. exact (@lem1982713 term199 (real_of_int _91746)). Qed.
Lemma lem6863787 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863788 : term143 = term224.
Proof. exact (@lem6863787 term11). Qed.
Lemma lem6863790 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6863791 : term199 = term200.
Proof. exact (@lem6863790 term11). Qed.
Lemma lem6863792 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863793 : term499 = term500.
Proof. exact (MK_COMB (@lem6863792) (@lem6863791)). Qed.
Lemma lem6863794 : term501 = term502.
Proof. exact (MK_COMB (@lem6863793) (@lem6863788)). Qed.
Lemma lem6863795 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6863797 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863798 : term251 = term252.
Proof. exact (@lem6863797 (NUMERAL 0) term11). Qed.
Lemma lem6863799 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863800 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863801 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863800 h1) (fun h1 : term252 = True => @lem6863799)). Qed.
Lemma lem6863802 : term252 = True.
Proof. exact (EQ_MP (@lem6863801) (@lem6863799)). Qed.
Lemma lem6863803 : term251 = True.
Proof. exact (TRANS (@lem6863798) (@lem6863802)). Qed.
Lemma lem6863804 : True = term251.
Proof. exact (SYM (@lem6863803)). Qed.
Lemma lem6863805 : term251.
Proof. exact (EQ_MP (@lem6863804) (@lem0)). Qed.
Lemma lem6863806 : term504.
Proof. exact (@lem6863795 (@lem6863805)). Qed.
Lemma lem6863808 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863809 : term251 = term252.
Proof. exact (@lem6863808 (NUMERAL 0) term11). Qed.
Lemma lem6863810 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863811 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863812 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863811 h1) (fun h1 : term252 = True => @lem6863810)). Qed.
Lemma lem6863813 : term252 = True.
Proof. exact (EQ_MP (@lem6863812) (@lem6863810)). Qed.
Lemma lem6863814 : term251 = True.
Proof. exact (TRANS (@lem6863809) (@lem6863813)). Qed.
Lemma lem6863815 : True = term251.
Proof. exact (SYM (@lem6863814)). Qed.
Lemma lem6863816 : term251.
Proof. exact (EQ_MP (@lem6863815) (@lem0)). Qed.
Lemma lem6863817 : term505.
Proof. exact (@lem6863806 (@lem6863816)). Qed.
Lemma lem6863819 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863820 : term251 = term252.
Proof. exact (@lem6863819 (NUMERAL 0) term11). Qed.
Lemma lem6863821 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863822 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863823 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863822 h1) (fun h1 : term252 = True => @lem6863821)). Qed.
Lemma lem6863824 : term252 = True.
Proof. exact (EQ_MP (@lem6863823) (@lem6863821)). Qed.
Lemma lem6863825 : term251 = True.
Proof. exact (TRANS (@lem6863820) (@lem6863824)). Qed.
Lemma lem6863826 : True = term251.
Proof. exact (SYM (@lem6863825)). Qed.
Lemma lem6863827 : term251.
Proof. exact (EQ_MP (@lem6863826) (@lem0)). Qed.
Lemma lem6863828 : term506.
Proof. exact (@lem6863817 (@lem6863827)). Qed.
Lemma lem6863830 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863831 : term208 = term209.
Proof. exact (@lem6863830 term11 term11). Qed.
Lemma lem6863832 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863833 : term211 = term11.
Proof. exact (EQ_MP (@lem6863832) (@lem940073)). Qed.
Lemma lem6863834 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863835 : term209 = term143.
Proof. exact (MK_COMB (@lem6863834) (@lem6863833)). Qed.
Lemma lem6863836 : term208 = term143.
Proof. exact (TRANS (@lem6863831) (@lem6863835)). Qed.
Lemma lem6863838 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6863839 : term225 = term230.
Proof. exact (@lem6863838 term11 term11). Qed.
Lemma lem6863840 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863841 : term211 = term11.
Proof. exact (EQ_MP (@lem6863840) (@lem940073)). Qed.
Lemma lem6863842 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863843 : term209 = term143.
Proof. exact (MK_COMB (@lem6863842) (@lem6863841)). Qed.
Lemma lem6863844 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6863845 : term230 = term199.
Proof. exact (MK_COMB (@lem6863844) (@lem6863843)). Qed.
Lemma lem6863846 : term225 = term199.
Proof. exact (TRANS (@lem6863839) (@lem6863845)). Qed.
Lemma lem6863847 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863848 : term507 = term499.
Proof. exact (MK_COMB (@lem6863847) (@lem6863846)). Qed.
Lemma lem6863849 : term508 = term501.
Proof. exact (MK_COMB (@lem6863848) (@lem6863836)). Qed.
Lemma lem6863851 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6863852 : term501 = term133.
Proof. exact (@lem6863851 term11). Qed.
Lemma lem6863853 : term508 = term133.
Proof. exact (TRANS (@lem6863849) (@lem6863852)). Qed.
Lemma lem6863854 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863855 : term510 = term261.
Proof. exact (MK_COMB (@lem6863854) (@lem6863853)). Qed.
Lemma lem6863856 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6863857 : term511 = term263.
Proof. exact (MK_COMB (@lem6863855) (@lem6863856)). Qed.
Lemma lem6863859 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863860 : term263 = term133.
Proof. exact (@lem6863859 term11). Qed.
Lemma lem6863861 : term511 = term133.
Proof. exact (TRANS (@lem6863857) (@lem6863860)). Qed.
Lemma lem6863863 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863864 : term208 = term209.
Proof. exact (@lem6863863 term11 term11). Qed.
Lemma lem6863865 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863866 : term211 = term11.
Proof. exact (EQ_MP (@lem6863865) (@lem940073)). Qed.
Lemma lem6863867 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863868 : term209 = term143.
Proof. exact (MK_COMB (@lem6863867) (@lem6863866)). Qed.
Lemma lem6863869 : term208 = term143.
Proof. exact (TRANS (@lem6863864) (@lem6863868)). Qed.
Lemma lem6863870 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6863871 : term265 = term263.
Proof. exact (MK_COMB (@lem6863870) (@lem6863869)). Qed.
Lemma lem6863873 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863874 : term263 = term133.
Proof. exact (@lem6863873 term11). Qed.
Lemma lem6863875 : term265 = term133.
Proof. exact (TRANS (@lem6863871) (@lem6863874)). Qed.
Lemma lem6863876 : term133 = term265.
Proof. exact (SYM (@lem6863875)). Qed.
Lemma lem6863877 : term511 = term265.
Proof. exact (TRANS (@lem6863861) (@lem6863876)). Qed.
Lemma lem6863878 : term502 = term196.
Proof. exact (@lem6863828 (@lem6863877)). Qed.
Lemma lem6863879 : term501 = term196.
Proof. exact (TRANS (@lem6863794) (@lem6863878)). Qed.
Lemma lem6863881 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6863882 : term196 = term133.
Proof. exact (@lem6863881 term133). Qed.
Lemma lem6863883 : term501 = term133.
Proof. exact (TRANS (@lem6863879) (@lem6863882)). Qed.
Lemma lem6863884 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6863885 : term512 = term261.
Proof. exact (MK_COMB (@lem6863884) (@lem6863883)). Qed.
Lemma lem6863886 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6863887 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6863885) (@lem6863886 _91746)). Qed.
Lemma lem6863888 (_91746 : int) : (term497 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6863785 _91746) (@lem6863887 _91746)). Qed.
Lemma lem6863889 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6863890 (_91746 : int) : (term497 _91746) = term133.
Proof. exact (TRANS (@lem6863888 _91746) (@lem6863889 _91746)). Qed.
Lemma lem6863891 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863892 (_91746 : int) : (term514 _91746) = term175.
Proof. exact (MK_COMB (@lem6863891) (@lem6863890 _91746)). Qed.
Lemma lem6863893 (_91747 : int) : (term237 _91747) = (term237 _91747).
Proof. exact (eq_refl (term237 _91747)). Qed.
Lemma lem6863894 (_91746 : int) (_91747 : int) : (term561 _91746 _91747) = (term562 _91747).
Proof. exact (MK_COMB (@lem6863892 _91746) (@lem6863893 _91747)). Qed.
Lemma lem6863895 (_91746 : int) (_91747 : int) : (term560 _91746 _91747) = (term562 _91747).
Proof. exact (TRANS (@lem6863784 _91746 _91747) (@lem6863894 _91746 _91747)). Qed.
Lemma lem6863896 (_91747 : int) : (term562 _91747) = (term237 _91747).
Proof. exact (@lem1982721 (term237 _91747)). Qed.
Lemma lem6863897 (_91746 : int) (_91747 : int) : (term560 _91746 _91747) = (term237 _91747).
Proof. exact (TRANS (@lem6863895 _91746 _91747) (@lem6863896 _91747)). Qed.
Lemma lem6863898 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863899 (_91746 : int) (_91747 : int) : (term563 _91746 _91747) = (term268 _91747).
Proof. exact (MK_COMB (@lem6863898) (@lem6863897 _91746 _91747)). Qed.
Lemma lem6863900 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863901 (_91746 : int) (_91747 : int) : (term559 _91746 _91747) = (term269 _91747).
Proof. exact (MK_COMB (@lem6863899 _91746 _91747) (@lem6863900)). Qed.
Lemma lem6863902 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term269 _91747.
Proof. exact (EQ_MP (@lem6863901 _91746 _91747) (@lem6863783 _91746 _91747 h1)). Qed.
Lemma lem6863904 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6863905 : term471 = term251.
Proof. exact (@lem6863904 term133 term143). Qed.
Lemma lem6863907 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863908 : term143 = term224.
Proof. exact (@lem6863907 term11). Qed.
Lemma lem6863910 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863911 : term133 = term196.
Proof. exact (@lem6863910 (NUMERAL 0)). Qed.
Lemma lem6863912 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863913 : term472 = term473.
Proof. exact (MK_COMB (@lem6863912) (@lem6863911)). Qed.
Lemma lem6863914 : term251 = term474.
Proof. exact (MK_COMB (@lem6863913) (@lem6863908)). Qed.
Lemma lem6863915 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6863917 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863918 : term251 = term252.
Proof. exact (@lem6863917 (NUMERAL 0) term11). Qed.
Lemma lem6863919 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863920 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863921 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863920 h1) (fun h1 : term252 = True => @lem6863919)). Qed.
Lemma lem6863922 : term252 = True.
Proof. exact (EQ_MP (@lem6863921) (@lem6863919)). Qed.
Lemma lem6863923 : term251 = True.
Proof. exact (TRANS (@lem6863918) (@lem6863922)). Qed.
Lemma lem6863924 : True = term251.
Proof. exact (SYM (@lem6863923)). Qed.
Lemma lem6863925 : term251.
Proof. exact (EQ_MP (@lem6863924) (@lem0)). Qed.
Lemma lem6863926 : term476.
Proof. exact (@lem6863915 (@lem6863925)). Qed.
Lemma lem6863928 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863929 : term251 = term252.
Proof. exact (@lem6863928 (NUMERAL 0) term11). Qed.
Lemma lem6863930 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863931 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863932 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863931 h1) (fun h1 : term252 = True => @lem6863930)). Qed.
Lemma lem6863933 : term252 = True.
Proof. exact (EQ_MP (@lem6863932) (@lem6863930)). Qed.
Lemma lem6863934 : term251 = True.
Proof. exact (TRANS (@lem6863929) (@lem6863933)). Qed.
Lemma lem6863935 : True = term251.
Proof. exact (SYM (@lem6863934)). Qed.
Lemma lem6863936 : term251.
Proof. exact (EQ_MP (@lem6863935) (@lem0)). Qed.
Lemma lem6863937 : term474 = term477.
Proof. exact (@lem6863926 (@lem6863936)). Qed.
Lemma lem6863939 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6863940 : term208 = term209.
Proof. exact (@lem6863939 term11 term11). Qed.
Lemma lem6863941 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6863942 : term211 = term11.
Proof. exact (EQ_MP (@lem6863941) (@lem940073)). Qed.
Lemma lem6863943 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6863944 : term209 = term143.
Proof. exact (MK_COMB (@lem6863943) (@lem6863942)). Qed.
Lemma lem6863945 : term208 = term143.
Proof. exact (TRANS (@lem6863940) (@lem6863944)). Qed.
Lemma lem6863947 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6863948 : term263 = term133.
Proof. exact (@lem6863947 term11). Qed.
Lemma lem6863949 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6863950 : term478 = term472.
Proof. exact (MK_COMB (@lem6863949) (@lem6863948)). Qed.
Lemma lem6863951 : term477 = term251.
Proof. exact (MK_COMB (@lem6863950) (@lem6863945)). Qed.
Lemma lem6863953 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863954 : term251 = term252.
Proof. exact (@lem6863953 (NUMERAL 0) term11). Qed.
Lemma lem6863955 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863956 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863957 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863956 h1) (fun h1 : term252 = True => @lem6863955)). Qed.
Lemma lem6863958 : term252 = True.
Proof. exact (EQ_MP (@lem6863957) (@lem6863955)). Qed.
Lemma lem6863959 : term251 = True.
Proof. exact (TRANS (@lem6863954) (@lem6863958)). Qed.
Lemma lem6863960 : term477 = True.
Proof. exact (TRANS (@lem6863951) (@lem6863959)). Qed.
Lemma lem6863961 : term474 = True.
Proof. exact (TRANS (@lem6863937) (@lem6863960)). Qed.
Lemma lem6863962 : term251 = True.
Proof. exact (TRANS (@lem6863914) (@lem6863961)). Qed.
Lemma lem6863963 : term471 = True.
Proof. exact (TRANS (@lem6863905) (@lem6863962)). Qed.
Lemma lem6863964 : True = term471.
Proof. exact (SYM (@lem6863963)). Qed.
Lemma lem6863965 : term471.
Proof. exact (EQ_MP (@lem6863964) (@lem0)). Qed.
Lemma lem6863966 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term564 _91747.
Proof. exact (conj (@lem6863965) (@lem6863902 _91746 _91747 h1)). Qed.
Lemma lem6863968 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6863969 (_91747 : int) : term565 _91747.
Proof. exact (@lem6863968 term143 (term237 _91747)). Qed.
Lemma lem6863970 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term566 _91747.
Proof. exact (@lem6863969 _91747 (@lem6863966 _91746 _91747 h1)). Qed.
Lemma lem6863971 (_91747 : int) : (term567 _91747) = (term237 _91747).
Proof. exact (@lem1982733 (term237 _91747)). Qed.
Lemma lem6863972 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6863973 (_91747 : int) : (term568 _91747) = (term268 _91747).
Proof. exact (MK_COMB (@lem6863972) (@lem6863971 _91747)). Qed.
Lemma lem6863974 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6863975 (_91747 : int) : (term566 _91747) = (term269 _91747).
Proof. exact (MK_COMB (@lem6863973 _91747) (@lem6863974)). Qed.
Lemma lem6863976 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term269 _91747.
Proof. exact (EQ_MP (@lem6863975 _91747) (@lem6863970 _91746 _91747 h1)). Qed.
Lemma lem6863977 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term569 _91747.
Proof. exact (conj (@lem6863976 _91746 _91747 h1) (@lem6863691 _91746 _91747 h1)). Qed.
Lemma lem6863979 (x : real) (y : real) : term570 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6863980 (_91747 : int) : term571 _91747.
Proof. exact (@lem6863979 (term237 _91747) (term299 _91747)). Qed.
Lemma lem6863981 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term572 _91747.
Proof. exact (@lem6863980 _91747 (@lem6863977 _91746 _91747 h1)). Qed.
Lemma lem6863982 (_91747 : int) : (term573 _91747) = (term574 _91747).
Proof. exact (@lem1982763 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6863983 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6863985 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6863986 : term143 = term224.
Proof. exact (@lem6863985 term11). Qed.
Lemma lem6863988 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6863989 : term199 = term200.
Proof. exact (@lem6863988 term11). Qed.
Lemma lem6863990 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6863991 : term499 = term500.
Proof. exact (MK_COMB (@lem6863990) (@lem6863989)). Qed.
Lemma lem6863992 : term501 = term502.
Proof. exact (MK_COMB (@lem6863991) (@lem6863986)). Qed.
Lemma lem6863993 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6863995 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6863996 : term251 = term252.
Proof. exact (@lem6863995 (NUMERAL 0) term11). Qed.
Lemma lem6863997 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6863998 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6863999 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6863998 h1) (fun h1 : term252 = True => @lem6863997)). Qed.
Lemma lem6864000 : term252 = True.
Proof. exact (EQ_MP (@lem6863999) (@lem6863997)). Qed.
Lemma lem6864001 : term251 = True.
Proof. exact (TRANS (@lem6863996) (@lem6864000)). Qed.
Lemma lem6864002 : True = term251.
Proof. exact (SYM (@lem6864001)). Qed.
Lemma lem6864003 : term251.
Proof. exact (EQ_MP (@lem6864002) (@lem0)). Qed.
Lemma lem6864004 : term504.
Proof. exact (@lem6863993 (@lem6864003)). Qed.
Lemma lem6864006 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864007 : term251 = term252.
Proof. exact (@lem6864006 (NUMERAL 0) term11). Qed.
Lemma lem6864008 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864009 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864010 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864009 h1) (fun h1 : term252 = True => @lem6864008)). Qed.
Lemma lem6864011 : term252 = True.
Proof. exact (EQ_MP (@lem6864010) (@lem6864008)). Qed.
Lemma lem6864012 : term251 = True.
Proof. exact (TRANS (@lem6864007) (@lem6864011)). Qed.
Lemma lem6864013 : True = term251.
Proof. exact (SYM (@lem6864012)). Qed.
Lemma lem6864014 : term251.
Proof. exact (EQ_MP (@lem6864013) (@lem0)). Qed.
Lemma lem6864015 : term505.
Proof. exact (@lem6864004 (@lem6864014)). Qed.
Lemma lem6864017 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864018 : term251 = term252.
Proof. exact (@lem6864017 (NUMERAL 0) term11). Qed.
Lemma lem6864019 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864020 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864021 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864020 h1) (fun h1 : term252 = True => @lem6864019)). Qed.
Lemma lem6864022 : term252 = True.
Proof. exact (EQ_MP (@lem6864021) (@lem6864019)). Qed.
Lemma lem6864023 : term251 = True.
Proof. exact (TRANS (@lem6864018) (@lem6864022)). Qed.
Lemma lem6864024 : True = term251.
Proof. exact (SYM (@lem6864023)). Qed.
Lemma lem6864025 : term251.
Proof. exact (EQ_MP (@lem6864024) (@lem0)). Qed.
Lemma lem6864026 : term506.
Proof. exact (@lem6864015 (@lem6864025)). Qed.
Lemma lem6864028 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864029 : term208 = term209.
Proof. exact (@lem6864028 term11 term11). Qed.
Lemma lem6864030 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864031 : term211 = term11.
Proof. exact (EQ_MP (@lem6864030) (@lem940073)). Qed.
Lemma lem6864032 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864033 : term209 = term143.
Proof. exact (MK_COMB (@lem6864032) (@lem6864031)). Qed.
Lemma lem6864034 : term208 = term143.
Proof. exact (TRANS (@lem6864029) (@lem6864033)). Qed.
Lemma lem6864036 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6864037 : term225 = term230.
Proof. exact (@lem6864036 term11 term11). Qed.
Lemma lem6864038 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864039 : term211 = term11.
Proof. exact (EQ_MP (@lem6864038) (@lem940073)). Qed.
Lemma lem6864040 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864041 : term209 = term143.
Proof. exact (MK_COMB (@lem6864040) (@lem6864039)). Qed.
Lemma lem6864042 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6864043 : term230 = term199.
Proof. exact (MK_COMB (@lem6864042) (@lem6864041)). Qed.
Lemma lem6864044 : term225 = term199.
Proof. exact (TRANS (@lem6864037) (@lem6864043)). Qed.
Lemma lem6864045 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864046 : term507 = term499.
Proof. exact (MK_COMB (@lem6864045) (@lem6864044)). Qed.
Lemma lem6864047 : term508 = term501.
Proof. exact (MK_COMB (@lem6864046) (@lem6864034)). Qed.
Lemma lem6864049 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6864050 : term501 = term133.
Proof. exact (@lem6864049 term11). Qed.
Lemma lem6864051 : term508 = term133.
Proof. exact (TRANS (@lem6864047) (@lem6864050)). Qed.
Lemma lem6864052 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864053 : term510 = term261.
Proof. exact (MK_COMB (@lem6864052) (@lem6864051)). Qed.
Lemma lem6864054 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6864055 : term511 = term263.
Proof. exact (MK_COMB (@lem6864053) (@lem6864054)). Qed.
Lemma lem6864057 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864058 : term263 = term133.
Proof. exact (@lem6864057 term11). Qed.
Lemma lem6864059 : term511 = term133.
Proof. exact (TRANS (@lem6864055) (@lem6864058)). Qed.
Lemma lem6864061 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864062 : term208 = term209.
Proof. exact (@lem6864061 term11 term11). Qed.
Lemma lem6864063 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864064 : term211 = term11.
Proof. exact (EQ_MP (@lem6864063) (@lem940073)). Qed.
Lemma lem6864065 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864066 : term209 = term143.
Proof. exact (MK_COMB (@lem6864065) (@lem6864064)). Qed.
Lemma lem6864067 : term208 = term143.
Proof. exact (TRANS (@lem6864062) (@lem6864066)). Qed.
Lemma lem6864068 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6864069 : term265 = term263.
Proof. exact (MK_COMB (@lem6864068) (@lem6864067)). Qed.
Lemma lem6864071 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864072 : term263 = term133.
Proof. exact (@lem6864071 term11). Qed.
Lemma lem6864073 : term265 = term133.
Proof. exact (TRANS (@lem6864069) (@lem6864072)). Qed.
Lemma lem6864074 : term133 = term265.
Proof. exact (SYM (@lem6864073)). Qed.
Lemma lem6864075 : term511 = term265.
Proof. exact (TRANS (@lem6864059) (@lem6864074)). Qed.
Lemma lem6864076 : term502 = term196.
Proof. exact (@lem6864026 (@lem6864075)). Qed.
Lemma lem6864077 : term501 = term196.
Proof. exact (TRANS (@lem6863992) (@lem6864076)). Qed.
Lemma lem6864079 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6864080 : term196 = term133.
Proof. exact (@lem6864079 term133). Qed.
Lemma lem6864081 : term501 = term133.
Proof. exact (TRANS (@lem6864077) (@lem6864080)). Qed.
Lemma lem6864082 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864083 : term512 = term261.
Proof. exact (MK_COMB (@lem6864082) (@lem6864081)). Qed.
Lemma lem6864084 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6864085 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6864083) (@lem6864084 _91747)). Qed.
Lemma lem6864086 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6863983 _91747) (@lem6864085 _91747)). Qed.
Lemma lem6864087 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6864088 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6864086 _91747) (@lem6864087 _91747)). Qed.
Lemma lem6864089 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864090 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6864089) (@lem6864088 _91747)). Qed.
Lemma lem6864091 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6864092 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6864090 _91747) (@lem6864091)). Qed.
Lemma lem6864093 (_91747 : int) : (term573 _91747) = term519.
Proof. exact (TRANS (@lem6863982 _91747) (@lem6864092 _91747)). Qed.
Lemma lem6864094 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6864095 (_91747 : int) : (term573 _91747) = term199.
Proof. exact (TRANS (@lem6864093 _91747) (@lem6864094)). Qed.
Lemma lem6864096 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6864097 (_91747 : int) : (term575 _91747) = term521.
Proof. exact (MK_COMB (@lem6864096) (@lem6864095 _91747)). Qed.
Lemma lem6864098 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864099 (_91747 : int) : (term572 _91747) = term522.
Proof. exact (MK_COMB (@lem6864097 _91747) (@lem6864098)). Qed.
Lemma lem6864100 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6864099 _91747) (@lem6863981 _91746 _91747 h1)). Qed.
Lemma lem6864102 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6864103 : term522 = term523.
Proof. exact (@lem6864102 term133 term199). Qed.
Lemma lem6864105 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6864106 : term199 = term200.
Proof. exact (@lem6864105 term11). Qed.
Lemma lem6864108 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864109 : term133 = term196.
Proof. exact (@lem6864108 (NUMERAL 0)). Qed.
Lemma lem6864110 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6864111 : term135 = term524.
Proof. exact (MK_COMB (@lem6864110) (@lem6864109)). Qed.
Lemma lem6864112 : term523 = term525.
Proof. exact (MK_COMB (@lem6864111) (@lem6864106)). Qed.
Lemma lem6864113 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6864115 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864116 : term251 = term252.
Proof. exact (@lem6864115 (NUMERAL 0) term11). Qed.
Lemma lem6864117 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864118 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864119 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864118 h1) (fun h1 : term252 = True => @lem6864117)). Qed.
Lemma lem6864120 : term252 = True.
Proof. exact (EQ_MP (@lem6864119) (@lem6864117)). Qed.
Lemma lem6864121 : term251 = True.
Proof. exact (TRANS (@lem6864116) (@lem6864120)). Qed.
Lemma lem6864122 : True = term251.
Proof. exact (SYM (@lem6864121)). Qed.
Lemma lem6864123 : term251.
Proof. exact (EQ_MP (@lem6864122) (@lem0)). Qed.
Lemma lem6864124 : term527.
Proof. exact (@lem6864113 (@lem6864123)). Qed.
Lemma lem6864126 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864127 : term251 = term252.
Proof. exact (@lem6864126 (NUMERAL 0) term11). Qed.
Lemma lem6864128 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864129 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864130 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864129 h1) (fun h1 : term252 = True => @lem6864128)). Qed.
Lemma lem6864131 : term252 = True.
Proof. exact (EQ_MP (@lem6864130) (@lem6864128)). Qed.
Lemma lem6864132 : term251 = True.
Proof. exact (TRANS (@lem6864127) (@lem6864131)). Qed.
Lemma lem6864133 : True = term251.
Proof. exact (SYM (@lem6864132)). Qed.
Lemma lem6864134 : term251.
Proof. exact (EQ_MP (@lem6864133) (@lem0)). Qed.
Lemma lem6864135 : term525 = term528.
Proof. exact (@lem6864124 (@lem6864134)). Qed.
Lemma lem6864137 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6864138 : term225 = term230.
Proof. exact (@lem6864137 term11 term11). Qed.
Lemma lem6864139 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864140 : term211 = term11.
Proof. exact (EQ_MP (@lem6864139) (@lem940073)). Qed.
Lemma lem6864141 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864142 : term209 = term143.
Proof. exact (MK_COMB (@lem6864141) (@lem6864140)). Qed.
Lemma lem6864143 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6864144 : term230 = term199.
Proof. exact (MK_COMB (@lem6864143) (@lem6864142)). Qed.
Lemma lem6864145 : term225 = term199.
Proof. exact (TRANS (@lem6864138) (@lem6864144)). Qed.
Lemma lem6864147 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864148 : term263 = term133.
Proof. exact (@lem6864147 term11). Qed.
Lemma lem6864149 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6864150 : term529 = term135.
Proof. exact (MK_COMB (@lem6864149) (@lem6864148)). Qed.
Lemma lem6864151 : term528 = term523.
Proof. exact (MK_COMB (@lem6864150) (@lem6864145)). Qed.
Lemma lem6864153 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6864154 : term523 = term532.
Proof. exact (@lem6864153 (NUMERAL 0) term11). Qed.
Lemma lem6864155 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864156 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6864157 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864156 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6864155)). Qed.
Lemma lem6864158 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6864157) (@lem6864155)). Qed.
Lemma lem6864159 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6864160 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6864161 : term533 = (and True).
Proof. exact (MK_COMB (@lem6864160) (@lem6864159)). Qed.
Lemma lem6864162 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6864161) (@lem6864158)). Qed.
Lemma lem6864164 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6864165 : term532 = False.
Proof. exact (TRANS (@lem6864162) (@lem6864164)). Qed.
Lemma lem6864166 : term523 = False.
Proof. exact (TRANS (@lem6864154) (@lem6864165)). Qed.
Lemma lem6864167 : term528 = False.
Proof. exact (TRANS (@lem6864151) (@lem6864166)). Qed.
Lemma lem6864168 : term525 = False.
Proof. exact (TRANS (@lem6864135) (@lem6864167)). Qed.
Lemma lem6864169 : term523 = False.
Proof. exact (TRANS (@lem6864112) (@lem6864168)). Qed.
Lemma lem6864170 : term522 = False.
Proof. exact (TRANS (@lem6864103) (@lem6864169)). Qed.
Lemma lem6864171 (_91746 : int) (_91747 : int) (h1 : term534 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6864170) (@lem6864100 _91746 _91747 h1)). Qed.
Lemma lem6864172 (_91746 : int) (_91747 : int) (h1 : term461 _91746 _91747) : False.
Proof. exact (or_elim (@lem6862991 _91746 _91747 h1) (fun h0 : term470 _91746 _91747 => @lem6863395 _91746 _91747 h0) (fun h0 : term534 _91746 _91747 => @lem6864171 _91746 _91747 h0)). Qed.
Lemma lem6864173 (_91746 : int) (_91747 : int) (h1 : term457 _91746 _91747) : term457 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6864174 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term576 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6864175 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term458 _91746 _91747.
Proof. exact (proj2 (@lem6864174 _91746 _91747 h1)). Qed.
Lemma lem6864176 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term219 _91746.
Proof. exact (proj1 (@lem6864174 _91746 _91747 h1)). Qed.
Lemma lem6864177 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term409 _91746 _91747.
Proof. exact (proj2 (@lem6864175 _91746 _91747 h1)). Qed.
Lemma lem6864179 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term361 _91746 _91747.
Proof. exact (proj2 (@lem6864177 _91746 _91747 h1)). Qed.
Lemma lem6864180 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (proj1 (@lem6864177 _91746 _91747 h1)). Qed.
Lemma lem6864182 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (proj1 (@lem6864179 _91746 _91747 h1)). Qed.
Lemma lem6864184 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6864185 : term471 = term251.
Proof. exact (@lem6864184 term133 term143). Qed.
Lemma lem6864187 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864188 : term143 = term224.
Proof. exact (@lem6864187 term11). Qed.
Lemma lem6864190 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864191 : term133 = term196.
Proof. exact (@lem6864190 (NUMERAL 0)). Qed.
Lemma lem6864192 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864193 : term472 = term473.
Proof. exact (MK_COMB (@lem6864192) (@lem6864191)). Qed.
Lemma lem6864194 : term251 = term474.
Proof. exact (MK_COMB (@lem6864193) (@lem6864188)). Qed.
Lemma lem6864195 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6864197 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864198 : term251 = term252.
Proof. exact (@lem6864197 (NUMERAL 0) term11). Qed.
Lemma lem6864199 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864200 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864201 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864200 h1) (fun h1 : term252 = True => @lem6864199)). Qed.
Lemma lem6864202 : term252 = True.
Proof. exact (EQ_MP (@lem6864201) (@lem6864199)). Qed.
Lemma lem6864203 : term251 = True.
Proof. exact (TRANS (@lem6864198) (@lem6864202)). Qed.
Lemma lem6864204 : True = term251.
Proof. exact (SYM (@lem6864203)). Qed.
Lemma lem6864205 : term251.
Proof. exact (EQ_MP (@lem6864204) (@lem0)). Qed.
Lemma lem6864206 : term476.
Proof. exact (@lem6864195 (@lem6864205)). Qed.
Lemma lem6864208 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864209 : term251 = term252.
Proof. exact (@lem6864208 (NUMERAL 0) term11). Qed.
Lemma lem6864210 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864211 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864212 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864211 h1) (fun h1 : term252 = True => @lem6864210)). Qed.
Lemma lem6864213 : term252 = True.
Proof. exact (EQ_MP (@lem6864212) (@lem6864210)). Qed.
Lemma lem6864214 : term251 = True.
Proof. exact (TRANS (@lem6864209) (@lem6864213)). Qed.
Lemma lem6864215 : True = term251.
Proof. exact (SYM (@lem6864214)). Qed.
Lemma lem6864216 : term251.
Proof. exact (EQ_MP (@lem6864215) (@lem0)). Qed.
Lemma lem6864217 : term474 = term477.
Proof. exact (@lem6864206 (@lem6864216)). Qed.
Lemma lem6864219 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864220 : term208 = term209.
Proof. exact (@lem6864219 term11 term11). Qed.
Lemma lem6864221 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864222 : term211 = term11.
Proof. exact (EQ_MP (@lem6864221) (@lem940073)). Qed.
Lemma lem6864223 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864224 : term209 = term143.
Proof. exact (MK_COMB (@lem6864223) (@lem6864222)). Qed.
Lemma lem6864225 : term208 = term143.
Proof. exact (TRANS (@lem6864220) (@lem6864224)). Qed.
Lemma lem6864227 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864228 : term263 = term133.
Proof. exact (@lem6864227 term11). Qed.
Lemma lem6864229 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864230 : term478 = term472.
Proof. exact (MK_COMB (@lem6864229) (@lem6864228)). Qed.
Lemma lem6864231 : term477 = term251.
Proof. exact (MK_COMB (@lem6864230) (@lem6864225)). Qed.
Lemma lem6864233 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864234 : term251 = term252.
Proof. exact (@lem6864233 (NUMERAL 0) term11). Qed.
Lemma lem6864235 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864236 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864237 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864236 h1) (fun h1 : term252 = True => @lem6864235)). Qed.
Lemma lem6864238 : term252 = True.
Proof. exact (EQ_MP (@lem6864237) (@lem6864235)). Qed.
Lemma lem6864239 : term251 = True.
Proof. exact (TRANS (@lem6864234) (@lem6864238)). Qed.
Lemma lem6864240 : term477 = True.
Proof. exact (TRANS (@lem6864231) (@lem6864239)). Qed.
Lemma lem6864241 : term474 = True.
Proof. exact (TRANS (@lem6864217) (@lem6864240)). Qed.
Lemma lem6864242 : term251 = True.
Proof. exact (TRANS (@lem6864194) (@lem6864241)). Qed.
Lemma lem6864243 : term471 = True.
Proof. exact (TRANS (@lem6864185) (@lem6864242)). Qed.
Lemma lem6864244 : True = term471.
Proof. exact (SYM (@lem6864243)). Qed.
Lemma lem6864245 : term471.
Proof. exact (EQ_MP (@lem6864244) (@lem0)). Qed.
Lemma lem6864246 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term577 _91746.
Proof. exact (conj (@lem6864245) (@lem6864176 _91746 _91747 h1)). Qed.
Lemma lem6864248 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6864249 (_91746 : int) : term578 _91746.
Proof. exact (@lem6864248 term143 (real_of_int _91746)). Qed.
Lemma lem6864250 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term579 _91746.
Proof. exact (@lem6864249 _91746 (@lem6864246 _91746 _91747 h1)). Qed.
Lemma lem6864251 (_91746 : int) : (term542 _91746) = (real_of_int _91746).
Proof. exact (@lem1982733 (real_of_int _91746)). Qed.
Lemma lem6864252 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6864253 (_91746 : int) : (term580 _91746) = (term218 _91746).
Proof. exact (MK_COMB (@lem6864252) (@lem6864251 _91746)). Qed.
Lemma lem6864254 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864255 (_91746 : int) : (term579 _91746) = (term219 _91746).
Proof. exact (MK_COMB (@lem6864253 _91746) (@lem6864254)). Qed.
Lemma lem6864256 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term219 _91746.
Proof. exact (EQ_MP (@lem6864255 _91746) (@lem6864250 _91746 _91747 h1)). Qed.
Lemma lem6864258 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6864259 : term471 = term251.
Proof. exact (@lem6864258 term133 term143). Qed.
Lemma lem6864261 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864262 : term143 = term224.
Proof. exact (@lem6864261 term11). Qed.
Lemma lem6864264 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864265 : term133 = term196.
Proof. exact (@lem6864264 (NUMERAL 0)). Qed.
Lemma lem6864266 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864267 : term472 = term473.
Proof. exact (MK_COMB (@lem6864266) (@lem6864265)). Qed.
Lemma lem6864268 : term251 = term474.
Proof. exact (MK_COMB (@lem6864267) (@lem6864262)). Qed.
Lemma lem6864269 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6864271 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864272 : term251 = term252.
Proof. exact (@lem6864271 (NUMERAL 0) term11). Qed.
Lemma lem6864273 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864274 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864275 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864274 h1) (fun h1 : term252 = True => @lem6864273)). Qed.
Lemma lem6864276 : term252 = True.
Proof. exact (EQ_MP (@lem6864275) (@lem6864273)). Qed.
Lemma lem6864277 : term251 = True.
Proof. exact (TRANS (@lem6864272) (@lem6864276)). Qed.
Lemma lem6864278 : True = term251.
Proof. exact (SYM (@lem6864277)). Qed.
Lemma lem6864279 : term251.
Proof. exact (EQ_MP (@lem6864278) (@lem0)). Qed.
Lemma lem6864280 : term476.
Proof. exact (@lem6864269 (@lem6864279)). Qed.
Lemma lem6864282 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864283 : term251 = term252.
Proof. exact (@lem6864282 (NUMERAL 0) term11). Qed.
Lemma lem6864284 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864285 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864286 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864285 h1) (fun h1 : term252 = True => @lem6864284)). Qed.
Lemma lem6864287 : term252 = True.
Proof. exact (EQ_MP (@lem6864286) (@lem6864284)). Qed.
Lemma lem6864288 : term251 = True.
Proof. exact (TRANS (@lem6864283) (@lem6864287)). Qed.
Lemma lem6864289 : True = term251.
Proof. exact (SYM (@lem6864288)). Qed.
Lemma lem6864290 : term251.
Proof. exact (EQ_MP (@lem6864289) (@lem0)). Qed.
Lemma lem6864291 : term474 = term477.
Proof. exact (@lem6864280 (@lem6864290)). Qed.
Lemma lem6864293 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864294 : term208 = term209.
Proof. exact (@lem6864293 term11 term11). Qed.
Lemma lem6864295 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864296 : term211 = term11.
Proof. exact (EQ_MP (@lem6864295) (@lem940073)). Qed.
Lemma lem6864297 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864298 : term209 = term143.
Proof. exact (MK_COMB (@lem6864297) (@lem6864296)). Qed.
Lemma lem6864299 : term208 = term143.
Proof. exact (TRANS (@lem6864294) (@lem6864298)). Qed.
Lemma lem6864301 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864302 : term263 = term133.
Proof. exact (@lem6864301 term11). Qed.
Lemma lem6864303 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864304 : term478 = term472.
Proof. exact (MK_COMB (@lem6864303) (@lem6864302)). Qed.
Lemma lem6864305 : term477 = term251.
Proof. exact (MK_COMB (@lem6864304) (@lem6864299)). Qed.
Lemma lem6864307 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864308 : term251 = term252.
Proof. exact (@lem6864307 (NUMERAL 0) term11). Qed.
Lemma lem6864309 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864310 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864311 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864310 h1) (fun h1 : term252 = True => @lem6864309)). Qed.
Lemma lem6864312 : term252 = True.
Proof. exact (EQ_MP (@lem6864311) (@lem6864309)). Qed.
Lemma lem6864313 : term251 = True.
Proof. exact (TRANS (@lem6864308) (@lem6864312)). Qed.
Lemma lem6864314 : term477 = True.
Proof. exact (TRANS (@lem6864305) (@lem6864313)). Qed.
Lemma lem6864315 : term474 = True.
Proof. exact (TRANS (@lem6864291) (@lem6864314)). Qed.
Lemma lem6864316 : term251 = True.
Proof. exact (TRANS (@lem6864268) (@lem6864315)). Qed.
Lemma lem6864317 : term471 = True.
Proof. exact (TRANS (@lem6864259) (@lem6864316)). Qed.
Lemma lem6864318 : True = term471.
Proof. exact (SYM (@lem6864317)). Qed.
Lemma lem6864319 : term471.
Proof. exact (EQ_MP (@lem6864318) (@lem0)). Qed.
Lemma lem6864320 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term581 _91746 _91747.
Proof. exact (conj (@lem6864319) (@lem6864180 _91746 _91747 h1)). Qed.
Lemma lem6864322 (x : real) (y : real) : term582 x y.
Proof. exact (proj1 (@lem1988330 x y)). Qed.
Lemma lem6864323 (_91746 : int) (_91747 : int) : term583 _91746 _91747.
Proof. exact (@lem6864322 term143 (term236 _91746 _91747)). Qed.
Lemma lem6864324 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term489 _91746 _91747) = term133.
Proof. exact (@lem6864323 _91746 _91747 (@lem6864320 _91746 _91747 h1)). Qed.
Lemma lem6864325 (_91746 : int) (_91747 : int) : (term489 _91746 _91747) = (term236 _91746 _91747).
Proof. exact (@lem1982733 (term236 _91746 _91747)). Qed.
Lemma lem6864326 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6864327 (_91746 : int) (_91747 : int) : (term490 _91746 _91747) = (term239 _91746 _91747).
Proof. exact (MK_COMB (@lem6864326) (@lem6864325 _91746 _91747)). Qed.
Lemma lem6864328 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864329 (_91746 : int) (_91747 : int) : ((term489 _91746 _91747) = term133) = ((term236 _91746 _91747) = term133).
Proof. exact (MK_COMB (@lem6864327 _91746 _91747) (@lem6864328)). Qed.
Lemma lem6864330 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6864329 _91746 _91747) (@lem6864324 _91746 _91747 h1)). Qed.
Lemma lem6864332 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6864333 (_91747 : int) : term539 _91747.
Proof. exact (@lem6864332 (real_of_int _91747)). Qed.
Lemma lem6864334 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term540 _91747.
Proof. exact (@lem6864333 _91747 (@lem6864182 _91746 _91747 h1)). Qed.
Lemma lem6864335 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term556 _91747.
Proof. exact (@lem6864334 _91746 _91747 h1 term199). Qed.
Lemma lem6864336 (_91747 : int) : (term556 _91747) = ((term237 _91747) = term133).
Proof. exact (eq_refl (term556 _91747)). Qed.
Lemma lem6864343 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term237 _91747) = term133.
Proof. exact (EQ_MP (@lem6864336 _91747) (@lem6864335 _91746 _91747 h1)). Qed.
Lemma lem6864344 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term584 _91746 _91747.
Proof. exact (conj (@lem6864343 _91746 _91747 h1) (@lem6864330 _91746 _91747 h1)). Qed.
Lemma lem6864346 (x : real) (y : real) : term585 x y.
Proof. exact (proj1 (@lem1393126 x y)). Qed.
Lemma lem6864347 (_91746 : int) (_91747 : int) : term586 _91746 _91747.
Proof. exact (@lem6864346 (term237 _91747) (term236 _91746 _91747)). Qed.
Lemma lem6864348 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term587 _91746 _91747) = term133.
Proof. exact (@lem6864347 _91746 _91747 (@lem6864344 _91746 _91747 h1)). Qed.
Lemma lem6864349 (_91746 : int) (_91747 : int) : (term587 _91746 _91747) = (term588 _91746 _91747).
Proof. exact (@lem1982757 (term237 _91746) (term237 _91747) (term299 _91747)). Qed.
Lemma lem6864350 (_91747 : int) : (term573 _91747) = (term574 _91747).
Proof. exact (@lem1982763 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6864351 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6864353 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864354 : term143 = term224.
Proof. exact (@lem6864353 term11). Qed.
Lemma lem6864356 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6864357 : term199 = term200.
Proof. exact (@lem6864356 term11). Qed.
Lemma lem6864358 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864359 : term499 = term500.
Proof. exact (MK_COMB (@lem6864358) (@lem6864357)). Qed.
Lemma lem6864360 : term501 = term502.
Proof. exact (MK_COMB (@lem6864359) (@lem6864354)). Qed.
Lemma lem6864361 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6864363 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864364 : term251 = term252.
Proof. exact (@lem6864363 (NUMERAL 0) term11). Qed.
Lemma lem6864365 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864366 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864367 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864366 h1) (fun h1 : term252 = True => @lem6864365)). Qed.
Lemma lem6864368 : term252 = True.
Proof. exact (EQ_MP (@lem6864367) (@lem6864365)). Qed.
Lemma lem6864369 : term251 = True.
Proof. exact (TRANS (@lem6864364) (@lem6864368)). Qed.
Lemma lem6864370 : True = term251.
Proof. exact (SYM (@lem6864369)). Qed.
Lemma lem6864371 : term251.
Proof. exact (EQ_MP (@lem6864370) (@lem0)). Qed.
Lemma lem6864372 : term504.
Proof. exact (@lem6864361 (@lem6864371)). Qed.
Lemma lem6864374 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864375 : term251 = term252.
Proof. exact (@lem6864374 (NUMERAL 0) term11). Qed.
Lemma lem6864376 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864377 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864378 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864377 h1) (fun h1 : term252 = True => @lem6864376)). Qed.
Lemma lem6864379 : term252 = True.
Proof. exact (EQ_MP (@lem6864378) (@lem6864376)). Qed.
Lemma lem6864380 : term251 = True.
Proof. exact (TRANS (@lem6864375) (@lem6864379)). Qed.
Lemma lem6864381 : True = term251.
Proof. exact (SYM (@lem6864380)). Qed.
Lemma lem6864382 : term251.
Proof. exact (EQ_MP (@lem6864381) (@lem0)). Qed.
Lemma lem6864383 : term505.
Proof. exact (@lem6864372 (@lem6864382)). Qed.
Lemma lem6864385 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864386 : term251 = term252.
Proof. exact (@lem6864385 (NUMERAL 0) term11). Qed.
Lemma lem6864387 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864388 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864389 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864388 h1) (fun h1 : term252 = True => @lem6864387)). Qed.
Lemma lem6864390 : term252 = True.
Proof. exact (EQ_MP (@lem6864389) (@lem6864387)). Qed.
Lemma lem6864391 : term251 = True.
Proof. exact (TRANS (@lem6864386) (@lem6864390)). Qed.
Lemma lem6864392 : True = term251.
Proof. exact (SYM (@lem6864391)). Qed.
Lemma lem6864393 : term251.
Proof. exact (EQ_MP (@lem6864392) (@lem0)). Qed.
Lemma lem6864394 : term506.
Proof. exact (@lem6864383 (@lem6864393)). Qed.
Lemma lem6864396 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864397 : term208 = term209.
Proof. exact (@lem6864396 term11 term11). Qed.
Lemma lem6864398 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864399 : term211 = term11.
Proof. exact (EQ_MP (@lem6864398) (@lem940073)). Qed.
Lemma lem6864400 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864401 : term209 = term143.
Proof. exact (MK_COMB (@lem6864400) (@lem6864399)). Qed.
Lemma lem6864402 : term208 = term143.
Proof. exact (TRANS (@lem6864397) (@lem6864401)). Qed.
Lemma lem6864404 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6864405 : term225 = term230.
Proof. exact (@lem6864404 term11 term11). Qed.
Lemma lem6864406 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864407 : term211 = term11.
Proof. exact (EQ_MP (@lem6864406) (@lem940073)). Qed.
Lemma lem6864408 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864409 : term209 = term143.
Proof. exact (MK_COMB (@lem6864408) (@lem6864407)). Qed.
Lemma lem6864410 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6864411 : term230 = term199.
Proof. exact (MK_COMB (@lem6864410) (@lem6864409)). Qed.
Lemma lem6864412 : term225 = term199.
Proof. exact (TRANS (@lem6864405) (@lem6864411)). Qed.
Lemma lem6864413 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864414 : term507 = term499.
Proof. exact (MK_COMB (@lem6864413) (@lem6864412)). Qed.
Lemma lem6864415 : term508 = term501.
Proof. exact (MK_COMB (@lem6864414) (@lem6864402)). Qed.
Lemma lem6864417 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6864418 : term501 = term133.
Proof. exact (@lem6864417 term11). Qed.
Lemma lem6864419 : term508 = term133.
Proof. exact (TRANS (@lem6864415) (@lem6864418)). Qed.
Lemma lem6864420 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864421 : term510 = term261.
Proof. exact (MK_COMB (@lem6864420) (@lem6864419)). Qed.
Lemma lem6864422 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6864423 : term511 = term263.
Proof. exact (MK_COMB (@lem6864421) (@lem6864422)). Qed.
Lemma lem6864425 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864426 : term263 = term133.
Proof. exact (@lem6864425 term11). Qed.
Lemma lem6864427 : term511 = term133.
Proof. exact (TRANS (@lem6864423) (@lem6864426)). Qed.
Lemma lem6864429 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864430 : term208 = term209.
Proof. exact (@lem6864429 term11 term11). Qed.
Lemma lem6864431 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864432 : term211 = term11.
Proof. exact (EQ_MP (@lem6864431) (@lem940073)). Qed.
Lemma lem6864433 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864434 : term209 = term143.
Proof. exact (MK_COMB (@lem6864433) (@lem6864432)). Qed.
Lemma lem6864435 : term208 = term143.
Proof. exact (TRANS (@lem6864430) (@lem6864434)). Qed.
Lemma lem6864436 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6864437 : term265 = term263.
Proof. exact (MK_COMB (@lem6864436) (@lem6864435)). Qed.
Lemma lem6864439 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864440 : term263 = term133.
Proof. exact (@lem6864439 term11). Qed.
Lemma lem6864441 : term265 = term133.
Proof. exact (TRANS (@lem6864437) (@lem6864440)). Qed.
Lemma lem6864442 : term133 = term265.
Proof. exact (SYM (@lem6864441)). Qed.
Lemma lem6864443 : term511 = term265.
Proof. exact (TRANS (@lem6864427) (@lem6864442)). Qed.
Lemma lem6864444 : term502 = term196.
Proof. exact (@lem6864394 (@lem6864443)). Qed.
Lemma lem6864445 : term501 = term196.
Proof. exact (TRANS (@lem6864360) (@lem6864444)). Qed.
Lemma lem6864447 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6864448 : term196 = term133.
Proof. exact (@lem6864447 term133). Qed.
Lemma lem6864449 : term501 = term133.
Proof. exact (TRANS (@lem6864445) (@lem6864448)). Qed.
Lemma lem6864450 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864451 : term512 = term261.
Proof. exact (MK_COMB (@lem6864450) (@lem6864449)). Qed.
Lemma lem6864452 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6864453 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6864451) (@lem6864452 _91747)). Qed.
Lemma lem6864454 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6864351 _91747) (@lem6864453 _91747)). Qed.
Lemma lem6864455 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6864456 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6864454 _91747) (@lem6864455 _91747)). Qed.
Lemma lem6864457 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864458 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6864457) (@lem6864456 _91747)). Qed.
Lemma lem6864459 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6864460 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6864458 _91747) (@lem6864459)). Qed.
Lemma lem6864461 (_91747 : int) : (term573 _91747) = term519.
Proof. exact (TRANS (@lem6864350 _91747) (@lem6864460 _91747)). Qed.
Lemma lem6864462 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6864463 (_91747 : int) : (term573 _91747) = term199.
Proof. exact (TRANS (@lem6864461 _91747) (@lem6864462)). Qed.
Lemma lem6864464 (_91746 : int) : (term233 _91746) = (term233 _91746).
Proof. exact (eq_refl (term233 _91746)). Qed.
Lemma lem6864465 (_91747 : int) (_91746 : int) : (term588 _91746 _91747) = (term234 _91746).
Proof. exact (MK_COMB (@lem6864464 _91746) (@lem6864463 _91747)). Qed.
Lemma lem6864466 (_91747 : int) (_91746 : int) : (term587 _91746 _91747) = (term234 _91746).
Proof. exact (TRANS (@lem6864349 _91746 _91747) (@lem6864465 _91747 _91746)). Qed.
Lemma lem6864467 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6864468 (_91747 : int) (_91746 : int) : (term589 _91746 _91747) = (term590 _91746).
Proof. exact (MK_COMB (@lem6864467) (@lem6864466 _91747 _91746)). Qed.
Lemma lem6864469 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864470 (_91747 : int) (_91746 : int) : ((term587 _91746 _91747) = term133) = ((term234 _91746) = term133).
Proof. exact (MK_COMB (@lem6864468 _91747 _91746) (@lem6864469)). Qed.
Lemma lem6864471 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term234 _91746) = term133.
Proof. exact (EQ_MP (@lem6864470 _91747 _91746) (@lem6864348 _91746 _91747 h1)). Qed.
Lemma lem6864473 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6864474 (_91746 : int) : term591 _91746.
Proof. exact (@lem6864473 (term234 _91746)). Qed.
Lemma lem6864475 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term592 _91746.
Proof. exact (@lem6864474 _91746 (@lem6864471 _91746 _91747 h1)). Qed.
Lemma lem6864476 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term593 _91746.
Proof. exact (@lem6864475 _91746 _91747 h1 term143). Qed.
Lemma lem6864477 (_91746 : int) : (term593 _91746) = ((term594 _91746) = term133).
Proof. exact (eq_refl (term593 _91746)). Qed.
Lemma lem6864478 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term594 _91746) = term133.
Proof. exact (EQ_MP (@lem6864477 _91746) (@lem6864476 _91746 _91747 h1)). Qed.
Lemma lem6864479 (_91746 : int) : (term594 _91746) = (term234 _91746).
Proof. exact (@lem1982733 (term234 _91746)). Qed.
Lemma lem6864480 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6864481 (_91746 : int) : (term595 _91746) = (term590 _91746).
Proof. exact (MK_COMB (@lem6864480) (@lem6864479 _91746)). Qed.
Lemma lem6864482 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864483 (_91746 : int) : ((term594 _91746) = term133) = ((term234 _91746) = term133).
Proof. exact (MK_COMB (@lem6864481 _91746) (@lem6864482)). Qed.
Lemma lem6864484 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : (term234 _91746) = term133.
Proof. exact (EQ_MP (@lem6864483 _91746) (@lem6864478 _91746 _91747 h1)). Qed.
Lemma lem6864485 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term596 _91746.
Proof. exact (conj (@lem6864484 _91746 _91747 h1) (@lem6864256 _91746 _91747 h1)). Qed.
Lemma lem6864487 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6864488 (_91746 : int) : term597 _91746.
Proof. exact (@lem6864487 (term234 _91746) (real_of_int _91746)). Qed.
Lemma lem6864489 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term598 _91746.
Proof. exact (@lem6864488 _91746 (@lem6864485 _91746 _91747 h1)). Qed.
Lemma lem6864490 (_91746 : int) : (term599 _91746) = (term574 _91746).
Proof. exact (@lem1982759 (term237 _91746) (real_of_int _91746) term199). Qed.
Lemma lem6864491 (_91746 : int) : (term497 _91746) = (term498 _91746).
Proof. exact (@lem1982713 term199 (real_of_int _91746)). Qed.
Lemma lem6864493 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864494 : term143 = term224.
Proof. exact (@lem6864493 term11). Qed.
Lemma lem6864496 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6864497 : term199 = term200.
Proof. exact (@lem6864496 term11). Qed.
Lemma lem6864498 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864499 : term499 = term500.
Proof. exact (MK_COMB (@lem6864498) (@lem6864497)). Qed.
Lemma lem6864500 : term501 = term502.
Proof. exact (MK_COMB (@lem6864499) (@lem6864494)). Qed.
Lemma lem6864501 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6864503 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864504 : term251 = term252.
Proof. exact (@lem6864503 (NUMERAL 0) term11). Qed.
Lemma lem6864505 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864506 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864507 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864506 h1) (fun h1 : term252 = True => @lem6864505)). Qed.
Lemma lem6864508 : term252 = True.
Proof. exact (EQ_MP (@lem6864507) (@lem6864505)). Qed.
Lemma lem6864509 : term251 = True.
Proof. exact (TRANS (@lem6864504) (@lem6864508)). Qed.
Lemma lem6864510 : True = term251.
Proof. exact (SYM (@lem6864509)). Qed.
Lemma lem6864511 : term251.
Proof. exact (EQ_MP (@lem6864510) (@lem0)). Qed.
Lemma lem6864512 : term504.
Proof. exact (@lem6864501 (@lem6864511)). Qed.
Lemma lem6864514 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864515 : term251 = term252.
Proof. exact (@lem6864514 (NUMERAL 0) term11). Qed.
Lemma lem6864516 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864517 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864518 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864517 h1) (fun h1 : term252 = True => @lem6864516)). Qed.
Lemma lem6864519 : term252 = True.
Proof. exact (EQ_MP (@lem6864518) (@lem6864516)). Qed.
Lemma lem6864520 : term251 = True.
Proof. exact (TRANS (@lem6864515) (@lem6864519)). Qed.
Lemma lem6864521 : True = term251.
Proof. exact (SYM (@lem6864520)). Qed.
Lemma lem6864522 : term251.
Proof. exact (EQ_MP (@lem6864521) (@lem0)). Qed.
Lemma lem6864523 : term505.
Proof. exact (@lem6864512 (@lem6864522)). Qed.
Lemma lem6864525 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864526 : term251 = term252.
Proof. exact (@lem6864525 (NUMERAL 0) term11). Qed.
Lemma lem6864527 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864528 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864529 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864528 h1) (fun h1 : term252 = True => @lem6864527)). Qed.
Lemma lem6864530 : term252 = True.
Proof. exact (EQ_MP (@lem6864529) (@lem6864527)). Qed.
Lemma lem6864531 : term251 = True.
Proof. exact (TRANS (@lem6864526) (@lem6864530)). Qed.
Lemma lem6864532 : True = term251.
Proof. exact (SYM (@lem6864531)). Qed.
Lemma lem6864533 : term251.
Proof. exact (EQ_MP (@lem6864532) (@lem0)). Qed.
Lemma lem6864534 : term506.
Proof. exact (@lem6864523 (@lem6864533)). Qed.
Lemma lem6864536 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864537 : term208 = term209.
Proof. exact (@lem6864536 term11 term11). Qed.
Lemma lem6864538 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864539 : term211 = term11.
Proof. exact (EQ_MP (@lem6864538) (@lem940073)). Qed.
Lemma lem6864540 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864541 : term209 = term143.
Proof. exact (MK_COMB (@lem6864540) (@lem6864539)). Qed.
Lemma lem6864542 : term208 = term143.
Proof. exact (TRANS (@lem6864537) (@lem6864541)). Qed.
Lemma lem6864544 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6864545 : term225 = term230.
Proof. exact (@lem6864544 term11 term11). Qed.
Lemma lem6864546 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864547 : term211 = term11.
Proof. exact (EQ_MP (@lem6864546) (@lem940073)). Qed.
Lemma lem6864548 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864549 : term209 = term143.
Proof. exact (MK_COMB (@lem6864548) (@lem6864547)). Qed.
Lemma lem6864550 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6864551 : term230 = term199.
Proof. exact (MK_COMB (@lem6864550) (@lem6864549)). Qed.
Lemma lem6864552 : term225 = term199.
Proof. exact (TRANS (@lem6864545) (@lem6864551)). Qed.
Lemma lem6864553 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864554 : term507 = term499.
Proof. exact (MK_COMB (@lem6864553) (@lem6864552)). Qed.
Lemma lem6864555 : term508 = term501.
Proof. exact (MK_COMB (@lem6864554) (@lem6864542)). Qed.
Lemma lem6864557 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6864558 : term501 = term133.
Proof. exact (@lem6864557 term11). Qed.
Lemma lem6864559 : term508 = term133.
Proof. exact (TRANS (@lem6864555) (@lem6864558)). Qed.
Lemma lem6864560 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864561 : term510 = term261.
Proof. exact (MK_COMB (@lem6864560) (@lem6864559)). Qed.
Lemma lem6864562 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6864563 : term511 = term263.
Proof. exact (MK_COMB (@lem6864561) (@lem6864562)). Qed.
Lemma lem6864565 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864566 : term263 = term133.
Proof. exact (@lem6864565 term11). Qed.
Lemma lem6864567 : term511 = term133.
Proof. exact (TRANS (@lem6864563) (@lem6864566)). Qed.
Lemma lem6864569 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864570 : term208 = term209.
Proof. exact (@lem6864569 term11 term11). Qed.
Lemma lem6864571 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864572 : term211 = term11.
Proof. exact (EQ_MP (@lem6864571) (@lem940073)). Qed.
Lemma lem6864573 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864574 : term209 = term143.
Proof. exact (MK_COMB (@lem6864573) (@lem6864572)). Qed.
Lemma lem6864575 : term208 = term143.
Proof. exact (TRANS (@lem6864570) (@lem6864574)). Qed.
Lemma lem6864576 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6864577 : term265 = term263.
Proof. exact (MK_COMB (@lem6864576) (@lem6864575)). Qed.
Lemma lem6864579 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864580 : term263 = term133.
Proof. exact (@lem6864579 term11). Qed.
Lemma lem6864581 : term265 = term133.
Proof. exact (TRANS (@lem6864577) (@lem6864580)). Qed.
Lemma lem6864582 : term133 = term265.
Proof. exact (SYM (@lem6864581)). Qed.
Lemma lem6864583 : term511 = term265.
Proof. exact (TRANS (@lem6864567) (@lem6864582)). Qed.
Lemma lem6864584 : term502 = term196.
Proof. exact (@lem6864534 (@lem6864583)). Qed.
Lemma lem6864585 : term501 = term196.
Proof. exact (TRANS (@lem6864500) (@lem6864584)). Qed.
Lemma lem6864587 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6864588 : term196 = term133.
Proof. exact (@lem6864587 term133). Qed.
Lemma lem6864589 : term501 = term133.
Proof. exact (TRANS (@lem6864585) (@lem6864588)). Qed.
Lemma lem6864590 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864591 : term512 = term261.
Proof. exact (MK_COMB (@lem6864590) (@lem6864589)). Qed.
Lemma lem6864592 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6864593 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6864591) (@lem6864592 _91746)). Qed.
Lemma lem6864594 (_91746 : int) : (term497 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6864491 _91746) (@lem6864593 _91746)). Qed.
Lemma lem6864595 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6864596 (_91746 : int) : (term497 _91746) = term133.
Proof. exact (TRANS (@lem6864594 _91746) (@lem6864595 _91746)). Qed.
Lemma lem6864597 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864598 (_91746 : int) : (term514 _91746) = term175.
Proof. exact (MK_COMB (@lem6864597) (@lem6864596 _91746)). Qed.
Lemma lem6864599 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6864600 (_91746 : int) : (term574 _91746) = term519.
Proof. exact (MK_COMB (@lem6864598 _91746) (@lem6864599)). Qed.
Lemma lem6864601 (_91746 : int) : (term599 _91746) = term519.
Proof. exact (TRANS (@lem6864490 _91746) (@lem6864600 _91746)). Qed.
Lemma lem6864602 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6864603 (_91746 : int) : (term599 _91746) = term199.
Proof. exact (TRANS (@lem6864601 _91746) (@lem6864602)). Qed.
Lemma lem6864604 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6864605 (_91746 : int) : (term600 _91746) = term521.
Proof. exact (MK_COMB (@lem6864604) (@lem6864603 _91746)). Qed.
Lemma lem6864606 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864607 (_91746 : int) : (term598 _91746) = term522.
Proof. exact (MK_COMB (@lem6864605 _91746) (@lem6864606)). Qed.
Lemma lem6864608 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6864607 _91746) (@lem6864489 _91746 _91747 h1)). Qed.
Lemma lem6864610 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6864611 : term522 = term523.
Proof. exact (@lem6864610 term133 term199). Qed.
Lemma lem6864613 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6864614 : term199 = term200.
Proof. exact (@lem6864613 term11). Qed.
Lemma lem6864616 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864617 : term133 = term196.
Proof. exact (@lem6864616 (NUMERAL 0)). Qed.
Lemma lem6864618 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6864619 : term135 = term524.
Proof. exact (MK_COMB (@lem6864618) (@lem6864617)). Qed.
Lemma lem6864620 : term523 = term525.
Proof. exact (MK_COMB (@lem6864619) (@lem6864614)). Qed.
Lemma lem6864621 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6864623 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864624 : term251 = term252.
Proof. exact (@lem6864623 (NUMERAL 0) term11). Qed.
Lemma lem6864625 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864626 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864627 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864626 h1) (fun h1 : term252 = True => @lem6864625)). Qed.
Lemma lem6864628 : term252 = True.
Proof. exact (EQ_MP (@lem6864627) (@lem6864625)). Qed.
Lemma lem6864629 : term251 = True.
Proof. exact (TRANS (@lem6864624) (@lem6864628)). Qed.
Lemma lem6864630 : True = term251.
Proof. exact (SYM (@lem6864629)). Qed.
Lemma lem6864631 : term251.
Proof. exact (EQ_MP (@lem6864630) (@lem0)). Qed.
Lemma lem6864632 : term527.
Proof. exact (@lem6864621 (@lem6864631)). Qed.
Lemma lem6864634 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864635 : term251 = term252.
Proof. exact (@lem6864634 (NUMERAL 0) term11). Qed.
Lemma lem6864636 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864637 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864638 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864637 h1) (fun h1 : term252 = True => @lem6864636)). Qed.
Lemma lem6864639 : term252 = True.
Proof. exact (EQ_MP (@lem6864638) (@lem6864636)). Qed.
Lemma lem6864640 : term251 = True.
Proof. exact (TRANS (@lem6864635) (@lem6864639)). Qed.
Lemma lem6864641 : True = term251.
Proof. exact (SYM (@lem6864640)). Qed.
Lemma lem6864642 : term251.
Proof. exact (EQ_MP (@lem6864641) (@lem0)). Qed.
Lemma lem6864643 : term525 = term528.
Proof. exact (@lem6864632 (@lem6864642)). Qed.
Lemma lem6864645 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6864646 : term225 = term230.
Proof. exact (@lem6864645 term11 term11). Qed.
Lemma lem6864647 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864648 : term211 = term11.
Proof. exact (EQ_MP (@lem6864647) (@lem940073)). Qed.
Lemma lem6864649 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864650 : term209 = term143.
Proof. exact (MK_COMB (@lem6864649) (@lem6864648)). Qed.
Lemma lem6864651 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6864652 : term230 = term199.
Proof. exact (MK_COMB (@lem6864651) (@lem6864650)). Qed.
Lemma lem6864653 : term225 = term199.
Proof. exact (TRANS (@lem6864646) (@lem6864652)). Qed.
Lemma lem6864655 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864656 : term263 = term133.
Proof. exact (@lem6864655 term11). Qed.
Lemma lem6864657 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6864658 : term529 = term135.
Proof. exact (MK_COMB (@lem6864657) (@lem6864656)). Qed.
Lemma lem6864659 : term528 = term523.
Proof. exact (MK_COMB (@lem6864658) (@lem6864653)). Qed.
Lemma lem6864661 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6864662 : term523 = term532.
Proof. exact (@lem6864661 (NUMERAL 0) term11). Qed.
Lemma lem6864663 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864664 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6864665 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864664 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6864663)). Qed.
Lemma lem6864666 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6864665) (@lem6864663)). Qed.
Lemma lem6864667 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6864668 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6864669 : term533 = (and True).
Proof. exact (MK_COMB (@lem6864668) (@lem6864667)). Qed.
Lemma lem6864670 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6864669) (@lem6864666)). Qed.
Lemma lem6864672 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6864673 : term532 = False.
Proof. exact (TRANS (@lem6864670) (@lem6864672)). Qed.
Lemma lem6864674 : term523 = False.
Proof. exact (TRANS (@lem6864662) (@lem6864673)). Qed.
Lemma lem6864675 : term528 = False.
Proof. exact (TRANS (@lem6864659) (@lem6864674)). Qed.
Lemma lem6864676 : term525 = False.
Proof. exact (TRANS (@lem6864643) (@lem6864675)). Qed.
Lemma lem6864677 : term523 = False.
Proof. exact (TRANS (@lem6864620) (@lem6864676)). Qed.
Lemma lem6864678 : term522 = False.
Proof. exact (TRANS (@lem6864611) (@lem6864677)). Qed.
Lemma lem6864679 (_91746 : int) (_91747 : int) (h1 : term576 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6864678) (@lem6864608 _91746 _91747 h1)). Qed.
Lemma lem6864680 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term601 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6864681 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term459 _91746 _91747.
Proof. exact (proj2 (@lem6864680 _91746 _91747 h1)). Qed.
Lemma lem6864683 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term410 _91746 _91747.
Proof. exact (proj2 (@lem6864681 _91746 _91747 h1)). Qed.
Lemma lem6864685 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term361 _91746 _91747.
Proof. exact (proj2 (@lem6864683 _91746 _91747 h1)). Qed.
Lemma lem6864686 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term272 _91747 _91746.
Proof. exact (proj1 (@lem6864683 _91746 _91747 h1)). Qed.
Lemma lem6864687 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : (real_of_int _91746) = term133.
Proof. exact (proj2 (@lem6864686 _91746 _91747 h1)). Qed.
Lemma lem6864689 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term286 _91746 _91747.
Proof. exact (proj2 (@lem6864685 _91746 _91747 h1)). Qed.
Lemma lem6864690 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (proj1 (@lem6864685 _91746 _91747 h1)). Qed.
Lemma lem6864692 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6864693 : term471 = term251.
Proof. exact (@lem6864692 term133 term143). Qed.
Lemma lem6864695 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864696 : term143 = term224.
Proof. exact (@lem6864695 term11). Qed.
Lemma lem6864698 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864699 : term133 = term196.
Proof. exact (@lem6864698 (NUMERAL 0)). Qed.
Lemma lem6864700 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864701 : term472 = term473.
Proof. exact (MK_COMB (@lem6864700) (@lem6864699)). Qed.
Lemma lem6864702 : term251 = term474.
Proof. exact (MK_COMB (@lem6864701) (@lem6864696)). Qed.
Lemma lem6864703 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6864705 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864706 : term251 = term252.
Proof. exact (@lem6864705 (NUMERAL 0) term11). Qed.
Lemma lem6864707 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864708 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864709 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864708 h1) (fun h1 : term252 = True => @lem6864707)). Qed.
Lemma lem6864710 : term252 = True.
Proof. exact (EQ_MP (@lem6864709) (@lem6864707)). Qed.
Lemma lem6864711 : term251 = True.
Proof. exact (TRANS (@lem6864706) (@lem6864710)). Qed.
Lemma lem6864712 : True = term251.
Proof. exact (SYM (@lem6864711)). Qed.
Lemma lem6864713 : term251.
Proof. exact (EQ_MP (@lem6864712) (@lem0)). Qed.
Lemma lem6864714 : term476.
Proof. exact (@lem6864703 (@lem6864713)). Qed.
Lemma lem6864716 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864717 : term251 = term252.
Proof. exact (@lem6864716 (NUMERAL 0) term11). Qed.
Lemma lem6864718 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864719 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864720 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864719 h1) (fun h1 : term252 = True => @lem6864718)). Qed.
Lemma lem6864721 : term252 = True.
Proof. exact (EQ_MP (@lem6864720) (@lem6864718)). Qed.
Lemma lem6864722 : term251 = True.
Proof. exact (TRANS (@lem6864717) (@lem6864721)). Qed.
Lemma lem6864723 : True = term251.
Proof. exact (SYM (@lem6864722)). Qed.
Lemma lem6864724 : term251.
Proof. exact (EQ_MP (@lem6864723) (@lem0)). Qed.
Lemma lem6864725 : term474 = term477.
Proof. exact (@lem6864714 (@lem6864724)). Qed.
Lemma lem6864727 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864728 : term208 = term209.
Proof. exact (@lem6864727 term11 term11). Qed.
Lemma lem6864729 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864730 : term211 = term11.
Proof. exact (EQ_MP (@lem6864729) (@lem940073)). Qed.
Lemma lem6864731 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864732 : term209 = term143.
Proof. exact (MK_COMB (@lem6864731) (@lem6864730)). Qed.
Lemma lem6864733 : term208 = term143.
Proof. exact (TRANS (@lem6864728) (@lem6864732)). Qed.
Lemma lem6864735 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864736 : term263 = term133.
Proof. exact (@lem6864735 term11). Qed.
Lemma lem6864737 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864738 : term478 = term472.
Proof. exact (MK_COMB (@lem6864737) (@lem6864736)). Qed.
Lemma lem6864739 : term477 = term251.
Proof. exact (MK_COMB (@lem6864738) (@lem6864733)). Qed.
Lemma lem6864741 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864742 : term251 = term252.
Proof. exact (@lem6864741 (NUMERAL 0) term11). Qed.
Lemma lem6864743 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864744 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864745 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864744 h1) (fun h1 : term252 = True => @lem6864743)). Qed.
Lemma lem6864746 : term252 = True.
Proof. exact (EQ_MP (@lem6864745) (@lem6864743)). Qed.
Lemma lem6864747 : term251 = True.
Proof. exact (TRANS (@lem6864742) (@lem6864746)). Qed.
Lemma lem6864748 : term477 = True.
Proof. exact (TRANS (@lem6864739) (@lem6864747)). Qed.
Lemma lem6864749 : term474 = True.
Proof. exact (TRANS (@lem6864725) (@lem6864748)). Qed.
Lemma lem6864750 : term251 = True.
Proof. exact (TRANS (@lem6864702) (@lem6864749)). Qed.
Lemma lem6864751 : term471 = True.
Proof. exact (TRANS (@lem6864693) (@lem6864750)). Qed.
Lemma lem6864752 : True = term471.
Proof. exact (SYM (@lem6864751)). Qed.
Lemma lem6864753 : term471.
Proof. exact (EQ_MP (@lem6864752) (@lem0)). Qed.
Lemma lem6864754 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term535 _91746 _91747.
Proof. exact (conj (@lem6864753) (@lem6864689 _91746 _91747 h1)). Qed.
Lemma lem6864756 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6864757 (_91746 : int) (_91747 : int) : term536 _91746 _91747.
Proof. exact (@lem6864756 term143 (term236 _91746 _91747)). Qed.
Lemma lem6864758 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term537 _91746 _91747.
Proof. exact (@lem6864757 _91746 _91747 (@lem6864754 _91746 _91747 h1)). Qed.
Lemma lem6864759 (_91746 : int) (_91747 : int) : (term489 _91746 _91747) = (term236 _91746 _91747).
Proof. exact (@lem1982733 (term236 _91746 _91747)). Qed.
Lemma lem6864760 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6864761 (_91746 : int) (_91747 : int) : (term538 _91746 _91747) = (term285 _91746 _91747).
Proof. exact (MK_COMB (@lem6864760) (@lem6864759 _91746 _91747)). Qed.
Lemma lem6864762 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864763 (_91746 : int) (_91747 : int) : (term537 _91746 _91747) = (term286 _91746 _91747).
Proof. exact (MK_COMB (@lem6864761 _91746 _91747) (@lem6864762)). Qed.
Lemma lem6864764 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term286 _91746 _91747.
Proof. exact (EQ_MP (@lem6864763 _91746 _91747) (@lem6864758 _91746 _91747 h1)). Qed.
Lemma lem6864766 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6864767 (_91747 : int) : term539 _91747.
Proof. exact (@lem6864766 (real_of_int _91747)). Qed.
Lemma lem6864768 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term540 _91747.
Proof. exact (@lem6864767 _91747 (@lem6864690 _91746 _91747 h1)). Qed.
Lemma lem6864769 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term556 _91747.
Proof. exact (@lem6864768 _91746 _91747 h1 term199). Qed.
Lemma lem6864770 (_91747 : int) : (term556 _91747) = ((term237 _91747) = term133).
Proof. exact (eq_refl (term556 _91747)). Qed.
Lemma lem6864777 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : (term237 _91747) = term133.
Proof. exact (EQ_MP (@lem6864770 _91747) (@lem6864769 _91746 _91747 h1)). Qed.
Lemma lem6864778 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term602 _91746 _91747.
Proof. exact (conj (@lem6864777 _91746 _91747 h1) (@lem6864764 _91746 _91747 h1)). Qed.
Lemma lem6864780 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6864781 (_91746 : int) (_91747 : int) : term603 _91746 _91747.
Proof. exact (@lem6864780 (term237 _91747) (term236 _91746 _91747)). Qed.
Lemma lem6864782 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term604 _91746 _91747.
Proof. exact (@lem6864781 _91746 _91747 (@lem6864778 _91746 _91747 h1)). Qed.
Lemma lem6864783 (_91746 : int) (_91747 : int) : (term587 _91746 _91747) = (term588 _91746 _91747).
Proof. exact (@lem1982757 (term237 _91746) (term237 _91747) (term299 _91747)). Qed.
Lemma lem6864784 (_91747 : int) : (term573 _91747) = (term574 _91747).
Proof. exact (@lem1982763 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6864785 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6864787 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864788 : term143 = term224.
Proof. exact (@lem6864787 term11). Qed.
Lemma lem6864790 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6864791 : term199 = term200.
Proof. exact (@lem6864790 term11). Qed.
Lemma lem6864792 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864793 : term499 = term500.
Proof. exact (MK_COMB (@lem6864792) (@lem6864791)). Qed.
Lemma lem6864794 : term501 = term502.
Proof. exact (MK_COMB (@lem6864793) (@lem6864788)). Qed.
Lemma lem6864795 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6864797 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864798 : term251 = term252.
Proof. exact (@lem6864797 (NUMERAL 0) term11). Qed.
Lemma lem6864799 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864800 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864801 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864800 h1) (fun h1 : term252 = True => @lem6864799)). Qed.
Lemma lem6864802 : term252 = True.
Proof. exact (EQ_MP (@lem6864801) (@lem6864799)). Qed.
Lemma lem6864803 : term251 = True.
Proof. exact (TRANS (@lem6864798) (@lem6864802)). Qed.
Lemma lem6864804 : True = term251.
Proof. exact (SYM (@lem6864803)). Qed.
Lemma lem6864805 : term251.
Proof. exact (EQ_MP (@lem6864804) (@lem0)). Qed.
Lemma lem6864806 : term504.
Proof. exact (@lem6864795 (@lem6864805)). Qed.
Lemma lem6864808 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864809 : term251 = term252.
Proof. exact (@lem6864808 (NUMERAL 0) term11). Qed.
Lemma lem6864810 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864811 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864812 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864811 h1) (fun h1 : term252 = True => @lem6864810)). Qed.
Lemma lem6864813 : term252 = True.
Proof. exact (EQ_MP (@lem6864812) (@lem6864810)). Qed.
Lemma lem6864814 : term251 = True.
Proof. exact (TRANS (@lem6864809) (@lem6864813)). Qed.
Lemma lem6864815 : True = term251.
Proof. exact (SYM (@lem6864814)). Qed.
Lemma lem6864816 : term251.
Proof. exact (EQ_MP (@lem6864815) (@lem0)). Qed.
Lemma lem6864817 : term505.
Proof. exact (@lem6864806 (@lem6864816)). Qed.
Lemma lem6864819 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864820 : term251 = term252.
Proof. exact (@lem6864819 (NUMERAL 0) term11). Qed.
Lemma lem6864821 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864822 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864823 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864822 h1) (fun h1 : term252 = True => @lem6864821)). Qed.
Lemma lem6864824 : term252 = True.
Proof. exact (EQ_MP (@lem6864823) (@lem6864821)). Qed.
Lemma lem6864825 : term251 = True.
Proof. exact (TRANS (@lem6864820) (@lem6864824)). Qed.
Lemma lem6864826 : True = term251.
Proof. exact (SYM (@lem6864825)). Qed.
Lemma lem6864827 : term251.
Proof. exact (EQ_MP (@lem6864826) (@lem0)). Qed.
Lemma lem6864828 : term506.
Proof. exact (@lem6864817 (@lem6864827)). Qed.
Lemma lem6864830 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864831 : term208 = term209.
Proof. exact (@lem6864830 term11 term11). Qed.
Lemma lem6864832 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864833 : term211 = term11.
Proof. exact (EQ_MP (@lem6864832) (@lem940073)). Qed.
Lemma lem6864834 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864835 : term209 = term143.
Proof. exact (MK_COMB (@lem6864834) (@lem6864833)). Qed.
Lemma lem6864836 : term208 = term143.
Proof. exact (TRANS (@lem6864831) (@lem6864835)). Qed.
Lemma lem6864838 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6864839 : term225 = term230.
Proof. exact (@lem6864838 term11 term11). Qed.
Lemma lem6864840 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864841 : term211 = term11.
Proof. exact (EQ_MP (@lem6864840) (@lem940073)). Qed.
Lemma lem6864842 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864843 : term209 = term143.
Proof. exact (MK_COMB (@lem6864842) (@lem6864841)). Qed.
Lemma lem6864844 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6864845 : term230 = term199.
Proof. exact (MK_COMB (@lem6864844) (@lem6864843)). Qed.
Lemma lem6864846 : term225 = term199.
Proof. exact (TRANS (@lem6864839) (@lem6864845)). Qed.
Lemma lem6864847 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864848 : term507 = term499.
Proof. exact (MK_COMB (@lem6864847) (@lem6864846)). Qed.
Lemma lem6864849 : term508 = term501.
Proof. exact (MK_COMB (@lem6864848) (@lem6864836)). Qed.
Lemma lem6864851 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6864852 : term501 = term133.
Proof. exact (@lem6864851 term11). Qed.
Lemma lem6864853 : term508 = term133.
Proof. exact (TRANS (@lem6864849) (@lem6864852)). Qed.
Lemma lem6864854 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864855 : term510 = term261.
Proof. exact (MK_COMB (@lem6864854) (@lem6864853)). Qed.
Lemma lem6864856 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6864857 : term511 = term263.
Proof. exact (MK_COMB (@lem6864855) (@lem6864856)). Qed.
Lemma lem6864859 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864860 : term263 = term133.
Proof. exact (@lem6864859 term11). Qed.
Lemma lem6864861 : term511 = term133.
Proof. exact (TRANS (@lem6864857) (@lem6864860)). Qed.
Lemma lem6864863 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864864 : term208 = term209.
Proof. exact (@lem6864863 term11 term11). Qed.
Lemma lem6864865 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864866 : term211 = term11.
Proof. exact (EQ_MP (@lem6864865) (@lem940073)). Qed.
Lemma lem6864867 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864868 : term209 = term143.
Proof. exact (MK_COMB (@lem6864867) (@lem6864866)). Qed.
Lemma lem6864869 : term208 = term143.
Proof. exact (TRANS (@lem6864864) (@lem6864868)). Qed.
Lemma lem6864870 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6864871 : term265 = term263.
Proof. exact (MK_COMB (@lem6864870) (@lem6864869)). Qed.
Lemma lem6864873 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864874 : term263 = term133.
Proof. exact (@lem6864873 term11). Qed.
Lemma lem6864875 : term265 = term133.
Proof. exact (TRANS (@lem6864871) (@lem6864874)). Qed.
Lemma lem6864876 : term133 = term265.
Proof. exact (SYM (@lem6864875)). Qed.
Lemma lem6864877 : term511 = term265.
Proof. exact (TRANS (@lem6864861) (@lem6864876)). Qed.
Lemma lem6864878 : term502 = term196.
Proof. exact (@lem6864828 (@lem6864877)). Qed.
Lemma lem6864879 : term501 = term196.
Proof. exact (TRANS (@lem6864794) (@lem6864878)). Qed.
Lemma lem6864881 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6864882 : term196 = term133.
Proof. exact (@lem6864881 term133). Qed.
Lemma lem6864883 : term501 = term133.
Proof. exact (TRANS (@lem6864879) (@lem6864882)). Qed.
Lemma lem6864884 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6864885 : term512 = term261.
Proof. exact (MK_COMB (@lem6864884) (@lem6864883)). Qed.
Lemma lem6864886 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6864887 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6864885) (@lem6864886 _91747)). Qed.
Lemma lem6864888 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6864785 _91747) (@lem6864887 _91747)). Qed.
Lemma lem6864889 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6864890 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6864888 _91747) (@lem6864889 _91747)). Qed.
Lemma lem6864891 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6864892 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6864891) (@lem6864890 _91747)). Qed.
Lemma lem6864893 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6864894 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6864892 _91747) (@lem6864893)). Qed.
Lemma lem6864895 (_91747 : int) : (term573 _91747) = term519.
Proof. exact (TRANS (@lem6864784 _91747) (@lem6864894 _91747)). Qed.
Lemma lem6864896 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6864897 (_91747 : int) : (term573 _91747) = term199.
Proof. exact (TRANS (@lem6864895 _91747) (@lem6864896)). Qed.
Lemma lem6864898 (_91746 : int) : (term233 _91746) = (term233 _91746).
Proof. exact (eq_refl (term233 _91746)). Qed.
Lemma lem6864899 (_91747 : int) (_91746 : int) : (term588 _91746 _91747) = (term234 _91746).
Proof. exact (MK_COMB (@lem6864898 _91746) (@lem6864897 _91747)). Qed.
Lemma lem6864900 (_91747 : int) (_91746 : int) : (term587 _91746 _91747) = (term234 _91746).
Proof. exact (TRANS (@lem6864783 _91746 _91747) (@lem6864899 _91747 _91746)). Qed.
Lemma lem6864901 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6864902 (_91747 : int) (_91746 : int) : (term605 _91746 _91747) = (term292 _91746).
Proof. exact (MK_COMB (@lem6864901) (@lem6864900 _91747 _91746)). Qed.
Lemma lem6864903 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864904 (_91747 : int) (_91746 : int) : (term604 _91746 _91747) = (term293 _91746).
Proof. exact (MK_COMB (@lem6864902 _91747 _91746) (@lem6864903)). Qed.
Lemma lem6864905 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term293 _91746.
Proof. exact (EQ_MP (@lem6864904 _91747 _91746) (@lem6864782 _91746 _91747 h1)). Qed.
Lemma lem6864907 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6864908 : term471 = term251.
Proof. exact (@lem6864907 term133 term143). Qed.
Lemma lem6864910 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864911 : term143 = term224.
Proof. exact (@lem6864910 term11). Qed.
Lemma lem6864913 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6864914 : term133 = term196.
Proof. exact (@lem6864913 (NUMERAL 0)). Qed.
Lemma lem6864915 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864916 : term472 = term473.
Proof. exact (MK_COMB (@lem6864915) (@lem6864914)). Qed.
Lemma lem6864917 : term251 = term474.
Proof. exact (MK_COMB (@lem6864916) (@lem6864911)). Qed.
Lemma lem6864918 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6864920 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864921 : term251 = term252.
Proof. exact (@lem6864920 (NUMERAL 0) term11). Qed.
Lemma lem6864922 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864923 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864924 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864923 h1) (fun h1 : term252 = True => @lem6864922)). Qed.
Lemma lem6864925 : term252 = True.
Proof. exact (EQ_MP (@lem6864924) (@lem6864922)). Qed.
Lemma lem6864926 : term251 = True.
Proof. exact (TRANS (@lem6864921) (@lem6864925)). Qed.
Lemma lem6864927 : True = term251.
Proof. exact (SYM (@lem6864926)). Qed.
Lemma lem6864928 : term251.
Proof. exact (EQ_MP (@lem6864927) (@lem0)). Qed.
Lemma lem6864929 : term476.
Proof. exact (@lem6864918 (@lem6864928)). Qed.
Lemma lem6864931 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864932 : term251 = term252.
Proof. exact (@lem6864931 (NUMERAL 0) term11). Qed.
Lemma lem6864933 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864934 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864935 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864934 h1) (fun h1 : term252 = True => @lem6864933)). Qed.
Lemma lem6864936 : term252 = True.
Proof. exact (EQ_MP (@lem6864935) (@lem6864933)). Qed.
Lemma lem6864937 : term251 = True.
Proof. exact (TRANS (@lem6864932) (@lem6864936)). Qed.
Lemma lem6864938 : True = term251.
Proof. exact (SYM (@lem6864937)). Qed.
Lemma lem6864939 : term251.
Proof. exact (EQ_MP (@lem6864938) (@lem0)). Qed.
Lemma lem6864940 : term474 = term477.
Proof. exact (@lem6864929 (@lem6864939)). Qed.
Lemma lem6864942 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6864943 : term208 = term209.
Proof. exact (@lem6864942 term11 term11). Qed.
Lemma lem6864944 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6864945 : term211 = term11.
Proof. exact (EQ_MP (@lem6864944) (@lem940073)). Qed.
Lemma lem6864946 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6864947 : term209 = term143.
Proof. exact (MK_COMB (@lem6864946) (@lem6864945)). Qed.
Lemma lem6864948 : term208 = term143.
Proof. exact (TRANS (@lem6864943) (@lem6864947)). Qed.
Lemma lem6864950 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6864951 : term263 = term133.
Proof. exact (@lem6864950 term11). Qed.
Lemma lem6864952 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6864953 : term478 = term472.
Proof. exact (MK_COMB (@lem6864952) (@lem6864951)). Qed.
Lemma lem6864954 : term477 = term251.
Proof. exact (MK_COMB (@lem6864953) (@lem6864948)). Qed.
Lemma lem6864956 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6864957 : term251 = term252.
Proof. exact (@lem6864956 (NUMERAL 0) term11). Qed.
Lemma lem6864958 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6864959 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6864960 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6864959 h1) (fun h1 : term252 = True => @lem6864958)). Qed.
Lemma lem6864961 : term252 = True.
Proof. exact (EQ_MP (@lem6864960) (@lem6864958)). Qed.
Lemma lem6864962 : term251 = True.
Proof. exact (TRANS (@lem6864957) (@lem6864961)). Qed.
Lemma lem6864963 : term477 = True.
Proof. exact (TRANS (@lem6864954) (@lem6864962)). Qed.
Lemma lem6864964 : term474 = True.
Proof. exact (TRANS (@lem6864940) (@lem6864963)). Qed.
Lemma lem6864965 : term251 = True.
Proof. exact (TRANS (@lem6864917) (@lem6864964)). Qed.
Lemma lem6864966 : term471 = True.
Proof. exact (TRANS (@lem6864908) (@lem6864965)). Qed.
Lemma lem6864967 : True = term471.
Proof. exact (SYM (@lem6864966)). Qed.
Lemma lem6864968 : term471.
Proof. exact (EQ_MP (@lem6864967) (@lem0)). Qed.
Lemma lem6864969 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term606 _91746.
Proof. exact (conj (@lem6864968) (@lem6864905 _91746 _91747 h1)). Qed.
Lemma lem6864971 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6864972 (_91746 : int) : term607 _91746.
Proof. exact (@lem6864971 term143 (term234 _91746)). Qed.
Lemma lem6864973 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term608 _91746.
Proof. exact (@lem6864972 _91746 (@lem6864969 _91746 _91747 h1)). Qed.
Lemma lem6864974 (_91746 : int) : (term594 _91746) = (term234 _91746).
Proof. exact (@lem1982733 (term234 _91746)). Qed.
Lemma lem6864975 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6864976 (_91746 : int) : (term609 _91746) = (term292 _91746).
Proof. exact (MK_COMB (@lem6864975) (@lem6864974 _91746)). Qed.
Lemma lem6864977 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864978 (_91746 : int) : (term608 _91746) = (term293 _91746).
Proof. exact (MK_COMB (@lem6864976 _91746) (@lem6864977)). Qed.
Lemma lem6864979 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term293 _91746.
Proof. exact (EQ_MP (@lem6864978 _91746) (@lem6864973 _91746 _91747 h1)). Qed.
Lemma lem6864981 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6864982 (_91746 : int) : term539 _91746.
Proof. exact (@lem6864981 (real_of_int _91746)). Qed.
Lemma lem6864983 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term540 _91746.
Proof. exact (@lem6864982 _91746 (@lem6864687 _91746 _91747 h1)). Qed.
Lemma lem6864984 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term541 _91746.
Proof. exact (@lem6864983 _91746 _91747 h1 term143). Qed.
Lemma lem6864985 (_91746 : int) : (term541 _91746) = ((term542 _91746) = term133).
Proof. exact (eq_refl (term541 _91746)). Qed.
Lemma lem6864986 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : (term542 _91746) = term133.
Proof. exact (EQ_MP (@lem6864985 _91746) (@lem6864984 _91746 _91747 h1)). Qed.
Lemma lem6864987 (_91746 : int) : (term542 _91746) = (real_of_int _91746).
Proof. exact (@lem1982733 (real_of_int _91746)). Qed.
Lemma lem6864988 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6864989 (_91746 : int) : (term543 _91746) = (term146 _91746).
Proof. exact (MK_COMB (@lem6864988) (@lem6864987 _91746)). Qed.
Lemma lem6864990 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6864991 (_91746 : int) : ((term542 _91746) = term133) = ((real_of_int _91746) = term133).
Proof. exact (MK_COMB (@lem6864989 _91746) (@lem6864990)). Qed.
Lemma lem6864992 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : (real_of_int _91746) = term133.
Proof. exact (EQ_MP (@lem6864991 _91746) (@lem6864986 _91746 _91747 h1)). Qed.
Lemma lem6864993 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term347 _91746.
Proof. exact (conj (@lem6864992 _91746 _91747 h1) (@lem6864979 _91746 _91747 h1)). Qed.
Lemma lem6864995 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6864996 (_91746 : int) : term610 _91746.
Proof. exact (@lem6864995 (real_of_int _91746) (term234 _91746)). Qed.
Lemma lem6864997 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term611 _91746.
Proof. exact (@lem6864996 _91746 (@lem6864993 _91746 _91747 h1)). Qed.
Lemma lem6864998 (_91746 : int) : (term612 _91746) = (term516 _91746).
Proof. exact (@lem1982763 (real_of_int _91746) (term237 _91746) term199). Qed.
Lemma lem6864999 (_91746 : int) : (term517 _91746) = (term498 _91746).
Proof. exact (@lem1982715 term199 (real_of_int _91746)). Qed.
Lemma lem6865001 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865002 : term143 = term224.
Proof. exact (@lem6865001 term11). Qed.
Lemma lem6865004 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865005 : term199 = term200.
Proof. exact (@lem6865004 term11). Qed.
Lemma lem6865006 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865007 : term499 = term500.
Proof. exact (MK_COMB (@lem6865006) (@lem6865005)). Qed.
Lemma lem6865008 : term501 = term502.
Proof. exact (MK_COMB (@lem6865007) (@lem6865002)). Qed.
Lemma lem6865009 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6865011 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865012 : term251 = term252.
Proof. exact (@lem6865011 (NUMERAL 0) term11). Qed.
Lemma lem6865013 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865014 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865015 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865014 h1) (fun h1 : term252 = True => @lem6865013)). Qed.
Lemma lem6865016 : term252 = True.
Proof. exact (EQ_MP (@lem6865015) (@lem6865013)). Qed.
Lemma lem6865017 : term251 = True.
Proof. exact (TRANS (@lem6865012) (@lem6865016)). Qed.
Lemma lem6865018 : True = term251.
Proof. exact (SYM (@lem6865017)). Qed.
Lemma lem6865019 : term251.
Proof. exact (EQ_MP (@lem6865018) (@lem0)). Qed.
Lemma lem6865020 : term504.
Proof. exact (@lem6865009 (@lem6865019)). Qed.
Lemma lem6865022 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865023 : term251 = term252.
Proof. exact (@lem6865022 (NUMERAL 0) term11). Qed.
Lemma lem6865024 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865025 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865026 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865025 h1) (fun h1 : term252 = True => @lem6865024)). Qed.
Lemma lem6865027 : term252 = True.
Proof. exact (EQ_MP (@lem6865026) (@lem6865024)). Qed.
Lemma lem6865028 : term251 = True.
Proof. exact (TRANS (@lem6865023) (@lem6865027)). Qed.
Lemma lem6865029 : True = term251.
Proof. exact (SYM (@lem6865028)). Qed.
Lemma lem6865030 : term251.
Proof. exact (EQ_MP (@lem6865029) (@lem0)). Qed.
Lemma lem6865031 : term505.
Proof. exact (@lem6865020 (@lem6865030)). Qed.
Lemma lem6865033 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865034 : term251 = term252.
Proof. exact (@lem6865033 (NUMERAL 0) term11). Qed.
Lemma lem6865035 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865036 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865037 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865036 h1) (fun h1 : term252 = True => @lem6865035)). Qed.
Lemma lem6865038 : term252 = True.
Proof. exact (EQ_MP (@lem6865037) (@lem6865035)). Qed.
Lemma lem6865039 : term251 = True.
Proof. exact (TRANS (@lem6865034) (@lem6865038)). Qed.
Lemma lem6865040 : True = term251.
Proof. exact (SYM (@lem6865039)). Qed.
Lemma lem6865041 : term251.
Proof. exact (EQ_MP (@lem6865040) (@lem0)). Qed.
Lemma lem6865042 : term506.
Proof. exact (@lem6865031 (@lem6865041)). Qed.
Lemma lem6865044 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865045 : term208 = term209.
Proof. exact (@lem6865044 term11 term11). Qed.
Lemma lem6865046 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865047 : term211 = term11.
Proof. exact (EQ_MP (@lem6865046) (@lem940073)). Qed.
Lemma lem6865048 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865049 : term209 = term143.
Proof. exact (MK_COMB (@lem6865048) (@lem6865047)). Qed.
Lemma lem6865050 : term208 = term143.
Proof. exact (TRANS (@lem6865045) (@lem6865049)). Qed.
Lemma lem6865052 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865053 : term225 = term230.
Proof. exact (@lem6865052 term11 term11). Qed.
Lemma lem6865054 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865055 : term211 = term11.
Proof. exact (EQ_MP (@lem6865054) (@lem940073)). Qed.
Lemma lem6865056 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865057 : term209 = term143.
Proof. exact (MK_COMB (@lem6865056) (@lem6865055)). Qed.
Lemma lem6865058 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865059 : term230 = term199.
Proof. exact (MK_COMB (@lem6865058) (@lem6865057)). Qed.
Lemma lem6865060 : term225 = term199.
Proof. exact (TRANS (@lem6865053) (@lem6865059)). Qed.
Lemma lem6865061 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865062 : term507 = term499.
Proof. exact (MK_COMB (@lem6865061) (@lem6865060)). Qed.
Lemma lem6865063 : term508 = term501.
Proof. exact (MK_COMB (@lem6865062) (@lem6865050)). Qed.
Lemma lem6865065 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6865066 : term501 = term133.
Proof. exact (@lem6865065 term11). Qed.
Lemma lem6865067 : term508 = term133.
Proof. exact (TRANS (@lem6865063) (@lem6865066)). Qed.
Lemma lem6865068 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865069 : term510 = term261.
Proof. exact (MK_COMB (@lem6865068) (@lem6865067)). Qed.
Lemma lem6865070 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6865071 : term511 = term263.
Proof. exact (MK_COMB (@lem6865069) (@lem6865070)). Qed.
Lemma lem6865073 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865074 : term263 = term133.
Proof. exact (@lem6865073 term11). Qed.
Lemma lem6865075 : term511 = term133.
Proof. exact (TRANS (@lem6865071) (@lem6865074)). Qed.
Lemma lem6865077 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865078 : term208 = term209.
Proof. exact (@lem6865077 term11 term11). Qed.
Lemma lem6865079 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865080 : term211 = term11.
Proof. exact (EQ_MP (@lem6865079) (@lem940073)). Qed.
Lemma lem6865081 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865082 : term209 = term143.
Proof. exact (MK_COMB (@lem6865081) (@lem6865080)). Qed.
Lemma lem6865083 : term208 = term143.
Proof. exact (TRANS (@lem6865078) (@lem6865082)). Qed.
Lemma lem6865084 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6865085 : term265 = term263.
Proof. exact (MK_COMB (@lem6865084) (@lem6865083)). Qed.
Lemma lem6865087 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865088 : term263 = term133.
Proof. exact (@lem6865087 term11). Qed.
Lemma lem6865089 : term265 = term133.
Proof. exact (TRANS (@lem6865085) (@lem6865088)). Qed.
Lemma lem6865090 : term133 = term265.
Proof. exact (SYM (@lem6865089)). Qed.
Lemma lem6865091 : term511 = term265.
Proof. exact (TRANS (@lem6865075) (@lem6865090)). Qed.
Lemma lem6865092 : term502 = term196.
Proof. exact (@lem6865042 (@lem6865091)). Qed.
Lemma lem6865093 : term501 = term196.
Proof. exact (TRANS (@lem6865008) (@lem6865092)). Qed.
Lemma lem6865095 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6865096 : term196 = term133.
Proof. exact (@lem6865095 term133). Qed.
Lemma lem6865097 : term501 = term133.
Proof. exact (TRANS (@lem6865093) (@lem6865096)). Qed.
Lemma lem6865098 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865099 : term512 = term261.
Proof. exact (MK_COMB (@lem6865098) (@lem6865097)). Qed.
Lemma lem6865100 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6865101 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6865099) (@lem6865100 _91746)). Qed.
Lemma lem6865102 (_91746 : int) : (term517 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6864999 _91746) (@lem6865101 _91746)). Qed.
Lemma lem6865103 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6865104 (_91746 : int) : (term517 _91746) = term133.
Proof. exact (TRANS (@lem6865102 _91746) (@lem6865103 _91746)). Qed.
Lemma lem6865105 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865106 (_91746 : int) : (term518 _91746) = term175.
Proof. exact (MK_COMB (@lem6865105) (@lem6865104 _91746)). Qed.
Lemma lem6865107 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6865108 (_91746 : int) : (term516 _91746) = term519.
Proof. exact (MK_COMB (@lem6865106 _91746) (@lem6865107)). Qed.
Lemma lem6865109 (_91746 : int) : (term612 _91746) = term519.
Proof. exact (TRANS (@lem6864998 _91746) (@lem6865108 _91746)). Qed.
Lemma lem6865110 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6865111 (_91746 : int) : (term612 _91746) = term199.
Proof. exact (TRANS (@lem6865109 _91746) (@lem6865110)). Qed.
Lemma lem6865112 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6865113 (_91746 : int) : (term613 _91746) = term521.
Proof. exact (MK_COMB (@lem6865112) (@lem6865111 _91746)). Qed.
Lemma lem6865114 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865115 (_91746 : int) : (term611 _91746) = term522.
Proof. exact (MK_COMB (@lem6865113 _91746) (@lem6865114)). Qed.
Lemma lem6865116 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6865115 _91746) (@lem6864997 _91746 _91747 h1)). Qed.
Lemma lem6865118 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6865119 : term522 = term523.
Proof. exact (@lem6865118 term133 term199). Qed.
Lemma lem6865121 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865122 : term199 = term200.
Proof. exact (@lem6865121 term11). Qed.
Lemma lem6865124 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865125 : term133 = term196.
Proof. exact (@lem6865124 (NUMERAL 0)). Qed.
Lemma lem6865126 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6865127 : term135 = term524.
Proof. exact (MK_COMB (@lem6865126) (@lem6865125)). Qed.
Lemma lem6865128 : term523 = term525.
Proof. exact (MK_COMB (@lem6865127) (@lem6865122)). Qed.
Lemma lem6865129 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6865131 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865132 : term251 = term252.
Proof. exact (@lem6865131 (NUMERAL 0) term11). Qed.
Lemma lem6865133 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865134 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865135 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865134 h1) (fun h1 : term252 = True => @lem6865133)). Qed.
Lemma lem6865136 : term252 = True.
Proof. exact (EQ_MP (@lem6865135) (@lem6865133)). Qed.
Lemma lem6865137 : term251 = True.
Proof. exact (TRANS (@lem6865132) (@lem6865136)). Qed.
Lemma lem6865138 : True = term251.
Proof. exact (SYM (@lem6865137)). Qed.
Lemma lem6865139 : term251.
Proof. exact (EQ_MP (@lem6865138) (@lem0)). Qed.
Lemma lem6865140 : term527.
Proof. exact (@lem6865129 (@lem6865139)). Qed.
Lemma lem6865142 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865143 : term251 = term252.
Proof. exact (@lem6865142 (NUMERAL 0) term11). Qed.
Lemma lem6865144 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865145 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865146 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865145 h1) (fun h1 : term252 = True => @lem6865144)). Qed.
Lemma lem6865147 : term252 = True.
Proof. exact (EQ_MP (@lem6865146) (@lem6865144)). Qed.
Lemma lem6865148 : term251 = True.
Proof. exact (TRANS (@lem6865143) (@lem6865147)). Qed.
Lemma lem6865149 : True = term251.
Proof. exact (SYM (@lem6865148)). Qed.
Lemma lem6865150 : term251.
Proof. exact (EQ_MP (@lem6865149) (@lem0)). Qed.
Lemma lem6865151 : term525 = term528.
Proof. exact (@lem6865140 (@lem6865150)). Qed.
Lemma lem6865153 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865154 : term225 = term230.
Proof. exact (@lem6865153 term11 term11). Qed.
Lemma lem6865155 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865156 : term211 = term11.
Proof. exact (EQ_MP (@lem6865155) (@lem940073)). Qed.
Lemma lem6865157 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865158 : term209 = term143.
Proof. exact (MK_COMB (@lem6865157) (@lem6865156)). Qed.
Lemma lem6865159 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865160 : term230 = term199.
Proof. exact (MK_COMB (@lem6865159) (@lem6865158)). Qed.
Lemma lem6865161 : term225 = term199.
Proof. exact (TRANS (@lem6865154) (@lem6865160)). Qed.
Lemma lem6865163 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865164 : term263 = term133.
Proof. exact (@lem6865163 term11). Qed.
Lemma lem6865165 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6865166 : term529 = term135.
Proof. exact (MK_COMB (@lem6865165) (@lem6865164)). Qed.
Lemma lem6865167 : term528 = term523.
Proof. exact (MK_COMB (@lem6865166) (@lem6865161)). Qed.
Lemma lem6865169 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6865170 : term523 = term532.
Proof. exact (@lem6865169 (NUMERAL 0) term11). Qed.
Lemma lem6865171 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865172 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6865173 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865172 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6865171)). Qed.
Lemma lem6865174 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6865173) (@lem6865171)). Qed.
Lemma lem6865175 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6865176 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6865177 : term533 = (and True).
Proof. exact (MK_COMB (@lem6865176) (@lem6865175)). Qed.
Lemma lem6865178 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6865177) (@lem6865174)). Qed.
Lemma lem6865180 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6865181 : term532 = False.
Proof. exact (TRANS (@lem6865178) (@lem6865180)). Qed.
Lemma lem6865182 : term523 = False.
Proof. exact (TRANS (@lem6865170) (@lem6865181)). Qed.
Lemma lem6865183 : term528 = False.
Proof. exact (TRANS (@lem6865167) (@lem6865182)). Qed.
Lemma lem6865184 : term525 = False.
Proof. exact (TRANS (@lem6865151) (@lem6865183)). Qed.
Lemma lem6865185 : term523 = False.
Proof. exact (TRANS (@lem6865128) (@lem6865184)). Qed.
Lemma lem6865186 : term522 = False.
Proof. exact (TRANS (@lem6865119) (@lem6865185)). Qed.
Lemma lem6865187 (_91746 : int) (_91747 : int) (h1 : term601 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6865186) (@lem6865116 _91746 _91747 h1)). Qed.
Lemma lem6865188 (_91746 : int) (_91747 : int) (h1 : term457 _91746 _91747) : False.
Proof. exact (or_elim (@lem6864173 _91746 _91747 h1) (fun h0 : term576 _91746 _91747 => @lem6864679 _91746 _91747 h0) (fun h0 : term601 _91746 _91747 => @lem6865187 _91746 _91747 h0)). Qed.
Lemma lem6865189 (_91746 : int) (_91747 : int) (h1 : term466 _91746 _91747) : False.
Proof. exact (or_elim (@lem6862990 _91746 _91747 h1) (fun h0 : term461 _91746 _91747 => @lem6864172 _91746 _91747 h0) (fun h0 : term457 _91746 _91747 => @lem6865188 _91746 _91747 h0)). Qed.
Lemma lem6865190 (_91746 : int) (_91747 : int) (h1 : term453 _91746 _91747) : term453 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865191 (_91746 : int) (_91747 : int) (h1 : term450 _91746 _91747) : term450 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865192 (_91746 : int) (_91747 : int) (h1 : term445 _91746 _91747) : term445 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865193 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term614 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865194 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term446 _91746 _91747.
Proof. exact (proj2 (@lem6865193 _91746 _91747 h1)). Qed.
Lemma lem6865196 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term397 _91746 _91747.
Proof. exact (proj2 (@lem6865194 _91746 _91747 h1)). Qed.
Lemma lem6865198 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term346 _91746 _91747.
Proof. exact (proj2 (@lem6865196 _91746 _91747 h1)). Qed.
Lemma lem6865199 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (proj1 (@lem6865196 _91746 _91747 h1)). Qed.
Lemma lem6865201 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term280 _91746 _91747.
Proof. exact (proj1 (@lem6865198 _91746 _91747 h1)). Qed.
Lemma lem6865203 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6865204 : term471 = term251.
Proof. exact (@lem6865203 term133 term143). Qed.
Lemma lem6865206 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865207 : term143 = term224.
Proof. exact (@lem6865206 term11). Qed.
Lemma lem6865209 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865210 : term133 = term196.
Proof. exact (@lem6865209 (NUMERAL 0)). Qed.
Lemma lem6865211 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865212 : term472 = term473.
Proof. exact (MK_COMB (@lem6865211) (@lem6865210)). Qed.
Lemma lem6865213 : term251 = term474.
Proof. exact (MK_COMB (@lem6865212) (@lem6865207)). Qed.
Lemma lem6865214 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6865216 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865217 : term251 = term252.
Proof. exact (@lem6865216 (NUMERAL 0) term11). Qed.
Lemma lem6865218 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865219 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865220 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865219 h1) (fun h1 : term252 = True => @lem6865218)). Qed.
Lemma lem6865221 : term252 = True.
Proof. exact (EQ_MP (@lem6865220) (@lem6865218)). Qed.
Lemma lem6865222 : term251 = True.
Proof. exact (TRANS (@lem6865217) (@lem6865221)). Qed.
Lemma lem6865223 : True = term251.
Proof. exact (SYM (@lem6865222)). Qed.
Lemma lem6865224 : term251.
Proof. exact (EQ_MP (@lem6865223) (@lem0)). Qed.
Lemma lem6865225 : term476.
Proof. exact (@lem6865214 (@lem6865224)). Qed.
Lemma lem6865227 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865228 : term251 = term252.
Proof. exact (@lem6865227 (NUMERAL 0) term11). Qed.
Lemma lem6865229 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865230 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865231 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865230 h1) (fun h1 : term252 = True => @lem6865229)). Qed.
Lemma lem6865232 : term252 = True.
Proof. exact (EQ_MP (@lem6865231) (@lem6865229)). Qed.
Lemma lem6865233 : term251 = True.
Proof. exact (TRANS (@lem6865228) (@lem6865232)). Qed.
Lemma lem6865234 : True = term251.
Proof. exact (SYM (@lem6865233)). Qed.
Lemma lem6865235 : term251.
Proof. exact (EQ_MP (@lem6865234) (@lem0)). Qed.
Lemma lem6865236 : term474 = term477.
Proof. exact (@lem6865225 (@lem6865235)). Qed.
Lemma lem6865238 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865239 : term208 = term209.
Proof. exact (@lem6865238 term11 term11). Qed.
Lemma lem6865240 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865241 : term211 = term11.
Proof. exact (EQ_MP (@lem6865240) (@lem940073)). Qed.
Lemma lem6865242 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865243 : term209 = term143.
Proof. exact (MK_COMB (@lem6865242) (@lem6865241)). Qed.
Lemma lem6865244 : term208 = term143.
Proof. exact (TRANS (@lem6865239) (@lem6865243)). Qed.
Lemma lem6865246 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865247 : term263 = term133.
Proof. exact (@lem6865246 term11). Qed.
Lemma lem6865248 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865249 : term478 = term472.
Proof. exact (MK_COMB (@lem6865248) (@lem6865247)). Qed.
Lemma lem6865250 : term477 = term251.
Proof. exact (MK_COMB (@lem6865249) (@lem6865244)). Qed.
Lemma lem6865252 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865253 : term251 = term252.
Proof. exact (@lem6865252 (NUMERAL 0) term11). Qed.
Lemma lem6865254 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865255 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865256 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865255 h1) (fun h1 : term252 = True => @lem6865254)). Qed.
Lemma lem6865257 : term252 = True.
Proof. exact (EQ_MP (@lem6865256) (@lem6865254)). Qed.
Lemma lem6865258 : term251 = True.
Proof. exact (TRANS (@lem6865253) (@lem6865257)). Qed.
Lemma lem6865259 : term477 = True.
Proof. exact (TRANS (@lem6865250) (@lem6865258)). Qed.
Lemma lem6865260 : term474 = True.
Proof. exact (TRANS (@lem6865236) (@lem6865259)). Qed.
Lemma lem6865261 : term251 = True.
Proof. exact (TRANS (@lem6865213) (@lem6865260)). Qed.
Lemma lem6865262 : term471 = True.
Proof. exact (TRANS (@lem6865204) (@lem6865261)). Qed.
Lemma lem6865263 : True = term471.
Proof. exact (SYM (@lem6865262)). Qed.
Lemma lem6865264 : term471.
Proof. exact (EQ_MP (@lem6865263) (@lem0)). Qed.
Lemma lem6865265 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term479 _91746 _91747.
Proof. exact (conj (@lem6865264) (@lem6865201 _91746 _91747 h1)). Qed.
Lemma lem6865267 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6865268 (_91746 : int) (_91747 : int) : term481 _91746 _91747.
Proof. exact (@lem6865267 term143 (term277 _91746 _91747)). Qed.
Lemma lem6865269 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term482 _91746 _91747.
Proof. exact (@lem6865268 _91746 _91747 (@lem6865265 _91746 _91747 h1)). Qed.
Lemma lem6865270 (_91746 : int) (_91747 : int) : (term483 _91746 _91747) = (term277 _91746 _91747).
Proof. exact (@lem1982733 (term277 _91746 _91747)). Qed.
Lemma lem6865271 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6865272 (_91746 : int) (_91747 : int) : (term484 _91746 _91747) = (term279 _91746 _91747).
Proof. exact (MK_COMB (@lem6865271) (@lem6865270 _91746 _91747)). Qed.
Lemma lem6865273 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865274 (_91746 : int) (_91747 : int) : (term482 _91746 _91747) = (term280 _91746 _91747).
Proof. exact (MK_COMB (@lem6865272 _91746 _91747) (@lem6865273)). Qed.
Lemma lem6865275 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term280 _91746 _91747.
Proof. exact (EQ_MP (@lem6865274 _91746 _91747) (@lem6865269 _91746 _91747 h1)). Qed.
Lemma lem6865277 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6865278 (_91746 : int) (_91747 : int) : term486 _91746 _91747.
Proof. exact (@lem6865277 (term236 _91746 _91747)). Qed.
Lemma lem6865279 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term487 _91746 _91747.
Proof. exact (@lem6865278 _91746 _91747 (@lem6865199 _91746 _91747 h1)). Qed.
Lemma lem6865280 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term488 _91746 _91747.
Proof. exact (@lem6865279 _91746 _91747 h1 term143). Qed.
Lemma lem6865281 (_91746 : int) (_91747 : int) : (term488 _91746 _91747) = ((term489 _91746 _91747) = term133).
Proof. exact (eq_refl (term488 _91746 _91747)). Qed.
Lemma lem6865282 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : (term489 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6865281 _91746 _91747) (@lem6865280 _91746 _91747 h1)). Qed.
Lemma lem6865283 (_91746 : int) (_91747 : int) : (term489 _91746 _91747) = (term236 _91746 _91747).
Proof. exact (@lem1982733 (term236 _91746 _91747)). Qed.
Lemma lem6865284 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6865285 (_91746 : int) (_91747 : int) : (term490 _91746 _91747) = (term239 _91746 _91747).
Proof. exact (MK_COMB (@lem6865284) (@lem6865283 _91746 _91747)). Qed.
Lemma lem6865286 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865287 (_91746 : int) (_91747 : int) : ((term489 _91746 _91747) = term133) = ((term236 _91746 _91747) = term133).
Proof. exact (MK_COMB (@lem6865285 _91746 _91747) (@lem6865286)). Qed.
Lemma lem6865288 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6865287 _91746 _91747) (@lem6865282 _91746 _91747 h1)). Qed.
Lemma lem6865289 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term491 _91746 _91747.
Proof. exact (conj (@lem6865288 _91746 _91747 h1) (@lem6865275 _91746 _91747 h1)). Qed.
Lemma lem6865291 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6865292 (_91746 : int) (_91747 : int) : term493 _91746 _91747.
Proof. exact (@lem6865291 (term236 _91746 _91747) (term277 _91746 _91747)). Qed.
Lemma lem6865293 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term494 _91746 _91747.
Proof. exact (@lem6865292 _91746 _91747 (@lem6865289 _91746 _91747 h1)). Qed.
Lemma lem6865294 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = (term496 _91746 _91747).
Proof. exact (@lem1982753 (term237 _91746) (real_of_int _91746) (term299 _91747) (term237 _91747)). Qed.
Lemma lem6865295 (_91746 : int) : (term497 _91746) = (term498 _91746).
Proof. exact (@lem1982713 term199 (real_of_int _91746)). Qed.
Lemma lem6865297 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865298 : term143 = term224.
Proof. exact (@lem6865297 term11). Qed.
Lemma lem6865300 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865301 : term199 = term200.
Proof. exact (@lem6865300 term11). Qed.
Lemma lem6865302 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865303 : term499 = term500.
Proof. exact (MK_COMB (@lem6865302) (@lem6865301)). Qed.
Lemma lem6865304 : term501 = term502.
Proof. exact (MK_COMB (@lem6865303) (@lem6865298)). Qed.
Lemma lem6865305 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6865307 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865308 : term251 = term252.
Proof. exact (@lem6865307 (NUMERAL 0) term11). Qed.
Lemma lem6865309 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865310 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865311 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865310 h1) (fun h1 : term252 = True => @lem6865309)). Qed.
Lemma lem6865312 : term252 = True.
Proof. exact (EQ_MP (@lem6865311) (@lem6865309)). Qed.
Lemma lem6865313 : term251 = True.
Proof. exact (TRANS (@lem6865308) (@lem6865312)). Qed.
Lemma lem6865314 : True = term251.
Proof. exact (SYM (@lem6865313)). Qed.
Lemma lem6865315 : term251.
Proof. exact (EQ_MP (@lem6865314) (@lem0)). Qed.
Lemma lem6865316 : term504.
Proof. exact (@lem6865305 (@lem6865315)). Qed.
Lemma lem6865318 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865319 : term251 = term252.
Proof. exact (@lem6865318 (NUMERAL 0) term11). Qed.
Lemma lem6865320 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865321 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865322 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865321 h1) (fun h1 : term252 = True => @lem6865320)). Qed.
Lemma lem6865323 : term252 = True.
Proof. exact (EQ_MP (@lem6865322) (@lem6865320)). Qed.
Lemma lem6865324 : term251 = True.
Proof. exact (TRANS (@lem6865319) (@lem6865323)). Qed.
Lemma lem6865325 : True = term251.
Proof. exact (SYM (@lem6865324)). Qed.
Lemma lem6865326 : term251.
Proof. exact (EQ_MP (@lem6865325) (@lem0)). Qed.
Lemma lem6865327 : term505.
Proof. exact (@lem6865316 (@lem6865326)). Qed.
Lemma lem6865329 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865330 : term251 = term252.
Proof. exact (@lem6865329 (NUMERAL 0) term11). Qed.
Lemma lem6865331 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865332 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865333 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865332 h1) (fun h1 : term252 = True => @lem6865331)). Qed.
Lemma lem6865334 : term252 = True.
Proof. exact (EQ_MP (@lem6865333) (@lem6865331)). Qed.
Lemma lem6865335 : term251 = True.
Proof. exact (TRANS (@lem6865330) (@lem6865334)). Qed.
Lemma lem6865336 : True = term251.
Proof. exact (SYM (@lem6865335)). Qed.
Lemma lem6865337 : term251.
Proof. exact (EQ_MP (@lem6865336) (@lem0)). Qed.
Lemma lem6865338 : term506.
Proof. exact (@lem6865327 (@lem6865337)). Qed.
Lemma lem6865340 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865341 : term208 = term209.
Proof. exact (@lem6865340 term11 term11). Qed.
Lemma lem6865342 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865343 : term211 = term11.
Proof. exact (EQ_MP (@lem6865342) (@lem940073)). Qed.
Lemma lem6865344 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865345 : term209 = term143.
Proof. exact (MK_COMB (@lem6865344) (@lem6865343)). Qed.
Lemma lem6865346 : term208 = term143.
Proof. exact (TRANS (@lem6865341) (@lem6865345)). Qed.
Lemma lem6865348 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865349 : term225 = term230.
Proof. exact (@lem6865348 term11 term11). Qed.
Lemma lem6865350 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865351 : term211 = term11.
Proof. exact (EQ_MP (@lem6865350) (@lem940073)). Qed.
Lemma lem6865352 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865353 : term209 = term143.
Proof. exact (MK_COMB (@lem6865352) (@lem6865351)). Qed.
Lemma lem6865354 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865355 : term230 = term199.
Proof. exact (MK_COMB (@lem6865354) (@lem6865353)). Qed.
Lemma lem6865356 : term225 = term199.
Proof. exact (TRANS (@lem6865349) (@lem6865355)). Qed.
Lemma lem6865357 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865358 : term507 = term499.
Proof. exact (MK_COMB (@lem6865357) (@lem6865356)). Qed.
Lemma lem6865359 : term508 = term501.
Proof. exact (MK_COMB (@lem6865358) (@lem6865346)). Qed.
Lemma lem6865361 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6865362 : term501 = term133.
Proof. exact (@lem6865361 term11). Qed.
Lemma lem6865363 : term508 = term133.
Proof. exact (TRANS (@lem6865359) (@lem6865362)). Qed.
Lemma lem6865364 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865365 : term510 = term261.
Proof. exact (MK_COMB (@lem6865364) (@lem6865363)). Qed.
Lemma lem6865366 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6865367 : term511 = term263.
Proof. exact (MK_COMB (@lem6865365) (@lem6865366)). Qed.
Lemma lem6865369 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865370 : term263 = term133.
Proof. exact (@lem6865369 term11). Qed.
Lemma lem6865371 : term511 = term133.
Proof. exact (TRANS (@lem6865367) (@lem6865370)). Qed.
Lemma lem6865373 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865374 : term208 = term209.
Proof. exact (@lem6865373 term11 term11). Qed.
Lemma lem6865375 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865376 : term211 = term11.
Proof. exact (EQ_MP (@lem6865375) (@lem940073)). Qed.
Lemma lem6865377 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865378 : term209 = term143.
Proof. exact (MK_COMB (@lem6865377) (@lem6865376)). Qed.
Lemma lem6865379 : term208 = term143.
Proof. exact (TRANS (@lem6865374) (@lem6865378)). Qed.
Lemma lem6865380 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6865381 : term265 = term263.
Proof. exact (MK_COMB (@lem6865380) (@lem6865379)). Qed.
Lemma lem6865383 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865384 : term263 = term133.
Proof. exact (@lem6865383 term11). Qed.
Lemma lem6865385 : term265 = term133.
Proof. exact (TRANS (@lem6865381) (@lem6865384)). Qed.
Lemma lem6865386 : term133 = term265.
Proof. exact (SYM (@lem6865385)). Qed.
Lemma lem6865387 : term511 = term265.
Proof. exact (TRANS (@lem6865371) (@lem6865386)). Qed.
Lemma lem6865388 : term502 = term196.
Proof. exact (@lem6865338 (@lem6865387)). Qed.
Lemma lem6865389 : term501 = term196.
Proof. exact (TRANS (@lem6865304) (@lem6865388)). Qed.
Lemma lem6865391 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6865392 : term196 = term133.
Proof. exact (@lem6865391 term133). Qed.
Lemma lem6865393 : term501 = term133.
Proof. exact (TRANS (@lem6865389) (@lem6865392)). Qed.
Lemma lem6865394 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865395 : term512 = term261.
Proof. exact (MK_COMB (@lem6865394) (@lem6865393)). Qed.
Lemma lem6865396 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6865397 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6865395) (@lem6865396 _91746)). Qed.
Lemma lem6865398 (_91746 : int) : (term497 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6865295 _91746) (@lem6865397 _91746)). Qed.
Lemma lem6865399 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6865400 (_91746 : int) : (term497 _91746) = term133.
Proof. exact (TRANS (@lem6865398 _91746) (@lem6865399 _91746)). Qed.
Lemma lem6865401 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865402 (_91746 : int) : (term514 _91746) = term175.
Proof. exact (MK_COMB (@lem6865401) (@lem6865400 _91746)). Qed.
Lemma lem6865403 (_91747 : int) : (term515 _91747) = (term516 _91747).
Proof. exact (@lem1982759 (real_of_int _91747) (term237 _91747) term199). Qed.
Lemma lem6865404 (_91747 : int) : (term517 _91747) = (term498 _91747).
Proof. exact (@lem1982715 term199 (real_of_int _91747)). Qed.
Lemma lem6865406 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865407 : term143 = term224.
Proof. exact (@lem6865406 term11). Qed.
Lemma lem6865409 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865410 : term199 = term200.
Proof. exact (@lem6865409 term11). Qed.
Lemma lem6865411 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865412 : term499 = term500.
Proof. exact (MK_COMB (@lem6865411) (@lem6865410)). Qed.
Lemma lem6865413 : term501 = term502.
Proof. exact (MK_COMB (@lem6865412) (@lem6865407)). Qed.
Lemma lem6865414 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6865416 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865417 : term251 = term252.
Proof. exact (@lem6865416 (NUMERAL 0) term11). Qed.
Lemma lem6865418 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865419 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865420 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865419 h1) (fun h1 : term252 = True => @lem6865418)). Qed.
Lemma lem6865421 : term252 = True.
Proof. exact (EQ_MP (@lem6865420) (@lem6865418)). Qed.
Lemma lem6865422 : term251 = True.
Proof. exact (TRANS (@lem6865417) (@lem6865421)). Qed.
Lemma lem6865423 : True = term251.
Proof. exact (SYM (@lem6865422)). Qed.
Lemma lem6865424 : term251.
Proof. exact (EQ_MP (@lem6865423) (@lem0)). Qed.
Lemma lem6865425 : term504.
Proof. exact (@lem6865414 (@lem6865424)). Qed.
Lemma lem6865427 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865428 : term251 = term252.
Proof. exact (@lem6865427 (NUMERAL 0) term11). Qed.
Lemma lem6865429 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865430 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865431 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865430 h1) (fun h1 : term252 = True => @lem6865429)). Qed.
Lemma lem6865432 : term252 = True.
Proof. exact (EQ_MP (@lem6865431) (@lem6865429)). Qed.
Lemma lem6865433 : term251 = True.
Proof. exact (TRANS (@lem6865428) (@lem6865432)). Qed.
Lemma lem6865434 : True = term251.
Proof. exact (SYM (@lem6865433)). Qed.
Lemma lem6865435 : term251.
Proof. exact (EQ_MP (@lem6865434) (@lem0)). Qed.
Lemma lem6865436 : term505.
Proof. exact (@lem6865425 (@lem6865435)). Qed.
Lemma lem6865438 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865439 : term251 = term252.
Proof. exact (@lem6865438 (NUMERAL 0) term11). Qed.
Lemma lem6865440 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865441 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865442 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865441 h1) (fun h1 : term252 = True => @lem6865440)). Qed.
Lemma lem6865443 : term252 = True.
Proof. exact (EQ_MP (@lem6865442) (@lem6865440)). Qed.
Lemma lem6865444 : term251 = True.
Proof. exact (TRANS (@lem6865439) (@lem6865443)). Qed.
Lemma lem6865445 : True = term251.
Proof. exact (SYM (@lem6865444)). Qed.
Lemma lem6865446 : term251.
Proof. exact (EQ_MP (@lem6865445) (@lem0)). Qed.
Lemma lem6865447 : term506.
Proof. exact (@lem6865436 (@lem6865446)). Qed.
Lemma lem6865449 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865450 : term208 = term209.
Proof. exact (@lem6865449 term11 term11). Qed.
Lemma lem6865451 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865452 : term211 = term11.
Proof. exact (EQ_MP (@lem6865451) (@lem940073)). Qed.
Lemma lem6865453 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865454 : term209 = term143.
Proof. exact (MK_COMB (@lem6865453) (@lem6865452)). Qed.
Lemma lem6865455 : term208 = term143.
Proof. exact (TRANS (@lem6865450) (@lem6865454)). Qed.
Lemma lem6865457 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865458 : term225 = term230.
Proof. exact (@lem6865457 term11 term11). Qed.
Lemma lem6865459 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865460 : term211 = term11.
Proof. exact (EQ_MP (@lem6865459) (@lem940073)). Qed.
Lemma lem6865461 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865462 : term209 = term143.
Proof. exact (MK_COMB (@lem6865461) (@lem6865460)). Qed.
Lemma lem6865463 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865464 : term230 = term199.
Proof. exact (MK_COMB (@lem6865463) (@lem6865462)). Qed.
Lemma lem6865465 : term225 = term199.
Proof. exact (TRANS (@lem6865458) (@lem6865464)). Qed.
Lemma lem6865466 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865467 : term507 = term499.
Proof. exact (MK_COMB (@lem6865466) (@lem6865465)). Qed.
Lemma lem6865468 : term508 = term501.
Proof. exact (MK_COMB (@lem6865467) (@lem6865455)). Qed.
Lemma lem6865470 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6865471 : term501 = term133.
Proof. exact (@lem6865470 term11). Qed.
Lemma lem6865472 : term508 = term133.
Proof. exact (TRANS (@lem6865468) (@lem6865471)). Qed.
Lemma lem6865473 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865474 : term510 = term261.
Proof. exact (MK_COMB (@lem6865473) (@lem6865472)). Qed.
Lemma lem6865475 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6865476 : term511 = term263.
Proof. exact (MK_COMB (@lem6865474) (@lem6865475)). Qed.
Lemma lem6865478 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865479 : term263 = term133.
Proof. exact (@lem6865478 term11). Qed.
Lemma lem6865480 : term511 = term133.
Proof. exact (TRANS (@lem6865476) (@lem6865479)). Qed.
Lemma lem6865482 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865483 : term208 = term209.
Proof. exact (@lem6865482 term11 term11). Qed.
Lemma lem6865484 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865485 : term211 = term11.
Proof. exact (EQ_MP (@lem6865484) (@lem940073)). Qed.
Lemma lem6865486 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865487 : term209 = term143.
Proof. exact (MK_COMB (@lem6865486) (@lem6865485)). Qed.
Lemma lem6865488 : term208 = term143.
Proof. exact (TRANS (@lem6865483) (@lem6865487)). Qed.
Lemma lem6865489 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6865490 : term265 = term263.
Proof. exact (MK_COMB (@lem6865489) (@lem6865488)). Qed.
Lemma lem6865492 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865493 : term263 = term133.
Proof. exact (@lem6865492 term11). Qed.
Lemma lem6865494 : term265 = term133.
Proof. exact (TRANS (@lem6865490) (@lem6865493)). Qed.
Lemma lem6865495 : term133 = term265.
Proof. exact (SYM (@lem6865494)). Qed.
Lemma lem6865496 : term511 = term265.
Proof. exact (TRANS (@lem6865480) (@lem6865495)). Qed.
Lemma lem6865497 : term502 = term196.
Proof. exact (@lem6865447 (@lem6865496)). Qed.
Lemma lem6865498 : term501 = term196.
Proof. exact (TRANS (@lem6865413) (@lem6865497)). Qed.
Lemma lem6865500 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6865501 : term196 = term133.
Proof. exact (@lem6865500 term133). Qed.
Lemma lem6865502 : term501 = term133.
Proof. exact (TRANS (@lem6865498) (@lem6865501)). Qed.
Lemma lem6865503 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865504 : term512 = term261.
Proof. exact (MK_COMB (@lem6865503) (@lem6865502)). Qed.
Lemma lem6865505 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6865506 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6865504) (@lem6865505 _91747)). Qed.
Lemma lem6865507 (_91747 : int) : (term517 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6865404 _91747) (@lem6865506 _91747)). Qed.
Lemma lem6865508 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6865509 (_91747 : int) : (term517 _91747) = term133.
Proof. exact (TRANS (@lem6865507 _91747) (@lem6865508 _91747)). Qed.
Lemma lem6865510 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865511 (_91747 : int) : (term518 _91747) = term175.
Proof. exact (MK_COMB (@lem6865510) (@lem6865509 _91747)). Qed.
Lemma lem6865512 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6865513 (_91747 : int) : (term516 _91747) = term519.
Proof. exact (MK_COMB (@lem6865511 _91747) (@lem6865512)). Qed.
Lemma lem6865514 (_91747 : int) : (term515 _91747) = term519.
Proof. exact (TRANS (@lem6865403 _91747) (@lem6865513 _91747)). Qed.
Lemma lem6865515 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6865516 (_91747 : int) : (term515 _91747) = term199.
Proof. exact (TRANS (@lem6865514 _91747) (@lem6865515)). Qed.
Lemma lem6865517 (_91746 : int) (_91747 : int) : (term496 _91746 _91747) = term519.
Proof. exact (MK_COMB (@lem6865402 _91746) (@lem6865516 _91747)). Qed.
Lemma lem6865518 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = term519.
Proof. exact (TRANS (@lem6865294 _91746 _91747) (@lem6865517 _91746 _91747)). Qed.
Lemma lem6865519 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6865520 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = term199.
Proof. exact (TRANS (@lem6865518 _91746 _91747) (@lem6865519)). Qed.
Lemma lem6865521 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6865522 (_91746 : int) (_91747 : int) : (term520 _91746 _91747) = term521.
Proof. exact (MK_COMB (@lem6865521) (@lem6865520 _91746 _91747)). Qed.
Lemma lem6865523 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865524 (_91746 : int) (_91747 : int) : (term494 _91746 _91747) = term522.
Proof. exact (MK_COMB (@lem6865522 _91746 _91747) (@lem6865523)). Qed.
Lemma lem6865525 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6865524 _91746 _91747) (@lem6865293 _91746 _91747 h1)). Qed.
Lemma lem6865527 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6865528 : term522 = term523.
Proof. exact (@lem6865527 term133 term199). Qed.
Lemma lem6865530 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865531 : term199 = term200.
Proof. exact (@lem6865530 term11). Qed.
Lemma lem6865533 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865534 : term133 = term196.
Proof. exact (@lem6865533 (NUMERAL 0)). Qed.
Lemma lem6865535 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6865536 : term135 = term524.
Proof. exact (MK_COMB (@lem6865535) (@lem6865534)). Qed.
Lemma lem6865537 : term523 = term525.
Proof. exact (MK_COMB (@lem6865536) (@lem6865531)). Qed.
Lemma lem6865538 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6865540 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865541 : term251 = term252.
Proof. exact (@lem6865540 (NUMERAL 0) term11). Qed.
Lemma lem6865542 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865543 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865544 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865543 h1) (fun h1 : term252 = True => @lem6865542)). Qed.
Lemma lem6865545 : term252 = True.
Proof. exact (EQ_MP (@lem6865544) (@lem6865542)). Qed.
Lemma lem6865546 : term251 = True.
Proof. exact (TRANS (@lem6865541) (@lem6865545)). Qed.
Lemma lem6865547 : True = term251.
Proof. exact (SYM (@lem6865546)). Qed.
Lemma lem6865548 : term251.
Proof. exact (EQ_MP (@lem6865547) (@lem0)). Qed.
Lemma lem6865549 : term527.
Proof. exact (@lem6865538 (@lem6865548)). Qed.
Lemma lem6865551 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865552 : term251 = term252.
Proof. exact (@lem6865551 (NUMERAL 0) term11). Qed.
Lemma lem6865553 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865554 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865555 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865554 h1) (fun h1 : term252 = True => @lem6865553)). Qed.
Lemma lem6865556 : term252 = True.
Proof. exact (EQ_MP (@lem6865555) (@lem6865553)). Qed.
Lemma lem6865557 : term251 = True.
Proof. exact (TRANS (@lem6865552) (@lem6865556)). Qed.
Lemma lem6865558 : True = term251.
Proof. exact (SYM (@lem6865557)). Qed.
Lemma lem6865559 : term251.
Proof. exact (EQ_MP (@lem6865558) (@lem0)). Qed.
Lemma lem6865560 : term525 = term528.
Proof. exact (@lem6865549 (@lem6865559)). Qed.
Lemma lem6865562 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865563 : term225 = term230.
Proof. exact (@lem6865562 term11 term11). Qed.
Lemma lem6865564 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865565 : term211 = term11.
Proof. exact (EQ_MP (@lem6865564) (@lem940073)). Qed.
Lemma lem6865566 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865567 : term209 = term143.
Proof. exact (MK_COMB (@lem6865566) (@lem6865565)). Qed.
Lemma lem6865568 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865569 : term230 = term199.
Proof. exact (MK_COMB (@lem6865568) (@lem6865567)). Qed.
Lemma lem6865570 : term225 = term199.
Proof. exact (TRANS (@lem6865563) (@lem6865569)). Qed.
Lemma lem6865572 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865573 : term263 = term133.
Proof. exact (@lem6865572 term11). Qed.
Lemma lem6865574 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6865575 : term529 = term135.
Proof. exact (MK_COMB (@lem6865574) (@lem6865573)). Qed.
Lemma lem6865576 : term528 = term523.
Proof. exact (MK_COMB (@lem6865575) (@lem6865570)). Qed.
Lemma lem6865578 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6865579 : term523 = term532.
Proof. exact (@lem6865578 (NUMERAL 0) term11). Qed.
Lemma lem6865580 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865581 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6865582 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865581 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6865580)). Qed.
Lemma lem6865583 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6865582) (@lem6865580)). Qed.
Lemma lem6865584 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6865585 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6865586 : term533 = (and True).
Proof. exact (MK_COMB (@lem6865585) (@lem6865584)). Qed.
Lemma lem6865587 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6865586) (@lem6865583)). Qed.
Lemma lem6865589 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6865590 : term532 = False.
Proof. exact (TRANS (@lem6865587) (@lem6865589)). Qed.
Lemma lem6865591 : term523 = False.
Proof. exact (TRANS (@lem6865579) (@lem6865590)). Qed.
Lemma lem6865592 : term528 = False.
Proof. exact (TRANS (@lem6865576) (@lem6865591)). Qed.
Lemma lem6865593 : term525 = False.
Proof. exact (TRANS (@lem6865560) (@lem6865592)). Qed.
Lemma lem6865594 : term523 = False.
Proof. exact (TRANS (@lem6865537) (@lem6865593)). Qed.
Lemma lem6865595 : term522 = False.
Proof. exact (TRANS (@lem6865528) (@lem6865594)). Qed.
Lemma lem6865596 (_91746 : int) (_91747 : int) (h1 : term614 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6865595) (@lem6865525 _91746 _91747 h1)). Qed.
Lemma lem6865597 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term615 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865598 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term447 _91746 _91747.
Proof. exact (proj2 (@lem6865597 _91746 _91747 h1)). Qed.
Lemma lem6865600 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term398 _91746 _91747.
Proof. exact (proj2 (@lem6865598 _91746 _91747 h1)). Qed.
Lemma lem6865601 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term219 _91747.
Proof. exact (proj1 (@lem6865598 _91746 _91747 h1)). Qed.
Lemma lem6865602 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term346 _91746 _91747.
Proof. exact (proj2 (@lem6865600 _91746 _91747 h1)). Qed.
Lemma lem6865606 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term293 _91747.
Proof. exact (proj2 (@lem6865602 _91746 _91747 h1)). Qed.
Lemma lem6865609 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6865610 : term471 = term251.
Proof. exact (@lem6865609 term133 term143). Qed.
Lemma lem6865612 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865613 : term143 = term224.
Proof. exact (@lem6865612 term11). Qed.
Lemma lem6865615 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865616 : term133 = term196.
Proof. exact (@lem6865615 (NUMERAL 0)). Qed.
Lemma lem6865617 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865618 : term472 = term473.
Proof. exact (MK_COMB (@lem6865617) (@lem6865616)). Qed.
Lemma lem6865619 : term251 = term474.
Proof. exact (MK_COMB (@lem6865618) (@lem6865613)). Qed.
Lemma lem6865620 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6865622 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865623 : term251 = term252.
Proof. exact (@lem6865622 (NUMERAL 0) term11). Qed.
Lemma lem6865624 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865625 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865626 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865625 h1) (fun h1 : term252 = True => @lem6865624)). Qed.
Lemma lem6865627 : term252 = True.
Proof. exact (EQ_MP (@lem6865626) (@lem6865624)). Qed.
Lemma lem6865628 : term251 = True.
Proof. exact (TRANS (@lem6865623) (@lem6865627)). Qed.
Lemma lem6865629 : True = term251.
Proof. exact (SYM (@lem6865628)). Qed.
Lemma lem6865630 : term251.
Proof. exact (EQ_MP (@lem6865629) (@lem0)). Qed.
Lemma lem6865631 : term476.
Proof. exact (@lem6865620 (@lem6865630)). Qed.
Lemma lem6865633 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865634 : term251 = term252.
Proof. exact (@lem6865633 (NUMERAL 0) term11). Qed.
Lemma lem6865635 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865636 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865637 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865636 h1) (fun h1 : term252 = True => @lem6865635)). Qed.
Lemma lem6865638 : term252 = True.
Proof. exact (EQ_MP (@lem6865637) (@lem6865635)). Qed.
Lemma lem6865639 : term251 = True.
Proof. exact (TRANS (@lem6865634) (@lem6865638)). Qed.
Lemma lem6865640 : True = term251.
Proof. exact (SYM (@lem6865639)). Qed.
Lemma lem6865641 : term251.
Proof. exact (EQ_MP (@lem6865640) (@lem0)). Qed.
Lemma lem6865642 : term474 = term477.
Proof. exact (@lem6865631 (@lem6865641)). Qed.
Lemma lem6865644 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865645 : term208 = term209.
Proof. exact (@lem6865644 term11 term11). Qed.
Lemma lem6865646 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865647 : term211 = term11.
Proof. exact (EQ_MP (@lem6865646) (@lem940073)). Qed.
Lemma lem6865648 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865649 : term209 = term143.
Proof. exact (MK_COMB (@lem6865648) (@lem6865647)). Qed.
Lemma lem6865650 : term208 = term143.
Proof. exact (TRANS (@lem6865645) (@lem6865649)). Qed.
Lemma lem6865652 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865653 : term263 = term133.
Proof. exact (@lem6865652 term11). Qed.
Lemma lem6865654 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865655 : term478 = term472.
Proof. exact (MK_COMB (@lem6865654) (@lem6865653)). Qed.
Lemma lem6865656 : term477 = term251.
Proof. exact (MK_COMB (@lem6865655) (@lem6865650)). Qed.
Lemma lem6865658 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865659 : term251 = term252.
Proof. exact (@lem6865658 (NUMERAL 0) term11). Qed.
Lemma lem6865660 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865661 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865662 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865661 h1) (fun h1 : term252 = True => @lem6865660)). Qed.
Lemma lem6865663 : term252 = True.
Proof. exact (EQ_MP (@lem6865662) (@lem6865660)). Qed.
Lemma lem6865664 : term251 = True.
Proof. exact (TRANS (@lem6865659) (@lem6865663)). Qed.
Lemma lem6865665 : term477 = True.
Proof. exact (TRANS (@lem6865656) (@lem6865664)). Qed.
Lemma lem6865666 : term474 = True.
Proof. exact (TRANS (@lem6865642) (@lem6865665)). Qed.
Lemma lem6865667 : term251 = True.
Proof. exact (TRANS (@lem6865619) (@lem6865666)). Qed.
Lemma lem6865668 : term471 = True.
Proof. exact (TRANS (@lem6865610) (@lem6865667)). Qed.
Lemma lem6865669 : True = term471.
Proof. exact (SYM (@lem6865668)). Qed.
Lemma lem6865670 : term471.
Proof. exact (EQ_MP (@lem6865669) (@lem0)). Qed.
Lemma lem6865671 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term577 _91747.
Proof. exact (conj (@lem6865670) (@lem6865601 _91746 _91747 h1)). Qed.
Lemma lem6865673 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6865674 (_91747 : int) : term578 _91747.
Proof. exact (@lem6865673 term143 (real_of_int _91747)). Qed.
Lemma lem6865675 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term579 _91747.
Proof. exact (@lem6865674 _91747 (@lem6865671 _91746 _91747 h1)). Qed.
Lemma lem6865676 (_91747 : int) : (term542 _91747) = (real_of_int _91747).
Proof. exact (@lem1982733 (real_of_int _91747)). Qed.
Lemma lem6865677 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6865678 (_91747 : int) : (term580 _91747) = (term218 _91747).
Proof. exact (MK_COMB (@lem6865677) (@lem6865676 _91747)). Qed.
Lemma lem6865679 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865680 (_91747 : int) : (term579 _91747) = (term219 _91747).
Proof. exact (MK_COMB (@lem6865678 _91747) (@lem6865679)). Qed.
Lemma lem6865681 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term219 _91747.
Proof. exact (EQ_MP (@lem6865680 _91747) (@lem6865675 _91746 _91747 h1)). Qed.
Lemma lem6865683 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6865684 : term471 = term251.
Proof. exact (@lem6865683 term133 term143). Qed.
Lemma lem6865686 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865687 : term143 = term224.
Proof. exact (@lem6865686 term11). Qed.
Lemma lem6865689 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865690 : term133 = term196.
Proof. exact (@lem6865689 (NUMERAL 0)). Qed.
Lemma lem6865691 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865692 : term472 = term473.
Proof. exact (MK_COMB (@lem6865691) (@lem6865690)). Qed.
Lemma lem6865693 : term251 = term474.
Proof. exact (MK_COMB (@lem6865692) (@lem6865687)). Qed.
Lemma lem6865694 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6865696 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865697 : term251 = term252.
Proof. exact (@lem6865696 (NUMERAL 0) term11). Qed.
Lemma lem6865698 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865699 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865700 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865699 h1) (fun h1 : term252 = True => @lem6865698)). Qed.
Lemma lem6865701 : term252 = True.
Proof. exact (EQ_MP (@lem6865700) (@lem6865698)). Qed.
Lemma lem6865702 : term251 = True.
Proof. exact (TRANS (@lem6865697) (@lem6865701)). Qed.
Lemma lem6865703 : True = term251.
Proof. exact (SYM (@lem6865702)). Qed.
Lemma lem6865704 : term251.
Proof. exact (EQ_MP (@lem6865703) (@lem0)). Qed.
Lemma lem6865705 : term476.
Proof. exact (@lem6865694 (@lem6865704)). Qed.
Lemma lem6865707 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865708 : term251 = term252.
Proof. exact (@lem6865707 (NUMERAL 0) term11). Qed.
Lemma lem6865709 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865710 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865711 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865710 h1) (fun h1 : term252 = True => @lem6865709)). Qed.
Lemma lem6865712 : term252 = True.
Proof. exact (EQ_MP (@lem6865711) (@lem6865709)). Qed.
Lemma lem6865713 : term251 = True.
Proof. exact (TRANS (@lem6865708) (@lem6865712)). Qed.
Lemma lem6865714 : True = term251.
Proof. exact (SYM (@lem6865713)). Qed.
Lemma lem6865715 : term251.
Proof. exact (EQ_MP (@lem6865714) (@lem0)). Qed.
Lemma lem6865716 : term474 = term477.
Proof. exact (@lem6865705 (@lem6865715)). Qed.
Lemma lem6865718 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865719 : term208 = term209.
Proof. exact (@lem6865718 term11 term11). Qed.
Lemma lem6865720 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865721 : term211 = term11.
Proof. exact (EQ_MP (@lem6865720) (@lem940073)). Qed.
Lemma lem6865722 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865723 : term209 = term143.
Proof. exact (MK_COMB (@lem6865722) (@lem6865721)). Qed.
Lemma lem6865724 : term208 = term143.
Proof. exact (TRANS (@lem6865719) (@lem6865723)). Qed.
Lemma lem6865726 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865727 : term263 = term133.
Proof. exact (@lem6865726 term11). Qed.
Lemma lem6865728 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865729 : term478 = term472.
Proof. exact (MK_COMB (@lem6865728) (@lem6865727)). Qed.
Lemma lem6865730 : term477 = term251.
Proof. exact (MK_COMB (@lem6865729) (@lem6865724)). Qed.
Lemma lem6865732 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865733 : term251 = term252.
Proof. exact (@lem6865732 (NUMERAL 0) term11). Qed.
Lemma lem6865734 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865735 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865736 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865735 h1) (fun h1 : term252 = True => @lem6865734)). Qed.
Lemma lem6865737 : term252 = True.
Proof. exact (EQ_MP (@lem6865736) (@lem6865734)). Qed.
Lemma lem6865738 : term251 = True.
Proof. exact (TRANS (@lem6865733) (@lem6865737)). Qed.
Lemma lem6865739 : term477 = True.
Proof. exact (TRANS (@lem6865730) (@lem6865738)). Qed.
Lemma lem6865740 : term474 = True.
Proof. exact (TRANS (@lem6865716) (@lem6865739)). Qed.
Lemma lem6865741 : term251 = True.
Proof. exact (TRANS (@lem6865693) (@lem6865740)). Qed.
Lemma lem6865742 : term471 = True.
Proof. exact (TRANS (@lem6865684) (@lem6865741)). Qed.
Lemma lem6865743 : True = term471.
Proof. exact (SYM (@lem6865742)). Qed.
Lemma lem6865744 : term471.
Proof. exact (EQ_MP (@lem6865743) (@lem0)). Qed.
Lemma lem6865745 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term606 _91747.
Proof. exact (conj (@lem6865744) (@lem6865606 _91746 _91747 h1)). Qed.
Lemma lem6865747 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6865748 (_91747 : int) : term607 _91747.
Proof. exact (@lem6865747 term143 (term234 _91747)). Qed.
Lemma lem6865749 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term608 _91747.
Proof. exact (@lem6865748 _91747 (@lem6865745 _91746 _91747 h1)). Qed.
Lemma lem6865750 (_91747 : int) : (term594 _91747) = (term234 _91747).
Proof. exact (@lem1982733 (term234 _91747)). Qed.
Lemma lem6865751 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6865752 (_91747 : int) : (term609 _91747) = (term292 _91747).
Proof. exact (MK_COMB (@lem6865751) (@lem6865750 _91747)). Qed.
Lemma lem6865753 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865754 (_91747 : int) : (term608 _91747) = (term293 _91747).
Proof. exact (MK_COMB (@lem6865752 _91747) (@lem6865753)). Qed.
Lemma lem6865755 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term293 _91747.
Proof. exact (EQ_MP (@lem6865754 _91747) (@lem6865749 _91746 _91747 h1)). Qed.
Lemma lem6865756 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term616 _91747.
Proof. exact (conj (@lem6865755 _91746 _91747 h1) (@lem6865681 _91746 _91747 h1)). Qed.
Lemma lem6865758 (x : real) (y : real) : term570 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6865759 (_91747 : int) : term617 _91747.
Proof. exact (@lem6865758 (term234 _91747) (real_of_int _91747)). Qed.
Lemma lem6865760 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term598 _91747.
Proof. exact (@lem6865759 _91747 (@lem6865756 _91746 _91747 h1)). Qed.
Lemma lem6865761 (_91747 : int) : (term599 _91747) = (term574 _91747).
Proof. exact (@lem1982759 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6865762 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6865764 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865765 : term143 = term224.
Proof. exact (@lem6865764 term11). Qed.
Lemma lem6865767 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865768 : term199 = term200.
Proof. exact (@lem6865767 term11). Qed.
Lemma lem6865769 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865770 : term499 = term500.
Proof. exact (MK_COMB (@lem6865769) (@lem6865768)). Qed.
Lemma lem6865771 : term501 = term502.
Proof. exact (MK_COMB (@lem6865770) (@lem6865765)). Qed.
Lemma lem6865772 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6865774 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865775 : term251 = term252.
Proof. exact (@lem6865774 (NUMERAL 0) term11). Qed.
Lemma lem6865776 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865777 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865778 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865777 h1) (fun h1 : term252 = True => @lem6865776)). Qed.
Lemma lem6865779 : term252 = True.
Proof. exact (EQ_MP (@lem6865778) (@lem6865776)). Qed.
Lemma lem6865780 : term251 = True.
Proof. exact (TRANS (@lem6865775) (@lem6865779)). Qed.
Lemma lem6865781 : True = term251.
Proof. exact (SYM (@lem6865780)). Qed.
Lemma lem6865782 : term251.
Proof. exact (EQ_MP (@lem6865781) (@lem0)). Qed.
Lemma lem6865783 : term504.
Proof. exact (@lem6865772 (@lem6865782)). Qed.
Lemma lem6865785 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865786 : term251 = term252.
Proof. exact (@lem6865785 (NUMERAL 0) term11). Qed.
Lemma lem6865787 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865788 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865789 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865788 h1) (fun h1 : term252 = True => @lem6865787)). Qed.
Lemma lem6865790 : term252 = True.
Proof. exact (EQ_MP (@lem6865789) (@lem6865787)). Qed.
Lemma lem6865791 : term251 = True.
Proof. exact (TRANS (@lem6865786) (@lem6865790)). Qed.
Lemma lem6865792 : True = term251.
Proof. exact (SYM (@lem6865791)). Qed.
Lemma lem6865793 : term251.
Proof. exact (EQ_MP (@lem6865792) (@lem0)). Qed.
Lemma lem6865794 : term505.
Proof. exact (@lem6865783 (@lem6865793)). Qed.
Lemma lem6865796 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865797 : term251 = term252.
Proof. exact (@lem6865796 (NUMERAL 0) term11). Qed.
Lemma lem6865798 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865799 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865800 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865799 h1) (fun h1 : term252 = True => @lem6865798)). Qed.
Lemma lem6865801 : term252 = True.
Proof. exact (EQ_MP (@lem6865800) (@lem6865798)). Qed.
Lemma lem6865802 : term251 = True.
Proof. exact (TRANS (@lem6865797) (@lem6865801)). Qed.
Lemma lem6865803 : True = term251.
Proof. exact (SYM (@lem6865802)). Qed.
Lemma lem6865804 : term251.
Proof. exact (EQ_MP (@lem6865803) (@lem0)). Qed.
Lemma lem6865805 : term506.
Proof. exact (@lem6865794 (@lem6865804)). Qed.
Lemma lem6865807 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865808 : term208 = term209.
Proof. exact (@lem6865807 term11 term11). Qed.
Lemma lem6865809 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865810 : term211 = term11.
Proof. exact (EQ_MP (@lem6865809) (@lem940073)). Qed.
Lemma lem6865811 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865812 : term209 = term143.
Proof. exact (MK_COMB (@lem6865811) (@lem6865810)). Qed.
Lemma lem6865813 : term208 = term143.
Proof. exact (TRANS (@lem6865808) (@lem6865812)). Qed.
Lemma lem6865815 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865816 : term225 = term230.
Proof. exact (@lem6865815 term11 term11). Qed.
Lemma lem6865817 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865818 : term211 = term11.
Proof. exact (EQ_MP (@lem6865817) (@lem940073)). Qed.
Lemma lem6865819 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865820 : term209 = term143.
Proof. exact (MK_COMB (@lem6865819) (@lem6865818)). Qed.
Lemma lem6865821 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865822 : term230 = term199.
Proof. exact (MK_COMB (@lem6865821) (@lem6865820)). Qed.
Lemma lem6865823 : term225 = term199.
Proof. exact (TRANS (@lem6865816) (@lem6865822)). Qed.
Lemma lem6865824 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865825 : term507 = term499.
Proof. exact (MK_COMB (@lem6865824) (@lem6865823)). Qed.
Lemma lem6865826 : term508 = term501.
Proof. exact (MK_COMB (@lem6865825) (@lem6865813)). Qed.
Lemma lem6865828 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6865829 : term501 = term133.
Proof. exact (@lem6865828 term11). Qed.
Lemma lem6865830 : term508 = term133.
Proof. exact (TRANS (@lem6865826) (@lem6865829)). Qed.
Lemma lem6865831 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865832 : term510 = term261.
Proof. exact (MK_COMB (@lem6865831) (@lem6865830)). Qed.
Lemma lem6865833 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6865834 : term511 = term263.
Proof. exact (MK_COMB (@lem6865832) (@lem6865833)). Qed.
Lemma lem6865836 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865837 : term263 = term133.
Proof. exact (@lem6865836 term11). Qed.
Lemma lem6865838 : term511 = term133.
Proof. exact (TRANS (@lem6865834) (@lem6865837)). Qed.
Lemma lem6865840 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865841 : term208 = term209.
Proof. exact (@lem6865840 term11 term11). Qed.
Lemma lem6865842 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865843 : term211 = term11.
Proof. exact (EQ_MP (@lem6865842) (@lem940073)). Qed.
Lemma lem6865844 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865845 : term209 = term143.
Proof. exact (MK_COMB (@lem6865844) (@lem6865843)). Qed.
Lemma lem6865846 : term208 = term143.
Proof. exact (TRANS (@lem6865841) (@lem6865845)). Qed.
Lemma lem6865847 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6865848 : term265 = term263.
Proof. exact (MK_COMB (@lem6865847) (@lem6865846)). Qed.
Lemma lem6865850 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865851 : term263 = term133.
Proof. exact (@lem6865850 term11). Qed.
Lemma lem6865852 : term265 = term133.
Proof. exact (TRANS (@lem6865848) (@lem6865851)). Qed.
Lemma lem6865853 : term133 = term265.
Proof. exact (SYM (@lem6865852)). Qed.
Lemma lem6865854 : term511 = term265.
Proof. exact (TRANS (@lem6865838) (@lem6865853)). Qed.
Lemma lem6865855 : term502 = term196.
Proof. exact (@lem6865805 (@lem6865854)). Qed.
Lemma lem6865856 : term501 = term196.
Proof. exact (TRANS (@lem6865771) (@lem6865855)). Qed.
Lemma lem6865858 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6865859 : term196 = term133.
Proof. exact (@lem6865858 term133). Qed.
Lemma lem6865860 : term501 = term133.
Proof. exact (TRANS (@lem6865856) (@lem6865859)). Qed.
Lemma lem6865861 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6865862 : term512 = term261.
Proof. exact (MK_COMB (@lem6865861) (@lem6865860)). Qed.
Lemma lem6865863 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6865864 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6865862) (@lem6865863 _91747)). Qed.
Lemma lem6865865 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6865762 _91747) (@lem6865864 _91747)). Qed.
Lemma lem6865866 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6865867 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6865865 _91747) (@lem6865866 _91747)). Qed.
Lemma lem6865868 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6865869 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6865868) (@lem6865867 _91747)). Qed.
Lemma lem6865870 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6865871 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6865869 _91747) (@lem6865870)). Qed.
Lemma lem6865872 (_91747 : int) : (term599 _91747) = term519.
Proof. exact (TRANS (@lem6865761 _91747) (@lem6865871 _91747)). Qed.
Lemma lem6865873 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6865874 (_91747 : int) : (term599 _91747) = term199.
Proof. exact (TRANS (@lem6865872 _91747) (@lem6865873)). Qed.
Lemma lem6865875 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6865876 (_91747 : int) : (term600 _91747) = term521.
Proof. exact (MK_COMB (@lem6865875) (@lem6865874 _91747)). Qed.
Lemma lem6865877 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6865878 (_91747 : int) : (term598 _91747) = term522.
Proof. exact (MK_COMB (@lem6865876 _91747) (@lem6865877)). Qed.
Lemma lem6865879 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6865878 _91747) (@lem6865760 _91746 _91747 h1)). Qed.
Lemma lem6865881 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6865882 : term522 = term523.
Proof. exact (@lem6865881 term133 term199). Qed.
Lemma lem6865884 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6865885 : term199 = term200.
Proof. exact (@lem6865884 term11). Qed.
Lemma lem6865887 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865888 : term133 = term196.
Proof. exact (@lem6865887 (NUMERAL 0)). Qed.
Lemma lem6865889 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6865890 : term135 = term524.
Proof. exact (MK_COMB (@lem6865889) (@lem6865888)). Qed.
Lemma lem6865891 : term523 = term525.
Proof. exact (MK_COMB (@lem6865890) (@lem6865885)). Qed.
Lemma lem6865892 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6865894 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865895 : term251 = term252.
Proof. exact (@lem6865894 (NUMERAL 0) term11). Qed.
Lemma lem6865896 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865897 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865898 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865897 h1) (fun h1 : term252 = True => @lem6865896)). Qed.
Lemma lem6865899 : term252 = True.
Proof. exact (EQ_MP (@lem6865898) (@lem6865896)). Qed.
Lemma lem6865900 : term251 = True.
Proof. exact (TRANS (@lem6865895) (@lem6865899)). Qed.
Lemma lem6865901 : True = term251.
Proof. exact (SYM (@lem6865900)). Qed.
Lemma lem6865902 : term251.
Proof. exact (EQ_MP (@lem6865901) (@lem0)). Qed.
Lemma lem6865903 : term527.
Proof. exact (@lem6865892 (@lem6865902)). Qed.
Lemma lem6865905 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865906 : term251 = term252.
Proof. exact (@lem6865905 (NUMERAL 0) term11). Qed.
Lemma lem6865907 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865908 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865909 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865908 h1) (fun h1 : term252 = True => @lem6865907)). Qed.
Lemma lem6865910 : term252 = True.
Proof. exact (EQ_MP (@lem6865909) (@lem6865907)). Qed.
Lemma lem6865911 : term251 = True.
Proof. exact (TRANS (@lem6865906) (@lem6865910)). Qed.
Lemma lem6865912 : True = term251.
Proof. exact (SYM (@lem6865911)). Qed.
Lemma lem6865913 : term251.
Proof. exact (EQ_MP (@lem6865912) (@lem0)). Qed.
Lemma lem6865914 : term525 = term528.
Proof. exact (@lem6865903 (@lem6865913)). Qed.
Lemma lem6865916 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6865917 : term225 = term230.
Proof. exact (@lem6865916 term11 term11). Qed.
Lemma lem6865918 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6865919 : term211 = term11.
Proof. exact (EQ_MP (@lem6865918) (@lem940073)). Qed.
Lemma lem6865920 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6865921 : term209 = term143.
Proof. exact (MK_COMB (@lem6865920) (@lem6865919)). Qed.
Lemma lem6865922 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6865923 : term230 = term199.
Proof. exact (MK_COMB (@lem6865922) (@lem6865921)). Qed.
Lemma lem6865924 : term225 = term199.
Proof. exact (TRANS (@lem6865917) (@lem6865923)). Qed.
Lemma lem6865926 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6865927 : term263 = term133.
Proof. exact (@lem6865926 term11). Qed.
Lemma lem6865928 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6865929 : term529 = term135.
Proof. exact (MK_COMB (@lem6865928) (@lem6865927)). Qed.
Lemma lem6865930 : term528 = term523.
Proof. exact (MK_COMB (@lem6865929) (@lem6865924)). Qed.
Lemma lem6865932 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6865933 : term523 = term532.
Proof. exact (@lem6865932 (NUMERAL 0) term11). Qed.
Lemma lem6865934 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865935 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6865936 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865935 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6865934)). Qed.
Lemma lem6865937 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6865936) (@lem6865934)). Qed.
Lemma lem6865938 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6865939 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6865940 : term533 = (and True).
Proof. exact (MK_COMB (@lem6865939) (@lem6865938)). Qed.
Lemma lem6865941 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6865940) (@lem6865937)). Qed.
Lemma lem6865943 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6865944 : term532 = False.
Proof. exact (TRANS (@lem6865941) (@lem6865943)). Qed.
Lemma lem6865945 : term523 = False.
Proof. exact (TRANS (@lem6865933) (@lem6865944)). Qed.
Lemma lem6865946 : term528 = False.
Proof. exact (TRANS (@lem6865930) (@lem6865945)). Qed.
Lemma lem6865947 : term525 = False.
Proof. exact (TRANS (@lem6865914) (@lem6865946)). Qed.
Lemma lem6865948 : term523 = False.
Proof. exact (TRANS (@lem6865891) (@lem6865947)). Qed.
Lemma lem6865949 : term522 = False.
Proof. exact (TRANS (@lem6865882) (@lem6865948)). Qed.
Lemma lem6865950 (_91746 : int) (_91747 : int) (h1 : term615 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6865949) (@lem6865879 _91746 _91747 h1)). Qed.
Lemma lem6865951 (_91746 : int) (_91747 : int) (h1 : term445 _91746 _91747) : False.
Proof. exact (or_elim (@lem6865192 _91746 _91747 h1) (fun h0 : term614 _91746 _91747 => @lem6865596 _91746 _91747 h0) (fun h0 : term615 _91746 _91747 => @lem6865950 _91746 _91747 h0)). Qed.
Lemma lem6865952 (_91746 : int) (_91747 : int) (h1 : term441 _91746 _91747) : term441 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865953 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term618 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6865954 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term442 _91746 _91747.
Proof. exact (proj2 (@lem6865953 _91746 _91747 h1)). Qed.
Lemma lem6865956 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term393 _91746 _91747.
Proof. exact (proj2 (@lem6865954 _91746 _91747 h1)). Qed.
Lemma lem6865958 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term347 _91747.
Proof. exact (proj2 (@lem6865956 _91746 _91747 h1)). Qed.
Lemma lem6865960 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term293 _91747.
Proof. exact (proj2 (@lem6865958 _91746 _91747 h1)). Qed.
Lemma lem6865961 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (proj1 (@lem6865958 _91746 _91747 h1)). Qed.
Lemma lem6865963 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6865964 : term471 = term251.
Proof. exact (@lem6865963 term133 term143). Qed.
Lemma lem6865966 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865967 : term143 = term224.
Proof. exact (@lem6865966 term11). Qed.
Lemma lem6865969 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6865970 : term133 = term196.
Proof. exact (@lem6865969 (NUMERAL 0)). Qed.
Lemma lem6865971 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6865972 : term472 = term473.
Proof. exact (MK_COMB (@lem6865971) (@lem6865970)). Qed.
Lemma lem6865973 : term251 = term474.
Proof. exact (MK_COMB (@lem6865972) (@lem6865967)). Qed.
Lemma lem6865974 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6865976 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865977 : term251 = term252.
Proof. exact (@lem6865976 (NUMERAL 0) term11). Qed.
Lemma lem6865978 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865979 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865980 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865979 h1) (fun h1 : term252 = True => @lem6865978)). Qed.
Lemma lem6865981 : term252 = True.
Proof. exact (EQ_MP (@lem6865980) (@lem6865978)). Qed.
Lemma lem6865982 : term251 = True.
Proof. exact (TRANS (@lem6865977) (@lem6865981)). Qed.
Lemma lem6865983 : True = term251.
Proof. exact (SYM (@lem6865982)). Qed.
Lemma lem6865984 : term251.
Proof. exact (EQ_MP (@lem6865983) (@lem0)). Qed.
Lemma lem6865985 : term476.
Proof. exact (@lem6865974 (@lem6865984)). Qed.
Lemma lem6865987 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6865988 : term251 = term252.
Proof. exact (@lem6865987 (NUMERAL 0) term11). Qed.
Lemma lem6865989 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6865990 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6865991 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6865990 h1) (fun h1 : term252 = True => @lem6865989)). Qed.
Lemma lem6865992 : term252 = True.
Proof. exact (EQ_MP (@lem6865991) (@lem6865989)). Qed.
Lemma lem6865993 : term251 = True.
Proof. exact (TRANS (@lem6865988) (@lem6865992)). Qed.
Lemma lem6865994 : True = term251.
Proof. exact (SYM (@lem6865993)). Qed.
Lemma lem6865995 : term251.
Proof. exact (EQ_MP (@lem6865994) (@lem0)). Qed.
Lemma lem6865996 : term474 = term477.
Proof. exact (@lem6865985 (@lem6865995)). Qed.
Lemma lem6865998 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6865999 : term208 = term209.
Proof. exact (@lem6865998 term11 term11). Qed.
Lemma lem6866000 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866001 : term211 = term11.
Proof. exact (EQ_MP (@lem6866000) (@lem940073)). Qed.
Lemma lem6866002 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866003 : term209 = term143.
Proof. exact (MK_COMB (@lem6866002) (@lem6866001)). Qed.
Lemma lem6866004 : term208 = term143.
Proof. exact (TRANS (@lem6865999) (@lem6866003)). Qed.
Lemma lem6866006 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866007 : term263 = term133.
Proof. exact (@lem6866006 term11). Qed.
Lemma lem6866008 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6866009 : term478 = term472.
Proof. exact (MK_COMB (@lem6866008) (@lem6866007)). Qed.
Lemma lem6866010 : term477 = term251.
Proof. exact (MK_COMB (@lem6866009) (@lem6866004)). Qed.
Lemma lem6866012 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866013 : term251 = term252.
Proof. exact (@lem6866012 (NUMERAL 0) term11). Qed.
Lemma lem6866014 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866015 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866016 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866015 h1) (fun h1 : term252 = True => @lem6866014)). Qed.
Lemma lem6866017 : term252 = True.
Proof. exact (EQ_MP (@lem6866016) (@lem6866014)). Qed.
Lemma lem6866018 : term251 = True.
Proof. exact (TRANS (@lem6866013) (@lem6866017)). Qed.
Lemma lem6866019 : term477 = True.
Proof. exact (TRANS (@lem6866010) (@lem6866018)). Qed.
Lemma lem6866020 : term474 = True.
Proof. exact (TRANS (@lem6865996) (@lem6866019)). Qed.
Lemma lem6866021 : term251 = True.
Proof. exact (TRANS (@lem6865973) (@lem6866020)). Qed.
Lemma lem6866022 : term471 = True.
Proof. exact (TRANS (@lem6865964) (@lem6866021)). Qed.
Lemma lem6866023 : True = term471.
Proof. exact (SYM (@lem6866022)). Qed.
Lemma lem6866024 : term471.
Proof. exact (EQ_MP (@lem6866023) (@lem0)). Qed.
Lemma lem6866025 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term606 _91747.
Proof. exact (conj (@lem6866024) (@lem6865960 _91746 _91747 h1)). Qed.
Lemma lem6866027 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6866028 (_91747 : int) : term607 _91747.
Proof. exact (@lem6866027 term143 (term234 _91747)). Qed.
Lemma lem6866029 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term608 _91747.
Proof. exact (@lem6866028 _91747 (@lem6866025 _91746 _91747 h1)). Qed.
Lemma lem6866030 (_91747 : int) : (term594 _91747) = (term234 _91747).
Proof. exact (@lem1982733 (term234 _91747)). Qed.
Lemma lem6866031 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6866032 (_91747 : int) : (term609 _91747) = (term292 _91747).
Proof. exact (MK_COMB (@lem6866031) (@lem6866030 _91747)). Qed.
Lemma lem6866033 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866034 (_91747 : int) : (term608 _91747) = (term293 _91747).
Proof. exact (MK_COMB (@lem6866032 _91747) (@lem6866033)). Qed.
Lemma lem6866035 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term293 _91747.
Proof. exact (EQ_MP (@lem6866034 _91747) (@lem6866029 _91746 _91747 h1)). Qed.
Lemma lem6866037 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6866038 (_91747 : int) : term539 _91747.
Proof. exact (@lem6866037 (real_of_int _91747)). Qed.
Lemma lem6866039 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term540 _91747.
Proof. exact (@lem6866038 _91747 (@lem6865961 _91746 _91747 h1)). Qed.
Lemma lem6866040 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term541 _91747.
Proof. exact (@lem6866039 _91746 _91747 h1 term143). Qed.
Lemma lem6866041 (_91747 : int) : (term541 _91747) = ((term542 _91747) = term133).
Proof. exact (eq_refl (term541 _91747)). Qed.
Lemma lem6866042 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : (term542 _91747) = term133.
Proof. exact (EQ_MP (@lem6866041 _91747) (@lem6866040 _91746 _91747 h1)). Qed.
Lemma lem6866043 (_91747 : int) : (term542 _91747) = (real_of_int _91747).
Proof. exact (@lem1982733 (real_of_int _91747)). Qed.
Lemma lem6866044 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6866045 (_91747 : int) : (term543 _91747) = (term146 _91747).
Proof. exact (MK_COMB (@lem6866044) (@lem6866043 _91747)). Qed.
Lemma lem6866046 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866047 (_91747 : int) : ((term542 _91747) = term133) = ((real_of_int _91747) = term133).
Proof. exact (MK_COMB (@lem6866045 _91747) (@lem6866046)). Qed.
Lemma lem6866048 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (EQ_MP (@lem6866047 _91747) (@lem6866042 _91746 _91747 h1)). Qed.
Lemma lem6866049 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term347 _91747.
Proof. exact (conj (@lem6866048 _91746 _91747 h1) (@lem6866035 _91746 _91747 h1)). Qed.
Lemma lem6866051 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6866052 (_91747 : int) : term610 _91747.
Proof. exact (@lem6866051 (real_of_int _91747) (term234 _91747)). Qed.
Lemma lem6866053 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term611 _91747.
Proof. exact (@lem6866052 _91747 (@lem6866049 _91746 _91747 h1)). Qed.
Lemma lem6866054 (_91747 : int) : (term612 _91747) = (term516 _91747).
Proof. exact (@lem1982763 (real_of_int _91747) (term237 _91747) term199). Qed.
Lemma lem6866055 (_91747 : int) : (term517 _91747) = (term498 _91747).
Proof. exact (@lem1982715 term199 (real_of_int _91747)). Qed.
Lemma lem6866057 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866058 : term143 = term224.
Proof. exact (@lem6866057 term11). Qed.
Lemma lem6866060 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866061 : term199 = term200.
Proof. exact (@lem6866060 term11). Qed.
Lemma lem6866062 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866063 : term499 = term500.
Proof. exact (MK_COMB (@lem6866062) (@lem6866061)). Qed.
Lemma lem6866064 : term501 = term502.
Proof. exact (MK_COMB (@lem6866063) (@lem6866058)). Qed.
Lemma lem6866065 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6866067 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866068 : term251 = term252.
Proof. exact (@lem6866067 (NUMERAL 0) term11). Qed.
Lemma lem6866069 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866070 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866071 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866070 h1) (fun h1 : term252 = True => @lem6866069)). Qed.
Lemma lem6866072 : term252 = True.
Proof. exact (EQ_MP (@lem6866071) (@lem6866069)). Qed.
Lemma lem6866073 : term251 = True.
Proof. exact (TRANS (@lem6866068) (@lem6866072)). Qed.
Lemma lem6866074 : True = term251.
Proof. exact (SYM (@lem6866073)). Qed.
Lemma lem6866075 : term251.
Proof. exact (EQ_MP (@lem6866074) (@lem0)). Qed.
Lemma lem6866076 : term504.
Proof. exact (@lem6866065 (@lem6866075)). Qed.
Lemma lem6866078 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866079 : term251 = term252.
Proof. exact (@lem6866078 (NUMERAL 0) term11). Qed.
Lemma lem6866080 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866081 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866082 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866081 h1) (fun h1 : term252 = True => @lem6866080)). Qed.
Lemma lem6866083 : term252 = True.
Proof. exact (EQ_MP (@lem6866082) (@lem6866080)). Qed.
Lemma lem6866084 : term251 = True.
Proof. exact (TRANS (@lem6866079) (@lem6866083)). Qed.
Lemma lem6866085 : True = term251.
Proof. exact (SYM (@lem6866084)). Qed.
Lemma lem6866086 : term251.
Proof. exact (EQ_MP (@lem6866085) (@lem0)). Qed.
Lemma lem6866087 : term505.
Proof. exact (@lem6866076 (@lem6866086)). Qed.
Lemma lem6866089 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866090 : term251 = term252.
Proof. exact (@lem6866089 (NUMERAL 0) term11). Qed.
Lemma lem6866091 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866092 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866093 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866092 h1) (fun h1 : term252 = True => @lem6866091)). Qed.
Lemma lem6866094 : term252 = True.
Proof. exact (EQ_MP (@lem6866093) (@lem6866091)). Qed.
Lemma lem6866095 : term251 = True.
Proof. exact (TRANS (@lem6866090) (@lem6866094)). Qed.
Lemma lem6866096 : True = term251.
Proof. exact (SYM (@lem6866095)). Qed.
Lemma lem6866097 : term251.
Proof. exact (EQ_MP (@lem6866096) (@lem0)). Qed.
Lemma lem6866098 : term506.
Proof. exact (@lem6866087 (@lem6866097)). Qed.
Lemma lem6866100 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866101 : term208 = term209.
Proof. exact (@lem6866100 term11 term11). Qed.
Lemma lem6866102 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866103 : term211 = term11.
Proof. exact (EQ_MP (@lem6866102) (@lem940073)). Qed.
Lemma lem6866104 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866105 : term209 = term143.
Proof. exact (MK_COMB (@lem6866104) (@lem6866103)). Qed.
Lemma lem6866106 : term208 = term143.
Proof. exact (TRANS (@lem6866101) (@lem6866105)). Qed.
Lemma lem6866108 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866109 : term225 = term230.
Proof. exact (@lem6866108 term11 term11). Qed.
Lemma lem6866110 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866111 : term211 = term11.
Proof. exact (EQ_MP (@lem6866110) (@lem940073)). Qed.
Lemma lem6866112 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866113 : term209 = term143.
Proof. exact (MK_COMB (@lem6866112) (@lem6866111)). Qed.
Lemma lem6866114 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866115 : term230 = term199.
Proof. exact (MK_COMB (@lem6866114) (@lem6866113)). Qed.
Lemma lem6866116 : term225 = term199.
Proof. exact (TRANS (@lem6866109) (@lem6866115)). Qed.
Lemma lem6866117 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866118 : term507 = term499.
Proof. exact (MK_COMB (@lem6866117) (@lem6866116)). Qed.
Lemma lem6866119 : term508 = term501.
Proof. exact (MK_COMB (@lem6866118) (@lem6866106)). Qed.
Lemma lem6866121 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6866122 : term501 = term133.
Proof. exact (@lem6866121 term11). Qed.
Lemma lem6866123 : term508 = term133.
Proof. exact (TRANS (@lem6866119) (@lem6866122)). Qed.
Lemma lem6866124 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866125 : term510 = term261.
Proof. exact (MK_COMB (@lem6866124) (@lem6866123)). Qed.
Lemma lem6866126 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6866127 : term511 = term263.
Proof. exact (MK_COMB (@lem6866125) (@lem6866126)). Qed.
Lemma lem6866129 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866130 : term263 = term133.
Proof. exact (@lem6866129 term11). Qed.
Lemma lem6866131 : term511 = term133.
Proof. exact (TRANS (@lem6866127) (@lem6866130)). Qed.
Lemma lem6866133 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866134 : term208 = term209.
Proof. exact (@lem6866133 term11 term11). Qed.
Lemma lem6866135 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866136 : term211 = term11.
Proof. exact (EQ_MP (@lem6866135) (@lem940073)). Qed.
Lemma lem6866137 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866138 : term209 = term143.
Proof. exact (MK_COMB (@lem6866137) (@lem6866136)). Qed.
Lemma lem6866139 : term208 = term143.
Proof. exact (TRANS (@lem6866134) (@lem6866138)). Qed.
Lemma lem6866140 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6866141 : term265 = term263.
Proof. exact (MK_COMB (@lem6866140) (@lem6866139)). Qed.
Lemma lem6866143 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866144 : term263 = term133.
Proof. exact (@lem6866143 term11). Qed.
Lemma lem6866145 : term265 = term133.
Proof. exact (TRANS (@lem6866141) (@lem6866144)). Qed.
Lemma lem6866146 : term133 = term265.
Proof. exact (SYM (@lem6866145)). Qed.
Lemma lem6866147 : term511 = term265.
Proof. exact (TRANS (@lem6866131) (@lem6866146)). Qed.
Lemma lem6866148 : term502 = term196.
Proof. exact (@lem6866098 (@lem6866147)). Qed.
Lemma lem6866149 : term501 = term196.
Proof. exact (TRANS (@lem6866064) (@lem6866148)). Qed.
Lemma lem6866151 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6866152 : term196 = term133.
Proof. exact (@lem6866151 term133). Qed.
Lemma lem6866153 : term501 = term133.
Proof. exact (TRANS (@lem6866149) (@lem6866152)). Qed.
Lemma lem6866154 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866155 : term512 = term261.
Proof. exact (MK_COMB (@lem6866154) (@lem6866153)). Qed.
Lemma lem6866156 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6866157 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6866155) (@lem6866156 _91747)). Qed.
Lemma lem6866158 (_91747 : int) : (term517 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6866055 _91747) (@lem6866157 _91747)). Qed.
Lemma lem6866159 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6866160 (_91747 : int) : (term517 _91747) = term133.
Proof. exact (TRANS (@lem6866158 _91747) (@lem6866159 _91747)). Qed.
Lemma lem6866161 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866162 (_91747 : int) : (term518 _91747) = term175.
Proof. exact (MK_COMB (@lem6866161) (@lem6866160 _91747)). Qed.
Lemma lem6866163 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6866164 (_91747 : int) : (term516 _91747) = term519.
Proof. exact (MK_COMB (@lem6866162 _91747) (@lem6866163)). Qed.
Lemma lem6866165 (_91747 : int) : (term612 _91747) = term519.
Proof. exact (TRANS (@lem6866054 _91747) (@lem6866164 _91747)). Qed.
Lemma lem6866166 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6866167 (_91747 : int) : (term612 _91747) = term199.
Proof. exact (TRANS (@lem6866165 _91747) (@lem6866166)). Qed.
Lemma lem6866168 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6866169 (_91747 : int) : (term613 _91747) = term521.
Proof. exact (MK_COMB (@lem6866168) (@lem6866167 _91747)). Qed.
Lemma lem6866170 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866171 (_91747 : int) : (term611 _91747) = term522.
Proof. exact (MK_COMB (@lem6866169 _91747) (@lem6866170)). Qed.
Lemma lem6866172 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6866171 _91747) (@lem6866053 _91746 _91747 h1)). Qed.
Lemma lem6866174 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6866175 : term522 = term523.
Proof. exact (@lem6866174 term133 term199). Qed.
Lemma lem6866177 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866178 : term199 = term200.
Proof. exact (@lem6866177 term11). Qed.
Lemma lem6866180 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866181 : term133 = term196.
Proof. exact (@lem6866180 (NUMERAL 0)). Qed.
Lemma lem6866182 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6866183 : term135 = term524.
Proof. exact (MK_COMB (@lem6866182) (@lem6866181)). Qed.
Lemma lem6866184 : term523 = term525.
Proof. exact (MK_COMB (@lem6866183) (@lem6866178)). Qed.
Lemma lem6866185 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6866187 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866188 : term251 = term252.
Proof. exact (@lem6866187 (NUMERAL 0) term11). Qed.
Lemma lem6866189 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866190 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866191 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866190 h1) (fun h1 : term252 = True => @lem6866189)). Qed.
Lemma lem6866192 : term252 = True.
Proof. exact (EQ_MP (@lem6866191) (@lem6866189)). Qed.
Lemma lem6866193 : term251 = True.
Proof. exact (TRANS (@lem6866188) (@lem6866192)). Qed.
Lemma lem6866194 : True = term251.
Proof. exact (SYM (@lem6866193)). Qed.
Lemma lem6866195 : term251.
Proof. exact (EQ_MP (@lem6866194) (@lem0)). Qed.
Lemma lem6866196 : term527.
Proof. exact (@lem6866185 (@lem6866195)). Qed.
Lemma lem6866198 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866199 : term251 = term252.
Proof. exact (@lem6866198 (NUMERAL 0) term11). Qed.
Lemma lem6866200 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866201 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866202 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866201 h1) (fun h1 : term252 = True => @lem6866200)). Qed.
Lemma lem6866203 : term252 = True.
Proof. exact (EQ_MP (@lem6866202) (@lem6866200)). Qed.
Lemma lem6866204 : term251 = True.
Proof. exact (TRANS (@lem6866199) (@lem6866203)). Qed.
Lemma lem6866205 : True = term251.
Proof. exact (SYM (@lem6866204)). Qed.
Lemma lem6866206 : term251.
Proof. exact (EQ_MP (@lem6866205) (@lem0)). Qed.
Lemma lem6866207 : term525 = term528.
Proof. exact (@lem6866196 (@lem6866206)). Qed.
Lemma lem6866209 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866210 : term225 = term230.
Proof. exact (@lem6866209 term11 term11). Qed.
Lemma lem6866211 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866212 : term211 = term11.
Proof. exact (EQ_MP (@lem6866211) (@lem940073)). Qed.
Lemma lem6866213 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866214 : term209 = term143.
Proof. exact (MK_COMB (@lem6866213) (@lem6866212)). Qed.
Lemma lem6866215 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866216 : term230 = term199.
Proof. exact (MK_COMB (@lem6866215) (@lem6866214)). Qed.
Lemma lem6866217 : term225 = term199.
Proof. exact (TRANS (@lem6866210) (@lem6866216)). Qed.
Lemma lem6866219 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866220 : term263 = term133.
Proof. exact (@lem6866219 term11). Qed.
Lemma lem6866221 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6866222 : term529 = term135.
Proof. exact (MK_COMB (@lem6866221) (@lem6866220)). Qed.
Lemma lem6866223 : term528 = term523.
Proof. exact (MK_COMB (@lem6866222) (@lem6866217)). Qed.
Lemma lem6866225 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6866226 : term523 = term532.
Proof. exact (@lem6866225 (NUMERAL 0) term11). Qed.
Lemma lem6866227 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866228 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6866229 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866228 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6866227)). Qed.
Lemma lem6866230 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6866229) (@lem6866227)). Qed.
Lemma lem6866231 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6866232 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6866233 : term533 = (and True).
Proof. exact (MK_COMB (@lem6866232) (@lem6866231)). Qed.
Lemma lem6866234 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6866233) (@lem6866230)). Qed.
Lemma lem6866236 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6866237 : term532 = False.
Proof. exact (TRANS (@lem6866234) (@lem6866236)). Qed.
Lemma lem6866238 : term523 = False.
Proof. exact (TRANS (@lem6866226) (@lem6866237)). Qed.
Lemma lem6866239 : term528 = False.
Proof. exact (TRANS (@lem6866223) (@lem6866238)). Qed.
Lemma lem6866240 : term525 = False.
Proof. exact (TRANS (@lem6866207) (@lem6866239)). Qed.
Lemma lem6866241 : term523 = False.
Proof. exact (TRANS (@lem6866184) (@lem6866240)). Qed.
Lemma lem6866242 : term522 = False.
Proof. exact (TRANS (@lem6866175) (@lem6866241)). Qed.
Lemma lem6866243 (_91746 : int) (_91747 : int) (h1 : term618 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6866242) (@lem6866172 _91746 _91747 h1)). Qed.
Lemma lem6866244 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term619 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6866245 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term443 _91746 _91747.
Proof. exact (proj2 (@lem6866244 _91746 _91747 h1)). Qed.
Lemma lem6866247 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term394 _91746 _91747.
Proof. exact (proj2 (@lem6866245 _91746 _91747 h1)). Qed.
Lemma lem6866249 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term347 _91747.
Proof. exact (proj2 (@lem6866247 _91746 _91747 h1)). Qed.
Lemma lem6866253 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term293 _91747.
Proof. exact (proj2 (@lem6866249 _91746 _91747 h1)). Qed.
Lemma lem6866254 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (proj1 (@lem6866249 _91746 _91747 h1)). Qed.
Lemma lem6866256 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6866257 : term471 = term251.
Proof. exact (@lem6866256 term133 term143). Qed.
Lemma lem6866259 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866260 : term143 = term224.
Proof. exact (@lem6866259 term11). Qed.
Lemma lem6866262 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866263 : term133 = term196.
Proof. exact (@lem6866262 (NUMERAL 0)). Qed.
Lemma lem6866264 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6866265 : term472 = term473.
Proof. exact (MK_COMB (@lem6866264) (@lem6866263)). Qed.
Lemma lem6866266 : term251 = term474.
Proof. exact (MK_COMB (@lem6866265) (@lem6866260)). Qed.
Lemma lem6866267 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6866269 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866270 : term251 = term252.
Proof. exact (@lem6866269 (NUMERAL 0) term11). Qed.
Lemma lem6866271 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866272 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866273 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866272 h1) (fun h1 : term252 = True => @lem6866271)). Qed.
Lemma lem6866274 : term252 = True.
Proof. exact (EQ_MP (@lem6866273) (@lem6866271)). Qed.
Lemma lem6866275 : term251 = True.
Proof. exact (TRANS (@lem6866270) (@lem6866274)). Qed.
Lemma lem6866276 : True = term251.
Proof. exact (SYM (@lem6866275)). Qed.
Lemma lem6866277 : term251.
Proof. exact (EQ_MP (@lem6866276) (@lem0)). Qed.
Lemma lem6866278 : term476.
Proof. exact (@lem6866267 (@lem6866277)). Qed.
Lemma lem6866280 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866281 : term251 = term252.
Proof. exact (@lem6866280 (NUMERAL 0) term11). Qed.
Lemma lem6866282 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866283 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866284 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866283 h1) (fun h1 : term252 = True => @lem6866282)). Qed.
Lemma lem6866285 : term252 = True.
Proof. exact (EQ_MP (@lem6866284) (@lem6866282)). Qed.
Lemma lem6866286 : term251 = True.
Proof. exact (TRANS (@lem6866281) (@lem6866285)). Qed.
Lemma lem6866287 : True = term251.
Proof. exact (SYM (@lem6866286)). Qed.
Lemma lem6866288 : term251.
Proof. exact (EQ_MP (@lem6866287) (@lem0)). Qed.
Lemma lem6866289 : term474 = term477.
Proof. exact (@lem6866278 (@lem6866288)). Qed.
Lemma lem6866291 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866292 : term208 = term209.
Proof. exact (@lem6866291 term11 term11). Qed.
Lemma lem6866293 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866294 : term211 = term11.
Proof. exact (EQ_MP (@lem6866293) (@lem940073)). Qed.
Lemma lem6866295 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866296 : term209 = term143.
Proof. exact (MK_COMB (@lem6866295) (@lem6866294)). Qed.
Lemma lem6866297 : term208 = term143.
Proof. exact (TRANS (@lem6866292) (@lem6866296)). Qed.
Lemma lem6866299 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866300 : term263 = term133.
Proof. exact (@lem6866299 term11). Qed.
Lemma lem6866301 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6866302 : term478 = term472.
Proof. exact (MK_COMB (@lem6866301) (@lem6866300)). Qed.
Lemma lem6866303 : term477 = term251.
Proof. exact (MK_COMB (@lem6866302) (@lem6866297)). Qed.
Lemma lem6866305 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866306 : term251 = term252.
Proof. exact (@lem6866305 (NUMERAL 0) term11). Qed.
Lemma lem6866307 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866308 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866309 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866308 h1) (fun h1 : term252 = True => @lem6866307)). Qed.
Lemma lem6866310 : term252 = True.
Proof. exact (EQ_MP (@lem6866309) (@lem6866307)). Qed.
Lemma lem6866311 : term251 = True.
Proof. exact (TRANS (@lem6866306) (@lem6866310)). Qed.
Lemma lem6866312 : term477 = True.
Proof. exact (TRANS (@lem6866303) (@lem6866311)). Qed.
Lemma lem6866313 : term474 = True.
Proof. exact (TRANS (@lem6866289) (@lem6866312)). Qed.
Lemma lem6866314 : term251 = True.
Proof. exact (TRANS (@lem6866266) (@lem6866313)). Qed.
Lemma lem6866315 : term471 = True.
Proof. exact (TRANS (@lem6866257) (@lem6866314)). Qed.
Lemma lem6866316 : True = term471.
Proof. exact (SYM (@lem6866315)). Qed.
Lemma lem6866317 : term471.
Proof. exact (EQ_MP (@lem6866316) (@lem0)). Qed.
Lemma lem6866318 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term606 _91747.
Proof. exact (conj (@lem6866317) (@lem6866253 _91746 _91747 h1)). Qed.
Lemma lem6866320 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6866321 (_91747 : int) : term607 _91747.
Proof. exact (@lem6866320 term143 (term234 _91747)). Qed.
Lemma lem6866322 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term608 _91747.
Proof. exact (@lem6866321 _91747 (@lem6866318 _91746 _91747 h1)). Qed.
Lemma lem6866323 (_91747 : int) : (term594 _91747) = (term234 _91747).
Proof. exact (@lem1982733 (term234 _91747)). Qed.
Lemma lem6866324 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6866325 (_91747 : int) : (term609 _91747) = (term292 _91747).
Proof. exact (MK_COMB (@lem6866324) (@lem6866323 _91747)). Qed.
Lemma lem6866326 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866327 (_91747 : int) : (term608 _91747) = (term293 _91747).
Proof. exact (MK_COMB (@lem6866325 _91747) (@lem6866326)). Qed.
Lemma lem6866328 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term293 _91747.
Proof. exact (EQ_MP (@lem6866327 _91747) (@lem6866322 _91746 _91747 h1)). Qed.
Lemma lem6866330 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6866331 (_91747 : int) : term539 _91747.
Proof. exact (@lem6866330 (real_of_int _91747)). Qed.
Lemma lem6866332 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term540 _91747.
Proof. exact (@lem6866331 _91747 (@lem6866254 _91746 _91747 h1)). Qed.
Lemma lem6866333 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term541 _91747.
Proof. exact (@lem6866332 _91746 _91747 h1 term143). Qed.
Lemma lem6866334 (_91747 : int) : (term541 _91747) = ((term542 _91747) = term133).
Proof. exact (eq_refl (term541 _91747)). Qed.
Lemma lem6866335 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : (term542 _91747) = term133.
Proof. exact (EQ_MP (@lem6866334 _91747) (@lem6866333 _91746 _91747 h1)). Qed.
Lemma lem6866336 (_91747 : int) : (term542 _91747) = (real_of_int _91747).
Proof. exact (@lem1982733 (real_of_int _91747)). Qed.
Lemma lem6866337 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6866338 (_91747 : int) : (term543 _91747) = (term146 _91747).
Proof. exact (MK_COMB (@lem6866337) (@lem6866336 _91747)). Qed.
Lemma lem6866339 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866340 (_91747 : int) : ((term542 _91747) = term133) = ((real_of_int _91747) = term133).
Proof. exact (MK_COMB (@lem6866338 _91747) (@lem6866339)). Qed.
Lemma lem6866341 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (EQ_MP (@lem6866340 _91747) (@lem6866335 _91746 _91747 h1)). Qed.
Lemma lem6866342 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term347 _91747.
Proof. exact (conj (@lem6866341 _91746 _91747 h1) (@lem6866328 _91746 _91747 h1)). Qed.
Lemma lem6866344 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6866345 (_91747 : int) : term610 _91747.
Proof. exact (@lem6866344 (real_of_int _91747) (term234 _91747)). Qed.
Lemma lem6866346 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term611 _91747.
Proof. exact (@lem6866345 _91747 (@lem6866342 _91746 _91747 h1)). Qed.
Lemma lem6866347 (_91747 : int) : (term612 _91747) = (term516 _91747).
Proof. exact (@lem1982763 (real_of_int _91747) (term237 _91747) term199). Qed.
Lemma lem6866348 (_91747 : int) : (term517 _91747) = (term498 _91747).
Proof. exact (@lem1982715 term199 (real_of_int _91747)). Qed.
Lemma lem6866350 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866351 : term143 = term224.
Proof. exact (@lem6866350 term11). Qed.
Lemma lem6866353 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866354 : term199 = term200.
Proof. exact (@lem6866353 term11). Qed.
Lemma lem6866355 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866356 : term499 = term500.
Proof. exact (MK_COMB (@lem6866355) (@lem6866354)). Qed.
Lemma lem6866357 : term501 = term502.
Proof. exact (MK_COMB (@lem6866356) (@lem6866351)). Qed.
Lemma lem6866358 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6866360 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866361 : term251 = term252.
Proof. exact (@lem6866360 (NUMERAL 0) term11). Qed.
Lemma lem6866362 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866363 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866364 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866363 h1) (fun h1 : term252 = True => @lem6866362)). Qed.
Lemma lem6866365 : term252 = True.
Proof. exact (EQ_MP (@lem6866364) (@lem6866362)). Qed.
Lemma lem6866366 : term251 = True.
Proof. exact (TRANS (@lem6866361) (@lem6866365)). Qed.
Lemma lem6866367 : True = term251.
Proof. exact (SYM (@lem6866366)). Qed.
Lemma lem6866368 : term251.
Proof. exact (EQ_MP (@lem6866367) (@lem0)). Qed.
Lemma lem6866369 : term504.
Proof. exact (@lem6866358 (@lem6866368)). Qed.
Lemma lem6866371 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866372 : term251 = term252.
Proof. exact (@lem6866371 (NUMERAL 0) term11). Qed.
Lemma lem6866373 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866374 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866375 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866374 h1) (fun h1 : term252 = True => @lem6866373)). Qed.
Lemma lem6866376 : term252 = True.
Proof. exact (EQ_MP (@lem6866375) (@lem6866373)). Qed.
Lemma lem6866377 : term251 = True.
Proof. exact (TRANS (@lem6866372) (@lem6866376)). Qed.
Lemma lem6866378 : True = term251.
Proof. exact (SYM (@lem6866377)). Qed.
Lemma lem6866379 : term251.
Proof. exact (EQ_MP (@lem6866378) (@lem0)). Qed.
Lemma lem6866380 : term505.
Proof. exact (@lem6866369 (@lem6866379)). Qed.
Lemma lem6866382 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866383 : term251 = term252.
Proof. exact (@lem6866382 (NUMERAL 0) term11). Qed.
Lemma lem6866384 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866385 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866386 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866385 h1) (fun h1 : term252 = True => @lem6866384)). Qed.
Lemma lem6866387 : term252 = True.
Proof. exact (EQ_MP (@lem6866386) (@lem6866384)). Qed.
Lemma lem6866388 : term251 = True.
Proof. exact (TRANS (@lem6866383) (@lem6866387)). Qed.
Lemma lem6866389 : True = term251.
Proof. exact (SYM (@lem6866388)). Qed.
Lemma lem6866390 : term251.
Proof. exact (EQ_MP (@lem6866389) (@lem0)). Qed.
Lemma lem6866391 : term506.
Proof. exact (@lem6866380 (@lem6866390)). Qed.
Lemma lem6866393 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866394 : term208 = term209.
Proof. exact (@lem6866393 term11 term11). Qed.
Lemma lem6866395 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866396 : term211 = term11.
Proof. exact (EQ_MP (@lem6866395) (@lem940073)). Qed.
Lemma lem6866397 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866398 : term209 = term143.
Proof. exact (MK_COMB (@lem6866397) (@lem6866396)). Qed.
Lemma lem6866399 : term208 = term143.
Proof. exact (TRANS (@lem6866394) (@lem6866398)). Qed.
Lemma lem6866401 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866402 : term225 = term230.
Proof. exact (@lem6866401 term11 term11). Qed.
Lemma lem6866403 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866404 : term211 = term11.
Proof. exact (EQ_MP (@lem6866403) (@lem940073)). Qed.
Lemma lem6866405 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866406 : term209 = term143.
Proof. exact (MK_COMB (@lem6866405) (@lem6866404)). Qed.
Lemma lem6866407 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866408 : term230 = term199.
Proof. exact (MK_COMB (@lem6866407) (@lem6866406)). Qed.
Lemma lem6866409 : term225 = term199.
Proof. exact (TRANS (@lem6866402) (@lem6866408)). Qed.
Lemma lem6866410 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866411 : term507 = term499.
Proof. exact (MK_COMB (@lem6866410) (@lem6866409)). Qed.
Lemma lem6866412 : term508 = term501.
Proof. exact (MK_COMB (@lem6866411) (@lem6866399)). Qed.
Lemma lem6866414 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6866415 : term501 = term133.
Proof. exact (@lem6866414 term11). Qed.
Lemma lem6866416 : term508 = term133.
Proof. exact (TRANS (@lem6866412) (@lem6866415)). Qed.
Lemma lem6866417 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866418 : term510 = term261.
Proof. exact (MK_COMB (@lem6866417) (@lem6866416)). Qed.
Lemma lem6866419 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6866420 : term511 = term263.
Proof. exact (MK_COMB (@lem6866418) (@lem6866419)). Qed.
Lemma lem6866422 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866423 : term263 = term133.
Proof. exact (@lem6866422 term11). Qed.
Lemma lem6866424 : term511 = term133.
Proof. exact (TRANS (@lem6866420) (@lem6866423)). Qed.
Lemma lem6866426 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866427 : term208 = term209.
Proof. exact (@lem6866426 term11 term11). Qed.
Lemma lem6866428 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866429 : term211 = term11.
Proof. exact (EQ_MP (@lem6866428) (@lem940073)). Qed.
Lemma lem6866430 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866431 : term209 = term143.
Proof. exact (MK_COMB (@lem6866430) (@lem6866429)). Qed.
Lemma lem6866432 : term208 = term143.
Proof. exact (TRANS (@lem6866427) (@lem6866431)). Qed.
Lemma lem6866433 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6866434 : term265 = term263.
Proof. exact (MK_COMB (@lem6866433) (@lem6866432)). Qed.
Lemma lem6866436 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866437 : term263 = term133.
Proof. exact (@lem6866436 term11). Qed.
Lemma lem6866438 : term265 = term133.
Proof. exact (TRANS (@lem6866434) (@lem6866437)). Qed.
Lemma lem6866439 : term133 = term265.
Proof. exact (SYM (@lem6866438)). Qed.
Lemma lem6866440 : term511 = term265.
Proof. exact (TRANS (@lem6866424) (@lem6866439)). Qed.
Lemma lem6866441 : term502 = term196.
Proof. exact (@lem6866391 (@lem6866440)). Qed.
Lemma lem6866442 : term501 = term196.
Proof. exact (TRANS (@lem6866357) (@lem6866441)). Qed.
Lemma lem6866444 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6866445 : term196 = term133.
Proof. exact (@lem6866444 term133). Qed.
Lemma lem6866446 : term501 = term133.
Proof. exact (TRANS (@lem6866442) (@lem6866445)). Qed.
Lemma lem6866447 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866448 : term512 = term261.
Proof. exact (MK_COMB (@lem6866447) (@lem6866446)). Qed.
Lemma lem6866449 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6866450 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6866448) (@lem6866449 _91747)). Qed.
Lemma lem6866451 (_91747 : int) : (term517 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6866348 _91747) (@lem6866450 _91747)). Qed.
Lemma lem6866452 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6866453 (_91747 : int) : (term517 _91747) = term133.
Proof. exact (TRANS (@lem6866451 _91747) (@lem6866452 _91747)). Qed.
Lemma lem6866454 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866455 (_91747 : int) : (term518 _91747) = term175.
Proof. exact (MK_COMB (@lem6866454) (@lem6866453 _91747)). Qed.
Lemma lem6866456 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6866457 (_91747 : int) : (term516 _91747) = term519.
Proof. exact (MK_COMB (@lem6866455 _91747) (@lem6866456)). Qed.
Lemma lem6866458 (_91747 : int) : (term612 _91747) = term519.
Proof. exact (TRANS (@lem6866347 _91747) (@lem6866457 _91747)). Qed.
Lemma lem6866459 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6866460 (_91747 : int) : (term612 _91747) = term199.
Proof. exact (TRANS (@lem6866458 _91747) (@lem6866459)). Qed.
Lemma lem6866461 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6866462 (_91747 : int) : (term613 _91747) = term521.
Proof. exact (MK_COMB (@lem6866461) (@lem6866460 _91747)). Qed.
Lemma lem6866463 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866464 (_91747 : int) : (term611 _91747) = term522.
Proof. exact (MK_COMB (@lem6866462 _91747) (@lem6866463)). Qed.
Lemma lem6866465 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6866464 _91747) (@lem6866346 _91746 _91747 h1)). Qed.
Lemma lem6866467 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6866468 : term522 = term523.
Proof. exact (@lem6866467 term133 term199). Qed.
Lemma lem6866470 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866471 : term199 = term200.
Proof. exact (@lem6866470 term11). Qed.
Lemma lem6866473 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866474 : term133 = term196.
Proof. exact (@lem6866473 (NUMERAL 0)). Qed.
Lemma lem6866475 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6866476 : term135 = term524.
Proof. exact (MK_COMB (@lem6866475) (@lem6866474)). Qed.
Lemma lem6866477 : term523 = term525.
Proof. exact (MK_COMB (@lem6866476) (@lem6866471)). Qed.
Lemma lem6866478 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6866480 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866481 : term251 = term252.
Proof. exact (@lem6866480 (NUMERAL 0) term11). Qed.
Lemma lem6866482 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866483 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866484 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866483 h1) (fun h1 : term252 = True => @lem6866482)). Qed.
Lemma lem6866485 : term252 = True.
Proof. exact (EQ_MP (@lem6866484) (@lem6866482)). Qed.
Lemma lem6866486 : term251 = True.
Proof. exact (TRANS (@lem6866481) (@lem6866485)). Qed.
Lemma lem6866487 : True = term251.
Proof. exact (SYM (@lem6866486)). Qed.
Lemma lem6866488 : term251.
Proof. exact (EQ_MP (@lem6866487) (@lem0)). Qed.
Lemma lem6866489 : term527.
Proof. exact (@lem6866478 (@lem6866488)). Qed.
Lemma lem6866491 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866492 : term251 = term252.
Proof. exact (@lem6866491 (NUMERAL 0) term11). Qed.
Lemma lem6866493 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866494 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866495 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866494 h1) (fun h1 : term252 = True => @lem6866493)). Qed.
Lemma lem6866496 : term252 = True.
Proof. exact (EQ_MP (@lem6866495) (@lem6866493)). Qed.
Lemma lem6866497 : term251 = True.
Proof. exact (TRANS (@lem6866492) (@lem6866496)). Qed.
Lemma lem6866498 : True = term251.
Proof. exact (SYM (@lem6866497)). Qed.
Lemma lem6866499 : term251.
Proof. exact (EQ_MP (@lem6866498) (@lem0)). Qed.
Lemma lem6866500 : term525 = term528.
Proof. exact (@lem6866489 (@lem6866499)). Qed.
Lemma lem6866502 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866503 : term225 = term230.
Proof. exact (@lem6866502 term11 term11). Qed.
Lemma lem6866504 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866505 : term211 = term11.
Proof. exact (EQ_MP (@lem6866504) (@lem940073)). Qed.
Lemma lem6866506 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866507 : term209 = term143.
Proof. exact (MK_COMB (@lem6866506) (@lem6866505)). Qed.
Lemma lem6866508 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866509 : term230 = term199.
Proof. exact (MK_COMB (@lem6866508) (@lem6866507)). Qed.
Lemma lem6866510 : term225 = term199.
Proof. exact (TRANS (@lem6866503) (@lem6866509)). Qed.
Lemma lem6866512 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866513 : term263 = term133.
Proof. exact (@lem6866512 term11). Qed.
Lemma lem6866514 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6866515 : term529 = term135.
Proof. exact (MK_COMB (@lem6866514) (@lem6866513)). Qed.
Lemma lem6866516 : term528 = term523.
Proof. exact (MK_COMB (@lem6866515) (@lem6866510)). Qed.
Lemma lem6866518 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6866519 : term523 = term532.
Proof. exact (@lem6866518 (NUMERAL 0) term11). Qed.
Lemma lem6866520 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866521 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6866522 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866521 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6866520)). Qed.
Lemma lem6866523 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6866522) (@lem6866520)). Qed.
Lemma lem6866524 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6866525 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6866526 : term533 = (and True).
Proof. exact (MK_COMB (@lem6866525) (@lem6866524)). Qed.
Lemma lem6866527 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6866526) (@lem6866523)). Qed.
Lemma lem6866529 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6866530 : term532 = False.
Proof. exact (TRANS (@lem6866527) (@lem6866529)). Qed.
Lemma lem6866531 : term523 = False.
Proof. exact (TRANS (@lem6866519) (@lem6866530)). Qed.
Lemma lem6866532 : term528 = False.
Proof. exact (TRANS (@lem6866516) (@lem6866531)). Qed.
Lemma lem6866533 : term525 = False.
Proof. exact (TRANS (@lem6866500) (@lem6866532)). Qed.
Lemma lem6866534 : term523 = False.
Proof. exact (TRANS (@lem6866477) (@lem6866533)). Qed.
Lemma lem6866535 : term522 = False.
Proof. exact (TRANS (@lem6866468) (@lem6866534)). Qed.
Lemma lem6866536 (_91746 : int) (_91747 : int) (h1 : term619 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6866535) (@lem6866465 _91746 _91747 h1)). Qed.
Lemma lem6866537 (_91746 : int) (_91747 : int) (h1 : term441 _91746 _91747) : False.
Proof. exact (or_elim (@lem6865952 _91746 _91747 h1) (fun h0 : term618 _91746 _91747 => @lem6866243 _91746 _91747 h0) (fun h0 : term619 _91746 _91747 => @lem6866536 _91746 _91747 h0)). Qed.
Lemma lem6866538 (_91746 : int) (_91747 : int) (h1 : term450 _91746 _91747) : False.
Proof. exact (or_elim (@lem6865191 _91746 _91747 h1) (fun h0 : term445 _91746 _91747 => @lem6865951 _91746 _91747 h0) (fun h0 : term441 _91746 _91747 => @lem6866537 _91746 _91747 h0)). Qed.
Lemma lem6866539 (_91746 : int) (_91747 : int) (h1 : term437 _91746 _91747) : term437 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6866540 (_91746 : int) (_91747 : int) (h1 : term432 _91746 _91747) : term432 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6866541 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term620 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6866542 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term433 _91746 _91747.
Proof. exact (proj2 (@lem6866541 _91746 _91747 h1)). Qed.
Lemma lem6866544 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term384 _91746 _91747.
Proof. exact (proj2 (@lem6866542 _91746 _91747 h1)). Qed.
Lemma lem6866546 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term335 _91746 _91747.
Proof. exact (proj2 (@lem6866544 _91746 _91747 h1)). Qed.
Lemma lem6866547 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (proj1 (@lem6866544 _91746 _91747 h1)). Qed.
Lemma lem6866549 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term280 _91746 _91747.
Proof. exact (proj1 (@lem6866546 _91746 _91747 h1)). Qed.
Lemma lem6866551 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6866552 : term471 = term251.
Proof. exact (@lem6866551 term133 term143). Qed.
Lemma lem6866554 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866555 : term143 = term224.
Proof. exact (@lem6866554 term11). Qed.
Lemma lem6866557 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866558 : term133 = term196.
Proof. exact (@lem6866557 (NUMERAL 0)). Qed.
Lemma lem6866559 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6866560 : term472 = term473.
Proof. exact (MK_COMB (@lem6866559) (@lem6866558)). Qed.
Lemma lem6866561 : term251 = term474.
Proof. exact (MK_COMB (@lem6866560) (@lem6866555)). Qed.
Lemma lem6866562 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6866564 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866565 : term251 = term252.
Proof. exact (@lem6866564 (NUMERAL 0) term11). Qed.
Lemma lem6866566 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866567 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866568 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866567 h1) (fun h1 : term252 = True => @lem6866566)). Qed.
Lemma lem6866569 : term252 = True.
Proof. exact (EQ_MP (@lem6866568) (@lem6866566)). Qed.
Lemma lem6866570 : term251 = True.
Proof. exact (TRANS (@lem6866565) (@lem6866569)). Qed.
Lemma lem6866571 : True = term251.
Proof. exact (SYM (@lem6866570)). Qed.
Lemma lem6866572 : term251.
Proof. exact (EQ_MP (@lem6866571) (@lem0)). Qed.
Lemma lem6866573 : term476.
Proof. exact (@lem6866562 (@lem6866572)). Qed.
Lemma lem6866575 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866576 : term251 = term252.
Proof. exact (@lem6866575 (NUMERAL 0) term11). Qed.
Lemma lem6866577 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866578 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866579 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866578 h1) (fun h1 : term252 = True => @lem6866577)). Qed.
Lemma lem6866580 : term252 = True.
Proof. exact (EQ_MP (@lem6866579) (@lem6866577)). Qed.
Lemma lem6866581 : term251 = True.
Proof. exact (TRANS (@lem6866576) (@lem6866580)). Qed.
Lemma lem6866582 : True = term251.
Proof. exact (SYM (@lem6866581)). Qed.
Lemma lem6866583 : term251.
Proof. exact (EQ_MP (@lem6866582) (@lem0)). Qed.
Lemma lem6866584 : term474 = term477.
Proof. exact (@lem6866573 (@lem6866583)). Qed.
Lemma lem6866586 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866587 : term208 = term209.
Proof. exact (@lem6866586 term11 term11). Qed.
Lemma lem6866588 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866589 : term211 = term11.
Proof. exact (EQ_MP (@lem6866588) (@lem940073)). Qed.
Lemma lem6866590 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866591 : term209 = term143.
Proof. exact (MK_COMB (@lem6866590) (@lem6866589)). Qed.
Lemma lem6866592 : term208 = term143.
Proof. exact (TRANS (@lem6866587) (@lem6866591)). Qed.
Lemma lem6866594 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866595 : term263 = term133.
Proof. exact (@lem6866594 term11). Qed.
Lemma lem6866596 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6866597 : term478 = term472.
Proof. exact (MK_COMB (@lem6866596) (@lem6866595)). Qed.
Lemma lem6866598 : term477 = term251.
Proof. exact (MK_COMB (@lem6866597) (@lem6866592)). Qed.
Lemma lem6866600 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866601 : term251 = term252.
Proof. exact (@lem6866600 (NUMERAL 0) term11). Qed.
Lemma lem6866602 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866603 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866604 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866603 h1) (fun h1 : term252 = True => @lem6866602)). Qed.
Lemma lem6866605 : term252 = True.
Proof. exact (EQ_MP (@lem6866604) (@lem6866602)). Qed.
Lemma lem6866606 : term251 = True.
Proof. exact (TRANS (@lem6866601) (@lem6866605)). Qed.
Lemma lem6866607 : term477 = True.
Proof. exact (TRANS (@lem6866598) (@lem6866606)). Qed.
Lemma lem6866608 : term474 = True.
Proof. exact (TRANS (@lem6866584) (@lem6866607)). Qed.
Lemma lem6866609 : term251 = True.
Proof. exact (TRANS (@lem6866561) (@lem6866608)). Qed.
Lemma lem6866610 : term471 = True.
Proof. exact (TRANS (@lem6866552) (@lem6866609)). Qed.
Lemma lem6866611 : True = term471.
Proof. exact (SYM (@lem6866610)). Qed.
Lemma lem6866612 : term471.
Proof. exact (EQ_MP (@lem6866611) (@lem0)). Qed.
Lemma lem6866613 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term479 _91746 _91747.
Proof. exact (conj (@lem6866612) (@lem6866549 _91746 _91747 h1)). Qed.
Lemma lem6866615 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6866616 (_91746 : int) (_91747 : int) : term481 _91746 _91747.
Proof. exact (@lem6866615 term143 (term277 _91746 _91747)). Qed.
Lemma lem6866617 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term482 _91746 _91747.
Proof. exact (@lem6866616 _91746 _91747 (@lem6866613 _91746 _91747 h1)). Qed.
Lemma lem6866618 (_91746 : int) (_91747 : int) : (term483 _91746 _91747) = (term277 _91746 _91747).
Proof. exact (@lem1982733 (term277 _91746 _91747)). Qed.
Lemma lem6866619 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6866620 (_91746 : int) (_91747 : int) : (term484 _91746 _91747) = (term279 _91746 _91747).
Proof. exact (MK_COMB (@lem6866619) (@lem6866618 _91746 _91747)). Qed.
Lemma lem6866621 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866622 (_91746 : int) (_91747 : int) : (term482 _91746 _91747) = (term280 _91746 _91747).
Proof. exact (MK_COMB (@lem6866620 _91746 _91747) (@lem6866621)). Qed.
Lemma lem6866623 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term280 _91746 _91747.
Proof. exact (EQ_MP (@lem6866622 _91746 _91747) (@lem6866617 _91746 _91747 h1)). Qed.
Lemma lem6866625 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6866626 (_91746 : int) (_91747 : int) : term486 _91746 _91747.
Proof. exact (@lem6866625 (term236 _91746 _91747)). Qed.
Lemma lem6866627 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term487 _91746 _91747.
Proof. exact (@lem6866626 _91746 _91747 (@lem6866547 _91746 _91747 h1)). Qed.
Lemma lem6866628 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term488 _91746 _91747.
Proof. exact (@lem6866627 _91746 _91747 h1 term143). Qed.
Lemma lem6866629 (_91746 : int) (_91747 : int) : (term488 _91746 _91747) = ((term489 _91746 _91747) = term133).
Proof. exact (eq_refl (term488 _91746 _91747)). Qed.
Lemma lem6866630 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : (term489 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6866629 _91746 _91747) (@lem6866628 _91746 _91747 h1)). Qed.
Lemma lem6866631 (_91746 : int) (_91747 : int) : (term489 _91746 _91747) = (term236 _91746 _91747).
Proof. exact (@lem1982733 (term236 _91746 _91747)). Qed.
Lemma lem6866632 : (@eq real) = (@eq real).
Proof. exact (eq_refl (@eq real)). Qed.
Lemma lem6866633 (_91746 : int) (_91747 : int) : (term490 _91746 _91747) = (term239 _91746 _91747).
Proof. exact (MK_COMB (@lem6866632) (@lem6866631 _91746 _91747)). Qed.
Lemma lem6866634 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866635 (_91746 : int) (_91747 : int) : ((term489 _91746 _91747) = term133) = ((term236 _91746 _91747) = term133).
Proof. exact (MK_COMB (@lem6866633 _91746 _91747) (@lem6866634)). Qed.
Lemma lem6866636 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : (term236 _91746 _91747) = term133.
Proof. exact (EQ_MP (@lem6866635 _91746 _91747) (@lem6866630 _91746 _91747 h1)). Qed.
Lemma lem6866637 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term491 _91746 _91747.
Proof. exact (conj (@lem6866636 _91746 _91747 h1) (@lem6866623 _91746 _91747 h1)). Qed.
Lemma lem6866639 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6866640 (_91746 : int) (_91747 : int) : term493 _91746 _91747.
Proof. exact (@lem6866639 (term236 _91746 _91747) (term277 _91746 _91747)). Qed.
Lemma lem6866641 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term494 _91746 _91747.
Proof. exact (@lem6866640 _91746 _91747 (@lem6866637 _91746 _91747 h1)). Qed.
Lemma lem6866642 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = (term496 _91746 _91747).
Proof. exact (@lem1982753 (term237 _91746) (real_of_int _91746) (term299 _91747) (term237 _91747)). Qed.
Lemma lem6866643 (_91746 : int) : (term497 _91746) = (term498 _91746).
Proof. exact (@lem1982713 term199 (real_of_int _91746)). Qed.
Lemma lem6866645 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866646 : term143 = term224.
Proof. exact (@lem6866645 term11). Qed.
Lemma lem6866648 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866649 : term199 = term200.
Proof. exact (@lem6866648 term11). Qed.
Lemma lem6866650 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866651 : term499 = term500.
Proof. exact (MK_COMB (@lem6866650) (@lem6866649)). Qed.
Lemma lem6866652 : term501 = term502.
Proof. exact (MK_COMB (@lem6866651) (@lem6866646)). Qed.
Lemma lem6866653 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6866655 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866656 : term251 = term252.
Proof. exact (@lem6866655 (NUMERAL 0) term11). Qed.
Lemma lem6866657 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866658 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866659 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866658 h1) (fun h1 : term252 = True => @lem6866657)). Qed.
Lemma lem6866660 : term252 = True.
Proof. exact (EQ_MP (@lem6866659) (@lem6866657)). Qed.
Lemma lem6866661 : term251 = True.
Proof. exact (TRANS (@lem6866656) (@lem6866660)). Qed.
Lemma lem6866662 : True = term251.
Proof. exact (SYM (@lem6866661)). Qed.
Lemma lem6866663 : term251.
Proof. exact (EQ_MP (@lem6866662) (@lem0)). Qed.
Lemma lem6866664 : term504.
Proof. exact (@lem6866653 (@lem6866663)). Qed.
Lemma lem6866666 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866667 : term251 = term252.
Proof. exact (@lem6866666 (NUMERAL 0) term11). Qed.
Lemma lem6866668 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866669 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866670 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866669 h1) (fun h1 : term252 = True => @lem6866668)). Qed.
Lemma lem6866671 : term252 = True.
Proof. exact (EQ_MP (@lem6866670) (@lem6866668)). Qed.
Lemma lem6866672 : term251 = True.
Proof. exact (TRANS (@lem6866667) (@lem6866671)). Qed.
Lemma lem6866673 : True = term251.
Proof. exact (SYM (@lem6866672)). Qed.
Lemma lem6866674 : term251.
Proof. exact (EQ_MP (@lem6866673) (@lem0)). Qed.
Lemma lem6866675 : term505.
Proof. exact (@lem6866664 (@lem6866674)). Qed.
Lemma lem6866677 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866678 : term251 = term252.
Proof. exact (@lem6866677 (NUMERAL 0) term11). Qed.
Lemma lem6866679 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866680 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866681 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866680 h1) (fun h1 : term252 = True => @lem6866679)). Qed.
Lemma lem6866682 : term252 = True.
Proof. exact (EQ_MP (@lem6866681) (@lem6866679)). Qed.
Lemma lem6866683 : term251 = True.
Proof. exact (TRANS (@lem6866678) (@lem6866682)). Qed.
Lemma lem6866684 : True = term251.
Proof. exact (SYM (@lem6866683)). Qed.
Lemma lem6866685 : term251.
Proof. exact (EQ_MP (@lem6866684) (@lem0)). Qed.
Lemma lem6866686 : term506.
Proof. exact (@lem6866675 (@lem6866685)). Qed.
Lemma lem6866688 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866689 : term208 = term209.
Proof. exact (@lem6866688 term11 term11). Qed.
Lemma lem6866690 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866691 : term211 = term11.
Proof. exact (EQ_MP (@lem6866690) (@lem940073)). Qed.
Lemma lem6866692 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866693 : term209 = term143.
Proof. exact (MK_COMB (@lem6866692) (@lem6866691)). Qed.
Lemma lem6866694 : term208 = term143.
Proof. exact (TRANS (@lem6866689) (@lem6866693)). Qed.
Lemma lem6866696 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866697 : term225 = term230.
Proof. exact (@lem6866696 term11 term11). Qed.
Lemma lem6866698 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866699 : term211 = term11.
Proof. exact (EQ_MP (@lem6866698) (@lem940073)). Qed.
Lemma lem6866700 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866701 : term209 = term143.
Proof. exact (MK_COMB (@lem6866700) (@lem6866699)). Qed.
Lemma lem6866702 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866703 : term230 = term199.
Proof. exact (MK_COMB (@lem6866702) (@lem6866701)). Qed.
Lemma lem6866704 : term225 = term199.
Proof. exact (TRANS (@lem6866697) (@lem6866703)). Qed.
Lemma lem6866705 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866706 : term507 = term499.
Proof. exact (MK_COMB (@lem6866705) (@lem6866704)). Qed.
Lemma lem6866707 : term508 = term501.
Proof. exact (MK_COMB (@lem6866706) (@lem6866694)). Qed.
Lemma lem6866709 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6866710 : term501 = term133.
Proof. exact (@lem6866709 term11). Qed.
Lemma lem6866711 : term508 = term133.
Proof. exact (TRANS (@lem6866707) (@lem6866710)). Qed.
Lemma lem6866712 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866713 : term510 = term261.
Proof. exact (MK_COMB (@lem6866712) (@lem6866711)). Qed.
Lemma lem6866714 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6866715 : term511 = term263.
Proof. exact (MK_COMB (@lem6866713) (@lem6866714)). Qed.
Lemma lem6866717 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866718 : term263 = term133.
Proof. exact (@lem6866717 term11). Qed.
Lemma lem6866719 : term511 = term133.
Proof. exact (TRANS (@lem6866715) (@lem6866718)). Qed.
Lemma lem6866721 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866722 : term208 = term209.
Proof. exact (@lem6866721 term11 term11). Qed.
Lemma lem6866723 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866724 : term211 = term11.
Proof. exact (EQ_MP (@lem6866723) (@lem940073)). Qed.
Lemma lem6866725 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866726 : term209 = term143.
Proof. exact (MK_COMB (@lem6866725) (@lem6866724)). Qed.
Lemma lem6866727 : term208 = term143.
Proof. exact (TRANS (@lem6866722) (@lem6866726)). Qed.
Lemma lem6866728 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6866729 : term265 = term263.
Proof. exact (MK_COMB (@lem6866728) (@lem6866727)). Qed.
Lemma lem6866731 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866732 : term263 = term133.
Proof. exact (@lem6866731 term11). Qed.
Lemma lem6866733 : term265 = term133.
Proof. exact (TRANS (@lem6866729) (@lem6866732)). Qed.
Lemma lem6866734 : term133 = term265.
Proof. exact (SYM (@lem6866733)). Qed.
Lemma lem6866735 : term511 = term265.
Proof. exact (TRANS (@lem6866719) (@lem6866734)). Qed.
Lemma lem6866736 : term502 = term196.
Proof. exact (@lem6866686 (@lem6866735)). Qed.
Lemma lem6866737 : term501 = term196.
Proof. exact (TRANS (@lem6866652) (@lem6866736)). Qed.
Lemma lem6866739 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6866740 : term196 = term133.
Proof. exact (@lem6866739 term133). Qed.
Lemma lem6866741 : term501 = term133.
Proof. exact (TRANS (@lem6866737) (@lem6866740)). Qed.
Lemma lem6866742 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866743 : term512 = term261.
Proof. exact (MK_COMB (@lem6866742) (@lem6866741)). Qed.
Lemma lem6866744 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6866745 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6866743) (@lem6866744 _91746)). Qed.
Lemma lem6866746 (_91746 : int) : (term497 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6866643 _91746) (@lem6866745 _91746)). Qed.
Lemma lem6866747 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6866748 (_91746 : int) : (term497 _91746) = term133.
Proof. exact (TRANS (@lem6866746 _91746) (@lem6866747 _91746)). Qed.
Lemma lem6866749 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866750 (_91746 : int) : (term514 _91746) = term175.
Proof. exact (MK_COMB (@lem6866749) (@lem6866748 _91746)). Qed.
Lemma lem6866751 (_91747 : int) : (term515 _91747) = (term516 _91747).
Proof. exact (@lem1982759 (real_of_int _91747) (term237 _91747) term199). Qed.
Lemma lem6866752 (_91747 : int) : (term517 _91747) = (term498 _91747).
Proof. exact (@lem1982715 term199 (real_of_int _91747)). Qed.
Lemma lem6866754 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866755 : term143 = term224.
Proof. exact (@lem6866754 term11). Qed.
Lemma lem6866757 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866758 : term199 = term200.
Proof. exact (@lem6866757 term11). Qed.
Lemma lem6866759 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866760 : term499 = term500.
Proof. exact (MK_COMB (@lem6866759) (@lem6866758)). Qed.
Lemma lem6866761 : term501 = term502.
Proof. exact (MK_COMB (@lem6866760) (@lem6866755)). Qed.
Lemma lem6866762 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6866764 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866765 : term251 = term252.
Proof. exact (@lem6866764 (NUMERAL 0) term11). Qed.
Lemma lem6866766 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866767 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866768 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866767 h1) (fun h1 : term252 = True => @lem6866766)). Qed.
Lemma lem6866769 : term252 = True.
Proof. exact (EQ_MP (@lem6866768) (@lem6866766)). Qed.
Lemma lem6866770 : term251 = True.
Proof. exact (TRANS (@lem6866765) (@lem6866769)). Qed.
Lemma lem6866771 : True = term251.
Proof. exact (SYM (@lem6866770)). Qed.
Lemma lem6866772 : term251.
Proof. exact (EQ_MP (@lem6866771) (@lem0)). Qed.
Lemma lem6866773 : term504.
Proof. exact (@lem6866762 (@lem6866772)). Qed.
Lemma lem6866775 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866776 : term251 = term252.
Proof. exact (@lem6866775 (NUMERAL 0) term11). Qed.
Lemma lem6866777 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866778 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866779 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866778 h1) (fun h1 : term252 = True => @lem6866777)). Qed.
Lemma lem6866780 : term252 = True.
Proof. exact (EQ_MP (@lem6866779) (@lem6866777)). Qed.
Lemma lem6866781 : term251 = True.
Proof. exact (TRANS (@lem6866776) (@lem6866780)). Qed.
Lemma lem6866782 : True = term251.
Proof. exact (SYM (@lem6866781)). Qed.
Lemma lem6866783 : term251.
Proof. exact (EQ_MP (@lem6866782) (@lem0)). Qed.
Lemma lem6866784 : term505.
Proof. exact (@lem6866773 (@lem6866783)). Qed.
Lemma lem6866786 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866787 : term251 = term252.
Proof. exact (@lem6866786 (NUMERAL 0) term11). Qed.
Lemma lem6866788 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866789 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866790 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866789 h1) (fun h1 : term252 = True => @lem6866788)). Qed.
Lemma lem6866791 : term252 = True.
Proof. exact (EQ_MP (@lem6866790) (@lem6866788)). Qed.
Lemma lem6866792 : term251 = True.
Proof. exact (TRANS (@lem6866787) (@lem6866791)). Qed.
Lemma lem6866793 : True = term251.
Proof. exact (SYM (@lem6866792)). Qed.
Lemma lem6866794 : term251.
Proof. exact (EQ_MP (@lem6866793) (@lem0)). Qed.
Lemma lem6866795 : term506.
Proof. exact (@lem6866784 (@lem6866794)). Qed.
Lemma lem6866797 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866798 : term208 = term209.
Proof. exact (@lem6866797 term11 term11). Qed.
Lemma lem6866799 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866800 : term211 = term11.
Proof. exact (EQ_MP (@lem6866799) (@lem940073)). Qed.
Lemma lem6866801 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866802 : term209 = term143.
Proof. exact (MK_COMB (@lem6866801) (@lem6866800)). Qed.
Lemma lem6866803 : term208 = term143.
Proof. exact (TRANS (@lem6866798) (@lem6866802)). Qed.
Lemma lem6866805 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866806 : term225 = term230.
Proof. exact (@lem6866805 term11 term11). Qed.
Lemma lem6866807 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866808 : term211 = term11.
Proof. exact (EQ_MP (@lem6866807) (@lem940073)). Qed.
Lemma lem6866809 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866810 : term209 = term143.
Proof. exact (MK_COMB (@lem6866809) (@lem6866808)). Qed.
Lemma lem6866811 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866812 : term230 = term199.
Proof. exact (MK_COMB (@lem6866811) (@lem6866810)). Qed.
Lemma lem6866813 : term225 = term199.
Proof. exact (TRANS (@lem6866806) (@lem6866812)). Qed.
Lemma lem6866814 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866815 : term507 = term499.
Proof. exact (MK_COMB (@lem6866814) (@lem6866813)). Qed.
Lemma lem6866816 : term508 = term501.
Proof. exact (MK_COMB (@lem6866815) (@lem6866803)). Qed.
Lemma lem6866818 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6866819 : term501 = term133.
Proof. exact (@lem6866818 term11). Qed.
Lemma lem6866820 : term508 = term133.
Proof. exact (TRANS (@lem6866816) (@lem6866819)). Qed.
Lemma lem6866821 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866822 : term510 = term261.
Proof. exact (MK_COMB (@lem6866821) (@lem6866820)). Qed.
Lemma lem6866823 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6866824 : term511 = term263.
Proof. exact (MK_COMB (@lem6866822) (@lem6866823)). Qed.
Lemma lem6866826 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866827 : term263 = term133.
Proof. exact (@lem6866826 term11). Qed.
Lemma lem6866828 : term511 = term133.
Proof. exact (TRANS (@lem6866824) (@lem6866827)). Qed.
Lemma lem6866830 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866831 : term208 = term209.
Proof. exact (@lem6866830 term11 term11). Qed.
Lemma lem6866832 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866833 : term211 = term11.
Proof. exact (EQ_MP (@lem6866832) (@lem940073)). Qed.
Lemma lem6866834 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866835 : term209 = term143.
Proof. exact (MK_COMB (@lem6866834) (@lem6866833)). Qed.
Lemma lem6866836 : term208 = term143.
Proof. exact (TRANS (@lem6866831) (@lem6866835)). Qed.
Lemma lem6866837 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6866838 : term265 = term263.
Proof. exact (MK_COMB (@lem6866837) (@lem6866836)). Qed.
Lemma lem6866840 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866841 : term263 = term133.
Proof. exact (@lem6866840 term11). Qed.
Lemma lem6866842 : term265 = term133.
Proof. exact (TRANS (@lem6866838) (@lem6866841)). Qed.
Lemma lem6866843 : term133 = term265.
Proof. exact (SYM (@lem6866842)). Qed.
Lemma lem6866844 : term511 = term265.
Proof. exact (TRANS (@lem6866828) (@lem6866843)). Qed.
Lemma lem6866845 : term502 = term196.
Proof. exact (@lem6866795 (@lem6866844)). Qed.
Lemma lem6866846 : term501 = term196.
Proof. exact (TRANS (@lem6866761) (@lem6866845)). Qed.
Lemma lem6866848 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6866849 : term196 = term133.
Proof. exact (@lem6866848 term133). Qed.
Lemma lem6866850 : term501 = term133.
Proof. exact (TRANS (@lem6866846) (@lem6866849)). Qed.
Lemma lem6866851 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6866852 : term512 = term261.
Proof. exact (MK_COMB (@lem6866851) (@lem6866850)). Qed.
Lemma lem6866853 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6866854 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6866852) (@lem6866853 _91747)). Qed.
Lemma lem6866855 (_91747 : int) : (term517 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6866752 _91747) (@lem6866854 _91747)). Qed.
Lemma lem6866856 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6866857 (_91747 : int) : (term517 _91747) = term133.
Proof. exact (TRANS (@lem6866855 _91747) (@lem6866856 _91747)). Qed.
Lemma lem6866858 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6866859 (_91747 : int) : (term518 _91747) = term175.
Proof. exact (MK_COMB (@lem6866858) (@lem6866857 _91747)). Qed.
Lemma lem6866860 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6866861 (_91747 : int) : (term516 _91747) = term519.
Proof. exact (MK_COMB (@lem6866859 _91747) (@lem6866860)). Qed.
Lemma lem6866862 (_91747 : int) : (term515 _91747) = term519.
Proof. exact (TRANS (@lem6866751 _91747) (@lem6866861 _91747)). Qed.
Lemma lem6866863 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6866864 (_91747 : int) : (term515 _91747) = term199.
Proof. exact (TRANS (@lem6866862 _91747) (@lem6866863)). Qed.
Lemma lem6866865 (_91746 : int) (_91747 : int) : (term496 _91746 _91747) = term519.
Proof. exact (MK_COMB (@lem6866750 _91746) (@lem6866864 _91747)). Qed.
Lemma lem6866866 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = term519.
Proof. exact (TRANS (@lem6866642 _91746 _91747) (@lem6866865 _91746 _91747)). Qed.
Lemma lem6866867 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6866868 (_91746 : int) (_91747 : int) : (term495 _91746 _91747) = term199.
Proof. exact (TRANS (@lem6866866 _91746 _91747) (@lem6866867)). Qed.
Lemma lem6866869 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6866870 (_91746 : int) (_91747 : int) : (term520 _91746 _91747) = term521.
Proof. exact (MK_COMB (@lem6866869) (@lem6866868 _91746 _91747)). Qed.
Lemma lem6866871 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6866872 (_91746 : int) (_91747 : int) : (term494 _91746 _91747) = term522.
Proof. exact (MK_COMB (@lem6866870 _91746 _91747) (@lem6866871)). Qed.
Lemma lem6866873 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6866872 _91746 _91747) (@lem6866641 _91746 _91747 h1)). Qed.
Lemma lem6866875 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6866876 : term522 = term523.
Proof. exact (@lem6866875 term133 term199). Qed.
Lemma lem6866878 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6866879 : term199 = term200.
Proof. exact (@lem6866878 term11). Qed.
Lemma lem6866881 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866882 : term133 = term196.
Proof. exact (@lem6866881 (NUMERAL 0)). Qed.
Lemma lem6866883 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6866884 : term135 = term524.
Proof. exact (MK_COMB (@lem6866883) (@lem6866882)). Qed.
Lemma lem6866885 : term523 = term525.
Proof. exact (MK_COMB (@lem6866884) (@lem6866879)). Qed.
Lemma lem6866886 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6866888 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866889 : term251 = term252.
Proof. exact (@lem6866888 (NUMERAL 0) term11). Qed.
Lemma lem6866890 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866891 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866892 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866891 h1) (fun h1 : term252 = True => @lem6866890)). Qed.
Lemma lem6866893 : term252 = True.
Proof. exact (EQ_MP (@lem6866892) (@lem6866890)). Qed.
Lemma lem6866894 : term251 = True.
Proof. exact (TRANS (@lem6866889) (@lem6866893)). Qed.
Lemma lem6866895 : True = term251.
Proof. exact (SYM (@lem6866894)). Qed.
Lemma lem6866896 : term251.
Proof. exact (EQ_MP (@lem6866895) (@lem0)). Qed.
Lemma lem6866897 : term527.
Proof. exact (@lem6866886 (@lem6866896)). Qed.
Lemma lem6866899 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866900 : term251 = term252.
Proof. exact (@lem6866899 (NUMERAL 0) term11). Qed.
Lemma lem6866901 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866902 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866903 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866902 h1) (fun h1 : term252 = True => @lem6866901)). Qed.
Lemma lem6866904 : term252 = True.
Proof. exact (EQ_MP (@lem6866903) (@lem6866901)). Qed.
Lemma lem6866905 : term251 = True.
Proof. exact (TRANS (@lem6866900) (@lem6866904)). Qed.
Lemma lem6866906 : True = term251.
Proof. exact (SYM (@lem6866905)). Qed.
Lemma lem6866907 : term251.
Proof. exact (EQ_MP (@lem6866906) (@lem0)). Qed.
Lemma lem6866908 : term525 = term528.
Proof. exact (@lem6866897 (@lem6866907)). Qed.
Lemma lem6866910 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6866911 : term225 = term230.
Proof. exact (@lem6866910 term11 term11). Qed.
Lemma lem6866912 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866913 : term211 = term11.
Proof. exact (EQ_MP (@lem6866912) (@lem940073)). Qed.
Lemma lem6866914 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866915 : term209 = term143.
Proof. exact (MK_COMB (@lem6866914) (@lem6866913)). Qed.
Lemma lem6866916 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6866917 : term230 = term199.
Proof. exact (MK_COMB (@lem6866916) (@lem6866915)). Qed.
Lemma lem6866918 : term225 = term199.
Proof. exact (TRANS (@lem6866911) (@lem6866917)). Qed.
Lemma lem6866920 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6866921 : term263 = term133.
Proof. exact (@lem6866920 term11). Qed.
Lemma lem6866922 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6866923 : term529 = term135.
Proof. exact (MK_COMB (@lem6866922) (@lem6866921)). Qed.
Lemma lem6866924 : term528 = term523.
Proof. exact (MK_COMB (@lem6866923) (@lem6866918)). Qed.
Lemma lem6866926 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6866927 : term523 = term532.
Proof. exact (@lem6866926 (NUMERAL 0) term11). Qed.
Lemma lem6866928 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866929 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6866930 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866929 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6866928)). Qed.
Lemma lem6866931 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6866930) (@lem6866928)). Qed.
Lemma lem6866932 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6866933 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6866934 : term533 = (and True).
Proof. exact (MK_COMB (@lem6866933) (@lem6866932)). Qed.
Lemma lem6866935 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6866934) (@lem6866931)). Qed.
Lemma lem6866937 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6866938 : term532 = False.
Proof. exact (TRANS (@lem6866935) (@lem6866937)). Qed.
Lemma lem6866939 : term523 = False.
Proof. exact (TRANS (@lem6866927) (@lem6866938)). Qed.
Lemma lem6866940 : term528 = False.
Proof. exact (TRANS (@lem6866924) (@lem6866939)). Qed.
Lemma lem6866941 : term525 = False.
Proof. exact (TRANS (@lem6866908) (@lem6866940)). Qed.
Lemma lem6866942 : term523 = False.
Proof. exact (TRANS (@lem6866885) (@lem6866941)). Qed.
Lemma lem6866943 : term522 = False.
Proof. exact (TRANS (@lem6866876) (@lem6866942)). Qed.
Lemma lem6866944 (_91746 : int) (_91747 : int) (h1 : term620 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6866943) (@lem6866873 _91746 _91747 h1)). Qed.
Lemma lem6866945 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term621 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6866946 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term434 _91746 _91747.
Proof. exact (proj2 (@lem6866945 _91746 _91747 h1)). Qed.
Lemma lem6866948 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term385 _91746 _91747.
Proof. exact (proj2 (@lem6866946 _91746 _91747 h1)). Qed.
Lemma lem6866950 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term335 _91746 _91747.
Proof. exact (proj2 (@lem6866948 _91746 _91747 h1)). Qed.
Lemma lem6866951 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term272 _91747 _91746.
Proof. exact (proj1 (@lem6866948 _91746 _91747 h1)). Qed.
Lemma lem6866952 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : (real_of_int _91746) = term133.
Proof. exact (proj2 (@lem6866951 _91746 _91747 h1)). Qed.
Lemma lem6866954 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term302 _91747.
Proof. exact (proj2 (@lem6866950 _91746 _91747 h1)). Qed.
Lemma lem6866955 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term280 _91746 _91747.
Proof. exact (proj1 (@lem6866950 _91746 _91747 h1)). Qed.
Lemma lem6866957 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6866958 : term471 = term251.
Proof. exact (@lem6866957 term133 term143). Qed.
Lemma lem6866960 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866961 : term143 = term224.
Proof. exact (@lem6866960 term11). Qed.
Lemma lem6866963 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6866964 : term133 = term196.
Proof. exact (@lem6866963 (NUMERAL 0)). Qed.
Lemma lem6866965 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6866966 : term472 = term473.
Proof. exact (MK_COMB (@lem6866965) (@lem6866964)). Qed.
Lemma lem6866967 : term251 = term474.
Proof. exact (MK_COMB (@lem6866966) (@lem6866961)). Qed.
Lemma lem6866968 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6866970 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866971 : term251 = term252.
Proof. exact (@lem6866970 (NUMERAL 0) term11). Qed.
Lemma lem6866972 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866973 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866974 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866973 h1) (fun h1 : term252 = True => @lem6866972)). Qed.
Lemma lem6866975 : term252 = True.
Proof. exact (EQ_MP (@lem6866974) (@lem6866972)). Qed.
Lemma lem6866976 : term251 = True.
Proof. exact (TRANS (@lem6866971) (@lem6866975)). Qed.
Lemma lem6866977 : True = term251.
Proof. exact (SYM (@lem6866976)). Qed.
Lemma lem6866978 : term251.
Proof. exact (EQ_MP (@lem6866977) (@lem0)). Qed.
Lemma lem6866979 : term476.
Proof. exact (@lem6866968 (@lem6866978)). Qed.
Lemma lem6866981 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6866982 : term251 = term252.
Proof. exact (@lem6866981 (NUMERAL 0) term11). Qed.
Lemma lem6866983 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6866984 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6866985 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6866984 h1) (fun h1 : term252 = True => @lem6866983)). Qed.
Lemma lem6866986 : term252 = True.
Proof. exact (EQ_MP (@lem6866985) (@lem6866983)). Qed.
Lemma lem6866987 : term251 = True.
Proof. exact (TRANS (@lem6866982) (@lem6866986)). Qed.
Lemma lem6866988 : True = term251.
Proof. exact (SYM (@lem6866987)). Qed.
Lemma lem6866989 : term251.
Proof. exact (EQ_MP (@lem6866988) (@lem0)). Qed.
Lemma lem6866990 : term474 = term477.
Proof. exact (@lem6866979 (@lem6866989)). Qed.
Lemma lem6866992 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6866993 : term208 = term209.
Proof. exact (@lem6866992 term11 term11). Qed.
Lemma lem6866994 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6866995 : term211 = term11.
Proof. exact (EQ_MP (@lem6866994) (@lem940073)). Qed.
Lemma lem6866996 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6866997 : term209 = term143.
Proof. exact (MK_COMB (@lem6866996) (@lem6866995)). Qed.
Lemma lem6866998 : term208 = term143.
Proof. exact (TRANS (@lem6866993) (@lem6866997)). Qed.
Lemma lem6867000 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867001 : term263 = term133.
Proof. exact (@lem6867000 term11). Qed.
Lemma lem6867002 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867003 : term478 = term472.
Proof. exact (MK_COMB (@lem6867002) (@lem6867001)). Qed.
Lemma lem6867004 : term477 = term251.
Proof. exact (MK_COMB (@lem6867003) (@lem6866998)). Qed.
Lemma lem6867006 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867007 : term251 = term252.
Proof. exact (@lem6867006 (NUMERAL 0) term11). Qed.
Lemma lem6867008 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867009 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867010 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867009 h1) (fun h1 : term252 = True => @lem6867008)). Qed.
Lemma lem6867011 : term252 = True.
Proof. exact (EQ_MP (@lem6867010) (@lem6867008)). Qed.
Lemma lem6867012 : term251 = True.
Proof. exact (TRANS (@lem6867007) (@lem6867011)). Qed.
Lemma lem6867013 : term477 = True.
Proof. exact (TRANS (@lem6867004) (@lem6867012)). Qed.
Lemma lem6867014 : term474 = True.
Proof. exact (TRANS (@lem6866990) (@lem6867013)). Qed.
Lemma lem6867015 : term251 = True.
Proof. exact (TRANS (@lem6866967) (@lem6867014)). Qed.
Lemma lem6867016 : term471 = True.
Proof. exact (TRANS (@lem6866958) (@lem6867015)). Qed.
Lemma lem6867017 : True = term471.
Proof. exact (SYM (@lem6867016)). Qed.
Lemma lem6867018 : term471.
Proof. exact (EQ_MP (@lem6867017) (@lem0)). Qed.
Lemma lem6867019 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term551 _91747.
Proof. exact (conj (@lem6867018) (@lem6866954 _91746 _91747 h1)). Qed.
Lemma lem6867021 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6867022 (_91747 : int) : term552 _91747.
Proof. exact (@lem6867021 term143 (term299 _91747)). Qed.
Lemma lem6867023 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term553 _91747.
Proof. exact (@lem6867022 _91747 (@lem6867019 _91746 _91747 h1)). Qed.
Lemma lem6867024 (_91747 : int) : (term554 _91747) = (term299 _91747).
Proof. exact (@lem1982733 (term299 _91747)). Qed.
Lemma lem6867025 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867026 (_91747 : int) : (term555 _91747) = (term301 _91747).
Proof. exact (MK_COMB (@lem6867025) (@lem6867024 _91747)). Qed.
Lemma lem6867027 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867028 (_91747 : int) : (term553 _91747) = (term302 _91747).
Proof. exact (MK_COMB (@lem6867026 _91747) (@lem6867027)). Qed.
Lemma lem6867029 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term302 _91747.
Proof. exact (EQ_MP (@lem6867028 _91747) (@lem6867023 _91746 _91747 h1)). Qed.
Lemma lem6867031 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6867032 : term471 = term251.
Proof. exact (@lem6867031 term133 term143). Qed.
Lemma lem6867034 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867035 : term143 = term224.
Proof. exact (@lem6867034 term11). Qed.
Lemma lem6867037 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867038 : term133 = term196.
Proof. exact (@lem6867037 (NUMERAL 0)). Qed.
Lemma lem6867039 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867040 : term472 = term473.
Proof. exact (MK_COMB (@lem6867039) (@lem6867038)). Qed.
Lemma lem6867041 : term251 = term474.
Proof. exact (MK_COMB (@lem6867040) (@lem6867035)). Qed.
Lemma lem6867042 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6867044 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867045 : term251 = term252.
Proof. exact (@lem6867044 (NUMERAL 0) term11). Qed.
Lemma lem6867046 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867047 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867048 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867047 h1) (fun h1 : term252 = True => @lem6867046)). Qed.
Lemma lem6867049 : term252 = True.
Proof. exact (EQ_MP (@lem6867048) (@lem6867046)). Qed.
Lemma lem6867050 : term251 = True.
Proof. exact (TRANS (@lem6867045) (@lem6867049)). Qed.
Lemma lem6867051 : True = term251.
Proof. exact (SYM (@lem6867050)). Qed.
Lemma lem6867052 : term251.
Proof. exact (EQ_MP (@lem6867051) (@lem0)). Qed.
Lemma lem6867053 : term476.
Proof. exact (@lem6867042 (@lem6867052)). Qed.
Lemma lem6867055 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867056 : term251 = term252.
Proof. exact (@lem6867055 (NUMERAL 0) term11). Qed.
Lemma lem6867057 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867058 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867059 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867058 h1) (fun h1 : term252 = True => @lem6867057)). Qed.
Lemma lem6867060 : term252 = True.
Proof. exact (EQ_MP (@lem6867059) (@lem6867057)). Qed.
Lemma lem6867061 : term251 = True.
Proof. exact (TRANS (@lem6867056) (@lem6867060)). Qed.
Lemma lem6867062 : True = term251.
Proof. exact (SYM (@lem6867061)). Qed.
Lemma lem6867063 : term251.
Proof. exact (EQ_MP (@lem6867062) (@lem0)). Qed.
Lemma lem6867064 : term474 = term477.
Proof. exact (@lem6867053 (@lem6867063)). Qed.
Lemma lem6867066 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867067 : term208 = term209.
Proof. exact (@lem6867066 term11 term11). Qed.
Lemma lem6867068 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867069 : term211 = term11.
Proof. exact (EQ_MP (@lem6867068) (@lem940073)). Qed.
Lemma lem6867070 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867071 : term209 = term143.
Proof. exact (MK_COMB (@lem6867070) (@lem6867069)). Qed.
Lemma lem6867072 : term208 = term143.
Proof. exact (TRANS (@lem6867067) (@lem6867071)). Qed.
Lemma lem6867074 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867075 : term263 = term133.
Proof. exact (@lem6867074 term11). Qed.
Lemma lem6867076 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867077 : term478 = term472.
Proof. exact (MK_COMB (@lem6867076) (@lem6867075)). Qed.
Lemma lem6867078 : term477 = term251.
Proof. exact (MK_COMB (@lem6867077) (@lem6867072)). Qed.
Lemma lem6867080 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867081 : term251 = term252.
Proof. exact (@lem6867080 (NUMERAL 0) term11). Qed.
Lemma lem6867082 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867083 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867084 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867083 h1) (fun h1 : term252 = True => @lem6867082)). Qed.
Lemma lem6867085 : term252 = True.
Proof. exact (EQ_MP (@lem6867084) (@lem6867082)). Qed.
Lemma lem6867086 : term251 = True.
Proof. exact (TRANS (@lem6867081) (@lem6867085)). Qed.
Lemma lem6867087 : term477 = True.
Proof. exact (TRANS (@lem6867078) (@lem6867086)). Qed.
Lemma lem6867088 : term474 = True.
Proof. exact (TRANS (@lem6867064) (@lem6867087)). Qed.
Lemma lem6867089 : term251 = True.
Proof. exact (TRANS (@lem6867041) (@lem6867088)). Qed.
Lemma lem6867090 : term471 = True.
Proof. exact (TRANS (@lem6867032) (@lem6867089)). Qed.
Lemma lem6867091 : True = term471.
Proof. exact (SYM (@lem6867090)). Qed.
Lemma lem6867092 : term471.
Proof. exact (EQ_MP (@lem6867091) (@lem0)). Qed.
Lemma lem6867093 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term479 _91746 _91747.
Proof. exact (conj (@lem6867092) (@lem6866955 _91746 _91747 h1)). Qed.
Lemma lem6867095 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6867096 (_91746 : int) (_91747 : int) : term481 _91746 _91747.
Proof. exact (@lem6867095 term143 (term277 _91746 _91747)). Qed.
Lemma lem6867097 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term482 _91746 _91747.
Proof. exact (@lem6867096 _91746 _91747 (@lem6867093 _91746 _91747 h1)). Qed.
Lemma lem6867098 (_91746 : int) (_91747 : int) : (term483 _91746 _91747) = (term277 _91746 _91747).
Proof. exact (@lem1982733 (term277 _91746 _91747)). Qed.
Lemma lem6867099 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867100 (_91746 : int) (_91747 : int) : (term484 _91746 _91747) = (term279 _91746 _91747).
Proof. exact (MK_COMB (@lem6867099) (@lem6867098 _91746 _91747)). Qed.
Lemma lem6867101 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867102 (_91746 : int) (_91747 : int) : (term482 _91746 _91747) = (term280 _91746 _91747).
Proof. exact (MK_COMB (@lem6867100 _91746 _91747) (@lem6867101)). Qed.
Lemma lem6867103 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term280 _91746 _91747.
Proof. exact (EQ_MP (@lem6867102 _91746 _91747) (@lem6867097 _91746 _91747 h1)). Qed.
Lemma lem6867105 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6867106 (_91746 : int) : term539 _91746.
Proof. exact (@lem6867105 (real_of_int _91746)). Qed.
Lemma lem6867107 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term540 _91746.
Proof. exact (@lem6867106 _91746 (@lem6866952 _91746 _91747 h1)). Qed.
Lemma lem6867108 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term556 _91746.
Proof. exact (@lem6867107 _91746 _91747 h1 term199). Qed.
Lemma lem6867109 (_91746 : int) : (term556 _91746) = ((term237 _91746) = term133).
Proof. exact (eq_refl (term556 _91746)). Qed.
Lemma lem6867116 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : (term237 _91746) = term133.
Proof. exact (EQ_MP (@lem6867109 _91746) (@lem6867108 _91746 _91747 h1)). Qed.
Lemma lem6867117 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term557 _91746 _91747.
Proof. exact (conj (@lem6867116 _91746 _91747 h1) (@lem6867103 _91746 _91747 h1)). Qed.
Lemma lem6867119 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6867120 (_91746 : int) (_91747 : int) : term558 _91746 _91747.
Proof. exact (@lem6867119 (term237 _91746) (term277 _91746 _91747)). Qed.
Lemma lem6867121 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term559 _91746 _91747.
Proof. exact (@lem6867120 _91746 _91747 (@lem6867117 _91746 _91747 h1)). Qed.
Lemma lem6867122 (_91746 : int) (_91747 : int) : (term560 _91746 _91747) = (term561 _91746 _91747).
Proof. exact (@lem1982763 (term237 _91746) (real_of_int _91746) (term237 _91747)). Qed.
Lemma lem6867123 (_91746 : int) : (term497 _91746) = (term498 _91746).
Proof. exact (@lem1982713 term199 (real_of_int _91746)). Qed.
Lemma lem6867125 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867126 : term143 = term224.
Proof. exact (@lem6867125 term11). Qed.
Lemma lem6867128 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6867129 : term199 = term200.
Proof. exact (@lem6867128 term11). Qed.
Lemma lem6867130 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867131 : term499 = term500.
Proof. exact (MK_COMB (@lem6867130) (@lem6867129)). Qed.
Lemma lem6867132 : term501 = term502.
Proof. exact (MK_COMB (@lem6867131) (@lem6867126)). Qed.
Lemma lem6867133 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6867135 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867136 : term251 = term252.
Proof. exact (@lem6867135 (NUMERAL 0) term11). Qed.
Lemma lem6867137 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867138 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867139 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867138 h1) (fun h1 : term252 = True => @lem6867137)). Qed.
Lemma lem6867140 : term252 = True.
Proof. exact (EQ_MP (@lem6867139) (@lem6867137)). Qed.
Lemma lem6867141 : term251 = True.
Proof. exact (TRANS (@lem6867136) (@lem6867140)). Qed.
Lemma lem6867142 : True = term251.
Proof. exact (SYM (@lem6867141)). Qed.
Lemma lem6867143 : term251.
Proof. exact (EQ_MP (@lem6867142) (@lem0)). Qed.
Lemma lem6867144 : term504.
Proof. exact (@lem6867133 (@lem6867143)). Qed.
Lemma lem6867146 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867147 : term251 = term252.
Proof. exact (@lem6867146 (NUMERAL 0) term11). Qed.
Lemma lem6867148 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867149 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867150 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867149 h1) (fun h1 : term252 = True => @lem6867148)). Qed.
Lemma lem6867151 : term252 = True.
Proof. exact (EQ_MP (@lem6867150) (@lem6867148)). Qed.
Lemma lem6867152 : term251 = True.
Proof. exact (TRANS (@lem6867147) (@lem6867151)). Qed.
Lemma lem6867153 : True = term251.
Proof. exact (SYM (@lem6867152)). Qed.
Lemma lem6867154 : term251.
Proof. exact (EQ_MP (@lem6867153) (@lem0)). Qed.
Lemma lem6867155 : term505.
Proof. exact (@lem6867144 (@lem6867154)). Qed.
Lemma lem6867157 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867158 : term251 = term252.
Proof. exact (@lem6867157 (NUMERAL 0) term11). Qed.
Lemma lem6867159 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867160 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867161 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867160 h1) (fun h1 : term252 = True => @lem6867159)). Qed.
Lemma lem6867162 : term252 = True.
Proof. exact (EQ_MP (@lem6867161) (@lem6867159)). Qed.
Lemma lem6867163 : term251 = True.
Proof. exact (TRANS (@lem6867158) (@lem6867162)). Qed.
Lemma lem6867164 : True = term251.
Proof. exact (SYM (@lem6867163)). Qed.
Lemma lem6867165 : term251.
Proof. exact (EQ_MP (@lem6867164) (@lem0)). Qed.
Lemma lem6867166 : term506.
Proof. exact (@lem6867155 (@lem6867165)). Qed.
Lemma lem6867168 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867169 : term208 = term209.
Proof. exact (@lem6867168 term11 term11). Qed.
Lemma lem6867170 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867171 : term211 = term11.
Proof. exact (EQ_MP (@lem6867170) (@lem940073)). Qed.
Lemma lem6867172 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867173 : term209 = term143.
Proof. exact (MK_COMB (@lem6867172) (@lem6867171)). Qed.
Lemma lem6867174 : term208 = term143.
Proof. exact (TRANS (@lem6867169) (@lem6867173)). Qed.
Lemma lem6867176 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6867177 : term225 = term230.
Proof. exact (@lem6867176 term11 term11). Qed.
Lemma lem6867178 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867179 : term211 = term11.
Proof. exact (EQ_MP (@lem6867178) (@lem940073)). Qed.
Lemma lem6867180 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867181 : term209 = term143.
Proof. exact (MK_COMB (@lem6867180) (@lem6867179)). Qed.
Lemma lem6867182 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6867183 : term230 = term199.
Proof. exact (MK_COMB (@lem6867182) (@lem6867181)). Qed.
Lemma lem6867184 : term225 = term199.
Proof. exact (TRANS (@lem6867177) (@lem6867183)). Qed.
Lemma lem6867185 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867186 : term507 = term499.
Proof. exact (MK_COMB (@lem6867185) (@lem6867184)). Qed.
Lemma lem6867187 : term508 = term501.
Proof. exact (MK_COMB (@lem6867186) (@lem6867174)). Qed.
Lemma lem6867189 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6867190 : term501 = term133.
Proof. exact (@lem6867189 term11). Qed.
Lemma lem6867191 : term508 = term133.
Proof. exact (TRANS (@lem6867187) (@lem6867190)). Qed.
Lemma lem6867192 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867193 : term510 = term261.
Proof. exact (MK_COMB (@lem6867192) (@lem6867191)). Qed.
Lemma lem6867194 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6867195 : term511 = term263.
Proof. exact (MK_COMB (@lem6867193) (@lem6867194)). Qed.
Lemma lem6867197 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867198 : term263 = term133.
Proof. exact (@lem6867197 term11). Qed.
Lemma lem6867199 : term511 = term133.
Proof. exact (TRANS (@lem6867195) (@lem6867198)). Qed.
Lemma lem6867201 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867202 : term208 = term209.
Proof. exact (@lem6867201 term11 term11). Qed.
Lemma lem6867203 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867204 : term211 = term11.
Proof. exact (EQ_MP (@lem6867203) (@lem940073)). Qed.
Lemma lem6867205 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867206 : term209 = term143.
Proof. exact (MK_COMB (@lem6867205) (@lem6867204)). Qed.
Lemma lem6867207 : term208 = term143.
Proof. exact (TRANS (@lem6867202) (@lem6867206)). Qed.
Lemma lem6867208 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6867209 : term265 = term263.
Proof. exact (MK_COMB (@lem6867208) (@lem6867207)). Qed.
Lemma lem6867211 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867212 : term263 = term133.
Proof. exact (@lem6867211 term11). Qed.
Lemma lem6867213 : term265 = term133.
Proof. exact (TRANS (@lem6867209) (@lem6867212)). Qed.
Lemma lem6867214 : term133 = term265.
Proof. exact (SYM (@lem6867213)). Qed.
Lemma lem6867215 : term511 = term265.
Proof. exact (TRANS (@lem6867199) (@lem6867214)). Qed.
Lemma lem6867216 : term502 = term196.
Proof. exact (@lem6867166 (@lem6867215)). Qed.
Lemma lem6867217 : term501 = term196.
Proof. exact (TRANS (@lem6867132) (@lem6867216)). Qed.
Lemma lem6867219 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6867220 : term196 = term133.
Proof. exact (@lem6867219 term133). Qed.
Lemma lem6867221 : term501 = term133.
Proof. exact (TRANS (@lem6867217) (@lem6867220)). Qed.
Lemma lem6867222 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867223 : term512 = term261.
Proof. exact (MK_COMB (@lem6867222) (@lem6867221)). Qed.
Lemma lem6867224 (_91746 : int) : (real_of_int _91746) = (real_of_int _91746).
Proof. exact (eq_refl (real_of_int _91746)). Qed.
Lemma lem6867225 (_91746 : int) : (term498 _91746) = (term513 _91746).
Proof. exact (MK_COMB (@lem6867223) (@lem6867224 _91746)). Qed.
Lemma lem6867226 (_91746 : int) : (term497 _91746) = (term513 _91746).
Proof. exact (TRANS (@lem6867123 _91746) (@lem6867225 _91746)). Qed.
Lemma lem6867227 (_91746 : int) : (term513 _91746) = term133.
Proof. exact (@lem1982719 (real_of_int _91746)). Qed.
Lemma lem6867228 (_91746 : int) : (term497 _91746) = term133.
Proof. exact (TRANS (@lem6867226 _91746) (@lem6867227 _91746)). Qed.
Lemma lem6867229 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867230 (_91746 : int) : (term514 _91746) = term175.
Proof. exact (MK_COMB (@lem6867229) (@lem6867228 _91746)). Qed.
Lemma lem6867231 (_91747 : int) : (term237 _91747) = (term237 _91747).
Proof. exact (eq_refl (term237 _91747)). Qed.
Lemma lem6867232 (_91746 : int) (_91747 : int) : (term561 _91746 _91747) = (term562 _91747).
Proof. exact (MK_COMB (@lem6867230 _91746) (@lem6867231 _91747)). Qed.
Lemma lem6867233 (_91746 : int) (_91747 : int) : (term560 _91746 _91747) = (term562 _91747).
Proof. exact (TRANS (@lem6867122 _91746 _91747) (@lem6867232 _91746 _91747)). Qed.
Lemma lem6867234 (_91747 : int) : (term562 _91747) = (term237 _91747).
Proof. exact (@lem1982721 (term237 _91747)). Qed.
Lemma lem6867235 (_91746 : int) (_91747 : int) : (term560 _91746 _91747) = (term237 _91747).
Proof. exact (TRANS (@lem6867233 _91746 _91747) (@lem6867234 _91747)). Qed.
Lemma lem6867236 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867237 (_91746 : int) (_91747 : int) : (term563 _91746 _91747) = (term268 _91747).
Proof. exact (MK_COMB (@lem6867236) (@lem6867235 _91746 _91747)). Qed.
Lemma lem6867238 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867239 (_91746 : int) (_91747 : int) : (term559 _91746 _91747) = (term269 _91747).
Proof. exact (MK_COMB (@lem6867237 _91746 _91747) (@lem6867238)). Qed.
Lemma lem6867240 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term269 _91747.
Proof. exact (EQ_MP (@lem6867239 _91746 _91747) (@lem6867121 _91746 _91747 h1)). Qed.
Lemma lem6867242 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6867243 : term471 = term251.
Proof. exact (@lem6867242 term133 term143). Qed.
Lemma lem6867245 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867246 : term143 = term224.
Proof. exact (@lem6867245 term11). Qed.
Lemma lem6867248 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867249 : term133 = term196.
Proof. exact (@lem6867248 (NUMERAL 0)). Qed.
Lemma lem6867250 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867251 : term472 = term473.
Proof. exact (MK_COMB (@lem6867250) (@lem6867249)). Qed.
Lemma lem6867252 : term251 = term474.
Proof. exact (MK_COMB (@lem6867251) (@lem6867246)). Qed.
Lemma lem6867253 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6867255 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867256 : term251 = term252.
Proof. exact (@lem6867255 (NUMERAL 0) term11). Qed.
Lemma lem6867257 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867258 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867259 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867258 h1) (fun h1 : term252 = True => @lem6867257)). Qed.
Lemma lem6867260 : term252 = True.
Proof. exact (EQ_MP (@lem6867259) (@lem6867257)). Qed.
Lemma lem6867261 : term251 = True.
Proof. exact (TRANS (@lem6867256) (@lem6867260)). Qed.
Lemma lem6867262 : True = term251.
Proof. exact (SYM (@lem6867261)). Qed.
Lemma lem6867263 : term251.
Proof. exact (EQ_MP (@lem6867262) (@lem0)). Qed.
Lemma lem6867264 : term476.
Proof. exact (@lem6867253 (@lem6867263)). Qed.
Lemma lem6867266 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867267 : term251 = term252.
Proof. exact (@lem6867266 (NUMERAL 0) term11). Qed.
Lemma lem6867268 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867269 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867270 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867269 h1) (fun h1 : term252 = True => @lem6867268)). Qed.
Lemma lem6867271 : term252 = True.
Proof. exact (EQ_MP (@lem6867270) (@lem6867268)). Qed.
Lemma lem6867272 : term251 = True.
Proof. exact (TRANS (@lem6867267) (@lem6867271)). Qed.
Lemma lem6867273 : True = term251.
Proof. exact (SYM (@lem6867272)). Qed.
Lemma lem6867274 : term251.
Proof. exact (EQ_MP (@lem6867273) (@lem0)). Qed.
Lemma lem6867275 : term474 = term477.
Proof. exact (@lem6867264 (@lem6867274)). Qed.
Lemma lem6867277 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867278 : term208 = term209.
Proof. exact (@lem6867277 term11 term11). Qed.
Lemma lem6867279 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867280 : term211 = term11.
Proof. exact (EQ_MP (@lem6867279) (@lem940073)). Qed.
Lemma lem6867281 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867282 : term209 = term143.
Proof. exact (MK_COMB (@lem6867281) (@lem6867280)). Qed.
Lemma lem6867283 : term208 = term143.
Proof. exact (TRANS (@lem6867278) (@lem6867282)). Qed.
Lemma lem6867285 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867286 : term263 = term133.
Proof. exact (@lem6867285 term11). Qed.
Lemma lem6867287 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867288 : term478 = term472.
Proof. exact (MK_COMB (@lem6867287) (@lem6867286)). Qed.
Lemma lem6867289 : term477 = term251.
Proof. exact (MK_COMB (@lem6867288) (@lem6867283)). Qed.
Lemma lem6867291 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867292 : term251 = term252.
Proof. exact (@lem6867291 (NUMERAL 0) term11). Qed.
Lemma lem6867293 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867294 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867295 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867294 h1) (fun h1 : term252 = True => @lem6867293)). Qed.
Lemma lem6867296 : term252 = True.
Proof. exact (EQ_MP (@lem6867295) (@lem6867293)). Qed.
Lemma lem6867297 : term251 = True.
Proof. exact (TRANS (@lem6867292) (@lem6867296)). Qed.
Lemma lem6867298 : term477 = True.
Proof. exact (TRANS (@lem6867289) (@lem6867297)). Qed.
Lemma lem6867299 : term474 = True.
Proof. exact (TRANS (@lem6867275) (@lem6867298)). Qed.
Lemma lem6867300 : term251 = True.
Proof. exact (TRANS (@lem6867252) (@lem6867299)). Qed.
Lemma lem6867301 : term471 = True.
Proof. exact (TRANS (@lem6867243) (@lem6867300)). Qed.
Lemma lem6867302 : True = term471.
Proof. exact (SYM (@lem6867301)). Qed.
Lemma lem6867303 : term471.
Proof. exact (EQ_MP (@lem6867302) (@lem0)). Qed.
Lemma lem6867304 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term564 _91747.
Proof. exact (conj (@lem6867303) (@lem6867240 _91746 _91747 h1)). Qed.
Lemma lem6867306 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6867307 (_91747 : int) : term565 _91747.
Proof. exact (@lem6867306 term143 (term237 _91747)). Qed.
Lemma lem6867308 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term566 _91747.
Proof. exact (@lem6867307 _91747 (@lem6867304 _91746 _91747 h1)). Qed.
Lemma lem6867309 (_91747 : int) : (term567 _91747) = (term237 _91747).
Proof. exact (@lem1982733 (term237 _91747)). Qed.
Lemma lem6867310 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867311 (_91747 : int) : (term568 _91747) = (term268 _91747).
Proof. exact (MK_COMB (@lem6867310) (@lem6867309 _91747)). Qed.
Lemma lem6867312 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867313 (_91747 : int) : (term566 _91747) = (term269 _91747).
Proof. exact (MK_COMB (@lem6867311 _91747) (@lem6867312)). Qed.
Lemma lem6867314 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term269 _91747.
Proof. exact (EQ_MP (@lem6867313 _91747) (@lem6867308 _91746 _91747 h1)). Qed.
Lemma lem6867315 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term569 _91747.
Proof. exact (conj (@lem6867314 _91746 _91747 h1) (@lem6867029 _91746 _91747 h1)). Qed.
Lemma lem6867317 (x : real) (y : real) : term570 x y.
Proof. exact (proj1 (@lem1988342 x y)). Qed.
Lemma lem6867318 (_91747 : int) : term571 _91747.
Proof. exact (@lem6867317 (term237 _91747) (term299 _91747)). Qed.
Lemma lem6867319 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term572 _91747.
Proof. exact (@lem6867318 _91747 (@lem6867315 _91746 _91747 h1)). Qed.
Lemma lem6867320 (_91747 : int) : (term573 _91747) = (term574 _91747).
Proof. exact (@lem1982763 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6867321 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6867323 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867324 : term143 = term224.
Proof. exact (@lem6867323 term11). Qed.
Lemma lem6867326 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6867327 : term199 = term200.
Proof. exact (@lem6867326 term11). Qed.
Lemma lem6867328 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867329 : term499 = term500.
Proof. exact (MK_COMB (@lem6867328) (@lem6867327)). Qed.
Lemma lem6867330 : term501 = term502.
Proof. exact (MK_COMB (@lem6867329) (@lem6867324)). Qed.
Lemma lem6867331 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6867333 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867334 : term251 = term252.
Proof. exact (@lem6867333 (NUMERAL 0) term11). Qed.
Lemma lem6867335 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867336 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867337 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867336 h1) (fun h1 : term252 = True => @lem6867335)). Qed.
Lemma lem6867338 : term252 = True.
Proof. exact (EQ_MP (@lem6867337) (@lem6867335)). Qed.
Lemma lem6867339 : term251 = True.
Proof. exact (TRANS (@lem6867334) (@lem6867338)). Qed.
Lemma lem6867340 : True = term251.
Proof. exact (SYM (@lem6867339)). Qed.
Lemma lem6867341 : term251.
Proof. exact (EQ_MP (@lem6867340) (@lem0)). Qed.
Lemma lem6867342 : term504.
Proof. exact (@lem6867331 (@lem6867341)). Qed.
Lemma lem6867344 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867345 : term251 = term252.
Proof. exact (@lem6867344 (NUMERAL 0) term11). Qed.
Lemma lem6867346 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867347 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867348 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867347 h1) (fun h1 : term252 = True => @lem6867346)). Qed.
Lemma lem6867349 : term252 = True.
Proof. exact (EQ_MP (@lem6867348) (@lem6867346)). Qed.
Lemma lem6867350 : term251 = True.
Proof. exact (TRANS (@lem6867345) (@lem6867349)). Qed.
Lemma lem6867351 : True = term251.
Proof. exact (SYM (@lem6867350)). Qed.
Lemma lem6867352 : term251.
Proof. exact (EQ_MP (@lem6867351) (@lem0)). Qed.
Lemma lem6867353 : term505.
Proof. exact (@lem6867342 (@lem6867352)). Qed.
Lemma lem6867355 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867356 : term251 = term252.
Proof. exact (@lem6867355 (NUMERAL 0) term11). Qed.
Lemma lem6867357 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867358 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867359 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867358 h1) (fun h1 : term252 = True => @lem6867357)). Qed.
Lemma lem6867360 : term252 = True.
Proof. exact (EQ_MP (@lem6867359) (@lem6867357)). Qed.
Lemma lem6867361 : term251 = True.
Proof. exact (TRANS (@lem6867356) (@lem6867360)). Qed.
Lemma lem6867362 : True = term251.
Proof. exact (SYM (@lem6867361)). Qed.
Lemma lem6867363 : term251.
Proof. exact (EQ_MP (@lem6867362) (@lem0)). Qed.
Lemma lem6867364 : term506.
Proof. exact (@lem6867353 (@lem6867363)). Qed.
Lemma lem6867366 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867367 : term208 = term209.
Proof. exact (@lem6867366 term11 term11). Qed.
Lemma lem6867368 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867369 : term211 = term11.
Proof. exact (EQ_MP (@lem6867368) (@lem940073)). Qed.
Lemma lem6867370 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867371 : term209 = term143.
Proof. exact (MK_COMB (@lem6867370) (@lem6867369)). Qed.
Lemma lem6867372 : term208 = term143.
Proof. exact (TRANS (@lem6867367) (@lem6867371)). Qed.
Lemma lem6867374 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6867375 : term225 = term230.
Proof. exact (@lem6867374 term11 term11). Qed.
Lemma lem6867376 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867377 : term211 = term11.
Proof. exact (EQ_MP (@lem6867376) (@lem940073)). Qed.
Lemma lem6867378 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867379 : term209 = term143.
Proof. exact (MK_COMB (@lem6867378) (@lem6867377)). Qed.
Lemma lem6867380 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6867381 : term230 = term199.
Proof. exact (MK_COMB (@lem6867380) (@lem6867379)). Qed.
Lemma lem6867382 : term225 = term199.
Proof. exact (TRANS (@lem6867375) (@lem6867381)). Qed.
Lemma lem6867383 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867384 : term507 = term499.
Proof. exact (MK_COMB (@lem6867383) (@lem6867382)). Qed.
Lemma lem6867385 : term508 = term501.
Proof. exact (MK_COMB (@lem6867384) (@lem6867372)). Qed.
Lemma lem6867387 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6867388 : term501 = term133.
Proof. exact (@lem6867387 term11). Qed.
Lemma lem6867389 : term508 = term133.
Proof. exact (TRANS (@lem6867385) (@lem6867388)). Qed.
Lemma lem6867390 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867391 : term510 = term261.
Proof. exact (MK_COMB (@lem6867390) (@lem6867389)). Qed.
Lemma lem6867392 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6867393 : term511 = term263.
Proof. exact (MK_COMB (@lem6867391) (@lem6867392)). Qed.
Lemma lem6867395 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867396 : term263 = term133.
Proof. exact (@lem6867395 term11). Qed.
Lemma lem6867397 : term511 = term133.
Proof. exact (TRANS (@lem6867393) (@lem6867396)). Qed.
Lemma lem6867399 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867400 : term208 = term209.
Proof. exact (@lem6867399 term11 term11). Qed.
Lemma lem6867401 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867402 : term211 = term11.
Proof. exact (EQ_MP (@lem6867401) (@lem940073)). Qed.
Lemma lem6867403 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867404 : term209 = term143.
Proof. exact (MK_COMB (@lem6867403) (@lem6867402)). Qed.
Lemma lem6867405 : term208 = term143.
Proof. exact (TRANS (@lem6867400) (@lem6867404)). Qed.
Lemma lem6867406 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6867407 : term265 = term263.
Proof. exact (MK_COMB (@lem6867406) (@lem6867405)). Qed.
Lemma lem6867409 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867410 : term263 = term133.
Proof. exact (@lem6867409 term11). Qed.
Lemma lem6867411 : term265 = term133.
Proof. exact (TRANS (@lem6867407) (@lem6867410)). Qed.
Lemma lem6867412 : term133 = term265.
Proof. exact (SYM (@lem6867411)). Qed.
Lemma lem6867413 : term511 = term265.
Proof. exact (TRANS (@lem6867397) (@lem6867412)). Qed.
Lemma lem6867414 : term502 = term196.
Proof. exact (@lem6867364 (@lem6867413)). Qed.
Lemma lem6867415 : term501 = term196.
Proof. exact (TRANS (@lem6867330) (@lem6867414)). Qed.
Lemma lem6867417 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6867418 : term196 = term133.
Proof. exact (@lem6867417 term133). Qed.
Lemma lem6867419 : term501 = term133.
Proof. exact (TRANS (@lem6867415) (@lem6867418)). Qed.
Lemma lem6867420 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867421 : term512 = term261.
Proof. exact (MK_COMB (@lem6867420) (@lem6867419)). Qed.
Lemma lem6867422 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6867423 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6867421) (@lem6867422 _91747)). Qed.
Lemma lem6867424 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6867321 _91747) (@lem6867423 _91747)). Qed.
Lemma lem6867425 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6867426 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6867424 _91747) (@lem6867425 _91747)). Qed.
Lemma lem6867427 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867428 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6867427) (@lem6867426 _91747)). Qed.
Lemma lem6867429 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6867430 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6867428 _91747) (@lem6867429)). Qed.
Lemma lem6867431 (_91747 : int) : (term573 _91747) = term519.
Proof. exact (TRANS (@lem6867320 _91747) (@lem6867430 _91747)). Qed.
Lemma lem6867432 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6867433 (_91747 : int) : (term573 _91747) = term199.
Proof. exact (TRANS (@lem6867431 _91747) (@lem6867432)). Qed.
Lemma lem6867434 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867435 (_91747 : int) : (term575 _91747) = term521.
Proof. exact (MK_COMB (@lem6867434) (@lem6867433 _91747)). Qed.
Lemma lem6867436 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867437 (_91747 : int) : (term572 _91747) = term522.
Proof. exact (MK_COMB (@lem6867435 _91747) (@lem6867436)). Qed.
Lemma lem6867438 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6867437 _91747) (@lem6867319 _91746 _91747 h1)). Qed.
Lemma lem6867440 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6867441 : term522 = term523.
Proof. exact (@lem6867440 term133 term199). Qed.
Lemma lem6867443 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6867444 : term199 = term200.
Proof. exact (@lem6867443 term11). Qed.
Lemma lem6867446 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867447 : term133 = term196.
Proof. exact (@lem6867446 (NUMERAL 0)). Qed.
Lemma lem6867448 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6867449 : term135 = term524.
Proof. exact (MK_COMB (@lem6867448) (@lem6867447)). Qed.
Lemma lem6867450 : term523 = term525.
Proof. exact (MK_COMB (@lem6867449) (@lem6867444)). Qed.
Lemma lem6867451 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6867453 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867454 : term251 = term252.
Proof. exact (@lem6867453 (NUMERAL 0) term11). Qed.
Lemma lem6867455 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867456 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867457 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867456 h1) (fun h1 : term252 = True => @lem6867455)). Qed.
Lemma lem6867458 : term252 = True.
Proof. exact (EQ_MP (@lem6867457) (@lem6867455)). Qed.
Lemma lem6867459 : term251 = True.
Proof. exact (TRANS (@lem6867454) (@lem6867458)). Qed.
Lemma lem6867460 : True = term251.
Proof. exact (SYM (@lem6867459)). Qed.
Lemma lem6867461 : term251.
Proof. exact (EQ_MP (@lem6867460) (@lem0)). Qed.
Lemma lem6867462 : term527.
Proof. exact (@lem6867451 (@lem6867461)). Qed.
Lemma lem6867464 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867465 : term251 = term252.
Proof. exact (@lem6867464 (NUMERAL 0) term11). Qed.
Lemma lem6867466 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867467 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867468 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867467 h1) (fun h1 : term252 = True => @lem6867466)). Qed.
Lemma lem6867469 : term252 = True.
Proof. exact (EQ_MP (@lem6867468) (@lem6867466)). Qed.
Lemma lem6867470 : term251 = True.
Proof. exact (TRANS (@lem6867465) (@lem6867469)). Qed.
Lemma lem6867471 : True = term251.
Proof. exact (SYM (@lem6867470)). Qed.
Lemma lem6867472 : term251.
Proof. exact (EQ_MP (@lem6867471) (@lem0)). Qed.
Lemma lem6867473 : term525 = term528.
Proof. exact (@lem6867462 (@lem6867472)). Qed.
Lemma lem6867475 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6867476 : term225 = term230.
Proof. exact (@lem6867475 term11 term11). Qed.
Lemma lem6867477 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867478 : term211 = term11.
Proof. exact (EQ_MP (@lem6867477) (@lem940073)). Qed.
Lemma lem6867479 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867480 : term209 = term143.
Proof. exact (MK_COMB (@lem6867479) (@lem6867478)). Qed.
Lemma lem6867481 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6867482 : term230 = term199.
Proof. exact (MK_COMB (@lem6867481) (@lem6867480)). Qed.
Lemma lem6867483 : term225 = term199.
Proof. exact (TRANS (@lem6867476) (@lem6867482)). Qed.
Lemma lem6867485 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867486 : term263 = term133.
Proof. exact (@lem6867485 term11). Qed.
Lemma lem6867487 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6867488 : term529 = term135.
Proof. exact (MK_COMB (@lem6867487) (@lem6867486)). Qed.
Lemma lem6867489 : term528 = term523.
Proof. exact (MK_COMB (@lem6867488) (@lem6867483)). Qed.
Lemma lem6867491 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6867492 : term523 = term532.
Proof. exact (@lem6867491 (NUMERAL 0) term11). Qed.
Lemma lem6867493 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867494 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6867495 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867494 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6867493)). Qed.
Lemma lem6867496 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6867495) (@lem6867493)). Qed.
Lemma lem6867497 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6867498 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6867499 : term533 = (and True).
Proof. exact (MK_COMB (@lem6867498) (@lem6867497)). Qed.
Lemma lem6867500 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6867499) (@lem6867496)). Qed.
Lemma lem6867502 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6867503 : term532 = False.
Proof. exact (TRANS (@lem6867500) (@lem6867502)). Qed.
Lemma lem6867504 : term523 = False.
Proof. exact (TRANS (@lem6867492) (@lem6867503)). Qed.
Lemma lem6867505 : term528 = False.
Proof. exact (TRANS (@lem6867489) (@lem6867504)). Qed.
Lemma lem6867506 : term525 = False.
Proof. exact (TRANS (@lem6867473) (@lem6867505)). Qed.
Lemma lem6867507 : term523 = False.
Proof. exact (TRANS (@lem6867450) (@lem6867506)). Qed.
Lemma lem6867508 : term522 = False.
Proof. exact (TRANS (@lem6867441) (@lem6867507)). Qed.
Lemma lem6867509 (_91746 : int) (_91747 : int) (h1 : term621 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6867508) (@lem6867438 _91746 _91747 h1)). Qed.
Lemma lem6867510 (_91746 : int) (_91747 : int) (h1 : term432 _91746 _91747) : False.
Proof. exact (or_elim (@lem6866540 _91746 _91747 h1) (fun h0 : term620 _91746 _91747 => @lem6866944 _91746 _91747 h0) (fun h0 : term621 _91746 _91747 => @lem6867509 _91746 _91747 h0)). Qed.
Lemma lem6867511 (_91746 : int) (_91747 : int) (h1 : term428 _91746 _91747) : term428 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6867512 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term622 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6867513 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term429 _91746 _91747.
Proof. exact (proj2 (@lem6867512 _91746 _91747 h1)). Qed.
Lemma lem6867515 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term380 _91746 _91747.
Proof. exact (proj2 (@lem6867513 _91746 _91747 h1)). Qed.
Lemma lem6867517 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term336 _91747.
Proof. exact (proj2 (@lem6867515 _91746 _91747 h1)). Qed.
Lemma lem6867519 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term302 _91747.
Proof. exact (proj2 (@lem6867517 _91746 _91747 h1)). Qed.
Lemma lem6867520 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (proj1 (@lem6867517 _91746 _91747 h1)). Qed.
Lemma lem6867522 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6867523 : term471 = term251.
Proof. exact (@lem6867522 term133 term143). Qed.
Lemma lem6867525 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867526 : term143 = term224.
Proof. exact (@lem6867525 term11). Qed.
Lemma lem6867528 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867529 : term133 = term196.
Proof. exact (@lem6867528 (NUMERAL 0)). Qed.
Lemma lem6867530 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867531 : term472 = term473.
Proof. exact (MK_COMB (@lem6867530) (@lem6867529)). Qed.
Lemma lem6867532 : term251 = term474.
Proof. exact (MK_COMB (@lem6867531) (@lem6867526)). Qed.
Lemma lem6867533 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6867535 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867536 : term251 = term252.
Proof. exact (@lem6867535 (NUMERAL 0) term11). Qed.
Lemma lem6867537 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867538 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867539 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867538 h1) (fun h1 : term252 = True => @lem6867537)). Qed.
Lemma lem6867540 : term252 = True.
Proof. exact (EQ_MP (@lem6867539) (@lem6867537)). Qed.
Lemma lem6867541 : term251 = True.
Proof. exact (TRANS (@lem6867536) (@lem6867540)). Qed.
Lemma lem6867542 : True = term251.
Proof. exact (SYM (@lem6867541)). Qed.
Lemma lem6867543 : term251.
Proof. exact (EQ_MP (@lem6867542) (@lem0)). Qed.
Lemma lem6867544 : term476.
Proof. exact (@lem6867533 (@lem6867543)). Qed.
Lemma lem6867546 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867547 : term251 = term252.
Proof. exact (@lem6867546 (NUMERAL 0) term11). Qed.
Lemma lem6867548 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867549 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867550 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867549 h1) (fun h1 : term252 = True => @lem6867548)). Qed.
Lemma lem6867551 : term252 = True.
Proof. exact (EQ_MP (@lem6867550) (@lem6867548)). Qed.
Lemma lem6867552 : term251 = True.
Proof. exact (TRANS (@lem6867547) (@lem6867551)). Qed.
Lemma lem6867553 : True = term251.
Proof. exact (SYM (@lem6867552)). Qed.
Lemma lem6867554 : term251.
Proof. exact (EQ_MP (@lem6867553) (@lem0)). Qed.
Lemma lem6867555 : term474 = term477.
Proof. exact (@lem6867544 (@lem6867554)). Qed.
Lemma lem6867557 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867558 : term208 = term209.
Proof. exact (@lem6867557 term11 term11). Qed.
Lemma lem6867559 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867560 : term211 = term11.
Proof. exact (EQ_MP (@lem6867559) (@lem940073)). Qed.
Lemma lem6867561 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867562 : term209 = term143.
Proof. exact (MK_COMB (@lem6867561) (@lem6867560)). Qed.
Lemma lem6867563 : term208 = term143.
Proof. exact (TRANS (@lem6867558) (@lem6867562)). Qed.
Lemma lem6867565 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867566 : term263 = term133.
Proof. exact (@lem6867565 term11). Qed.
Lemma lem6867567 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867568 : term478 = term472.
Proof. exact (MK_COMB (@lem6867567) (@lem6867566)). Qed.
Lemma lem6867569 : term477 = term251.
Proof. exact (MK_COMB (@lem6867568) (@lem6867563)). Qed.
Lemma lem6867571 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867572 : term251 = term252.
Proof. exact (@lem6867571 (NUMERAL 0) term11). Qed.
Lemma lem6867573 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867574 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867575 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867574 h1) (fun h1 : term252 = True => @lem6867573)). Qed.
Lemma lem6867576 : term252 = True.
Proof. exact (EQ_MP (@lem6867575) (@lem6867573)). Qed.
Lemma lem6867577 : term251 = True.
Proof. exact (TRANS (@lem6867572) (@lem6867576)). Qed.
Lemma lem6867578 : term477 = True.
Proof. exact (TRANS (@lem6867569) (@lem6867577)). Qed.
Lemma lem6867579 : term474 = True.
Proof. exact (TRANS (@lem6867555) (@lem6867578)). Qed.
Lemma lem6867580 : term251 = True.
Proof. exact (TRANS (@lem6867532) (@lem6867579)). Qed.
Lemma lem6867581 : term471 = True.
Proof. exact (TRANS (@lem6867523) (@lem6867580)). Qed.
Lemma lem6867582 : True = term471.
Proof. exact (SYM (@lem6867581)). Qed.
Lemma lem6867583 : term471.
Proof. exact (EQ_MP (@lem6867582) (@lem0)). Qed.
Lemma lem6867584 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term551 _91747.
Proof. exact (conj (@lem6867583) (@lem6867519 _91746 _91747 h1)). Qed.
Lemma lem6867586 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6867587 (_91747 : int) : term552 _91747.
Proof. exact (@lem6867586 term143 (term299 _91747)). Qed.
Lemma lem6867588 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term553 _91747.
Proof. exact (@lem6867587 _91747 (@lem6867584 _91746 _91747 h1)). Qed.
Lemma lem6867589 (_91747 : int) : (term554 _91747) = (term299 _91747).
Proof. exact (@lem1982733 (term299 _91747)). Qed.
Lemma lem6867590 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867591 (_91747 : int) : (term555 _91747) = (term301 _91747).
Proof. exact (MK_COMB (@lem6867590) (@lem6867589 _91747)). Qed.
Lemma lem6867592 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867593 (_91747 : int) : (term553 _91747) = (term302 _91747).
Proof. exact (MK_COMB (@lem6867591 _91747) (@lem6867592)). Qed.
Lemma lem6867594 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term302 _91747.
Proof. exact (EQ_MP (@lem6867593 _91747) (@lem6867588 _91746 _91747 h1)). Qed.
Lemma lem6867596 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6867597 (_91747 : int) : term539 _91747.
Proof. exact (@lem6867596 (real_of_int _91747)). Qed.
Lemma lem6867598 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term540 _91747.
Proof. exact (@lem6867597 _91747 (@lem6867520 _91746 _91747 h1)). Qed.
Lemma lem6867599 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term556 _91747.
Proof. exact (@lem6867598 _91746 _91747 h1 term199). Qed.
Lemma lem6867600 (_91747 : int) : (term556 _91747) = ((term237 _91747) = term133).
Proof. exact (eq_refl (term556 _91747)). Qed.
Lemma lem6867607 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : (term237 _91747) = term133.
Proof. exact (EQ_MP (@lem6867600 _91747) (@lem6867599 _91746 _91747 h1)). Qed.
Lemma lem6867608 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term623 _91747.
Proof. exact (conj (@lem6867607 _91746 _91747 h1) (@lem6867594 _91746 _91747 h1)). Qed.
Lemma lem6867610 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6867611 (_91747 : int) : term624 _91747.
Proof. exact (@lem6867610 (term237 _91747) (term299 _91747)). Qed.
Lemma lem6867612 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term572 _91747.
Proof. exact (@lem6867611 _91747 (@lem6867608 _91746 _91747 h1)). Qed.
Lemma lem6867613 (_91747 : int) : (term573 _91747) = (term574 _91747).
Proof. exact (@lem1982763 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6867614 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6867616 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867617 : term143 = term224.
Proof. exact (@lem6867616 term11). Qed.
Lemma lem6867619 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6867620 : term199 = term200.
Proof. exact (@lem6867619 term11). Qed.
Lemma lem6867621 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867622 : term499 = term500.
Proof. exact (MK_COMB (@lem6867621) (@lem6867620)). Qed.
Lemma lem6867623 : term501 = term502.
Proof. exact (MK_COMB (@lem6867622) (@lem6867617)). Qed.
Lemma lem6867624 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6867626 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867627 : term251 = term252.
Proof. exact (@lem6867626 (NUMERAL 0) term11). Qed.
Lemma lem6867628 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867629 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867630 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867629 h1) (fun h1 : term252 = True => @lem6867628)). Qed.
Lemma lem6867631 : term252 = True.
Proof. exact (EQ_MP (@lem6867630) (@lem6867628)). Qed.
Lemma lem6867632 : term251 = True.
Proof. exact (TRANS (@lem6867627) (@lem6867631)). Qed.
Lemma lem6867633 : True = term251.
Proof. exact (SYM (@lem6867632)). Qed.
Lemma lem6867634 : term251.
Proof. exact (EQ_MP (@lem6867633) (@lem0)). Qed.
Lemma lem6867635 : term504.
Proof. exact (@lem6867624 (@lem6867634)). Qed.
Lemma lem6867637 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867638 : term251 = term252.
Proof. exact (@lem6867637 (NUMERAL 0) term11). Qed.
Lemma lem6867639 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867640 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867641 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867640 h1) (fun h1 : term252 = True => @lem6867639)). Qed.
Lemma lem6867642 : term252 = True.
Proof. exact (EQ_MP (@lem6867641) (@lem6867639)). Qed.
Lemma lem6867643 : term251 = True.
Proof. exact (TRANS (@lem6867638) (@lem6867642)). Qed.
Lemma lem6867644 : True = term251.
Proof. exact (SYM (@lem6867643)). Qed.
Lemma lem6867645 : term251.
Proof. exact (EQ_MP (@lem6867644) (@lem0)). Qed.
Lemma lem6867646 : term505.
Proof. exact (@lem6867635 (@lem6867645)). Qed.
Lemma lem6867648 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867649 : term251 = term252.
Proof. exact (@lem6867648 (NUMERAL 0) term11). Qed.
Lemma lem6867650 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867651 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867652 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867651 h1) (fun h1 : term252 = True => @lem6867650)). Qed.
Lemma lem6867653 : term252 = True.
Proof. exact (EQ_MP (@lem6867652) (@lem6867650)). Qed.
Lemma lem6867654 : term251 = True.
Proof. exact (TRANS (@lem6867649) (@lem6867653)). Qed.
Lemma lem6867655 : True = term251.
Proof. exact (SYM (@lem6867654)). Qed.
Lemma lem6867656 : term251.
Proof. exact (EQ_MP (@lem6867655) (@lem0)). Qed.
Lemma lem6867657 : term506.
Proof. exact (@lem6867646 (@lem6867656)). Qed.
Lemma lem6867659 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867660 : term208 = term209.
Proof. exact (@lem6867659 term11 term11). Qed.
Lemma lem6867661 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867662 : term211 = term11.
Proof. exact (EQ_MP (@lem6867661) (@lem940073)). Qed.
Lemma lem6867663 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867664 : term209 = term143.
Proof. exact (MK_COMB (@lem6867663) (@lem6867662)). Qed.
Lemma lem6867665 : term208 = term143.
Proof. exact (TRANS (@lem6867660) (@lem6867664)). Qed.
Lemma lem6867667 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6867668 : term225 = term230.
Proof. exact (@lem6867667 term11 term11). Qed.
Lemma lem6867669 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867670 : term211 = term11.
Proof. exact (EQ_MP (@lem6867669) (@lem940073)). Qed.
Lemma lem6867671 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867672 : term209 = term143.
Proof. exact (MK_COMB (@lem6867671) (@lem6867670)). Qed.
Lemma lem6867673 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6867674 : term230 = term199.
Proof. exact (MK_COMB (@lem6867673) (@lem6867672)). Qed.
Lemma lem6867675 : term225 = term199.
Proof. exact (TRANS (@lem6867668) (@lem6867674)). Qed.
Lemma lem6867676 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867677 : term507 = term499.
Proof. exact (MK_COMB (@lem6867676) (@lem6867675)). Qed.
Lemma lem6867678 : term508 = term501.
Proof. exact (MK_COMB (@lem6867677) (@lem6867665)). Qed.
Lemma lem6867680 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6867681 : term501 = term133.
Proof. exact (@lem6867680 term11). Qed.
Lemma lem6867682 : term508 = term133.
Proof. exact (TRANS (@lem6867678) (@lem6867681)). Qed.
Lemma lem6867683 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867684 : term510 = term261.
Proof. exact (MK_COMB (@lem6867683) (@lem6867682)). Qed.
Lemma lem6867685 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6867686 : term511 = term263.
Proof. exact (MK_COMB (@lem6867684) (@lem6867685)). Qed.
Lemma lem6867688 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867689 : term263 = term133.
Proof. exact (@lem6867688 term11). Qed.
Lemma lem6867690 : term511 = term133.
Proof. exact (TRANS (@lem6867686) (@lem6867689)). Qed.
Lemma lem6867692 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867693 : term208 = term209.
Proof. exact (@lem6867692 term11 term11). Qed.
Lemma lem6867694 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867695 : term211 = term11.
Proof. exact (EQ_MP (@lem6867694) (@lem940073)). Qed.
Lemma lem6867696 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867697 : term209 = term143.
Proof. exact (MK_COMB (@lem6867696) (@lem6867695)). Qed.
Lemma lem6867698 : term208 = term143.
Proof. exact (TRANS (@lem6867693) (@lem6867697)). Qed.
Lemma lem6867699 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6867700 : term265 = term263.
Proof. exact (MK_COMB (@lem6867699) (@lem6867698)). Qed.
Lemma lem6867702 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867703 : term263 = term133.
Proof. exact (@lem6867702 term11). Qed.
Lemma lem6867704 : term265 = term133.
Proof. exact (TRANS (@lem6867700) (@lem6867703)). Qed.
Lemma lem6867705 : term133 = term265.
Proof. exact (SYM (@lem6867704)). Qed.
Lemma lem6867706 : term511 = term265.
Proof. exact (TRANS (@lem6867690) (@lem6867705)). Qed.
Lemma lem6867707 : term502 = term196.
Proof. exact (@lem6867657 (@lem6867706)). Qed.
Lemma lem6867708 : term501 = term196.
Proof. exact (TRANS (@lem6867623) (@lem6867707)). Qed.
Lemma lem6867710 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6867711 : term196 = term133.
Proof. exact (@lem6867710 term133). Qed.
Lemma lem6867712 : term501 = term133.
Proof. exact (TRANS (@lem6867708) (@lem6867711)). Qed.
Lemma lem6867713 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867714 : term512 = term261.
Proof. exact (MK_COMB (@lem6867713) (@lem6867712)). Qed.
Lemma lem6867715 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6867716 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6867714) (@lem6867715 _91747)). Qed.
Lemma lem6867717 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6867614 _91747) (@lem6867716 _91747)). Qed.
Lemma lem6867718 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6867719 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6867717 _91747) (@lem6867718 _91747)). Qed.
Lemma lem6867720 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867721 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6867720) (@lem6867719 _91747)). Qed.
Lemma lem6867722 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6867723 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6867721 _91747) (@lem6867722)). Qed.
Lemma lem6867724 (_91747 : int) : (term573 _91747) = term519.
Proof. exact (TRANS (@lem6867613 _91747) (@lem6867723 _91747)). Qed.
Lemma lem6867725 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6867726 (_91747 : int) : (term573 _91747) = term199.
Proof. exact (TRANS (@lem6867724 _91747) (@lem6867725)). Qed.
Lemma lem6867727 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867728 (_91747 : int) : (term575 _91747) = term521.
Proof. exact (MK_COMB (@lem6867727) (@lem6867726 _91747)). Qed.
Lemma lem6867729 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867730 (_91747 : int) : (term572 _91747) = term522.
Proof. exact (MK_COMB (@lem6867728 _91747) (@lem6867729)). Qed.
Lemma lem6867731 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6867730 _91747) (@lem6867612 _91746 _91747 h1)). Qed.
Lemma lem6867733 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6867734 : term522 = term523.
Proof. exact (@lem6867733 term133 term199). Qed.
Lemma lem6867736 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6867737 : term199 = term200.
Proof. exact (@lem6867736 term11). Qed.
Lemma lem6867739 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867740 : term133 = term196.
Proof. exact (@lem6867739 (NUMERAL 0)). Qed.
Lemma lem6867741 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6867742 : term135 = term524.
Proof. exact (MK_COMB (@lem6867741) (@lem6867740)). Qed.
Lemma lem6867743 : term523 = term525.
Proof. exact (MK_COMB (@lem6867742) (@lem6867737)). Qed.
Lemma lem6867744 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6867746 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867747 : term251 = term252.
Proof. exact (@lem6867746 (NUMERAL 0) term11). Qed.
Lemma lem6867748 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867749 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867750 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867749 h1) (fun h1 : term252 = True => @lem6867748)). Qed.
Lemma lem6867751 : term252 = True.
Proof. exact (EQ_MP (@lem6867750) (@lem6867748)). Qed.
Lemma lem6867752 : term251 = True.
Proof. exact (TRANS (@lem6867747) (@lem6867751)). Qed.
Lemma lem6867753 : True = term251.
Proof. exact (SYM (@lem6867752)). Qed.
Lemma lem6867754 : term251.
Proof. exact (EQ_MP (@lem6867753) (@lem0)). Qed.
Lemma lem6867755 : term527.
Proof. exact (@lem6867744 (@lem6867754)). Qed.
Lemma lem6867757 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867758 : term251 = term252.
Proof. exact (@lem6867757 (NUMERAL 0) term11). Qed.
Lemma lem6867759 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867760 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867761 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867760 h1) (fun h1 : term252 = True => @lem6867759)). Qed.
Lemma lem6867762 : term252 = True.
Proof. exact (EQ_MP (@lem6867761) (@lem6867759)). Qed.
Lemma lem6867763 : term251 = True.
Proof. exact (TRANS (@lem6867758) (@lem6867762)). Qed.
Lemma lem6867764 : True = term251.
Proof. exact (SYM (@lem6867763)). Qed.
Lemma lem6867765 : term251.
Proof. exact (EQ_MP (@lem6867764) (@lem0)). Qed.
Lemma lem6867766 : term525 = term528.
Proof. exact (@lem6867755 (@lem6867765)). Qed.
Lemma lem6867768 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6867769 : term225 = term230.
Proof. exact (@lem6867768 term11 term11). Qed.
Lemma lem6867770 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867771 : term211 = term11.
Proof. exact (EQ_MP (@lem6867770) (@lem940073)). Qed.
Lemma lem6867772 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867773 : term209 = term143.
Proof. exact (MK_COMB (@lem6867772) (@lem6867771)). Qed.
Lemma lem6867774 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6867775 : term230 = term199.
Proof. exact (MK_COMB (@lem6867774) (@lem6867773)). Qed.
Lemma lem6867776 : term225 = term199.
Proof. exact (TRANS (@lem6867769) (@lem6867775)). Qed.
Lemma lem6867778 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867779 : term263 = term133.
Proof. exact (@lem6867778 term11). Qed.
Lemma lem6867780 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6867781 : term529 = term135.
Proof. exact (MK_COMB (@lem6867780) (@lem6867779)). Qed.
Lemma lem6867782 : term528 = term523.
Proof. exact (MK_COMB (@lem6867781) (@lem6867776)). Qed.
Lemma lem6867784 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6867785 : term523 = term532.
Proof. exact (@lem6867784 (NUMERAL 0) term11). Qed.
Lemma lem6867786 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867787 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6867788 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867787 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6867786)). Qed.
Lemma lem6867789 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6867788) (@lem6867786)). Qed.
Lemma lem6867790 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6867791 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6867792 : term533 = (and True).
Proof. exact (MK_COMB (@lem6867791) (@lem6867790)). Qed.
Lemma lem6867793 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6867792) (@lem6867789)). Qed.
Lemma lem6867795 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6867796 : term532 = False.
Proof. exact (TRANS (@lem6867793) (@lem6867795)). Qed.
Lemma lem6867797 : term523 = False.
Proof. exact (TRANS (@lem6867785) (@lem6867796)). Qed.
Lemma lem6867798 : term528 = False.
Proof. exact (TRANS (@lem6867782) (@lem6867797)). Qed.
Lemma lem6867799 : term525 = False.
Proof. exact (TRANS (@lem6867766) (@lem6867798)). Qed.
Lemma lem6867800 : term523 = False.
Proof. exact (TRANS (@lem6867743) (@lem6867799)). Qed.
Lemma lem6867801 : term522 = False.
Proof. exact (TRANS (@lem6867734) (@lem6867800)). Qed.
Lemma lem6867802 (_91746 : int) (_91747 : int) (h1 : term622 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6867801) (@lem6867731 _91746 _91747 h1)). Qed.
Lemma lem6867803 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term625 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6867804 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term430 _91746 _91747.
Proof. exact (proj2 (@lem6867803 _91746 _91747 h1)). Qed.
Lemma lem6867806 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term381 _91746 _91747.
Proof. exact (proj2 (@lem6867804 _91746 _91747 h1)). Qed.
Lemma lem6867808 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term336 _91747.
Proof. exact (proj2 (@lem6867806 _91746 _91747 h1)). Qed.
Lemma lem6867812 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term302 _91747.
Proof. exact (proj2 (@lem6867808 _91746 _91747 h1)). Qed.
Lemma lem6867813 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : (real_of_int _91747) = term133.
Proof. exact (proj1 (@lem6867808 _91746 _91747 h1)). Qed.
Lemma lem6867815 (y : real) (x : real) : (real_gt x y) = (real_lt y x).
Proof. exact (EQ_MP (@lem1980266 y x) (@lem1980265 y x)). Qed.
Lemma lem6867816 : term471 = term251.
Proof. exact (@lem6867815 term133 term143). Qed.
Lemma lem6867818 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867819 : term143 = term224.
Proof. exact (@lem6867818 term11). Qed.
Lemma lem6867821 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867822 : term133 = term196.
Proof. exact (@lem6867821 (NUMERAL 0)). Qed.
Lemma lem6867823 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867824 : term472 = term473.
Proof. exact (MK_COMB (@lem6867823) (@lem6867822)). Qed.
Lemma lem6867825 : term251 = term474.
Proof. exact (MK_COMB (@lem6867824) (@lem6867819)). Qed.
Lemma lem6867826 : term475.
Proof. exact (@lem1980255 term133 term143 term143 term143). Qed.
Lemma lem6867828 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867829 : term251 = term252.
Proof. exact (@lem6867828 (NUMERAL 0) term11). Qed.
Lemma lem6867830 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867831 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867832 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867831 h1) (fun h1 : term252 = True => @lem6867830)). Qed.
Lemma lem6867833 : term252 = True.
Proof. exact (EQ_MP (@lem6867832) (@lem6867830)). Qed.
Lemma lem6867834 : term251 = True.
Proof. exact (TRANS (@lem6867829) (@lem6867833)). Qed.
Lemma lem6867835 : True = term251.
Proof. exact (SYM (@lem6867834)). Qed.
Lemma lem6867836 : term251.
Proof. exact (EQ_MP (@lem6867835) (@lem0)). Qed.
Lemma lem6867837 : term476.
Proof. exact (@lem6867826 (@lem6867836)). Qed.
Lemma lem6867839 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867840 : term251 = term252.
Proof. exact (@lem6867839 (NUMERAL 0) term11). Qed.
Lemma lem6867841 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867842 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867843 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867842 h1) (fun h1 : term252 = True => @lem6867841)). Qed.
Lemma lem6867844 : term252 = True.
Proof. exact (EQ_MP (@lem6867843) (@lem6867841)). Qed.
Lemma lem6867845 : term251 = True.
Proof. exact (TRANS (@lem6867840) (@lem6867844)). Qed.
Lemma lem6867846 : True = term251.
Proof. exact (SYM (@lem6867845)). Qed.
Lemma lem6867847 : term251.
Proof. exact (EQ_MP (@lem6867846) (@lem0)). Qed.
Lemma lem6867848 : term474 = term477.
Proof. exact (@lem6867837 (@lem6867847)). Qed.
Lemma lem6867850 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867851 : term208 = term209.
Proof. exact (@lem6867850 term11 term11). Qed.
Lemma lem6867852 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867853 : term211 = term11.
Proof. exact (EQ_MP (@lem6867852) (@lem940073)). Qed.
Lemma lem6867854 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867855 : term209 = term143.
Proof. exact (MK_COMB (@lem6867854) (@lem6867853)). Qed.
Lemma lem6867856 : term208 = term143.
Proof. exact (TRANS (@lem6867851) (@lem6867855)). Qed.
Lemma lem6867858 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867859 : term263 = term133.
Proof. exact (@lem6867858 term11). Qed.
Lemma lem6867860 : real_lt = real_lt.
Proof. exact (eq_refl real_lt). Qed.
Lemma lem6867861 : term478 = term472.
Proof. exact (MK_COMB (@lem6867860) (@lem6867859)). Qed.
Lemma lem6867862 : term477 = term251.
Proof. exact (MK_COMB (@lem6867861) (@lem6867856)). Qed.
Lemma lem6867864 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867865 : term251 = term252.
Proof. exact (@lem6867864 (NUMERAL 0) term11). Qed.
Lemma lem6867866 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867867 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867868 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867867 h1) (fun h1 : term252 = True => @lem6867866)). Qed.
Lemma lem6867869 : term252 = True.
Proof. exact (EQ_MP (@lem6867868) (@lem6867866)). Qed.
Lemma lem6867870 : term251 = True.
Proof. exact (TRANS (@lem6867865) (@lem6867869)). Qed.
Lemma lem6867871 : term477 = True.
Proof. exact (TRANS (@lem6867862) (@lem6867870)). Qed.
Lemma lem6867872 : term474 = True.
Proof. exact (TRANS (@lem6867848) (@lem6867871)). Qed.
Lemma lem6867873 : term251 = True.
Proof. exact (TRANS (@lem6867825) (@lem6867872)). Qed.
Lemma lem6867874 : term471 = True.
Proof. exact (TRANS (@lem6867816) (@lem6867873)). Qed.
Lemma lem6867875 : True = term471.
Proof. exact (SYM (@lem6867874)). Qed.
Lemma lem6867876 : term471.
Proof. exact (EQ_MP (@lem6867875) (@lem0)). Qed.
Lemma lem6867877 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term551 _91747.
Proof. exact (conj (@lem6867876) (@lem6867812 _91746 _91747 h1)). Qed.
Lemma lem6867879 (x : real) (y : real) : term480 x y.
Proof. exact (proj1 (@lem1988332 x y)). Qed.
Lemma lem6867880 (_91747 : int) : term552 _91747.
Proof. exact (@lem6867879 term143 (term299 _91747)). Qed.
Lemma lem6867881 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term553 _91747.
Proof. exact (@lem6867880 _91747 (@lem6867877 _91746 _91747 h1)). Qed.
Lemma lem6867882 (_91747 : int) : (term554 _91747) = (term299 _91747).
Proof. exact (@lem1982733 (term299 _91747)). Qed.
Lemma lem6867883 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6867884 (_91747 : int) : (term555 _91747) = (term301 _91747).
Proof. exact (MK_COMB (@lem6867883) (@lem6867882 _91747)). Qed.
Lemma lem6867885 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6867886 (_91747 : int) : (term553 _91747) = (term302 _91747).
Proof. exact (MK_COMB (@lem6867884 _91747) (@lem6867885)). Qed.
Lemma lem6867887 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term302 _91747.
Proof. exact (EQ_MP (@lem6867886 _91747) (@lem6867881 _91746 _91747 h1)). Qed.
Lemma lem6867889 (y : real) : term485 y.
Proof. exact (EQ_MP (@lem1396750 y) (@lem0)). Qed.
Lemma lem6867890 (_91747 : int) : term539 _91747.
Proof. exact (@lem6867889 (real_of_int _91747)). Qed.
Lemma lem6867891 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term540 _91747.
Proof. exact (@lem6867890 _91747 (@lem6867813 _91746 _91747 h1)). Qed.
Lemma lem6867892 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term556 _91747.
Proof. exact (@lem6867891 _91746 _91747 h1 term199). Qed.
Lemma lem6867893 (_91747 : int) : (term556 _91747) = ((term237 _91747) = term133).
Proof. exact (eq_refl (term556 _91747)). Qed.
Lemma lem6867900 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : (term237 _91747) = term133.
Proof. exact (EQ_MP (@lem6867893 _91747) (@lem6867892 _91746 _91747 h1)). Qed.
Lemma lem6867901 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term623 _91747.
Proof. exact (conj (@lem6867900 _91746 _91747 h1) (@lem6867887 _91746 _91747 h1)). Qed.
Lemma lem6867903 (x : real) (y : real) : term492 x y.
Proof. exact (proj1 (@lem1988336 x y)). Qed.
Lemma lem6867904 (_91747 : int) : term624 _91747.
Proof. exact (@lem6867903 (term237 _91747) (term299 _91747)). Qed.
Lemma lem6867905 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term572 _91747.
Proof. exact (@lem6867904 _91747 (@lem6867901 _91746 _91747 h1)). Qed.
Lemma lem6867906 (_91747 : int) : (term573 _91747) = (term574 _91747).
Proof. exact (@lem1982763 (term237 _91747) (real_of_int _91747) term199). Qed.
Lemma lem6867907 (_91747 : int) : (term497 _91747) = (term498 _91747).
Proof. exact (@lem1982713 term199 (real_of_int _91747)). Qed.
Lemma lem6867909 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6867910 : term143 = term224.
Proof. exact (@lem6867909 term11). Qed.
Lemma lem6867912 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6867913 : term199 = term200.
Proof. exact (@lem6867912 term11). Qed.
Lemma lem6867914 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867915 : term499 = term500.
Proof. exact (MK_COMB (@lem6867914) (@lem6867913)). Qed.
Lemma lem6867916 : term501 = term502.
Proof. exact (MK_COMB (@lem6867915) (@lem6867910)). Qed.
Lemma lem6867917 : term503.
Proof. exact (@lem1981473 term199 term143 term143 term143 term133 term143). Qed.
Lemma lem6867919 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867920 : term251 = term252.
Proof. exact (@lem6867919 (NUMERAL 0) term11). Qed.
Lemma lem6867921 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867922 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867923 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867922 h1) (fun h1 : term252 = True => @lem6867921)). Qed.
Lemma lem6867924 : term252 = True.
Proof. exact (EQ_MP (@lem6867923) (@lem6867921)). Qed.
Lemma lem6867925 : term251 = True.
Proof. exact (TRANS (@lem6867920) (@lem6867924)). Qed.
Lemma lem6867926 : True = term251.
Proof. exact (SYM (@lem6867925)). Qed.
Lemma lem6867927 : term251.
Proof. exact (EQ_MP (@lem6867926) (@lem0)). Qed.
Lemma lem6867928 : term504.
Proof. exact (@lem6867917 (@lem6867927)). Qed.
Lemma lem6867930 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867931 : term251 = term252.
Proof. exact (@lem6867930 (NUMERAL 0) term11). Qed.
Lemma lem6867932 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867933 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867934 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867933 h1) (fun h1 : term252 = True => @lem6867932)). Qed.
Lemma lem6867935 : term252 = True.
Proof. exact (EQ_MP (@lem6867934) (@lem6867932)). Qed.
Lemma lem6867936 : term251 = True.
Proof. exact (TRANS (@lem6867931) (@lem6867935)). Qed.
Lemma lem6867937 : True = term251.
Proof. exact (SYM (@lem6867936)). Qed.
Lemma lem6867938 : term251.
Proof. exact (EQ_MP (@lem6867937) (@lem0)). Qed.
Lemma lem6867939 : term505.
Proof. exact (@lem6867928 (@lem6867938)). Qed.
Lemma lem6867941 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6867942 : term251 = term252.
Proof. exact (@lem6867941 (NUMERAL 0) term11). Qed.
Lemma lem6867943 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6867944 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6867945 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6867944 h1) (fun h1 : term252 = True => @lem6867943)). Qed.
Lemma lem6867946 : term252 = True.
Proof. exact (EQ_MP (@lem6867945) (@lem6867943)). Qed.
Lemma lem6867947 : term251 = True.
Proof. exact (TRANS (@lem6867942) (@lem6867946)). Qed.
Lemma lem6867948 : True = term251.
Proof. exact (SYM (@lem6867947)). Qed.
Lemma lem6867949 : term251.
Proof. exact (EQ_MP (@lem6867948) (@lem0)). Qed.
Lemma lem6867950 : term506.
Proof. exact (@lem6867939 (@lem6867949)). Qed.
Lemma lem6867952 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867953 : term208 = term209.
Proof. exact (@lem6867952 term11 term11). Qed.
Lemma lem6867954 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867955 : term211 = term11.
Proof. exact (EQ_MP (@lem6867954) (@lem940073)). Qed.
Lemma lem6867956 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867957 : term209 = term143.
Proof. exact (MK_COMB (@lem6867956) (@lem6867955)). Qed.
Lemma lem6867958 : term208 = term143.
Proof. exact (TRANS (@lem6867953) (@lem6867957)). Qed.
Lemma lem6867960 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6867961 : term225 = term230.
Proof. exact (@lem6867960 term11 term11). Qed.
Lemma lem6867962 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867963 : term211 = term11.
Proof. exact (EQ_MP (@lem6867962) (@lem940073)). Qed.
Lemma lem6867964 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867965 : term209 = term143.
Proof. exact (MK_COMB (@lem6867964) (@lem6867963)). Qed.
Lemma lem6867966 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6867967 : term230 = term199.
Proof. exact (MK_COMB (@lem6867966) (@lem6867965)). Qed.
Lemma lem6867968 : term225 = term199.
Proof. exact (TRANS (@lem6867961) (@lem6867967)). Qed.
Lemma lem6867969 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6867970 : term507 = term499.
Proof. exact (MK_COMB (@lem6867969) (@lem6867968)). Qed.
Lemma lem6867971 : term508 = term501.
Proof. exact (MK_COMB (@lem6867970) (@lem6867958)). Qed.
Lemma lem6867973 (m : nat) : (term509 m) = term133.
Proof. exact (proj1 (@lem1367303 m)). Qed.
Lemma lem6867974 : term501 = term133.
Proof. exact (@lem6867973 term11). Qed.
Lemma lem6867975 : term508 = term133.
Proof. exact (TRANS (@lem6867971) (@lem6867974)). Qed.
Lemma lem6867976 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6867977 : term510 = term261.
Proof. exact (MK_COMB (@lem6867976) (@lem6867975)). Qed.
Lemma lem6867978 : term143 = term143.
Proof. exact (eq_refl term143). Qed.
Lemma lem6867979 : term511 = term263.
Proof. exact (MK_COMB (@lem6867977) (@lem6867978)). Qed.
Lemma lem6867981 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867982 : term263 = term133.
Proof. exact (@lem6867981 term11). Qed.
Lemma lem6867983 : term511 = term133.
Proof. exact (TRANS (@lem6867979) (@lem6867982)). Qed.
Lemma lem6867985 (m : nat) (n : nat) : (term206 m n) = (term207 m n).
Proof. exact (proj1 (@lem1367248 m n)). Qed.
Lemma lem6867986 : term208 = term209.
Proof. exact (@lem6867985 term11 term11). Qed.
Lemma lem6867987 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6867988 : term211 = term11.
Proof. exact (EQ_MP (@lem6867987) (@lem940073)). Qed.
Lemma lem6867989 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6867990 : term209 = term143.
Proof. exact (MK_COMB (@lem6867989) (@lem6867988)). Qed.
Lemma lem6867991 : term208 = term143.
Proof. exact (TRANS (@lem6867986) (@lem6867990)). Qed.
Lemma lem6867992 : term261 = term261.
Proof. exact (eq_refl term261). Qed.
Lemma lem6867993 : term265 = term263.
Proof. exact (MK_COMB (@lem6867992) (@lem6867991)). Qed.
Lemma lem6867995 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6867996 : term263 = term133.
Proof. exact (@lem6867995 term11). Qed.
Lemma lem6867997 : term265 = term133.
Proof. exact (TRANS (@lem6867993) (@lem6867996)). Qed.
Lemma lem6867998 : term133 = term265.
Proof. exact (SYM (@lem6867997)). Qed.
Lemma lem6867999 : term511 = term265.
Proof. exact (TRANS (@lem6867983) (@lem6867998)). Qed.
Lemma lem6868000 : term502 = term196.
Proof. exact (@lem6867950 (@lem6867999)). Qed.
Lemma lem6868001 : term501 = term196.
Proof. exact (TRANS (@lem6867916) (@lem6868000)). Qed.
Lemma lem6868003 (x : real) : (term215 x) = x.
Proof. exact (EQ_MP (@lem1981475 x) (@lem1981474 x)). Qed.
Lemma lem6868004 : term196 = term133.
Proof. exact (@lem6868003 term133). Qed.
Lemma lem6868005 : term501 = term133.
Proof. exact (TRANS (@lem6868001) (@lem6868004)). Qed.
Lemma lem6868006 : real_mul = real_mul.
Proof. exact (eq_refl real_mul). Qed.
Lemma lem6868007 : term512 = term261.
Proof. exact (MK_COMB (@lem6868006) (@lem6868005)). Qed.
Lemma lem6868008 (_91747 : int) : (real_of_int _91747) = (real_of_int _91747).
Proof. exact (eq_refl (real_of_int _91747)). Qed.
Lemma lem6868009 (_91747 : int) : (term498 _91747) = (term513 _91747).
Proof. exact (MK_COMB (@lem6868007) (@lem6868008 _91747)). Qed.
Lemma lem6868010 (_91747 : int) : (term497 _91747) = (term513 _91747).
Proof. exact (TRANS (@lem6867907 _91747) (@lem6868009 _91747)). Qed.
Lemma lem6868011 (_91747 : int) : (term513 _91747) = term133.
Proof. exact (@lem1982719 (real_of_int _91747)). Qed.
Lemma lem6868012 (_91747 : int) : (term497 _91747) = term133.
Proof. exact (TRANS (@lem6868010 _91747) (@lem6868011 _91747)). Qed.
Lemma lem6868013 : real_add = real_add.
Proof. exact (eq_refl real_add). Qed.
Lemma lem6868014 (_91747 : int) : (term514 _91747) = term175.
Proof. exact (MK_COMB (@lem6868013) (@lem6868012 _91747)). Qed.
Lemma lem6868015 : term199 = term199.
Proof. exact (eq_refl term199). Qed.
Lemma lem6868016 (_91747 : int) : (term574 _91747) = term519.
Proof. exact (MK_COMB (@lem6868014 _91747) (@lem6868015)). Qed.
Lemma lem6868017 (_91747 : int) : (term573 _91747) = term519.
Proof. exact (TRANS (@lem6867906 _91747) (@lem6868016 _91747)). Qed.
Lemma lem6868018 : term519 = term199.
Proof. exact (@lem1982721 term199). Qed.
Lemma lem6868019 (_91747 : int) : (term573 _91747) = term199.
Proof. exact (TRANS (@lem6868017 _91747) (@lem6868018)). Qed.
Lemma lem6868020 : real_ge = real_ge.
Proof. exact (eq_refl real_ge). Qed.
Lemma lem6868021 (_91747 : int) : (term575 _91747) = term521.
Proof. exact (MK_COMB (@lem6868020) (@lem6868019 _91747)). Qed.
Lemma lem6868022 : term133 = term133.
Proof. exact (eq_refl term133). Qed.
Lemma lem6868023 (_91747 : int) : (term572 _91747) = term522.
Proof. exact (MK_COMB (@lem6868021 _91747) (@lem6868022)). Qed.
Lemma lem6868024 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : term522.
Proof. exact (EQ_MP (@lem6868023 _91747) (@lem6867905 _91746 _91747 h1)). Qed.
Lemma lem6868026 (y : real) (x : real) : (real_ge x y) = (real_le y x).
Proof. exact (EQ_MP (@lem1980260 y x) (@lem1980259 y x)). Qed.
Lemma lem6868027 : term522 = term523.
Proof. exact (@lem6868026 term133 term199). Qed.
Lemma lem6868029 (x : nat) : (term197 x) = (term198 x).
Proof. exact (proj1 (@lem1980011 x (@el nat))). Qed.
Lemma lem6868030 : term199 = term200.
Proof. exact (@lem6868029 term11). Qed.
Lemma lem6868032 (x : nat) : (real_of_num x) = (term195 x).
Proof. exact (proj1 (@lem1980010 x (@el nat))). Qed.
Lemma lem6868033 : term133 = term196.
Proof. exact (@lem6868032 (NUMERAL 0)). Qed.
Lemma lem6868034 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6868035 : term135 = term524.
Proof. exact (MK_COMB (@lem6868034) (@lem6868033)). Qed.
Lemma lem6868036 : term523 = term525.
Proof. exact (MK_COMB (@lem6868035) (@lem6868030)). Qed.
Lemma lem6868037 : term526.
Proof. exact (@lem1980026 term133 term143 term199 term143). Qed.
Lemma lem6868039 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6868040 : term251 = term252.
Proof. exact (@lem6868039 (NUMERAL 0) term11). Qed.
Lemma lem6868041 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6868042 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6868043 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6868042 h1) (fun h1 : term252 = True => @lem6868041)). Qed.
Lemma lem6868044 : term252 = True.
Proof. exact (EQ_MP (@lem6868043) (@lem6868041)). Qed.
Lemma lem6868045 : term251 = True.
Proof. exact (TRANS (@lem6868040) (@lem6868044)). Qed.
Lemma lem6868046 : True = term251.
Proof. exact (SYM (@lem6868045)). Qed.
Lemma lem6868047 : term251.
Proof. exact (EQ_MP (@lem6868046) (@lem0)). Qed.
Lemma lem6868048 : term527.
Proof. exact (@lem6868037 (@lem6868047)). Qed.
Lemma lem6868050 (m : nat) (n : nat) : (term250 m n) = (Peano.lt m n).
Proof. exact (proj1 (@lem1365721 m n)). Qed.
Lemma lem6868051 : term251 = term252.
Proof. exact (@lem6868050 (NUMERAL 0) term11). Qed.
Lemma lem6868052 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6868053 (h1 : term253 = (BIT1 0)) : term252 = True.
Proof. exact (@lem1009824 0 0 (BIT1 0) h1). Qed.
Lemma lem6868054 : (term253 = (BIT1 0)) = (term252 = True).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6868053 h1) (fun h1 : term252 = True => @lem6868052)). Qed.
Lemma lem6868055 : term252 = True.
Proof. exact (EQ_MP (@lem6868054) (@lem6868052)). Qed.
Lemma lem6868056 : term251 = True.
Proof. exact (TRANS (@lem6868051) (@lem6868055)). Qed.
Lemma lem6868057 : True = term251.
Proof. exact (SYM (@lem6868056)). Qed.
Lemma lem6868058 : term251.
Proof. exact (EQ_MP (@lem6868057) (@lem0)). Qed.
Lemma lem6868059 : term525 = term528.
Proof. exact (@lem6868048 (@lem6868058)). Qed.
Lemma lem6868061 (m : nat) (n : nat) : (term228 m n) = (term229 m n).
Proof. exact (proj1 (@lem1367247 m n)). Qed.
Lemma lem6868062 : term225 = term230.
Proof. exact (@lem6868061 term11 term11). Qed.
Lemma lem6868063 : (term210 = (BIT1 0)) = (term211 = term11).
Proof. exact (@lem1008952 (BIT1 0) (BIT1 0)). Qed.
Lemma lem6868064 : term211 = term11.
Proof. exact (EQ_MP (@lem6868063) (@lem940073)). Qed.
Lemma lem6868065 : real_of_num = real_of_num.
Proof. exact (eq_refl real_of_num). Qed.
Lemma lem6868066 : term209 = term143.
Proof. exact (MK_COMB (@lem6868065) (@lem6868064)). Qed.
Lemma lem6868067 : real_neg = real_neg.
Proof. exact (eq_refl real_neg). Qed.
Lemma lem6868068 : term230 = term199.
Proof. exact (MK_COMB (@lem6868067) (@lem6868066)). Qed.
Lemma lem6868069 : term225 = term199.
Proof. exact (TRANS (@lem6868062) (@lem6868068)). Qed.
Lemma lem6868071 (x : nat) : (term264 x) = term133.
Proof. exact (proj1 (@lem1367111 x)). Qed.
Lemma lem6868072 : term263 = term133.
Proof. exact (@lem6868071 term11). Qed.
Lemma lem6868073 : real_le = real_le.
Proof. exact (eq_refl real_le). Qed.
Lemma lem6868074 : term529 = term135.
Proof. exact (MK_COMB (@lem6868073) (@lem6868072)). Qed.
Lemma lem6868075 : term528 = term523.
Proof. exact (MK_COMB (@lem6868074) (@lem6868069)). Qed.
Lemma lem6868077 (m : nat) (n : nat) : (term530 m n) = (term531 m n).
Proof. exact (proj2 (@lem1365406 m n)). Qed.
Lemma lem6868078 : term523 = term532.
Proof. exact (@lem6868077 (NUMERAL 0) term11). Qed.
Lemma lem6868079 : term253 = (BIT1 0).
Proof. exact (@lem912739). Qed.
Lemma lem6868080 (h1 : term253 = (BIT1 0)) : (term11 = (NUMERAL 0)) = False.
Proof. exact (@lem1013352 0 0 (BIT1 0) h1). Qed.
Lemma lem6868081 : (term253 = (BIT1 0)) = ((term11 = (NUMERAL 0)) = False).
Proof. exact (prop_ext (fun h1 : term253 = (BIT1 0) => @lem6868080 h1) (fun h1 : (term11 = (NUMERAL 0)) = False => @lem6868079)). Qed.
Lemma lem6868082 : (term11 = (NUMERAL 0)) = False.
Proof. exact (EQ_MP (@lem6868081) (@lem6868079)). Qed.
Lemma lem6868083 : ((NUMERAL 0) = (NUMERAL 0)) = True.
Proof. exact (@lem1013364 0). Qed.
Lemma lem6868084 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6868085 : term533 = (and True).
Proof. exact (MK_COMB (@lem6868084) (@lem6868083)). Qed.
Lemma lem6868086 : term532 = (True /\ False).
Proof. exact (MK_COMB (@lem6868085) (@lem6868082)). Qed.
Lemma lem6868088 : (True /\ False) = False.
Proof. exact (proj1 (@lem1365106)). Qed.
Lemma lem6868089 : term532 = False.
Proof. exact (TRANS (@lem6868086) (@lem6868088)). Qed.
Lemma lem6868090 : term523 = False.
Proof. exact (TRANS (@lem6868078) (@lem6868089)). Qed.
Lemma lem6868091 : term528 = False.
Proof. exact (TRANS (@lem6868075) (@lem6868090)). Qed.
Lemma lem6868092 : term525 = False.
Proof. exact (TRANS (@lem6868059) (@lem6868091)). Qed.
Lemma lem6868093 : term523 = False.
Proof. exact (TRANS (@lem6868036) (@lem6868092)). Qed.
Lemma lem6868094 : term522 = False.
Proof. exact (TRANS (@lem6868027) (@lem6868093)). Qed.
Lemma lem6868095 (_91746 : int) (_91747 : int) (h1 : term625 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6868094) (@lem6868024 _91746 _91747 h1)). Qed.
Lemma lem6868096 (_91746 : int) (_91747 : int) (h1 : term428 _91746 _91747) : False.
Proof. exact (or_elim (@lem6867511 _91746 _91747 h1) (fun h0 : term622 _91746 _91747 => @lem6867802 _91746 _91747 h0) (fun h0 : term625 _91746 _91747 => @lem6868095 _91746 _91747 h0)). Qed.
Lemma lem6868097 (_91746 : int) (_91747 : int) (h1 : term437 _91746 _91747) : False.
Proof. exact (or_elim (@lem6866539 _91746 _91747 h1) (fun h0 : term432 _91746 _91747 => @lem6867510 _91746 _91747 h0) (fun h0 : term428 _91746 _91747 => @lem6868096 _91746 _91747 h0)). Qed.
Lemma lem6868098 (_91746 : int) (_91747 : int) (h1 : term453 _91746 _91747) : False.
Proof. exact (or_elim (@lem6865190 _91746 _91747 h1) (fun h0 : term450 _91746 _91747 => @lem6866538 _91746 _91747 h0) (fun h0 : term437 _91746 _91747 => @lem6868097 _91746 _91747 h0)). Qed.
Lemma lem6868099 (_91746 : int) (_91747 : int) (h1 : term469 _91746 _91747) : False.
Proof. exact (or_elim (@lem6862989 _91746 _91747 h1) (fun h0 : term466 _91746 _91747 => @lem6865189 _91746 _91747 h0) (fun h0 : term453 _91746 _91747 => @lem6868098 _91746 _91747 h0)). Qed.
Lemma lem6868101 (_91746 : int) (_91747 : int) (h1 : term469 _91746 _91747) : term469 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6868102 (_91746 : int) (_91747 : int) (h1 : term469 _91746 _91747) : (term469 _91746 _91747) = False.
Proof. exact (prop_ext (fun h2 : term469 _91746 _91747 => @lem6868099 _91746 _91747 h1) (fun h2 : False => @lem6868101 _91746 _91747 h1)). Qed.
Lemma lem6868103 (_91746 : int) (_91747 : int) (h1 : term469 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6868102 _91746 _91747 h1) (@lem6868101 _91746 _91747 h1)). Qed.
Lemma lem6868104 (_91746 : int) (_91747 : int) (h1 : term191 _91746 _91747) : term191 _91746 _91747.
Proof. exact (h1). Qed.
Lemma lem6868105 (_91746 : int) (_91747 : int) (h1 : term191 _91746 _91747) : term469 _91746 _91747.
Proof. exact (EQ_MP (@lem6862919 _91746 _91747) (@lem6868104 _91746 _91747 h1)). Qed.
Lemma lem6868106 (_91746 : int) (_91747 : int) (h1 : term191 _91746 _91747) : (term469 _91746 _91747) = False.
Proof. exact (prop_ext (fun h2 : term469 _91746 _91747 => @lem6868103 _91746 _91747 h2) (fun h2 : False => @lem6868105 _91746 _91747 h1)). Qed.
Lemma lem6868107 (_91746 : int) (_91747 : int) (h1 : term191 _91746 _91747) : False.
Proof. exact (EQ_MP (@lem6868106 _91746 _91747 h1) (@lem6868105 _91746 _91747 h1)). Qed.
Lemma lem6868108 (_91746 : int) (_91747 : int) : term626 _91746 _91747.
Proof. exact (fun h0 : term191 _91746 _91747 => @lem6868107 _91746 _91747 h0). Qed.
Lemma lem6868109 (_91746 : int) (_91747 : int) : term627 _91746 _91747.
Proof. exact (@lem1386578 (term628 _91746 _91747)). Qed.
Lemma lem6868112 (_91746 : int) (_91747 : int) : term628 _91746 _91747.
Proof. exact (@lem6868109 _91746 _91747 (@lem6868108 _91746 _91747)). Qed.
Lemma lem6868113 (_91746 : int) (_91747 : int) : (term189 _91746 _91747) = (term127 _91746 _91747).
Proof. exact (SYM (@lem6861858 _91746 _91747)). Qed.
Lemma lem6868114 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6868115 (_91746 : int) (_91747 : int) : (term628 _91746 _91747) = (term73 _91746 _91747).
Proof. exact (MK_COMB (@lem6868114) (@lem6868113 _91746 _91747)). Qed.
Lemma lem6868116 (_91746 : int) (_91747 : int) : term73 _91746 _91747.
Proof. exact (EQ_MP (@lem6868115 _91746 _91747) (@lem6868112 _91746 _91747)). Qed.
Lemma lem6868117 (_91746 : int) (_91747 : int) : term74 _91746 _91747.
Proof. exact (EQ_MP (@lem6861545 _91746 _91747) (@lem6868116 _91746 _91747)). Qed.
Lemma lem6868118 (d : nat) (n : nat) : term629 d n.
Proof. exact (@lem6868117 (int_of_num d) (int_of_num n)). Qed.
Lemma lem6868119 (d : nat) (n : nat) : term630 d n.
Proof. exact (@lem6868118 d n (@lem6861541 d)). Qed.
Lemma lem6868120 (d : nat) (n : nat) : term68 d n.
Proof. exact (@lem6868119 d n (@lem6861544 n)). Qed.
Lemma lem6868121 (n : nat) : term70 n.
Proof. exact (fun d : nat => @lem6868120 d n). Qed.
Lemma lem6868122 (n : nat) : (term70 n) = ((term7 n) = (term8 n)).
Proof. exact (SYM (@lem6861538 n)). Qed.
Lemma lem6868124 {A : Type'} (x : A) : term631 A x.
Proof. exact (@lem3205876 A x). Qed.
Lemma lem6868125 {A : Type'} (x : A) : (term631 A x) = (term632 A x).
Proof. exact (eq_refl (term631 A x)). Qed.
Lemma lem6868126 {A : Type'} (x : A) : term632 A x.
Proof. exact (EQ_MP (@lem6868125 A x) (@lem6868124 A x)). Qed.
Lemma lem6868127 {A : Type'} (x : A) (y : A) : term633 A x y.
Proof. exact (@lem6868126 A x y). Qed.
Lemma lem6868128 {A : Type'} (x : A) (y : A) : (term633 A x y) = ((term634 A x y) = (x = y)).
Proof. exact (eq_refl (term633 A x y)). Qed.
Lemma lem6868130 {A : Type'} (s : A -> Prop) : term635 A s.
Proof. exact (@lem3205495 A s). Qed.
Lemma lem6868131 {A : Type'} (s : A -> Prop) : (term635 A s) = (term636 A s).
Proof. exact (eq_refl (term635 A s)). Qed.
Lemma lem6868132 {A : Type'} (s : A -> Prop) : term636 A s.
Proof. exact (EQ_MP (@lem6868131 A s) (@lem6868130 A s)). Qed.
Lemma lem6868133 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term637 A s t.
Proof. exact (@lem6868132 A s t). Qed.
Lemma lem6868134 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term637 A s t) = (term638 A s t).
Proof. exact (eq_refl (term637 A s t)). Qed.
Lemma lem6868135 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term638 A s t.
Proof. exact (EQ_MP (@lem6868134 A s t) (@lem6868133 A s t)). Qed.
Lemma lem6868136 {A : Type'} (s : A -> Prop) (t : A -> Prop) (x : A) : term639 A s t x.
Proof. exact (@lem6868135 A s t x). Qed.
Lemma lem6868137 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term639 A s t x) = ((term640 A x s t) = (term641 A s x t)).
Proof. exact (eq_refl (term639 A s t x)). Qed.
Lemma lem6868145 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : (term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)) : (term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f).
Proof. exact (h1). Qed.
Lemma lem6868146 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : (term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)) : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f).
Proof. exact (SYM (@lem6868145 A K dom neut op ltle k f h1)). Qed.
Lemma lem6868147 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f)) : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f).
Proof. exact (h1). Qed.
Lemma lem6868148 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f)) : (term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f).
Proof. exact (SYM (@lem6868147 A K op ltle k dom neut f h1)). Qed.
Lemma lem6868149 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : ((term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f)) = ((@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f)).
Proof. exact (prop_ext (fun h1 : (term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle k f) => @lem6868146 A K dom neut op ltle k f h1) (fun h1 : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f) => @lem6868148 A K op ltle k dom neut f h1)). Qed.
Lemma lem6868150 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term643 A K dom neut op ltle k) = (term644 A K op ltle k dom neut).
Proof. exact (fun_ext (fun f : K -> A => @lem6868149 A K op ltle k dom neut f)). Qed.
Lemma lem6868151 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6868152 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term645 A K dom neut op ltle k) = (term646 A K op ltle k dom neut).
Proof. exact (MK_COMB (@lem6868151 A K) (@lem6868150 A K op ltle k dom neut)). Qed.
Lemma lem6868153 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term647 A K dom neut op ltle) = (term648 A K op ltle dom neut).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6868152 A K op ltle k dom neut)). Qed.
Lemma lem6868154 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6868155 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term649 A K dom neut op ltle) = (term650 A K op ltle dom neut).
Proof. exact (MK_COMB (@lem6868154 K) (@lem6868153 A K op ltle dom neut)). Qed.
Lemma lem6868156 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term651 A K dom neut op) = (term652 A K op dom neut).
Proof. exact (fun_ext (fun ltle : type1402 K => @lem6868155 A K op ltle dom neut)). Qed.
Lemma lem6868157 {K : Type'} : (@all (K -> K -> Prop)) = (@all (K -> K -> Prop)).
Proof. exact (eq_refl (@all (K -> K -> Prop))). Qed.
Lemma lem6868158 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term653 A K dom neut op) = (term654 A K op dom neut).
Proof. exact (MK_COMB (@lem6868157 K) (@lem6868156 A K op dom neut)). Qed.
Lemma lem6868159 {A K : Type'} (dom : A -> Prop) (neut : A) : (term655 A K dom neut) = (term656 A K dom neut).
Proof. exact (fun_ext (fun op : type1400 A => @lem6868158 A K op dom neut)). Qed.
Lemma lem6868160 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6868161 {A K : Type'} (dom : A -> Prop) (neut : A) : (term657 A K dom neut) = (term658 A K dom neut).
Proof. exact (MK_COMB (@lem6868160 A) (@lem6868159 A K dom neut)). Qed.
Lemma lem6868162 {A K : Type'} (dom : A -> Prop) : (term659 A K dom) = (term660 A K dom).
Proof. exact (fun_ext (fun neut : A => @lem6868161 A K dom neut)). Qed.
Lemma lem6868163 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6868164 {A K : Type'} (dom : A -> Prop) : (term661 A K dom) = (term662 A K dom).
Proof. exact (MK_COMB (@lem6868163 A) (@lem6868162 A K dom)). Qed.
Lemma lem6868165 {A K : Type'} : (term663 A K) = (term664 A K).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6868164 A K dom)). Qed.
Lemma lem6868166 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6868167 {A K : Type'} : (term665 A K) = (term666 A K).
Proof. exact (MK_COMB (@lem6868166 A) (@lem6868165 A K)). Qed.
Lemma lem6868168 {A K : Type'} : term666 A K.
Proof. exact (EQ_MP (@lem6868167 A K) (@lem6449238 A K)). Qed.
Lemma lem6868169 {A K : Type'} (dom : A -> Prop) : term667 A K dom.
Proof. exact (@lem6868168 A K dom). Qed.
Lemma lem6868170 {A K : Type'} (dom : A -> Prop) : (term667 A K dom) = (term662 A K dom).
Proof. exact (eq_refl (term667 A K dom)). Qed.
Lemma lem6868171 {A K : Type'} (dom : A -> Prop) : term662 A K dom.
Proof. exact (EQ_MP (@lem6868170 A K dom) (@lem6868169 A K dom)). Qed.
Lemma lem6868172 {A K : Type'} (dom : A -> Prop) (neut : A) : term668 A K dom neut.
Proof. exact (@lem6868171 A K dom neut). Qed.
Lemma lem6868173 {A K : Type'} (dom : A -> Prop) (neut : A) : (term668 A K dom neut) = (term658 A K dom neut).
Proof. exact (eq_refl (term668 A K dom neut)). Qed.
Lemma lem6868174 {A K : Type'} (dom : A -> Prop) (neut : A) : term658 A K dom neut.
Proof. exact (EQ_MP (@lem6868173 A K dom neut) (@lem6868172 A K dom neut)). Qed.
Lemma lem6868175 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term669 A K dom neut op.
Proof. exact (@lem6868174 A K dom neut op). Qed.
Lemma lem6868176 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term669 A K dom neut op) = (term654 A K op dom neut).
Proof. exact (eq_refl (term669 A K dom neut op)). Qed.
Lemma lem6868177 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : term654 A K op dom neut.
Proof. exact (EQ_MP (@lem6868176 A K op dom neut) (@lem6868175 A K dom neut op)). Qed.
Lemma lem6868178 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) : term670 A K op dom neut ltle.
Proof. exact (@lem6868177 A K op dom neut ltle). Qed.
Lemma lem6868179 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term670 A K op dom neut ltle) = (term650 A K op ltle dom neut).
Proof. exact (eq_refl (term670 A K op dom neut ltle)). Qed.
Lemma lem6868180 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term650 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6868179 A K op ltle dom neut) (@lem6868178 A K op dom neut ltle)). Qed.
Lemma lem6868181 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (k : K -> Prop) : term671 A K op ltle dom neut k.
Proof. exact (@lem6868180 A K op ltle dom neut k). Qed.
Lemma lem6868182 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term671 A K op ltle dom neut k) = (term646 A K op ltle k dom neut).
Proof. exact (eq_refl (term671 A K op ltle dom neut k)). Qed.
Lemma lem6868183 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : term646 A K op ltle k dom neut.
Proof. exact (EQ_MP (@lem6868182 A K op ltle k dom neut) (@lem6868181 A K op ltle dom neut k)). Qed.
Lemma lem6868184 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term672 A K op ltle k dom neut f.
Proof. exact (@lem6868183 A K op ltle k dom neut f). Qed.
Lemma lem6868185 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term672 A K op ltle k dom neut f) = ((@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f)).
Proof. exact (eq_refl (term672 A K op ltle k dom neut f)). Qed.
Lemma lem6868201 (p : Prop) : term673 p.
Proof. exact (@lem9851 p). Qed.
Lemma lem6868202 (p : Prop) : (term673 p) = (term674 p).
Proof. exact (eq_refl (term673 p)). Qed.
Lemma lem6868203 (p : Prop) : term674 p.
Proof. exact (EQ_MP (@lem6868202 p) (@lem6868201 p)). Qed.
Lemma lem6868204 (p : Prop) (h1 : p = True) : p = True.
Proof. exact (h1). Qed.
Lemma lem6868205 (p : Prop) (h1 : p = False) : p = False.
Proof. exact (h1). Qed.
Lemma lem6868220 (q : Prop) (r : Prop) : (term675 q r) = (term675 q r).
Proof. exact (eq_refl (term675 q r)). Qed.
Lemma lem6868221 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : (term676 q r p) = (term677 q r).
Proof. exact (MK_COMB (@lem6868220 q r) (@lem6868204 p h1)). Qed.
Lemma lem6868222 (q : Prop) (r : Prop) : (term677 q r) = (term678 q r).
Proof. exact (eq_refl (term677 q r)). Qed.
Lemma lem6868223 (q : Prop) (r : Prop) (p : Prop) : (term679 q r p) = (term679 q r p).
Proof. exact (eq_refl (term679 q r p)). Qed.
Lemma lem6868224 (p : Prop) (q : Prop) (r : Prop) : ((term676 q r p) = (term677 q r)) = ((term676 q r p) = (term678 q r)).
Proof. exact (MK_COMB (@lem6868223 q r p) (@lem6868222 q r)). Qed.
Lemma lem6868225 (p : Prop) (q : Prop) (r : Prop) : (term676 q r p) = (term680 p q r).
Proof. exact (eq_refl (term676 q r p)). Qed.
Lemma lem6868226 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6868227 (p : Prop) (q : Prop) (r : Prop) : (term679 q r p) = (term681 p q r).
Proof. exact (MK_COMB (@lem6868226) (@lem6868225 p q r)). Qed.
Lemma lem6868228 (q : Prop) (r : Prop) : (term678 q r) = (term678 q r).
Proof. exact (eq_refl (term678 q r)). Qed.
Lemma lem6868229 (p : Prop) (q : Prop) (r : Prop) : ((term676 q r p) = (term678 q r)) = ((term680 p q r) = (term678 q r)).
Proof. exact (MK_COMB (@lem6868227 p q r) (@lem6868228 q r)). Qed.
Lemma lem6868230 (p : Prop) (q : Prop) (r : Prop) : ((term676 q r p) = (term677 q r)) = ((term680 p q r) = (term678 q r)).
Proof. exact (TRANS (@lem6868224 p q r) (@lem6868229 p q r)). Qed.
Lemma lem6868231 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : (term680 p q r) = (term678 q r).
Proof. exact (EQ_MP (@lem6868230 p q r) (@lem6868221 q r p h1)). Qed.
Lemma lem6868232 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : (term678 q r) = (term680 p q r).
Proof. exact (SYM (@lem6868231 q r p h1)). Qed.
Lemma lem6868233 (q : Prop) (r : Prop) : (term675 q r) = (term675 q r).
Proof. exact (eq_refl (term675 q r)). Qed.
Lemma lem6868234 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : (term676 q r p) = (term682 q r).
Proof. exact (MK_COMB (@lem6868233 q r) (@lem6868205 p h1)). Qed.
Lemma lem6868235 (q : Prop) (r : Prop) : (term682 q r) = (term683 q r).
Proof. exact (eq_refl (term682 q r)). Qed.
Lemma lem6868236 (q : Prop) (r : Prop) (p : Prop) : (term679 q r p) = (term679 q r p).
Proof. exact (eq_refl (term679 q r p)). Qed.
Lemma lem6868237 (p : Prop) (q : Prop) (r : Prop) : ((term676 q r p) = (term682 q r)) = ((term676 q r p) = (term683 q r)).
Proof. exact (MK_COMB (@lem6868236 q r p) (@lem6868235 q r)). Qed.
Lemma lem6868238 (p : Prop) (q : Prop) (r : Prop) : (term676 q r p) = (term680 p q r).
Proof. exact (eq_refl (term676 q r p)). Qed.
Lemma lem6868239 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6868240 (p : Prop) (q : Prop) (r : Prop) : (term679 q r p) = (term681 p q r).
Proof. exact (MK_COMB (@lem6868239) (@lem6868238 p q r)). Qed.
Lemma lem6868241 (q : Prop) (r : Prop) : (term683 q r) = (term683 q r).
Proof. exact (eq_refl (term683 q r)). Qed.
Lemma lem6868242 (p : Prop) (q : Prop) (r : Prop) : ((term676 q r p) = (term683 q r)) = ((term680 p q r) = (term683 q r)).
Proof. exact (MK_COMB (@lem6868240 p q r) (@lem6868241 q r)). Qed.
Lemma lem6868243 (p : Prop) (q : Prop) (r : Prop) : ((term676 q r p) = (term682 q r)) = ((term680 p q r) = (term683 q r)).
Proof. exact (TRANS (@lem6868237 p q r) (@lem6868242 p q r)). Qed.
Lemma lem6868244 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : (term680 p q r) = (term683 q r).
Proof. exact (EQ_MP (@lem6868243 p q r) (@lem6868234 q r p h1)). Qed.
Lemma lem6868245 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : (term683 q r) = (term680 p q r).
Proof. exact (SYM (@lem6868244 q r p h1)). Qed.
Lemma lem6868251 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6868252 (r : Prop) : (True -> r) = r.
Proof. exact (@lem6868251 r). Qed.
Lemma lem6868253 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6868254 (r : Prop) : (term684 r) = (and r).
Proof. exact (MK_COMB (@lem6868253) (@lem6868252 r)). Qed.
Lemma lem6868257 (q : Prop) (r : Prop) : (q -> r) = (q -> r).
Proof. exact (eq_refl (q -> r)). Qed.
Lemma lem6868258 (q : Prop) (r : Prop) : (term685 q r) = (term686 q r).
Proof. exact (MK_COMB (@lem6868254 r) (@lem6868257 q r)). Qed.
Lemma lem6868261 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868262 (q : Prop) (r : Prop) : (term687 q r) = (term688 q r).
Proof. exact (MK_COMB (@lem6868261) (@lem6868258 q r)). Qed.
Lemma lem6868268 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem6868269 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868270 : term689 = (imp False).
Proof. exact (MK_COMB (@lem6868269) (@lem6868268)). Qed.
Lemma lem6868271 (q : Prop) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem6868272 (q : Prop) : (term690 q) = (False -> q).
Proof. exact (MK_COMB (@lem6868270) (@lem6868271 q)). Qed.
Lemma lem6868274 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6868275 (q : Prop) : (False -> q) = True.
Proof. exact (@lem6868274 q). Qed.
Lemma lem6868276 (q : Prop) : (term690 q) = True.
Proof. exact (TRANS (@lem6868272 q) (@lem6868275 q)). Qed.
Lemma lem6868277 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868278 (q : Prop) : (term691 q) = (imp True).
Proof. exact (MK_COMB (@lem6868277) (@lem6868276 q)). Qed.
Lemma lem6868279 (r : Prop) : r = r.
Proof. exact (eq_refl r). Qed.
Lemma lem6868280 (q : Prop) (r : Prop) : (term692 q r) = (True -> r).
Proof. exact (MK_COMB (@lem6868278 q) (@lem6868279 r)). Qed.
Lemma lem6868282 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6868283 (r : Prop) : (True -> r) = r.
Proof. exact (@lem6868282 r). Qed.
Lemma lem6868284 (q : Prop) (r : Prop) : (term692 q r) = r.
Proof. exact (TRANS (@lem6868280 q r) (@lem6868283 r)). Qed.
Lemma lem6868285 (q : Prop) (r : Prop) : (term678 q r) = (term693 q r).
Proof. exact (MK_COMB (@lem6868262 q r) (@lem6868284 q r)). Qed.
Lemma lem6868288 (q : Prop) (r : Prop) : (term693 q r) = (term678 q r).
Proof. exact (SYM (@lem6868285 q r)). Qed.
Lemma lem6868289 (r : Prop) : term673 r.
Proof. exact (@lem9851 r). Qed.
Lemma lem6868290 (r : Prop) : (term673 r) = (term674 r).
Proof. exact (eq_refl (term673 r)). Qed.
Lemma lem6868291 (r : Prop) : term674 r.
Proof. exact (EQ_MP (@lem6868290 r) (@lem6868289 r)). Qed.
Lemma lem6868292 (r : Prop) (h1 : r = True) : r = True.
Proof. exact (h1). Qed.
Lemma lem6868293 (r : Prop) (h1 : r = False) : r = False.
Proof. exact (h1). Qed.
Lemma lem6868302 (q : Prop) : (term694 q) = (term694 q).
Proof. exact (eq_refl (term694 q)). Qed.
Lemma lem6868303 (q : Prop) (r : Prop) (h1 : r = True) : (term695 q r) = (term696 q).
Proof. exact (MK_COMB (@lem6868302 q) (@lem6868292 r h1)). Qed.
Lemma lem6868304 (q : Prop) : (term696 q) = (term697 q).
Proof. exact (eq_refl (term696 q)). Qed.
Lemma lem6868305 (q : Prop) (r : Prop) : (term698 q r) = (term698 q r).
Proof. exact (eq_refl (term698 q r)). Qed.
Lemma lem6868306 (r : Prop) (q : Prop) : ((term695 q r) = (term696 q)) = ((term695 q r) = (term697 q)).
Proof. exact (MK_COMB (@lem6868305 q r) (@lem6868304 q)). Qed.
Lemma lem6868307 (q : Prop) (r : Prop) : (term695 q r) = (term693 q r).
Proof. exact (eq_refl (term695 q r)). Qed.
Lemma lem6868308 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6868309 (q : Prop) (r : Prop) : (term698 q r) = (term699 q r).
Proof. exact (MK_COMB (@lem6868308) (@lem6868307 q r)). Qed.
Lemma lem6868310 (q : Prop) : (term697 q) = (term697 q).
Proof. exact (eq_refl (term697 q)). Qed.
Lemma lem6868311 (r : Prop) (q : Prop) : ((term695 q r) = (term697 q)) = ((term693 q r) = (term697 q)).
Proof. exact (MK_COMB (@lem6868309 q r) (@lem6868310 q)). Qed.
Lemma lem6868312 (r : Prop) (q : Prop) : ((term695 q r) = (term696 q)) = ((term693 q r) = (term697 q)).
Proof. exact (TRANS (@lem6868306 r q) (@lem6868311 r q)). Qed.
Lemma lem6868313 (q : Prop) (r : Prop) (h1 : r = True) : (term693 q r) = (term697 q).
Proof. exact (EQ_MP (@lem6868312 r q) (@lem6868303 q r h1)). Qed.
Lemma lem6868314 (q : Prop) (r : Prop) (h1 : r = True) : (term697 q) = (term693 q r).
Proof. exact (SYM (@lem6868313 q r h1)). Qed.
Lemma lem6868315 (q : Prop) : (term694 q) = (term694 q).
Proof. exact (eq_refl (term694 q)). Qed.
Lemma lem6868316 (q : Prop) (r : Prop) (h1 : r = False) : (term695 q r) = (term700 q).
Proof. exact (MK_COMB (@lem6868315 q) (@lem6868293 r h1)). Qed.
Lemma lem6868317 (q : Prop) : (term700 q) = (term701 q).
Proof. exact (eq_refl (term700 q)). Qed.
Lemma lem6868318 (q : Prop) (r : Prop) : (term698 q r) = (term698 q r).
Proof. exact (eq_refl (term698 q r)). Qed.
Lemma lem6868319 (r : Prop) (q : Prop) : ((term695 q r) = (term700 q)) = ((term695 q r) = (term701 q)).
Proof. exact (MK_COMB (@lem6868318 q r) (@lem6868317 q)). Qed.
Lemma lem6868320 (q : Prop) (r : Prop) : (term695 q r) = (term693 q r).
Proof. exact (eq_refl (term695 q r)). Qed.
Lemma lem6868321 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6868322 (q : Prop) (r : Prop) : (term698 q r) = (term699 q r).
Proof. exact (MK_COMB (@lem6868321) (@lem6868320 q r)). Qed.
Lemma lem6868323 (q : Prop) : (term701 q) = (term701 q).
Proof. exact (eq_refl (term701 q)). Qed.
Lemma lem6868324 (r : Prop) (q : Prop) : ((term695 q r) = (term701 q)) = ((term693 q r) = (term701 q)).
Proof. exact (MK_COMB (@lem6868322 q r) (@lem6868323 q)). Qed.
Lemma lem6868325 (r : Prop) (q : Prop) : ((term695 q r) = (term700 q)) = ((term693 q r) = (term701 q)).
Proof. exact (TRANS (@lem6868319 r q) (@lem6868324 r q)). Qed.
Lemma lem6868326 (q : Prop) (r : Prop) (h1 : r = False) : (term693 q r) = (term701 q).
Proof. exact (EQ_MP (@lem6868325 r q) (@lem6868316 q r h1)). Qed.
Lemma lem6868327 (q : Prop) (r : Prop) (h1 : r = False) : (term701 q) = (term693 q r).
Proof. exact (SYM (@lem6868326 q r h1)). Qed.
Lemma lem6868329 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem6868330 (q : Prop) : (term697 q) = True.
Proof. exact (@lem6868329 (term702 q)). Qed.
Lemma lem6868331 (q : Prop) : True = (term697 q).
Proof. exact (SYM (@lem6868330 q)). Qed.
Lemma lem6868332 (q : Prop) : term697 q.
Proof. exact (EQ_MP (@lem6868331 q) (@lem0)). Qed.
Lemma lem6868334 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem1823 t)). Qed.
Lemma lem6868335 (q : Prop) : (term701 q) = (term703 q).
Proof. exact (@lem6868334 (term704 q)). Qed.
Lemma lem6868337 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6868338 (q : Prop) : (term704 q) = False.
Proof. exact (@lem6868337 (q -> False)). Qed.
Lemma lem6868339 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6868340 (q : Prop) : (term703 q) = (~ False).
Proof. exact (MK_COMB (@lem6868339) (@lem6868338 q)). Qed.
Lemma lem6868342 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem6868343 (q : Prop) : (term703 q) = True.
Proof. exact (TRANS (@lem6868340 q) (@lem6868342)). Qed.
Lemma lem6868344 (q : Prop) : (term701 q) = True.
Proof. exact (TRANS (@lem6868335 q) (@lem6868343 q)). Qed.
Lemma lem6868345 (q : Prop) : True = (term701 q).
Proof. exact (SYM (@lem6868344 q)). Qed.
Lemma lem6868346 (q : Prop) : term701 q.
Proof. exact (EQ_MP (@lem6868345 q) (@lem0)). Qed.
Lemma lem6868347 (q : Prop) (r : Prop) (h1 : r = False) : term693 q r.
Proof. exact (EQ_MP (@lem6868327 q r h1) (@lem6868346 q)). Qed.
Lemma lem6868348 (q : Prop) (r : Prop) (h1 : r = True) : term693 q r.
Proof. exact (EQ_MP (@lem6868314 q r h1) (@lem6868332 q)). Qed.
Lemma lem6868350 (q : Prop) (r : Prop) : term693 q r.
Proof. exact (or_elim (@lem6868291 r) (fun h0 : r = True => @lem6868348 q r h0) (fun h0 : r = False => @lem6868347 q r h0)). Qed.
Lemma lem6868351 (q : Prop) (r : Prop) : term678 q r.
Proof. exact (EQ_MP (@lem6868288 q r) (@lem6868350 q r)). Qed.
Lemma lem6868357 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6868358 (r : Prop) : (False -> r) = True.
Proof. exact (@lem6868357 r). Qed.
Lemma lem6868359 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6868360 (r : Prop) : (term705 r) = (and True).
Proof. exact (MK_COMB (@lem6868359) (@lem6868358 r)). Qed.
Lemma lem6868363 (q : Prop) (r : Prop) : (q -> r) = (q -> r).
Proof. exact (eq_refl (q -> r)). Qed.
Lemma lem6868364 (q : Prop) (r : Prop) : (term706 q r) = (term707 q r).
Proof. exact (MK_COMB (@lem6868360 r) (@lem6868363 q r)). Qed.
Lemma lem6868366 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6868367 (q : Prop) (r : Prop) : (term707 q r) = (q -> r).
Proof. exact (@lem6868366 (q -> r)). Qed.
Lemma lem6868370 (q : Prop) (r : Prop) : (term706 q r) = (q -> r).
Proof. exact (TRANS (@lem6868364 q r) (@lem6868367 q r)). Qed.
Lemma lem6868371 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868372 (q : Prop) (r : Prop) : (term708 q r) = (term709 q r).
Proof. exact (MK_COMB (@lem6868371) (@lem6868370 q r)). Qed.
Lemma lem6868378 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem6868379 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868380 : term710 = (imp True).
Proof. exact (MK_COMB (@lem6868379) (@lem6868378)). Qed.
Lemma lem6868381 (q : Prop) : q = q.
Proof. exact (eq_refl q). Qed.
Lemma lem6868382 (q : Prop) : (term711 q) = (True -> q).
Proof. exact (MK_COMB (@lem6868380) (@lem6868381 q)). Qed.
Lemma lem6868384 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6868385 (q : Prop) : (True -> q) = q.
Proof. exact (@lem6868384 q). Qed.
Lemma lem6868386 (q : Prop) : (term711 q) = q.
Proof. exact (TRANS (@lem6868382 q) (@lem6868385 q)). Qed.
Lemma lem6868387 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868388 (q : Prop) : (term712 q) = (imp q).
Proof. exact (MK_COMB (@lem6868387) (@lem6868386 q)). Qed.
Lemma lem6868389 (r : Prop) : r = r.
Proof. exact (eq_refl r). Qed.
Lemma lem6868390 (q : Prop) (r : Prop) : (term713 q r) = (q -> r).
Proof. exact (MK_COMB (@lem6868388 q) (@lem6868389 r)). Qed.
Lemma lem6868393 (q : Prop) (r : Prop) : (term683 q r) = (term714 q r).
Proof. exact (MK_COMB (@lem6868372 q r) (@lem6868390 q r)). Qed.
Lemma lem6868395 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem6868396 (q : Prop) (r : Prop) : (term714 q r) = True.
Proof. exact (@lem6868395 (q -> r)). Qed.
Lemma lem6868397 (q : Prop) (r : Prop) : (term683 q r) = True.
Proof. exact (TRANS (@lem6868393 q r) (@lem6868396 q r)). Qed.
Lemma lem6868398 (q : Prop) (r : Prop) : True = (term683 q r).
Proof. exact (SYM (@lem6868397 q r)). Qed.
Lemma lem6868399 (q : Prop) (r : Prop) : term683 q r.
Proof. exact (EQ_MP (@lem6868398 q r) (@lem0)). Qed.
Lemma lem6868400 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : term680 p q r.
Proof. exact (EQ_MP (@lem6868245 q r p h1) (@lem6868399 q r)). Qed.
Lemma lem6868401 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : term680 p q r.
Proof. exact (EQ_MP (@lem6868232 q r p h1) (@lem6868351 q r)). Qed.
Lemma lem6868404 (p : Prop) (q : Prop) (r : Prop) : term680 p q r.
Proof. exact (or_elim (@lem6868203 p) (fun h0 : p = True => @lem6868401 q r p h0) (fun h0 : p = False => @lem6868400 q r p h0)). Qed.
Lemma lem6868405 (p : Prop) (q : Prop) (r : Prop) (h1 : term680 p q r) : term680 p q r.
Proof. exact (h1). Qed.
Lemma lem6868406 (p : Prop) (q : Prop) (r : Prop) (h1 : term715 p q r) : term715 p q r.
Proof. exact (h1). Qed.
Lemma lem6868407 (p : Prop) (q : Prop) (r : Prop) (h1 : term715 p q r) (h2 : term680 p q r) : term716 p q r.
Proof. exact (@lem6868405 p q r h2 (@lem6868406 p q r h1)). Qed.
Lemma lem6868408 (p : Prop) (q : Prop) (r : Prop) (h1 : term715 p q r) : term717 p q r.
Proof. exact (fun h0 : term680 p q r => @lem6868407 p q r h1 h0). Qed.
Lemma lem6868409 (p : Prop) (q : Prop) (r : Prop) (h1 : term680 p q r) : term680 p q r.
Proof. exact (h1). Qed.
Lemma lem6868410 (p : Prop) (q : Prop) (r : Prop) (h1 : term715 p q r) (h2 : term680 p q r) : term716 p q r.
Proof. exact (@lem6868408 p q r h1 (@lem6868409 p q r h2)). Qed.
Lemma lem6868411 (p : Prop) (q : Prop) (r : Prop) (h1 : term680 p q r) : term680 p q r.
Proof. exact (fun h0 : term715 p q r => @lem6868410 p q r h0 h1). Qed.
Lemma lem6868412 (p : Prop) (q : Prop) (r : Prop) : term718 p q r.
Proof. exact (fun h0 : term680 p q r => @lem6868411 p q r h0). Qed.
Lemma lem6868414 {A K : Type'} : term719 A K.
Proof. exact (@lem6790065 A K). Qed.
Lemma lem6868415 {A K : Type'} (dom : A -> Prop) : term720 A K dom.
Proof. exact (@lem6868414 A K dom). Qed.
Lemma lem6868416 {A K : Type'} (dom : A -> Prop) : (term720 A K dom) = (term721 A K dom).
Proof. exact (eq_refl (term720 A K dom)). Qed.
Lemma lem6868417 {A K : Type'} (dom : A -> Prop) : term721 A K dom.
Proof. exact (EQ_MP (@lem6868416 A K dom) (@lem6868415 A K dom)). Qed.
Lemma lem6868418 {A K : Type'} (dom : A -> Prop) (neut : A) : term722 A K dom neut.
Proof. exact (@lem6868417 A K dom neut). Qed.
Lemma lem6868419 {A K : Type'} (dom : A -> Prop) (neut : A) : (term722 A K dom neut) = (term723 A K dom neut).
Proof. exact (eq_refl (term722 A K dom neut)). Qed.
Lemma lem6868420 {A K : Type'} (dom : A -> Prop) (neut : A) : term723 A K dom neut.
Proof. exact (EQ_MP (@lem6868419 A K dom neut) (@lem6868418 A K dom neut)). Qed.
Lemma lem6868421 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term724 A K dom neut op.
Proof. exact (@lem6868420 A K dom neut op). Qed.
Lemma lem6868422 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : (term724 A K dom neut op) = (term725 A K dom neut op).
Proof. exact (eq_refl (term724 A K dom neut op)). Qed.
Lemma lem6868423 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term725 A K dom neut op.
Proof. exact (EQ_MP (@lem6868422 A K dom neut op) (@lem6868421 A K dom neut op)). Qed.
Lemma lem6868424 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term726 A K dom neut op ltle.
Proof. exact (@lem6868423 A K dom neut op ltle). Qed.
Lemma lem6868425 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (term726 A K dom neut op ltle) = (term727 A K dom neut op ltle).
Proof. exact (eq_refl (term726 A K dom neut op ltle)). Qed.
Lemma lem6868426 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term727 A K dom neut op ltle.
Proof. exact (EQ_MP (@lem6868425 A K dom neut op ltle) (@lem6868424 A K dom neut op ltle)). Qed.
Lemma lem6868427 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term728 A K dom neut op ltle f.
Proof. exact (@lem6868426 A K dom neut op ltle f). Qed.
Lemma lem6868428 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term728 A K dom neut op ltle f) = (term729 A K dom neut op ltle f).
Proof. exact (eq_refl (term728 A K dom neut op ltle f)). Qed.
Lemma lem6868429 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term729 A K dom neut op ltle f.
Proof. exact (EQ_MP (@lem6868428 A K dom neut op ltle f) (@lem6868427 A K dom neut op ltle f)). Qed.
Lemma lem6868430 {K : Type'} (k : K -> Prop) : term730 K k.
Proof. exact (@lem9784 (k = (@EMPTY K))). Qed.
Lemma lem6868431 {K : Type'} (k : K -> Prop) : (term730 K k) = (term731 K k).
Proof. exact (eq_refl (term730 K k)). Qed.
Lemma lem6868432 {K : Type'} (k : K -> Prop) : term731 K k.
Proof. exact (EQ_MP (@lem6868431 K k) (@lem6868430 K k)). Qed.
Lemma lem6868434 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term732 K k.
Proof. exact (h1). Qed.
Lemma lem6868438 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term733 t1 t2 t3) = (term734 t1 t2 t3)) : (term733 t1 t2 t3) = (term734 t1 t2 t3).
Proof. exact (h1). Qed.
Lemma lem6868439 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term733 t1 t2 t3) = (term734 t1 t2 t3)) : (term734 t1 t2 t3) = (term733 t1 t2 t3).
Proof. exact (SYM (@lem6868438 t1 t2 t3 h1)). Qed.
Lemma lem6868440 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term734 t1 t2 t3) = (term733 t1 t2 t3)) : (term734 t1 t2 t3) = (term733 t1 t2 t3).
Proof. exact (h1). Qed.
Lemma lem6868441 (t1 : Prop) (t2 : Prop) (t3 : Prop) (h1 : (term734 t1 t2 t3) = (term733 t1 t2 t3)) : (term733 t1 t2 t3) = (term734 t1 t2 t3).
Proof. exact (SYM (@lem6868440 t1 t2 t3 h1)). Qed.
Lemma lem6868442 (t1 : Prop) (t2 : Prop) (t3 : Prop) : ((term733 t1 t2 t3) = (term734 t1 t2 t3)) = ((term734 t1 t2 t3) = (term733 t1 t2 t3)).
Proof. exact (prop_ext (fun h1 : (term733 t1 t2 t3) = (term734 t1 t2 t3) => @lem6868439 t1 t2 t3 h1) (fun h1 : (term734 t1 t2 t3) = (term733 t1 t2 t3) => @lem6868441 t1 t2 t3 h1)). Qed.
Lemma lem6868443 (t1 : Prop) (t2 : Prop) : (term735 t1 t2) = (term736 t1 t2).
Proof. exact (fun_ext (fun t3 : Prop => @lem6868442 t1 t2 t3)). Qed.
Lemma lem6868444 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6868445 (t1 : Prop) (t2 : Prop) : (term737 t1 t2) = (term738 t1 t2).
Proof. exact (MK_COMB (@lem6868444) (@lem6868443 t1 t2)). Qed.
Lemma lem6868446 (t1 : Prop) : (term739 t1) = (term740 t1).
Proof. exact (fun_ext (fun t2 : Prop => @lem6868445 t1 t2)). Qed.
Lemma lem6868447 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6868448 (t1 : Prop) : (term741 t1) = (term742 t1).
Proof. exact (MK_COMB (@lem6868447) (@lem6868446 t1)). Qed.
Lemma lem6868449 : term743 = term744.
Proof. exact (fun_ext (fun t1 : Prop => @lem6868448 t1)). Qed.
Lemma lem6868450 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6868451 : term745 = term746.
Proof. exact (MK_COMB (@lem6868450) (@lem6868449)). Qed.
Lemma lem6868452 : term746.
Proof. exact (EQ_MP (@lem6868451) (@lem512)). Qed.
Lemma lem6868453 (t1 : Prop) : term747 t1.
Proof. exact (@lem6868452 t1). Qed.
Lemma lem6868454 (t1 : Prop) : (term747 t1) = (term742 t1).
Proof. exact (eq_refl (term747 t1)). Qed.
Lemma lem6868455 (t1 : Prop) : term742 t1.
Proof. exact (EQ_MP (@lem6868454 t1) (@lem6868453 t1)). Qed.
Lemma lem6868456 (t1 : Prop) (t2 : Prop) : term748 t1 t2.
Proof. exact (@lem6868455 t1 t2). Qed.
Lemma lem6868457 (t1 : Prop) (t2 : Prop) : (term748 t1 t2) = (term738 t1 t2).
Proof. exact (eq_refl (term748 t1 t2)). Qed.
Lemma lem6868458 (t1 : Prop) (t2 : Prop) : term738 t1 t2.
Proof. exact (EQ_MP (@lem6868457 t1 t2) (@lem6868456 t1 t2)). Qed.
Lemma lem6868459 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term749 t1 t2 t3.
Proof. exact (@lem6868458 t1 t2 t3). Qed.
Lemma lem6868460 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term749 t1 t2 t3) = ((term734 t1 t2 t3) = (term733 t1 t2 t3)).
Proof. exact (eq_refl (term749 t1 t2 t3)). Qed.
Lemma lem6868462 {A : Type'} (P : Prop) : term750 A P.
Proof. exact (@lem6418 A P). Qed.
Lemma lem6868463 {A : Type'} (P : Prop) : (term750 A P) = (term751 A P).
Proof. exact (eq_refl (term750 A P)). Qed.
Lemma lem6868464 {A : Type'} (P : Prop) : term751 A P.
Proof. exact (EQ_MP (@lem6868463 A P) (@lem6868462 A P)). Qed.
Lemma lem6868465 {A : Type'} (P : Prop) (Q : A -> Prop) : term752 A P Q.
Proof. exact (@lem6868464 A P Q). Qed.
Lemma lem6868466 {A : Type'} (P : Prop) (Q : A -> Prop) : (term752 A P Q) = ((term753 A P Q) = (term754 A P Q)).
Proof. exact (eq_refl (term752 A P Q)). Qed.
Lemma lem6868468 (h1 : term755) : term755.
Proof. exact (h1). Qed.
Lemma lem6868469 (P : nat -> Prop) (h1 : term755) : term756 P.
Proof. exact (@lem6868468 h1 P). Qed.
Lemma lem6868470 (P : nat -> Prop) : (term756 P) = (term757 P).
Proof. exact (eq_refl (term756 P)). Qed.
Lemma lem6868471 (P : nat -> Prop) (h1 : term755) : term757 P.
Proof. exact (EQ_MP (@lem6868470 P) (@lem6868469 P h1)). Qed.
Lemma lem6868472 (P : nat -> Prop) (h1 : term758 P) : term758 P.
Proof. exact (h1). Qed.
Lemma lem6868473 (P : nat -> Prop) (h1 : term755) (h2 : term758 P) : term759 P.
Proof. exact (@lem6868471 P h1 (@lem6868472 P h2)). Qed.
Lemma lem6868474 (P : nat -> Prop) (h1 : term758 P) : term760 P.
Proof. exact (fun h0 : term755 => @lem6868473 P h0 h1). Qed.
Lemma lem6868475 (h1 : term755) : term755.
Proof. exact (h1). Qed.
Lemma lem6868476 (P : nat -> Prop) (h1 : term755) (h2 : term758 P) : term759 P.
Proof. exact (@lem6868474 P h2 (@lem6868475 h1)). Qed.
Lemma lem6868477 (P : nat -> Prop) (h1 : term755) : term757 P.
Proof. exact (fun h0 : term758 P => @lem6868476 P h1 h0). Qed.
Lemma lem6868478 (h1 : term755) : term755.
Proof. exact (fun P : nat -> Prop => @lem6868477 P h1). Qed.
Lemma lem6868479 : term761.
Proof. exact (fun h0 : term755 => @lem6868478 h0). Qed.
Lemma lem6868480 : term755.
Proof. exact (@lem6868479 (@lem115780)). Qed.
Lemma lem6868481 (P : nat -> Prop) : term756 P.
Proof. exact (@lem6868480 P). Qed.
Lemma lem6868482 (P : nat -> Prop) : (term756 P) = (term757 P).
Proof. exact (eq_refl (term756 P)). Qed.
Lemma lem6868484 (t1 : Prop) : term762 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem6868485 (t1 : Prop) : (term762 t1) = (term763 t1).
Proof. exact (eq_refl (term762 t1)). Qed.
Lemma lem6868486 (t1 : Prop) : term763 t1.
Proof. exact (EQ_MP (@lem6868485 t1) (@lem6868484 t1)). Qed.
Lemma lem6868487 (t1 : Prop) (t2 : Prop) : term764 t1 t2.
Proof. exact (@lem6868486 t1 t2). Qed.
Lemma lem6868488 (t1 : Prop) (t2 : Prop) : (term764 t1 t2) = (term765 t1 t2).
Proof. exact (eq_refl (term764 t1 t2)). Qed.
Lemma lem6868489 (t1 : Prop) (t2 : Prop) : term765 t1 t2.
Proof. exact (EQ_MP (@lem6868488 t1 t2) (@lem6868487 t1 t2)). Qed.
Lemma lem6868490 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term766 t1 t2 t3.
Proof. exact (@lem6868489 t1 t2 t3). Qed.
Lemma lem6868491 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term766 t1 t2 t3) = ((term767 t1 t2 t3) = (term768 t1 t2 t3)).
Proof. exact (eq_refl (term766 t1 t2 t3)). Qed.
Lemma lem6868492 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term767 t1 t2 t3) = (term768 t1 t2 t3).
Proof. exact (EQ_MP (@lem6868491 t1 t2 t3) (@lem6868490 t1 t2 t3)). Qed.
Lemma lem6868493 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term768 t1 t2 t3) = (term767 t1 t2 t3).
Proof. exact (SYM (@lem6868492 t1 t2 t3)). Qed.
Lemma lem6868495 (p : Prop) : p = (term769 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6868496 {_125543 : Type'} (P : type686 _125543) : (term770 _125543 P) = (term771 _125543 P).
Proof. exact (@lem6868495 (term770 _125543 P)). Qed.
Lemma lem6868497 {_125543 : Type'} (P : type686 _125543) : (term771 _125543 P) = (term770 _125543 P).
Proof. exact (SYM (@lem6868496 _125543 P)). Qed.
Lemma lem6868498 {_125543 : Type'} (P : type686 _125543) (h1 : term772 _125543 P) : term772 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6868501 {_125543 : Type'} (P : type686 _125543) (h1 : term771 _125543 P) : term771 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6868502 {_125543 : Type'} (P : type686 _125543) : term773 _125543 P.
Proof. exact (fun h0 : term771 _125543 P => @lem6868501 _125543 P h0). Qed.
Lemma lem6868503 {_125543 : Type'} (P : type686 _125543) (h1 : term773 _125543 P) : term773 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6868504 {_125543 : Type'} (P : type686 _125543) (h1 : term771 _125543 P) : term771 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6868505 {_125543 : Type'} (P : type686 _125543) (h1 : term771 _125543 P) (h2 : term773 _125543 P) : term771 _125543 P.
Proof. exact (@lem6868503 _125543 P h2 (@lem6868504 _125543 P h1)). Qed.
Lemma lem6868506 {_125543 : Type'} (P : type686 _125543) (h1 : term771 _125543 P) : term774 _125543 P.
Proof. exact (fun h0 : term773 _125543 P => @lem6868505 _125543 P h1 h0). Qed.
Lemma lem6868507 {_125543 : Type'} (P : type686 _125543) (h1 : term773 _125543 P) : term773 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6868508 {_125543 : Type'} (P : type686 _125543) (h1 : term771 _125543 P) (h2 : term773 _125543 P) : term771 _125543 P.
Proof. exact (@lem6868506 _125543 P h1 (@lem6868507 _125543 P h2)). Qed.
Lemma lem6868509 {_125543 : Type'} (P : type686 _125543) (h1 : term773 _125543 P) : term773 _125543 P.
Proof. exact (fun h0 : term771 _125543 P => @lem6868508 _125543 P h0 h1). Qed.
Lemma lem6868510 {_125543 : Type'} (P : type686 _125543) : term775 _125543 P.
Proof. exact (fun h0 : term773 _125543 P => @lem6868509 _125543 P h0). Qed.
Lemma lem6868513 {_125543 : Type'} (P : type686 _125543) : term773 _125543 P.
Proof. exact (@lem6868510 _125543 P (@lem6868502 _125543 P)). Qed.
Lemma lem6868514 {_125543 : Type'} (P : type686 _125543) : term773 _125543 P.
Proof. exact (@lem6868513 _125543 P). Qed.
Lemma lem6868520 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6868521 {_125543 : Type'} (P : type686 _125543) : (term771 _125543 P) = (term776 _125543 P).
Proof. exact (@lem6868520 (term772 _125543 P)). Qed.
Lemma lem6868523 (t : Prop) : (term190 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6868524 {_125543 : Type'} (P : type686 _125543) : (term776 _125543 P) = (term770 _125543 P).
Proof. exact (@lem6868523 (term770 _125543 P)). Qed.
Lemma lem6868527 {_125543 : Type'} (P : type686 _125543) : (term771 _125543 P) = (term770 _125543 P).
Proof. exact (TRANS (@lem6868521 _125543 P) (@lem6868524 _125543 P)). Qed.
Lemma lem6868546 {_125543 : Type'} : (term777 _125543) = (term778 _125543).
Proof. exact (fun_ext (fun P : type686 _125543 => @lem6868527 _125543 P)). Qed.
Lemma lem6868547 {_125543 : Type'} : (@all ((_125543 -> Prop) -> Prop)) = (@all ((_125543 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_125543 -> Prop) -> Prop))). Qed.
Lemma lem6868556 {_125543 : Type'} : (term779 _125543) = (term780 _125543).
Proof. exact (MK_COMB (@lem6868547 _125543) (@lem6868546 _125543)). Qed.
Lemma lem6868561 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) : (term781 _125543 P k) = (term781 _125543 P k).
Proof. exact (eq_refl (term781 _125543 P k)). Qed.
Lemma lem6868562 {_125543 : Type'} (P : type686 _125543) : (term782 _125543 P) = (term782 _125543 P).
Proof. exact (fun_ext (fun k : _125543 -> Prop => @lem6868561 _125543 P k)). Qed.
Lemma lem6868563 {_125543 : Type'} : (@all (_125543 -> Prop)) = (@all (_125543 -> Prop)).
Proof. exact (eq_refl (@all (_125543 -> Prop))). Qed.
Lemma lem6868564 {_125543 : Type'} (P : type686 _125543) : (term783 _125543 P) = (term783 _125543 P).
Proof. exact (MK_COMB (@lem6868563 _125543) (@lem6868562 _125543 P)). Qed.
Lemma lem6868573 {_125543 : Type'} (n : nat) (P : type686 _125543) (k : _125543 -> Prop) : (term784 _125543 n P k) = (term784 _125543 n P k).
Proof. exact (eq_refl (term784 _125543 n P k)). Qed.
Lemma lem6868574 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term785 _125543 n P) = (term785 _125543 n P).
Proof. exact (fun_ext (fun k : _125543 -> Prop => @lem6868573 _125543 n P k)). Qed.
Lemma lem6868575 {_125543 : Type'} : (@all (_125543 -> Prop)) = (@all (_125543 -> Prop)).
Proof. exact (eq_refl (@all (_125543 -> Prop))). Qed.
Lemma lem6868576 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term786 _125543 n P) = (term786 _125543 n P).
Proof. exact (MK_COMB (@lem6868575 _125543) (@lem6868574 _125543 n P)). Qed.
Lemma lem6868577 {_125543 : Type'} (P : type686 _125543) : (term787 _125543 P) = (term787 _125543 P).
Proof. exact (fun_ext (fun n : nat => @lem6868576 _125543 n P)). Qed.
Lemma lem6868578 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6868579 {_125543 : Type'} (P : type686 _125543) : (term788 _125543 P) = (term788 _125543 P).
Proof. exact (MK_COMB (@lem6868578) (@lem6868577 _125543 P)). Qed.
Lemma lem6868580 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868581 {_125543 : Type'} (P : type686 _125543) : (term789 _125543 P) = (term789 _125543 P).
Proof. exact (MK_COMB (@lem6868580) (@lem6868579 _125543 P)). Qed.
Lemma lem6868582 {_125543 : Type'} (P : type686 _125543) : (term770 _125543 P) = (term770 _125543 P).
Proof. exact (MK_COMB (@lem6868581 _125543 P) (@lem6868564 _125543 P)). Qed.
Lemma lem6868583 {_125543 : Type'} : (term778 _125543) = (term778 _125543).
Proof. exact (fun_ext (fun P : type686 _125543 => @lem6868582 _125543 P)). Qed.
Lemma lem6868584 {_125543 : Type'} : (@all ((_125543 -> Prop) -> Prop)) = (@all ((_125543 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_125543 -> Prop) -> Prop))). Qed.
Lemma lem6868585 {_125543 : Type'} : (term780 _125543) = (term780 _125543).
Proof. exact (MK_COMB (@lem6868584 _125543) (@lem6868583 _125543)). Qed.
Lemma lem6868620 {_125543 : Type'} : (term779 _125543) = (term780 _125543).
Proof. exact (TRANS (@lem6868556 _125543) (@lem6868585 _125543)). Qed.
Lemma lem6868621 {_125543 : Type'} : (term780 _125543) = (term779 _125543).
Proof. exact (SYM (@lem6868620 _125543)). Qed.
Lemma lem6868622 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term788 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6868625 (p : Prop) : p = (term769 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6868626 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) : (P k) = (term790 _125543 P k).
Proof. exact (@lem6868625 (P k)). Qed.
Lemma lem6868627 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) : (term790 _125543 P k) = (P k).
Proof. exact (SYM (@lem6868626 _125543 P k)). Qed.
Lemma lem6868628 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term791 _125543 P k) : term791 _125543 P k.
Proof. exact (h1). Qed.
Lemma lem6868635 {_125543 : Type'} (k : _125543 -> Prop) (n : nat) : (term792 _125543 k n) = (term793 _125543 k n).
Proof. exact (@lem17045 (@FINITE _125543 k) ((@CARD _125543 k) = n)). Qed.
Lemma lem6868636 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) : (P k) = (P k).
Proof. exact (eq_refl (P k)). Qed.
Lemma lem6868637 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6868638 {_125543 : Type'} (k : _125543 -> Prop) (n : nat) : (term794 _125543 k n) = (term795 _125543 k n).
Proof. exact (MK_COMB (@lem6868637) (@lem6868635 _125543 k n)). Qed.
Lemma lem6868639 {_125543 : Type'} (n : nat) (P : type686 _125543) (k : _125543 -> Prop) : (term796 _125543 n P k) = (term797 _125543 n P k).
Proof. exact (MK_COMB (@lem6868638 _125543 k n) (@lem6868636 _125543 P k)). Qed.
Lemma lem6868640 {_125543 : Type'} (n : nat) (P : type686 _125543) (k : _125543 -> Prop) : (term784 _125543 n P k) = (term796 _125543 n P k).
Proof. exact (@lem17265 (term798 _125543 k n) (P k)). Qed.
Lemma lem6868641 {_125543 : Type'} (n : nat) (P : type686 _125543) (k : _125543 -> Prop) : (term784 _125543 n P k) = (term797 _125543 n P k).
Proof. exact (TRANS (@lem6868640 _125543 n P k) (@lem6868639 _125543 n P k)). Qed.
Lemma lem6868642 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term785 _125543 n P) = (term799 _125543 n P).
Proof. exact (fun_ext (fun k : _125543 -> Prop => @lem6868641 _125543 n P k)). Qed.
Lemma lem6868643 {_125543 : Type'} : (@all (_125543 -> Prop)) = (@all (_125543 -> Prop)).
Proof. exact (eq_refl (@all (_125543 -> Prop))). Qed.
Lemma lem6868644 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term786 _125543 n P) = (term800 _125543 n P).
Proof. exact (MK_COMB (@lem6868643 _125543) (@lem6868642 _125543 n P)). Qed.
Lemma lem6868645 {_125543 : Type'} (P : type686 _125543) : (term787 _125543 P) = (term801 _125543 P).
Proof. exact (fun_ext (fun n : nat => @lem6868644 _125543 n P)). Qed.
Lemma lem6868646 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6868687 {_125543 : Type'} (P : type686 _125543) : (term788 _125543 P) = (term802 _125543 P).
Proof. exact (MK_COMB (@lem6868646) (@lem6868645 _125543 P)). Qed.
Lemma lem6868688 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term802 _125543 P.
Proof. exact (EQ_MP (@lem6868687 _125543 P) (@lem6868622 _125543 P h1)). Qed.
Lemma lem6868694 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : @FINITE _125543 k.
Proof. exact (h1). Qed.
Lemma lem6868700 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term791 _125543 P k) : term791 _125543 P k.
Proof. exact (h1). Qed.
Lemma lem6868723 {_125543 : Type'} (n : nat) (P : type686 _125543) (k : _125543 -> Prop) : (term797 _125543 n P k) = (term797 _125543 n P k).
Proof. exact (eq_refl (term797 _125543 n P k)). Qed.
Lemma lem6868724 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term799 _125543 n P) = (term799 _125543 n P).
Proof. exact (fun_ext (fun k : _125543 -> Prop => @lem6868723 _125543 n P k)). Qed.
Lemma lem6868725 {_125543 : Type'} : (@all (_125543 -> Prop)) = (@all (_125543 -> Prop)).
Proof. exact (eq_refl (@all (_125543 -> Prop))). Qed.
Lemma lem6868726 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term800 _125543 n P) = (term800 _125543 n P).
Proof. exact (MK_COMB (@lem6868725 _125543) (@lem6868724 _125543 n P)). Qed.
Lemma lem6868727 {_125543 : Type'} (P : type686 _125543) : (term801 _125543 P) = (term801 _125543 P).
Proof. exact (fun_ext (fun n : nat => @lem6868726 _125543 n P)). Qed.
Lemma lem6868728 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6868729 {_125543 : Type'} (P : type686 _125543) : (term802 _125543 P) = (term802 _125543 P).
Proof. exact (MK_COMB (@lem6868728) (@lem6868727 _125543 P)). Qed.
Lemma lem6868730 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term802 _125543 P.
Proof. exact (EQ_MP (@lem6868729 _125543 P) (@lem6868688 _125543 P h1)). Qed.
Lemma lem6868734 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : @FINITE _125543 k.
Proof. exact (h1). Qed.
Lemma lem6868740 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term791 _125543 P k) : term791 _125543 P k.
Proof. exact (h1). Qed.
Lemma lem6868754 {_125543 : Type'} (n : nat) (P : type686 _125543) (k : _125543 -> Prop) : (term797 _125543 n P k) = (term797 _125543 n P k).
Proof. exact (eq_refl (term797 _125543 n P k)). Qed.
Lemma lem6868755 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term799 _125543 n P) = (term799 _125543 n P).
Proof. exact (fun_ext (fun k : _125543 -> Prop => @lem6868754 _125543 n P k)). Qed.
Lemma lem6868756 {_125543 : Type'} : (@all (_125543 -> Prop)) = (@all (_125543 -> Prop)).
Proof. exact (eq_refl (@all (_125543 -> Prop))). Qed.
Lemma lem6868757 {_125543 : Type'} (n : nat) (P : type686 _125543) : (term800 _125543 n P) = (term800 _125543 n P).
Proof. exact (MK_COMB (@lem6868756 _125543) (@lem6868755 _125543 n P)). Qed.
Lemma lem6868758 {_125543 : Type'} (P : type686 _125543) : (term801 _125543 P) = (term801 _125543 P).
Proof. exact (fun_ext (fun n : nat => @lem6868757 _125543 n P)). Qed.
Lemma lem6868759 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6868761 {_125543 : Type'} (P : type686 _125543) : (term802 _125543 P) = (term802 _125543 P).
Proof. exact (MK_COMB (@lem6868759) (@lem6868758 _125543 P)). Qed.
Lemma lem6868762 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term802 _125543 P.
Proof. exact (EQ_MP (@lem6868761 _125543 P) (@lem6868730 _125543 P h1)). Qed.
Lemma lem6868766 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : @FINITE _125543 k.
Proof. exact (h1). Qed.
Lemma lem6868770 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term791 _125543 P k) : term791 _125543 P k.
Proof. exact (h1). Qed.
Lemma lem6868771 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (h1 : term788 _125543 P) : term803 _125543 P _91758.
Proof. exact (@lem6868762 _125543 P h1 _91758). Qed.
Lemma lem6868772 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) : (term803 _125543 P _91758) = (term800 _125543 _91758 P).
Proof. exact (eq_refl (term803 _125543 P _91758)). Qed.
Lemma lem6868773 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (h1 : term788 _125543 P) : term800 _125543 _91758 P.
Proof. exact (EQ_MP (@lem6868772 _125543 _91758 P) (@lem6868771 _125543 _91758 P h1)). Qed.
Lemma lem6868774 {_125543 : Type'} (_91758 : nat) (_91759 : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term804 _125543 _91758 P _91759.
Proof. exact (@lem6868773 _125543 _91758 P h1 _91759). Qed.
Lemma lem6868775 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term804 _125543 _91758 P _91759) = (term797 _125543 _91758 P _91759).
Proof. exact (eq_refl (term804 _125543 _91758 P _91759)). Qed.
Lemma lem6868776 {_125543 : Type'} (_91758 : nat) (_91759 : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term797 _125543 _91758 P _91759.
Proof. exact (EQ_MP (@lem6868775 _125543 _91758 P _91759) (@lem6868774 _125543 _91758 _91759 P h1)). Qed.
Lemma lem6868787 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term797 _125543 _91758 P _91759) = (term805 _125543 _91758 P _91759).
Proof. exact (@lem6868493 (term806 _125543 _91759) (term807 _125543 _91759 _91758) (P _91759)). Qed.
Lemma lem6868788 {_125543 : Type'} (_91758 : nat) (_91759 : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term805 _125543 _91758 P _91759.
Proof. exact (EQ_MP (@lem6868787 _125543 _91758 P _91759) (@lem6868776 _125543 _91758 _91759 P h1)). Qed.
Lemma lem6868790 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : @FINITE _125543 k.
Proof. exact (h1). Qed.
Lemma lem6868792 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term791 _125543 P k) : term791 _125543 P k.
Proof. exact (h1). Qed.
Lemma lem6868830 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : @FINITE _125543 k.
Proof. exact (h1). Qed.
Lemma lem6868831 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : term808 _125543 k.
Proof. exact (fun h0 : term806 _125543 k => @lem6868830 _125543 k h1). Qed.
Lemma lem6868833 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6868834 {_125543 : Type'} (k : _125543 -> Prop) : (term808 _125543 k) = (@FINITE _125543 k).
Proof. exact (@lem6868833 (@FINITE _125543 k)). Qed.
Lemma lem6868835 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : @FINITE _125543 k.
Proof. exact (EQ_MP (@lem6868834 _125543 k) (@lem6868831 _125543 k h1)). Qed.
Lemma lem6868837 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem6868838 {_125543 : Type'} (k : _125543 -> Prop) : (@CARD _125543 k) = (@CARD _125543 k).
Proof. exact (@lem6868837 (@CARD _125543 k)). Qed.
Lemma lem6868839 {_125543 : Type'} (k : _125543 -> Prop) : term810 _125543 k.
Proof. exact (fun h0 : term811 _125543 k => @lem6868838 _125543 k). Qed.
Lemma lem6868841 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6868842 {_125543 : Type'} (k : _125543 -> Prop) : (term810 _125543 k) = ((@CARD _125543 k) = (@CARD _125543 k)).
Proof. exact (@lem6868841 ((@CARD _125543 k) = (@CARD _125543 k))). Qed.
Lemma lem6868843 {_125543 : Type'} (k : _125543 -> Prop) : (@CARD _125543 k) = (@CARD _125543 k).
Proof. exact (EQ_MP (@lem6868842 _125543 k) (@lem6868839 _125543 k)). Qed.
Lemma lem6868849 (q : Prop) (p : Prop) (r : Prop) : (term767 p q r) = (term767 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6868850 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term805 _125543 _91758 P _91759) = (term812 _125543 _91758 P _91759).
Proof. exact (@lem6868849 (term807 _125543 _91759 _91758) (term806 _125543 _91759) (P _91759)). Qed.
Lemma lem6868866 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6868867 {_125543 : Type'} (P : type686 _125543) (_91759 : _125543 -> Prop) : (term813 _125543 P _91759) = (term814 _125543 P _91759).
Proof. exact (@lem6868866 (P _91759) (term806 _125543 _91759)). Qed.
Lemma lem6868873 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) : (term815 _125543 _91759 _91758) = (term815 _125543 _91759 _91758).
Proof. exact (eq_refl (term815 _125543 _91759 _91758)). Qed.
Lemma lem6868874 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term812 _125543 _91758 P _91759) = (term816 _125543 _91758 P _91759).
Proof. exact (MK_COMB (@lem6868873 _125543 _91759 _91758) (@lem6868867 _125543 P _91759)). Qed.
Lemma lem6868878 (q : Prop) (p : Prop) (r : Prop) : (term767 p q r) = (term767 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6868879 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : (term816 _125543 _91758 P _91759) = (term817 _125543 P _91758 _91759).
Proof. exact (@lem6868878 (P _91759) (term807 _125543 _91759 _91758) (term806 _125543 _91759)). Qed.
Lemma lem6868897 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : (term812 _125543 _91758 P _91759) = (term817 _125543 P _91758 _91759).
Proof. exact (TRANS (@lem6868874 _125543 _91758 P _91759) (@lem6868879 _125543 P _91758 _91759)). Qed.
Lemma lem6868898 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : (term805 _125543 _91758 P _91759) = (term817 _125543 P _91758 _91759).
Proof. exact (TRANS (@lem6868850 _125543 _91758 P _91759) (@lem6868897 _125543 P _91758 _91759)). Qed.
Lemma lem6868899 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6868900 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : (term818 _125543 _91758 P _91759) = (term819 _125543 P _91758 _91759).
Proof. exact (MK_COMB (@lem6868899) (@lem6868898 _125543 P _91758 _91759)). Qed.
Lemma lem6868914 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6868915 {_125543 : Type'} (_91758 : nat) (_91759 : _125543 -> Prop) : (term793 _125543 _91759 _91758) = (term820 _125543 _91758 _91759).
Proof. exact (@lem6868914 (term807 _125543 _91759 _91758) (term806 _125543 _91759)). Qed.
Lemma lem6868923 {_125543 : Type'} (P : type686 _125543) (_91759 : _125543 -> Prop) : (term821 _125543 P _91759) = (term821 _125543 P _91759).
Proof. exact (eq_refl (term821 _125543 P _91759)). Qed.
Lemma lem6868924 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : (term822 _125543 P _91759 _91758) = (term817 _125543 P _91758 _91759).
Proof. exact (MK_COMB (@lem6868923 _125543 P _91759) (@lem6868915 _125543 _91758 _91759)). Qed.
Lemma lem6868935 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : ((term805 _125543 _91758 P _91759) = (term822 _125543 P _91759 _91758)) = ((term817 _125543 P _91758 _91759) = (term817 _125543 P _91758 _91759)).
Proof. exact (MK_COMB (@lem6868900 _125543 P _91758 _91759) (@lem6868924 _125543 P _91758 _91759)). Qed.
Lemma lem6868937 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6868938 (x : Prop) : (x = x) = True.
Proof. exact (@lem6868937 Prop x). Qed.
Lemma lem6868939 {_125543 : Type'} (P : type686 _125543) (_91758 : nat) (_91759 : _125543 -> Prop) : ((term817 _125543 P _91758 _91759) = (term817 _125543 P _91758 _91759)) = True.
Proof. exact (@lem6868938 (term817 _125543 P _91758 _91759)). Qed.
Lemma lem6868940 {_125543 : Type'} (P : type686 _125543) (_91759 : _125543 -> Prop) (_91758 : nat) : ((term805 _125543 _91758 P _91759) = (term822 _125543 P _91759 _91758)) = True.
Proof. exact (TRANS (@lem6868935 _125543 P _91758 _91759) (@lem6868939 _125543 P _91758 _91759)). Qed.
Lemma lem6868941 {_125543 : Type'} (P : type686 _125543) (_91759 : _125543 -> Prop) (_91758 : nat) : True = ((term805 _125543 _91758 P _91759) = (term822 _125543 P _91759 _91758)).
Proof. exact (SYM (@lem6868940 _125543 P _91759 _91758)). Qed.
Lemma lem6868942 {_125543 : Type'} (P : type686 _125543) (_91759 : _125543 -> Prop) (_91758 : nat) : (term805 _125543 _91758 P _91759) = (term822 _125543 P _91759 _91758).
Proof. exact (EQ_MP (@lem6868941 _125543 P _91759 _91758) (@lem0)). Qed.
Lemma lem6868943 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) (P : type686 _125543) (h1 : term788 _125543 P) : term822 _125543 P _91759 _91758.
Proof. exact (EQ_MP (@lem6868942 _125543 P _91759 _91758) (@lem6868788 _125543 _91758 _91759 P h1)). Qed.
Lemma lem6868945 (b : Prop) (a : Prop) : (a \/ b) = (term823 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6868946 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term822 _125543 P _91759 _91758) = (term824 _125543 _91758 P _91759).
Proof. exact (@lem6868945 (term793 _125543 _91759 _91758) (P _91759)). Qed.
Lemma lem6868948 (a : Prop) (b : Prop) : (term825 a b) = (term826 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6868949 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) : (term827 _125543 _91759 _91758) = (term828 _125543 _91759 _91758).
Proof. exact (@lem6868948 (term806 _125543 _91759) (term807 _125543 _91759 _91758)). Qed.
Lemma lem6868951 (a : Prop) : (term190 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6868952 {_125543 : Type'} (_91759 : _125543 -> Prop) : (term829 _125543 _91759) = (@FINITE _125543 _91759).
Proof. exact (@lem6868951 (@FINITE _125543 _91759)). Qed.
Lemma lem6868953 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6868954 {_125543 : Type'} (_91759 : _125543 -> Prop) : (term830 _125543 _91759) = (term831 _125543 _91759).
Proof. exact (MK_COMB (@lem6868953) (@lem6868952 _125543 _91759)). Qed.
Lemma lem6868956 (a : Prop) : (term190 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6868957 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) : (term832 _125543 _91759 _91758) = ((@CARD _125543 _91759) = _91758).
Proof. exact (@lem6868956 ((@CARD _125543 _91759) = _91758)). Qed.
Lemma lem6868958 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) : (term828 _125543 _91759 _91758) = (term798 _125543 _91759 _91758).
Proof. exact (MK_COMB (@lem6868954 _125543 _91759) (@lem6868957 _125543 _91759 _91758)). Qed.
Lemma lem6868959 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) : (term827 _125543 _91759 _91758) = (term798 _125543 _91759 _91758).
Proof. exact (TRANS (@lem6868949 _125543 _91759 _91758) (@lem6868958 _125543 _91759 _91758)). Qed.
Lemma lem6868960 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6868961 {_125543 : Type'} (_91759 : _125543 -> Prop) (_91758 : nat) : (term833 _125543 _91759 _91758) = (term834 _125543 _91759 _91758).
Proof. exact (MK_COMB (@lem6868960) (@lem6868959 _125543 _91759 _91758)). Qed.
Lemma lem6868962 {_125543 : Type'} (P : type686 _125543) (_91759 : _125543 -> Prop) : (P _91759) = (P _91759).
Proof. exact (eq_refl (P _91759)). Qed.
Lemma lem6868963 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term824 _125543 _91758 P _91759) = (term784 _125543 _91758 P _91759).
Proof. exact (MK_COMB (@lem6868961 _125543 _91759 _91758) (@lem6868962 _125543 P _91759)). Qed.
Lemma lem6868964 {_125543 : Type'} (_91758 : nat) (P : type686 _125543) (_91759 : _125543 -> Prop) : (term822 _125543 P _91759 _91758) = (term784 _125543 _91758 P _91759).
Proof. exact (TRANS (@lem6868946 _125543 _91758 P _91759) (@lem6868963 _125543 _91758 P _91759)). Qed.
Lemma lem6868966 {_125543 : Type'} (k : _125543 -> Prop) (h1 : @FINITE _125543 k) : term835 _125543 k.
Proof. exact (conj (@lem6868835 _125543 k h1) (@lem6868843 _125543 k)). Qed.
Lemma lem6868968 {_125543 : Type'} (_91758 : nat) (_91759 : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term784 _125543 _91758 P _91759.
Proof. exact (EQ_MP (@lem6868964 _125543 _91758 P _91759) (@lem6868943 _125543 _91759 _91758 P h1)). Qed.
Lemma lem6868969 {_125543 : Type'} (_91758 : nat) (_91759 : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term784 _125543 _91758 P _91759.
Proof. exact (@lem6868968 _125543 _91758 _91759 P h1). Qed.
Lemma lem6868970 {_125543 : Type'} (k : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term836 _125543 P k.
Proof. exact (@lem6868969 _125543 (@CARD _125543 k) k P h1). Qed.
Lemma lem6868973 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) : P k.
Proof. exact (@lem6868970 _125543 k P h1 (@lem6868966 _125543 k h2)). Qed.
Lemma lem6868974 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) : term837 _125543 P k.
Proof. exact (fun h0 : term791 _125543 P k => @lem6868973 _125543 P k h1 h2). Qed.
Lemma lem6868976 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6868977 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) : (term837 _125543 P k) = (P k).
Proof. exact (@lem6868976 (P k)). Qed.
Lemma lem6868978 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) : P k.
Proof. exact (EQ_MP (@lem6868977 _125543 P k) (@lem6868974 _125543 P k h1 h2)). Qed.
Lemma lem6868981 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6868983 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) : (term791 _125543 P k) = (term838 _125543 P k).
Proof. exact (@lem6868981 (P k)). Qed.
Lemma lem6868986 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term791 _125543 P k) : term838 _125543 P k.
Proof. exact (EQ_MP (@lem6868983 _125543 P k) (@lem6868792 _125543 P k h1)). Qed.
Lemma lem6868989 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (@lem6868986 _125543 P k h3 (@lem6868978 _125543 P k h1 h2)). Qed.
Lemma lem6868990 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : term839.
Proof. exact (fun h0 : ~ False => @lem6868989 _125543 P k h1 h2 h3). Qed.
Lemma lem6868992 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6868993 : term839 = False.
Proof. exact (@lem6868992 False). Qed.
Lemma lem6868994 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6868993) (@lem6868990 _125543 P k h1 h2 h3)). Qed.
Lemma lem6868995 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (term791 _125543 P k) = False.
Proof. exact (prop_ext (fun h4 : term791 _125543 P k => @lem6868994 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868792 _125543 P k h3)). Qed.
Lemma lem6868996 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6868995 _125543 P k h1 h2 h3) (@lem6868792 _125543 P k h3)). Qed.
Lemma lem6868997 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (@FINITE _125543 k) = False.
Proof. exact (prop_ext (fun h4 : @FINITE _125543 k => @lem6868996 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868790 _125543 k h2)). Qed.
Lemma lem6868998 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6868997 _125543 P k h1 h2 h3) (@lem6868790 _125543 k h2)). Qed.
Lemma lem6868999 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (term791 _125543 P k) = False.
Proof. exact (prop_ext (fun h4 : term791 _125543 P k => @lem6868998 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868770 _125543 P k h3)). Qed.
Lemma lem6869000 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6868999 _125543 P k h1 h2 h3) (@lem6868770 _125543 P k h3)). Qed.
Lemma lem6869001 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (@FINITE _125543 k) = False.
Proof. exact (prop_ext (fun h4 : @FINITE _125543 k => @lem6869000 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868766 _125543 k h2)). Qed.
Lemma lem6869002 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869001 _125543 P k h1 h2 h3) (@lem6868766 _125543 k h2)). Qed.
Lemma lem6869003 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (term791 _125543 P k) = False.
Proof. exact (prop_ext (fun h4 : term791 _125543 P k => @lem6869002 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868770 _125543 P k h3)). Qed.
Lemma lem6869004 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869003 _125543 P k h1 h2 h3) (@lem6868770 _125543 P k h3)). Qed.
Lemma lem6869005 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (@FINITE _125543 k) = False.
Proof. exact (prop_ext (fun h4 : @FINITE _125543 k => @lem6869004 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868766 _125543 k h2)). Qed.
Lemma lem6869006 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869005 _125543 P k h1 h2 h3) (@lem6868766 _125543 k h2)). Qed.
Lemma lem6869007 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (term791 _125543 P k) = False.
Proof. exact (prop_ext (fun h4 : term791 _125543 P k => @lem6869006 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868740 _125543 P k h3)). Qed.
Lemma lem6869008 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869007 _125543 P k h1 h2 h3) (@lem6868740 _125543 P k h3)). Qed.
Lemma lem6869009 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (@FINITE _125543 k) = False.
Proof. exact (prop_ext (fun h4 : @FINITE _125543 k => @lem6869008 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868734 _125543 k h2)). Qed.
Lemma lem6869010 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869009 _125543 P k h1 h2 h3) (@lem6868734 _125543 k h2)). Qed.
Lemma lem6869011 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (term791 _125543 P k) = False.
Proof. exact (prop_ext (fun h4 : term791 _125543 P k => @lem6869010 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868700 _125543 P k h3)). Qed.
Lemma lem6869012 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869011 _125543 P k h1 h2 h3) (@lem6868700 _125543 P k h3)). Qed.
Lemma lem6869013 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (@FINITE _125543 k) = False.
Proof. exact (prop_ext (fun h4 : @FINITE _125543 k => @lem6869012 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868694 _125543 k h2)). Qed.
Lemma lem6869014 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869013 _125543 P k h1 h2 h3) (@lem6868694 _125543 k h2)). Qed.
Lemma lem6869015 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : (term791 _125543 P k) = False.
Proof. exact (prop_ext (fun h4 : term791 _125543 P k => @lem6869014 _125543 P k h1 h2 h3) (fun h4 : False => @lem6868628 _125543 P k h3)). Qed.
Lemma lem6869016 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) (h3 : term791 _125543 P k) : False.
Proof. exact (EQ_MP (@lem6869015 _125543 P k h1 h2 h3) (@lem6868628 _125543 P k h3)). Qed.
Lemma lem6869017 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) : term790 _125543 P k.
Proof. exact (fun h0 : term791 _125543 P k => @lem6869016 _125543 P k h1 h2 h0). Qed.
Lemma lem6869018 {_125543 : Type'} (P : type686 _125543) (k : _125543 -> Prop) (h1 : term788 _125543 P) (h2 : @FINITE _125543 k) : P k.
Proof. exact (EQ_MP (@lem6868627 _125543 P k) (@lem6869017 _125543 P k h1 h2)). Qed.
Lemma lem6869019 {_125543 : Type'} (k : _125543 -> Prop) (P : type686 _125543) (h1 : term788 _125543 P) : term781 _125543 P k.
Proof. exact (fun h0 : @FINITE _125543 k => @lem6869018 _125543 P k h1 h0). Qed.
Lemma lem6869024 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term783 _125543 P.
Proof. exact (fun k : _125543 -> Prop => @lem6869019 _125543 k P h1). Qed.
Lemma lem6869025 {_125543 : Type'} (P : type686 _125543) : term770 _125543 P.
Proof. exact (fun h0 : term788 _125543 P => @lem6869024 _125543 P h0). Qed.
Lemma lem6869030 {_125543 : Type'} : term780 _125543.
Proof. exact (fun P : type686 _125543 => @lem6869025 _125543 P). Qed.
Lemma lem6869031 {_125543 : Type'} : term779 _125543.
Proof. exact (EQ_MP (@lem6868621 _125543) (@lem6869030 _125543)). Qed.
Lemma lem6869032 {_125543 : Type'} (P : type686 _125543) : term840 _125543 P.
Proof. exact (@lem6869031 _125543 P). Qed.
Lemma lem6869033 {_125543 : Type'} (P : type686 _125543) : (term840 _125543 P) = (term771 _125543 P).
Proof. exact (eq_refl (term840 _125543 P)). Qed.
Lemma lem6869034 {_125543 : Type'} (P : type686 _125543) : term771 _125543 P.
Proof. exact (EQ_MP (@lem6869033 _125543 P) (@lem6869032 _125543 P)). Qed.
Lemma lem6869036 {_125543 : Type'} (P : type686 _125543) : term771 _125543 P.
Proof. exact (@lem6868514 _125543 P (@lem6869034 _125543 P)). Qed.
Lemma lem6869037 {_125543 : Type'} (P : type686 _125543) (h1 : term772 _125543 P) : False.
Proof. exact (@lem6869036 _125543 P (@lem6868498 _125543 P h1)). Qed.
Lemma lem6869038 {_125543 : Type'} (P : type686 _125543) (h1 : term772 _125543 P) : (term772 _125543 P) = False.
Proof. exact (prop_ext (fun h2 : term772 _125543 P => @lem6869037 _125543 P h1) (fun h2 : False => @lem6868498 _125543 P h1)). Qed.
Lemma lem6869039 {_125543 : Type'} (P : type686 _125543) (h1 : term772 _125543 P) : False.
Proof. exact (EQ_MP (@lem6869038 _125543 P h1) (@lem6868498 _125543 P h1)). Qed.
Lemma lem6869040 {_125543 : Type'} (P : type686 _125543) : term771 _125543 P.
Proof. exact (fun h0 : term772 _125543 P => @lem6869039 _125543 P h0). Qed.
Lemma lem6869041 {_125543 : Type'} (P : type686 _125543) : term770 _125543 P.
Proof. exact (EQ_MP (@lem6868497 _125543 P) (@lem6869040 _125543 P)). Qed.
Lemma lem6869042 {_125543 : Type'} (P : type686 _125543) (h1 : term770 _125543 P) : term770 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6869043 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term788 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6869044 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) (h2 : term770 _125543 P) : term783 _125543 P.
Proof. exact (@lem6869042 _125543 P h2 (@lem6869043 _125543 P h1)). Qed.
Lemma lem6869045 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) : term841 _125543 P.
Proof. exact (fun h0 : term770 _125543 P => @lem6869044 _125543 P h1 h0). Qed.
Lemma lem6869046 {_125543 : Type'} (P : type686 _125543) (h1 : term770 _125543 P) : term770 _125543 P.
Proof. exact (h1). Qed.
Lemma lem6869047 {_125543 : Type'} (P : type686 _125543) (h1 : term788 _125543 P) (h2 : term770 _125543 P) : term783 _125543 P.
Proof. exact (@lem6869045 _125543 P h1 (@lem6869046 _125543 P h2)). Qed.
Lemma lem6869048 {_125543 : Type'} (P : type686 _125543) (h1 : term770 _125543 P) : term770 _125543 P.
Proof. exact (fun h0 : term788 _125543 P => @lem6869047 _125543 P h0 h1). Qed.
Lemma lem6869049 {_125543 : Type'} (P : type686 _125543) : term842 _125543 P.
Proof. exact (fun h0 : term770 _125543 P => @lem6869048 _125543 P h0). Qed.
Lemma lem6869065 (a : Prop) : term673 a.
Proof. exact (@lem9851 a). Qed.
Lemma lem6869066 (a : Prop) : (term673 a) = (term674 a).
Proof. exact (eq_refl (term673 a)). Qed.
Lemma lem6869067 (a : Prop) : term674 a.
Proof. exact (EQ_MP (@lem6869066 a) (@lem6869065 a)). Qed.
Lemma lem6869068 (a : Prop) (h1 : a = True) : a = True.
Proof. exact (h1). Qed.
Lemma lem6869069 (a : Prop) (h1 : a = False) : a = False.
Proof. exact (h1). Qed.
Lemma lem6869084 (q : Prop) (p : Prop) (r : Prop) : (term843 q p r) = (term843 q p r).
Proof. exact (eq_refl (term843 q p r)). Qed.
Lemma lem6869085 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = True) : (term844 q p r a) = (term845 q p r).
Proof. exact (MK_COMB (@lem6869084 q p r) (@lem6869068 a h1)). Qed.
Lemma lem6869086 (q : Prop) (p : Prop) (r : Prop) : (term845 q p r) = ((term846 p q r) = (term847 q p r)).
Proof. exact (eq_refl (term845 q p r)). Qed.
Lemma lem6869087 (q : Prop) (p : Prop) (r : Prop) (a : Prop) : (term848 q p r a) = (term848 q p r a).
Proof. exact (eq_refl (term848 q p r a)). Qed.
Lemma lem6869088 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : ((term844 q p r a) = (term845 q p r)) = ((term844 q p r a) = ((term846 p q r) = (term847 q p r))).
Proof. exact (MK_COMB (@lem6869087 q p r a) (@lem6869086 q p r)). Qed.
Lemma lem6869089 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : (term844 q p r a) = ((term849 a p q r) = (term850 a q p r)).
Proof. exact (eq_refl (term844 q p r a)). Qed.
Lemma lem6869090 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869091 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : (term848 q p r a) = (term851 a q p r).
Proof. exact (MK_COMB (@lem6869090) (@lem6869089 a q p r)). Qed.
Lemma lem6869092 (q : Prop) (p : Prop) (r : Prop) : ((term846 p q r) = (term847 q p r)) = ((term846 p q r) = (term847 q p r)).
Proof. exact (eq_refl ((term846 p q r) = (term847 q p r))). Qed.
Lemma lem6869093 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : ((term844 q p r a) = ((term846 p q r) = (term847 q p r))) = (((term849 a p q r) = (term850 a q p r)) = ((term846 p q r) = (term847 q p r))).
Proof. exact (MK_COMB (@lem6869091 a q p r) (@lem6869092 q p r)). Qed.
Lemma lem6869094 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : ((term844 q p r a) = (term845 q p r)) = (((term849 a p q r) = (term850 a q p r)) = ((term846 p q r) = (term847 q p r))).
Proof. exact (TRANS (@lem6869088 a q p r) (@lem6869093 a q p r)). Qed.
Lemma lem6869095 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = True) : ((term849 a p q r) = (term850 a q p r)) = ((term846 p q r) = (term847 q p r)).
Proof. exact (EQ_MP (@lem6869094 a q p r) (@lem6869085 q p r a h1)). Qed.
Lemma lem6869096 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = True) : ((term846 p q r) = (term847 q p r)) = ((term849 a p q r) = (term850 a q p r)).
Proof. exact (SYM (@lem6869095 q p r a h1)). Qed.
Lemma lem6869097 (q : Prop) (p : Prop) (r : Prop) : (term843 q p r) = (term843 q p r).
Proof. exact (eq_refl (term843 q p r)). Qed.
Lemma lem6869098 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = False) : (term844 q p r a) = (term852 q p r).
Proof. exact (MK_COMB (@lem6869097 q p r) (@lem6869069 a h1)). Qed.
Lemma lem6869099 (q : Prop) (p : Prop) (r : Prop) : (term852 q p r) = ((term853 p q r) = (term854 q p r)).
Proof. exact (eq_refl (term852 q p r)). Qed.
Lemma lem6869100 (q : Prop) (p : Prop) (r : Prop) (a : Prop) : (term848 q p r a) = (term848 q p r a).
Proof. exact (eq_refl (term848 q p r a)). Qed.
Lemma lem6869101 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : ((term844 q p r a) = (term852 q p r)) = ((term844 q p r a) = ((term853 p q r) = (term854 q p r))).
Proof. exact (MK_COMB (@lem6869100 q p r a) (@lem6869099 q p r)). Qed.
Lemma lem6869102 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : (term844 q p r a) = ((term849 a p q r) = (term850 a q p r)).
Proof. exact (eq_refl (term844 q p r a)). Qed.
Lemma lem6869103 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869104 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : (term848 q p r a) = (term851 a q p r).
Proof. exact (MK_COMB (@lem6869103) (@lem6869102 a q p r)). Qed.
Lemma lem6869105 (q : Prop) (p : Prop) (r : Prop) : ((term853 p q r) = (term854 q p r)) = ((term853 p q r) = (term854 q p r)).
Proof. exact (eq_refl ((term853 p q r) = (term854 q p r))). Qed.
Lemma lem6869106 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : ((term844 q p r a) = ((term853 p q r) = (term854 q p r))) = (((term849 a p q r) = (term850 a q p r)) = ((term853 p q r) = (term854 q p r))).
Proof. exact (MK_COMB (@lem6869104 a q p r) (@lem6869105 q p r)). Qed.
Lemma lem6869107 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : ((term844 q p r a) = (term852 q p r)) = (((term849 a p q r) = (term850 a q p r)) = ((term853 p q r) = (term854 q p r))).
Proof. exact (TRANS (@lem6869101 a q p r) (@lem6869106 a q p r)). Qed.
Lemma lem6869108 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = False) : ((term849 a p q r) = (term850 a q p r)) = ((term853 p q r) = (term854 q p r)).
Proof. exact (EQ_MP (@lem6869107 a q p r) (@lem6869098 q p r a h1)). Qed.
Lemma lem6869109 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = False) : ((term853 p q r) = (term854 q p r)) = ((term849 a p q r) = (term850 a q p r)).
Proof. exact (SYM (@lem6869108 q p r a h1)). Qed.
Lemma lem6869115 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6869116 (p : Prop) : (True /\ p) = p.
Proof. exact (@lem6869115 p). Qed.
Lemma lem6869117 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6869118 (p : Prop) : (term855 p) = (imp p).
Proof. exact (MK_COMB (@lem6869117) (@lem6869116 p)). Qed.
Lemma lem6869119 (q : Prop) (r : Prop) : (@COND Prop q r True) = (@COND Prop q r True).
Proof. exact (eq_refl (@COND Prop q r True)). Qed.
Lemma lem6869120 (p : Prop) (q : Prop) (r : Prop) : (term846 p q r) = (term856 p q r).
Proof. exact (MK_COMB (@lem6869118 p) (@lem6869119 q r)). Qed.
Lemma lem6869123 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869124 (p : Prop) (q : Prop) (r : Prop) : (term857 p q r) = (term858 p q r).
Proof. exact (MK_COMB (@lem6869123) (@lem6869120 p q r)). Qed.
Lemma lem6869126 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6869127 (q : Prop) (p : Prop) (r : Prop) : (term847 q p r) = (term859 q p r).
Proof. exact (@lem6869126 (term859 q p r)). Qed.
Lemma lem6869132 (q : Prop) (p : Prop) (r : Prop) : ((term846 p q r) = (term847 q p r)) = ((term856 p q r) = (term859 q p r)).
Proof. exact (MK_COMB (@lem6869124 p q r) (@lem6869127 q p r)). Qed.
Lemma lem6869135 (q : Prop) (p : Prop) (r : Prop) : ((term856 p q r) = (term859 q p r)) = ((term846 p q r) = (term847 q p r)).
Proof. exact (SYM (@lem6869132 q p r)). Qed.
Lemma lem6869136 (p : Prop) : term673 p.
Proof. exact (@lem9851 p). Qed.
Lemma lem6869137 (p : Prop) : (term673 p) = (term674 p).
Proof. exact (eq_refl (term673 p)). Qed.
Lemma lem6869138 (p : Prop) : term674 p.
Proof. exact (EQ_MP (@lem6869137 p) (@lem6869136 p)). Qed.
Lemma lem6869139 (p : Prop) (h1 : p = True) : p = True.
Proof. exact (h1). Qed.
Lemma lem6869140 (p : Prop) (h1 : p = False) : p = False.
Proof. exact (h1). Qed.
Lemma lem6869151 (q : Prop) (r : Prop) : (term860 q r) = (term860 q r).
Proof. exact (eq_refl (term860 q r)). Qed.
Lemma lem6869152 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : (term861 q r p) = (term862 q r).
Proof. exact (MK_COMB (@lem6869151 q r) (@lem6869139 p h1)). Qed.
Lemma lem6869153 (q : Prop) (r : Prop) : (term862 q r) = ((term863 q r) = (term864 q r)).
Proof. exact (eq_refl (term862 q r)). Qed.
Lemma lem6869154 (q : Prop) (r : Prop) (p : Prop) : (term865 q r p) = (term865 q r p).
Proof. exact (eq_refl (term865 q r p)). Qed.
Lemma lem6869155 (p : Prop) (q : Prop) (r : Prop) : ((term861 q r p) = (term862 q r)) = ((term861 q r p) = ((term863 q r) = (term864 q r))).
Proof. exact (MK_COMB (@lem6869154 q r p) (@lem6869153 q r)). Qed.
Lemma lem6869156 (q : Prop) (p : Prop) (r : Prop) : (term861 q r p) = ((term856 p q r) = (term859 q p r)).
Proof. exact (eq_refl (term861 q r p)). Qed.
Lemma lem6869157 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869158 (q : Prop) (p : Prop) (r : Prop) : (term865 q r p) = (term866 q p r).
Proof. exact (MK_COMB (@lem6869157) (@lem6869156 q p r)). Qed.
Lemma lem6869159 (q : Prop) (r : Prop) : ((term863 q r) = (term864 q r)) = ((term863 q r) = (term864 q r)).
Proof. exact (eq_refl ((term863 q r) = (term864 q r))). Qed.
Lemma lem6869160 (p : Prop) (q : Prop) (r : Prop) : ((term861 q r p) = ((term863 q r) = (term864 q r))) = (((term856 p q r) = (term859 q p r)) = ((term863 q r) = (term864 q r))).
Proof. exact (MK_COMB (@lem6869158 q p r) (@lem6869159 q r)). Qed.
Lemma lem6869161 (p : Prop) (q : Prop) (r : Prop) : ((term861 q r p) = (term862 q r)) = (((term856 p q r) = (term859 q p r)) = ((term863 q r) = (term864 q r))).
Proof. exact (TRANS (@lem6869155 p q r) (@lem6869160 p q r)). Qed.
Lemma lem6869162 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : ((term856 p q r) = (term859 q p r)) = ((term863 q r) = (term864 q r)).
Proof. exact (EQ_MP (@lem6869161 p q r) (@lem6869152 q r p h1)). Qed.
Lemma lem6869163 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : ((term863 q r) = (term864 q r)) = ((term856 p q r) = (term859 q p r)).
Proof. exact (SYM (@lem6869162 q r p h1)). Qed.
Lemma lem6869164 (q : Prop) (r : Prop) : (term860 q r) = (term860 q r).
Proof. exact (eq_refl (term860 q r)). Qed.
Lemma lem6869165 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : (term861 q r p) = (term867 q r).
Proof. exact (MK_COMB (@lem6869164 q r) (@lem6869140 p h1)). Qed.
Lemma lem6869166 (q : Prop) (r : Prop) : (term867 q r) = ((term868 q r) = (term869 q r)).
Proof. exact (eq_refl (term867 q r)). Qed.
Lemma lem6869167 (q : Prop) (r : Prop) (p : Prop) : (term865 q r p) = (term865 q r p).
Proof. exact (eq_refl (term865 q r p)). Qed.
Lemma lem6869168 (p : Prop) (q : Prop) (r : Prop) : ((term861 q r p) = (term867 q r)) = ((term861 q r p) = ((term868 q r) = (term869 q r))).
Proof. exact (MK_COMB (@lem6869167 q r p) (@lem6869166 q r)). Qed.
Lemma lem6869169 (q : Prop) (p : Prop) (r : Prop) : (term861 q r p) = ((term856 p q r) = (term859 q p r)).
Proof. exact (eq_refl (term861 q r p)). Qed.
Lemma lem6869170 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869171 (q : Prop) (p : Prop) (r : Prop) : (term865 q r p) = (term866 q p r).
Proof. exact (MK_COMB (@lem6869170) (@lem6869169 q p r)). Qed.
Lemma lem6869172 (q : Prop) (r : Prop) : ((term868 q r) = (term869 q r)) = ((term868 q r) = (term869 q r)).
Proof. exact (eq_refl ((term868 q r) = (term869 q r))). Qed.
Lemma lem6869173 (p : Prop) (q : Prop) (r : Prop) : ((term861 q r p) = ((term868 q r) = (term869 q r))) = (((term856 p q r) = (term859 q p r)) = ((term868 q r) = (term869 q r))).
Proof. exact (MK_COMB (@lem6869171 q p r) (@lem6869172 q r)). Qed.
Lemma lem6869174 (p : Prop) (q : Prop) (r : Prop) : ((term861 q r p) = (term867 q r)) = (((term856 p q r) = (term859 q p r)) = ((term868 q r) = (term869 q r))).
Proof. exact (TRANS (@lem6869168 p q r) (@lem6869173 p q r)). Qed.
Lemma lem6869175 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : ((term856 p q r) = (term859 q p r)) = ((term868 q r) = (term869 q r)).
Proof. exact (EQ_MP (@lem6869174 p q r) (@lem6869165 q r p h1)). Qed.
Lemma lem6869176 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : ((term868 q r) = (term869 q r)) = ((term856 p q r) = (term859 q p r)).
Proof. exact (SYM (@lem6869175 q r p h1)). Qed.
Lemma lem6869180 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6869181 (q : Prop) (r : Prop) : (term863 q r) = (@COND Prop q r True).
Proof. exact (@lem6869180 (@COND Prop q r True)). Qed.
Lemma lem6869182 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869183 (q : Prop) (r : Prop) : (term870 q r) = (term871 q r).
Proof. exact (MK_COMB (@lem6869182) (@lem6869181 q r)). Qed.
Lemma lem6869187 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6869188 (r : Prop) : (True -> r) = r.
Proof. exact (@lem6869187 r). Qed.
Lemma lem6869189 (q : Prop) : (imp q) = (imp q).
Proof. exact (eq_refl (imp q)). Qed.
Lemma lem6869190 (q : Prop) (r : Prop) : (term864 q r) = (q -> r).
Proof. exact (MK_COMB (@lem6869189 q) (@lem6869188 r)). Qed.
Lemma lem6869193 (q : Prop) (r : Prop) : ((term863 q r) = (term864 q r)) = ((@COND Prop q r True) = (q -> r)).
Proof. exact (MK_COMB (@lem6869183 q r) (@lem6869190 q r)). Qed.
Lemma lem6869196 (q : Prop) (r : Prop) : ((@COND Prop q r True) = (q -> r)) = ((term863 q r) = (term864 q r)).
Proof. exact (SYM (@lem6869193 q r)). Qed.
Lemma lem6869197 (q : Prop) : term673 q.
Proof. exact (@lem9851 q). Qed.
Lemma lem6869198 (q : Prop) : (term673 q) = (term674 q).
Proof. exact (eq_refl (term673 q)). Qed.
Lemma lem6869199 (q : Prop) : term674 q.
Proof. exact (EQ_MP (@lem6869198 q) (@lem6869197 q)). Qed.
Lemma lem6869200 (q : Prop) (h1 : q = True) : q = True.
Proof. exact (h1). Qed.
Lemma lem6869201 (q : Prop) (h1 : q = False) : q = False.
Proof. exact (h1). Qed.
Lemma lem6869208 (r : Prop) : (term872 r) = (term872 r).
Proof. exact (eq_refl (term872 r)). Qed.
Lemma lem6869209 (r : Prop) (q : Prop) (h1 : q = True) : (term873 r q) = (term874 r).
Proof. exact (MK_COMB (@lem6869208 r) (@lem6869200 q h1)). Qed.
Lemma lem6869210 (r : Prop) : (term874 r) = ((@COND Prop True r True) = (True -> r)).
Proof. exact (eq_refl (term874 r)). Qed.
Lemma lem6869211 (r : Prop) (q : Prop) : (term875 r q) = (term875 r q).
Proof. exact (eq_refl (term875 r q)). Qed.
Lemma lem6869212 (q : Prop) (r : Prop) : ((term873 r q) = (term874 r)) = ((term873 r q) = ((@COND Prop True r True) = (True -> r))).
Proof. exact (MK_COMB (@lem6869211 r q) (@lem6869210 r)). Qed.
Lemma lem6869213 (q : Prop) (r : Prop) : (term873 r q) = ((@COND Prop q r True) = (q -> r)).
Proof. exact (eq_refl (term873 r q)). Qed.
Lemma lem6869214 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869215 (q : Prop) (r : Prop) : (term875 r q) = (term876 q r).
Proof. exact (MK_COMB (@lem6869214) (@lem6869213 q r)). Qed.
Lemma lem6869216 (r : Prop) : ((@COND Prop True r True) = (True -> r)) = ((@COND Prop True r True) = (True -> r)).
Proof. exact (eq_refl ((@COND Prop True r True) = (True -> r))). Qed.
Lemma lem6869217 (q : Prop) (r : Prop) : ((term873 r q) = ((@COND Prop True r True) = (True -> r))) = (((@COND Prop q r True) = (q -> r)) = ((@COND Prop True r True) = (True -> r))).
Proof. exact (MK_COMB (@lem6869215 q r) (@lem6869216 r)). Qed.
Lemma lem6869218 (q : Prop) (r : Prop) : ((term873 r q) = (term874 r)) = (((@COND Prop q r True) = (q -> r)) = ((@COND Prop True r True) = (True -> r))).
Proof. exact (TRANS (@lem6869212 q r) (@lem6869217 q r)). Qed.
Lemma lem6869219 (r : Prop) (q : Prop) (h1 : q = True) : ((@COND Prop q r True) = (q -> r)) = ((@COND Prop True r True) = (True -> r)).
Proof. exact (EQ_MP (@lem6869218 q r) (@lem6869209 r q h1)). Qed.
Lemma lem6869220 (r : Prop) (q : Prop) (h1 : q = True) : ((@COND Prop True r True) = (True -> r)) = ((@COND Prop q r True) = (q -> r)).
Proof. exact (SYM (@lem6869219 r q h1)). Qed.
Lemma lem6869221 (r : Prop) : (term872 r) = (term872 r).
Proof. exact (eq_refl (term872 r)). Qed.
Lemma lem6869222 (r : Prop) (q : Prop) (h1 : q = False) : (term873 r q) = (term877 r).
Proof. exact (MK_COMB (@lem6869221 r) (@lem6869201 q h1)). Qed.
Lemma lem6869223 (r : Prop) : (term877 r) = ((@COND Prop False r True) = (False -> r)).
Proof. exact (eq_refl (term877 r)). Qed.
Lemma lem6869224 (r : Prop) (q : Prop) : (term875 r q) = (term875 r q).
Proof. exact (eq_refl (term875 r q)). Qed.
Lemma lem6869225 (q : Prop) (r : Prop) : ((term873 r q) = (term877 r)) = ((term873 r q) = ((@COND Prop False r True) = (False -> r))).
Proof. exact (MK_COMB (@lem6869224 r q) (@lem6869223 r)). Qed.
Lemma lem6869226 (q : Prop) (r : Prop) : (term873 r q) = ((@COND Prop q r True) = (q -> r)).
Proof. exact (eq_refl (term873 r q)). Qed.
Lemma lem6869227 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869228 (q : Prop) (r : Prop) : (term875 r q) = (term876 q r).
Proof. exact (MK_COMB (@lem6869227) (@lem6869226 q r)). Qed.
Lemma lem6869229 (r : Prop) : ((@COND Prop False r True) = (False -> r)) = ((@COND Prop False r True) = (False -> r)).
Proof. exact (eq_refl ((@COND Prop False r True) = (False -> r))). Qed.
Lemma lem6869230 (q : Prop) (r : Prop) : ((term873 r q) = ((@COND Prop False r True) = (False -> r))) = (((@COND Prop q r True) = (q -> r)) = ((@COND Prop False r True) = (False -> r))).
Proof. exact (MK_COMB (@lem6869228 q r) (@lem6869229 r)). Qed.
Lemma lem6869231 (q : Prop) (r : Prop) : ((term873 r q) = (term877 r)) = (((@COND Prop q r True) = (q -> r)) = ((@COND Prop False r True) = (False -> r))).
Proof. exact (TRANS (@lem6869225 q r) (@lem6869230 q r)). Qed.
Lemma lem6869232 (r : Prop) (q : Prop) (h1 : q = False) : ((@COND Prop q r True) = (q -> r)) = ((@COND Prop False r True) = (False -> r)).
Proof. exact (EQ_MP (@lem6869231 q r) (@lem6869222 r q h1)). Qed.
Lemma lem6869233 (r : Prop) (q : Prop) (h1 : q = False) : ((@COND Prop False r True) = (False -> r)) = ((@COND Prop q r True) = (q -> r)).
Proof. exact (SYM (@lem6869232 r q h1)). Qed.
Lemma lem6869237 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6869238 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem6869237 Prop t2 t1). Qed.
Lemma lem6869239 (r : Prop) : (@COND Prop True r True) = r.
Proof. exact (@lem6869238 True r). Qed.
Lemma lem6869240 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869241 (r : Prop) : (term878 r) = (@eq Prop r).
Proof. exact (MK_COMB (@lem6869240) (@lem6869239 r)). Qed.
Lemma lem6869243 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem6869244 (r : Prop) : (True -> r) = r.
Proof. exact (@lem6869243 r). Qed.
Lemma lem6869245 (r : Prop) : ((@COND Prop True r True) = (True -> r)) = (r = r).
Proof. exact (MK_COMB (@lem6869241 r) (@lem6869244 r)). Qed.
Lemma lem6869247 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6869248 (x : Prop) : (x = x) = True.
Proof. exact (@lem6869247 Prop x). Qed.
Lemma lem6869249 (r : Prop) : (r = r) = True.
Proof. exact (@lem6869248 r). Qed.
Lemma lem6869250 (r : Prop) : ((@COND Prop True r True) = (True -> r)) = True.
Proof. exact (TRANS (@lem6869245 r) (@lem6869249 r)). Qed.
Lemma lem6869251 (r : Prop) : True = ((@COND Prop True r True) = (True -> r)).
Proof. exact (SYM (@lem6869250 r)). Qed.
Lemma lem6869252 (r : Prop) : (@COND Prop True r True) = (True -> r).
Proof. exact (EQ_MP (@lem6869251 r) (@lem0)). Qed.
Lemma lem6869256 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem6869257 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem6869256 Prop t1 t2). Qed.
Lemma lem6869258 (r : Prop) : (@COND Prop False r True) = True.
Proof. exact (@lem6869257 r True). Qed.
Lemma lem6869259 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869260 (r : Prop) : (term879 r) = (@eq Prop True).
Proof. exact (MK_COMB (@lem6869259) (@lem6869258 r)). Qed.
Lemma lem6869262 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6869263 (r : Prop) : (False -> r) = True.
Proof. exact (@lem6869262 r). Qed.
Lemma lem6869264 (r : Prop) : ((@COND Prop False r True) = (False -> r)) = (True = True).
Proof. exact (MK_COMB (@lem6869260 r) (@lem6869263 r)). Qed.
Lemma lem6869266 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem6869267 : (True = True) = True.
Proof. exact (@lem6869266 True). Qed.
Lemma lem6869268 (r : Prop) : ((@COND Prop False r True) = (False -> r)) = True.
Proof. exact (TRANS (@lem6869264 r) (@lem6869267)). Qed.
Lemma lem6869269 (r : Prop) : True = ((@COND Prop False r True) = (False -> r)).
Proof. exact (SYM (@lem6869268 r)). Qed.
Lemma lem6869270 (r : Prop) : (@COND Prop False r True) = (False -> r).
Proof. exact (EQ_MP (@lem6869269 r) (@lem0)). Qed.
Lemma lem6869271 (r : Prop) (q : Prop) (h1 : q = False) : (@COND Prop q r True) = (q -> r).
Proof. exact (EQ_MP (@lem6869233 r q h1) (@lem6869270 r)). Qed.
Lemma lem6869272 (r : Prop) (q : Prop) (h1 : q = True) : (@COND Prop q r True) = (q -> r).
Proof. exact (EQ_MP (@lem6869220 r q h1) (@lem6869252 r)). Qed.
Lemma lem6869274 (q : Prop) (r : Prop) : (@COND Prop q r True) = (q -> r).
Proof. exact (or_elim (@lem6869199 q) (fun h0 : q = True => @lem6869272 r q h0) (fun h0 : q = False => @lem6869271 r q h0)). Qed.
Lemma lem6869275 (q : Prop) (r : Prop) : (term863 q r) = (term864 q r).
Proof. exact (EQ_MP (@lem6869196 q r) (@lem6869274 q r)). Qed.
Lemma lem6869279 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6869280 (q : Prop) (r : Prop) : (term868 q r) = True.
Proof. exact (@lem6869279 (@COND Prop q r True)). Qed.
Lemma lem6869281 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869282 (q : Prop) (r : Prop) : (term880 q r) = (@eq Prop True).
Proof. exact (MK_COMB (@lem6869281) (@lem6869280 q r)). Qed.
Lemma lem6869286 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6869287 (r : Prop) : (False -> r) = True.
Proof. exact (@lem6869286 r). Qed.
Lemma lem6869288 (q : Prop) : (imp q) = (imp q).
Proof. exact (eq_refl (imp q)). Qed.
Lemma lem6869289 (r : Prop) (q : Prop) : (term869 q r) = (q -> True).
Proof. exact (MK_COMB (@lem6869288 q) (@lem6869287 r)). Qed.
Lemma lem6869291 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem6869292 (q : Prop) : (q -> True) = True.
Proof. exact (@lem6869291 q). Qed.
Lemma lem6869293 (q : Prop) (r : Prop) : (term869 q r) = True.
Proof. exact (TRANS (@lem6869289 r q) (@lem6869292 q)). Qed.
Lemma lem6869294 (q : Prop) (r : Prop) : ((term868 q r) = (term869 q r)) = (True = True).
Proof. exact (MK_COMB (@lem6869282 q r) (@lem6869293 q r)). Qed.
Lemma lem6869296 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem6869297 : (True = True) = True.
Proof. exact (@lem6869296 True). Qed.
Lemma lem6869298 (q : Prop) (r : Prop) : ((term868 q r) = (term869 q r)) = True.
Proof. exact (TRANS (@lem6869294 q r) (@lem6869297)). Qed.
Lemma lem6869299 (q : Prop) (r : Prop) : True = ((term868 q r) = (term869 q r)).
Proof. exact (SYM (@lem6869298 q r)). Qed.
Lemma lem6869300 (q : Prop) (r : Prop) : (term868 q r) = (term869 q r).
Proof. exact (EQ_MP (@lem6869299 q r) (@lem0)). Qed.
Lemma lem6869301 (q : Prop) (r : Prop) (p : Prop) (h1 : p = False) : (term856 p q r) = (term859 q p r).
Proof. exact (EQ_MP (@lem6869176 q r p h1) (@lem6869300 q r)). Qed.
Lemma lem6869302 (q : Prop) (r : Prop) (p : Prop) (h1 : p = True) : (term856 p q r) = (term859 q p r).
Proof. exact (EQ_MP (@lem6869163 q r p h1) (@lem6869275 q r)). Qed.
Lemma lem6869304 (q : Prop) (p : Prop) (r : Prop) : (term856 p q r) = (term859 q p r).
Proof. exact (or_elim (@lem6869138 p) (fun h0 : p = True => @lem6869302 q r p h0) (fun h0 : p = False => @lem6869301 q r p h0)). Qed.
Lemma lem6869305 (q : Prop) (p : Prop) (r : Prop) : (term846 p q r) = (term847 q p r).
Proof. exact (EQ_MP (@lem6869135 q p r) (@lem6869304 q p r)). Qed.
Lemma lem6869311 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem6869312 (p : Prop) : (False /\ p) = False.
Proof. exact (@lem6869311 p). Qed.
Lemma lem6869313 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6869314 (p : Prop) : (term881 p) = (imp False).
Proof. exact (MK_COMB (@lem6869313) (@lem6869312 p)). Qed.
Lemma lem6869315 (q : Prop) (r : Prop) : (@COND Prop q r True) = (@COND Prop q r True).
Proof. exact (eq_refl (@COND Prop q r True)). Qed.
Lemma lem6869316 (p : Prop) (q : Prop) (r : Prop) : (term853 p q r) = (term868 q r).
Proof. exact (MK_COMB (@lem6869314 p) (@lem6869315 q r)). Qed.
Lemma lem6869318 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6869319 (q : Prop) (r : Prop) : (term868 q r) = True.
Proof. exact (@lem6869318 (@COND Prop q r True)). Qed.
Lemma lem6869320 (p : Prop) (q : Prop) (r : Prop) : (term853 p q r) = True.
Proof. exact (TRANS (@lem6869316 p q r) (@lem6869319 q r)). Qed.
Lemma lem6869321 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869322 (p : Prop) (q : Prop) (r : Prop) : (term882 p q r) = (@eq Prop True).
Proof. exact (MK_COMB (@lem6869321) (@lem6869320 p q r)). Qed.
Lemma lem6869324 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem6869325 (q : Prop) (p : Prop) (r : Prop) : (term854 q p r) = True.
Proof. exact (@lem6869324 (term859 q p r)). Qed.
Lemma lem6869326 (q : Prop) (p : Prop) (r : Prop) : ((term853 p q r) = (term854 q p r)) = (True = True).
Proof. exact (MK_COMB (@lem6869322 p q r) (@lem6869325 q p r)). Qed.
Lemma lem6869328 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem6869329 : (True = True) = True.
Proof. exact (@lem6869328 True). Qed.
Lemma lem6869330 (q : Prop) (p : Prop) (r : Prop) : ((term853 p q r) = (term854 q p r)) = True.
Proof. exact (TRANS (@lem6869326 q p r) (@lem6869329)). Qed.
Lemma lem6869331 (q : Prop) (p : Prop) (r : Prop) : True = ((term853 p q r) = (term854 q p r)).
Proof. exact (SYM (@lem6869330 q p r)). Qed.
Lemma lem6869332 (q : Prop) (p : Prop) (r : Prop) : (term853 p q r) = (term854 q p r).
Proof. exact (EQ_MP (@lem6869331 q p r) (@lem0)). Qed.
Lemma lem6869333 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = False) : (term849 a p q r) = (term850 a q p r).
Proof. exact (EQ_MP (@lem6869109 q p r a h1) (@lem6869332 q p r)). Qed.
Lemma lem6869334 (q : Prop) (p : Prop) (r : Prop) (a : Prop) (h1 : a = True) : (term849 a p q r) = (term850 a q p r).
Proof. exact (EQ_MP (@lem6869096 q p r a h1) (@lem6869305 q p r)). Qed.
Lemma lem6869338 {A B : Type'} (b : Prop) : term883 A B b.
Proof. exact (@lem12958 A B b). Qed.
Lemma lem6869339 {A B : Type'} (b : Prop) : (term883 A B b) = (term884 A B b).
Proof. exact (eq_refl (term883 A B b)). Qed.
Lemma lem6869340 {A B : Type'} (b : Prop) : term884 A B b.
Proof. exact (EQ_MP (@lem6869339 A B b) (@lem6869338 A B b)). Qed.
Lemma lem6869341 {A B : Type'} (b : Prop) (f : A -> B) : term885 A B b f.
Proof. exact (@lem6869340 A B b f). Qed.
Lemma lem6869342 {A B : Type'} (b : Prop) (f : A -> B) : (term885 A B b f) = (term886 A B b f).
Proof. exact (eq_refl (term885 A B b f)). Qed.
Lemma lem6869343 {A B : Type'} (b : Prop) (f : A -> B) : term886 A B b f.
Proof. exact (EQ_MP (@lem6869342 A B b f) (@lem6869341 A B b f)). Qed.
Lemma lem6869344 {A B : Type'} (b : Prop) (f : A -> B) (x : A) : term887 A B b f x.
Proof. exact (@lem6869343 A B b f x). Qed.
Lemma lem6869345 {A B : Type'} (b : Prop) (x : A) (f : A -> B) : (term887 A B b f x) = (term888 A B b x f).
Proof. exact (eq_refl (term887 A B b f x)). Qed.
Lemma lem6869346 {A B : Type'} (b : Prop) (x : A) (f : A -> B) : term888 A B b x f.
Proof. exact (EQ_MP (@lem6869345 A B b x f) (@lem6869344 A B b f x)). Qed.
Lemma lem6869347 {A B : Type'} (b : Prop) (x : A) (f : A -> B) (y : A) : term889 A B b x f y.
Proof. exact (@lem6869346 A B b x f y). Qed.
Lemma lem6869348 {A B : Type'} (b : Prop) (x : A) (f : A -> B) (y : A) : (term889 A B b x f y) = ((term890 A B f b x y) = (term891 A B b x f y)).
Proof. exact (eq_refl (term889 A B b x f y)). Qed.
Lemma lem6869350 {A K : Type'} (dom : A -> Prop) : term892 A K dom.
Proof. exact (@lem6449478 A K dom). Qed.
Lemma lem6869351 {A K : Type'} (dom : A -> Prop) : (term892 A K dom) = (term893 A K dom).
Proof. exact (eq_refl (term892 A K dom)). Qed.
Lemma lem6869352 {A K : Type'} (dom : A -> Prop) : term893 A K dom.
Proof. exact (EQ_MP (@lem6869351 A K dom) (@lem6869350 A K dom)). Qed.
Lemma lem6869353 {A K : Type'} (dom : A -> Prop) (neut : A) : term894 A K dom neut.
Proof. exact (@lem6869352 A K dom neut). Qed.
Lemma lem6869354 {A K : Type'} (dom : A -> Prop) (neut : A) : (term894 A K dom neut) = (term895 A K dom neut).
Proof. exact (eq_refl (term894 A K dom neut)). Qed.
Lemma lem6869355 {A K : Type'} (dom : A -> Prop) (neut : A) : term895 A K dom neut.
Proof. exact (EQ_MP (@lem6869354 A K dom neut) (@lem6869353 A K dom neut)). Qed.
Lemma lem6869356 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term896 A K dom neut op.
Proof. exact (@lem6869355 A K dom neut op). Qed.
Lemma lem6869357 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : (term896 A K dom neut op) = (term897 A K op dom neut).
Proof. exact (eq_refl (term896 A K dom neut op)). Qed.
Lemma lem6869358 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) : term897 A K op dom neut.
Proof. exact (EQ_MP (@lem6869357 A K op dom neut) (@lem6869356 A K dom neut op)). Qed.
Lemma lem6869359 {A K : Type'} (op : type1400 A) (dom : A -> Prop) (neut : A) (ltle : type1402 K) : term898 A K op dom neut ltle.
Proof. exact (@lem6869358 A K op dom neut ltle). Qed.
Lemma lem6869360 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : (term898 A K op dom neut ltle) = (term899 A K op ltle dom neut).
Proof. exact (eq_refl (term898 A K op dom neut ltle)). Qed.
Lemma lem6869361 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) : term899 A K op ltle dom neut.
Proof. exact (EQ_MP (@lem6869360 A K op ltle dom neut) (@lem6869359 A K op dom neut ltle)). Qed.
Lemma lem6869362 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (neut : A) (k : K -> Prop) : term900 A K op ltle dom neut k.
Proof. exact (@lem6869361 A K op ltle dom neut k). Qed.
Lemma lem6869363 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : (term900 A K op ltle dom neut k) = (term901 A K op ltle k dom neut).
Proof. exact (eq_refl (term900 A K op ltle dom neut k)). Qed.
Lemma lem6869364 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) : term901 A K op ltle k dom neut.
Proof. exact (EQ_MP (@lem6869363 A K op ltle k dom neut) (@lem6869362 A K op ltle dom neut k)). Qed.
Lemma lem6869365 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term902 A K op ltle k dom neut f.
Proof. exact (@lem6869364 A K op ltle k dom neut f). Qed.
Lemma lem6869366 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term902 A K op ltle k dom neut f) = ((@iterato A K dom neut op ltle k f) = (term903 A K op ltle k dom f neut)).
Proof. exact (eq_refl (term902 A K op ltle k dom neut f)). Qed.
Lemma lem6869407 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6869408 {_125638 : Type'} (P : _125638 -> Prop) (x : _125638) : (@IN _125638 x P) = (P x).
Proof. exact (@lem6869407 _125638 P x). Qed.
Lemma lem6869409 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (@IN _125638 i k) = (k i).
Proof. exact (@lem6869408 _125638 k i). Qed.
Lemma lem6869410 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869411 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term904 _125638 i k) = (term905 _125638 k i).
Proof. exact (MK_COMB (@lem6869410) (@lem6869409 _125638 k i)). Qed.
Lemma lem6869415 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6869416 {_125645 : Type'} (P : _125645 -> Prop) (x : _125645) : (@IN _125645 x P) = (P x).
Proof. exact (@lem6869415 _125645 P x). Qed.
Lemma lem6869417 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term906 _125638 _125645 f i s) = (term907 _125638 _125645 s f i).
Proof. exact (@lem6869416 _125645 s (f i)). Qed.
Lemma lem6869418 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869419 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term908 _125638 _125645 f i s) = (term909 _125638 _125645 s f i).
Proof. exact (MK_COMB (@lem6869418) (@lem6869417 _125638 _125645 s f i)). Qed.
Lemma lem6869424 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term910 _125638 _125645 f i z Q) = (term910 _125638 _125645 f i z Q).
Proof. exact (eq_refl (term910 _125638 _125645 f i z Q)). Qed.
Lemma lem6869425 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term911 _125638 _125645 s f i z Q) = (term912 _125638 _125645 s f i z Q).
Proof. exact (MK_COMB (@lem6869419 _125638 _125645 s f i) (@lem6869424 _125638 _125645 f i z Q)). Qed.
Lemma lem6869428 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term913 _125638 _125645 k s f i z Q) = (term914 _125638 _125645 k s f i z Q).
Proof. exact (MK_COMB (@lem6869411 _125638 k i) (@lem6869425 _125638 _125645 s f i z Q)). Qed.
Lemma lem6869431 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869432 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term915 _125638 _125645 k s f i z Q) = (term916 _125638 _125645 k s f i z Q).
Proof. exact (MK_COMB (@lem6869431) (@lem6869428 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869436 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term917 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem6869437 {_125638 : Type'} (p : _125638 -> Prop) (x : _125638) : (term917 _125638 x p) = (p x).
Proof. exact (@lem6869436 _125638 p x). Qed.
Lemma lem6869438 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) (i : _125638) : (term918 _125638 _125645 i k f s z) = (term919 _125638 _125645 k f s z i).
Proof. exact (@lem6869437 _125638 (term920 _125638 _125645 k f s z) i). Qed.
Lemma lem6869439 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (j : _125638) (s : _125645 -> Prop) (z : _125645) : (term919 _125638 _125645 k f s z j) = (term921 _125638 _125645 k f j s z).
Proof. exact (eq_refl (term919 _125638 _125645 k f s z j)). Qed.
Lemma lem6869440 {_125638 : Type'} (GEN_PVAR_282 : _125638) : (@SETSPEC _125638 GEN_PVAR_282) = (@SETSPEC _125638 GEN_PVAR_282).
Proof. exact (eq_refl (@SETSPEC _125638 GEN_PVAR_282)). Qed.
Lemma lem6869441 {_125638 _125645 : Type'} (GEN_PVAR_282 : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (j : _125638) (s : _125645 -> Prop) (z : _125645) : (term922 _125638 _125645 GEN_PVAR_282 k f s z j) = (term923 _125638 _125645 GEN_PVAR_282 k f j s z).
Proof. exact (MK_COMB (@lem6869440 _125638 GEN_PVAR_282) (@lem6869439 _125638 _125645 k f j s z)). Qed.
Lemma lem6869442 {_125638 : Type'} (j : _125638) : j = j.
Proof. exact (eq_refl j). Qed.
Lemma lem6869443 {_125638 _125645 : Type'} (GEN_PVAR_282 : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) (j : _125638) : (term924 _125638 _125645 GEN_PVAR_282 k f s z j) = (term925 _125638 _125645 GEN_PVAR_282 k f s z j).
Proof. exact (MK_COMB (@lem6869441 _125638 _125645 GEN_PVAR_282 k f j s z) (@lem6869442 _125638 j)). Qed.
Lemma lem6869444 {_125638 _125645 : Type'} (GEN_PVAR_282 : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) : (term926 _125638 _125645 GEN_PVAR_282 k f s z) = (term927 _125638 _125645 GEN_PVAR_282 k f s z).
Proof. exact (fun_ext (fun j : _125638 => @lem6869443 _125638 _125645 GEN_PVAR_282 k f s z j)). Qed.
Lemma lem6869445 {_125638 : Type'} : (@ex _125638) = (@ex _125638).
Proof. exact (eq_refl (@ex _125638)). Qed.
Lemma lem6869446 {_125638 _125645 : Type'} (GEN_PVAR_282 : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) : (term928 _125638 _125645 GEN_PVAR_282 k f s z) = (term929 _125638 _125645 GEN_PVAR_282 k f s z).
Proof. exact (MK_COMB (@lem6869445 _125638) (@lem6869444 _125638 _125645 GEN_PVAR_282 k f s z)). Qed.
Lemma lem6869447 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) : (term930 _125638 _125645 k f s z) = (term931 _125638 _125645 k f s z).
Proof. exact (fun_ext (fun GEN_PVAR_282 : _125638 => @lem6869446 _125638 _125645 GEN_PVAR_282 k f s z)). Qed.
Lemma lem6869448 {_125638 : Type'} : (@GSPEC _125638) = (@GSPEC _125638).
Proof. exact (eq_refl (@GSPEC _125638)). Qed.
Lemma lem6869449 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) : (term932 _125638 _125645 k f s z) = (term933 _125638 _125645 k f s z).
Proof. exact (MK_COMB (@lem6869448 _125638) (@lem6869447 _125638 _125645 k f s z)). Qed.
Lemma lem6869450 {_125638 : Type'} (i : _125638) : (@IN _125638 i) = (@IN _125638 i).
Proof. exact (eq_refl (@IN _125638 i)). Qed.
Lemma lem6869451 {_125638 _125645 : Type'} (i : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) : (term918 _125638 _125645 i k f s z) = (term934 _125638 _125645 i k f s z).
Proof. exact (MK_COMB (@lem6869450 _125638 i) (@lem6869449 _125638 _125645 k f s z)). Qed.
Lemma lem6869452 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869453 {_125638 _125645 : Type'} (i : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) : (term935 _125638 _125645 i k f s z) = (term936 _125638 _125645 i k f s z).
Proof. exact (MK_COMB (@lem6869452) (@lem6869451 _125638 _125645 i k f s z)). Qed.
Lemma lem6869454 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (i : _125638) (s : _125645 -> Prop) (z : _125645) : (term919 _125638 _125645 k f s z i) = (term921 _125638 _125645 k f i s z).
Proof. exact (eq_refl (term919 _125638 _125645 k f s z i)). Qed.
Lemma lem6869455 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (i : _125638) (s : _125645 -> Prop) (z : _125645) : ((term918 _125638 _125645 i k f s z) = (term919 _125638 _125645 k f s z i)) = ((term934 _125638 _125645 i k f s z) = (term921 _125638 _125645 k f i s z)).
Proof. exact (MK_COMB (@lem6869453 _125638 _125645 i k f s z) (@lem6869454 _125638 _125645 k f i s z)). Qed.
Lemma lem6869456 {_125638 _125645 : Type'} (k : _125638 -> Prop) (f : _125638 -> _125645) (i : _125638) (s : _125645 -> Prop) (z : _125645) : (term934 _125638 _125645 i k f s z) = (term921 _125638 _125645 k f i s z).
Proof. exact (EQ_MP (@lem6869455 _125638 _125645 k f i s z) (@lem6869438 _125638 _125645 k f s z i)). Qed.
Lemma lem6869460 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6869461 {_125638 : Type'} (P : _125638 -> Prop) (x : _125638) : (@IN _125638 x P) = (P x).
Proof. exact (@lem6869460 _125638 P x). Qed.
Lemma lem6869462 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (@IN _125638 i k) = (k i).
Proof. exact (@lem6869461 _125638 k i). Qed.
Lemma lem6869463 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869464 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term904 _125638 i k) = (term905 _125638 k i).
Proof. exact (MK_COMB (@lem6869463) (@lem6869462 _125638 k i)). Qed.
Lemma lem6869466 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term640 A x s t) = (term641 A s x t).
Proof. exact (EQ_MP (@lem3211702 A s x t) (@lem3211701 A s t x)). Qed.
Lemma lem6869467 {_125645 : Type'} (s : _125645 -> Prop) (x : _125645) (t : _125645 -> Prop) : (term640 _125645 x s t) = (term641 _125645 s x t).
Proof. exact (@lem6869466 _125645 s x t). Qed.
Lemma lem6869468 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term937 _125638 _125645 f i s z) = (term938 _125638 _125645 s f i z).
Proof. exact (@lem6869467 _125645 s (f i) (@INSERT _125645 z (@EMPTY _125645))). Qed.
Lemma lem6869472 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem6869473 {_125645 : Type'} (P : _125645 -> Prop) (x : _125645) : (@IN _125645 x P) = (P x).
Proof. exact (@lem6869472 _125645 P x). Qed.
Lemma lem6869474 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term906 _125638 _125645 f i s) = (term907 _125638 _125645 s f i).
Proof. exact (@lem6869473 _125645 s (f i)). Qed.
Lemma lem6869475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869476 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term908 _125638 _125645 f i s) = (term909 _125638 _125645 s f i).
Proof. exact (MK_COMB (@lem6869475) (@lem6869474 _125638 _125645 s f i)). Qed.
Lemma lem6869478 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term939 A x y s) = (term940 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem6869479 {_125645 : Type'} (y : _125645) (x : _125645) (s : _125645 -> Prop) : (term939 _125645 x y s) = (term940 _125645 y x s).
Proof. exact (@lem6869478 _125645 y x s). Qed.
Lemma lem6869480 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : (term941 _125638 _125645 f i z) = (term942 _125638 _125645 z f i).
Proof. exact (@lem6869479 _125645 z (f i) (@EMPTY _125645)). Qed.
Lemma lem6869486 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem6869487 {_125645 : Type'} (x : _125645) : (@IN _125645 x (@EMPTY _125645)) = False.
Proof. exact (@lem6869486 _125645 x). Qed.
Lemma lem6869488 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term943 _125638 _125645 f i) = False.
Proof. exact (@lem6869487 _125645 (f i)). Qed.
Lemma lem6869489 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term944 _125638 _125645 f i z) = (term944 _125638 _125645 f i z).
Proof. exact (eq_refl (term944 _125638 _125645 f i z)). Qed.
Lemma lem6869490 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term942 _125638 _125645 z f i) = (term945 _125638 _125645 f i z).
Proof. exact (MK_COMB (@lem6869489 _125638 _125645 f i z) (@lem6869488 _125638 _125645 f i)). Qed.
Lemma lem6869492 (t : Prop) : (t \/ False) = t.
Proof. exact (proj1 (@lem1834 t)). Qed.
Lemma lem6869493 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term945 _125638 _125645 f i z) = ((f i) = z).
Proof. exact (@lem6869492 ((f i) = z)). Qed.
Lemma lem6869496 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term942 _125638 _125645 z f i) = ((f i) = z).
Proof. exact (TRANS (@lem6869490 _125638 _125645 f i z) (@lem6869493 _125638 _125645 f i z)). Qed.
Lemma lem6869497 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term941 _125638 _125645 f i z) = ((f i) = z).
Proof. exact (TRANS (@lem6869480 _125638 _125645 z f i) (@lem6869496 _125638 _125645 f i z)). Qed.
Lemma lem6869498 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6869499 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term946 _125638 _125645 f i z) = (term947 _125638 _125645 f i z).
Proof. exact (MK_COMB (@lem6869498) (@lem6869497 _125638 _125645 f i z)). Qed.
Lemma lem6869500 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term938 _125638 _125645 s f i z) = (term948 _125638 _125645 s f i z).
Proof. exact (MK_COMB (@lem6869476 _125638 _125645 s f i) (@lem6869499 _125638 _125645 f i z)). Qed.
Lemma lem6869503 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term937 _125638 _125645 f i s z) = (term948 _125638 _125645 s f i z).
Proof. exact (TRANS (@lem6869468 _125638 _125645 s f i z) (@lem6869500 _125638 _125645 s f i z)). Qed.
Lemma lem6869504 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term921 _125638 _125645 k f i s z) = (term949 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6869464 _125638 k i) (@lem6869503 _125638 _125645 s f i z)). Qed.
Lemma lem6869507 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term934 _125638 _125645 i k f s z) = (term949 _125638 _125645 k s f i z).
Proof. exact (TRANS (@lem6869456 _125638 _125645 k f i s z) (@lem6869504 _125638 _125645 k s f i z)). Qed.
Lemma lem6869508 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869509 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term950 _125638 _125645 i k f s z) = (term951 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6869508) (@lem6869507 _125638 _125645 k s f i z)). Qed.
Lemma lem6869510 (Q : Prop) : Q = Q.
Proof. exact (eq_refl Q). Qed.
Lemma lem6869511 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term952 _125638 _125645 i k f s z Q) = (term953 _125638 _125645 k s f i z Q).
Proof. exact (MK_COMB (@lem6869509 _125638 _125645 k s f i z) (@lem6869510 Q)). Qed.
Lemma lem6869514 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : ((term913 _125638 _125645 k s f i z Q) = (term952 _125638 _125645 i k f s z Q)) = ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)).
Proof. exact (MK_COMB (@lem6869432 _125638 _125645 k s f i z Q) (@lem6869511 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869517 {_125638 _125645 : Type'} (i : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) (Q : Prop) : ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)) = ((term913 _125638 _125645 k s f i z Q) = (term952 _125638 _125645 i k f s z Q)).
Proof. exact (SYM (@lem6869514 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869519 (p : Prop) : p = (term769 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6869520 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)) = (term954 _125638 _125645 k s f i z Q).
Proof. exact (@lem6869519 ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q))). Qed.
Lemma lem6869521 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term954 _125638 _125645 k s f i z Q) = ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)).
Proof. exact (SYM (@lem6869520 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869522 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term955 _125638 _125645 k s f i z Q) : term955 _125638 _125645 k s f i z Q.
Proof. exact (h1). Qed.
Lemma lem6869525 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term954 _125638 _125645 k s f i z Q) : term954 _125638 _125645 k s f i z Q.
Proof. exact (h1). Qed.
Lemma lem6869526 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term956 _125638 _125645 k s f i z Q.
Proof. exact (fun h0 : term954 _125638 _125645 k s f i z Q => @lem6869525 _125638 _125645 k s f i z Q h0). Qed.
Lemma lem6869527 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term956 _125638 _125645 k s f i z Q) : term956 _125638 _125645 k s f i z Q.
Proof. exact (h1). Qed.
Lemma lem6869528 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term954 _125638 _125645 k s f i z Q) : term954 _125638 _125645 k s f i z Q.
Proof. exact (h1). Qed.
Lemma lem6869529 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term954 _125638 _125645 k s f i z Q) (h2 : term956 _125638 _125645 k s f i z Q) : term954 _125638 _125645 k s f i z Q.
Proof. exact (@lem6869527 _125638 _125645 k s f i z Q h2 (@lem6869528 _125638 _125645 k s f i z Q h1)). Qed.
Lemma lem6869530 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term954 _125638 _125645 k s f i z Q) : term957 _125638 _125645 k s f i z Q.
Proof. exact (fun h0 : term956 _125638 _125645 k s f i z Q => @lem6869529 _125638 _125645 k s f i z Q h1 h0). Qed.
Lemma lem6869531 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term956 _125638 _125645 k s f i z Q) : term956 _125638 _125645 k s f i z Q.
Proof. exact (h1). Qed.
Lemma lem6869532 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term954 _125638 _125645 k s f i z Q) (h2 : term956 _125638 _125645 k s f i z Q) : term954 _125638 _125645 k s f i z Q.
Proof. exact (@lem6869530 _125638 _125645 k s f i z Q h1 (@lem6869531 _125638 _125645 k s f i z Q h2)). Qed.
Lemma lem6869533 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term956 _125638 _125645 k s f i z Q) : term956 _125638 _125645 k s f i z Q.
Proof. exact (fun h0 : term954 _125638 _125645 k s f i z Q => @lem6869532 _125638 _125645 k s f i z Q h0 h1). Qed.
Lemma lem6869534 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term958 _125638 _125645 k s f i z Q.
Proof. exact (fun h0 : term956 _125638 _125645 k s f i z Q => @lem6869533 _125638 _125645 k s f i z Q h0). Qed.
Lemma lem6869537 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term956 _125638 _125645 k s f i z Q.
Proof. exact (@lem6869534 _125638 _125645 k s f i z Q (@lem6869526 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869538 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term956 _125638 _125645 k s f i z Q.
Proof. exact (@lem6869537 _125638 _125645 k s f i z Q). Qed.
Lemma lem6869564 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6869565 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term954 _125638 _125645 k s f i z Q) = (term959 _125638 _125645 k s f i z Q).
Proof. exact (@lem6869564 (term955 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869567 (t : Prop) : (term190 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem6869568 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term959 _125638 _125645 k s f i z Q) = ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)).
Proof. exact (@lem6869567 ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q))). Qed.
Lemma lem6869569 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term954 _125638 _125645 k s f i z Q) = ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)).
Proof. exact (TRANS (@lem6869565 _125638 _125645 k s f i z Q) (@lem6869568 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869582 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term960 _125638 _125645 s f i z Q) = (term961 _125638 _125645 s f i z Q).
Proof. exact (fun_ext (fun k : _125638 -> Prop => @lem6869569 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869583 {_125638 : Type'} : (@all (_125638 -> Prop)) = (@all (_125638 -> Prop)).
Proof. exact (eq_refl (@all (_125638 -> Prop))). Qed.
Lemma lem6869584 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term962 _125638 _125645 s f i z Q) = (term963 _125638 _125645 s f i z Q).
Proof. exact (MK_COMB (@lem6869583 _125638) (@lem6869582 _125638 _125645 s f i z Q)). Qed.
Lemma lem6869589 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term964 _125638 _125645 f i z Q) = (term965 _125638 _125645 f i z Q).
Proof. exact (fun_ext (fun s : _125645 -> Prop => @lem6869584 _125638 _125645 s f i z Q)). Qed.
Lemma lem6869590 {_125645 : Type'} : (@all (_125645 -> Prop)) = (@all (_125645 -> Prop)).
Proof. exact (eq_refl (@all (_125645 -> Prop))). Qed.
Lemma lem6869591 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term966 _125638 _125645 f i z Q) = (term967 _125638 _125645 f i z Q).
Proof. exact (MK_COMB (@lem6869590 _125645) (@lem6869589 _125638 _125645 f i z Q)). Qed.
Lemma lem6869596 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) : (term968 _125638 _125645 i z Q) = (term969 _125638 _125645 i z Q).
Proof. exact (fun_ext (fun f : _125638 -> _125645 => @lem6869591 _125638 _125645 f i z Q)). Qed.
Lemma lem6869597 {_125638 _125645 : Type'} : (@all (_125638 -> _125645)) = (@all (_125638 -> _125645)).
Proof. exact (eq_refl (@all (_125638 -> _125645))). Qed.
Lemma lem6869598 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) : (term970 _125638 _125645 i z Q) = (term971 _125638 _125645 i z Q).
Proof. exact (MK_COMB (@lem6869597 _125638 _125645) (@lem6869596 _125638 _125645 i z Q)). Qed.
Lemma lem6869603 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) : (term972 _125638 _125645 z Q) = (term973 _125638 _125645 z Q).
Proof. exact (fun_ext (fun i : _125638 => @lem6869598 _125638 _125645 i z Q)). Qed.
Lemma lem6869604 {_125638 : Type'} : (@all _125638) = (@all _125638).
Proof. exact (eq_refl (@all _125638)). Qed.
Lemma lem6869605 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) : (term974 _125638 _125645 z Q) = (term975 _125638 _125645 z Q).
Proof. exact (MK_COMB (@lem6869604 _125638) (@lem6869603 _125638 _125645 z Q)). Qed.
Lemma lem6869610 {_125638 _125645 : Type'} (Q : Prop) : (term976 _125638 _125645 Q) = (term977 _125638 _125645 Q).
Proof. exact (fun_ext (fun z : _125645 => @lem6869605 _125638 _125645 z Q)). Qed.
Lemma lem6869611 {_125645 : Type'} : (@all _125645) = (@all _125645).
Proof. exact (eq_refl (@all _125645)). Qed.
Lemma lem6869612 {_125638 _125645 : Type'} (Q : Prop) : (term978 _125638 _125645 Q) = (term979 _125638 _125645 Q).
Proof. exact (MK_COMB (@lem6869611 _125645) (@lem6869610 _125638 _125645 Q)). Qed.
Lemma lem6869617 {_125638 _125645 : Type'} : (term980 _125638 _125645) = (term981 _125638 _125645).
Proof. exact (fun_ext (fun Q : Prop => @lem6869612 _125638 _125645 Q)). Qed.
Lemma lem6869618 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6869627 {_125638 _125645 : Type'} : (term982 _125638 _125645) = (term983 _125638 _125645).
Proof. exact (MK_COMB (@lem6869618) (@lem6869617 _125638 _125645)). Qed.
Lemma lem6869660 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)) = ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q)).
Proof. exact (eq_refl ((term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q))). Qed.
Lemma lem6869661 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term961 _125638 _125645 s f i z Q) = (term961 _125638 _125645 s f i z Q).
Proof. exact (fun_ext (fun k : _125638 -> Prop => @lem6869660 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6869662 {_125638 : Type'} : (@all (_125638 -> Prop)) = (@all (_125638 -> Prop)).
Proof. exact (eq_refl (@all (_125638 -> Prop))). Qed.
Lemma lem6869663 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term963 _125638 _125645 s f i z Q) = (term963 _125638 _125645 s f i z Q).
Proof. exact (MK_COMB (@lem6869662 _125638) (@lem6869661 _125638 _125645 s f i z Q)). Qed.
Lemma lem6869664 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term965 _125638 _125645 f i z Q) = (term965 _125638 _125645 f i z Q).
Proof. exact (fun_ext (fun s : _125645 -> Prop => @lem6869663 _125638 _125645 s f i z Q)). Qed.
Lemma lem6869665 {_125645 : Type'} : (@all (_125645 -> Prop)) = (@all (_125645 -> Prop)).
Proof. exact (eq_refl (@all (_125645 -> Prop))). Qed.
Lemma lem6869666 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term967 _125638 _125645 f i z Q) = (term967 _125638 _125645 f i z Q).
Proof. exact (MK_COMB (@lem6869665 _125645) (@lem6869664 _125638 _125645 f i z Q)). Qed.
Lemma lem6869667 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) : (term969 _125638 _125645 i z Q) = (term969 _125638 _125645 i z Q).
Proof. exact (fun_ext (fun f : _125638 -> _125645 => @lem6869666 _125638 _125645 f i z Q)). Qed.
Lemma lem6869668 {_125638 _125645 : Type'} : (@all (_125638 -> _125645)) = (@all (_125638 -> _125645)).
Proof. exact (eq_refl (@all (_125638 -> _125645))). Qed.
Lemma lem6869669 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) : (term971 _125638 _125645 i z Q) = (term971 _125638 _125645 i z Q).
Proof. exact (MK_COMB (@lem6869668 _125638 _125645) (@lem6869667 _125638 _125645 i z Q)). Qed.
Lemma lem6869670 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) : (term973 _125638 _125645 z Q) = (term973 _125638 _125645 z Q).
Proof. exact (fun_ext (fun i : _125638 => @lem6869669 _125638 _125645 i z Q)). Qed.
Lemma lem6869671 {_125638 : Type'} : (@all _125638) = (@all _125638).
Proof. exact (eq_refl (@all _125638)). Qed.
Lemma lem6869672 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) : (term975 _125638 _125645 z Q) = (term975 _125638 _125645 z Q).
Proof. exact (MK_COMB (@lem6869671 _125638) (@lem6869670 _125638 _125645 z Q)). Qed.
Lemma lem6869673 {_125638 _125645 : Type'} (Q : Prop) : (term977 _125638 _125645 Q) = (term977 _125638 _125645 Q).
Proof. exact (fun_ext (fun z : _125645 => @lem6869672 _125638 _125645 z Q)). Qed.
Lemma lem6869674 {_125645 : Type'} : (@all _125645) = (@all _125645).
Proof. exact (eq_refl (@all _125645)). Qed.
Lemma lem6869675 {_125638 _125645 : Type'} (Q : Prop) : (term979 _125638 _125645 Q) = (term979 _125638 _125645 Q).
Proof. exact (MK_COMB (@lem6869674 _125645) (@lem6869673 _125638 _125645 Q)). Qed.
Lemma lem6869676 {_125638 _125645 : Type'} : (term981 _125638 _125645) = (term981 _125638 _125645).
Proof. exact (fun_ext (fun Q : Prop => @lem6869675 _125638 _125645 Q)). Qed.
Lemma lem6869677 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6869678 {_125638 _125645 : Type'} : (term983 _125638 _125645) = (term983 _125638 _125645).
Proof. exact (MK_COMB (@lem6869677) (@lem6869676 _125638 _125645)). Qed.
Lemma lem6869679 {_125638 _125645 : Type'} : (term982 _125638 _125645) = (term983 _125638 _125645).
Proof. exact (TRANS (@lem6869627 _125638 _125645) (@lem6869678 _125638 _125645)). Qed.
Lemma lem6869685 (P : Prop -> Prop) : (term984 P) = (term985 P).
Proof. exact (EQ_MP (@lem11005 P) (@lem11004 P)). Qed.
Lemma lem6869686 {_125638 _125645 : Type'} : (term986 _125638 _125645) = (term987 _125638 _125645).
Proof. exact (@lem6869685 (term981 _125638 _125645)). Qed.
Lemma lem6869687 {_125638 _125645 : Type'} (Q : Prop) : (term988 _125638 _125645 Q) = (term979 _125638 _125645 Q).
Proof. exact (eq_refl (term988 _125638 _125645 Q)). Qed.
Lemma lem6869688 {_125638 _125645 : Type'} : (term989 _125638 _125645) = (term981 _125638 _125645).
Proof. exact (fun_ext (fun Q : Prop => @lem6869687 _125638 _125645 Q)). Qed.
Lemma lem6869689 : (@all Prop) = (@all Prop).
Proof. exact (eq_refl (@all Prop)). Qed.
Lemma lem6869690 {_125638 _125645 : Type'} : (term986 _125638 _125645) = (term983 _125638 _125645).
Proof. exact (MK_COMB (@lem6869689) (@lem6869688 _125638 _125645)). Qed.
Lemma lem6869691 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869692 {_125638 _125645 : Type'} : (term990 _125638 _125645) = (term991 _125638 _125645).
Proof. exact (MK_COMB (@lem6869691) (@lem6869690 _125638 _125645)). Qed.
Lemma lem6869693 {_125638 _125645 : Type'} : (term992 _125638 _125645) = (term993 _125638 _125645).
Proof. exact (eq_refl (term992 _125638 _125645)). Qed.
Lemma lem6869694 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869695 {_125638 _125645 : Type'} : (term994 _125638 _125645) = (term995 _125638 _125645).
Proof. exact (MK_COMB (@lem6869694) (@lem6869693 _125638 _125645)). Qed.
Lemma lem6869696 {_125638 _125645 : Type'} : (term996 _125638 _125645) = (term997 _125638 _125645).
Proof. exact (eq_refl (term996 _125638 _125645)). Qed.
Lemma lem6869697 {_125638 _125645 : Type'} : (term987 _125638 _125645) = (term998 _125638 _125645).
Proof. exact (MK_COMB (@lem6869695 _125638 _125645) (@lem6869696 _125638 _125645)). Qed.
Lemma lem6869698 {_125638 _125645 : Type'} : ((term986 _125638 _125645) = (term987 _125638 _125645)) = ((term983 _125638 _125645) = (term998 _125638 _125645)).
Proof. exact (MK_COMB (@lem6869692 _125638 _125645) (@lem6869697 _125638 _125645)). Qed.
Lemma lem6869699 {_125638 _125645 : Type'} : (term983 _125638 _125645) = (term998 _125638 _125645).
Proof. exact (EQ_MP (@lem6869698 _125638 _125645) (@lem6869686 _125638 _125645)). Qed.
Lemma lem6869737 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem6869738 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term999 _125638 _125645 f i z) = (term947 _125638 _125645 f i z).
Proof. exact (@lem6869737 (term947 _125638 _125645 f i z)). Qed.
Lemma lem6869739 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term909 _125638 _125645 s f i) = (term909 _125638 _125645 s f i).
Proof. exact (eq_refl (term909 _125638 _125645 s f i)). Qed.
Lemma lem6869740 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1000 _125638 _125645 s f i z) = (term948 _125638 _125645 s f i z).
Proof. exact (MK_COMB (@lem6869739 _125638 _125645 s f i) (@lem6869738 _125638 _125645 f i z)). Qed.
Lemma lem6869743 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term905 _125638 k i) = (term905 _125638 k i).
Proof. exact (eq_refl (term905 _125638 k i)). Qed.
Lemma lem6869744 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1001 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6869743 _125638 k i) (@lem6869740 _125638 _125645 s f i z)). Qed.
Lemma lem6869747 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869748 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1002 _125638 _125645 k s f i z) = (term1003 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6869747) (@lem6869744 _125638 _125645 k s f i z)). Qed.
Lemma lem6869750 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem6869751 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1004 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z).
Proof. exact (@lem6869750 (term949 _125638 _125645 k s f i z)). Qed.
Lemma lem6869756 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : ((term1001 _125638 _125645 k s f i z) = (term1004 _125638 _125645 k s f i z)) = ((term949 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z)).
Proof. exact (MK_COMB (@lem6869748 _125638 _125645 k s f i z) (@lem6869751 _125638 _125645 k s f i z)). Qed.
Lemma lem6869757 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1005 _125638 _125645 s f i z) = (term1006 _125638 _125645 s f i z).
Proof. exact (fun_ext (fun k : _125638 -> Prop => @lem6869756 _125638 _125645 k s f i z)). Qed.
Lemma lem6869758 {_125638 : Type'} : (@all (_125638 -> Prop)) = (@all (_125638 -> Prop)).
Proof. exact (eq_refl (@all (_125638 -> Prop))). Qed.
Lemma lem6869759 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1007 _125638 _125645 s f i z) = (term1008 _125638 _125645 s f i z).
Proof. exact (MK_COMB (@lem6869758 _125638) (@lem6869757 _125638 _125645 s f i z)). Qed.
Lemma lem6869766 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1009 _125638 _125645 f i z) = (term1010 _125638 _125645 f i z).
Proof. exact (fun_ext (fun s : _125645 -> Prop => @lem6869759 _125638 _125645 s f i z)). Qed.
Lemma lem6869767 {_125645 : Type'} : (@all (_125645 -> Prop)) = (@all (_125645 -> Prop)).
Proof. exact (eq_refl (@all (_125645 -> Prop))). Qed.
Lemma lem6869768 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1011 _125638 _125645 f i z) = (term1012 _125638 _125645 f i z).
Proof. exact (MK_COMB (@lem6869767 _125645) (@lem6869766 _125638 _125645 f i z)). Qed.
Lemma lem6869775 {_125638 _125645 : Type'} (i : _125638) (z : _125645) : (term1013 _125638 _125645 i z) = (term1014 _125638 _125645 i z).
Proof. exact (fun_ext (fun f : _125638 -> _125645 => @lem6869768 _125638 _125645 f i z)). Qed.
Lemma lem6869776 {_125638 _125645 : Type'} : (@all (_125638 -> _125645)) = (@all (_125638 -> _125645)).
Proof. exact (eq_refl (@all (_125638 -> _125645))). Qed.
Lemma lem6869777 {_125638 _125645 : Type'} (i : _125638) (z : _125645) : (term1015 _125638 _125645 i z) = (term1016 _125638 _125645 i z).
Proof. exact (MK_COMB (@lem6869776 _125638 _125645) (@lem6869775 _125638 _125645 i z)). Qed.
Lemma lem6869784 {_125638 _125645 : Type'} (z : _125645) : (term1017 _125638 _125645 z) = (term1018 _125638 _125645 z).
Proof. exact (fun_ext (fun i : _125638 => @lem6869777 _125638 _125645 i z)). Qed.
Lemma lem6869785 {_125638 : Type'} : (@all _125638) = (@all _125638).
Proof. exact (eq_refl (@all _125638)). Qed.
Lemma lem6869786 {_125638 _125645 : Type'} (z : _125645) : (term1019 _125638 _125645 z) = (term1020 _125638 _125645 z).
Proof. exact (MK_COMB (@lem6869785 _125638) (@lem6869784 _125638 _125645 z)). Qed.
Lemma lem6869793 {_125638 _125645 : Type'} : (term1021 _125638 _125645) = (term1022 _125638 _125645).
Proof. exact (fun_ext (fun z : _125645 => @lem6869786 _125638 _125645 z)). Qed.
Lemma lem6869794 {_125645 : Type'} : (@all _125645) = (@all _125645).
Proof. exact (eq_refl (@all _125645)). Qed.
Lemma lem6869795 {_125638 _125645 : Type'} : (term993 _125638 _125645) = (term1023 _125638 _125645).
Proof. exact (MK_COMB (@lem6869794 _125645) (@lem6869793 _125638 _125645)). Qed.
Lemma lem6869802 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6869803 {_125638 _125645 : Type'} : (term995 _125638 _125645) = (term1024 _125638 _125645).
Proof. exact (MK_COMB (@lem6869802) (@lem6869795 _125638 _125645)). Qed.
Lemma lem6869839 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem21763 t)). Qed.
Lemma lem6869840 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1025 _125638 _125645 f i z) = False.
Proof. exact (@lem6869839 (term947 _125638 _125645 f i z)). Qed.
Lemma lem6869841 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term909 _125638 _125645 s f i) = (term909 _125638 _125645 s f i).
Proof. exact (eq_refl (term909 _125638 _125645 s f i)). Qed.
Lemma lem6869842 {_125638 _125645 : Type'} (z : _125645) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1026 _125638 _125645 s f i z) = (term1027 _125638 _125645 s f i).
Proof. exact (MK_COMB (@lem6869841 _125638 _125645 s f i) (@lem6869840 _125638 _125645 f i z)). Qed.
Lemma lem6869844 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem21763 t)). Qed.
Lemma lem6869845 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1027 _125638 _125645 s f i) = False.
Proof. exact (@lem6869844 (term907 _125638 _125645 s f i)). Qed.
Lemma lem6869846 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1026 _125638 _125645 s f i z) = False.
Proof. exact (TRANS (@lem6869842 _125638 _125645 z s f i) (@lem6869845 _125638 _125645 s f i)). Qed.
Lemma lem6869847 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term905 _125638 k i) = (term905 _125638 k i).
Proof. exact (eq_refl (term905 _125638 k i)). Qed.
Lemma lem6869848 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (z : _125645) (k : _125638 -> Prop) (i : _125638) : (term1028 _125638 _125645 k s f i z) = (term1029 _125638 k i).
Proof. exact (MK_COMB (@lem6869847 _125638 k i) (@lem6869846 _125638 _125645 s f i z)). Qed.
Lemma lem6869850 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem21763 t)). Qed.
Lemma lem6869851 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1029 _125638 k i) = False.
Proof. exact (@lem6869850 (k i)). Qed.
Lemma lem6869852 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1028 _125638 _125645 k s f i z) = False.
Proof. exact (TRANS (@lem6869848 _125638 _125645 s f z k i) (@lem6869851 _125638 k i)). Qed.
Lemma lem6869853 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6869854 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1030 _125638 _125645 k s f i z) = (@eq Prop False).
Proof. exact (MK_COMB (@lem6869853) (@lem6869852 _125638 _125645 k s f i z)). Qed.
Lemma lem6869856 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem21763 t)). Qed.
Lemma lem6869857 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1031 _125638 _125645 k s f i z) = False.
Proof. exact (@lem6869856 (term949 _125638 _125645 k s f i z)). Qed.
Lemma lem6869858 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : ((term1028 _125638 _125645 k s f i z) = (term1031 _125638 _125645 k s f i z)) = (False = False).
Proof. exact (MK_COMB (@lem6869854 _125638 _125645 k s f i z) (@lem6869857 _125638 _125645 k s f i z)). Qed.
Lemma lem6869860 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem21742 t)). Qed.
Lemma lem6869861 : (False = False) = (~ False).
Proof. exact (@lem6869860 False). Qed.
Lemma lem6869863 : (~ False) = True.
Proof. exact (proj2 (@lem21780)). Qed.
Lemma lem6869864 : (False = False) = True.
Proof. exact (TRANS (@lem6869861) (@lem6869863)). Qed.
Lemma lem6869865 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : ((term1028 _125638 _125645 k s f i z) = (term1031 _125638 _125645 k s f i z)) = True.
Proof. exact (TRANS (@lem6869858 _125638 _125645 k s f i z) (@lem6869864)). Qed.
Lemma lem6869866 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1032 _125638 _125645 s f i z) = (term1033 _125638).
Proof. exact (fun_ext (fun k : _125638 -> Prop => @lem6869865 _125638 _125645 k s f i z)). Qed.
Lemma lem6869867 {_125638 : Type'} : (@all (_125638 -> Prop)) = (@all (_125638 -> Prop)).
Proof. exact (eq_refl (@all (_125638 -> Prop))). Qed.
Lemma lem6869868 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1034 _125638 _125645 s f i z) = (term1035 _125638).
Proof. exact (MK_COMB (@lem6869867 _125638) (@lem6869866 _125638 _125645 s f i z)). Qed.
Lemma lem6869870 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6869871 {_125638 : Type'} (t : Prop) : (term1037 _125638 t) = t.
Proof. exact (@lem6869870 (_125638 -> Prop) t). Qed.
Lemma lem6869872 {_125638 : Type'} : (term1035 _125638) = True.
Proof. exact (@lem6869871 _125638 True). Qed.
Lemma lem6869873 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1034 _125638 _125645 s f i z) = True.
Proof. exact (TRANS (@lem6869868 _125638 _125645 s f i z) (@lem6869872 _125638)). Qed.
Lemma lem6869874 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1038 _125638 _125645 f i z) = (term1033 _125645).
Proof. exact (fun_ext (fun s : _125645 -> Prop => @lem6869873 _125638 _125645 s f i z)). Qed.
Lemma lem6869875 {_125645 : Type'} : (@all (_125645 -> Prop)) = (@all (_125645 -> Prop)).
Proof. exact (eq_refl (@all (_125645 -> Prop))). Qed.
Lemma lem6869876 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1039 _125638 _125645 f i z) = (term1035 _125645).
Proof. exact (MK_COMB (@lem6869875 _125645) (@lem6869874 _125638 _125645 f i z)). Qed.
Lemma lem6869878 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6869879 {_125645 : Type'} (t : Prop) : (term1037 _125645 t) = t.
Proof. exact (@lem6869878 (_125645 -> Prop) t). Qed.
Lemma lem6869880 {_125645 : Type'} : (term1035 _125645) = True.
Proof. exact (@lem6869879 _125645 True). Qed.
Lemma lem6869881 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1039 _125638 _125645 f i z) = True.
Proof. exact (TRANS (@lem6869876 _125638 _125645 f i z) (@lem6869880 _125645)). Qed.
Lemma lem6869882 {_125638 _125645 : Type'} (i : _125638) (z : _125645) : (term1040 _125638 _125645 i z) = (term1041 _125638 _125645).
Proof. exact (fun_ext (fun f : _125638 -> _125645 => @lem6869881 _125638 _125645 f i z)). Qed.
Lemma lem6869883 {_125638 _125645 : Type'} : (@all (_125638 -> _125645)) = (@all (_125638 -> _125645)).
Proof. exact (eq_refl (@all (_125638 -> _125645))). Qed.
Lemma lem6869884 {_125638 _125645 : Type'} (i : _125638) (z : _125645) : (term1042 _125638 _125645 i z) = (term1043 _125638 _125645).
Proof. exact (MK_COMB (@lem6869883 _125638 _125645) (@lem6869882 _125638 _125645 i z)). Qed.
Lemma lem6869886 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6869887 {_125638 _125645 : Type'} (t : Prop) : (term1044 _125638 _125645 t) = t.
Proof. exact (@lem6869886 (_125638 -> _125645) t). Qed.
Lemma lem6869888 {_125638 _125645 : Type'} : (term1043 _125638 _125645) = True.
Proof. exact (@lem6869887 _125638 _125645 True). Qed.
Lemma lem6869889 {_125638 _125645 : Type'} (i : _125638) (z : _125645) : (term1042 _125638 _125645 i z) = True.
Proof. exact (TRANS (@lem6869884 _125638 _125645 i z) (@lem6869888 _125638 _125645)). Qed.
Lemma lem6869890 {_125638 _125645 : Type'} (z : _125645) : (term1045 _125638 _125645 z) = (term1046 _125638).
Proof. exact (fun_ext (fun i : _125638 => @lem6869889 _125638 _125645 i z)). Qed.
Lemma lem6869891 {_125638 : Type'} : (@all _125638) = (@all _125638).
Proof. exact (eq_refl (@all _125638)). Qed.
Lemma lem6869892 {_125638 _125645 : Type'} (z : _125645) : (term1047 _125638 _125645 z) = (term1048 _125638).
Proof. exact (MK_COMB (@lem6869891 _125638) (@lem6869890 _125638 _125645 z)). Qed.
Lemma lem6869894 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6869895 {_125638 : Type'} (t : Prop) : (term1036 _125638 t) = t.
Proof. exact (@lem6869894 _125638 t). Qed.
Lemma lem6869896 {_125638 : Type'} : (term1048 _125638) = True.
Proof. exact (@lem6869895 _125638 True). Qed.
Lemma lem6869897 {_125638 _125645 : Type'} (z : _125645) : (term1047 _125638 _125645 z) = True.
Proof. exact (TRANS (@lem6869892 _125638 _125645 z) (@lem6869896 _125638)). Qed.
Lemma lem6869898 {_125638 _125645 : Type'} : (term1049 _125638 _125645) = (term1046 _125645).
Proof. exact (fun_ext (fun z : _125645 => @lem6869897 _125638 _125645 z)). Qed.
Lemma lem6869899 {_125645 : Type'} : (@all _125645) = (@all _125645).
Proof. exact (eq_refl (@all _125645)). Qed.
Lemma lem6869900 {_125638 _125645 : Type'} : (term997 _125638 _125645) = (term1048 _125645).
Proof. exact (MK_COMB (@lem6869899 _125645) (@lem6869898 _125638 _125645)). Qed.
Lemma lem6869902 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem6869903 {_125645 : Type'} (t : Prop) : (term1036 _125645 t) = t.
Proof. exact (@lem6869902 _125645 t). Qed.
Lemma lem6869904 {_125645 : Type'} : (term1048 _125645) = True.
Proof. exact (@lem6869903 _125645 True). Qed.
Lemma lem6869905 {_125638 _125645 : Type'} : (term997 _125638 _125645) = True.
Proof. exact (TRANS (@lem6869900 _125638 _125645) (@lem6869904 _125645)). Qed.
Lemma lem6869906 {_125638 _125645 : Type'} : (term998 _125638 _125645) = (term1050 _125638 _125645).
Proof. exact (MK_COMB (@lem6869803 _125638 _125645) (@lem6869905 _125638 _125645)). Qed.
Lemma lem6869908 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem6869909 {_125638 _125645 : Type'} : (term1050 _125638 _125645) = (term1023 _125638 _125645).
Proof. exact (@lem6869908 (term1023 _125638 _125645)). Qed.
Lemma lem6869948 {_125638 _125645 : Type'} : (term998 _125638 _125645) = (term1023 _125638 _125645).
Proof. exact (TRANS (@lem6869906 _125638 _125645) (@lem6869909 _125638 _125645)). Qed.
Lemma lem6869949 {_125638 _125645 : Type'} : (term983 _125638 _125645) = (term1023 _125638 _125645).
Proof. exact (TRANS (@lem6869699 _125638 _125645) (@lem6869948 _125638 _125645)). Qed.
Lemma lem6869950 {_125638 _125645 : Type'} : (term982 _125638 _125645) = (term1023 _125638 _125645).
Proof. exact (TRANS (@lem6869679 _125638 _125645) (@lem6869949 _125638 _125645)). Qed.
Lemma lem6869951 {_125638 _125645 : Type'} : (term1023 _125638 _125645) = (term982 _125638 _125645).
Proof. exact (SYM (@lem6869950 _125638 _125645)). Qed.
Lemma lem6869953 (p : Prop) : p = (term769 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem6869954 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : ((term949 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z)) = (term1051 _125638 _125645 k s f i z).
Proof. exact (@lem6869953 ((term949 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z))). Qed.
Lemma lem6869955 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1051 _125638 _125645 k s f i z) = ((term949 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z)).
Proof. exact (SYM (@lem6869954 _125638 _125645 k s f i z)). Qed.
Lemma lem6869956 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1052 _125638 _125645 k s f i z) : term1052 _125638 _125645 k s f i z.
Proof. exact (h1). Qed.
Lemma lem6869964 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1053 _125638 _125645 f i z) = ((f i) = z).
Proof. exact (@lem16933 ((f i) = z)). Qed.
Lemma lem6869966 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1054 _125638 _125645 s f i) = (term1054 _125638 _125645 s f i).
Proof. exact (eq_refl (term1054 _125638 _125645 s f i)). Qed.
Lemma lem6869967 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1055 _125638 _125645 s f i z) = (term1056 _125638 _125645 s f i z).
Proof. exact (MK_COMB (@lem6869966 _125638 _125645 s f i) (@lem6869964 _125638 _125645 f i z)). Qed.
Lemma lem6869968 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1057 _125638 _125645 s f i z) = (term1055 _125638 _125645 s f i z).
Proof. exact (@lem17045 (term907 _125638 _125645 s f i) (term947 _125638 _125645 f i z)). Qed.
Lemma lem6869969 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1057 _125638 _125645 s f i z) = (term1056 _125638 _125645 s f i z).
Proof. exact (TRANS (@lem6869968 _125638 _125645 s f i z) (@lem6869967 _125638 _125645 s f i z)). Qed.
Lemma lem6869974 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1058 _125638 k i) = (term1058 _125638 k i).
Proof. exact (eq_refl (term1058 _125638 k i)). Qed.
Lemma lem6869975 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1059 _125638 _125645 k s f i z) = (term1060 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6869974 _125638 k i) (@lem6869969 _125638 _125645 s f i z)). Qed.
Lemma lem6869976 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1061 _125638 _125645 k s f i z) = (term1059 _125638 _125645 k s f i z).
Proof. exact (@lem17045 (k i) (term948 _125638 _125645 s f i z)). Qed.
Lemma lem6869977 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1061 _125638 _125645 k s f i z) = (term1060 _125638 _125645 k s f i z).
Proof. exact (TRANS (@lem6869976 _125638 _125645 k s f i z) (@lem6869975 _125638 _125645 k s f i z)). Qed.
Lemma lem6869988 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1053 _125638 _125645 f i z) = ((f i) = z).
Proof. exact (@lem16933 ((f i) = z)). Qed.
Lemma lem6869990 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1054 _125638 _125645 s f i) = (term1054 _125638 _125645 s f i).
Proof. exact (eq_refl (term1054 _125638 _125645 s f i)). Qed.
Lemma lem6869991 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1055 _125638 _125645 s f i z) = (term1056 _125638 _125645 s f i z).
Proof. exact (MK_COMB (@lem6869990 _125638 _125645 s f i) (@lem6869988 _125638 _125645 f i z)). Qed.
Lemma lem6869992 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1057 _125638 _125645 s f i z) = (term1055 _125638 _125645 s f i z).
Proof. exact (@lem17045 (term907 _125638 _125645 s f i) (term947 _125638 _125645 f i z)). Qed.
Lemma lem6869993 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1057 _125638 _125645 s f i z) = (term1056 _125638 _125645 s f i z).
Proof. exact (TRANS (@lem6869992 _125638 _125645 s f i z) (@lem6869991 _125638 _125645 s f i z)). Qed.
Lemma lem6869998 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1058 _125638 k i) = (term1058 _125638 k i).
Proof. exact (eq_refl (term1058 _125638 k i)). Qed.
Lemma lem6869999 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1059 _125638 _125645 k s f i z) = (term1060 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6869998 _125638 k i) (@lem6869993 _125638 _125645 s f i z)). Qed.
Lemma lem6870000 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1061 _125638 _125645 k s f i z) = (term1059 _125638 _125645 k s f i z).
Proof. exact (@lem17045 (k i) (term948 _125638 _125645 s f i z)). Qed.
Lemma lem6870001 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1061 _125638 _125645 k s f i z) = (term1060 _125638 _125645 k s f i z).
Proof. exact (TRANS (@lem6870000 _125638 _125645 k s f i z) (@lem6869999 _125638 _125645 k s f i z)). Qed.
Lemma lem6870004 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term949 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z).
Proof. exact (eq_refl (term949 _125638 _125645 k s f i z)). Qed.
Lemma lem6870005 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6870006 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1062 _125638 _125645 k s f i z) = (term1063 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6870005) (@lem6869977 _125638 _125645 k s f i z)). Qed.
Lemma lem6870007 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1064 _125638 _125645 k s f i z) = (term1065 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6870006 _125638 _125645 k s f i z) (@lem6870004 _125638 _125645 k s f i z)). Qed.
Lemma lem6870009 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term951 _125638 _125645 k s f i z) = (term951 _125638 _125645 k s f i z).
Proof. exact (eq_refl (term951 _125638 _125645 k s f i z)). Qed.
Lemma lem6870010 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1066 _125638 _125645 k s f i z) = (term1067 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6870009 _125638 _125645 k s f i z) (@lem6870001 _125638 _125645 k s f i z)). Qed.
Lemma lem6870011 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem6870012 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1068 _125638 _125645 k s f i z) = (term1069 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6870011) (@lem6870010 _125638 _125645 k s f i z)). Qed.
Lemma lem6870013 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1070 _125638 _125645 k s f i z) = (term1071 _125638 _125645 k s f i z).
Proof. exact (MK_COMB (@lem6870012 _125638 _125645 k s f i z) (@lem6870007 _125638 _125645 k s f i z)). Qed.
Lemma lem6870014 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1052 _125638 _125645 k s f i z) = (term1070 _125638 _125645 k s f i z).
Proof. exact (@lem17646 (term949 _125638 _125645 k s f i z) (term949 _125638 _125645 k s f i z)). Qed.
Lemma lem6870019 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1052 _125638 _125645 k s f i z) = (term1071 _125638 _125645 k s f i z).
Proof. exact (TRANS (@lem6870014 _125638 _125645 k s f i z) (@lem6870013 _125638 _125645 k s f i z)). Qed.
Lemma lem6870126 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1052 _125638 _125645 k s f i z) : term1071 _125638 _125645 k s f i z.
Proof. exact (EQ_MP (@lem6870019 _125638 _125645 k s f i z) (@lem6869956 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870127 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term1067 _125638 _125645 k s f i z.
Proof. exact (h1). Qed.
Lemma lem6870128 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term1065 _125638 _125645 k s f i z.
Proof. exact (h1). Qed.
Lemma lem6870129 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term1060 _125638 _125645 k s f i z.
Proof. exact (proj2 (@lem6870127 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870130 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term949 _125638 _125645 k s f i z.
Proof. exact (proj1 (@lem6870127 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870131 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term948 _125638 _125645 s f i z.
Proof. exact (proj2 (@lem6870130 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870136 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1056 _125638 _125645 s f i z) : term1056 _125638 _125645 s f i z.
Proof. exact (h1). Qed.
Lemma lem6870139 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term949 _125638 _125645 k s f i z.
Proof. exact (proj2 (@lem6870128 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870140 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term1060 _125638 _125645 k s f i z.
Proof. exact (proj1 (@lem6870128 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870141 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term948 _125638 _125645 s f i z.
Proof. exact (proj2 (@lem6870139 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870146 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1056 _125638 _125645 s f i z) : term1056 _125638 _125645 s f i z.
Proof. exact (h1). Qed.
Lemma lem6870164 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) (h1 : term1072 _125638 k i) : term1072 _125638 k i.
Proof. exact (h1). Qed.
Lemma lem6870180 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (h1 : term1073 _125638 _125645 s f i) : term1073 _125638 _125645 s f i.
Proof. exact (h1). Qed.
Lemma lem6870196 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (f i) = z.
Proof. exact (h1). Qed.
Lemma lem6870212 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) (h1 : term1072 _125638 k i) : term1072 _125638 k i.
Proof. exact (h1). Qed.
Lemma lem6870228 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (h1 : term1073 _125638 _125645 s f i) : term1073 _125638 _125645 s f i.
Proof. exact (h1). Qed.
Lemma lem6870244 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (f i) = z.
Proof. exact (h1). Qed.
Lemma lem6870252 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) (h1 : term1072 _125638 k i) : term1072 _125638 k i.
Proof. exact (h1). Qed.
Lemma lem6870260 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (h1 : term1073 _125638 _125645 s f i) : term1073 _125638 _125645 s f i.
Proof. exact (h1). Qed.
Lemma lem6870266 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term947 _125638 _125645 f i z.
Proof. exact (proj2 (@lem6870131 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870268 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (f i) = z.
Proof. exact (h1). Qed.
Lemma lem6870276 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) (h1 : term1072 _125638 k i) : term1072 _125638 k i.
Proof. exact (h1). Qed.
Lemma lem6870284 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (h1 : term1073 _125638 _125645 s f i) : term1073 _125638 _125645 s f i.
Proof. exact (h1). Qed.
Lemma lem6870290 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term947 _125638 _125645 f i z.
Proof. exact (proj2 (@lem6870141 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870292 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (f i) = z.
Proof. exact (h1). Qed.
Lemma lem6870293 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : z = (f i).
Proof. exact (SYM (@lem6870268 _125638 _125645 f i z h1)). Qed.
Lemma lem6870336 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1074 _125638 _125645 f i) = (term1074 _125638 _125645 f i).
Proof. exact (eq_refl (term1074 _125638 _125645 f i)). Qed.
Lemma lem6870337 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (term1075 _125638 _125645 f i z) = (term1076 _125638 _125645 f i).
Proof. exact (MK_COMB (@lem6870336 _125638 _125645 f i) (@lem6870293 _125638 _125645 f i z h1)). Qed.
Lemma lem6870338 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1076 _125638 _125645 f i) = (term1077 _125638 _125645 f i).
Proof. exact (eq_refl (term1076 _125638 _125645 f i)). Qed.
Lemma lem6870339 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1078 _125638 _125645 f i z) = (term1078 _125638 _125645 f i z).
Proof. exact (eq_refl (term1078 _125638 _125645 f i z)). Qed.
Lemma lem6870340 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : ((term1075 _125638 _125645 f i z) = (term1076 _125638 _125645 f i)) = ((term1075 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)).
Proof. exact (MK_COMB (@lem6870339 _125638 _125645 f i z) (@lem6870338 _125638 _125645 f i)). Qed.
Lemma lem6870341 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1075 _125638 _125645 f i z) = (term947 _125638 _125645 f i z).
Proof. exact (eq_refl (term1075 _125638 _125645 f i z)). Qed.
Lemma lem6870342 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6870343 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1078 _125638 _125645 f i z) = (term1079 _125638 _125645 f i z).
Proof. exact (MK_COMB (@lem6870342) (@lem6870341 _125638 _125645 f i z)). Qed.
Lemma lem6870344 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1077 _125638 _125645 f i) = (term1077 _125638 _125645 f i).
Proof. exact (eq_refl (term1077 _125638 _125645 f i)). Qed.
Lemma lem6870345 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : ((term1075 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)) = ((term947 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)).
Proof. exact (MK_COMB (@lem6870343 _125638 _125645 f i z) (@lem6870344 _125638 _125645 f i)). Qed.
Lemma lem6870346 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : ((term1075 _125638 _125645 f i z) = (term1076 _125638 _125645 f i)) = ((term947 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)).
Proof. exact (TRANS (@lem6870340 _125638 _125645 z f i) (@lem6870345 _125638 _125645 z f i)). Qed.
Lemma lem6870347 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (term947 _125638 _125645 f i z) = (term1077 _125638 _125645 f i).
Proof. exact (EQ_MP (@lem6870346 _125638 _125645 z f i) (@lem6870337 _125638 _125645 f i z h1)). Qed.
Lemma lem6870348 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : term1077 _125638 _125645 f i.
Proof. exact (EQ_MP (@lem6870347 _125638 _125645 f i z h2) (@lem6870266 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870349 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : z = (f i).
Proof. exact (SYM (@lem6870292 _125638 _125645 f i z h1)). Qed.
Lemma lem6870392 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1074 _125638 _125645 f i) = (term1074 _125638 _125645 f i).
Proof. exact (eq_refl (term1074 _125638 _125645 f i)). Qed.
Lemma lem6870393 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (term1075 _125638 _125645 f i z) = (term1076 _125638 _125645 f i).
Proof. exact (MK_COMB (@lem6870392 _125638 _125645 f i) (@lem6870349 _125638 _125645 f i z h1)). Qed.
Lemma lem6870394 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1076 _125638 _125645 f i) = (term1077 _125638 _125645 f i).
Proof. exact (eq_refl (term1076 _125638 _125645 f i)). Qed.
Lemma lem6870395 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1078 _125638 _125645 f i z) = (term1078 _125638 _125645 f i z).
Proof. exact (eq_refl (term1078 _125638 _125645 f i z)). Qed.
Lemma lem6870396 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : ((term1075 _125638 _125645 f i z) = (term1076 _125638 _125645 f i)) = ((term1075 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)).
Proof. exact (MK_COMB (@lem6870395 _125638 _125645 f i z) (@lem6870394 _125638 _125645 f i)). Qed.
Lemma lem6870397 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1075 _125638 _125645 f i z) = (term947 _125638 _125645 f i z).
Proof. exact (eq_refl (term1075 _125638 _125645 f i z)). Qed.
Lemma lem6870398 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6870399 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term1078 _125638 _125645 f i z) = (term1079 _125638 _125645 f i z).
Proof. exact (MK_COMB (@lem6870398) (@lem6870397 _125638 _125645 f i z)). Qed.
Lemma lem6870400 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1077 _125638 _125645 f i) = (term1077 _125638 _125645 f i).
Proof. exact (eq_refl (term1077 _125638 _125645 f i)). Qed.
Lemma lem6870401 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : ((term1075 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)) = ((term947 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)).
Proof. exact (MK_COMB (@lem6870399 _125638 _125645 f i z) (@lem6870400 _125638 _125645 f i)). Qed.
Lemma lem6870402 {_125638 _125645 : Type'} (z : _125645) (f : _125638 -> _125645) (i : _125638) : ((term1075 _125638 _125645 f i z) = (term1076 _125638 _125645 f i)) = ((term947 _125638 _125645 f i z) = (term1077 _125638 _125645 f i)).
Proof. exact (TRANS (@lem6870396 _125638 _125645 z f i) (@lem6870401 _125638 _125645 z f i)). Qed.
Lemma lem6870403 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : (f i) = z) : (term947 _125638 _125645 f i z) = (term1077 _125638 _125645 f i).
Proof. exact (EQ_MP (@lem6870402 _125638 _125645 z f i) (@lem6870393 _125638 _125645 f i z h1)). Qed.
Lemma lem6870404 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : term1077 _125638 _125645 f i.
Proof. exact (EQ_MP (@lem6870403 _125638 _125645 f i z h2) (@lem6870290 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870442 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : k i.
Proof. exact (proj1 (@lem6870130 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870443 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term1080 _125638 k i.
Proof. exact (fun h0 : term1072 _125638 k i => @lem6870442 _125638 _125645 k s f i z h1). Qed.
Lemma lem6870445 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870446 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1080 _125638 k i) = (k i).
Proof. exact (@lem6870445 (k i)). Qed.
Lemma lem6870447 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : k i.
Proof. exact (EQ_MP (@lem6870446 _125638 k i) (@lem6870443 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870450 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6870452 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1072 _125638 k i) = (term1081 _125638 k i).
Proof. exact (@lem6870450 (k i)). Qed.
Lemma lem6870455 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) (h1 : term1072 _125638 k i) : term1081 _125638 k i.
Proof. exact (EQ_MP (@lem6870452 _125638 k i) (@lem6870252 _125638 k i h1)). Qed.
Lemma lem6870458 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (@lem6870455 _125638 k i h1 (@lem6870447 _125638 _125645 k s f i z h2)). Qed.
Lemma lem6870459 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : term839.
Proof. exact (fun h0 : ~ False => @lem6870458 _125638 _125645 k s f i z h1 h2). Qed.
Lemma lem6870461 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870462 : term839 = False.
Proof. exact (@lem6870461 False). Qed.
Lemma lem6870463 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870462) (@lem6870459 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870501 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term907 _125638 _125645 s f i.
Proof. exact (proj1 (@lem6870131 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870502 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term1082 _125638 _125645 s f i.
Proof. exact (fun h0 : term1073 _125638 _125645 s f i => @lem6870501 _125638 _125645 k s f i z h1). Qed.
Lemma lem6870504 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870505 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1082 _125638 _125645 s f i) = (term907 _125638 _125645 s f i).
Proof. exact (@lem6870504 (term907 _125638 _125645 s f i)). Qed.
Lemma lem6870506 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : term907 _125638 _125645 s f i.
Proof. exact (EQ_MP (@lem6870505 _125638 _125645 s f i) (@lem6870502 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870509 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6870511 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1073 _125638 _125645 s f i) = (term1083 _125638 _125645 s f i).
Proof. exact (@lem6870509 (term907 _125638 _125645 s f i)). Qed.
Lemma lem6870514 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (h1 : term1073 _125638 _125645 s f i) : term1083 _125638 _125645 s f i.
Proof. exact (EQ_MP (@lem6870511 _125638 _125645 s f i) (@lem6870260 _125638 _125645 s f i h1)). Qed.
Lemma lem6870517 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (@lem6870514 _125638 _125645 s f i h1 (@lem6870506 _125638 _125645 k s f i z h2)). Qed.
Lemma lem6870518 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : term839.
Proof. exact (fun h0 : ~ False => @lem6870517 _125638 _125645 k s f i z h1 h2). Qed.
Lemma lem6870520 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870521 : term839 = False.
Proof. exact (@lem6870520 False). Qed.
Lemma lem6870522 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870521) (@lem6870518 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870560 {_125645 : Type'} (x : _125645) : x = x.
Proof. exact (@lem21386 _125645 x). Qed.
Lemma lem6870561 {_125645 : Type'} (x : _125645) : x = x.
Proof. exact (@lem6870560 _125645 x). Qed.
Lemma lem6870562 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (f i) = (f i).
Proof. exact (@lem6870561 _125645 (f i)). Qed.
Lemma lem6870563 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : term1084 _125638 _125645 f i.
Proof. exact (fun h0 : term1077 _125638 _125645 f i => @lem6870562 _125638 _125645 f i). Qed.
Lemma lem6870565 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870566 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1084 _125638 _125645 f i) = ((f i) = (f i)).
Proof. exact (@lem6870565 ((f i) = (f i))). Qed.
Lemma lem6870567 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (f i) = (f i).
Proof. exact (EQ_MP (@lem6870566 _125638 _125645 f i) (@lem6870563 _125638 _125645 f i)). Qed.
Lemma lem6870570 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6870572 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1077 _125638 _125645 f i) = (term1085 _125638 _125645 f i).
Proof. exact (@lem6870570 ((f i) = (f i))). Qed.
Lemma lem6870575 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : term1085 _125638 _125645 f i.
Proof. exact (EQ_MP (@lem6870572 _125638 _125645 f i) (@lem6870348 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870578 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (@lem6870575 _125638 _125645 k s f i z h1 h2 (@lem6870567 _125638 _125645 f i)). Qed.
Lemma lem6870579 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : term839.
Proof. exact (fun h0 : ~ False => @lem6870578 _125638 _125645 k s f i z h1 h2). Qed.
Lemma lem6870581 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870582 : term839 = False.
Proof. exact (@lem6870581 False). Qed.
Lemma lem6870621 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : k i.
Proof. exact (proj1 (@lem6870139 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870622 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term1080 _125638 k i.
Proof. exact (fun h0 : term1072 _125638 k i => @lem6870621 _125638 _125645 k s f i z h1). Qed.
Lemma lem6870624 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870625 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1080 _125638 k i) = (k i).
Proof. exact (@lem6870624 (k i)). Qed.
Lemma lem6870626 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : k i.
Proof. exact (EQ_MP (@lem6870625 _125638 k i) (@lem6870622 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870629 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6870631 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) : (term1072 _125638 k i) = (term1081 _125638 k i).
Proof. exact (@lem6870629 (k i)). Qed.
Lemma lem6870634 {_125638 : Type'} (k : _125638 -> Prop) (i : _125638) (h1 : term1072 _125638 k i) : term1081 _125638 k i.
Proof. exact (EQ_MP (@lem6870631 _125638 k i) (@lem6870276 _125638 k i h1)). Qed.
Lemma lem6870637 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (@lem6870634 _125638 k i h1 (@lem6870626 _125638 _125645 k s f i z h2)). Qed.
Lemma lem6870638 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : term839.
Proof. exact (fun h0 : ~ False => @lem6870637 _125638 _125645 k s f i z h1 h2). Qed.
Lemma lem6870640 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870641 : term839 = False.
Proof. exact (@lem6870640 False). Qed.
Lemma lem6870642 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870641) (@lem6870638 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870680 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term907 _125638 _125645 s f i.
Proof. exact (proj1 (@lem6870141 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870681 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term1082 _125638 _125645 s f i.
Proof. exact (fun h0 : term1073 _125638 _125645 s f i => @lem6870680 _125638 _125645 k s f i z h1). Qed.
Lemma lem6870683 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870684 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1082 _125638 _125645 s f i) = (term907 _125638 _125645 s f i).
Proof. exact (@lem6870683 (term907 _125638 _125645 s f i)). Qed.
Lemma lem6870685 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : term907 _125638 _125645 s f i.
Proof. exact (EQ_MP (@lem6870684 _125638 _125645 s f i) (@lem6870681 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870688 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6870690 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) : (term1073 _125638 _125645 s f i) = (term1083 _125638 _125645 s f i).
Proof. exact (@lem6870688 (term907 _125638 _125645 s f i)). Qed.
Lemma lem6870693 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (h1 : term1073 _125638 _125645 s f i) : term1083 _125638 _125645 s f i.
Proof. exact (EQ_MP (@lem6870690 _125638 _125645 s f i) (@lem6870284 _125638 _125645 s f i h1)). Qed.
Lemma lem6870696 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (@lem6870693 _125638 _125645 s f i h1 (@lem6870685 _125638 _125645 k s f i z h2)). Qed.
Lemma lem6870697 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : term839.
Proof. exact (fun h0 : ~ False => @lem6870696 _125638 _125645 k s f i z h1 h2). Qed.
Lemma lem6870699 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870700 : term839 = False.
Proof. exact (@lem6870699 False). Qed.
Lemma lem6870701 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870700) (@lem6870697 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870739 {_125645 : Type'} (x : _125645) : x = x.
Proof. exact (@lem21386 _125645 x). Qed.
Lemma lem6870740 {_125645 : Type'} (x : _125645) : x = x.
Proof. exact (@lem6870739 _125645 x). Qed.
Lemma lem6870741 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (f i) = (f i).
Proof. exact (@lem6870740 _125645 (f i)). Qed.
Lemma lem6870742 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : term1084 _125638 _125645 f i.
Proof. exact (fun h0 : term1077 _125638 _125645 f i => @lem6870741 _125638 _125645 f i). Qed.
Lemma lem6870744 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870745 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1084 _125638 _125645 f i) = ((f i) = (f i)).
Proof. exact (@lem6870744 ((f i) = (f i))). Qed.
Lemma lem6870746 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (f i) = (f i).
Proof. exact (EQ_MP (@lem6870745 _125638 _125645 f i) (@lem6870742 _125638 _125645 f i)). Qed.
Lemma lem6870749 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6870751 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) : (term1077 _125638 _125645 f i) = (term1085 _125638 _125645 f i).
Proof. exact (@lem6870749 ((f i) = (f i))). Qed.
Lemma lem6870754 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : term1085 _125638 _125645 f i.
Proof. exact (EQ_MP (@lem6870751 _125638 _125645 f i) (@lem6870404 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870757 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (@lem6870754 _125638 _125645 k s f i z h1 h2 (@lem6870746 _125638 _125645 f i)). Qed.
Lemma lem6870758 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : term839.
Proof. exact (fun h0 : ~ False => @lem6870757 _125638 _125645 k s f i z h1 h2). Qed.
Lemma lem6870760 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6870761 : term839 = False.
Proof. exact (@lem6870760 False). Qed.
Lemma lem6870763 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870761) (@lem6870758 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870764 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870582) (@lem6870579 _125638 _125645 k s f i z h1 h2)). Qed.
Lemma lem6870765 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : ((f i) = z) = False.
Proof. exact (prop_ext (fun h3 : (f i) = z => @lem6870763 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870292 _125638 _125645 f i z h2)). Qed.
Lemma lem6870766 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870765 _125638 _125645 k s f i z h1 h2) (@lem6870292 _125638 _125645 f i z h2)). Qed.
Lemma lem6870767 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : (term1073 _125638 _125645 s f i) = False.
Proof. exact (prop_ext (fun h3 : term1073 _125638 _125645 s f i => @lem6870701 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870284 _125638 _125645 s f i h1)). Qed.
Lemma lem6870768 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870767 _125638 _125645 k s f i z h1 h2) (@lem6870284 _125638 _125645 s f i h1)). Qed.
Lemma lem6870769 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : (term1072 _125638 k i) = False.
Proof. exact (prop_ext (fun h3 : term1072 _125638 k i => @lem6870642 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870276 _125638 k i h1)). Qed.
Lemma lem6870770 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870769 _125638 _125645 k s f i z h1 h2) (@lem6870276 _125638 k i h1)). Qed.
Lemma lem6870771 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : ((f i) = z) = False.
Proof. exact (prop_ext (fun h3 : (f i) = z => @lem6870764 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870268 _125638 _125645 f i z h2)). Qed.
Lemma lem6870772 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870771 _125638 _125645 k s f i z h1 h2) (@lem6870268 _125638 _125645 f i z h2)). Qed.
Lemma lem6870773 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : (term1073 _125638 _125645 s f i) = False.
Proof. exact (prop_ext (fun h3 : term1073 _125638 _125645 s f i => @lem6870522 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870260 _125638 _125645 s f i h1)). Qed.
Lemma lem6870774 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870773 _125638 _125645 k s f i z h1 h2) (@lem6870260 _125638 _125645 s f i h1)). Qed.
Lemma lem6870775 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : (term1072 _125638 k i) = False.
Proof. exact (prop_ext (fun h3 : term1072 _125638 k i => @lem6870463 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870252 _125638 k i h1)). Qed.
Lemma lem6870776 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870775 _125638 _125645 k s f i z h1 h2) (@lem6870252 _125638 k i h1)). Qed.
Lemma lem6870777 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : ((f i) = z) = False.
Proof. exact (prop_ext (fun h3 : (f i) = z => @lem6870766 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870244 _125638 _125645 f i z h2)). Qed.
Lemma lem6870778 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870777 _125638 _125645 k s f i z h1 h2) (@lem6870244 _125638 _125645 f i z h2)). Qed.
Lemma lem6870779 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : (term1073 _125638 _125645 s f i) = False.
Proof. exact (prop_ext (fun h3 : term1073 _125638 _125645 s f i => @lem6870768 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870228 _125638 _125645 s f i h1)). Qed.
Lemma lem6870780 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870779 _125638 _125645 k s f i z h1 h2) (@lem6870228 _125638 _125645 s f i h1)). Qed.
Lemma lem6870781 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : (term1072 _125638 k i) = False.
Proof. exact (prop_ext (fun h3 : term1072 _125638 k i => @lem6870770 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870212 _125638 k i h1)). Qed.
Lemma lem6870782 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870781 _125638 _125645 k s f i z h1 h2) (@lem6870212 _125638 k i h1)). Qed.
Lemma lem6870783 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : ((f i) = z) = False.
Proof. exact (prop_ext (fun h3 : (f i) = z => @lem6870772 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870196 _125638 _125645 f i z h2)). Qed.
Lemma lem6870784 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870783 _125638 _125645 k s f i z h1 h2) (@lem6870196 _125638 _125645 f i z h2)). Qed.
Lemma lem6870785 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : (term1073 _125638 _125645 s f i) = False.
Proof. exact (prop_ext (fun h3 : term1073 _125638 _125645 s f i => @lem6870774 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870180 _125638 _125645 s f i h1)). Qed.
Lemma lem6870786 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870785 _125638 _125645 k s f i z h1 h2) (@lem6870180 _125638 _125645 s f i h1)). Qed.
Lemma lem6870787 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : (term1072 _125638 k i) = False.
Proof. exact (prop_ext (fun h3 : term1072 _125638 k i => @lem6870776 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870164 _125638 k i h1)). Qed.
Lemma lem6870788 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870787 _125638 _125645 k s f i z h1 h2) (@lem6870164 _125638 k i h1)). Qed.
Lemma lem6870789 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : ((f i) = z) = False.
Proof. exact (prop_ext (fun h3 : (f i) = z => @lem6870778 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870244 _125638 _125645 f i z h2)). Qed.
Lemma lem6870790 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870789 _125638 _125645 k s f i z h1 h2) (@lem6870244 _125638 _125645 f i z h2)). Qed.
Lemma lem6870791 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : (term1073 _125638 _125645 s f i) = False.
Proof. exact (prop_ext (fun h3 : term1073 _125638 _125645 s f i => @lem6870780 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870228 _125638 _125645 s f i h1)). Qed.
Lemma lem6870792 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870791 _125638 _125645 k s f i z h1 h2) (@lem6870228 _125638 _125645 s f i h1)). Qed.
Lemma lem6870793 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : (term1072 _125638 k i) = False.
Proof. exact (prop_ext (fun h3 : term1072 _125638 k i => @lem6870782 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870212 _125638 k i h1)). Qed.
Lemma lem6870794 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870793 _125638 _125645 k s f i z h1 h2) (@lem6870212 _125638 k i h1)). Qed.
Lemma lem6870795 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : ((f i) = z) = False.
Proof. exact (prop_ext (fun h3 : (f i) = z => @lem6870784 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870196 _125638 _125645 f i z h2)). Qed.
Lemma lem6870796 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : (f i) = z) : False.
Proof. exact (EQ_MP (@lem6870795 _125638 _125645 k s f i z h1 h2) (@lem6870196 _125638 _125645 f i z h2)). Qed.
Lemma lem6870797 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : (term1073 _125638 _125645 s f i) = False.
Proof. exact (prop_ext (fun h3 : term1073 _125638 _125645 s f i => @lem6870786 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870180 _125638 _125645 s f i h1)). Qed.
Lemma lem6870798 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1073 _125638 _125645 s f i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870797 _125638 _125645 k s f i z h1 h2) (@lem6870180 _125638 _125645 s f i h1)). Qed.
Lemma lem6870799 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : (term1072 _125638 k i) = False.
Proof. exact (prop_ext (fun h3 : term1072 _125638 k i => @lem6870788 _125638 _125645 k s f i z h1 h2) (fun h3 : False => @lem6870164 _125638 k i h1)). Qed.
Lemma lem6870800 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1072 _125638 k i) (h2 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870799 _125638 _125645 k s f i z h1 h2) (@lem6870164 _125638 k i h1)). Qed.
Lemma lem6870801 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) (h2 : term1056 _125638 _125645 s f i z) : False.
Proof. exact (or_elim (@lem6870146 _125638 _125645 s f i z h2) (fun h0 : term1073 _125638 _125645 s f i => @lem6870792 _125638 _125645 k s f i z h0 h1) (fun h0 : (f i) = z => @lem6870790 _125638 _125645 k s f i z h1 h0)). Qed.
Lemma lem6870802 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1065 _125638 _125645 k s f i z) : False.
Proof. exact (or_elim (@lem6870140 _125638 _125645 k s f i z h1) (fun h0 : term1072 _125638 k i => @lem6870794 _125638 _125645 k s f i z h0 h1) (fun h0 : term1056 _125638 _125645 s f i z => @lem6870801 _125638 _125645 k s f i z h1 h0)). Qed.
Lemma lem6870803 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) (h2 : term1056 _125638 _125645 s f i z) : False.
Proof. exact (or_elim (@lem6870136 _125638 _125645 s f i z h2) (fun h0 : term1073 _125638 _125645 s f i => @lem6870798 _125638 _125645 k s f i z h0 h1) (fun h0 : (f i) = z => @lem6870796 _125638 _125645 k s f i z h1 h0)). Qed.
Lemma lem6870804 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1067 _125638 _125645 k s f i z) : False.
Proof. exact (or_elim (@lem6870129 _125638 _125645 k s f i z h1) (fun h0 : term1072 _125638 k i => @lem6870800 _125638 _125645 k s f i z h0 h1) (fun h0 : term1056 _125638 _125645 s f i z => @lem6870803 _125638 _125645 k s f i z h1 h0)). Qed.
Lemma lem6870805 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1052 _125638 _125645 k s f i z) : False.
Proof. exact (or_elim (@lem6870126 _125638 _125645 k s f i z h1) (fun h0 : term1067 _125638 _125645 k s f i z => @lem6870804 _125638 _125645 k s f i z h0) (fun h0 : term1065 _125638 _125645 k s f i z => @lem6870802 _125638 _125645 k s f i z h0)). Qed.
Lemma lem6870806 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1052 _125638 _125645 k s f i z) : (term1052 _125638 _125645 k s f i z) = False.
Proof. exact (prop_ext (fun h2 : term1052 _125638 _125645 k s f i z => @lem6870805 _125638 _125645 k s f i z h1) (fun h2 : False => @lem6869956 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870807 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (h1 : term1052 _125638 _125645 k s f i z) : False.
Proof. exact (EQ_MP (@lem6870806 _125638 _125645 k s f i z h1) (@lem6869956 _125638 _125645 k s f i z h1)). Qed.
Lemma lem6870808 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : term1051 _125638 _125645 k s f i z.
Proof. exact (fun h0 : term1052 _125638 _125645 k s f i z => @lem6870807 _125638 _125645 k s f i z h0). Qed.
Lemma lem6870809 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : (term949 _125638 _125645 k s f i z) = (term949 _125638 _125645 k s f i z).
Proof. exact (EQ_MP (@lem6869955 _125638 _125645 k s f i z) (@lem6870808 _125638 _125645 k s f i z)). Qed.
Lemma lem6870814 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) : term1008 _125638 _125645 s f i z.
Proof. exact (fun k : _125638 -> Prop => @lem6870809 _125638 _125645 k s f i z). Qed.
Lemma lem6870819 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) : term1012 _125638 _125645 f i z.
Proof. exact (fun s : _125645 -> Prop => @lem6870814 _125638 _125645 s f i z). Qed.
Lemma lem6870824 {_125638 _125645 : Type'} (i : _125638) (z : _125645) : term1016 _125638 _125645 i z.
Proof. exact (fun f : _125638 -> _125645 => @lem6870819 _125638 _125645 f i z). Qed.
Lemma lem6870829 {_125638 _125645 : Type'} (z : _125645) : term1020 _125638 _125645 z.
Proof. exact (fun i : _125638 => @lem6870824 _125638 _125645 i z). Qed.
Lemma lem6870834 {_125638 _125645 : Type'} : term1023 _125638 _125645.
Proof. exact (fun z : _125645 => @lem6870829 _125638 _125645 z). Qed.
Lemma lem6870835 {_125638 _125645 : Type'} : term982 _125638 _125645.
Proof. exact (EQ_MP (@lem6869951 _125638 _125645) (@lem6870834 _125638 _125645)). Qed.
Lemma lem6870836 {_125638 _125645 : Type'} (Q : Prop) : term1086 _125638 _125645 Q.
Proof. exact (@lem6870835 _125638 _125645 Q). Qed.
Lemma lem6870837 {_125638 _125645 : Type'} (Q : Prop) : (term1086 _125638 _125645 Q) = (term978 _125638 _125645 Q).
Proof. exact (eq_refl (term1086 _125638 _125645 Q)). Qed.
Lemma lem6870838 {_125638 _125645 : Type'} (Q : Prop) : term978 _125638 _125645 Q.
Proof. exact (EQ_MP (@lem6870837 _125638 _125645 Q) (@lem6870836 _125638 _125645 Q)). Qed.
Lemma lem6870839 {_125638 _125645 : Type'} (Q : Prop) (z : _125645) : term1087 _125638 _125645 Q z.
Proof. exact (@lem6870838 _125638 _125645 Q z). Qed.
Lemma lem6870840 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) : (term1087 _125638 _125645 Q z) = (term974 _125638 _125645 z Q).
Proof. exact (eq_refl (term1087 _125638 _125645 Q z)). Qed.
Lemma lem6870841 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) : term974 _125638 _125645 z Q.
Proof. exact (EQ_MP (@lem6870840 _125638 _125645 z Q) (@lem6870839 _125638 _125645 Q z)). Qed.
Lemma lem6870842 {_125638 _125645 : Type'} (z : _125645) (Q : Prop) (i : _125638) : term1088 _125638 _125645 z Q i.
Proof. exact (@lem6870841 _125638 _125645 z Q i). Qed.
Lemma lem6870843 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) : (term1088 _125638 _125645 z Q i) = (term970 _125638 _125645 i z Q).
Proof. exact (eq_refl (term1088 _125638 _125645 z Q i)). Qed.
Lemma lem6870844 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) : term970 _125638 _125645 i z Q.
Proof. exact (EQ_MP (@lem6870843 _125638 _125645 i z Q) (@lem6870842 _125638 _125645 z Q i)). Qed.
Lemma lem6870845 {_125638 _125645 : Type'} (i : _125638) (z : _125645) (Q : Prop) (f : _125638 -> _125645) : term1089 _125638 _125645 i z Q f.
Proof. exact (@lem6870844 _125638 _125645 i z Q f). Qed.
Lemma lem6870846 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term1089 _125638 _125645 i z Q f) = (term966 _125638 _125645 f i z Q).
Proof. exact (eq_refl (term1089 _125638 _125645 i z Q f)). Qed.
Lemma lem6870847 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term966 _125638 _125645 f i z Q.
Proof. exact (EQ_MP (@lem6870846 _125638 _125645 f i z Q) (@lem6870845 _125638 _125645 i z Q f)). Qed.
Lemma lem6870848 {_125638 _125645 : Type'} (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (s : _125645 -> Prop) : term1090 _125638 _125645 f i z Q s.
Proof. exact (@lem6870847 _125638 _125645 f i z Q s). Qed.
Lemma lem6870849 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term1090 _125638 _125645 f i z Q s) = (term962 _125638 _125645 s f i z Q).
Proof. exact (eq_refl (term1090 _125638 _125645 f i z Q s)). Qed.
Lemma lem6870850 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term962 _125638 _125645 s f i z Q.
Proof. exact (EQ_MP (@lem6870849 _125638 _125645 s f i z Q) (@lem6870848 _125638 _125645 f i z Q s)). Qed.
Lemma lem6870851 {_125638 _125645 : Type'} (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (k : _125638 -> Prop) : term1091 _125638 _125645 s f i z Q k.
Proof. exact (@lem6870850 _125638 _125645 s f i z Q k). Qed.
Lemma lem6870852 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term1091 _125638 _125645 s f i z Q k) = (term954 _125638 _125645 k s f i z Q).
Proof. exact (eq_refl (term1091 _125638 _125645 s f i z Q k)). Qed.
Lemma lem6870853 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term954 _125638 _125645 k s f i z Q.
Proof. exact (EQ_MP (@lem6870852 _125638 _125645 k s f i z Q) (@lem6870851 _125638 _125645 s f i z Q k)). Qed.
Lemma lem6870855 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term954 _125638 _125645 k s f i z Q.
Proof. exact (@lem6869538 _125638 _125645 k s f i z Q (@lem6870853 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6870856 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term955 _125638 _125645 k s f i z Q) : False.
Proof. exact (@lem6870855 _125638 _125645 k s f i z Q (@lem6869522 _125638 _125645 k s f i z Q h1)). Qed.
Lemma lem6870857 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term955 _125638 _125645 k s f i z Q) : (term955 _125638 _125645 k s f i z Q) = False.
Proof. exact (prop_ext (fun h2 : term955 _125638 _125645 k s f i z Q => @lem6870856 _125638 _125645 k s f i z Q h1) (fun h2 : False => @lem6869522 _125638 _125645 k s f i z Q h1)). Qed.
Lemma lem6870858 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) (h1 : term955 _125638 _125645 k s f i z Q) : False.
Proof. exact (EQ_MP (@lem6870857 _125638 _125645 k s f i z Q h1) (@lem6869522 _125638 _125645 k s f i z Q h1)). Qed.
Lemma lem6870859 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : term954 _125638 _125645 k s f i z Q.
Proof. exact (fun h0 : term955 _125638 _125645 k s f i z Q => @lem6870858 _125638 _125645 k s f i z Q h0). Qed.
Lemma lem6870860 {_125638 _125645 : Type'} (k : _125638 -> Prop) (s : _125645 -> Prop) (f : _125638 -> _125645) (i : _125638) (z : _125645) (Q : Prop) : (term914 _125638 _125645 k s f i z Q) = (term953 _125638 _125645 k s f i z Q).
Proof. exact (EQ_MP (@lem6869521 _125638 _125645 k s f i z Q) (@lem6870859 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6870878 {_125638 _125645 : Type'} (i : _125638) (k : _125638 -> Prop) (f : _125638 -> _125645) (s : _125645 -> Prop) (z : _125645) (Q : Prop) : (term913 _125638 _125645 k s f i z Q) = (term952 _125638 _125645 i k f s z Q).
Proof. exact (EQ_MP (@lem6869517 _125638 _125645 i k f s z Q) (@lem6870860 _125638 _125645 k s f i z Q)). Qed.
Lemma lem6870879 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (s : A -> Prop) (z : A) (Q : Prop) : (term1092 A K k s f i z Q) = (term1093 A K i k f s z Q).
Proof. exact (@lem6870878 K A i k f s z Q). Qed.
Lemma lem6870880 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (P : A -> Prop) (x : A) : (term1094 A K k dom f i neut P x) = (term1095 A K i k f dom neut P x).
Proof. exact (@lem6870879 A K i k f dom neut (P x)). Qed.
Lemma lem6870889 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6870890 {A K : Type'} (i : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (P : A -> Prop) (x : A) : (term1096 A K k dom f i neut P x) = (term1097 A K i k f dom neut P x).
Proof. exact (MK_COMB (@lem6870889) (@lem6870880 A K i k f dom neut P x)). Qed.
Lemma lem6870891 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1098 A K P op f i x) = (term1098 A K P op f i x).
Proof. exact (eq_refl (term1098 A K P op f i x)). Qed.
Lemma lem6870892 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1099 A K k dom neut P op f i x) = (term1100 A K k dom neut P op f i x).
Proof. exact (MK_COMB (@lem6870890 A K i k f dom neut P x) (@lem6870891 A K P op f i x)). Qed.
Lemma lem6870895 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1101 A K k dom neut P op f i) = (term1102 A K k dom neut P op f i).
Proof. exact (fun_ext (fun x : A => @lem6870892 A K k dom neut P op f i x)). Qed.
Lemma lem6870896 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6870897 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1103 A K k dom neut P op f i) = (term1104 A K k dom neut P op f i).
Proof. exact (MK_COMB (@lem6870896 A) (@lem6870895 A K k dom neut P op f i)). Qed.
Lemma lem6870902 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1105 A K k dom neut P op f) = (term1106 A K k dom neut P op f).
Proof. exact (fun_ext (fun i : K => @lem6870897 A K k dom neut P op f i)). Qed.
Lemma lem6870903 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6870904 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1107 A K k dom neut P op f) = (term1108 A K k dom neut P op f).
Proof. exact (MK_COMB (@lem6870903 K) (@lem6870902 A K k dom neut P op f)). Qed.
Lemma lem6870909 {A : Type'} (P : A -> Prop) (neut : A) : (term905 A P neut) = (term905 A P neut).
Proof. exact (eq_refl (term905 A P neut)). Qed.
Lemma lem6870910 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1109 A K k dom neut P op f) = (term1110 A K k dom neut P op f).
Proof. exact (MK_COMB (@lem6870909 A P neut) (@lem6870904 A K k dom neut P op f)). Qed.
Lemma lem6870913 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6870914 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1111 A K k dom neut P op f) = (term1112 A K k dom neut P op f).
Proof. exact (MK_COMB (@lem6870913) (@lem6870910 A K k dom neut P op f)). Qed.
Lemma lem6870915 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1113 A K P dom neut op ltle k f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6870916 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1114 A K P dom neut op ltle k f) = (term1115 A K P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6870914 A K k dom neut P op f) (@lem6870915 A K P dom neut op ltle k f)). Qed.
Lemma lem6870919 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1115 A K P dom neut op ltle k f) = (term1114 A K P dom neut op ltle k f).
Proof. exact (SYM (@lem6870916 A K P dom neut op ltle k f)). Qed.
Lemma lem6870943 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle k f) = (term903 A K op ltle k dom f neut).
Proof. exact (EQ_MP (@lem6869366 A K op ltle k dom f neut) (@lem6869365 A K op ltle k dom neut f)). Qed.
Lemma lem6870944 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle k f) = (term903 A K op ltle k dom f neut).
Proof. exact (@lem6870943 A K op ltle k dom f neut). Qed.
Lemma lem6870945 {A : Type'} (P : A -> Prop) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem6870946 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1113 A K P dom neut op ltle k f) = (term1116 A K P op ltle k dom f neut).
Proof. exact (MK_COMB (@lem6870945 A P) (@lem6870944 A K op ltle k dom f neut)). Qed.
Lemma lem6870947 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1112 A K k dom neut P op f) = (term1112 A K k dom neut P op f).
Proof. exact (eq_refl (term1112 A K k dom neut P op f)). Qed.
Lemma lem6870948 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1115 A K P dom neut op ltle k f) = (term1117 A K P op ltle k dom f neut).
Proof. exact (MK_COMB (@lem6870947 A K k dom neut P op f) (@lem6870946 A K P op ltle k dom f neut)). Qed.
Lemma lem6870949 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1117 A K P op ltle k dom f neut) = (term1115 A K P dom neut op ltle k f).
Proof. exact (SYM (@lem6870948 A K P op ltle k dom f neut)). Qed.
Lemma lem6871117 {A B : Type'} (b : Prop) (x : A) (f : A -> B) (y : A) : (term890 A B f b x y) = (term891 A B b x f y).
Proof. exact (EQ_MP (@lem6869348 A B b x f y) (@lem6869347 A B b x f y)). Qed.
Lemma lem6871118 {A : Type'} (b : Prop) (x : A) (f : A -> Prop) (y : A) : (term1118 A f b x y) = (term1119 A b x f y).
Proof. exact (@lem6871117 A Prop b x f y). Qed.
Lemma lem6871119 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) : (term1116 A K P op ltle k dom f neut) = (term1120 A K op ltle k dom f P neut).
Proof. exact (@lem6871118 A (term1121 A K k f dom neut) (term642 A K op ltle k dom neut f) P neut). Qed.
Lemma lem6871120 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1112 A K k dom neut P op f) = (term1112 A K k dom neut P op f).
Proof. exact (eq_refl (term1112 A K k dom neut P op f)). Qed.
Lemma lem6871121 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) : (term1117 A K P op ltle k dom f neut) = (term1122 A K op ltle k dom f P neut).
Proof. exact (MK_COMB (@lem6871120 A K k dom neut P op f) (@lem6871119 A K op ltle k dom f P neut)). Qed.
Lemma lem6871122 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : (term1122 A K op ltle k dom f P neut) = (term1117 A K P op ltle k dom f neut).
Proof. exact (SYM (@lem6871121 A K op ltle k dom f P neut)). Qed.
Lemma lem6871126 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1123 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6871127 (p : Prop) (q : Prop) (p' : Prop) : term1124 p q p'.
Proof. exact (fun q' : Prop => @lem6871126 p q p' q'). Qed.
Lemma lem6871128 (p : Prop) (q : Prop) : term1125 p q.
Proof. exact (fun p' : Prop => @lem6871127 p q p'). Qed.
Lemma lem6871129 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) : term1126 A K op ltle k dom f P neut.
Proof. exact (@lem6871128 (term1110 A K k dom neut P op f) (term1120 A K op ltle k dom f P neut)). Qed.
Lemma lem6871130 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (p' : Prop) : term1127 A K op ltle k dom f P neut p'.
Proof. exact (@lem6871129 A K op ltle k dom f P neut p'). Qed.
Lemma lem6871131 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (p' : Prop) : (term1127 A K op ltle k dom f P neut p') = (term1128 A K op ltle k dom f P neut p').
Proof. exact (eq_refl (term1127 A K op ltle k dom f P neut p')). Qed.
Lemma lem6871132 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (p' : Prop) : term1128 A K op ltle k dom f P neut p'.
Proof. exact (EQ_MP (@lem6871131 A K op ltle k dom f P neut p') (@lem6871130 A K op ltle k dom f P neut p')). Qed.
Lemma lem6871133 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (p' : Prop) (q' : Prop) : term1129 A K op ltle k dom f P neut p' q'.
Proof. exact (@lem6871132 A K op ltle k dom f P neut p' q'). Qed.
Lemma lem6871134 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (p' : Prop) (q' : Prop) : (term1129 A K op ltle k dom f P neut p' q') = (term1130 A K op ltle k dom f P neut p' q').
Proof. exact (eq_refl (term1129 A K op ltle k dom f P neut p' q')). Qed.
Lemma lem6871135 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (p' : Prop) (q' : Prop) : term1130 A K op ltle k dom f P neut p' q'.
Proof. exact (EQ_MP (@lem6871134 A K op ltle k dom f P neut p' q') (@lem6871133 A K op ltle k dom f P neut p' q')). Qed.
Lemma lem6871189 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1110 A K k dom neut P op f) = (term1110 A K k dom neut P op f).
Proof. exact (eq_refl (term1110 A K k dom neut P op f)). Qed.
Lemma lem6871190 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (q' : Prop) : term1131 A K ltle k dom neut P op f q'.
Proof. exact (@lem6871135 A K op ltle k dom f P neut (term1110 A K k dom neut P op f) q'). Qed.
Lemma lem6871191 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (q' : Prop) : term1132 A K ltle k dom neut P op f q'.
Proof. exact (@lem6871190 A K ltle k dom neut P op f q' (@lem6871189 A K k dom neut P op f)). Qed.
Lemma lem6871192 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1110 A K k dom neut P op f) : term1110 A K k dom neut P op f.
Proof. exact (h1). Qed.
Lemma lem6871209 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1110 A K k dom neut P op f) : P neut.
Proof. exact (proj1 (@lem6871192 A K k dom neut P op f h1)). Qed.
Lemma lem6871210 {A : Type'} (P : A -> Prop) (neut : A) : (P neut) = ((P neut) = True).
Proof. exact (@lem7 (P neut)). Qed.
Lemma lem6871213 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1133 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6871214 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1134 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6871213 _2963 g t e g' t' e'). Qed.
Lemma lem6871215 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1135 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6871214 _2963 g t e g' t'). Qed.
Lemma lem6871216 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1136 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6871215 _2963 g t e g'). Qed.
Lemma lem6871217 (g : Prop) (t : Prop) (e : Prop) : term1137 g t e.
Proof. exact (@lem6871216 Prop g t e). Qed.
Lemma lem6871218 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) : term1138 A K op ltle k dom f P neut.
Proof. exact (@lem6871217 (term1121 A K k f dom neut) (term1139 A K P op ltle k dom neut f) (P neut)). Qed.
Lemma lem6871219 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) : term1140 A K op ltle k dom f P neut g'.
Proof. exact (@lem6871218 A K op ltle k dom f P neut g'). Qed.
Lemma lem6871220 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) : (term1140 A K op ltle k dom f P neut g') = (term1141 A K op ltle k dom f P neut g').
Proof. exact (eq_refl (term1140 A K op ltle k dom f P neut g')). Qed.
Lemma lem6871221 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) : term1141 A K op ltle k dom f P neut g'.
Proof. exact (EQ_MP (@lem6871220 A K op ltle k dom f P neut g') (@lem6871219 A K op ltle k dom f P neut g')). Qed.
Lemma lem6871222 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) (t' : Prop) : term1142 A K op ltle k dom f P neut g' t'.
Proof. exact (@lem6871221 A K op ltle k dom f P neut g' t'). Qed.
Lemma lem6871223 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) (t' : Prop) : (term1142 A K op ltle k dom f P neut g' t') = (term1143 A K op ltle k dom f P neut g' t').
Proof. exact (eq_refl (term1142 A K op ltle k dom f P neut g' t')). Qed.
Lemma lem6871224 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) (t' : Prop) : term1143 A K op ltle k dom f P neut g' t'.
Proof. exact (EQ_MP (@lem6871223 A K op ltle k dom f P neut g' t') (@lem6871222 A K op ltle k dom f P neut g' t')). Qed.
Lemma lem6871225 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) (t' : Prop) (e' : Prop) : term1144 A K op ltle k dom f P neut g' t' e'.
Proof. exact (@lem6871224 A K op ltle k dom f P neut g' t' e'). Qed.
Lemma lem6871226 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) (t' : Prop) (e' : Prop) : (term1144 A K op ltle k dom f P neut g' t' e') = (term1145 A K op ltle k dom f P neut g' t' e').
Proof. exact (eq_refl (term1144 A K op ltle k dom f P neut g' t' e')). Qed.
Lemma lem6871227 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (g' : Prop) (t' : Prop) (e' : Prop) : term1145 A K op ltle k dom f P neut g' t' e'.
Proof. exact (EQ_MP (@lem6871226 A K op ltle k dom f P neut g' t' e') (@lem6871225 A K op ltle k dom f P neut g' t' e')). Qed.
Lemma lem6871234 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1121 A K k f dom neut) = (term1121 A K k f dom neut).
Proof. exact (eq_refl (term1121 A K k f dom neut)). Qed.
Lemma lem6871235 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (P : A -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (t' : Prop) (e' : Prop) : term1146 A K op ltle P k f dom neut t' e'.
Proof. exact (@lem6871227 A K op ltle k dom f P neut (term1121 A K k f dom neut) t' e'). Qed.
Lemma lem6871236 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (P : A -> Prop) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (t' : Prop) (e' : Prop) : term1147 A K op ltle P k f dom neut t' e'.
Proof. exact (@lem6871235 A K op ltle P k f dom neut t' e' (@lem6871234 A K k f dom neut)). Qed.
Lemma lem6871246 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1139 A K P op ltle k dom neut f) = (term1139 A K P op ltle k dom neut f).
Proof. exact (eq_refl (term1139 A K P op ltle k dom neut f)). Qed.
Lemma lem6871247 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1148 A K P op ltle k dom neut f.
Proof. exact (fun h0 : term1121 A K k f dom neut => @lem6871246 A K P op ltle k dom neut f). Qed.
Lemma lem6871248 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (e' : Prop) : term1149 A K P op ltle k dom neut f e'.
Proof. exact (@lem6871236 A K op ltle P k f dom neut (term1139 A K P op ltle k dom neut f) e'). Qed.
Lemma lem6871249 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (e' : Prop) : term1150 A K P op ltle k dom neut f e'.
Proof. exact (@lem6871248 A K P op ltle k dom neut f e' (@lem6871247 A K P op ltle k dom neut f)). Qed.
Lemma lem6871254 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1110 A K k dom neut P op f) : (P neut) = True.
Proof. exact (EQ_MP (@lem6871210 A P neut) (@lem6871209 A K k dom neut P op f h1)). Qed.
Lemma lem6871255 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1110 A K k dom neut P op f) : term1151 A K k f dom P neut.
Proof. exact (fun h0 : term1152 A K k f dom neut => @lem6871254 A K k dom neut P op f h1). Qed.
Lemma lem6871256 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1153 A K P op ltle k dom neut f.
Proof. exact (@lem6871249 A K P op ltle k dom neut f True). Qed.
Lemma lem6871257 {A K : Type'} (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1110 A K k dom neut P op f) : (term1120 A K op ltle k dom f P neut) = (term1154 A K P op ltle k dom neut f).
Proof. exact (@lem6871256 A K P op ltle k dom neut f (@lem6871255 A K k dom neut P op f h1)). Qed.
Lemma lem6871315 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1155 A K P op ltle k dom neut f.
Proof. exact (fun h0 : term1110 A K k dom neut P op f => @lem6871257 A K ltle k dom neut P op f h0). Qed.
Lemma lem6871316 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1156 A K P op ltle k dom neut f.
Proof. exact (@lem6871191 A K ltle k dom neut P op f (term1154 A K P op ltle k dom neut f)). Qed.
Lemma lem6871317 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1122 A K op ltle k dom f P neut) = (term1157 A K P op ltle k dom neut f).
Proof. exact (@lem6871316 A K P op ltle k dom neut f (@lem6871315 A K P op ltle k dom neut f)). Qed.
Lemma lem6871578 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) : (term1157 A K P op ltle k dom neut f) = (term1122 A K op ltle k dom f P neut).
Proof. exact (SYM (@lem6871317 A K P op ltle k dom neut f)). Qed.
Lemma lem6871580 (a : Prop) (q : Prop) (p : Prop) (r : Prop) : (term849 a p q r) = (term850 a q p r).
Proof. exact (or_elim (@lem6869067 a) (fun h0 : a = True => @lem6869334 q p r a h0) (fun h0 : a = False => @lem6869333 q p r a h0)). Qed.
Lemma lem6871581 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1157 A K P op ltle k dom neut f) = (term1158 A K P op ltle k dom neut f).
Proof. exact (@lem6871580 (P neut) (term1121 A K k f dom neut) (term1108 A K k dom neut P op f) (term1139 A K P op ltle k dom neut f)). Qed.
Lemma lem6871618 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1158 A K P op ltle k dom neut f) = (term1157 A K P op ltle k dom neut f).
Proof. exact (SYM (@lem6871581 A K P op ltle k dom neut f)). Qed.
Lemma lem6871619 {A : Type'} (P : A -> Prop) (neut : A) (h1 : P neut) : P neut.
Proof. exact (h1). Qed.
Lemma lem6871621 {_125543 : Type'} (P : type686 _125543) : term770 _125543 P.
Proof. exact (@lem6869049 _125543 P (@lem6869041 _125543 P)). Qed.
Lemma lem6871622 {K : Type'} (P : type686 K) : term770 K P.
Proof. exact (@lem6871621 K P). Qed.
Lemma lem6871623 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1159 A K P dom neut op ltle f.
Proof. exact (@lem6871622 K (term1160 A K P dom neut op ltle f)). Qed.
Lemma lem6871624 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1161 A K P dom neut op ltle f k) = (term1162 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1161 A K P dom neut op ltle f k)). Qed.
Lemma lem6871625 {K : Type'} (k : K -> Prop) (n : nat) : (term834 K k n) = (term834 K k n).
Proof. exact (eq_refl (term834 K k n)). Qed.
Lemma lem6871626 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1163 A K n P dom neut op ltle f k) = (term1164 A K n P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6871625 K k n) (@lem6871624 A K P dom neut op ltle k f)). Qed.
Lemma lem6871627 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1165 A K n P dom neut op ltle f) = (term1166 A K n P dom neut op ltle f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6871626 A K n P dom neut op ltle k f)). Qed.
Lemma lem6871628 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6871629 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1167 A K n P dom neut op ltle f) = (term1168 A K n P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871628 K) (@lem6871627 A K n P dom neut op ltle f)). Qed.
Lemma lem6871630 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1169 A K P dom neut op ltle f) = (term1170 A K P dom neut op ltle f).
Proof. exact (fun_ext (fun n : nat => @lem6871629 A K n P dom neut op ltle f)). Qed.
Lemma lem6871631 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6871632 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1171 A K P dom neut op ltle f) = (term1172 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871631) (@lem6871630 A K P dom neut op ltle f)). Qed.
Lemma lem6871633 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6871634 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1173 A K P dom neut op ltle f) = (term1174 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871633) (@lem6871632 A K P dom neut op ltle f)). Qed.
Lemma lem6871635 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1161 A K P dom neut op ltle f k) = (term1162 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1161 A K P dom neut op ltle f k)). Qed.
Lemma lem6871636 {K : Type'} (k : K -> Prop) : (term1175 K k) = (term1175 K k).
Proof. exact (eq_refl (term1175 K k)). Qed.
Lemma lem6871637 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1176 A K P dom neut op ltle f k) = (term1177 A K P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6871636 K k) (@lem6871635 A K P dom neut op ltle k f)). Qed.
Lemma lem6871638 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1178 A K P dom neut op ltle f) = (term1179 A K P dom neut op ltle f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6871637 A K P dom neut op ltle k f)). Qed.
Lemma lem6871639 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6871640 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1180 A K P dom neut op ltle f) = (term1181 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871639 K) (@lem6871638 A K P dom neut op ltle f)). Qed.
Lemma lem6871641 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1159 A K P dom neut op ltle f) = (term1182 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871634 A K P dom neut op ltle f) (@lem6871640 A K P dom neut op ltle f)). Qed.
Lemma lem6871642 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1182 A K P dom neut op ltle f.
Proof. exact (EQ_MP (@lem6871641 A K P dom neut op ltle f) (@lem6871623 A K P dom neut op ltle f)). Qed.
Lemma lem6871652 (p : Prop) (q : Prop) (r : Prop) : (term859 p q r) = (term1183 p q r).
Proof. exact (EQ_MP (@lem892 p q r) (@lem887 p q r)). Qed.
Lemma lem6871653 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1164 A K n P dom neut op ltle k f) = (term1184 A K n P dom neut op ltle k f).
Proof. exact (@lem6871652 (term798 K k n) (term1185 A K k P op f) (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6871674 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1166 A K n P dom neut op ltle f) = (term1186 A K n P dom neut op ltle f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6871653 A K n P dom neut op ltle k f)). Qed.
Lemma lem6871675 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6871676 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1168 A K n P dom neut op ltle f) = (term1187 A K n P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871675 K) (@lem6871674 A K n P dom neut op ltle f)). Qed.
Lemma lem6871681 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1170 A K P dom neut op ltle f) = (term1188 A K P dom neut op ltle f).
Proof. exact (fun_ext (fun n : nat => @lem6871676 A K n P dom neut op ltle f)). Qed.
Lemma lem6871682 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6871683 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1172 A K P dom neut op ltle f) = (term1189 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871682) (@lem6871681 A K P dom neut op ltle f)). Qed.
Lemma lem6871688 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1189 A K P dom neut op ltle f) = (term1172 A K P dom neut op ltle f).
Proof. exact (SYM (@lem6871683 A K P dom neut op ltle f)). Qed.
Lemma lem6871690 (P : nat -> Prop) : term757 P.
Proof. exact (EQ_MP (@lem6868482 P) (@lem6868481 P)). Qed.
Lemma lem6871691 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1190 A K P dom neut op ltle f.
Proof. exact (@lem6871690 (term1188 A K P dom neut op ltle f)). Qed.
Lemma lem6871692 {A K : Type'} (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1191 A K P dom neut op ltle f m) = (term1187 A K m P dom neut op ltle f).
Proof. exact (eq_refl (term1191 A K P dom neut op ltle f m)). Qed.
Lemma lem6871693 (m : nat) (n : nat) : (term1192 m n) = (term1192 m n).
Proof. exact (eq_refl (term1192 m n)). Qed.
Lemma lem6871694 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1193 A K n P dom neut op ltle f m) = (term1194 A K n m P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871693 m n) (@lem6871692 A K m P dom neut op ltle f)). Qed.
Lemma lem6871695 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1195 A K n P dom neut op ltle f) = (term1196 A K n P dom neut op ltle f).
Proof. exact (fun_ext (fun m : nat => @lem6871694 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871696 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6871697 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1197 A K n P dom neut op ltle f) = (term1198 A K n P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871696) (@lem6871695 A K n P dom neut op ltle f)). Qed.
Lemma lem6871698 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6871699 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1199 A K n P dom neut op ltle f) = (term1200 A K n P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871698) (@lem6871697 A K n P dom neut op ltle f)). Qed.
Lemma lem6871700 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1191 A K P dom neut op ltle f n) = (term1187 A K n P dom neut op ltle f).
Proof. exact (eq_refl (term1191 A K P dom neut op ltle f n)). Qed.
Lemma lem6871701 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1201 A K P dom neut op ltle f n) = (term1202 A K n P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871699 A K n P dom neut op ltle f) (@lem6871700 A K n P dom neut op ltle f)). Qed.
Lemma lem6871702 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1203 A K P dom neut op ltle f) = (term1204 A K P dom neut op ltle f).
Proof. exact (fun_ext (fun n : nat => @lem6871701 A K n P dom neut op ltle f)). Qed.
Lemma lem6871703 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6871704 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1205 A K P dom neut op ltle f) = (term1206 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871703) (@lem6871702 A K P dom neut op ltle f)). Qed.
Lemma lem6871705 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6871706 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1207 A K P dom neut op ltle f) = (term1208 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871705) (@lem6871704 A K P dom neut op ltle f)). Qed.
Lemma lem6871707 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1191 A K P dom neut op ltle f n) = (term1187 A K n P dom neut op ltle f).
Proof. exact (eq_refl (term1191 A K P dom neut op ltle f n)). Qed.
Lemma lem6871708 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1209 A K P dom neut op ltle f) = (term1188 A K P dom neut op ltle f).
Proof. exact (fun_ext (fun n : nat => @lem6871707 A K n P dom neut op ltle f)). Qed.
Lemma lem6871709 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6871710 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1210 A K P dom neut op ltle f) = (term1189 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871709) (@lem6871708 A K P dom neut op ltle f)). Qed.
Lemma lem6871711 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1190 A K P dom neut op ltle f) = (term1211 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871706 A K P dom neut op ltle f) (@lem6871710 A K P dom neut op ltle f)). Qed.
Lemma lem6871712 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1211 A K P dom neut op ltle f.
Proof. exact (EQ_MP (@lem6871711 A K P dom neut op ltle f) (@lem6871691 A K P dom neut op ltle f)). Qed.
Lemma lem6871713 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1198 A K n P dom neut op ltle f.
Proof. exact (h1). Qed.
Lemma lem6871714 {A K : Type'} (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1212 A K n k P op f) : term1212 A K n k P op f.
Proof. exact (h1). Qed.
Lemma lem6871715 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1185 A K k P op f.
Proof. exact (h1). Qed.
Lemma lem6871716 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term798 K k n) : term798 K k n.
Proof. exact (h1). Qed.
Lemma lem6871717 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6871718 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6871720 {A : Type'} (P : A -> Prop) (neut : A) (h1 : P neut) : P neut.
Proof. exact (h1). Qed.
Lemma lem6871726 {A : Type'} (P : Prop) (Q : A -> Prop) : (term753 A P Q) = (term754 A P Q).
Proof. exact (EQ_MP (@lem6868466 A P Q) (@lem6868465 A P Q)). Qed.
Lemma lem6871727 {K : Type'} (P : Prop) (Q : type686 K) : (term1213 K P Q) = (term1214 K P Q).
Proof. exact (@lem6871726 (K -> Prop) P Q). Qed.
Lemma lem6871728 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1215 A K n m P dom neut op ltle f) = (term1216 A K n m P dom neut op ltle f).
Proof. exact (@lem6871727 K (Peano.lt m n) (term1186 A K m P dom neut op ltle f)). Qed.
Lemma lem6871729 {A K : Type'} (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1217 A K m P dom neut op ltle f k) = (term1184 A K m P dom neut op ltle k f).
Proof. exact (eq_refl (term1217 A K m P dom neut op ltle f k)). Qed.
Lemma lem6871730 {A K : Type'} (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1218 A K m P dom neut op ltle f) = (term1186 A K m P dom neut op ltle f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6871729 A K m P dom neut op ltle k f)). Qed.
Lemma lem6871731 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6871732 {A K : Type'} (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1219 A K m P dom neut op ltle f) = (term1187 A K m P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871731 K) (@lem6871730 A K m P dom neut op ltle f)). Qed.
Lemma lem6871733 (m : nat) (n : nat) : (term1192 m n) = (term1192 m n).
Proof. exact (eq_refl (term1192 m n)). Qed.
Lemma lem6871734 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1215 A K n m P dom neut op ltle f) = (term1194 A K n m P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871733 m n) (@lem6871732 A K m P dom neut op ltle f)). Qed.
Lemma lem6871735 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6871736 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1220 A K n m P dom neut op ltle f) = (term1221 A K n m P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871735) (@lem6871734 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871737 {A K : Type'} (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1217 A K m P dom neut op ltle f k) = (term1184 A K m P dom neut op ltle k f).
Proof. exact (eq_refl (term1217 A K m P dom neut op ltle f k)). Qed.
Lemma lem6871738 (m : nat) (n : nat) : (term1192 m n) = (term1192 m n).
Proof. exact (eq_refl (term1192 m n)). Qed.
Lemma lem6871739 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1222 A K n m P dom neut op ltle f k) = (term1223 A K n m P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6871738 m n) (@lem6871737 A K m P dom neut op ltle k f)). Qed.
Lemma lem6871740 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1224 A K n m P dom neut op ltle f) = (term1225 A K n m P dom neut op ltle f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6871739 A K n m P dom neut op ltle k f)). Qed.
Lemma lem6871741 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6871742 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1216 A K n m P dom neut op ltle f) = (term1226 A K n m P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871741 K) (@lem6871740 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871743 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : ((term1215 A K n m P dom neut op ltle f) = (term1216 A K n m P dom neut op ltle f)) = ((term1194 A K n m P dom neut op ltle f) = (term1226 A K n m P dom neut op ltle f)).
Proof. exact (MK_COMB (@lem6871736 A K n m P dom neut op ltle f) (@lem6871742 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871744 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1194 A K n m P dom neut op ltle f) = (term1226 A K n m P dom neut op ltle f).
Proof. exact (EQ_MP (@lem6871743 A K n m P dom neut op ltle f) (@lem6871728 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871750 (p : Prop) (q : Prop) (r : Prop) : (term859 p q r) = (term1183 p q r).
Proof. exact (EQ_MP (@lem892 p q r) (@lem887 p q r)). Qed.
Lemma lem6871751 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1223 A K n m P dom neut op ltle k f) = (term1227 A K n m P dom neut op ltle k f).
Proof. exact (@lem6871750 (Peano.lt m n) (term1212 A K m k P op f) (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6871757 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term734 t1 t2 t3) = (term733 t1 t2 t3).
Proof. exact (EQ_MP (@lem6868460 t1 t2 t3) (@lem6868459 t1 t2 t3)). Qed.
Lemma lem6871758 {A K : Type'} (m : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1212 A K m k P op f) = (term1228 A K m k P op f).
Proof. exact (@lem6871757 (@FINITE K k) ((@CARD K k) = m) (term1185 A K k P op f)). Qed.
Lemma lem6871777 (m : nat) (n : nat) : (term55 m n) = (term55 m n).
Proof. exact (eq_refl (term55 m n)). Qed.
Lemma lem6871778 {A K : Type'} (n : nat) (m : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1229 A K n m k P op f) = (term1230 A K n m k P op f).
Proof. exact (MK_COMB (@lem6871777 m n) (@lem6871758 A K m k P op f)). Qed.
Lemma lem6871781 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6871782 {A K : Type'} (n : nat) (m : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1231 A K n m k P op f) = (term1232 A K n m k P op f).
Proof. exact (MK_COMB (@lem6871781) (@lem6871778 A K n m k P op f)). Qed.
Lemma lem6871783 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1113 A K P dom neut op ltle k f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6871784 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1227 A K n m P dom neut op ltle k f) = (term1233 A K n m P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6871782 A K n m k P op f) (@lem6871783 A K P dom neut op ltle k f)). Qed.
Lemma lem6871787 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1223 A K n m P dom neut op ltle k f) = (term1233 A K n m P dom neut op ltle k f).
Proof. exact (TRANS (@lem6871751 A K n m P dom neut op ltle k f) (@lem6871784 A K n m P dom neut op ltle k f)). Qed.
Lemma lem6871788 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1225 A K n m P dom neut op ltle f) = (term1234 A K n m P dom neut op ltle f).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6871787 A K n m P dom neut op ltle k f)). Qed.
Lemma lem6871789 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6871790 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1226 A K n m P dom neut op ltle f) = (term1235 A K n m P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871789 K) (@lem6871788 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871795 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1194 A K n m P dom neut op ltle f) = (term1235 A K n m P dom neut op ltle f).
Proof. exact (TRANS (@lem6871744 A K n m P dom neut op ltle f) (@lem6871790 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871796 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1196 A K n P dom neut op ltle f) = (term1236 A K n P dom neut op ltle f).
Proof. exact (fun_ext (fun m : nat => @lem6871795 A K n m P dom neut op ltle f)). Qed.
Lemma lem6871797 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6871798 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1198 A K n P dom neut op ltle f) = (term1237 A K n P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6871797) (@lem6871796 A K n P dom neut op ltle f)). Qed.
Lemma lem6871803 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1237 A K n P dom neut op ltle f.
Proof. exact (EQ_MP (@lem6871798 A K n P dom neut op ltle f) (@lem6871713 A K n P dom neut op ltle f h1)). Qed.
Lemma lem6871805 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6871809 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6871823 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1185 A K k P op f.
Proof. exact (h1). Qed.
Lemma lem6871824 {A K : Type'} (dom : A -> Prop) : term720 A K dom.
Proof. exact (@lem6790065 A K dom). Qed.
Lemma lem6871825 {A K : Type'} (dom : A -> Prop) : (term720 A K dom) = (term721 A K dom).
Proof. exact (eq_refl (term720 A K dom)). Qed.
Lemma lem6871826 {A K : Type'} (dom : A -> Prop) : term721 A K dom.
Proof. exact (EQ_MP (@lem6871825 A K dom) (@lem6871824 A K dom)). Qed.
Lemma lem6871827 {A K : Type'} (dom : A -> Prop) (neut : A) : term722 A K dom neut.
Proof. exact (@lem6871826 A K dom neut). Qed.
Lemma lem6871828 {A K : Type'} (dom : A -> Prop) (neut : A) : (term722 A K dom neut) = (term723 A K dom neut).
Proof. exact (eq_refl (term722 A K dom neut)). Qed.
Lemma lem6871829 {A K : Type'} (dom : A -> Prop) (neut : A) : term723 A K dom neut.
Proof. exact (EQ_MP (@lem6871828 A K dom neut) (@lem6871827 A K dom neut)). Qed.
Lemma lem6871830 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term724 A K dom neut op.
Proof. exact (@lem6871829 A K dom neut op). Qed.
Lemma lem6871831 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : (term724 A K dom neut op) = (term725 A K dom neut op).
Proof. exact (eq_refl (term724 A K dom neut op)). Qed.
Lemma lem6871832 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term725 A K dom neut op.
Proof. exact (EQ_MP (@lem6871831 A K dom neut op) (@lem6871830 A K dom neut op)). Qed.
Lemma lem6871833 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term726 A K dom neut op ltle.
Proof. exact (@lem6871832 A K dom neut op ltle). Qed.
Lemma lem6871834 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (term726 A K dom neut op ltle) = (term727 A K dom neut op ltle).
Proof. exact (eq_refl (term726 A K dom neut op ltle)). Qed.
Lemma lem6871835 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term727 A K dom neut op ltle.
Proof. exact (EQ_MP (@lem6871834 A K dom neut op ltle) (@lem6871833 A K dom neut op ltle)). Qed.
Lemma lem6871836 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term728 A K dom neut op ltle f.
Proof. exact (@lem6871835 A K dom neut op ltle f). Qed.
Lemma lem6871837 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term728 A K dom neut op ltle f) = (term729 A K dom neut op ltle f).
Proof. exact (eq_refl (term728 A K dom neut op ltle f)). Qed.
Lemma lem6871838 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term729 A K dom neut op ltle f.
Proof. exact (EQ_MP (@lem6871837 A K dom neut op ltle f) (@lem6871836 A K dom neut op ltle f)). Qed.
Lemma lem6871846 {A : Type'} (P : A -> Prop) (neut : A) : (P neut) = ((P neut) = True).
Proof. exact (@lem7 (P neut)). Qed.
Lemma lem6871867 {K : Type'} (k : K -> Prop) (h1 : k = (@EMPTY K)) : k = (@EMPTY K).
Proof. exact (h1). Qed.
Lemma lem6871868 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6871869 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (h1 : k = (@EMPTY K)) : (@iterato A K dom neut op ltle k) = (@iterato A K dom neut op ltle (@EMPTY K)).
Proof. exact (MK_COMB (@lem6871868 A K dom neut op ltle) (@lem6871867 K k h1)). Qed.
Lemma lem6871870 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6871871 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (h1 : k = (@EMPTY K)) : (@iterato A K dom neut op ltle k f) = (@iterato A K dom neut op ltle (@EMPTY K) f).
Proof. exact (MK_COMB (@lem6871869 A K dom neut op ltle k h1) (@lem6871870 A K f)). Qed.
Lemma lem6871873 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle (@EMPTY K) f) = neut.
Proof. exact (proj1 (@lem6871838 A K dom neut op ltle f)). Qed.
Lemma lem6871874 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle (@EMPTY K) f) = neut.
Proof. exact (@lem6871873 A K dom op ltle f neut). Qed.
Lemma lem6871875 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) (k : K -> Prop) (h1 : k = (@EMPTY K)) : (@iterato A K dom neut op ltle k f) = neut.
Proof. exact (TRANS (@lem6871871 A K dom neut op ltle f k h1) (@lem6871874 A K dom op ltle f neut)). Qed.
Lemma lem6871876 {A : Type'} (P : A -> Prop) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem6871877 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (h1 : k = (@EMPTY K)) : (term1113 A K P dom neut op ltle k f) = (P neut).
Proof. exact (MK_COMB (@lem6871876 A P) (@lem6871875 A K dom op ltle f neut k h1)). Qed.
Lemma lem6871879 {A : Type'} (P : A -> Prop) (neut : A) (h1 : P neut) : (P neut) = True.
Proof. exact (EQ_MP (@lem6871846 A P neut) (@lem6871720 A P neut h1)). Qed.
Lemma lem6871880 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (h1 : P neut) (h2 : k = (@EMPTY K)) : (term1113 A K P dom neut op ltle k f) = True.
Proof. exact (TRANS (@lem6871877 A K dom op ltle f P neut k h2) (@lem6871879 A P neut h1)). Qed.
Lemma lem6871881 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (h1 : P neut) (h2 : k = (@EMPTY K)) : True = (term1113 A K P dom neut op ltle k f).
Proof. exact (SYM (@lem6871880 A K dom op ltle f P neut k h1 h2)). Qed.
Lemma lem6871882 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (h1 : P neut) (h2 : k = (@EMPTY K)) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6871881 A K dom op ltle f P neut k h1 h2) (@lem0)). Qed.
Lemma lem6871940 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term729 A K dom neut op ltle f) : term729 A K dom neut op ltle f.
Proof. exact (h1). Qed.
Lemma lem6871941 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term729 A K dom neut op ltle f) : term1238 A K dom neut op ltle f.
Proof. exact (proj2 (@lem6871940 A K dom neut op ltle f h1)). Qed.
Lemma lem6871942 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term729 A K dom neut op ltle f) : term1239 A K dom neut op ltle f k.
Proof. exact (@lem6871941 A K dom neut op ltle f h1 k). Qed.
Lemma lem6871943 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1239 A K dom neut op ltle f k) = (term1240 A K dom neut op ltle k f).
Proof. exact (eq_refl (term1239 A K dom neut op ltle f k)). Qed.
Lemma lem6871944 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term729 A K dom neut op ltle f) : term1240 A K dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6871943 A K dom neut op ltle k f) (@lem6871942 A K k dom neut op ltle f h1)). Qed.
Lemma lem6871945 {A : Type'} (s : A -> Prop) : term1241 A s.
Proof. exact (@lem3603906 A s). Qed.
Lemma lem6871946 {A : Type'} (s : A -> Prop) : (term1241 A s) = (term1242 A s).
Proof. exact (eq_refl (term1241 A s)). Qed.
Lemma lem6871947 {A : Type'} (s : A -> Prop) : term1242 A s.
Proof. exact (EQ_MP (@lem6871946 A s) (@lem6871945 A s)). Qed.
Lemma lem6871948 {A : Type'} (s : A -> Prop) (P : A -> Prop) : term1243 A s P.
Proof. exact (@lem6871947 A s P). Qed.
Lemma lem6871949 {A : Type'} (s : A -> Prop) (P : A -> Prop) : (term1243 A s P) = (term1244 A s P).
Proof. exact (eq_refl (term1243 A s P)). Qed.
Lemma lem6871950 {A : Type'} (s : A -> Prop) (P : A -> Prop) : term1244 A s P.
Proof. exact (EQ_MP (@lem6871949 A s P) (@lem6871948 A s P)). Qed.
Lemma lem6871951 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem6871952 {A : Type'} (P : A -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : term1245 A s P.
Proof. exact (@lem6871950 A s P (@lem6871951 A s h1)). Qed.
Lemma lem6871953 {A : Type'} (s : A -> Prop) (P : A -> Prop) : (term1245 A s P) = ((term1245 A s P) = True).
Proof. exact (@lem7 (term1245 A s P)). Qed.
Lemma lem6871954 {A : Type'} (P : A -> Prop) (s : A -> Prop) (h1 : @FINITE A s) : (term1245 A s P) = True.
Proof. exact (EQ_MP (@lem6871953 A s P) (@lem6871952 A P s h1)). Qed.
Lemma lem6872003 {K : Type'} (k : K -> Prop) : (@FINITE K k) = ((@FINITE K k) = True).
Proof. exact (@lem7 (@FINITE K k)). Qed.
Lemma lem6872036 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1123 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6872037 (p : Prop) (q : Prop) (p' : Prop) : term1124 p q p'.
Proof. exact (fun q' : Prop => @lem6872036 p q p' q'). Qed.
Lemma lem6872038 (p : Prop) (q : Prop) : term1125 p q.
Proof. exact (fun p' : Prop => @lem6872037 p q p'). Qed.
Lemma lem6872039 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1246 A K P dom neut op ltle k f.
Proof. exact (@lem6872038 (term1240 A K dom neut op ltle k f) (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6872040 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) : term1247 A K P dom neut op ltle k f p'.
Proof. exact (@lem6872039 A K P dom neut op ltle k f p'). Qed.
Lemma lem6872041 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) : (term1247 A K P dom neut op ltle k f p') = (term1248 A K P dom neut op ltle k f p').
Proof. exact (eq_refl (term1247 A K P dom neut op ltle k f p')). Qed.
Lemma lem6872042 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) : term1248 A K P dom neut op ltle k f p'.
Proof. exact (EQ_MP (@lem6872041 A K P dom neut op ltle k f p') (@lem6872040 A K P dom neut op ltle k f p')). Qed.
Lemma lem6872043 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) (q' : Prop) : term1249 A K P dom neut op ltle k f p' q'.
Proof. exact (@lem6872042 A K P dom neut op ltle k f p' q'). Qed.
Lemma lem6872044 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) (q' : Prop) : (term1249 A K P dom neut op ltle k f p' q') = (term1250 A K P dom neut op ltle k f p' q').
Proof. exact (eq_refl (term1249 A K P dom neut op ltle k f p' q')). Qed.
Lemma lem6872045 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) (q' : Prop) : term1250 A K P dom neut op ltle k f p' q'.
Proof. exact (EQ_MP (@lem6872044 A K P dom neut op ltle k f p' q') (@lem6872043 A K P dom neut op ltle k f p' q')). Qed.
Lemma lem6872049 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1123 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6872050 (p : Prop) (q : Prop) (p' : Prop) : term1124 p q p'.
Proof. exact (fun q' : Prop => @lem6872049 p q p' q'). Qed.
Lemma lem6872051 (p : Prop) (q : Prop) : term1125 p q.
Proof. exact (fun p' : Prop => @lem6872050 p q p'). Qed.
Lemma lem6872052 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1251 A K dom neut op ltle k f.
Proof. exact (@lem6872051 (term1252 A K k f dom neut) (term1253 A K dom neut op ltle k f)). Qed.
Lemma lem6872053 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) : term1254 A K dom neut op ltle k f p'.
Proof. exact (@lem6872052 A K dom neut op ltle k f p'). Qed.
Lemma lem6872054 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) : (term1254 A K dom neut op ltle k f p') = (term1255 A K dom neut op ltle k f p').
Proof. exact (eq_refl (term1254 A K dom neut op ltle k f p')). Qed.
Lemma lem6872055 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) : term1255 A K dom neut op ltle k f p'.
Proof. exact (EQ_MP (@lem6872054 A K dom neut op ltle k f p') (@lem6872053 A K dom neut op ltle k f p')). Qed.
Lemma lem6872056 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) (q' : Prop) : term1256 A K dom neut op ltle k f p' q'.
Proof. exact (@lem6872055 A K dom neut op ltle k f p' q'). Qed.
Lemma lem6872057 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) (q' : Prop) : (term1256 A K dom neut op ltle k f p' q') = (term1257 A K dom neut op ltle k f p' q').
Proof. exact (eq_refl (term1256 A K dom neut op ltle k f p' q')). Qed.
Lemma lem6872058 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (p' : Prop) (q' : Prop) : term1257 A K dom neut op ltle k f p' q'.
Proof. exact (EQ_MP (@lem6872057 A K dom neut op ltle k f p' q') (@lem6872056 A K dom neut op ltle k f p' q')). Qed.
Lemma lem6872062 {A : Type'} (s : A -> Prop) (P : A -> Prop) : term1258 A s P.
Proof. exact (fun h0 : @FINITE A s => @lem6871954 A P s h0). Qed.
Lemma lem6872063 {K : Type'} (s : K -> Prop) (P : K -> Prop) : term1258 K s P.
Proof. exact (@lem6872062 K s P). Qed.
Lemma lem6872064 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1259 A K k f dom neut.
Proof. exact (@lem6872063 K k (term1260 A K f dom neut)). Qed.
Lemma lem6872065 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1261 A K f dom neut i) = (term1262 A K f i dom neut).
Proof. exact (eq_refl (term1261 A K f dom neut i)). Qed.
Lemma lem6872066 {K : Type'} (i : K) (k : K -> Prop) : (term904 K i k) = (term904 K i k).
Proof. exact (eq_refl (term904 K i k)). Qed.
Lemma lem6872067 {A K : Type'} (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1263 A K k f dom neut i) = (term1264 A K k f i dom neut).
Proof. exact (MK_COMB (@lem6872066 K i k) (@lem6872065 A K f i dom neut)). Qed.
Lemma lem6872068 {K : Type'} (GEN_PVAR_274 : K) : (@SETSPEC K GEN_PVAR_274) = (@SETSPEC K GEN_PVAR_274).
Proof. exact (eq_refl (@SETSPEC K GEN_PVAR_274)). Qed.
Lemma lem6872069 {A K : Type'} (GEN_PVAR_274 : K) (k : K -> Prop) (f : K -> A) (i : K) (dom : A -> Prop) (neut : A) : (term1265 A K GEN_PVAR_274 k f dom neut i) = (term1266 A K GEN_PVAR_274 k f i dom neut).
Proof. exact (MK_COMB (@lem6872068 K GEN_PVAR_274) (@lem6872067 A K k f i dom neut)). Qed.
Lemma lem6872070 {K : Type'} (i : K) : i = i.
Proof. exact (eq_refl i). Qed.
Lemma lem6872071 {A K : Type'} (GEN_PVAR_274 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (i : K) : (term1267 A K GEN_PVAR_274 k f dom neut i) = (term1268 A K GEN_PVAR_274 k f dom neut i).
Proof. exact (MK_COMB (@lem6872069 A K GEN_PVAR_274 k f i dom neut) (@lem6872070 K i)). Qed.
Lemma lem6872072 {A K : Type'} (GEN_PVAR_274 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1269 A K GEN_PVAR_274 k f dom neut) = (term1270 A K GEN_PVAR_274 k f dom neut).
Proof. exact (fun_ext (fun i : K => @lem6872071 A K GEN_PVAR_274 k f dom neut i)). Qed.
Lemma lem6872073 {K : Type'} : (@ex K) = (@ex K).
Proof. exact (eq_refl (@ex K)). Qed.
Lemma lem6872074 {A K : Type'} (GEN_PVAR_274 : K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1271 A K GEN_PVAR_274 k f dom neut) = (term1272 A K GEN_PVAR_274 k f dom neut).
Proof. exact (MK_COMB (@lem6872073 K) (@lem6872072 A K GEN_PVAR_274 k f dom neut)). Qed.
Lemma lem6872075 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1273 A K k f dom neut) = (term1274 A K k f dom neut).
Proof. exact (fun_ext (fun GEN_PVAR_274 : K => @lem6872074 A K GEN_PVAR_274 k f dom neut)). Qed.
Lemma lem6872076 {K : Type'} : (@GSPEC K) = (@GSPEC K).
Proof. exact (eq_refl (@GSPEC K)). Qed.
Lemma lem6872077 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1275 A K k f dom neut) = (term1276 A K k f dom neut).
Proof. exact (MK_COMB (@lem6872076 K) (@lem6872075 A K k f dom neut)). Qed.
Lemma lem6872078 {K : Type'} : (@FINITE K) = (@FINITE K).
Proof. exact (eq_refl (@FINITE K)). Qed.
Lemma lem6872079 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1277 A K k f dom neut) = (term1121 A K k f dom neut).
Proof. exact (MK_COMB (@lem6872078 K) (@lem6872077 A K k f dom neut)). Qed.
Lemma lem6872080 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6872081 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1278 A K k f dom neut) = (term1279 A K k f dom neut).
Proof. exact (MK_COMB (@lem6872080) (@lem6872079 A K k f dom neut)). Qed.
Lemma lem6872082 : True = True.
Proof. exact (eq_refl True). Qed.
Lemma lem6872083 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1277 A K k f dom neut) = True) = ((term1121 A K k f dom neut) = True).
Proof. exact (MK_COMB (@lem6872081 A K k f dom neut) (@lem6872082)). Qed.
Lemma lem6872084 {K : Type'} (k : K -> Prop) : (term1175 K k) = (term1175 K k).
Proof. exact (eq_refl (term1175 K k)). Qed.
Lemma lem6872085 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1259 A K k f dom neut) = (term1280 A K k f dom neut).
Proof. exact (MK_COMB (@lem6872084 K k) (@lem6872083 A K k f dom neut)). Qed.
Lemma lem6872086 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : term1280 A K k f dom neut.
Proof. exact (EQ_MP (@lem6872085 A K k f dom neut) (@lem6872064 A K k f dom neut)). Qed.
Lemma lem6872088 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : (@FINITE K k) = True.
Proof. exact (EQ_MP (@lem6872003 K k) (@lem6871805 K k h1)). Qed.
Lemma lem6872089 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : True = (@FINITE K k).
Proof. exact (SYM (@lem6872088 K k h1)). Qed.
Lemma lem6872090 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (EQ_MP (@lem6872089 K k h1) (@lem0)). Qed.
Lemma lem6872091 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : @FINITE K k) : (term1121 A K k f dom neut) = True.
Proof. exact (@lem6872086 A K k f dom neut (@lem6872090 K k h1)). Qed.
Lemma lem6872092 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6872093 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : @FINITE K k) : (term1281 A K k f dom neut) = (and True).
Proof. exact (MK_COMB (@lem6872092) (@lem6872091 A K f dom neut k h1)). Qed.
Lemma lem6872102 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1282 A K k f dom neut) = (term1282 A K k f dom neut).
Proof. exact (eq_refl (term1282 A K k f dom neut)). Qed.
Lemma lem6872103 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : @FINITE K k) : (term1252 A K k f dom neut) = (term1283 A K k f dom neut).
Proof. exact (MK_COMB (@lem6872093 A K f dom neut k h1) (@lem6872102 A K k f dom neut)). Qed.
Lemma lem6872105 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6872106 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1283 A K k f dom neut) = (term1282 A K k f dom neut).
Proof. exact (@lem6872105 (term1282 A K k f dom neut)). Qed.
Lemma lem6872115 {A K : Type'} (f : K -> A) (dom : A -> Prop) (neut : A) (k : K -> Prop) (h1 : @FINITE K k) : (term1252 A K k f dom neut) = (term1282 A K k f dom neut).
Proof. exact (TRANS (@lem6872103 A K f dom neut k h1) (@lem6872106 A K k f dom neut)). Qed.
Lemma lem6872116 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (q' : Prop) : term1284 A K op ltle k f dom neut q'.
Proof. exact (@lem6872058 A K dom neut op ltle k f (term1282 A K k f dom neut) q'). Qed.
Lemma lem6872117 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (f : K -> A) (dom : A -> Prop) (neut : A) (q' : Prop) (k : K -> Prop) (h1 : @FINITE K k) : term1285 A K op ltle k f dom neut q'.
Proof. exact (@lem6872116 A K op ltle k f dom neut q' (@lem6872115 A K f dom neut k h1)). Qed.
Lemma lem6872142 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1253 A K dom neut op ltle k f) = (term1253 A K dom neut op ltle k f).
Proof. exact (eq_refl (term1253 A K dom neut op ltle k f)). Qed.
Lemma lem6872143 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1286 A K dom neut op ltle k f.
Proof. exact (fun h0 : term1282 A K k f dom neut => @lem6872142 A K dom neut op ltle k f). Qed.
Lemma lem6872144 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (h1 : @FINITE K k) : term1287 A K dom neut op ltle k f.
Proof. exact (@lem6872117 A K op ltle f dom neut (term1253 A K dom neut op ltle k f) k h1). Qed.
Lemma lem6872145 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (h1 : @FINITE K k) : (term1240 A K dom neut op ltle k f) = (term1288 A K dom neut op ltle k f).
Proof. exact (@lem6872144 A K dom neut op ltle f k h1 (@lem6872143 A K dom neut op ltle k f)). Qed.
Lemma lem6872216 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (q' : Prop) : term1289 A K P dom neut op ltle k f q'.
Proof. exact (@lem6872045 A K P dom neut op ltle k f (term1288 A K dom neut op ltle k f) q'). Qed.
Lemma lem6872217 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (q' : Prop) (k : K -> Prop) (h1 : @FINITE K k) : term1290 A K P dom neut op ltle k f q'.
Proof. exact (@lem6872216 A K P dom neut op ltle k f q' (@lem6872145 A K dom neut op ltle f k h1)). Qed.
Lemma lem6872370 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1113 A K P dom neut op ltle k f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6872371 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1291 A K P dom neut op ltle k f.
Proof. exact (fun h0 : term1288 A K dom neut op ltle k f => @lem6872370 A K P dom neut op ltle k f). Qed.
Lemma lem6872372 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (h1 : @FINITE K k) : term1292 A K P dom neut op ltle k f.
Proof. exact (@lem6872217 A K P dom neut op ltle f (term1113 A K P dom neut op ltle k f) k h1). Qed.
Lemma lem6872373 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (h1 : @FINITE K k) : (term1293 A K P dom neut op ltle k f) = (term1294 A K P dom neut op ltle k f).
Proof. exact (@lem6872372 A K P dom neut op ltle f k h1 (@lem6872371 A K P dom neut op ltle k f)). Qed.
Lemma lem6872828 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (h1 : @FINITE K k) : (term1294 A K P dom neut op ltle k f) = (term1293 A K P dom neut op ltle k f).
Proof. exact (SYM (@lem6872373 A K P dom neut op ltle f k h1)). Qed.
Lemma lem6872830 (p : Prop) (q : Prop) (r : Prop) : term680 p q r.
Proof. exact (@lem6868412 p q r (@lem6868404 p q r)). Qed.
Lemma lem6872831 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1295 A K P dom neut op ltle k f.
Proof. exact (@lem6872830 ((term1276 A K k f dom neut) = (@EMPTY K)) (term1253 A K dom neut op ltle k f) (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6872845 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f).
Proof. exact (EQ_MP (@lem6868185 A K op ltle k dom neut f) (@lem6868184 A K op ltle k dom neut f)). Qed.
Lemma lem6872846 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (@iterato A K dom neut op ltle k f) = (term642 A K op ltle k dom neut f).
Proof. exact (@lem6872845 A K op ltle k dom neut f). Qed.
Lemma lem6872847 {A : Type'} (P : A -> Prop) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem6872848 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1113 A K P dom neut op ltle k f) = (term1139 A K P op ltle k dom neut f).
Proof. exact (MK_COMB (@lem6872847 A P) (@lem6872846 A K op ltle k dom neut f)). Qed.
Lemma lem6872849 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1296 A K k f dom neut) = (term1296 A K k f dom neut).
Proof. exact (eq_refl (term1296 A K k f dom neut)). Qed.
Lemma lem6872850 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1297 A K P dom neut op ltle k f) = (term1298 A K P op ltle k dom neut f).
Proof. exact (MK_COMB (@lem6872849 A K k f dom neut) (@lem6872848 A K P op ltle k dom neut f)). Qed.
Lemma lem6872851 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1298 A K P op ltle k dom neut f) = (term1297 A K P dom neut op ltle k f).
Proof. exact (SYM (@lem6872850 A K P op ltle k dom neut f)). Qed.
Lemma lem6872857 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1123 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6872858 (p : Prop) (q : Prop) (p' : Prop) : term1124 p q p'.
Proof. exact (fun q' : Prop => @lem6872857 p q p' q'). Qed.
Lemma lem6872859 (p : Prop) (q : Prop) : term1125 p q.
Proof. exact (fun p' : Prop => @lem6872858 p q p'). Qed.
Lemma lem6872860 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1299 A K P op ltle k dom neut f.
Proof. exact (@lem6872859 ((term1276 A K k f dom neut) = (@EMPTY K)) (term1139 A K P op ltle k dom neut f)). Qed.
Lemma lem6872861 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (p' : Prop) : term1300 A K P op ltle k dom neut f p'.
Proof. exact (@lem6872860 A K P op ltle k dom neut f p'). Qed.
Lemma lem6872862 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (p' : Prop) : (term1300 A K P op ltle k dom neut f p') = (term1301 A K P op ltle k dom neut f p').
Proof. exact (eq_refl (term1300 A K P op ltle k dom neut f p')). Qed.
Lemma lem6872863 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (p' : Prop) : term1301 A K P op ltle k dom neut f p'.
Proof. exact (EQ_MP (@lem6872862 A K P op ltle k dom neut f p') (@lem6872861 A K P op ltle k dom neut f p')). Qed.
Lemma lem6872864 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (p' : Prop) (q' : Prop) : term1302 A K P op ltle k dom neut f p' q'.
Proof. exact (@lem6872863 A K P op ltle k dom neut f p' q'). Qed.
Lemma lem6872865 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (p' : Prop) (q' : Prop) : (term1302 A K P op ltle k dom neut f p' q') = (term1303 A K P op ltle k dom neut f p' q').
Proof. exact (eq_refl (term1302 A K P op ltle k dom neut f p' q')). Qed.
Lemma lem6872866 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) (p' : Prop) (q' : Prop) : term1303 A K P op ltle k dom neut f p' q'.
Proof. exact (EQ_MP (@lem6872865 A K P op ltle k dom neut f p' q') (@lem6872864 A K P op ltle k dom neut f p' q')). Qed.
Lemma lem6872875 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : ((term1276 A K k f dom neut) = (@EMPTY K)) = ((term1276 A K k f dom neut) = (@EMPTY K)).
Proof. exact (eq_refl ((term1276 A K k f dom neut) = (@EMPTY K))). Qed.
Lemma lem6872876 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (q' : Prop) : term1304 A K P op ltle k f dom neut q'.
Proof. exact (@lem6872866 A K P op ltle k dom neut f ((term1276 A K k f dom neut) = (@EMPTY K)) q'). Qed.
Lemma lem6872877 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (q' : Prop) : term1305 A K P op ltle k f dom neut q'.
Proof. exact (@lem6872876 A K P op ltle k f dom neut q' (@lem6872875 A K k f dom neut)). Qed.
Lemma lem6872880 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1276 A K k f dom neut) = (@EMPTY K)) : (term1276 A K k f dom neut) = (@EMPTY K).
Proof. exact (h1). Qed.
Lemma lem6872881 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1276 A K k f dom neut) = (@EMPTY K)) : (term1276 A K k f dom neut) = (@EMPTY K).
Proof. exact (@lem6872880 A K k f dom neut h1). Qed.
Lemma lem6872882 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (@iterato A K dom neut op ltle) = (@iterato A K dom neut op ltle).
Proof. exact (eq_refl (@iterato A K dom neut op ltle)). Qed.
Lemma lem6872883 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1276 A K k f dom neut) = (@EMPTY K)) : (term1306 A K op ltle k f dom neut) = (@iterato A K dom neut op ltle (@EMPTY K)).
Proof. exact (MK_COMB (@lem6872882 A K dom neut op ltle) (@lem6872881 A K k f dom neut h1)). Qed.
Lemma lem6872884 {A K : Type'} (f : K -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem6872885 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1276 A K k f dom neut) = (@EMPTY K)) : (term642 A K op ltle k dom neut f) = (@iterato A K dom neut op ltle (@EMPTY K) f).
Proof. exact (MK_COMB (@lem6872883 A K op ltle k f dom neut h1) (@lem6872884 A K f)). Qed.
Lemma lem6872886 {A : Type'} (P : A -> Prop) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem6872887 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) (h1 : (term1276 A K k f dom neut) = (@EMPTY K)) : (term1139 A K P op ltle k dom neut f) = (term1307 A K P dom neut op ltle f).
Proof. exact (MK_COMB (@lem6872886 A P) (@lem6872885 A K op ltle k f dom neut h1)). Qed.
Lemma lem6872888 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1308 A K k P dom neut op ltle f.
Proof. exact (fun h0 : (term1276 A K k f dom neut) = (@EMPTY K) => @lem6872887 A K P op ltle k f dom neut h0). Qed.
Lemma lem6872889 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1309 A K k P dom neut op ltle f.
Proof. exact (@lem6872877 A K P op ltle k f dom neut (term1307 A K P dom neut op ltle f)). Qed.
Lemma lem6872890 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1298 A K P op ltle k dom neut f) = (term1310 A K k P dom neut op ltle f).
Proof. exact (@lem6872889 A K k P dom neut op ltle f (@lem6872888 A K k P dom neut op ltle f)). Qed.
Lemma lem6872930 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1310 A K k P dom neut op ltle f) = (term1298 A K P op ltle k dom neut f).
Proof. exact (SYM (@lem6872890 A K k P dom neut op ltle f)). Qed.
Lemma lem6872931 {A K : Type'} (dom : A -> Prop) : term720 A K dom.
Proof. exact (@lem6790065 A K dom). Qed.
Lemma lem6872932 {A K : Type'} (dom : A -> Prop) : (term720 A K dom) = (term721 A K dom).
Proof. exact (eq_refl (term720 A K dom)). Qed.
Lemma lem6872933 {A K : Type'} (dom : A -> Prop) : term721 A K dom.
Proof. exact (EQ_MP (@lem6872932 A K dom) (@lem6872931 A K dom)). Qed.
Lemma lem6872934 {A K : Type'} (dom : A -> Prop) (neut : A) : term722 A K dom neut.
Proof. exact (@lem6872933 A K dom neut). Qed.
Lemma lem6872935 {A K : Type'} (dom : A -> Prop) (neut : A) : (term722 A K dom neut) = (term723 A K dom neut).
Proof. exact (eq_refl (term722 A K dom neut)). Qed.
Lemma lem6872936 {A K : Type'} (dom : A -> Prop) (neut : A) : term723 A K dom neut.
Proof. exact (EQ_MP (@lem6872935 A K dom neut) (@lem6872934 A K dom neut)). Qed.
Lemma lem6872937 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term724 A K dom neut op.
Proof. exact (@lem6872936 A K dom neut op). Qed.
Lemma lem6872938 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : (term724 A K dom neut op) = (term725 A K dom neut op).
Proof. exact (eq_refl (term724 A K dom neut op)). Qed.
Lemma lem6872939 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term725 A K dom neut op.
Proof. exact (EQ_MP (@lem6872938 A K dom neut op) (@lem6872937 A K dom neut op)). Qed.
Lemma lem6872940 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term726 A K dom neut op ltle.
Proof. exact (@lem6872939 A K dom neut op ltle). Qed.
Lemma lem6872941 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : (term726 A K dom neut op ltle) = (term727 A K dom neut op ltle).
Proof. exact (eq_refl (term726 A K dom neut op ltle)). Qed.
Lemma lem6872942 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term727 A K dom neut op ltle.
Proof. exact (EQ_MP (@lem6872941 A K dom neut op ltle) (@lem6872940 A K dom neut op ltle)). Qed.
Lemma lem6872943 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term728 A K dom neut op ltle f.
Proof. exact (@lem6872942 A K dom neut op ltle f). Qed.
Lemma lem6872944 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term728 A K dom neut op ltle f) = (term729 A K dom neut op ltle f).
Proof. exact (eq_refl (term728 A K dom neut op ltle f)). Qed.
Lemma lem6872945 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term729 A K dom neut op ltle f.
Proof. exact (EQ_MP (@lem6872944 A K dom neut op ltle f) (@lem6872943 A K dom neut op ltle f)). Qed.
Lemma lem6872953 {A : Type'} (P : A -> Prop) (neut : A) : (P neut) = ((P neut) = True).
Proof. exact (@lem7 (P neut)). Qed.
Lemma lem6872999 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle (@EMPTY K) f) = neut.
Proof. exact (proj1 (@lem6872945 A K dom neut op ltle f)). Qed.
Lemma lem6873000 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (neut : A) : (@iterato A K dom neut op ltle (@EMPTY K) f) = neut.
Proof. exact (@lem6872999 A K dom op ltle f neut). Qed.
Lemma lem6873001 {A : Type'} (P : A -> Prop) : P = P.
Proof. exact (eq_refl P). Qed.
Lemma lem6873002 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) : (term1307 A K P dom neut op ltle f) = (P neut).
Proof. exact (MK_COMB (@lem6873001 A P) (@lem6873000 A K dom op ltle f neut)). Qed.
Lemma lem6873004 {A : Type'} (P : A -> Prop) (neut : A) (h1 : P neut) : (P neut) = True.
Proof. exact (EQ_MP (@lem6872953 A P neut) (@lem6871720 A P neut h1)). Qed.
Lemma lem6873005 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : (term1307 A K P dom neut op ltle f) = True.
Proof. exact (TRANS (@lem6873002 A K dom op ltle f P neut) (@lem6873004 A P neut h1)). Qed.
Lemma lem6873006 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1296 A K k f dom neut) = (term1296 A K k f dom neut).
Proof. exact (eq_refl (term1296 A K k f dom neut)). Qed.
Lemma lem6873007 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (P : A -> Prop) (neut : A) (h1 : P neut) : (term1310 A K k P dom neut op ltle f) = (term1311 A K k f dom neut).
Proof. exact (MK_COMB (@lem6873006 A K k f dom neut) (@lem6873005 A K dom op ltle f P neut h1)). Qed.
Lemma lem6873011 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem6873012 {A K : Type'} (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (neut : A) : (term1311 A K k f dom neut) = True.
Proof. exact (@lem6873011 ((term1276 A K k f dom neut) = (@EMPTY K))). Qed.
Lemma lem6873013 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : (term1310 A K k P dom neut op ltle f) = True.
Proof. exact (TRANS (@lem6873007 A K op ltle k f dom P neut h1) (@lem6873012 A K k f dom neut)). Qed.
Lemma lem6873014 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : True = (term1310 A K k P dom neut op ltle f).
Proof. exact (SYM (@lem6873013 A K k dom op ltle f P neut h1)). Qed.
Lemma lem6873015 {A K : Type'} (k : K -> Prop) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1310 A K k P dom neut op ltle f.
Proof. exact (EQ_MP (@lem6873014 A K k dom op ltle f P neut h1) (@lem0)). Qed.
Lemma lem6873016 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1298 A K P op ltle k dom neut f.
Proof. exact (EQ_MP (@lem6872930 A K P op ltle k dom neut f) (@lem6873015 A K k dom op ltle f P neut h1)). Qed.
Lemma lem6873017 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1297 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6872851 A K P dom neut op ltle k f) (@lem6873016 A K op ltle k dom f P neut h1)). Qed.
Lemma lem6873018 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (h1 : term1253 A K dom neut op ltle k f) : term1253 A K dom neut op ltle k f.
Proof. exact (h1). Qed.
Lemma lem6873019 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1312 A K dom neut op ltle k i f) : term1312 A K dom neut op ltle k i f.
Proof. exact (h1). Qed.
Lemma lem6873027 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term640 A x s t) = (term641 A s x t).
Proof. exact (EQ_MP (@lem6868137 A s x t) (@lem6868136 A s t x)). Qed.
Lemma lem6873028 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term640 A x s t) = (term641 A s x t).
Proof. exact (@lem6873027 A s x t). Qed.
Lemma lem6873029 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1262 A K f i dom neut) = (term1313 A K dom f i neut).
Proof. exact (@lem6873028 A dom (f i) (@INSERT A neut (@EMPTY A))). Qed.
Lemma lem6873033 {A : Type'} (x : A) (y : A) : (term634 A x y) = (x = y).
Proof. exact (EQ_MP (@lem6868128 A x y) (@lem6868127 A x y)). Qed.
Lemma lem6873034 {A : Type'} (x : A) (y : A) : (term634 A x y) = (x = y).
Proof. exact (@lem6873033 A x y). Qed.
Lemma lem6873035 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1314 A K f i neut) = ((f i) = neut).
Proof. exact (@lem6873034 A (f i) neut). Qed.
Lemma lem6873038 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6873039 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1315 A K f i neut) = (term1316 A K f i neut).
Proof. exact (MK_COMB (@lem6873038) (@lem6873035 A K f i neut)). Qed.
Lemma lem6873040 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term1317 A K f i dom) = (term1317 A K f i dom).
Proof. exact (eq_refl (term1317 A K f i dom)). Qed.
Lemma lem6873041 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1313 A K dom f i neut) = (term1318 A K dom f i neut).
Proof. exact (MK_COMB (@lem6873040 A K f i dom) (@lem6873039 A K f i neut)). Qed.
Lemma lem6873044 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1262 A K f i dom neut) = (term1318 A K dom f i neut).
Proof. exact (TRANS (@lem6873029 A K dom f i neut) (@lem6873041 A K dom f i neut)). Qed.
Lemma lem6873045 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6873046 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) : (term1319 A K f i dom neut) = (term1320 A K dom f i neut).
Proof. exact (MK_COMB (@lem6873045) (@lem6873044 A K dom f i neut)). Qed.
Lemma lem6873049 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : ((@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) = ((@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)).
Proof. exact (eq_refl ((@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f))). Qed.
Lemma lem6873050 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1322 A K dom neut op ltle k i f) = (term1323 A K dom neut op ltle k i f).
Proof. exact (MK_COMB (@lem6873046 A K dom f i neut) (@lem6873049 A K dom neut op ltle k i f)). Qed.
Lemma lem6873053 {K : Type'} (i : K) (k : K -> Prop) : (term904 K i k) = (term904 K i k).
Proof. exact (eq_refl (term904 K i k)). Qed.
Lemma lem6873054 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1312 A K dom neut op ltle k i f) = (term1324 A K dom neut op ltle k i f).
Proof. exact (MK_COMB (@lem6873053 K i k) (@lem6873050 A K dom neut op ltle k i f)). Qed.
Lemma lem6873057 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6873058 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1325 A K dom neut op ltle k i f) = (term1326 A K dom neut op ltle k i f).
Proof. exact (MK_COMB (@lem6873057) (@lem6873054 A K dom neut op ltle k i f)). Qed.
Lemma lem6873059 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1113 A K P dom neut op ltle k f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1113 A K P dom neut op ltle k f)). Qed.
Lemma lem6873060 {A K : Type'} (i : K) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1327 A K i P dom neut op ltle k f) = (term1328 A K i P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6873058 A K dom neut op ltle k i f) (@lem6873059 A K P dom neut op ltle k f)). Qed.
Lemma lem6873063 {A K : Type'} (i : K) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1328 A K i P dom neut op ltle k f) = (term1327 A K i P dom neut op ltle k f).
Proof. exact (SYM (@lem6873060 A K i P dom neut op ltle k f)). Qed.
Lemma lem6873064 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1324 A K dom neut op ltle k i f) : term1324 A K dom neut op ltle k i f.
Proof. exact (h1). Qed.
Lemma lem6873065 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1323 A K dom neut op ltle k i f) : term1323 A K dom neut op ltle k i f.
Proof. exact (h1). Qed.
Lemma lem6873066 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : @IN K i k.
Proof. exact (h1). Qed.
Lemma lem6873067 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f).
Proof. exact (h1). Qed.
Lemma lem6873068 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1318 A K dom f i neut) : term1318 A K dom f i neut.
Proof. exact (h1). Qed.
Lemma lem6873069 {A K : Type'} (f : K -> A) (i : K) (neut : A) (h1 : term1316 A K f i neut) : term1316 A K f i neut.
Proof. exact (h1). Qed.
Lemma lem6873070 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) (h1 : term1329 A K f i dom) : term1329 A K f i dom.
Proof. exact (h1). Qed.
Lemma lem6873071 {A : Type'} (P : A -> Prop) : (term1330 A P) = (term1330 A P).
Proof. exact (eq_refl (term1330 A P)). Qed.
Lemma lem6873072 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) : (term1331 A K P dom neut op ltle k f) = (term1332 A K P dom neut op ltle k i f).
Proof. exact (MK_COMB (@lem6873071 A P) (@lem6873067 A K dom neut op ltle k i f h1)). Qed.
Lemma lem6873073 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1332 A K P dom neut op ltle k i f) = (term1333 A K P dom neut op ltle k i f).
Proof. exact (eq_refl (term1332 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873074 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1334 A K P dom neut op ltle k f) = (term1334 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1334 A K P dom neut op ltle k f)). Qed.
Lemma lem6873075 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : ((term1331 A K P dom neut op ltle k f) = (term1332 A K P dom neut op ltle k i f)) = ((term1331 A K P dom neut op ltle k f) = (term1333 A K P dom neut op ltle k i f)).
Proof. exact (MK_COMB (@lem6873074 A K P dom neut op ltle k f) (@lem6873073 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873076 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1331 A K P dom neut op ltle k f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (eq_refl (term1331 A K P dom neut op ltle k f)). Qed.
Lemma lem6873077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6873078 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1334 A K P dom neut op ltle k f) = (term1335 A K P dom neut op ltle k f).
Proof. exact (MK_COMB (@lem6873077) (@lem6873076 A K P dom neut op ltle k f)). Qed.
Lemma lem6873079 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1333 A K P dom neut op ltle k i f) = (term1333 A K P dom neut op ltle k i f).
Proof. exact (eq_refl (term1333 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873080 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : ((term1331 A K P dom neut op ltle k f) = (term1333 A K P dom neut op ltle k i f)) = ((term1113 A K P dom neut op ltle k f) = (term1333 A K P dom neut op ltle k i f)).
Proof. exact (MK_COMB (@lem6873078 A K P dom neut op ltle k f) (@lem6873079 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873081 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : ((term1331 A K P dom neut op ltle k f) = (term1332 A K P dom neut op ltle k i f)) = ((term1113 A K P dom neut op ltle k f) = (term1333 A K P dom neut op ltle k i f)).
Proof. exact (TRANS (@lem6873075 A K P dom neut op ltle k i f) (@lem6873080 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873082 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) : (term1113 A K P dom neut op ltle k f) = (term1333 A K P dom neut op ltle k i f).
Proof. exact (EQ_MP (@lem6873081 A K P dom neut op ltle k i f) (@lem6873072 A K P dom neut op ltle k i f h1)). Qed.
Lemma lem6873083 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) : (term1333 A K P dom neut op ltle k i f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (SYM (@lem6873082 A K P dom neut op ltle k i f h1)). Qed.
Lemma lem6873084 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1185 A K k P op f.
Proof. exact (h1). Qed.
Lemma lem6873085 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1336 A K k P op f i.
Proof. exact (@lem6873084 A K k P op f h1 i). Qed.
Lemma lem6873086 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1336 A K k P op f i) = (term1337 A K k P op f i).
Proof. exact (eq_refl (term1336 A K k P op f i)). Qed.
Lemma lem6873087 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1337 A K k P op f i.
Proof. exact (EQ_MP (@lem6873086 A K k P op f i) (@lem6873085 A K i k P op f h1)). Qed.
Lemma lem6873088 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1338 A K k P op f i x.
Proof. exact (@lem6873087 A K i k P op f h1 x). Qed.
Lemma lem6873089 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1338 A K k P op f i x) = (term1339 A K k P op f i x).
Proof. exact (eq_refl (term1338 A K k P op f i x)). Qed.
Lemma lem6873090 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1339 A K k P op f i x.
Proof. exact (EQ_MP (@lem6873089 A K k P op f i x) (@lem6873088 A K i x k P op f h1)). Qed.
Lemma lem6873091 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1340 A K i k P x) : term1340 A K i k P x.
Proof. exact (h1). Qed.
Lemma lem6873092 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1185 A K k P op f) (h2 : term1340 A K i k P x) : term1098 A K P op f i x.
Proof. exact (@lem6873090 A K i x k P op f h1 (@lem6873091 A K i k P x h2)). Qed.
Lemma lem6873093 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1340 A K i k P x) : term1341 A K k P op f i x.
Proof. exact (fun h0 : term1185 A K k P op f => @lem6873092 A K op f i k P x h0 h1). Qed.
Lemma lem6873094 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1185 A K k P op f.
Proof. exact (h1). Qed.
Lemma lem6873095 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1185 A K k P op f) (h2 : term1340 A K i k P x) : term1098 A K P op f i x.
Proof. exact (@lem6873093 A K op f i k P x h2 (@lem6873094 A K k P op f h1)). Qed.
Lemma lem6873096 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1339 A K k P op f i x.
Proof. exact (fun h0 : term1340 A K i k P x => @lem6873095 A K op f i k P x h1 h0). Qed.
Lemma lem6873097 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1337 A K k P op f i.
Proof. exact (fun x : A => @lem6873096 A K i x k P op f h1). Qed.
Lemma lem6873098 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1185 A K k P op f.
Proof. exact (fun i : K => @lem6873097 A K i k P op f h1). Qed.
Lemma lem6873099 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : term1342 A K k P op f.
Proof. exact (fun h0 : term1185 A K k P op f => @lem6873098 A K k P op f h0). Qed.
Lemma lem6873100 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1185 A K k P op f.
Proof. exact (@lem6873099 A K k P op f (@lem6871823 A K k P op f h1)). Qed.
Lemma lem6873101 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1336 A K k P op f i.
Proof. exact (@lem6873100 A K k P op f h1 i). Qed.
Lemma lem6873102 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1336 A K k P op f i) = (term1337 A K k P op f i).
Proof. exact (eq_refl (term1336 A K k P op f i)). Qed.
Lemma lem6873103 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1337 A K k P op f i.
Proof. exact (EQ_MP (@lem6873102 A K k P op f i) (@lem6873101 A K i k P op f h1)). Qed.
Lemma lem6873104 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1338 A K k P op f i x.
Proof. exact (@lem6873103 A K i k P op f h1 x). Qed.
Lemma lem6873105 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1338 A K k P op f i x) = (term1339 A K k P op f i x).
Proof. exact (eq_refl (term1338 A K k P op f i x)). Qed.
Lemma lem6873108 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1339 A K k P op f i x.
Proof. exact (EQ_MP (@lem6873105 A K k P op f i x) (@lem6873104 A K i x k P op f h1)). Qed.
Lemma lem6873109 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1339 A K k P op f i x.
Proof. exact (@lem6873108 A K i x k P op f h1). Qed.
Lemma lem6873110 {A K : Type'} (dom : A -> Prop) (neut : A) (ltle : type1402 K) (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1343 A K P dom neut op ltle k i f.
Proof. exact (@lem6873109 A K i (term1344 A K dom neut op ltle k i f) k P op f h1). Qed.
Lemma lem6873144 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = ((@IN K i k) = True).
Proof. exact (@lem7 (@IN K i k)). Qed.
Lemma lem6873164 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : (@IN K i k) = True.
Proof. exact (EQ_MP (@lem6873144 K i k) (@lem6873066 K i k h1)). Qed.
Lemma lem6873165 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6873166 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term904 K i k) = (and True).
Proof. exact (MK_COMB (@lem6873165) (@lem6873164 K i k h1)). Qed.
Lemma lem6873167 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1345 A K P dom neut op ltle k i f) = (term1345 A K P dom neut op ltle k i f).
Proof. exact (eq_refl (term1345 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873168 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term1346 A K P dom neut op ltle k i f) = (term1347 A K P dom neut op ltle k i f).
Proof. exact (MK_COMB (@lem6873166 K i k h1) (@lem6873167 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873170 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6873171 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) : (term1347 A K P dom neut op ltle k i f) = (term1345 A K P dom neut op ltle k i f).
Proof. exact (@lem6873170 (term1345 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873172 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term1346 A K P dom neut op ltle k i f) = (term1345 A K P dom neut op ltle k i f).
Proof. exact (TRANS (@lem6873168 A K P dom neut op ltle f i k h1) (@lem6873171 A K P dom neut op ltle k i f)). Qed.
Lemma lem6873173 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (i : K) (k : K -> Prop) (h1 : @IN K i k) : (term1345 A K P dom neut op ltle k i f) = (term1346 A K P dom neut op ltle k i f).
Proof. exact (SYM (@lem6873172 A K P dom neut op ltle f i k h1)). Qed.
Lemma lem6873199 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1237 A K n P dom neut op ltle f.
Proof. exact (h1). Qed.
Lemma lem6873200 {A K : Type'} (m : nat) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1348 A K n P dom neut op ltle f m.
Proof. exact (@lem6873199 A K n P dom neut op ltle f h1 m). Qed.
Lemma lem6873201 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : (term1348 A K n P dom neut op ltle f m) = (term1235 A K n m P dom neut op ltle f).
Proof. exact (eq_refl (term1348 A K n P dom neut op ltle f m)). Qed.
Lemma lem6873202 {A K : Type'} (m : nat) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1235 A K n m P dom neut op ltle f.
Proof. exact (EQ_MP (@lem6873201 A K n m P dom neut op ltle f) (@lem6873200 A K m n P dom neut op ltle f h1)). Qed.
Lemma lem6873203 {A K : Type'} (m : nat) (k : K -> Prop) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1349 A K n m P dom neut op ltle f k.
Proof. exact (@lem6873202 A K m n P dom neut op ltle f h1 k). Qed.
Lemma lem6873204 {A K : Type'} (n : nat) (m : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1349 A K n m P dom neut op ltle f k) = (term1233 A K n m P dom neut op ltle k f).
Proof. exact (eq_refl (term1349 A K n m P dom neut op ltle f k)). Qed.
Lemma lem6873205 {A K : Type'} (m : nat) (k : K -> Prop) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1233 A K n m P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6873204 A K n m P dom neut op ltle k f) (@lem6873203 A K m k n P dom neut op ltle f h1)). Qed.
Lemma lem6873206 {A K : Type'} (n : nat) (m : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1230 A K n m k P op f) : term1230 A K n m k P op f.
Proof. exact (h1). Qed.
Lemma lem6873207 {A K : Type'} (dom : A -> Prop) (neut : A) (ltle : type1402 K) (n : nat) (m : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) (h2 : term1230 A K n m k P op f) : term1113 A K P dom neut op ltle k f.
Proof. exact (@lem6873205 A K m k n P dom neut op ltle f h1 (@lem6873206 A K n m k P op f h2)). Qed.
Lemma lem6873208 {A K : Type'} (dom : A -> Prop) (neut : A) (ltle : type1402 K) (n : nat) (m : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1230 A K n m k P op f) : term1350 A K n P dom neut op ltle k f.
Proof. exact (fun h0 : term1237 A K n P dom neut op ltle f => @lem6873207 A K dom neut ltle n m k P op f h0 h1). Qed.
Lemma lem6873209 {A K : Type'} (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1351 A K n k P op f) : term1351 A K n k P op f.
Proof. exact (h1). Qed.
Lemma lem6873210 {A K : Type'} (dom : A -> Prop) (neut : A) (ltle : type1402 K) (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1351 A K n k P op f) : term1350 A K n P dom neut op ltle k f.
Proof. exact (ex_elim (@lem6873209 A K n k P op f h1) (fun m : nat => fun h0 : term1352 A K n k P op f m => @lem6873208 A K dom neut ltle n m k P op f h0)). Qed.
Lemma lem6873211 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1237 A K n P dom neut op ltle f.
Proof. exact (h1). Qed.
Lemma lem6873212 {A K : Type'} (dom : A -> Prop) (neut : A) (ltle : type1402 K) (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) (h2 : term1351 A K n k P op f) : term1113 A K P dom neut op ltle k f.
Proof. exact (@lem6873210 A K dom neut ltle n k P op f h2 (@lem6873211 A K n P dom neut op ltle f h1)). Qed.
Lemma lem6873213 {A K : Type'} (k : K -> Prop) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1353 A K n P dom neut op ltle k f.
Proof. exact (fun h0 : term1351 A K n k P op f => @lem6873212 A K dom neut ltle n k P op f h1 h0). Qed.
Lemma lem6873214 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1237 A K n P dom neut op ltle f) : term1354 A K n P dom neut op ltle f.
Proof. exact (fun k : K -> Prop => @lem6873213 A K k n P dom neut op ltle f h1). Qed.
Lemma lem6873215 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) : term1355 A K n P dom neut op ltle f.
Proof. exact (fun h0 : term1237 A K n P dom neut op ltle f => @lem6873214 A K n P dom neut op ltle f h0). Qed.
Lemma lem6873216 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1354 A K n P dom neut op ltle f.
Proof. exact (@lem6873215 A K n P dom neut op ltle f (@lem6871803 A K n P dom neut op ltle f h1)). Qed.
Lemma lem6873217 {A K : Type'} (k : K -> Prop) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1356 A K n P dom neut op ltle f k.
Proof. exact (@lem6873216 A K n P dom neut op ltle f h1 k). Qed.
Lemma lem6873218 {A K : Type'} (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : (term1356 A K n P dom neut op ltle f k) = (term1353 A K n P dom neut op ltle k f).
Proof. exact (eq_refl (term1356 A K n P dom neut op ltle f k)). Qed.
Lemma lem6873221 {A K : Type'} (k : K -> Prop) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1353 A K n P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6873218 A K n P dom neut op ltle k f) (@lem6873217 A K k n P dom neut op ltle f h1)). Qed.
Lemma lem6873222 {A K : Type'} (k : K -> Prop) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1353 A K n P dom neut op ltle k f.
Proof. exact (@lem6873221 A K k n P dom neut op ltle f h1). Qed.
Lemma lem6873223 {A K : Type'} (k : K -> Prop) (i : K) (n : nat) (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) : term1357 A K n P dom neut op ltle k i f.
Proof. exact (@lem6873222 A K (@DELETE K k i) n P dom neut op ltle f h1). Qed.
Lemma lem6873224 {A : Type'} (s : A -> Prop) : term1358 A s.
Proof. exact (@lem3205803 A s). Qed.
Lemma lem6873225 {A : Type'} (s : A -> Prop) : (term1358 A s) = (term1359 A s).
Proof. exact (eq_refl (term1358 A s)). Qed.
Lemma lem6873226 {A : Type'} (s : A -> Prop) : term1359 A s.
Proof. exact (EQ_MP (@lem6873225 A s) (@lem6873224 A s)). Qed.
Lemma lem6873227 {A : Type'} (s : A -> Prop) (x : A) : term1360 A s x.
Proof. exact (@lem6873226 A s x). Qed.
Lemma lem6873228 {A : Type'} (s : A -> Prop) (x : A) : (term1360 A s x) = (term1361 A s x).
Proof. exact (eq_refl (term1360 A s x)). Qed.
Lemma lem6873229 {A : Type'} (s : A -> Prop) (x : A) : term1361 A s x.
Proof. exact (EQ_MP (@lem6873228 A s x) (@lem6873227 A s x)). Qed.
Lemma lem6873230 {A : Type'} (s : A -> Prop) (x : A) (y : A) : term1362 A s x y.
Proof. exact (@lem6873229 A s x y). Qed.
Lemma lem6873231 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1362 A s x y) = ((term1363 A x s y) = (term1364 A s x y)).
Proof. exact (eq_refl (term1362 A s x y)). Qed.
Lemma lem6873233 {A : Type'} (s : A -> Prop) : term1365 A s.
Proof. exact (@lem3610594 A s). Qed.
Lemma lem6873234 {A : Type'} (s : A -> Prop) : (term1365 A s) = (term1366 A s).
Proof. exact (eq_refl (term1365 A s)). Qed.
Lemma lem6873235 {A : Type'} (s : A -> Prop) : term1366 A s.
Proof. exact (EQ_MP (@lem6873234 A s) (@lem6873233 A s)). Qed.
Lemma lem6873236 {A : Type'} (s : A -> Prop) (x : A) : term1367 A s x.
Proof. exact (@lem6873235 A s x). Qed.
Lemma lem6873237 {A : Type'} (x : A) (s : A -> Prop) : (term1367 A s x) = ((term1368 A s x) = (@FINITE A s)).
Proof. exact (eq_refl (term1367 A s x)). Qed.
Lemma lem6873239 {A : Type'} (x : A) : term1369 A x.
Proof. exact (@lem3845383 A x). Qed.
Lemma lem6873240 {A : Type'} (x : A) : (term1369 A x) = (term1370 A x).
Proof. exact (eq_refl (term1369 A x)). Qed.
Lemma lem6873241 {A : Type'} (x : A) : term1370 A x.
Proof. exact (EQ_MP (@lem6873240 A x) (@lem6873239 A x)). Qed.
Lemma lem6873242 {A : Type'} (x : A) (s : A -> Prop) : term1371 A x s.
Proof. exact (@lem6873241 A x s). Qed.
Lemma lem6873243 {A : Type'} (x : A) (s : A -> Prop) : (term1371 A x s) = (term1372 A x s).
Proof. exact (eq_refl (term1371 A x s)). Qed.
Lemma lem6873244 {A : Type'} (x : A) (s : A -> Prop) : term1372 A x s.
Proof. exact (EQ_MP (@lem6873243 A x s) (@lem6873242 A x s)). Qed.
Lemma lem6873245 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem6873246 {A : Type'} (x : A) (s : A -> Prop) (h1 : @FINITE A s) : (term1373 A s x) = (term1374 A x s).
Proof. exact (@lem6873244 A x s (@lem6873245 A s h1)). Qed.
Lemma lem6873254 {K : Type'} (k : K -> Prop) : (@FINITE K k) = ((@FINITE K k) = True).
Proof. exact (@lem7 (@FINITE K k)). Qed.
Lemma lem6873256 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1336 A K k P op f i.
Proof. exact (@lem6871823 A K k P op f h1 i). Qed.
Lemma lem6873257 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1336 A K k P op f i) = (term1337 A K k P op f i).
Proof. exact (eq_refl (term1336 A K k P op f i)). Qed.
Lemma lem6873258 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1337 A K k P op f i.
Proof. exact (EQ_MP (@lem6873257 A K k P op f i) (@lem6873256 A K i k P op f h1)). Qed.
Lemma lem6873259 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1338 A K k P op f i x.
Proof. exact (@lem6873258 A K i k P op f h1 x). Qed.
Lemma lem6873260 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1338 A K k P op f i x) = (term1339 A K k P op f i x).
Proof. exact (eq_refl (term1338 A K k P op f i x)). Qed.
Lemma lem6873261 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1339 A K k P op f i x.
Proof. exact (EQ_MP (@lem6873260 A K k P op f i x) (@lem6873259 A K i x k P op f h1)). Qed.
Lemma lem6873262 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1340 A K i k P x) : term1340 A K i k P x.
Proof. exact (h1). Qed.
Lemma lem6873263 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1185 A K k P op f) (h2 : term1340 A K i k P x) : term1098 A K P op f i x.
Proof. exact (@lem6873261 A K i x k P op f h1 (@lem6873262 A K i k P x h2)). Qed.
Lemma lem6873264 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1098 A K P op f i x) = ((term1098 A K P op f i x) = True).
Proof. exact (@lem7 (term1098 A K P op f i x)). Qed.
Lemma lem6873265 {A K : Type'} (op : type1400 A) (f : K -> A) (i : K) (k : K -> Prop) (P : A -> Prop) (x : A) (h1 : term1185 A K k P op f) (h2 : term1340 A K i k P x) : (term1098 A K P op f i x) = True.
Proof. exact (EQ_MP (@lem6873264 A K P op f i x) (@lem6873263 A K op f i k P x h1 h2)). Qed.
Lemma lem6873284 {K : Type'} (i : K) (k : K -> Prop) : (@IN K i k) = ((@IN K i k) = True).
Proof. exact (@lem7 (@IN K i k)). Qed.
Lemma lem6873306 {A : Type'} (x : A) (s : A -> Prop) : (term1368 A s x) = (@FINITE A s).
Proof. exact (EQ_MP (@lem6873237 A x s) (@lem6873236 A s x)). Qed.
Lemma lem6873307 {K : Type'} (x : K) (s : K -> Prop) : (term1368 K s x) = (@FINITE K s).
Proof. exact (@lem6873306 K x s). Qed.
Lemma lem6873308 {K : Type'} (i : K) (k : K -> Prop) : (term1368 K k i) = (@FINITE K k).
Proof. exact (@lem6873307 K i k). Qed.
Lemma lem6873310 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : (@FINITE K k) = True.
Proof. exact (EQ_MP (@lem6873254 K k) (@lem6871805 K k h1)). Qed.
Lemma lem6873311 {K : Type'} (i : K) (k : K -> Prop) (h1 : @FINITE K k) : (term1368 K k i) = True.
Proof. exact (TRANS (@lem6873308 K i k) (@lem6873310 K k h1)). Qed.
Lemma lem6873312 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6873313 {K : Type'} (i : K) (k : K -> Prop) (h1 : @FINITE K k) : (term1375 K k i) = (and True).
Proof. exact (MK_COMB (@lem6873312) (@lem6873311 K i k h1)). Qed.
Lemma lem6873319 {A : Type'} (x : A) (s : A -> Prop) : term1372 A x s.
Proof. exact (fun h0 : @FINITE A s => @lem6873246 A x s h0). Qed.
Lemma lem6873320 {K : Type'} (x : K) (s : K -> Prop) : term1372 K x s.
Proof. exact (@lem6873319 K x s). Qed.
Lemma lem6873321 {K : Type'} (i : K) (k : K -> Prop) : term1372 K i k.
Proof. exact (@lem6873320 K i k). Qed.
Lemma lem6873323 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : (@FINITE K k) = True.
Proof. exact (EQ_MP (@lem6873254 K k) (@lem6871805 K k h1)). Qed.
Lemma lem6873324 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : True = (@FINITE K k).
Proof. exact (SYM (@lem6873323 K k h1)). Qed.
Lemma lem6873325 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (EQ_MP (@lem6873324 K k h1) (@lem0)). Qed.
Lemma lem6873326 {K : Type'} (i : K) (k : K -> Prop) (h1 : @FINITE K k) : (term1373 K k i) = (term1374 K i k).
Proof. exact (@lem6873321 K i k (@lem6873325 K k h1)). Qed.
Lemma lem6873328 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term1133 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem6873329 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term1134 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem6873328 _2963 g t e g' t' e'). Qed.
Lemma lem6873330 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term1135 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem6873329 _2963 g t e g' t'). Qed.
Lemma lem6873331 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1136 _2963 g t e.
Proof. exact (fun g' : Prop => @lem6873330 _2963 g t e g'). Qed.
Lemma lem6873332 (g : Prop) (t : nat) (e : nat) : term1376 g t e.
Proof. exact (@lem6873331 nat g t e). Qed.
Lemma lem6873333 {K : Type'} (i : K) (k : K -> Prop) : term1377 K i k.
Proof. exact (@lem6873332 (@IN K i k) (term1378 K k) (@CARD K k)). Qed.
Lemma lem6873334 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) : term1379 K i k g'.
Proof. exact (@lem6873333 K i k g'). Qed.
Lemma lem6873335 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) : (term1379 K i k g') = (term1380 K i k g').
Proof. exact (eq_refl (term1379 K i k g')). Qed.
Lemma lem6873336 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) : term1380 K i k g'.
Proof. exact (EQ_MP (@lem6873335 K i k g') (@lem6873334 K i k g')). Qed.
Lemma lem6873337 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) (t' : nat) : term1381 K i k g' t'.
Proof. exact (@lem6873336 K i k g' t'). Qed.
Lemma lem6873338 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) (t' : nat) : (term1381 K i k g' t') = (term1382 K i k g' t').
Proof. exact (eq_refl (term1381 K i k g' t')). Qed.
Lemma lem6873339 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) (t' : nat) : term1382 K i k g' t'.
Proof. exact (EQ_MP (@lem6873338 K i k g' t') (@lem6873337 K i k g' t')). Qed.
Lemma lem6873340 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) (t' : nat) (e' : nat) : term1383 K i k g' t' e'.
Proof. exact (@lem6873339 K i k g' t' e'). Qed.
Lemma lem6873341 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) (t' : nat) (e' : nat) : (term1383 K i k g' t' e') = (term1384 K i k g' t' e').
Proof. exact (eq_refl (term1383 K i k g' t' e')). Qed.
Lemma lem6873342 {K : Type'} (i : K) (k : K -> Prop) (g' : Prop) (t' : nat) (e' : nat) : term1384 K i k g' t' e'.
Proof. exact (EQ_MP (@lem6873341 K i k g' t' e') (@lem6873340 K i k g' t' e')). Qed.
Lemma lem6873344 {K : Type'} (i : K) (k : K -> Prop) (h1 : @IN K i k) : (@IN K i k) = True.
Proof. exact (EQ_MP (@lem6873284 K i k) (@lem6873066 K i k h1)). Qed.
Lemma lem6873345 {K : Type'} (i : K) (k : K -> Prop) (t' : nat) (e' : nat) : term1385 K i k t' e'.
Proof. exact (@lem6873342 K i k True t' e'). Qed.
Lemma lem6873346 {K : Type'} (t' : nat) (e' : nat) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term1386 K i k t' e'.
Proof. exact (@lem6873345 K i k t' e' (@lem6873344 K i k h1)). Qed.
Lemma lem6873353 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6873354 : Nat.sub = Nat.sub.
Proof. exact (eq_refl Nat.sub). Qed.
Lemma lem6873355 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (term1387 K k) = (Nat.sub n).
Proof. exact (MK_COMB (@lem6873354) (@lem6873353 K k n h1)). Qed.
Lemma lem6873356 : term11 = term11.
Proof. exact (eq_refl term11). Qed.
Lemma lem6873357 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (term1378 K k) = (term1388 n).
Proof. exact (MK_COMB (@lem6873355 K k n h1) (@lem6873356)). Qed.
Lemma lem6873358 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : term1389 K k n.
Proof. exact (fun h0 : True => @lem6873357 K k n h1). Qed.
Lemma lem6873359 {K : Type'} (n : nat) (e' : nat) (i : K) (k : K -> Prop) (h1 : @IN K i k) : term1390 K i k n e'.
Proof. exact (@lem6873346 K (term1388 n) e' i k h1). Qed.
Lemma lem6873360 {K : Type'} (e' : nat) (n : nat) (i : K) (k : K -> Prop) (h1 : (@CARD K k) = n) (h2 : @IN K i k) : term1391 K i k n e'.
Proof. exact (@lem6873359 K n e' i k h2 (@lem6873358 K k n h1)). Qed.
Lemma lem6873365 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6873366 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : term1392 K k n.
Proof. exact (fun h0 : ~ True => @lem6873365 K k n h1). Qed.
Lemma lem6873367 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : (@CARD K k) = n) (h2 : @IN K i k) : term1393 K i k n.
Proof. exact (@lem6873360 K n n i k h1 h2). Qed.
Lemma lem6873368 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : (@CARD K k) = n) (h2 : @IN K i k) : (term1374 K i k) = (term1394 n).
Proof. exact (@lem6873367 K n i k h1 h2 (@lem6873366 K k n h1)). Qed.
Lemma lem6873370 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem6873371 (t2 : nat) (t1 : nat) : (@COND nat True t1 t2) = t1.
Proof. exact (@lem6873370 nat t2 t1). Qed.
Lemma lem6873372 (n : nat) : (term1394 n) = (term1388 n).
Proof. exact (@lem6873371 n (term1388 n)). Qed.
Lemma lem6873373 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : (@CARD K k) = n) (h2 : @IN K i k) : (term1374 K i k) = (term1388 n).
Proof. exact (TRANS (@lem6873368 K n i k h1 h2) (@lem6873372 n)). Qed.
Lemma lem6873374 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) (h3 : @IN K i k) : (term1373 K k i) = (term1388 n).
Proof. exact (TRANS (@lem6873326 K i k h1) (@lem6873373 K n i k h2 h3)). Qed.
Lemma lem6873375 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem6873376 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) (h3 : @IN K i k) : (term1395 K k i) = (term1396 n).
Proof. exact (MK_COMB (@lem6873375) (@lem6873374 K n i k h1 h2 h3)). Qed.
Lemma lem6873377 (n : nat) : (term1388 n) = (term1388 n).
Proof. exact (eq_refl (term1388 n)). Qed.
Lemma lem6873378 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) (h3 : @IN K i k) : ((term1373 K k i) = (term1388 n)) = ((term1388 n) = (term1388 n)).
Proof. exact (MK_COMB (@lem6873376 K n i k h1 h2 h3) (@lem6873377 n)). Qed.
Lemma lem6873380 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem6873381 (x : nat) : (x = x) = True.
Proof. exact (@lem6873380 nat x). Qed.
Lemma lem6873382 (n : nat) : ((term1388 n) = (term1388 n)) = True.
Proof. exact (@lem6873381 (term1388 n)). Qed.
Lemma lem6873383 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) (h3 : @IN K i k) : ((term1373 K k i) = (term1388 n)) = True.
Proof. exact (TRANS (@lem6873378 K n i k h1 h2 h3) (@lem6873382 n)). Qed.
Lemma lem6873384 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6873385 {K : Type'} (n : nat) (i : K) (k : K -> Prop) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) (h3 : @IN K i k) : (term1397 K k i n) = (and True).
Proof. exact (MK_COMB (@lem6873384) (@lem6873383 K n i k h1 h2 h3)). Qed.
Lemma lem6873397 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1123 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem6873398 (p : Prop) (q : Prop) (p' : Prop) : term1124 p q p'.
Proof. exact (fun q' : Prop => @lem6873397 p q p' q'). Qed.
Lemma lem6873399 (p : Prop) (q : Prop) : term1125 p q.
Proof. exact (fun p' : Prop => @lem6873398 p q p'). Qed.
Lemma lem6873400 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) : term1398 A K k i P op f i' x.
Proof. exact (@lem6873399 (term1399 A K i' k i P x) (term1098 A K P op f i' x)). Qed.
Lemma lem6873401 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) (p' : Prop) : term1400 A K k i P op f i' x p'.
Proof. exact (@lem6873400 A K k i P op f i' x p'). Qed.
Lemma lem6873402 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) (p' : Prop) : (term1400 A K k i P op f i' x p') = (term1401 A K k i P op f i' x p').
Proof. exact (eq_refl (term1400 A K k i P op f i' x p')). Qed.
Lemma lem6873403 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) (p' : Prop) : term1401 A K k i P op f i' x p'.
Proof. exact (EQ_MP (@lem6873402 A K k i P op f i' x p') (@lem6873401 A K k i P op f i' x p')). Qed.
Lemma lem6873404 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) (p' : Prop) (q' : Prop) : term1402 A K k i P op f i' x p' q'.
Proof. exact (@lem6873403 A K k i P op f i' x p' q'). Qed.
Lemma lem6873405 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) (p' : Prop) (q' : Prop) : (term1402 A K k i P op f i' x p' q') = (term1403 A K k i P op f i' x p' q').
Proof. exact (eq_refl (term1402 A K k i P op f i' x p' q')). Qed.
Lemma lem6873406 {A K : Type'} (k : K -> Prop) (i : K) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i' : K) (x : A) (p' : Prop) (q' : Prop) : term1403 A K k i P op f i' x p' q'.
Proof. exact (EQ_MP (@lem6873405 A K k i P op f i' x p' q') (@lem6873404 A K k i P op f i' x p' q')). Qed.
Lemma lem6873410 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1363 A x s y) = (term1364 A s x y).
Proof. exact (EQ_MP (@lem6873231 A s x y) (@lem6873230 A s x y)). Qed.
Lemma lem6873411 {K : Type'} (s : K -> Prop) (x : K) (y : K) : (term1363 K x s y) = (term1364 K s x y).
Proof. exact (@lem6873410 K s x y). Qed.
Lemma lem6873412 {K : Type'} (k : K -> Prop) (i' : K) (i : K) : (term1363 K i' k i) = (term1364 K k i' i).
Proof. exact (@lem6873411 K k i' i). Qed.
Lemma lem6873417 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6873418 {K : Type'} (k : K -> Prop) (i' : K) (i : K) : (term1404 K i' k i) = (term1405 K k i' i).
Proof. exact (MK_COMB (@lem6873417) (@lem6873412 K k i' i)). Qed.
Lemma lem6873423 {A : Type'} (P : A -> Prop) (x : A) : (P x) = (P x).
Proof. exact (eq_refl (P x)). Qed.
Lemma lem6873424 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) : (term1399 A K i' k i P x) = (term1406 A K k i' i P x).
Proof. exact (MK_COMB (@lem6873418 K k i' i) (@lem6873423 A P x)). Qed.
Lemma lem6873431 {A K : Type'} (op : type1400 A) (f : K -> A) (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (q' : Prop) : term1407 A K op f k i' i P x q'.
Proof. exact (@lem6873406 A K k i P op f i' x (term1406 A K k i' i P x) q'). Qed.
Lemma lem6873432 {A K : Type'} (op : type1400 A) (f : K -> A) (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (q' : Prop) : term1408 A K op f k i' i P x q'.
Proof. exact (@lem6873431 A K op f k i' i P x q' (@lem6873424 A K k i' i P x)). Qed.
Lemma lem6873433 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : term1406 A K k i' i P x.
Proof. exact (h1). Qed.
Lemma lem6873434 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : P x.
Proof. exact (proj2 (@lem6873433 A K k i' i P x h1)). Qed.
Lemma lem6873435 {A : Type'} (P : A -> Prop) (x : A) : (P x) = ((P x) = True).
Proof. exact (@lem7 (P x)). Qed.
Lemma lem6873437 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : term1364 K k i' i.
Proof. exact (proj1 (@lem6873433 A K k i' i P x h1)). Qed.
Lemma lem6873452 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : @IN K i' k.
Proof. exact (proj1 (@lem6873437 A K k i' i P x h1)). Qed.
Lemma lem6873453 {K : Type'} (i' : K) (k : K -> Prop) : (@IN K i' k) = ((@IN K i' k) = True).
Proof. exact (@lem7 (@IN K i' k)). Qed.
Lemma lem6873456 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1409 A K k P op f i x.
Proof. exact (fun h0 : term1340 A K i k P x => @lem6873265 A K op f i k P x h1 h0). Qed.
Lemma lem6873457 {A K : Type'} (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1409 A K k P op f i x.
Proof. exact (@lem6873456 A K i x k P op f h1). Qed.
Lemma lem6873458 {A K : Type'} (i' : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1409 A K k P op f i' x.
Proof. exact (@lem6873457 A K i' x k P op f h1). Qed.
Lemma lem6873462 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : (@IN K i' k) = True.
Proof. exact (EQ_MP (@lem6873453 K i' k) (@lem6873452 A K k i' i P x h1)). Qed.
Lemma lem6873463 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6873464 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : (term904 K i' k) = (and True).
Proof. exact (MK_COMB (@lem6873463) (@lem6873462 A K k i' i P x h1)). Qed.
Lemma lem6873466 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : (P x) = True.
Proof. exact (EQ_MP (@lem6873435 A P x) (@lem6873434 A K k i' i P x h1)). Qed.
Lemma lem6873467 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : (term1340 A K i' k P x) = (True /\ True).
Proof. exact (MK_COMB (@lem6873464 A K k i' i P x h1) (@lem6873466 A K k i' i P x h1)). Qed.
Lemma lem6873469 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6873470 : (True /\ True) = True.
Proof. exact (@lem6873469 True). Qed.
Lemma lem6873471 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : (term1340 A K i' k P x) = True.
Proof. exact (TRANS (@lem6873467 A K k i' i P x h1) (@lem6873470)). Qed.
Lemma lem6873472 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : True = (term1340 A K i' k P x).
Proof. exact (SYM (@lem6873471 A K k i' i P x h1)). Qed.
Lemma lem6873473 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1406 A K k i' i P x) : term1340 A K i' k P x.
Proof. exact (EQ_MP (@lem6873472 A K k i' i P x h1) (@lem0)). Qed.
Lemma lem6873474 {A K : Type'} (op : type1400 A) (f : K -> A) (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) (h1 : term1185 A K k P op f) (h2 : term1406 A K k i' i P x) : (term1098 A K P op f i' x) = True.
Proof. exact (@lem6873458 A K i' x k P op f h1 (@lem6873473 A K k i' i P x h2)). Qed.
Lemma lem6873475 {A K : Type'} (i : K) (i' : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : term1410 A K k i P op f i' x.
Proof. exact (fun h0 : term1406 A K k i' i P x => @lem6873474 A K op f k i' i P x h1 h0). Qed.
Lemma lem6873476 {A K : Type'} (op : type1400 A) (f : K -> A) (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) : term1411 A K op f k i' i P x.
Proof. exact (@lem6873432 A K op f k i' i P x True). Qed.
Lemma lem6873477 {A K : Type'} (i' : K) (i : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1412 A K k i P op f i' x) = (term1413 A K k i' i P x).
Proof. exact (@lem6873476 A K op f k i' i P x (@lem6873475 A K i i' x k P op f h1)). Qed.
Lemma lem6873479 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem6873480 {A K : Type'} (k : K -> Prop) (i' : K) (i : K) (P : A -> Prop) (x : A) : (term1413 A K k i' i P x) = True.
Proof. exact (@lem6873479 (term1406 A K k i' i P x)). Qed.
Lemma lem6873481 {A K : Type'} (i : K) (i' : K) (x : A) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1412 A K k i P op f i' x) = True.
Proof. exact (TRANS (@lem6873477 A K i' i x k P op f h1) (@lem6873480 A K k i' i P x)). Qed.
Lemma lem6873482 {A K : Type'} (i : K) (i' : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1414 A K k i P op f i') = (term1046 A).
Proof. exact (fun_ext (fun x : A => @lem6873481 A K i i' x k P op f h1)). Qed.
Lemma lem6873483 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6873484 {A K : Type'} (i : K) (i' : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1415 A K k i P op f i') = (term1048 A).
Proof. exact (MK_COMB (@lem6873483 A) (@lem6873482 A K i i' k P op f h1)). Qed.
Lemma lem6873486 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem6873487 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (@lem6873486 A t). Qed.
Lemma lem6873488 {A : Type'} : (term1048 A) = True.
Proof. exact (@lem6873487 A True). Qed.
Lemma lem6873489 {A K : Type'} (i : K) (i' : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1415 A K k i P op f i') = True.
Proof. exact (TRANS (@lem6873484 A K i i' k P op f h1) (@lem6873488 A)). Qed.
Lemma lem6873490 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1416 A K k i P op f) = (term1046 K).
Proof. exact (fun_ext (fun i' : K => @lem6873489 A K i i' k P op f h1)). Qed.
Lemma lem6873491 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6873492 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1417 A K k i P op f) = (term1048 K).
Proof. exact (MK_COMB (@lem6873491 K) (@lem6873490 A K i k P op f h1)). Qed.
Lemma lem6873494 {A : Type'} (t : Prop) : (term1036 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem6873495 {K : Type'} (t : Prop) : (term1036 K t) = t.
Proof. exact (@lem6873494 K t). Qed.
Lemma lem6873496 {K : Type'} : (term1048 K) = True.
Proof. exact (@lem6873495 K True). Qed.
Lemma lem6873497 {A K : Type'} (i : K) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1185 A K k P op f) : (term1417 A K k i P op f) = True.
Proof. exact (TRANS (@lem6873492 A K i k P op f h1) (@lem6873496 K)). Qed.
Lemma lem6873498 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term1418 A K n k i P op f) = (True /\ True).
Proof. exact (MK_COMB (@lem6873385 K n i k h2 h3 h4) (@lem6873497 A K i k P op f h1)). Qed.
Lemma lem6873500 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6873501 : (True /\ True) = True.
Proof. exact (@lem6873500 True). Qed.
Lemma lem6873502 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term1418 A K n k i P op f) = True.
Proof. exact (TRANS (@lem6873498 A K P op f n i k h1 h2 h3 h4) (@lem6873501)). Qed.
Lemma lem6873503 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term1419 A K n k i P op f) = (True /\ True).
Proof. exact (MK_COMB (@lem6873313 K i k h2) (@lem6873502 A K P op f n i k h1 h2 h3 h4)). Qed.
Lemma lem6873505 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem6873506 : (True /\ True) = True.
Proof. exact (@lem6873505 True). Qed.
Lemma lem6873507 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term1419 A K n k i P op f) = True.
Proof. exact (TRANS (@lem6873503 A K P op f n i k h1 h2 h3 h4) (@lem6873506)). Qed.
Lemma lem6873508 (n : nat) : (term1420 n) = (term1420 n).
Proof. exact (eq_refl (term1420 n)). Qed.
Lemma lem6873509 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term1421 A K n k i P op f) = (term1422 n).
Proof. exact (MK_COMB (@lem6873508 n) (@lem6873507 A K P op f n i k h1 h2 h3 h4)). Qed.
Lemma lem6873511 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem6873512 (n : nat) : (term1422 n) = (term7 n).
Proof. exact (@lem6873511 (term7 n)). Qed.
Lemma lem6873513 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term1421 A K n k i P op f) = (term7 n).
Proof. exact (TRANS (@lem6873509 A K P op f n i k h1 h2 h3 h4) (@lem6873512 n)). Qed.
Lemma lem6873514 {A K : Type'} (P : A -> Prop) (op : type1400 A) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : (@CARD K k) = n) (h4 : @IN K i k) : (term7 n) = (term1421 A K n k i P op f).
Proof. exact (SYM (@lem6873513 A K P op f n i k h1 h2 h3 h4)). Qed.
Lemma lem6873516 (n : nat) : (term7 n) = (term8 n).
Proof. exact (EQ_MP (@lem6868122 n) (@lem6868121 n)). Qed.
Lemma lem6873519 (n : nat) : (term8 n) = (term7 n).
Proof. exact (SYM (@lem6873516 n)). Qed.
Lemma lem6873520 (n : nat) (h1 : n = (NUMERAL 0)) : n = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6873521 {K : Type'} : term1423 K.
Proof. exact (@lem3854502 K). Qed.
Lemma lem6873527 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1424 _99911 A K P op k dom f i neut n) : term1424 _99911 A K P op k dom f i neut n.
Proof. exact (h1). Qed.
Lemma lem6873528 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1425 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : term1424 _99911 A K P op k dom f i neut n => @lem6873527 _99911 A K P op k dom f i neut n h0). Qed.
Lemma lem6873529 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1425 _99911 A K P op k dom f i neut n) : term1425 _99911 A K P op k dom f i neut n.
Proof. exact (h1). Qed.
Lemma lem6873530 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1424 _99911 A K P op k dom f i neut n) : term1424 _99911 A K P op k dom f i neut n.
Proof. exact (h1). Qed.
Lemma lem6873531 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1424 _99911 A K P op k dom f i neut n) (h2 : term1425 _99911 A K P op k dom f i neut n) : term1424 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6873529 _99911 A K P op k dom f i neut n h2 (@lem6873530 _99911 A K P op k dom f i neut n h1)). Qed.
Lemma lem6873532 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1424 _99911 A K P op k dom f i neut n) : term1426 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : term1425 _99911 A K P op k dom f i neut n => @lem6873531 _99911 A K P op k dom f i neut n h1 h0). Qed.
Lemma lem6873533 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1425 _99911 A K P op k dom f i neut n) : term1425 _99911 A K P op k dom f i neut n.
Proof. exact (h1). Qed.
Lemma lem6873534 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1424 _99911 A K P op k dom f i neut n) (h2 : term1425 _99911 A K P op k dom f i neut n) : term1424 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6873532 _99911 A K P op k dom f i neut n h1 (@lem6873533 _99911 A K P op k dom f i neut n h2)). Qed.
Lemma lem6873535 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (h1 : term1425 _99911 A K P op k dom f i neut n) : term1425 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : term1424 _99911 A K P op k dom f i neut n => @lem6873534 _99911 A K P op k dom f i neut n h0 h1). Qed.
Lemma lem6873536 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1427 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : term1425 _99911 A K P op k dom f i neut n => @lem6873535 _99911 A K P op k dom f i neut n h0). Qed.
Lemma lem6873539 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1425 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6873536 _99911 A K P op k dom f i neut n (@lem6873528 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873540 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1425 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6873539 _99911 A K P op k dom f i neut n). Qed.
Lemma lem6873612 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem6873613 {K : Type'} : (term1428 K) = (term1429 K).
Proof. exact (@lem6873612 (term1423 K)). Qed.
Lemma lem6873620 {_99911 : Type'} : (term1430 _99911) = (term1430 _99911).
Proof. exact (eq_refl (term1430 _99911)). Qed.
Lemma lem6873621 {_99911 K : Type'} : (term1431 _99911 K) = (term1432 _99911 K).
Proof. exact (MK_COMB (@lem6873620 _99911) (@lem6873613 K)). Qed.
Lemma lem6873624 (n : nat) : (term1433 n) = (term1433 n).
Proof. exact (eq_refl (term1433 n)). Qed.
Lemma lem6873625 {_99911 K : Type'} (n : nat) : (term1434 _99911 K n) = (term1435 _99911 K n).
Proof. exact (MK_COMB (@lem6873624 n) (@lem6873621 _99911 K)). Qed.
Lemma lem6873628 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1436 A K f i neut) = (term1436 A K f i neut).
Proof. exact (eq_refl (term1436 A K f i neut)). Qed.
Lemma lem6873629 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1437 _99911 A K f i neut n) = (term1438 _99911 A K f i neut n).
Proof. exact (MK_COMB (@lem6873628 A K f i neut) (@lem6873625 _99911 K n)). Qed.
Lemma lem6873632 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term1439 A K f i dom) = (term1439 A K f i dom).
Proof. exact (eq_refl (term1439 A K f i dom)). Qed.
Lemma lem6873633 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1440 _99911 A K dom f i neut n) = (term1441 _99911 A K dom f i neut n).
Proof. exact (MK_COMB (@lem6873632 A K f i dom) (@lem6873629 _99911 A K f i neut n)). Qed.
Lemma lem6873636 {K : Type'} (i : K) (k : K -> Prop) : (term1442 K i k) = (term1442 K i k).
Proof. exact (eq_refl (term1442 K i k)). Qed.
Lemma lem6873637 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1443 _99911 A K k dom f i neut n) = (term1444 _99911 A K k dom f i neut n).
Proof. exact (MK_COMB (@lem6873636 K i k) (@lem6873633 _99911 A K dom f i neut n)). Qed.
Lemma lem6873640 {K : Type'} (k : K -> Prop) : (term1445 K k) = (term1445 K k).
Proof. exact (eq_refl (term1445 K k)). Qed.
Lemma lem6873641 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1446 _99911 A K k dom f i neut n) = (term1447 _99911 A K k dom f i neut n).
Proof. exact (MK_COMB (@lem6873640 K k) (@lem6873637 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873644 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1448 A K k P op f) = (term1448 A K k P op f).
Proof. exact (eq_refl (term1448 A K k P op f)). Qed.
Lemma lem6873645 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1449 _99911 A K P op k dom f i neut n) = (term1450 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873644 A K k P op f) (@lem6873641 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873648 {K : Type'} (k : K -> Prop) (n : nat) : (term1451 K k n) = (term1451 K k n).
Proof. exact (eq_refl (term1451 K k n)). Qed.
Lemma lem6873649 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1452 _99911 A K P op k dom f i neut n) = (term1453 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873648 K k n) (@lem6873645 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873652 {K : Type'} (k : K -> Prop) : (term1175 K k) = (term1175 K k).
Proof. exact (eq_refl (term1175 K k)). Qed.
Lemma lem6873653 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1454 _99911 A K P op k dom f i neut n) = (term1455 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873652 K k) (@lem6873649 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873656 {A : Type'} (P : A -> Prop) (neut : A) : (term1456 A P neut) = (term1456 A P neut).
Proof. exact (eq_refl (term1456 A P neut)). Qed.
Lemma lem6873657 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1424 _99911 A K P op k dom f i neut n) = (term1457 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873656 A P neut) (@lem6873653 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873660 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1458 _99911 A K op k dom f i neut n) = (term1459 _99911 A K op k dom f i neut n).
Proof. exact (fun_ext (fun P : A -> Prop => @lem6873657 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873661 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6873662 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1460 _99911 A K op k dom f i neut n) = (term1461 _99911 A K op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873661 A) (@lem6873660 _99911 A K op k dom f i neut n)). Qed.
Lemma lem6873667 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1462 _99911 A K k dom f i neut n) = (term1463 _99911 A K k dom f i neut n).
Proof. exact (fun_ext (fun op : type1400 A => @lem6873662 _99911 A K op k dom f i neut n)). Qed.
Lemma lem6873668 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6873669 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1464 _99911 A K k dom f i neut n) = (term1465 _99911 A K k dom f i neut n).
Proof. exact (MK_COMB (@lem6873668 A) (@lem6873667 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873674 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1466 _99911 A K dom f i neut n) = (term1467 _99911 A K dom f i neut n).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6873669 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873675 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6873676 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1468 _99911 A K dom f i neut n) = (term1469 _99911 A K dom f i neut n).
Proof. exact (MK_COMB (@lem6873675 K) (@lem6873674 _99911 A K dom f i neut n)). Qed.
Lemma lem6873681 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1470 _99911 A K f i neut n) = (term1471 _99911 A K f i neut n).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6873676 _99911 A K dom f i neut n)). Qed.
Lemma lem6873682 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6873683 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1472 _99911 A K f i neut n) = (term1473 _99911 A K f i neut n).
Proof. exact (MK_COMB (@lem6873682 A) (@lem6873681 _99911 A K f i neut n)). Qed.
Lemma lem6873688 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : (term1474 _99911 A K i neut n) = (term1475 _99911 A K i neut n).
Proof. exact (fun_ext (fun f : K -> A => @lem6873683 _99911 A K f i neut n)). Qed.
Lemma lem6873689 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6873690 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : (term1476 _99911 A K i neut n) = (term1477 _99911 A K i neut n).
Proof. exact (MK_COMB (@lem6873689 A K) (@lem6873688 _99911 A K i neut n)). Qed.
Lemma lem6873695 {_99911 A K : Type'} (neut : A) (n : nat) : (term1478 _99911 A K neut n) = (term1479 _99911 A K neut n).
Proof. exact (fun_ext (fun i : K => @lem6873690 _99911 A K i neut n)). Qed.
Lemma lem6873696 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6873697 {_99911 A K : Type'} (neut : A) (n : nat) : (term1480 _99911 A K neut n) = (term1481 _99911 A K neut n).
Proof. exact (MK_COMB (@lem6873696 K) (@lem6873695 _99911 A K neut n)). Qed.
Lemma lem6873702 {_99911 A K : Type'} (n : nat) : (term1482 _99911 A K n) = (term1483 _99911 A K n).
Proof. exact (fun_ext (fun neut : A => @lem6873697 _99911 A K neut n)). Qed.
Lemma lem6873703 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6873704 {_99911 A K : Type'} (n : nat) : (term1484 _99911 A K n) = (term1485 _99911 A K n).
Proof. exact (MK_COMB (@lem6873703 A) (@lem6873702 _99911 A K n)). Qed.
Lemma lem6873709 {_99911 A K : Type'} : (term1486 _99911 A K) = (term1487 _99911 A K).
Proof. exact (fun_ext (fun n : nat => @lem6873704 _99911 A K n)). Qed.
Lemma lem6873710 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6873719 {_99911 A K : Type'} : (term1488 _99911 A K) = (term1489 _99911 A K).
Proof. exact (MK_COMB (@lem6873710) (@lem6873709 _99911 A K)). Qed.
Lemma lem6873728 {K : Type'} (s : K -> Prop) : (term1490 K s) = (term1490 K s).
Proof. exact (eq_refl (term1490 K s)). Qed.
Lemma lem6873729 {K : Type'} : (term1491 K) = (term1491 K).
Proof. exact (fun_ext (fun s : K -> Prop => @lem6873728 K s)). Qed.
Lemma lem6873730 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6873731 {K : Type'} : (term1423 K) = (term1423 K).
Proof. exact (MK_COMB (@lem6873730 K) (@lem6873729 K)). Qed.
Lemma lem6873732 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem6873733 {K : Type'} : (term1429 K) = (term1429 K).
Proof. exact (MK_COMB (@lem6873732) (@lem6873731 K)). Qed.
Lemma lem6873742 {_99911 : Type'} (s : _99911 -> Prop) : (term1490 _99911 s) = (term1490 _99911 s).
Proof. exact (eq_refl (term1490 _99911 s)). Qed.
Lemma lem6873743 {_99911 : Type'} : (term1491 _99911) = (term1491 _99911).
Proof. exact (fun_ext (fun s : _99911 -> Prop => @lem6873742 _99911 s)). Qed.
Lemma lem6873744 {_99911 : Type'} : (@all (_99911 -> Prop)) = (@all (_99911 -> Prop)).
Proof. exact (eq_refl (@all (_99911 -> Prop))). Qed.
Lemma lem6873745 {_99911 : Type'} : (term1423 _99911) = (term1423 _99911).
Proof. exact (MK_COMB (@lem6873744 _99911) (@lem6873743 _99911)). Qed.
Lemma lem6873746 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6873747 {_99911 : Type'} : (term1430 _99911) = (term1430 _99911).
Proof. exact (MK_COMB (@lem6873746) (@lem6873745 _99911)). Qed.
Lemma lem6873748 {_99911 K : Type'} : (term1432 _99911 K) = (term1432 _99911 K).
Proof. exact (MK_COMB (@lem6873747 _99911) (@lem6873733 K)). Qed.
Lemma lem6873751 (n : nat) : (term1433 n) = (term1433 n).
Proof. exact (eq_refl (term1433 n)). Qed.
Lemma lem6873752 {_99911 K : Type'} (n : nat) : (term1435 _99911 K n) = (term1435 _99911 K n).
Proof. exact (MK_COMB (@lem6873751 n) (@lem6873748 _99911 K)). Qed.
Lemma lem6873757 {A K : Type'} (f : K -> A) (i : K) (neut : A) : (term1436 A K f i neut) = (term1436 A K f i neut).
Proof. exact (eq_refl (term1436 A K f i neut)). Qed.
Lemma lem6873758 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1438 _99911 A K f i neut n) = (term1438 _99911 A K f i neut n).
Proof. exact (MK_COMB (@lem6873757 A K f i neut) (@lem6873752 _99911 K n)). Qed.
Lemma lem6873761 {A K : Type'} (f : K -> A) (i : K) (dom : A -> Prop) : (term1439 A K f i dom) = (term1439 A K f i dom).
Proof. exact (eq_refl (term1439 A K f i dom)). Qed.
Lemma lem6873762 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1441 _99911 A K dom f i neut n) = (term1441 _99911 A K dom f i neut n).
Proof. exact (MK_COMB (@lem6873761 A K f i dom) (@lem6873758 _99911 A K f i neut n)). Qed.
Lemma lem6873765 {K : Type'} (i : K) (k : K -> Prop) : (term1442 K i k) = (term1442 K i k).
Proof. exact (eq_refl (term1442 K i k)). Qed.
Lemma lem6873766 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1444 _99911 A K k dom f i neut n) = (term1444 _99911 A K k dom f i neut n).
Proof. exact (MK_COMB (@lem6873765 K i k) (@lem6873762 _99911 A K dom f i neut n)). Qed.
Lemma lem6873771 {K : Type'} (k : K -> Prop) : (term1445 K k) = (term1445 K k).
Proof. exact (eq_refl (term1445 K k)). Qed.
Lemma lem6873772 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1447 _99911 A K k dom f i neut n) = (term1447 _99911 A K k dom f i neut n).
Proof. exact (MK_COMB (@lem6873771 K k) (@lem6873766 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873781 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) (x : A) : (term1339 A K k P op f i x) = (term1339 A K k P op f i x).
Proof. exact (eq_refl (term1339 A K k P op f i x)). Qed.
Lemma lem6873782 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1492 A K k P op f i) = (term1492 A K k P op f i).
Proof. exact (fun_ext (fun x : A => @lem6873781 A K k P op f i x)). Qed.
Lemma lem6873783 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6873784 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (i : K) : (term1337 A K k P op f i) = (term1337 A K k P op f i).
Proof. exact (MK_COMB (@lem6873783 A) (@lem6873782 A K k P op f i)). Qed.
Lemma lem6873785 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1493 A K k P op f) = (term1493 A K k P op f).
Proof. exact (fun_ext (fun i : K => @lem6873784 A K k P op f i)). Qed.
Lemma lem6873786 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6873787 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1185 A K k P op f) = (term1185 A K k P op f).
Proof. exact (MK_COMB (@lem6873786 K) (@lem6873785 A K k P op f)). Qed.
Lemma lem6873788 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6873789 {A K : Type'} (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) : (term1448 A K k P op f) = (term1448 A K k P op f).
Proof. exact (MK_COMB (@lem6873788) (@lem6873787 A K k P op f)). Qed.
Lemma lem6873790 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1450 _99911 A K P op k dom f i neut n) = (term1450 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873789 A K k P op f) (@lem6873772 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873793 {K : Type'} (k : K -> Prop) (n : nat) : (term1451 K k n) = (term1451 K k n).
Proof. exact (eq_refl (term1451 K k n)). Qed.
Lemma lem6873794 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1453 _99911 A K P op k dom f i neut n) = (term1453 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873793 K k n) (@lem6873790 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873797 {K : Type'} (k : K -> Prop) : (term1175 K k) = (term1175 K k).
Proof. exact (eq_refl (term1175 K k)). Qed.
Lemma lem6873798 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1455 _99911 A K P op k dom f i neut n) = (term1455 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873797 K k) (@lem6873794 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873801 {A : Type'} (P : A -> Prop) (neut : A) : (term1456 A P neut) = (term1456 A P neut).
Proof. exact (eq_refl (term1456 A P neut)). Qed.
Lemma lem6873802 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1457 _99911 A K P op k dom f i neut n) = (term1457 _99911 A K P op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873801 A P neut) (@lem6873798 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873803 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1459 _99911 A K op k dom f i neut n) = (term1459 _99911 A K op k dom f i neut n).
Proof. exact (fun_ext (fun P : A -> Prop => @lem6873802 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6873804 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6873805 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1461 _99911 A K op k dom f i neut n) = (term1461 _99911 A K op k dom f i neut n).
Proof. exact (MK_COMB (@lem6873804 A) (@lem6873803 _99911 A K op k dom f i neut n)). Qed.
Lemma lem6873806 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1463 _99911 A K k dom f i neut n) = (term1463 _99911 A K k dom f i neut n).
Proof. exact (fun_ext (fun op : type1400 A => @lem6873805 _99911 A K op k dom f i neut n)). Qed.
Lemma lem6873807 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem6873808 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1465 _99911 A K k dom f i neut n) = (term1465 _99911 A K k dom f i neut n).
Proof. exact (MK_COMB (@lem6873807 A) (@lem6873806 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873809 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1467 _99911 A K dom f i neut n) = (term1467 _99911 A K dom f i neut n).
Proof. exact (fun_ext (fun k : K -> Prop => @lem6873808 _99911 A K k dom f i neut n)). Qed.
Lemma lem6873810 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6873811 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1469 _99911 A K dom f i neut n) = (term1469 _99911 A K dom f i neut n).
Proof. exact (MK_COMB (@lem6873810 K) (@lem6873809 _99911 A K dom f i neut n)). Qed.
Lemma lem6873812 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1471 _99911 A K f i neut n) = (term1471 _99911 A K f i neut n).
Proof. exact (fun_ext (fun dom : A -> Prop => @lem6873811 _99911 A K dom f i neut n)). Qed.
Lemma lem6873813 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem6873814 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1473 _99911 A K f i neut n) = (term1473 _99911 A K f i neut n).
Proof. exact (MK_COMB (@lem6873813 A) (@lem6873812 _99911 A K f i neut n)). Qed.
Lemma lem6873815 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : (term1475 _99911 A K i neut n) = (term1475 _99911 A K i neut n).
Proof. exact (fun_ext (fun f : K -> A => @lem6873814 _99911 A K f i neut n)). Qed.
Lemma lem6873816 {A K : Type'} : (@all (K -> A)) = (@all (K -> A)).
Proof. exact (eq_refl (@all (K -> A))). Qed.
Lemma lem6873817 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : (term1477 _99911 A K i neut n) = (term1477 _99911 A K i neut n).
Proof. exact (MK_COMB (@lem6873816 A K) (@lem6873815 _99911 A K i neut n)). Qed.
Lemma lem6873818 {_99911 A K : Type'} (neut : A) (n : nat) : (term1479 _99911 A K neut n) = (term1479 _99911 A K neut n).
Proof. exact (fun_ext (fun i : K => @lem6873817 _99911 A K i neut n)). Qed.
Lemma lem6873819 {K : Type'} : (@all K) = (@all K).
Proof. exact (eq_refl (@all K)). Qed.
Lemma lem6873820 {_99911 A K : Type'} (neut : A) (n : nat) : (term1481 _99911 A K neut n) = (term1481 _99911 A K neut n).
Proof. exact (MK_COMB (@lem6873819 K) (@lem6873818 _99911 A K neut n)). Qed.
Lemma lem6873821 {_99911 A K : Type'} (n : nat) : (term1483 _99911 A K n) = (term1483 _99911 A K n).
Proof. exact (fun_ext (fun neut : A => @lem6873820 _99911 A K neut n)). Qed.
Lemma lem6873822 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem6873823 {_99911 A K : Type'} (n : nat) : (term1485 _99911 A K n) = (term1485 _99911 A K n).
Proof. exact (MK_COMB (@lem6873822 A) (@lem6873821 _99911 A K n)). Qed.
Lemma lem6873824 {_99911 A K : Type'} : (term1487 _99911 A K) = (term1487 _99911 A K).
Proof. exact (fun_ext (fun n : nat => @lem6873823 _99911 A K n)). Qed.
Lemma lem6873825 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem6873826 {_99911 A K : Type'} : (term1489 _99911 A K) = (term1489 _99911 A K).
Proof. exact (MK_COMB (@lem6873825) (@lem6873824 _99911 A K)). Qed.
Lemma lem6873929 {_99911 A K : Type'} : (term1488 _99911 A K) = (term1489 _99911 A K).
Proof. exact (TRANS (@lem6873719 _99911 A K) (@lem6873826 _99911 A K)). Qed.
Lemma lem6873930 {_99911 A K : Type'} : (term1489 _99911 A K) = (term1488 _99911 A K).
Proof. exact (SYM (@lem6873929 _99911 A K)). Qed.
Lemma lem6873941 {K : Type'} (h1 : term1423 K) : term1423 K.
Proof. exact (h1). Qed.
Lemma lem6873953 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6873959 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6874041 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term732 K k.
Proof. exact (h1). Qed.
Lemma lem6874065 (n : nat) (h1 : n = (NUMERAL 0)) : n = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6874158 {K : Type'} (s : K -> Prop) : (((@CARD K s) = (NUMERAL 0)) = (s = (@EMPTY K))) = (term1494 K s).
Proof. exact (@lem17784 ((@CARD K s) = (NUMERAL 0)) (s = (@EMPTY K))). Qed.
Lemma lem6874160 {K : Type'} (s : K -> Prop) : (term1495 K s) = (term1495 K s).
Proof. exact (eq_refl (term1495 K s)). Qed.
Lemma lem6874161 {K : Type'} (s : K -> Prop) : (term1496 K s) = (term1497 K s).
Proof. exact (MK_COMB (@lem6874160 K s) (@lem6874158 K s)). Qed.
Lemma lem6874162 {K : Type'} (s : K -> Prop) : (term1490 K s) = (term1496 K s).
Proof. exact (@lem17265 (@FINITE K s) (((@CARD K s) = (NUMERAL 0)) = (s = (@EMPTY K)))). Qed.
Lemma lem6874163 {K : Type'} (s : K -> Prop) : (term1490 K s) = (term1497 K s).
Proof. exact (TRANS (@lem6874162 K s) (@lem6874161 K s)). Qed.
Lemma lem6874164 {K : Type'} : (term1491 K) = (term1498 K).
Proof. exact (fun_ext (fun s : K -> Prop => @lem6874163 K s)). Qed.
Lemma lem6874165 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6874218 {K : Type'} : (term1423 K) = (term1499 K).
Proof. exact (MK_COMB (@lem6874165 K) (@lem6874164 K)). Qed.
Lemma lem6874219 {K : Type'} (h1 : term1423 K) : term1499 K.
Proof. exact (EQ_MP (@lem6874218 K) (@lem6873941 K h1)). Qed.
Lemma lem6874227 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6874235 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6874277 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term732 K k.
Proof. exact (h1). Qed.
Lemma lem6874309 (n : nat) (h1 : n = (NUMERAL 0)) : n = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6874411 {K : Type'} (s : K -> Prop) : (term1497 K s) = (term1497 K s).
Proof. exact (eq_refl (term1497 K s)). Qed.
Lemma lem6874412 {K : Type'} : (term1498 K) = (term1498 K).
Proof. exact (fun_ext (fun s : K -> Prop => @lem6874411 K s)). Qed.
Lemma lem6874413 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6874414 {K : Type'} : (term1499 K) = (term1499 K).
Proof. exact (MK_COMB (@lem6874413 K) (@lem6874412 K)). Qed.
Lemma lem6874415 {K : Type'} (h1 : term1423 K) : term1499 K.
Proof. exact (EQ_MP (@lem6874414 K) (@lem6874219 K h1)). Qed.
Lemma lem6874423 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6874427 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6874453 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term732 K k.
Proof. exact (h1). Qed.
Lemma lem6874469 (n : nat) (h1 : n = (NUMERAL 0)) : n = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6874534 {K : Type'} (s : K -> Prop) : (term1497 K s) = (term1500 K s).
Proof. exact (@lem19490 (term1501 K s) (term806 K s) (term1502 K s)). Qed.
Lemma lem6874535 {K : Type'} : (term1498 K) = (term1503 K).
Proof. exact (fun_ext (fun s : K -> Prop => @lem6874534 K s)). Qed.
Lemma lem6874536 {K : Type'} : (@all (K -> Prop)) = (@all (K -> Prop)).
Proof. exact (eq_refl (@all (K -> Prop))). Qed.
Lemma lem6874538 {K : Type'} : (term1499 K) = (term1504 K).
Proof. exact (MK_COMB (@lem6874536 K) (@lem6874535 K)). Qed.
Lemma lem6874539 {K : Type'} (h1 : term1423 K) : term1504 K.
Proof. exact (EQ_MP (@lem6874538 K) (@lem6874415 K h1)). Qed.
Lemma lem6874549 {K : Type'} (_91836 : K -> Prop) (h1 : term1423 K) : term1505 K _91836.
Proof. exact (@lem6874539 K h1 _91836). Qed.
Lemma lem6874550 {K : Type'} (_91836 : K -> Prop) : (term1505 K _91836) = (term1500 K _91836).
Proof. exact (eq_refl (term1505 K _91836)). Qed.
Lemma lem6874551 {K : Type'} (_91836 : K -> Prop) (h1 : term1423 K) : term1500 K _91836.
Proof. exact (EQ_MP (@lem6874550 K _91836) (@lem6874549 K _91836 h1)). Qed.
Lemma lem6874559 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6874561 {K : Type'} (k : K -> Prop) (n : nat) (h1 : (@CARD K k) = n) : (@CARD K k) = n.
Proof. exact (h1). Qed.
Lemma lem6874575 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term732 K k.
Proof. exact (h1). Qed.
Lemma lem6874583 (n : nat) (h1 : n = (NUMERAL 0)) : n = (NUMERAL 0).
Proof. exact (h1). Qed.
Lemma lem6874665 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6874666 {K : Type'} (k : K -> Prop) : (term1506 K k) = (term1506 K k).
Proof. exact (eq_refl (term1506 K k)). Qed.
Lemma lem6874667 {K : Type'} (k : K -> Prop) (n : nat) (h1 : n = (NUMERAL 0)) : (term1507 K k n) = (term1508 K k).
Proof. exact (MK_COMB (@lem6874666 K k) (@lem6874583 n h1)). Qed.
Lemma lem6874668 {K : Type'} (k : K -> Prop) : (term1508 K k) = ((@CARD K k) = (NUMERAL 0)).
Proof. exact (eq_refl (term1508 K k)). Qed.
Lemma lem6874669 {K : Type'} (k : K -> Prop) (n : nat) : (term1509 K k n) = (term1509 K k n).
Proof. exact (eq_refl (term1509 K k n)). Qed.
Lemma lem6874670 {K : Type'} (n : nat) (k : K -> Prop) : ((term1507 K k n) = (term1508 K k)) = ((term1507 K k n) = ((@CARD K k) = (NUMERAL 0))).
Proof. exact (MK_COMB (@lem6874669 K k n) (@lem6874668 K k)). Qed.
Lemma lem6874671 {K : Type'} (k : K -> Prop) (n : nat) : (term1507 K k n) = ((@CARD K k) = n).
Proof. exact (eq_refl (term1507 K k n)). Qed.
Lemma lem6874672 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6874673 {K : Type'} (k : K -> Prop) (n : nat) : (term1509 K k n) = (term1510 K k n).
Proof. exact (MK_COMB (@lem6874672) (@lem6874671 K k n)). Qed.
Lemma lem6874674 {K : Type'} (k : K -> Prop) : ((@CARD K k) = (NUMERAL 0)) = ((@CARD K k) = (NUMERAL 0)).
Proof. exact (eq_refl ((@CARD K k) = (NUMERAL 0))). Qed.
Lemma lem6874675 {K : Type'} (n : nat) (k : K -> Prop) : ((term1507 K k n) = ((@CARD K k) = (NUMERAL 0))) = (((@CARD K k) = n) = ((@CARD K k) = (NUMERAL 0))).
Proof. exact (MK_COMB (@lem6874673 K k n) (@lem6874674 K k)). Qed.
Lemma lem6874676 {K : Type'} (n : nat) (k : K -> Prop) : ((term1507 K k n) = (term1508 K k)) = (((@CARD K k) = n) = ((@CARD K k) = (NUMERAL 0))).
Proof. exact (TRANS (@lem6874670 K n k) (@lem6874675 K n k)). Qed.
Lemma lem6874677 {K : Type'} (k : K -> Prop) (n : nat) (h1 : n = (NUMERAL 0)) : ((@CARD K k) = n) = ((@CARD K k) = (NUMERAL 0)).
Proof. exact (EQ_MP (@lem6874676 K n k) (@lem6874667 K k n h1)). Qed.
Lemma lem6874706 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term732 K k.
Proof. exact (h1). Qed.
Lemma lem6874776 {K : Type'} (_91836 : K -> Prop) (h1 : term1423 K) : term1511 K _91836.
Proof. exact (proj2 (@lem6874551 K _91836 h1)). Qed.
Lemma lem6874939 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (h1). Qed.
Lemma lem6874940 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : term808 K k.
Proof. exact (fun h0 : term806 K k => @lem6874939 K k h1). Qed.
Lemma lem6874942 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6874943 {K : Type'} (k : K -> Prop) : (term808 K k) = (@FINITE K k).
Proof. exact (@lem6874942 (@FINITE K k)). Qed.
Lemma lem6874944 {K : Type'} (k : K -> Prop) (h1 : @FINITE K k) : @FINITE K k.
Proof. exact (EQ_MP (@lem6874943 K k) (@lem6874940 K k h1)). Qed.
Lemma lem6874946 {K : Type'} (k : K -> Prop) (n : nat) (h1 : n = (NUMERAL 0)) (h2 : (@CARD K k) = n) : (@CARD K k) = (NUMERAL 0).
Proof. exact (EQ_MP (@lem6874677 K k n h1) (@lem6874561 K k n h2)). Qed.
Lemma lem6874947 {K : Type'} (k : K -> Prop) (n : nat) (h1 : n = (NUMERAL 0)) (h2 : (@CARD K k) = n) : term1512 K k.
Proof. exact (fun h0 : term1513 K k => @lem6874946 K k n h1 h2). Qed.
Lemma lem6874949 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6874950 {K : Type'} (k : K -> Prop) : (term1512 K k) = ((@CARD K k) = (NUMERAL 0)).
Proof. exact (@lem6874949 ((@CARD K k) = (NUMERAL 0))). Qed.
Lemma lem6874951 {K : Type'} (k : K -> Prop) (n : nat) (h1 : n = (NUMERAL 0)) (h2 : (@CARD K k) = n) : (@CARD K k) = (NUMERAL 0).
Proof. exact (EQ_MP (@lem6874950 K k) (@lem6874947 K k n h1 h2)). Qed.
Lemma lem6874957 (q : Prop) (p : Prop) (r : Prop) : (term767 p q r) = (term767 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6874958 {K : Type'} (_91836 : K -> Prop) : (term1511 K _91836) = (term1514 K _91836).
Proof. exact (@lem6874957 (term1513 K _91836) (term806 K _91836) (_91836 = (@EMPTY K))). Qed.
Lemma lem6874974 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6874975 {K : Type'} (_91836 : K -> Prop) : (term1515 K _91836) = (term1516 K _91836).
Proof. exact (@lem6874974 (_91836 = (@EMPTY K)) (term806 K _91836)). Qed.
Lemma lem6874983 {K : Type'} (_91836 : K -> Prop) : (term1517 K _91836) = (term1517 K _91836).
Proof. exact (eq_refl (term1517 K _91836)). Qed.
Lemma lem6874984 {K : Type'} (_91836 : K -> Prop) : (term1514 K _91836) = (term1518 K _91836).
Proof. exact (MK_COMB (@lem6874983 K _91836) (@lem6874975 K _91836)). Qed.
Lemma lem6874988 (q : Prop) (p : Prop) (r : Prop) : (term767 p q r) = (term767 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem6874989 {K : Type'} (_91836 : K -> Prop) : (term1518 K _91836) = (term1519 K _91836).
Proof. exact (@lem6874988 (_91836 = (@EMPTY K)) (term1513 K _91836) (term806 K _91836)). Qed.
Lemma lem6875009 {K : Type'} (_91836 : K -> Prop) : (term1514 K _91836) = (term1519 K _91836).
Proof. exact (TRANS (@lem6874984 K _91836) (@lem6874989 K _91836)). Qed.
Lemma lem6875010 {K : Type'} (_91836 : K -> Prop) : (term1511 K _91836) = (term1519 K _91836).
Proof. exact (TRANS (@lem6874958 K _91836) (@lem6875009 K _91836)). Qed.
Lemma lem6875011 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem6875012 {K : Type'} (_91836 : K -> Prop) : (term1520 K _91836) = (term1521 K _91836).
Proof. exact (MK_COMB (@lem6875011) (@lem6875010 K _91836)). Qed.
Lemma lem6875028 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem6875029 {K : Type'} (_91836 : K -> Prop) : (term1522 K _91836) = (term1523 K _91836).
Proof. exact (@lem6875028 (term1513 K _91836) (term806 K _91836)). Qed.
Lemma lem6875037 {K : Type'} (_91836 : K -> Prop) : (term1524 K _91836) = (term1524 K _91836).
Proof. exact (eq_refl (term1524 K _91836)). Qed.
Lemma lem6875038 {K : Type'} (_91836 : K -> Prop) : (term1525 K _91836) = (term1519 K _91836).
Proof. exact (MK_COMB (@lem6875037 K _91836) (@lem6875029 K _91836)). Qed.
Lemma lem6875049 {K : Type'} (_91836 : K -> Prop) : ((term1511 K _91836) = (term1525 K _91836)) = ((term1519 K _91836) = (term1519 K _91836)).
Proof. exact (MK_COMB (@lem6875012 K _91836) (@lem6875038 K _91836)). Qed.
Lemma lem6875051 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem6875052 (x : Prop) : (x = x) = True.
Proof. exact (@lem6875051 Prop x). Qed.
Lemma lem6875053 {K : Type'} (_91836 : K -> Prop) : ((term1519 K _91836) = (term1519 K _91836)) = True.
Proof. exact (@lem6875052 (term1519 K _91836)). Qed.
Lemma lem6875054 {K : Type'} (_91836 : K -> Prop) : ((term1511 K _91836) = (term1525 K _91836)) = True.
Proof. exact (TRANS (@lem6875049 K _91836) (@lem6875053 K _91836)). Qed.
Lemma lem6875055 {K : Type'} (_91836 : K -> Prop) : True = ((term1511 K _91836) = (term1525 K _91836)).
Proof. exact (SYM (@lem6875054 K _91836)). Qed.
Lemma lem6875056 {K : Type'} (_91836 : K -> Prop) : (term1511 K _91836) = (term1525 K _91836).
Proof. exact (EQ_MP (@lem6875055 K _91836) (@lem0)). Qed.
Lemma lem6875057 {K : Type'} (_91836 : K -> Prop) (h1 : term1423 K) : term1525 K _91836.
Proof. exact (EQ_MP (@lem6875056 K _91836) (@lem6874776 K _91836 h1)). Qed.
Lemma lem6875059 (b : Prop) (a : Prop) : (a \/ b) = (term823 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem6875060 {K : Type'} (_91836 : K -> Prop) : (term1525 K _91836) = (term1526 K _91836).
Proof. exact (@lem6875059 (term1522 K _91836) (_91836 = (@EMPTY K))). Qed.
Lemma lem6875062 (a : Prop) (b : Prop) : (term825 a b) = (term826 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem6875063 {K : Type'} (_91836 : K -> Prop) : (term1527 K _91836) = (term1528 K _91836).
Proof. exact (@lem6875062 (term806 K _91836) (term1513 K _91836)). Qed.
Lemma lem6875065 (a : Prop) : (term190 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6875066 {K : Type'} (_91836 : K -> Prop) : (term829 K _91836) = (@FINITE K _91836).
Proof. exact (@lem6875065 (@FINITE K _91836)). Qed.
Lemma lem6875067 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem6875068 {K : Type'} (_91836 : K -> Prop) : (term830 K _91836) = (term831 K _91836).
Proof. exact (MK_COMB (@lem6875067) (@lem6875066 K _91836)). Qed.
Lemma lem6875070 (a : Prop) : (term190 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem6875071 {K : Type'} (_91836 : K -> Prop) : (term1529 K _91836) = ((@CARD K _91836) = (NUMERAL 0)).
Proof. exact (@lem6875070 ((@CARD K _91836) = (NUMERAL 0))). Qed.
Lemma lem6875072 {K : Type'} (_91836 : K -> Prop) : (term1528 K _91836) = (term1530 K _91836).
Proof. exact (MK_COMB (@lem6875068 K _91836) (@lem6875071 K _91836)). Qed.
Lemma lem6875073 {K : Type'} (_91836 : K -> Prop) : (term1527 K _91836) = (term1530 K _91836).
Proof. exact (TRANS (@lem6875063 K _91836) (@lem6875072 K _91836)). Qed.
Lemma lem6875074 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem6875075 {K : Type'} (_91836 : K -> Prop) : (term1531 K _91836) = (term1532 K _91836).
Proof. exact (MK_COMB (@lem6875074) (@lem6875073 K _91836)). Qed.
Lemma lem6875076 {K : Type'} (_91836 : K -> Prop) : (_91836 = (@EMPTY K)) = (_91836 = (@EMPTY K)).
Proof. exact (eq_refl (_91836 = (@EMPTY K))). Qed.
Lemma lem6875077 {K : Type'} (_91836 : K -> Prop) : (term1526 K _91836) = (term1533 K _91836).
Proof. exact (MK_COMB (@lem6875075 K _91836) (@lem6875076 K _91836)). Qed.
Lemma lem6875078 {K : Type'} (_91836 : K -> Prop) : (term1525 K _91836) = (term1533 K _91836).
Proof. exact (TRANS (@lem6875060 K _91836) (@lem6875077 K _91836)). Qed.
Lemma lem6875080 {K : Type'} (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : n = (NUMERAL 0)) (h3 : (@CARD K k) = n) : term1530 K k.
Proof. exact (conj (@lem6874944 K k h1) (@lem6874951 K k n h2 h3)). Qed.
Lemma lem6875082 {K : Type'} (_91836 : K -> Prop) (h1 : term1423 K) : term1533 K _91836.
Proof. exact (EQ_MP (@lem6875078 K _91836) (@lem6875057 K _91836 h1)). Qed.
Lemma lem6875083 {K : Type'} (_91836 : K -> Prop) (h1 : term1423 K) : term1533 K _91836.
Proof. exact (@lem6875082 K _91836 h1). Qed.
Lemma lem6875084 {K : Type'} (k : K -> Prop) (h1 : term1423 K) : term1533 K k.
Proof. exact (@lem6875083 K k h1). Qed.
Lemma lem6875087 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : n = (NUMERAL 0)) (h4 : (@CARD K k) = n) : k = (@EMPTY K).
Proof. exact (@lem6875084 K k h1 (@lem6875080 K k n h2 h3 h4)). Qed.
Lemma lem6875088 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : n = (NUMERAL 0)) (h4 : (@CARD K k) = n) : term1534 K k.
Proof. exact (fun h0 : term732 K k => @lem6875087 K k n h1 h2 h3 h4). Qed.
Lemma lem6875090 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6875091 {K : Type'} (k : K -> Prop) : (term1534 K k) = (k = (@EMPTY K)).
Proof. exact (@lem6875090 (k = (@EMPTY K))). Qed.
Lemma lem6875092 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : n = (NUMERAL 0)) (h4 : (@CARD K k) = n) : k = (@EMPTY K).
Proof. exact (EQ_MP (@lem6875091 K k) (@lem6875088 K k n h1 h2 h3 h4)). Qed.
Lemma lem6875095 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem6875097 {K : Type'} (k : K -> Prop) : (term732 K k) = (term1535 K k).
Proof. exact (@lem6875095 (k = (@EMPTY K))). Qed.
Lemma lem6875100 {K : Type'} (k : K -> Prop) (h1 : term732 K k) : term1535 K k.
Proof. exact (EQ_MP (@lem6875097 K k) (@lem6874706 K k h1)). Qed.
Lemma lem6875103 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (@lem6875100 K k h3 (@lem6875092 K k n h1 h2 h4 h5)). Qed.
Lemma lem6875104 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : term839.
Proof. exact (fun h0 : ~ False => @lem6875103 K k n h1 h2 h3 h4 h5). Qed.
Lemma lem6875106 (p : Prop) : (term809 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem6875107 : term839 = False.
Proof. exact (@lem6875106 False). Qed.
Lemma lem6875108 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875107) (@lem6875104 K k n h1 h2 h3 h4 h5)). Qed.
Lemma lem6875109 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (term732 K k) = False.
Proof. exact (prop_ext (fun h6 : term732 K k => @lem6875108 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874706 K k h3)). Qed.
Lemma lem6875110 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875109 K k n h1 h2 h3 h4 h5) (@lem6874706 K k h3)). Qed.
Lemma lem6875111 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (@FINITE K k) = False.
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875110 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874665 K k h2)). Qed.
Lemma lem6875113 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875111 K k n h1 h2 h3 h4 h5) (@lem6874665 K k h2)). Qed.
Lemma lem6875114 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (n = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h6 : n = (NUMERAL 0) => @lem6875113 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874583 n h4)). Qed.
Lemma lem6875115 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875114 K k n h1 h2 h3 h4 h5) (@lem6874583 n h4)). Qed.
Lemma lem6875116 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (term732 K k) = False.
Proof. exact (prop_ext (fun h6 : term732 K k => @lem6875115 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874575 K k h3)). Qed.
Lemma lem6875117 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875116 K k n h1 h2 h3 h4 h5) (@lem6874575 K k h3)). Qed.
Lemma lem6875118 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = False.
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875117 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874561 K k n h5)). Qed.
Lemma lem6875119 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875118 K k n h1 h2 h3 h4 h5) (@lem6874561 K k n h5)). Qed.
Lemma lem6875120 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (@FINITE K k) = False.
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875119 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874559 K k h2)). Qed.
Lemma lem6875121 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875120 K k n h1 h2 h3 h4 h5) (@lem6874559 K k h2)). Qed.
Lemma lem6875122 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (n = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h6 : n = (NUMERAL 0) => @lem6875121 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874469 n h4)). Qed.
Lemma lem6875123 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875122 K k n h1 h2 h3 h4 h5) (@lem6874469 n h4)). Qed.
Lemma lem6875124 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (term732 K k) = False.
Proof. exact (prop_ext (fun h6 : term732 K k => @lem6875123 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874453 K k h3)). Qed.
Lemma lem6875125 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875124 K k n h1 h2 h3 h4 h5) (@lem6874453 K k h3)). Qed.
Lemma lem6875126 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = False.
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875125 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874427 K k n h5)). Qed.
Lemma lem6875127 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875126 K k n h1 h2 h3 h4 h5) (@lem6874427 K k n h5)). Qed.
Lemma lem6875128 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (@FINITE K k) = False.
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875127 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874423 K k h2)). Qed.
Lemma lem6875129 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875128 K k n h1 h2 h3 h4 h5) (@lem6874423 K k h2)). Qed.
Lemma lem6875130 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (n = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h6 : n = (NUMERAL 0) => @lem6875129 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874469 n h4)). Qed.
Lemma lem6875131 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875130 K k n h1 h2 h3 h4 h5) (@lem6874469 n h4)). Qed.
Lemma lem6875132 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (term732 K k) = False.
Proof. exact (prop_ext (fun h6 : term732 K k => @lem6875131 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874453 K k h3)). Qed.
Lemma lem6875133 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875132 K k n h1 h2 h3 h4 h5) (@lem6874453 K k h3)). Qed.
Lemma lem6875134 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = False.
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875133 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874427 K k n h5)). Qed.
Lemma lem6875135 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875134 K k n h1 h2 h3 h4 h5) (@lem6874427 K k n h5)). Qed.
Lemma lem6875136 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (@FINITE K k) = False.
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875135 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874423 K k h2)). Qed.
Lemma lem6875137 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875136 K k n h1 h2 h3 h4 h5) (@lem6874423 K k h2)). Qed.
Lemma lem6875138 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (n = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h6 : n = (NUMERAL 0) => @lem6875137 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874309 n h4)). Qed.
Lemma lem6875139 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875138 K k n h1 h2 h3 h4 h5) (@lem6874309 n h4)). Qed.
Lemma lem6875140 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (term732 K k) = False.
Proof. exact (prop_ext (fun h6 : term732 K k => @lem6875139 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874277 K k h3)). Qed.
Lemma lem6875141 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875140 K k n h1 h2 h3 h4 h5) (@lem6874277 K k h3)). Qed.
Lemma lem6875142 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = False.
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875141 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874235 K k n h5)). Qed.
Lemma lem6875143 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875142 K k n h1 h2 h3 h4 h5) (@lem6874235 K k n h5)). Qed.
Lemma lem6875144 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (@FINITE K k) = False.
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875143 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874227 K k h2)). Qed.
Lemma lem6875145 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875144 K k n h1 h2 h3 h4 h5) (@lem6874227 K k h2)). Qed.
Lemma lem6875146 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (n = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h6 : n = (NUMERAL 0) => @lem6875145 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874065 n h4)). Qed.
Lemma lem6875147 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875146 K k n h1 h2 h3 h4 h5) (@lem6874065 n h4)). Qed.
Lemma lem6875148 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (term732 K k) = False.
Proof. exact (prop_ext (fun h6 : term732 K k => @lem6875147 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6874041 K k h3)). Qed.
Lemma lem6875149 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875148 K k n h1 h2 h3 h4 h5) (@lem6874041 K k h3)). Qed.
Lemma lem6875150 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = False.
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875149 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6873959 K k n h5)). Qed.
Lemma lem6875151 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875150 K k n h1 h2 h3 h4 h5) (@lem6873959 K k n h5)). Qed.
Lemma lem6875152 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : (@FINITE K k) = False.
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875151 K k n h1 h2 h3 h4 h5) (fun h6 : False => @lem6873953 K k h2)). Qed.
Lemma lem6875153 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term1423 K) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : n = (NUMERAL 0)) (h5 : (@CARD K k) = n) : False.
Proof. exact (EQ_MP (@lem6875152 K k n h1 h2 h3 h4 h5) (@lem6873953 K k h2)). Qed.
Lemma lem6875154 {K : Type'} (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : n = (NUMERAL 0)) (h4 : (@CARD K k) = n) : term1428 K.
Proof. exact (fun h0 : term1423 K => @lem6875153 K k n h0 h1 h2 h3 h4). Qed.
Lemma lem6875155 {K : Type'} : (term1428 K) = (term1429 K).
Proof. exact (@lem69 (term1423 K)). Qed.
Lemma lem6875156 {K : Type'} (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : n = (NUMERAL 0)) (h4 : (@CARD K k) = n) : term1429 K.
Proof. exact (EQ_MP (@lem6875155 K) (@lem6875154 K k n h1 h2 h3 h4)). Qed.
Lemma lem6875157 {_99911 K : Type'} (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : n = (NUMERAL 0)) (h4 : (@CARD K k) = n) : term1432 _99911 K.
Proof. exact (fun h0 : term1423 _99911 => @lem6875156 K k n h1 h2 h3 h4). Qed.
Lemma lem6875158 {_99911 K : Type'} (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : (@CARD K k) = n) : term1435 _99911 K n.
Proof. exact (fun h0 : n = (NUMERAL 0) => @lem6875157 _99911 K k n h1 h2 h0 h3). Qed.
Lemma lem6875159 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : (@CARD K k) = n) : term1438 _99911 A K f i neut n.
Proof. exact (fun h0 : term1316 A K f i neut => @lem6875158 _99911 K k n h1 h2 h3). Qed.
Lemma lem6875160 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : (@CARD K k) = n) : term1441 _99911 A K dom f i neut n.
Proof. exact (fun h0 : term1329 A K f i dom => @lem6875159 _99911 A K f i neut k n h1 h2 h3). Qed.
Lemma lem6875161 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : term732 K k) (h3 : (@CARD K k) = n) : term1444 _99911 A K k dom f i neut n.
Proof. exact (fun h0 : @IN K i k => @lem6875160 _99911 A K dom f i neut k n h1 h2 h3). Qed.
Lemma lem6875162 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) : term1447 _99911 A K k dom f i neut n.
Proof. exact (fun h0 : term732 K k => @lem6875161 _99911 A K dom f i neut k n h1 h0 h2). Qed.
Lemma lem6875163 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : (@CARD K k) = n) : term1450 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : term1185 A K k P op f => @lem6875162 _99911 A K dom f i neut k n h1 h2). Qed.
Lemma lem6875164 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (k : K -> Prop) (h1 : @FINITE K k) : term1453 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : (@CARD K k) = n => @lem6875163 _99911 A K P op dom f i neut k n h1 h0). Qed.
Lemma lem6875165 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1455 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : @FINITE K k => @lem6875164 _99911 A K P op dom f i neut n k h0). Qed.
Lemma lem6875166 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1457 _99911 A K P op k dom f i neut n.
Proof. exact (fun h0 : P neut => @lem6875165 _99911 A K P op k dom f i neut n). Qed.
Lemma lem6875171 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1461 _99911 A K op k dom f i neut n.
Proof. exact (fun P : A -> Prop => @lem6875166 _99911 A K P op k dom f i neut n). Qed.
Lemma lem6875176 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1465 _99911 A K k dom f i neut n.
Proof. exact (fun op : type1400 A => @lem6875171 _99911 A K op k dom f i neut n). Qed.
Lemma lem6875181 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1469 _99911 A K dom f i neut n.
Proof. exact (fun k : K -> Prop => @lem6875176 _99911 A K k dom f i neut n). Qed.
Lemma lem6875186 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : term1473 _99911 A K f i neut n.
Proof. exact (fun dom : A -> Prop => @lem6875181 _99911 A K dom f i neut n). Qed.
Lemma lem6875191 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : term1477 _99911 A K i neut n.
Proof. exact (fun f : K -> A => @lem6875186 _99911 A K f i neut n). Qed.
Lemma lem6875196 {_99911 A K : Type'} (neut : A) (n : nat) : term1481 _99911 A K neut n.
Proof. exact (fun i : K => @lem6875191 _99911 A K i neut n). Qed.
Lemma lem6875201 {_99911 A K : Type'} (n : nat) : term1485 _99911 A K n.
Proof. exact (fun neut : A => @lem6875196 _99911 A K neut n). Qed.
Lemma lem6875206 {_99911 A K : Type'} : term1489 _99911 A K.
Proof. exact (fun n : nat => @lem6875201 _99911 A K n). Qed.
Lemma lem6875207 {_99911 A K : Type'} : term1488 _99911 A K.
Proof. exact (EQ_MP (@lem6873930 _99911 A K) (@lem6875206 _99911 A K)). Qed.
Lemma lem6875208 {_99911 A K : Type'} (n : nat) : term1536 _99911 A K n.
Proof. exact (@lem6875207 _99911 A K n). Qed.
Lemma lem6875209 {_99911 A K : Type'} (n : nat) : (term1536 _99911 A K n) = (term1484 _99911 A K n).
Proof. exact (eq_refl (term1536 _99911 A K n)). Qed.
Lemma lem6875210 {_99911 A K : Type'} (n : nat) : term1484 _99911 A K n.
Proof. exact (EQ_MP (@lem6875209 _99911 A K n) (@lem6875208 _99911 A K n)). Qed.
Lemma lem6875211 {_99911 A K : Type'} (n : nat) (neut : A) : term1537 _99911 A K n neut.
Proof. exact (@lem6875210 _99911 A K n neut). Qed.
Lemma lem6875212 {_99911 A K : Type'} (neut : A) (n : nat) : (term1537 _99911 A K n neut) = (term1480 _99911 A K neut n).
Proof. exact (eq_refl (term1537 _99911 A K n neut)). Qed.
Lemma lem6875213 {_99911 A K : Type'} (neut : A) (n : nat) : term1480 _99911 A K neut n.
Proof. exact (EQ_MP (@lem6875212 _99911 A K neut n) (@lem6875211 _99911 A K n neut)). Qed.
Lemma lem6875214 {_99911 A K : Type'} (neut : A) (n : nat) (i : K) : term1538 _99911 A K neut n i.
Proof. exact (@lem6875213 _99911 A K neut n i). Qed.
Lemma lem6875215 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : (term1538 _99911 A K neut n i) = (term1476 _99911 A K i neut n).
Proof. exact (eq_refl (term1538 _99911 A K neut n i)). Qed.
Lemma lem6875216 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) : term1476 _99911 A K i neut n.
Proof. exact (EQ_MP (@lem6875215 _99911 A K i neut n) (@lem6875214 _99911 A K neut n i)). Qed.
Lemma lem6875217 {_99911 A K : Type'} (i : K) (neut : A) (n : nat) (f : K -> A) : term1539 _99911 A K i neut n f.
Proof. exact (@lem6875216 _99911 A K i neut n f). Qed.
Lemma lem6875218 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : (term1539 _99911 A K i neut n f) = (term1472 _99911 A K f i neut n).
Proof. exact (eq_refl (term1539 _99911 A K i neut n f)). Qed.
Lemma lem6875219 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) : term1472 _99911 A K f i neut n.
Proof. exact (EQ_MP (@lem6875218 _99911 A K f i neut n) (@lem6875217 _99911 A K i neut n f)). Qed.
Lemma lem6875220 {_99911 A K : Type'} (f : K -> A) (i : K) (neut : A) (n : nat) (dom : A -> Prop) : term1540 _99911 A K f i neut n dom.
Proof. exact (@lem6875219 _99911 A K f i neut n dom). Qed.
Lemma lem6875221 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1540 _99911 A K f i neut n dom) = (term1468 _99911 A K dom f i neut n).
Proof. exact (eq_refl (term1540 _99911 A K f i neut n dom)). Qed.
Lemma lem6875222 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1468 _99911 A K dom f i neut n.
Proof. exact (EQ_MP (@lem6875221 _99911 A K dom f i neut n) (@lem6875220 _99911 A K f i neut n dom)). Qed.
Lemma lem6875223 {_99911 A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (k : K -> Prop) : term1541 _99911 A K dom f i neut n k.
Proof. exact (@lem6875222 _99911 A K dom f i neut n k). Qed.
Lemma lem6875224 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1541 _99911 A K dom f i neut n k) = (term1464 _99911 A K k dom f i neut n).
Proof. exact (eq_refl (term1541 _99911 A K dom f i neut n k)). Qed.
Lemma lem6875225 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1464 _99911 A K k dom f i neut n.
Proof. exact (EQ_MP (@lem6875224 _99911 A K k dom f i neut n) (@lem6875223 _99911 A K dom f i neut n k)). Qed.
Lemma lem6875226 {_99911 A K : Type'} (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (op : type1400 A) : term1542 _99911 A K k dom f i neut n op.
Proof. exact (@lem6875225 _99911 A K k dom f i neut n op). Qed.
Lemma lem6875227 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1542 _99911 A K k dom f i neut n op) = (term1460 _99911 A K op k dom f i neut n).
Proof. exact (eq_refl (term1542 _99911 A K k dom f i neut n op)). Qed.
Lemma lem6875228 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1460 _99911 A K op k dom f i neut n.
Proof. exact (EQ_MP (@lem6875227 _99911 A K op k dom f i neut n) (@lem6875226 _99911 A K k dom f i neut n op)). Qed.
Lemma lem6875229 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) (P : A -> Prop) : term1543 _99911 A K op k dom f i neut n P.
Proof. exact (@lem6875228 _99911 A K op k dom f i neut n P). Qed.
Lemma lem6875230 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : (term1543 _99911 A K op k dom f i neut n P) = (term1424 _99911 A K P op k dom f i neut n).
Proof. exact (eq_refl (term1543 _99911 A K op k dom f i neut n P)). Qed.
Lemma lem6875231 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1424 _99911 A K P op k dom f i neut n.
Proof. exact (EQ_MP (@lem6875230 _99911 A K P op k dom f i neut n) (@lem6875229 _99911 A K op k dom f i neut n P)). Qed.
Lemma lem6875233 {_99911 A K : Type'} (P : A -> Prop) (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (n : nat) : term1424 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6873540 _99911 A K P op k dom f i neut n (@lem6875231 _99911 A K P op k dom f i neut n)). Qed.
Lemma lem6875234 {_99911 A K : Type'} (op : type1400 A) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (i : K) (n : nat) (P : A -> Prop) (neut : A) (h1 : P neut) : term1454 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6875233 _99911 A K P op k dom f i neut n (@lem6871720 A P neut h1)). Qed.
Lemma lem6875235 {_99911 A K : Type'} (op : type1400 A) (dom : A -> Prop) (f : K -> A) (i : K) (n : nat) (k : K -> Prop) (P : A -> Prop) (neut : A) (h1 : @FINITE K k) (h2 : P neut) : term1452 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6875234 _99911 A K op k dom f i n P neut h2 (@lem6871805 K k h1)). Qed.
Lemma lem6875236 {_99911 A K : Type'} (op : type1400 A) (dom : A -> Prop) (f : K -> A) (i : K) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : @FINITE K k) (h2 : P neut) (h3 : (@CARD K k) = n) : term1449 _99911 A K P op k dom f i neut n.
Proof. exact (@lem6875235 _99911 A K op dom f i n k P neut h1 h2 (@lem6871809 K k n h3)). Qed.
Lemma lem6875237 {_99911 A K : Type'} (dom : A -> Prop) (i : K) (op : type1400 A) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : P neut) (h4 : (@CARD K k) = n) : term1446 _99911 A K k dom f i neut n.
Proof. exact (@lem6875236 _99911 A K op dom f i P neut k n h2 h3 h4 (@lem6871823 A K k P op f h1)). Qed.
Lemma lem6875238 {_99911 A K : Type'} (dom : A -> Prop) (i : K) (op : type1400 A) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1443 _99911 A K k dom f i neut n.
Proof. exact (@lem6875237 _99911 A K dom i op f P neut k n h1 h2 h4 h5 (@lem6868434 K k h3)). Qed.
Lemma lem6875239 {_99911 A K : Type'} (dom : A -> Prop) (op : type1400 A) (f : K -> A) (P : A -> Prop) (neut : A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : P neut) (h5 : (@CARD K k) = n) (h6 : @IN K i k) : term1440 _99911 A K dom f i neut n.
Proof. exact (@lem6875238 _99911 A K dom i op f P neut k n h1 h2 h3 h4 h5 (@lem6873066 K i k h6)). Qed.
Lemma lem6875240 {_99911 A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term732 K k) (h4 : P neut) (h5 : (@CARD K k) = n) (h6 : term1329 A K f i dom) (h7 : @IN K i k) : term1437 _99911 A K f i neut n.
Proof. exact (@lem6875239 _99911 A K dom op f P neut n i k h1 h2 h3 h4 h5 h7 (@lem6873070 A K f i dom h6)). Qed.
Lemma lem6875241 {_99911 A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) (h7 : term1329 A K f i dom) (h8 : @IN K i k) : term1434 _99911 K n.
Proof. exact (@lem6875240 _99911 A K op P neut n f dom i k h1 h2 h4 h5 h6 h7 h8 (@lem6873069 A K f i neut h3)). Qed.
Lemma lem6875242 {_99911 A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : n = (NUMERAL 0)) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : term1431 _99911 K.
Proof. exact (@lem6875241 _99911 A K op P neut n f dom i k h1 h2 h3 h4 h5 h7 h8 h9 (@lem6873520 n h6)). Qed.
Lemma lem6875243 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : n = (NUMERAL 0)) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : term1428 K.
Proof. exact (@lem6875242 Prop A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 (@lem3854502 Prop)). Qed.
Lemma lem6875244 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : n = (NUMERAL 0)) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : False.
Proof. exact (@lem6875243 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 (@lem6873521 K)). Qed.
Lemma lem6875245 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : n = (NUMERAL 0)) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : (n = (NUMERAL 0)) = False.
Proof. exact (prop_ext (fun h10 : n = (NUMERAL 0) => @lem6875244 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9) (fun h10 : False => @lem6873520 n h6)). Qed.
Lemma lem6875246 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : n = (NUMERAL 0)) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : False.
Proof. exact (EQ_MP (@lem6875245 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem6873520 n h6)). Qed.
Lemma lem6875247 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) (h7 : term1329 A K f i dom) (h8 : @IN K i k) : term1544 n.
Proof. exact (fun h0 : n = (NUMERAL 0) => @lem6875246 A K op P neut n f dom i k h1 h2 h3 h4 h5 h0 h6 h7 h8). Qed.
Lemma lem6875248 (n : nat) : (term1544 n) = (term8 n).
Proof. exact (@lem69 (n = (NUMERAL 0))). Qed.
Lemma lem6875249 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) (h7 : term1329 A K f i dom) (h8 : @IN K i k) : term8 n.
Proof. exact (EQ_MP (@lem6875248 n) (@lem6875247 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem6875250 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) (h7 : term1329 A K f i dom) (h8 : @IN K i k) : term7 n.
Proof. exact (EQ_MP (@lem6873519 n) (@lem6875249 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem6875251 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) (h7 : term1329 A K f i dom) (h8 : @IN K i k) : term1421 A K n k i P op f.
Proof. exact (EQ_MP (@lem6873514 A K P op f n i k h1 h2 h6 h8) (@lem6875250 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem6875252 {A K : Type'} (op : type1400 A) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : @FINITE K k) (h3 : term1316 A K f i neut) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) (h7 : term1329 A K f i dom) (h8 : @IN K i k) : term1545 A K n k i P op f.
Proof. exact (ex_intro (term1546 A K n k i P op f) (term1388 n) (@lem6875251 A K op P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem6875253 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : term1345 A K P dom neut op ltle k i f.
Proof. exact (@lem6873223 A K k i n P dom neut op ltle f h2 (@lem6875252 A K op P neut n f dom i k h1 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem6875254 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : term1346 A K P dom neut op ltle k i f.
Proof. exact (EQ_MP (@lem6873173 A K P dom neut op ltle f i k h9) (@lem6875253 A K op ltle P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem6875255 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (P : A -> Prop) (neut : A) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@CARD K k) = n) (h8 : term1329 A K f i dom) (h9 : @IN K i k) : term1333 A K P dom neut op ltle k i f.
Proof. exact (@lem6873110 A K dom neut ltle i k P op f h1 (@lem6875254 A K op ltle P neut n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem6875256 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6873083 A K P dom neut op ltle k i f h7) (@lem6875255 A K op ltle P neut n f dom i k h1 h2 h3 h4 h5 h6 h8 h9 h10)). Qed.
Lemma lem6875257 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1324 A K dom neut op ltle k i f) : term1323 A K dom neut op ltle k i f.
Proof. exact (proj2 (@lem6873064 A K dom neut op ltle k i f h1)). Qed.
Lemma lem6875258 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1324 A K dom neut op ltle k i f) : @IN K i k.
Proof. exact (proj1 (@lem6873064 A K dom neut op ltle k i f h1)). Qed.
Lemma lem6875259 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1323 A K dom neut op ltle k i f) : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f).
Proof. exact (proj2 (@lem6873065 A K dom neut op ltle k i f h1)). Qed.
Lemma lem6875260 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (i : K) (f : K -> A) (h1 : term1323 A K dom neut op ltle k i f) : term1318 A K dom f i neut.
Proof. exact (proj1 (@lem6873065 A K dom neut op ltle k i f h1)). Qed.
Lemma lem6875261 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : ((@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h11 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f) => @lem6875256 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : term1113 A K P dom neut op ltle k f => @lem6873067 A K dom neut op ltle k i f h7)). Qed.
Lemma lem6875262 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875261 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem6873067 A K dom neut op ltle k i f h7)). Qed.
Lemma lem6875263 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1318 A K dom f i neut) : term1316 A K f i neut.
Proof. exact (proj2 (@lem6873068 A K dom f i neut h1)). Qed.
Lemma lem6875264 {A K : Type'} (dom : A -> Prop) (f : K -> A) (i : K) (neut : A) (h1 : term1318 A K dom f i neut) : term1329 A K f i dom.
Proof. exact (proj1 (@lem6873068 A K dom f i neut h1)). Qed.
Lemma lem6875265 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : (term1316 A K f i neut) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h11 : term1316 A K f i neut => @lem6875262 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : term1113 A K P dom neut op ltle k f => @lem6873069 A K f i neut h4)). Qed.
Lemma lem6875266 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875265 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem6873069 A K f i neut h4)). Qed.
Lemma lem6875267 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : (term1329 A K f i dom) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h11 : term1329 A K f i dom => @lem6875266 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (fun h11 : term1113 A K P dom neut op ltle k f => @lem6873070 A K f i dom h9)). Qed.
Lemma lem6875268 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term1316 A K f i neut) (h5 : term732 K k) (h6 : P neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875267 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem6873070 A K f i dom h9)). Qed.
Lemma lem6875269 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1318 A K dom f i neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : (term1316 A K f i neut) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h11 : term1316 A K f i neut => @lem6875268 A K P neut op ltle n f dom i k h1 h2 h3 h11 h4 h5 h7 h8 h9 h10) (fun h11 : term1113 A K P dom neut op ltle k f => @lem6875263 A K dom f i neut h6)). Qed.
Lemma lem6875270 {A K : Type'} (P : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (n : nat) (f : K -> A) (dom : A -> Prop) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1318 A K dom f i neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : term1329 A K f i dom) (h10 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875269 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h9 h10) (@lem6875263 A K dom f i neut h6)). Qed.
Lemma lem6875271 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1318 A K dom f i neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : @IN K i k) : (term1329 A K f i dom) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h10 : term1329 A K f i dom => @lem6875270 A K P neut op ltle n f dom i k h1 h2 h3 h4 h5 h6 h7 h8 h10 h9) (fun h10 : term1113 A K P dom neut op ltle k f => @lem6875264 A K dom f i neut h6)). Qed.
Lemma lem6875272 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1318 A K dom f i neut) (h7 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) (h8 : (@CARD K k) = n) (h9 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875271 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem6875264 A K dom f i neut h6)). Qed.
Lemma lem6875273 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1323 A K dom neut op ltle k i f) (h7 : term1318 A K dom f i neut) (h8 : (@CARD K k) = n) (h9 : @IN K i k) : ((@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f)) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h10 : (@iterato A K dom neut op ltle k f) = (term1321 A K dom neut op ltle k i f) => @lem6875272 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h7 h10 h8 h9) (fun h10 : term1113 A K P dom neut op ltle k f => @lem6875259 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875274 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (dom : A -> Prop) (f : K -> A) (neut : A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1323 A K dom neut op ltle k i f) (h7 : term1318 A K dom f i neut) (h8 : (@CARD K k) = n) (h9 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875273 A K P op ltle dom f neut n i k h1 h2 h3 h4 h5 h6 h7 h8 h9) (@lem6875259 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875275 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1323 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) (h8 : @IN K i k) : (term1318 A K dom f i neut) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h9 : term1318 A K dom f i neut => @lem6875274 A K P op ltle dom f neut n i k h1 h2 h3 h4 h5 h6 h9 h7 h8) (fun h9 : term1113 A K P dom neut op ltle k f => @lem6875260 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875276 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1323 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) (h8 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875275 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h6 h7 h8) (@lem6875260 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875277 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1323 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) (h8 : @IN K i k) : (@IN K i k) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h9 : @IN K i k => @lem6875276 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h6 h7 h8) (fun h9 : term1113 A K P dom neut op ltle k f => @lem6873066 K i k h8)). Qed.
Lemma lem6875278 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1323 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) (h8 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875277 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h6 h7 h8) (@lem6873066 K i k h8)). Qed.
Lemma lem6875279 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1324 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) (h8 : @IN K i k) : (term1323 A K dom neut op ltle k i f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h9 : term1323 A K dom neut op ltle k i f => @lem6875278 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h9 h7 h8) (fun h9 : term1113 A K P dom neut op ltle k f => @lem6875257 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875280 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (n : nat) (i : K) (k : K -> Prop) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1324 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) (h8 : @IN K i k) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875279 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h6 h7 h8) (@lem6875257 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875281 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (f : K -> A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1324 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) : (@IN K i k) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h8 : @IN K i k => @lem6875280 A K P dom neut op ltle f n i k h1 h2 h3 h4 h5 h6 h7 h8) (fun h8 : term1113 A K P dom neut op ltle k f => @lem6875258 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875282 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (f : K -> A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1324 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875281 A K P dom neut op ltle i f k n h1 h2 h3 h4 h5 h6 h7) (@lem6875258 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875283 {A K : Type'} (i : K) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1328 A K i P dom neut op ltle k f.
Proof. exact (fun h0 : term1324 A K dom neut op ltle k i f => @lem6875282 A K P dom neut op ltle i f k n h1 h2 h3 h4 h5 h0 h6). Qed.
Lemma lem6875284 {A K : Type'} (i : K) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1327 A K i P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6873063 A K i P dom neut op ltle k f) (@lem6875283 A K i dom op ltle f P neut k n h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6875285 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (i : K) (f : K -> A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term1312 A K dom neut op ltle k i f) (h7 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (@lem6875284 A K i dom op ltle f P neut k n h1 h2 h3 h4 h5 h7 (@lem6873019 A K dom neut op ltle k i f h6)). Qed.
Lemma lem6875286 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : term1253 A K dom neut op ltle k f) (h4 : @FINITE K k) (h5 : term732 K k) (h6 : P neut) (h7 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (ex_elim (@lem6873018 A K dom neut op ltle k f h3) (fun i : K => fun h0 : term1547 A K dom neut op ltle k f i => @lem6875285 A K P dom neut op ltle i f k n h1 h2 h4 h5 h6 h0 h7)). Qed.
Lemma lem6875287 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1548 A K P dom neut op ltle k f.
Proof. exact (fun h0 : term1253 A K dom neut op ltle k f => @lem6875286 A K dom op ltle f P neut k n h1 h2 h0 h3 h4 h5 h6). Qed.
Lemma lem6875288 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1549 A K P dom neut op ltle k f.
Proof. exact (conj (@lem6873017 A K dom op ltle k f P neut h5) (@lem6875287 A K dom op ltle f P neut k n h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6875289 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1294 A K P dom neut op ltle k f.
Proof. exact (@lem6872831 A K P dom neut op ltle k f (@lem6875288 A K dom op ltle f P neut k n h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6875290 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1293 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6872828 A K P dom neut op ltle f k h3) (@lem6875289 A K dom op ltle f P neut k n h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem6875291 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : term729 A K dom neut op ltle f) (h7 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (@lem6875290 A K dom op ltle f P neut k n h1 h2 h3 h4 h5 h7 (@lem6871944 A K k dom neut op ltle f h6)). Qed.
Lemma lem6875292 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1550 A K P dom neut op ltle k f.
Proof. exact (fun h0 : term729 A K dom neut op ltle f => @lem6875291 A K P dom neut op ltle f k n h1 h2 h3 h4 h5 h0 h6). Qed.
Lemma lem6875294 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : term732 K k) (h5 : P neut) (h6 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (@lem6875292 A K dom op ltle f P neut k n h1 h2 h3 h4 h5 h6 (@lem6868429 A K dom neut op ltle f)). Qed.
Lemma lem6875295 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (or_elim (@lem6868432 K k) (fun h0 : k = (@EMPTY K) => @lem6871882 A K dom op ltle f P neut k h4 h0) (fun h0 : term732 K k => @lem6875294 A K dom op ltle f P neut k n h1 h2 h3 h0 h4 h5)). Qed.
Lemma lem6875296 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : (term1185 A K k P op f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : term1185 A K k P op f => @lem6875295 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871823 A K k P op f h1)). Qed.
Lemma lem6875297 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875296 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871823 A K k P op f h1)). Qed.
Lemma lem6875298 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875297 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871809 K k n h5)). Qed.
Lemma lem6875299 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875298 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871809 K k n h5)). Qed.
Lemma lem6875300 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : (@FINITE K k) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875299 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871805 K k h3)). Qed.
Lemma lem6875301 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875300 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871805 K k h3)). Qed.
Lemma lem6875302 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : (P neut) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : P neut => @lem6875301 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871720 A P neut h4)). Qed.
Lemma lem6875303 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875302 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871720 A P neut h4)). Qed.
Lemma lem6875304 {A K : Type'} (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1212 A K n k P op f) : term1185 A K k P op f.
Proof. exact (proj2 (@lem6871714 A K n k P op f h1)). Qed.
Lemma lem6875305 {A K : Type'} (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1212 A K n k P op f) : term798 K k n.
Proof. exact (proj1 (@lem6871714 A K n k P op f h1)). Qed.
Lemma lem6875306 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : (term1185 A K k P op f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : term1185 A K k P op f => @lem6875303 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871715 A K k P op f h1)). Qed.
Lemma lem6875307 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875306 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871715 A K k P op f h1)). Qed.
Lemma lem6875308 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term798 K k n) : (@CARD K k) = n.
Proof. exact (proj2 (@lem6871716 K k n h1)). Qed.
Lemma lem6875309 {K : Type'} (k : K -> Prop) (n : nat) (h1 : term798 K k n) : @FINITE K k.
Proof. exact (proj1 (@lem6871716 K k n h1)). Qed.
Lemma lem6875310 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : ((@CARD K k) = n) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875307 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871717 K k n h5)). Qed.
Lemma lem6875311 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875310 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871717 K k n h5)). Qed.
Lemma lem6875312 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : (@FINITE K k) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : @FINITE K k => @lem6875311 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6871718 K k h3)). Qed.
Lemma lem6875313 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : (@CARD K k) = n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875312 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6871718 K k h3)). Qed.
Lemma lem6875314 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : term798 K k n) : ((@CARD K k) = n) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h6 : (@CARD K k) = n => @lem6875313 A K dom op ltle f P neut k n h1 h2 h3 h4 h6) (fun h6 : term1113 A K P dom neut op ltle k f => @lem6875308 K k n h5)). Qed.
Lemma lem6875315 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : @FINITE K k) (h4 : P neut) (h5 : term798 K k n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875314 A K dom op ltle f P neut k n h1 h2 h3 h4 h5) (@lem6875308 K k n h5)). Qed.
Lemma lem6875316 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : P neut) (h4 : term798 K k n) : (@FINITE K k) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h5 : @FINITE K k => @lem6875315 A K dom op ltle f P neut k n h1 h2 h5 h3 h4) (fun h5 : term1113 A K P dom neut op ltle k f => @lem6875309 K k n h4)). Qed.
Lemma lem6875317 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (k : K -> Prop) (n : nat) (h1 : term1185 A K k P op f) (h2 : term1198 A K n P dom neut op ltle f) (h3 : P neut) (h4 : term798 K k n) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875316 A K dom op ltle f P neut k n h1 h2 h3 h4) (@lem6875309 K k n h4)). Qed.
Lemma lem6875318 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (neut : A) (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) (h2 : P neut) (h3 : term798 K k n) (h4 : term1212 A K n k P op f) : (term1185 A K k P op f) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h5 : term1185 A K k P op f => @lem6875317 A K dom op ltle f P neut k n h5 h1 h2 h3) (fun h5 : term1113 A K P dom neut op ltle k f => @lem6875304 A K n k P op f h4)). Qed.
Lemma lem6875319 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (neut : A) (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) (h2 : P neut) (h3 : term798 K k n) (h4 : term1212 A K n k P op f) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875318 A K dom ltle neut n k P op f h1 h2 h3 h4) (@lem6875304 A K n k P op f h4)). Qed.
Lemma lem6875320 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (neut : A) (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) (h2 : P neut) (h3 : term1212 A K n k P op f) : (term798 K k n) = (term1113 A K P dom neut op ltle k f).
Proof. exact (prop_ext (fun h4 : term798 K k n => @lem6875319 A K dom ltle neut n k P op f h1 h2 h4 h3) (fun h4 : term1113 A K P dom neut op ltle k f => @lem6875305 A K n k P op f h3)). Qed.
Lemma lem6875321 {A K : Type'} (dom : A -> Prop) (ltle : type1402 K) (neut : A) (n : nat) (k : K -> Prop) (P : A -> Prop) (op : type1400 A) (f : K -> A) (h1 : term1198 A K n P dom neut op ltle f) (h2 : P neut) (h3 : term1212 A K n k P op f) : term1113 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6875320 A K dom ltle neut n k P op f h1 h2 h3) (@lem6875305 A K n k P op f h3)). Qed.
Lemma lem6875322 {A K : Type'} (k : K -> Prop) (n : nat) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : term1198 A K n P dom neut op ltle f) (h2 : P neut) : term1184 A K n P dom neut op ltle k f.
Proof. exact (fun h0 : term1212 A K n k P op f => @lem6875321 A K dom ltle neut n k P op f h1 h2 h0). Qed.
Lemma lem6875327 {A K : Type'} (n : nat) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : term1198 A K n P dom neut op ltle f) (h2 : P neut) : term1187 A K n P dom neut op ltle f.
Proof. exact (fun k : K -> Prop => @lem6875322 A K k n dom op ltle f P neut h1 h2). Qed.
Lemma lem6875328 {A K : Type'} (n : nat) (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1202 A K n P dom neut op ltle f.
Proof. exact (fun h0 : term1198 A K n P dom neut op ltle f => @lem6875327 A K n dom op ltle f P neut h0 h1). Qed.
Lemma lem6875333 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1206 A K P dom neut op ltle f.
Proof. exact (fun n : nat => @lem6875328 A K n dom op ltle f P neut h1). Qed.
Lemma lem6875334 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1189 A K P dom neut op ltle f.
Proof. exact (@lem6871712 A K P dom neut op ltle f (@lem6875333 A K dom op ltle f P neut h1)). Qed.
Lemma lem6875335 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1172 A K P dom neut op ltle f.
Proof. exact (EQ_MP (@lem6871688 A K P dom neut op ltle f) (@lem6875334 A K dom op ltle f P neut h1)). Qed.
Lemma lem6875336 {A K : Type'} (dom : A -> Prop) (op : type1400 A) (ltle : type1402 K) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1181 A K P dom neut op ltle f.
Proof. exact (@lem6871642 A K P dom neut op ltle f (@lem6875335 A K dom op ltle f P neut h1)). Qed.
Lemma lem6875337 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) (dom : A -> Prop) (P : A -> Prop) (neut : A) (h1 : P neut) : term1551 A K P op ltle k f dom neut.
Proof. exact (@lem6875336 A K dom op ltle f P neut h1 (term1276 A K k f dom neut)). Qed.
Lemma lem6875338 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : (term1551 A K P op ltle k f dom neut) = (term1552 A K P op ltle k dom neut f).
Proof. exact (eq_refl (term1551 A K P op ltle k f dom neut)). Qed.
Lemma lem6875339 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1552 A K P op ltle k dom neut f.
Proof. exact (EQ_MP (@lem6875338 A K P op ltle k dom neut f) (@lem6875337 A K op ltle k f dom P neut h1)). Qed.
Lemma lem6875340 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : (P neut) = (term1552 A K P op ltle k dom neut f).
Proof. exact (prop_ext (fun h2 : P neut => @lem6875339 A K op ltle k dom f P neut h1) (fun h2 : term1552 A K P op ltle k dom neut f => @lem6871619 A P neut h1)). Qed.
Lemma lem6875341 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) (h1 : P neut) : term1552 A K P op ltle k dom neut f.
Proof. exact (EQ_MP (@lem6875340 A K op ltle k dom f P neut h1) (@lem6871619 A P neut h1)). Qed.
Lemma lem6875342 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1158 A K P op ltle k dom neut f.
Proof. exact (fun h0 : P neut => @lem6875341 A K op ltle k dom f P neut h0). Qed.
Lemma lem6875343 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (neut : A) (f : K -> A) : term1157 A K P op ltle k dom neut f.
Proof. exact (EQ_MP (@lem6871618 A K P op ltle k dom neut f) (@lem6875342 A K P op ltle k dom neut f)). Qed.
Lemma lem6875344 {A K : Type'} (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (P : A -> Prop) (neut : A) : term1122 A K op ltle k dom f P neut.
Proof. exact (EQ_MP (@lem6871578 A K op ltle k dom f P neut) (@lem6875343 A K P op ltle k dom neut f)). Qed.
Lemma lem6875345 {A K : Type'} (P : A -> Prop) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (dom : A -> Prop) (f : K -> A) (neut : A) : term1117 A K P op ltle k dom f neut.
Proof. exact (EQ_MP (@lem6871122 A K P op ltle k dom f neut) (@lem6875344 A K op ltle k dom f P neut)). Qed.
Lemma lem6875346 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1115 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6870949 A K P dom neut op ltle k f) (@lem6875345 A K P op ltle k dom f neut)). Qed.
Lemma lem6875347 {A K : Type'} (P : A -> Prop) (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1114 A K P dom neut op ltle k f.
Proof. exact (EQ_MP (@lem6870919 A K P dom neut op ltle k f) (@lem6875346 A K P dom neut op ltle k f)). Qed.
Lemma lem6875352 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) (f : K -> A) : term1553 A K dom neut op ltle k f.
Proof. exact (fun P : A -> Prop => @lem6875347 A K P dom neut op ltle k f). Qed.
Lemma lem6875357 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) (k : K -> Prop) : term1554 A K dom neut op ltle k.
Proof. exact (fun f : K -> A => @lem6875352 A K dom neut op ltle k f). Qed.
Lemma lem6875362 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) (ltle : type1402 K) : term1555 A K dom neut op ltle.
Proof. exact (fun k : K -> Prop => @lem6875357 A K dom neut op ltle k). Qed.
Lemma lem6875367 {A K : Type'} (dom : A -> Prop) (neut : A) (op : type1400 A) : term1556 A K dom neut op.
Proof. exact (fun ltle : type1402 K => @lem6875362 A K dom neut op ltle). Qed.
Lemma lem6875372 {A K : Type'} (dom : A -> Prop) (neut : A) : term1557 A K dom neut.
Proof. exact (fun op : type1400 A => @lem6875367 A K dom neut op). Qed.
Lemma lem6875377 {A K : Type'} (dom : A -> Prop) : term1558 A K dom.
Proof. exact (fun neut : A => @lem6875372 A K dom neut). Qed.
Lemma lem6875382 {A K : Type'} : term1559 A K.
Proof. exact (fun dom : A -> Prop => @lem6875377 A K dom). Qed.
