Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Axiom lem1982718 : forall (ly : real) (rx : real) (lx : real) (ry : real) (b : real) (a : real) (c : real) (d : real) (p : nat) (y : real) (z : real) (x : real) (q : nat), ((real_add (real_of_num (NUMERAL 0)) a) = a) /\ (((real_add a (real_of_num (NUMERAL 0))) = a) /\ (((real_mul a b) = (real_mul b a)) /\ (((real_mul (real_add a b) c) = (real_add (real_mul a c) (real_mul b c))) /\ (((real_mul (real_of_num (NUMERAL 0)) a) = (real_of_num (NUMERAL 0))) /\ (((real_mul a (real_of_num (NUMERAL 0))) = (real_of_num (NUMERAL 0))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 0))) a) = a) /\ (((real_mul a (real_of_num (NUMERAL (BIT1 0)))) = a) /\ (((real_mul (real_mul lx ly) (real_mul rx ry)) = (real_mul (real_mul lx rx) (real_mul ly ry))) /\ (((real_mul (real_mul lx ly) (real_mul rx ry)) = (real_mul lx (real_mul ly (real_mul rx ry)))) /\ (((real_mul (real_mul lx ly) (real_mul rx ry)) = (real_mul rx (real_mul (real_mul lx ly) ry))) /\ (((real_mul (real_mul lx ly) rx) = (real_mul (real_mul lx rx) ly)) /\ (((real_mul (real_mul lx ly) rx) = (real_mul lx (real_mul ly rx))) /\ (((real_mul lx rx) = (real_mul rx lx)) /\ (((real_mul lx (real_mul rx ry)) = (real_mul (real_mul lx rx) ry)) /\ (((real_mul lx (real_mul rx ry)) = (real_mul rx (real_mul lx ry))) /\ (((real_add (real_add a b) (real_add c d)) = (real_add (real_add a c) (real_add b d))) /\ (((real_add (real_add a b) c) = (real_add a (real_add b c))) /\ (((real_add a (real_add c d)) = (real_add c (real_add a d))) /\ (((real_add (real_add a b) c) = (real_add (real_add a c) b)) /\ (((real_add a c) = (real_add c a)) /\ (((real_add a (real_add c d)) = (real_add (real_add a c) d)) /\ (((real_mul (real_pow x p) (real_pow x q)) = (real_pow x (Nat.add p q))) /\ (((real_mul x (real_pow x q)) = (real_pow x (S q))) /\ (((real_mul (real_pow x q) x) = (real_pow x (S q))) /\ (((real_mul x x) = (real_pow x (NUMERAL (BIT0 (BIT1 0))))) /\ (((real_pow (real_mul x y) q) = (real_mul (real_pow x q) (real_pow y q))) /\ (((real_pow (real_pow x p) q) = (real_pow x (Nat.mul p q))) /\ (((real_pow x (NUMERAL 0)) = (real_of_num (NUMERAL (BIT1 0)))) /\ (((real_pow x (NUMERAL (BIT1 0))) = x) /\ (((real_mul x (real_add y z)) = (real_add (real_mul x y) (real_mul x z))) /\ ((real_pow x (S q)) = (real_mul x (real_pow x q))))))))))))))))))))))))))))))))).
