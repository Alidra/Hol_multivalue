require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem2295095 : Prf (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (= (real_of_int x) (real_of_int y)) (= x y)))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_ge (real_of_int x) (real_of_int y)) (int_ge x y)))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_gt (real_of_int x) (real_of_int y)) (int_gt x y)))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_le (real_of_int x) (real_of_int y)) (int_le x y)))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_lt (real_of_int x) (real_of_int y)) (int_lt x y)))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_max (real_of_int x) (real_of_int y)) (real_of_int (int_max x y))))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_min (real_of_int x) (real_of_int y)) (real_of_int (int_min x y))))))) (∧ (∀ (λ n : El num, (= (real_of_num n) (real_of_int (int_of_num n))))) (∧ (∀ (λ x : El int, (= (real_neg (real_of_int x)) (real_of_int (int_neg x))))) (∧ (∀ (λ x : El int, (= (real_abs (real_of_int x)) (real_of_int (int_abs x))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_max (real_of_int x) (real_of_int y)) (real_of_int (int_max x y))))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_min (real_of_int x) (real_of_int y)) (real_of_int (int_min x y))))))) (∧ (∀ (λ x : El int, (= (real_sgn (real_of_int x)) (real_of_int (int_sgn x))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_add (real_of_int x) (real_of_int y)) (real_of_int (int_add x y))))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_sub (real_of_int x) (real_of_int y)) (real_of_int (int_sub x y))))))) (∧ (∀ (λ x : El int, (∀ (λ y : El int, (= (real_mul (real_of_int x) (real_of_int y)) (real_of_int (int_mul x y))))))) (∀ (λ x : El int, (∀ (λ n : El num, (= (real_pow (real_of_int x) n) (real_of_int (int_pow x n)))))))))))))))))))))));
