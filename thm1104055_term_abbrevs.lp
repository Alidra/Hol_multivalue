require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term4 a0 a1 (x0: El a0) (x1: El (type1413 a0 a1)) (x2: El (list a0)) ≔ ((λ y0 : El (list a0), (∀ (λ y1 : El (list a1), (= ((@ALL2 a0 a1) x1 ((@CONS a0) x0 y0) y1) ((@COND bool) (= y1 (@NIL a1)) F (∧ (x1 x0 ((@HD a1) y1)) ((@ALL2 a0 a1) x1 y0 ((@TL a1) y1)))))))) x2);
symbol term5 a0 a1 (x0: El a0) (x1: El (type1413 a0 a1)) (x2: El (list a0)) ≔ (∀ (λ y0 : El (list a1), (= ((@ALL2 a0 a1) x1 ((@CONS a0) x0 x2) y0) ((@COND bool) (= y0 (@NIL a1)) F (∧ (x1 x0 ((@HD a1) y0)) ((@ALL2 a0 a1) x1 x2 ((@TL a1) y0)))))));
symbol term1 a0 a1 (x0: El a0) ≔ (∀ (λ y0 : El (type1413 a0 a1), (∀ (λ y1 : El (list a0), (∀ (λ y2 : El (list a1), (= ((@ALL2 a0 a1) y0 ((@CONS a0) x0 y1) y2) ((@COND bool) (= y2 (@NIL a1)) F (∧ (y0 x0 ((@HD a1) y2)) ((@ALL2 a0 a1) y0 y1 ((@TL a1) y2)))))))))));
symbol term3 a0 a1 (x0: El a0) (x1: El (type1413 a0 a1)) ≔ (∀ (λ y0 : El (list a0), (∀ (λ y1 : El (list a1), (= ((@ALL2 a0 a1) x1 ((@CONS a0) x0 y0) y1) ((@COND bool) (= y1 (@NIL a1)) F (∧ (x1 x0 ((@HD a1) y1)) ((@ALL2 a0 a1) x1 y0 ((@TL a1) y1)))))))));
symbol term2 a0 a1 (x0: El a0) (x1: El (type1413 a0 a1)) ≔ ((λ y0 : El (type1413 a0 a1), (∀ (λ y1 : El (list a0), (∀ (λ y2 : El (list a1), (= ((@ALL2 a0 a1) y0 ((@CONS a0) x0 y1) y2) ((@COND bool) (= y2 (@NIL a1)) F (∧ (y0 x0 ((@HD a1) y2)) ((@ALL2 a0 a1) y0 y1 ((@TL a1) y2)))))))))) x1);
symbol term6 a0 a1 (x0: El a0) (x1: El (type1413 a0 a1)) (x2: El (list a0)) (x3: El (list a1)) ≔ ((λ y0 : El (list a1), (= ((@ALL2 a0 a1) x1 ((@CONS a0) x0 x2) y0) ((@COND bool) (= y0 (@NIL a1)) F (∧ (x1 x0 ((@HD a1) y0)) ((@ALL2 a0 a1) x1 x2 ((@TL a1) y0)))))) x3);
symbol term0 a0 a1 (x0: El a0) ≔ ((λ y0 : El a0, (∀ (λ y1 : El (type1413 a0 a1), (∀ (λ y2 : El (list a0), (∀ (λ y3 : El (list a1), (= ((@ALL2 a0 a1) y1 ((@CONS a0) y0 y2) y3) ((@COND bool) (= y3 (@NIL a1)) F (∧ (y1 y0 ((@HD a1) y3)) ((@ALL2 a0 a1) y1 y2 ((@TL a1) y3)))))))))))) x0);
