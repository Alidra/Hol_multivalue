Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term46 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@iterate nat a0 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a0 Nat.mul y2 y1))).
Definition term45 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@nproduct a0 (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@nproduct a0 y2 y1) (Nat.mul (y1 y0) (@nproduct a0 y2 y1))).
Definition term6 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => (forall y1 : a0, forall y2 : a1, y0 y1 y2) = (forall y1 : a1, forall y2 : a0, y0 y2 y1)) x0.
Definition term54 (a0 : Type') (x0 : a0) := (fun y0 : a0 => fun y1 : a0 -> nat => forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@iterate nat a0 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a0 Nat.mul y2 y1)))) x0.
Definition term28 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul (x2 x0) (@nproduct a0 x1 x2).
Definition term32 (a0 : Type') (x0 : a0 -> Prop) := imp (@FINITE a0 x0).
Definition term27 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := Nat.mul (x0 x1).
Definition term48 (a0 : Type') (a1 : Type') := (forall y0 : a0 -> nat, (@iterate nat a0 Nat.mul (@EMPTY a0) y0) = (@neutral nat Nat.mul)) /\ (forall y0 : a1, forall y1 : a1 -> nat, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@iterate nat a1 Nat.mul (@INSERT a1 y0 y2) y1) = (@COND nat (@IN a1 y0 y2) (@iterate nat a1 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a1 Nat.mul y2 y1)))).
Definition term47 (a0 : Type') (a1 : Type') := (forall y0 : a0 -> nat, (@nproduct a0 (@EMPTY a0) y0) = (NUMERAL (BIT1 0))) /\ (forall y0 : a1, forall y1 : a1 -> nat, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@nproduct a1 (@INSERT a1 y0 y2) y1) = (@COND nat (@IN a1 y0 y2) (@nproduct a1 y2 y1) (Nat.mul (y1 y0) (@nproduct a1 y2 y1)))).
Definition term57 (a0 : Type') (x0 : a0) := fun y0 : a0 -> nat => (fun y1 : a0 => fun y2 : a0 -> nat => forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate nat a0 Nat.mul (@INSERT a0 y1 y3) y2) = (@COND nat (@IN a0 y1 y3) (@iterate nat a0 Nat.mul y3 y2) (Nat.mul (y2 y1) (@iterate nat a0 Nat.mul y3 y2)))) x0 y0.
Definition term34 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 x1) -> (@iterate nat a0 Nat.mul (@INSERT a0 x0 x1) x2) = (@COND nat (@IN a0 x0 x1) (@iterate nat a0 Nat.mul x1 x2) (Nat.mul (x2 x0) (@iterate nat a0 Nat.mul x1 x2))).
Definition term67 (a0 : Type') := fun y0 : a0 -> nat => forall y1 : a0, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y1 y2) y0) = (@COND nat (@IN a0 y1 y2) (@iterate nat a0 Nat.mul y2 y0) (Nat.mul (y0 y1) (@iterate nat a0 Nat.mul y2 y0))).
Definition term44 (a0 : Type') := fun y0 : a0 => forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@iterate nat a0 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a0 Nat.mul y2 y1))).
Definition term43 (a0 : Type') := fun y0 : a0 => forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@nproduct a0 (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@nproduct a0 y2 y1) (Nat.mul (y1 y0) (@nproduct a0 y2 y1))).
Definition term19 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @iterate nat a0 Nat.mul (@INSERT a0 x0 x1).
Definition term62 (a0 : Type') (x0 : a0 -> nat) := fun y0 : a0 => (fun y1 : a0 => fun y2 : a0 -> nat => forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate nat a0 Nat.mul (@INSERT a0 y1 y3) y2) = (@COND nat (@IN a0 y1 y3) (@iterate nat a0 Nat.mul y3 y2) (Nat.mul (y2 y1) (@iterate nat a0 Nat.mul y3 y2)))) y0 x0.
Definition term21 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @iterate nat a0 Nat.mul (@INSERT a0 x0 x1) x2.
Definition term7 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a0, forall y1 : a1, x0 y0 y1.
Definition term63 (a0 : Type') (x0 : a0 -> nat) := fun y0 : a0 => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y1) x0) = (@COND nat (@IN a0 y0 y1) (@iterate nat a0 Nat.mul y1 x0) (Nat.mul (x0 y0) (@iterate nat a0 Nat.mul y1 x0))).
Definition term51 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> nat, (fun y2 : a0 => fun y3 : a0 -> nat => forall y4 : a0 -> Prop, (@FINITE a0 y4) -> (@iterate nat a0 Nat.mul (@INSERT a0 y2 y4) y3) = (@COND nat (@IN a0 y2 y4) (@iterate nat a0 Nat.mul y4 y3) (Nat.mul (y3 y2) (@iterate nat a0 Nat.mul y4 y3)))) y0 y1.
Definition term49 (a0 : Type') (x0 : type1366 a0) := forall y0 : a0, forall y1 : a0 -> nat, x0 y0 y1.
Definition term16 (a0 : Type') := and (forall y0 : a0 -> nat, (@nproduct a0 (@EMPTY a0) y0) = (NUMERAL (BIT1 0))).
Definition term13 (a0 : Type') := fun y0 : a0 -> nat => (@iterate nat a0 Nat.mul (@EMPTY a0) y0) = (@neutral nat Nat.mul).
Definition term17 (a0 : Type') := and (forall y0 : a0 -> nat, (@iterate nat a0 Nat.mul (@EMPTY a0) y0) = (@neutral nat Nat.mul)).
Definition term56 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := (fun y0 : a0 -> nat => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate nat a0 Nat.mul (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@iterate nat a0 Nat.mul y1 y0) (Nat.mul (y0 x0) (@iterate nat a0 Nat.mul y1 y0)))) x1.
Definition term33 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 x1) -> (@nproduct a0 (@INSERT a0 x0 x1) x2) = (@COND nat (@IN a0 x0 x1) (@nproduct a0 x1 x2) (Nat.mul (x2 x0) (@nproduct a0 x1 x2))).
Definition term18 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @nproduct a0 (@INSERT a0 x0 x1).
Definition term15 (a0 : Type') := forall y0 : a0 -> nat, (@iterate nat a0 Nat.mul (@EMPTY a0) y0) = (@neutral nat Nat.mul).
Definition term71 (a0 : Type') (a1 : Type') := (@monoidal nat Nat.mul) -> (forall y0 : a0 -> nat, (@iterate nat a0 Nat.mul (@EMPTY a0) y0) = (@neutral nat Nat.mul)) /\ (forall y0 : a1 -> nat, forall y1 : a1, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@iterate nat a1 Nat.mul (@INSERT a1 y1 y2) y0) = (@COND nat (@IN a1 y1 y2) (@iterate nat a1 Nat.mul y2 y0) (Nat.mul (y0 y1) (@iterate nat a1 Nat.mul y2 y0)))).
Definition term29 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul (x2 x0) (@iterate nat a0 Nat.mul x1 x2).
Definition term22 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @eq nat (@nproduct a0 (@INSERT a0 x0 x1) x2).
Definition term69 (a0 : Type') (a1 : Type') := (forall y0 : a0 -> nat, (@iterate nat a0 Nat.mul (@EMPTY a0) y0) = (@neutral nat Nat.mul)) /\ (forall y0 : a1 -> nat, forall y1 : a1, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@iterate nat a1 Nat.mul (@INSERT a1 y1 y2) y0) = (@COND nat (@IN a1 y1 y2) (@iterate nat a1 Nat.mul y2 y0) (Nat.mul (y0 y1) (@iterate nat a1 Nat.mul y2 y0)))).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (forall y0 : a0 -> a1, (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0)) /\ (forall y0 : a2 -> a1, forall y1 : a2, forall y2 : a2 -> Prop, (@FINITE a2 y2) -> (@iterate a1 a2 x0 (@INSERT a2 y1 y2) y0) = (@COND a1 (@IN a2 y1 y2) (@iterate a1 a2 x0 y2 y0) (x0 (y0 y1) (@iterate a1 a2 x0 y2 y0)))).
Definition term58 (a0 : Type') (x0 : a0) := forall y0 : a0 -> nat, (fun y1 : a0 => fun y2 : a0 -> nat => forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate nat a0 Nat.mul (@INSERT a0 y1 y3) y2) = (@COND nat (@IN a0 y1 y3) (@iterate nat a0 Nat.mul y3 y2) (Nat.mul (y2 y1) (@iterate nat a0 Nat.mul y3 y2)))) x0 y0.
Definition term31 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @COND nat (@IN a0 x0 x1) (@iterate nat a0 Nat.mul x1 x2) (Nat.mul (x2 x0) (@iterate nat a0 Nat.mul x1 x2)).
Definition term38 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@iterate nat a0 Nat.mul (@INSERT a0 x0 y0) x1) = (@COND nat (@IN a0 x0 y0) (@iterate nat a0 Nat.mul y0 x1) (Nat.mul (x1 x0) (@iterate nat a0 Nat.mul y0 x1))).
Definition term37 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@nproduct a0 (@INSERT a0 x0 y0) x1) = (@COND nat (@IN a0 x0 y0) (@nproduct a0 y0 x1) (Nat.mul (x1 x0) (@nproduct a0 y0 x1))).
Definition term30 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @COND nat (@IN a0 x0 x1) (@nproduct a0 x1 x2) (Nat.mul (x2 x0) (@nproduct a0 x1 x2)).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (fun y0 : type1400 a1 => (@monoidal a1 y0) -> (forall y1 : a0 -> a1, (@iterate a1 a0 y0 (@EMPTY a0) y1) = (@neutral a1 y0)) /\ (forall y1 : a2 -> a1, forall y2 : a2, forall y3 : a2 -> Prop, (@FINITE a2 y3) -> (@iterate a1 a2 y0 (@INSERT a2 y2 y3) y1) = (@COND a1 (@IN a2 y2 y3) (@iterate a1 a2 y0 y3 y1) (y0 (y1 y2) (@iterate a1 a2 y0 y3 y1))))) x0.
Definition term12 (a0 : Type') := fun y0 : a0 -> nat => (@nproduct a0 (@EMPTY a0) y0) = (NUMERAL (BIT1 0)).
Definition term8 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : a1, forall y1 : a0, x0 y1 y0.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1400 a1, (@monoidal a1 y0) -> (forall y1 : a0 -> a1, (@iterate a1 a0 y0 (@EMPTY a0) y1) = (@neutral a1 y0)) /\ (forall y1 : a2 -> a1, forall y2 : a2, forall y3 : a2 -> Prop, (@FINITE a2 y3) -> (@iterate a1 a2 y0 (@INSERT a2 y2 y3) y1) = (@COND a1 (@IN a2 y2 y3) (@iterate a1 a2 y0 y3 y1) (y0 (y1 y2) (@iterate a1 a2 y0 y3 y1)))).
Definition term11 (a0 : Type') (x0 : a0 -> nat) := @eq nat (@iterate nat a0 Nat.mul (@EMPTY a0) x0).
Definition term66 (a0 : Type') := fun y0 : a0 -> nat => forall y1 : a0, (fun y2 : a0 => fun y3 : a0 -> nat => forall y4 : a0 -> Prop, (@FINITE a0 y4) -> (@iterate nat a0 Nat.mul (@INSERT a0 y2 y4) y3) = (@COND nat (@IN a0 y2 y4) (@iterate nat a0 Nat.mul y4 y3) (Nat.mul (y3 y2) (@iterate nat a0 Nat.mul y4 y3)))) y1 y0.
Definition term36 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@iterate nat a0 Nat.mul (@INSERT a0 x0 y0) x1) = (@COND nat (@IN a0 x0 y0) (@iterate nat a0 Nat.mul y0 x1) (Nat.mul (x1 x0) (@iterate nat a0 Nat.mul y0 x1))).
Definition term35 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@nproduct a0 (@INSERT a0 x0 y0) x1) = (@COND nat (@IN a0 x0 y0) (@nproduct a0 y0 x1) (Nat.mul (x1 x0) (@nproduct a0 y0 x1))).
Definition term40 (a0 : Type') (x0 : a0) := fun y0 : a0 -> nat => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate nat a0 Nat.mul (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@iterate nat a0 Nat.mul y1 y0) (Nat.mul (y0 x0) (@iterate nat a0 Nat.mul y1 y0))).
Definition term39 (a0 : Type') (x0 : a0) := fun y0 : a0 -> nat => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@nproduct a0 (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@nproduct a0 y1 y0) (Nat.mul (y0 x0) (@nproduct a0 y1 y0))).
Definition term42 (a0 : Type') (x0 : a0) := forall y0 : a0 -> nat, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate nat a0 Nat.mul (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@iterate nat a0 Nat.mul y1 y0) (Nat.mul (y0 x0) (@iterate nat a0 Nat.mul y1 y0))).
Definition term41 (a0 : Type') (x0 : a0) := forall y0 : a0 -> nat, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@nproduct a0 (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@nproduct a0 y1 y0) (Nat.mul (y0 x0) (@nproduct a0 y1 y0))).
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (forall y0 : type1400 a1, (@monoidal a1 y0) -> (forall y1 : a0 -> a1, (@iterate a1 a0 y0 (@EMPTY a0) y1) = (@neutral a1 y0)) /\ (forall y1 : a2 -> a1, forall y2 : a2, forall y3 : a2 -> Prop, (@FINITE a2 y3) -> (@iterate a1 a2 y0 (@INSERT a2 y2 y3) y1) = (@COND a1 (@IN a2 y2 y3) (@iterate a1 a2 y0 y3 y1) (y0 (y1 y2) (@iterate a1 a2 y0 y3 y1))))) -> (forall y0 : a0 -> a1, (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0)) /\ (forall y0 : a2 -> a1, forall y1 : a2, forall y2 : a2 -> Prop, (@FINITE a2 y2) -> (@iterate a1 a2 x0 (@INSERT a2 y1 y2) y0) = (@COND a1 (@IN a2 y1 y2) (@iterate a1 a2 x0 y2 y0) (x0 (y0 y1) (@iterate a1 a2 x0 y2 y0)))).
Definition term61 (a0 : Type') := @eq Prop (forall y0 : a0, forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@iterate nat a0 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a0 Nat.mul y2 y1)))).
Definition term60 (a0 : Type') := @eq Prop (forall y0 : a0, forall y1 : a0 -> nat, (fun y2 : a0 => fun y3 : a0 -> nat => forall y4 : a0 -> Prop, (@FINITE a0 y4) -> (@iterate nat a0 Nat.mul (@INSERT a0 y2 y4) y3) = (@COND nat (@IN a0 y2 y4) (@iterate nat a0 Nat.mul y4 y3) (Nat.mul (y3 y2) (@iterate nat a0 Nat.mul y4 y3)))) y0 y1).
Definition term55 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := (fun y0 : a0 => fun y1 : a0 -> nat => forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@iterate nat a0 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a0 Nat.mul y2 y1)))) x0 x1.
Definition term70 (a0 : Type') (a1 : Type') (x0 : type1606) := (@monoidal nat x0) -> (forall y0 : a0 -> nat, (@iterate nat a0 x0 (@EMPTY a0) y0) = (@neutral nat x0)) /\ (forall y0 : a1 -> nat, forall y1 : a1, forall y2 : a1 -> Prop, (@FINITE a1 y2) -> (@iterate nat a1 x0 (@INSERT a1 y1 y2) y0) = (@COND nat (@IN a1 y1 y2) (@iterate nat a1 x0 y2 y0) (x0 (y0 y1) (@iterate nat a1 x0 y2 y0)))).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1400 a1) := (@monoidal a1 x0) -> (forall y0 : a0 -> a1, (@iterate a1 a0 x0 (@EMPTY a0) y0) = (@neutral a1 x0)) /\ (forall y0 : a2 -> a1, forall y1 : a2, forall y2 : a2 -> Prop, (@FINITE a2 y2) -> (@iterate a1 a2 x0 (@INSERT a2 y1 y2) y0) = (@COND a1 (@IN a2 y1 y2) (@iterate a1 a2 x0 y2 y0) (x0 (y0 y1) (@iterate a1 a2 x0 y2 y0)))).
Definition term26 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @COND nat (@IN a0 x0 x1) (@iterate nat a0 Nat.mul x1 x2).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') := (forall y0 : type1400 a1, (@monoidal a1 y0) -> (forall y1 : a0 -> a1, (@iterate a1 a0 y0 (@EMPTY a0) y1) = (@neutral a1 y0)) /\ (forall y1 : a2 -> a1, forall y2 : a2, forall y3 : a2 -> Prop, (@FINITE a2 y3) -> (@iterate a1 a2 y0 (@INSERT a2 y2 y3) y1) = (@COND a1 (@IN a2 y2 y3) (@iterate a1 a2 y0 y3 y1) (y0 (y1 y2) (@iterate a1 a2 y0 y3 y1))))) -> forall y0 : type1400 a1, (@monoidal a1 y0) -> (forall y1 : a0 -> a1, (@iterate a1 a0 y0 (@EMPTY a0) y1) = (@neutral a1 y0)) /\ (forall y1 : a2 -> a1, forall y2 : a2, forall y3 : a2 -> Prop, (@FINITE a2 y3) -> (@iterate a1 a2 y0 (@INSERT a2 y2 y3) y1) = (@COND a1 (@IN a2 y2 y3) (@iterate a1 a2 y0 y3 y1) (y0 (y1 y2) (@iterate a1 a2 y0 y3 y1)))).
Definition term53 (a0 : Type') := fun y0 : a0 => fun y1 : a0 -> nat => forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@iterate nat a0 Nat.mul y2 y1) (Nat.mul (y1 y0) (@iterate nat a0 Nat.mul y2 y1))).
Definition term23 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @eq nat (@iterate nat a0 Nat.mul (@INSERT a0 x0 x1) x2).
Definition term10 (a0 : Type') (x0 : a0 -> nat) := @eq nat (@nproduct a0 (@EMPTY a0) x0).
Definition term25 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @COND nat (@IN a0 x0 x1) (@nproduct a0 x1 x2).
Definition term52 (a0 : Type') := forall y0 : a0 -> nat, forall y1 : a0, (fun y2 : a0 => fun y3 : a0 -> nat => forall y4 : a0 -> Prop, (@FINITE a0 y4) -> (@iterate nat a0 Nat.mul (@INSERT a0 y2 y4) y3) = (@COND nat (@IN a0 y2 y4) (@iterate nat a0 Nat.mul y4 y3) (Nat.mul (y3 y2) (@iterate nat a0 Nat.mul y4 y3)))) y1 y0.
Definition term50 (a0 : Type') (x0 : type1366 a0) := forall y0 : a0 -> nat, forall y1 : a0, x0 y1 y0.
Definition term68 (a0 : Type') := forall y0 : a0 -> nat, forall y1 : a0, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@iterate nat a0 Nat.mul (@INSERT a0 y1 y2) y0) = (@COND nat (@IN a0 y1 y2) (@iterate nat a0 Nat.mul y2 y0) (Nat.mul (y0 y1) (@iterate nat a0 Nat.mul y2 y0))).
Definition term59 (a0 : Type') := fun y0 : a0 => forall y1 : a0 -> nat, (fun y2 : a0 => fun y3 : a0 -> nat => forall y4 : a0 -> Prop, (@FINITE a0 y4) -> (@iterate nat a0 Nat.mul (@INSERT a0 y2 y4) y3) = (@COND nat (@IN a0 y2 y4) (@iterate nat a0 Nat.mul y4 y3) (Nat.mul (y3 y2) (@iterate nat a0 Nat.mul y4 y3)))) y0 y1.
Definition term14 (a0 : Type') := forall y0 : a0 -> nat, (@nproduct a0 (@EMPTY a0) y0) = (NUMERAL (BIT1 0)).
Definition term64 (a0 : Type') (x0 : a0 -> nat) := forall y0 : a0, (fun y1 : a0 => fun y2 : a0 -> nat => forall y3 : a0 -> Prop, (@FINITE a0 y3) -> (@iterate nat a0 Nat.mul (@INSERT a0 y1 y3) y2) = (@COND nat (@IN a0 y1 y3) (@iterate nat a0 Nat.mul y3 y2) (Nat.mul (y2 y1) (@iterate nat a0 Nat.mul y3 y2)))) y0 x0.
Definition term20 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @nproduct a0 (@INSERT a0 x0 x1) x2.
Definition term65 (a0 : Type') (x0 : a0 -> nat) := forall y0 : a0, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@iterate nat a0 Nat.mul (@INSERT a0 y0 y1) x0) = (@COND nat (@IN a0 y0 y1) (@iterate nat a0 Nat.mul y1 x0) (Nat.mul (x0 y0) (@iterate nat a0 Nat.mul y1 x0))).
Definition term24 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @COND nat (@IN a0 x0 x1).
Definition term9 := NUMERAL (BIT1 0).
