Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) (x4 : Prop) (x5 : Prop) := (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) = x4) -> (x4 -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = x5) -> (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = (x4 -> x5).
Definition term21 (a0 : Type') (x0 : a0 -> Prop) := or (x0 = (@EMPTY a0)).
Definition term20 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := and (@SUBSET a0 x0 x1).
Definition term32 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term39 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, forall y2 : a0 -> Prop, forall y3 : a1 -> Prop, ((@SUBSET a0 y0 y2) /\ (@SUBSET a1 y1 y3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 y0 y1) (@CROSS a1 a0 y2 y3).
Definition term37 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : a1 -> Prop, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, ((@SUBSET a0 x0 y1) /\ (@SUBSET a1 y0 y2)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 y0) (@CROSS a1 a0 y1 y2).
Definition term1 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : a1 -> Prop, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 y0) (@CROSS a1 a0 y1 y2)) = ((x0 = (@EMPTY a0)) \/ ((y0 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 y1) /\ (@SUBSET a1 y0 y2)))).
Definition term23 (a0 : Type') (x0 : a0 -> Prop) := (x0 = (@EMPTY a0)) \/ True.
Definition term0 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, forall y2 : a0 -> Prop, forall y3 : a1 -> Prop, (@SUBSET (prod a0 a1) (@CROSS a1 a0 y0 y1) (@CROSS a1 a0 y2 y3)) = ((y0 = (@EMPTY a0)) \/ ((y1 = (@EMPTY a1)) \/ ((@SUBSET a0 y0 y2) /\ (@SUBSET a1 y1 y3))))) x0.
Definition term36 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : a1 -> Prop => forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, ((@SUBSET a0 x0 y1) /\ (@SUBSET a1 y0 y2)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 y0) (@CROSS a1 a0 y1 y2).
Definition term33 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, x0.
Definition term7 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) := @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3).
Definition term30 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) := forall y0 : a1 -> Prop, ((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 y0)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 y0).
Definition term18 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) (x4 : Prop) := (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) = ((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3))) -> (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 x3)) = x4) -> (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 x3)) = (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> x4).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) := (@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, ((@SUBSET a0 x0 y0) /\ (@SUBSET a1 x1 y1)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 y0 y1).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) := ((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) := (fun y0 : a1 -> Prop => (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 y0)) = ((x0 = (@EMPTY a0)) \/ ((x2 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 y0))))) x3.
Definition term4 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 y0 y1)) = ((x0 = (@EMPTY a0)) \/ ((x1 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 y0) /\ (@SUBSET a1 x1 y1))))) x2.
Definition term9 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) := (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 x3)) = True) -> (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 x3)) = (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> True).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) := ((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = True.
Definition term19 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) (x4 : Prop) := (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 x3)) = x4) -> (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 x3)) = (((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> x4).
Definition term15 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) (x4 : Prop) := forall y0 : Prop, (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) = x4) -> (x4 -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = y0) -> (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = (x4 -> y0).
Definition term10 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term29 (a0 : Type') := fun y0 : a0 -> Prop => True.
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) := forall y0 : Prop, forall y1 : Prop, (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) = y0) -> (y0 -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = y1) -> (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = (y0 -> y1).
Definition term11 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term35 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, ((@SUBSET a0 x0 y0) /\ (@SUBSET a1 x1 y1)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 y0 y1).
Definition term3 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 y0 y1)) = ((x0 = (@EMPTY a0)) \/ ((x1 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 y0) /\ (@SUBSET a1 x1 y1)))).
Definition term16 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) (x4 : Prop) (x5 : Prop) := (fun y0 : Prop => (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) = x4) -> (x4 -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = y0) -> (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = (x4 -> y0)) x5.
Definition term2 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 y0) (@CROSS a1 a0 y1 y2)) = ((x0 = (@EMPTY a0)) \/ ((y0 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 y1) /\ (@SUBSET a1 y0 y2))))) x1.
Definition term8 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) := (x0 = (@EMPTY a0)) \/ ((x2 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3))).
Definition term28 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) := fun y0 : a1 -> Prop => ((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 y0)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 y0).
Definition term27 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) := ((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)) -> True.
Definition term38 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, forall y2 : a0 -> Prop, forall y3 : a1 -> Prop, ((@SUBSET a0 y0 y2) /\ (@SUBSET a1 y1 y3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 y0 y1) (@CROSS a1 a0 y2 y3).
Definition term14 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0 -> Prop) (x3 : a1 -> Prop) (x4 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) = y0) -> (y0 -> (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = y1) -> (((@SUBSET a0 x0 x2) /\ (@SUBSET a1 x1 x3)) -> @SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x1) (@CROSS a1 a0 x2 x3)) = (y0 -> y1)) x4.
Definition term5 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := forall y0 : a1 -> Prop, (@SUBSET (prod a0 a1) (@CROSS a1 a0 x0 x2) (@CROSS a1 a0 x1 y0)) = ((x0 = (@EMPTY a0)) \/ ((x2 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 y0)))).
Definition term31 (a0 : Type') := forall y0 : a0 -> Prop, True.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a1 -> Prop) := (x2 = (@EMPTY a1)) \/ ((@SUBSET a0 x0 x1) /\ (@SUBSET a1 x2 x3)).
