Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term19 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : Prop) := (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = x2) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> x2).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : type1412 a0 a1 a2) := ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 (x1 y0))) -> @FINITE a2 (@GSPEC a2 (fun y0 : a2 => exists y1 : a0, exists y2 : a1, @SETSPEC a2 y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (x2 y1 y2))).
Definition term28 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := (@IN a0 x0 x1) -> @FINITE a1 x2.
Definition term81 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : a1 -> Prop, ((@FINITE a0 x0) /\ (@FINITE a1 y0)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 y0)) (@pair a0 a1 y2 y3))).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> Prop) (x1 : type1412 a0 a1 a2) := forall y0 : type1413 a0 a1, ((@FINITE a0 x0) /\ (forall y1 : a0, (@IN a0 y1 x0) -> @FINITE a1 (y0 y1))) -> @FINITE a2 (@GSPEC a2 (fun y1 : a2 => exists y2 : a0, exists y3 : a1, @SETSPEC a2 y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (y0 y2))) (x1 y2 y3))).
Definition term74 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term51 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 x2)) (@pair a0 a1 y0 y1).
Definition term50 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := fun y0 : a0 => exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 ((fun y2 : a0 => x2) y0))) (@pair a0 a1 y0 y1).
Definition term40 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1) (x2 : a1 -> Prop) (x3 : a0) := (@IN a0 x3 x0) /\ (@IN a1 x1 ((fun y0 : a0 => x2) x3)).
Definition term67 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : a0 -> Prop) (x3 : Prop) := ((@IN a0 x1 x2) = (@IN a0 x1 x2)) -> ((@IN a0 x1 x2) -> (@FINITE a1 x0) = x3) -> ((@IN a0 x1 x2) -> @FINITE a1 x0) = ((@IN a0 x1 x2) -> x3).
Definition term29 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := fun y0 : a0 => (@IN a0 y0 x0) -> @FINITE a1 ((fun y1 : a0 => x1) y0).
Definition term73 (a0 : Type') := forall y0 : a0, True.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1412 a0 a1 a2) := (fun y0 : type1412 a0 a1 a2 => forall y1 : a0 -> Prop, forall y2 : type1413 a0 a1, ((@FINITE a0 y1) /\ (forall y3 : a0, (@IN a0 y3 y1) -> @FINITE a1 (y2 y3))) -> @FINITE a2 (@GSPEC a2 (fun y3 : a2 => exists y4 : a0, exists y5 : a1, @SETSPEC a2 y3 ((@IN a0 y4 y1) /\ (@IN a1 y5 (y2 y4))) (y0 y4 y5)))) x0.
Definition term53 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 x2)) (@pair a0 a1 y0 y1).
Definition term52 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := exists y0 : a0, exists y1 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 y0 x1) /\ (@IN a1 y1 ((fun y2 : a0 => x2) y0))) (@pair a0 a1 y0 y1).
Definition term41 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) (x3 : a1 -> Prop) := (@IN a0 x0 x1) /\ (@IN a1 x2 x3).
Definition term71 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (@IN a0 x0 x1) -> True.
Definition term83 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, x0.
Definition term55 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2).
Definition term54 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 ((fun y3 : a0 => x1) y1))) (@pair a0 a1 y1 y2).
Definition term44 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a0) (x4 : a1) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 x4 ((fun y0 : a0 => x2) x3))) (@pair a0 a1 x3 x4).
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := (@FINITE a0 x0) /\ (@FINITE a1 x1).
Definition term75 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := ((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = True.
Definition term70 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : a0 -> Prop) := ((@IN a0 x1 x2) -> (@FINITE a1 x0) = True) -> ((@IN a0 x1 x2) -> @FINITE a1 x0) = ((@IN a0 x1 x2) -> True).
Definition term63 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@IN a0 x0 x1) = y0) -> (y0 -> (@FINITE a1 x2) = y1) -> ((@IN a0 x0 x1) -> @FINITE a1 x2) = (y0 -> y1)) x3.
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1412 a0 a1 a2) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : type1413 a0 a1, ((@FINITE a0 y0) /\ (forall y2 : a0, (@IN a0 y2 y0) -> @FINITE a1 (y1 y2))) -> @FINITE a2 (@GSPEC a2 (fun y2 : a2 => exists y3 : a0, exists y4 : a1, @SETSPEC a2 y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (x0 y3 y4)))) x1.
Definition term30 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := fun y0 : a0 => (@IN a0 y0 x0) -> @FINITE a1 x1.
Definition term69 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := (@IN a0 x0 x1) -> (@FINITE a1 x2) = True.
Definition term33 (a0 : Type') (x0 : a0 -> Prop) := and (@FINITE a0 x0).
Definition term8 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term66 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : Prop) (x4 : Prop) := ((@IN a0 x0 x1) = x3) -> (x3 -> (@FINITE a1 x2) = x4) -> ((@IN a0 x0 x1) -> @FINITE a1 x2) = (x3 -> x4).
Definition term47 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 x2)) (@pair a0 a1 x3 y0).
Definition term39 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := and (@IN a0 x0 x1).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : type1412 a0 a1 a2) := @FINITE a2 (@GSPEC a2 (fun y0 : a2 => exists y1 : a0, exists y2 : a1, @SETSPEC a2 y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (x2 y1 y2))).
Definition term37 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := imp ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 x1)).
Definition term36 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := imp ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 ((fun y1 : a0 => x1) y0))).
Definition term27 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : a0) := (@IN a0 x2 x0) -> @FINITE a1 ((fun y0 : a0 => x1) x2).
Definition term31 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 ((fun y1 : a0 => x1) y0).
Definition term49 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 x2)) (@pair a0 a1 x3 y0).
Definition term48 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a0) := exists y0 : a1, @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 ((fun y1 : a0 => x2) x3))) (@pair a0 a1 x3 y0).
Definition term61 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 x1)) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = True.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 ((fun y1 : a0 => x1) y0))) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 ((fun y3 : a0 => x1) y1))) (@pair a0 a1 y1 y2)))) = True.
Definition term21 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : type1409 a0 a1) := ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 (x1 y0))) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (x2 y1 y2)))) = True.
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) (x2 : type1412 a0 a1 a2) := ((@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 (x1 y0))) -> (@FINITE a2 (@GSPEC a2 (fun y0 : a2 => exists y1 : a0, exists y2 : a1, @SETSPEC a2 y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 (x1 y1))) (x2 y1 y2)))) = True.
Definition term72 (a0 : Type') := fun y0 : a0 => True.
Definition term16 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => (((@FINITE a0 x0) /\ (@FINITE a1 x1)) = x2) -> (x2 -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 x1)) (@pair a0 a1 y2 y3)))) = y0) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 x1)) (@pair a0 a1 y2 y3)))) = (x2 -> y0)) x3.
Definition term32 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 x1.
Definition term38 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : a1 -> Prop) (x2 : a0) := @IN a1 x0 ((fun y0 : a0 => x1) x2).
Definition term64 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : Prop) := forall y0 : Prop, ((@IN a0 x0 x1) = x3) -> (x3 -> (@FINITE a1 x2) = y0) -> ((@IN a0 x0 x1) -> @FINITE a1 x2) = (x3 -> y0).
Definition term15 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : Prop) := forall y0 : Prop, (((@FINITE a0 x0) /\ (@FINITE a1 x1)) = x2) -> (x2 -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 x1)) (@pair a0 a1 y2 y3)))) = y0) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 x1)) (@pair a0 a1 y2 y3)))) = (x2 -> y0).
Definition term9 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term80 (a0 : Type') := fun y0 : a0 -> Prop => True.
Definition term62 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) := forall y0 : Prop, forall y1 : Prop, ((@IN a0 x0 x1) = y0) -> (y0 -> (@FINITE a1 x2) = y1) -> ((@IN a0 x0 x1) -> @FINITE a1 x2) = (y0 -> y1).
Definition term11 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := forall y0 : Prop, forall y1 : Prop, (((@FINITE a0 x0) /\ (@FINITE a1 x1)) = y0) -> (y0 -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 x1)) (@pair a0 a1 y3 y4)))) = y1) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 x1)) (@pair a0 a1 y3 y4)))) = (y0 -> y1).
Definition term10 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term26 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := imp (@IN a0 x0 x1).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) := @FINITE a1 ((fun y0 : a0 => x0) x1).
Definition term79 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := fun y0 : a1 -> Prop => ((@FINITE a0 x0) /\ (@FINITE a1 y0)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y1 : prod a0 a1 => exists y2 : a0, exists y3 : a1, @SETSPEC (prod a0 a1) y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 y0)) (@pair a0 a1 y2 y3))).
Definition term85 (a0 : Type') (a1 : Type') := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, ((@FINITE a0 y0) /\ (@FINITE a1 y1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 y1)) (@pair a0 a1 y3 y4))).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1412 a0 a1 a2) := forall y0 : a0 -> Prop, forall y1 : type1413 a0 a1, ((@FINITE a0 y0) /\ (forall y2 : a0, (@IN a0 y2 y0) -> @FINITE a1 (y1 y2))) -> @FINITE a2 (@GSPEC a2 (fun y2 : a2 => exists y3 : a0, exists y4 : a1, @SETSPEC a2 y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 (y1 y3))) (x0 y3 y4))).
Definition term65 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((@IN a0 x0 x1) = x3) -> (x3 -> (@FINITE a1 x2) = y0) -> ((@IN a0 x0 x1) -> @FINITE a1 x2) = (x3 -> y0)) x4.
Definition term76 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = True) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> True).
Definition term60 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := @eq Prop (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))).
Definition term59 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := @eq Prop (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 ((fun y3 : a0 => x1) y1))) (@pair a0 a1 y1 y2)))).
Definition term57 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)).
Definition term56 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 ((fun y3 : a0 => x1) y1))) (@pair a0 a1 y1 y2)).
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : Prop) (x3 : Prop) := (((@FINITE a0 x0) /\ (@FINITE a1 x1)) = x2) -> (x2 -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = x3) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = (x2 -> x3).
Definition term23 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) := fun y0 : a0 => x0.
Definition term35 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := (@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 x1).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := (@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 ((fun y1 : a0 => x1) y0)).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1413 a0 a1) := (@FINITE a0 x0) /\ (forall y0 : a0, (@IN a0 y0 x0) -> @FINITE a1 (x1 y0)).
Definition term78 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := ((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> True.
Definition term84 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, ((@FINITE a0 y0) /\ (@FINITE a1 y1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 y0) /\ (@IN a1 y4 y1)) (@pair a0 a1 y3 y4))).
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> Prop) (x1 : type1412 a0 a1 a2) (x2 : type1413 a0 a1) := (fun y0 : type1413 a0 a1 => ((@FINITE a0 x0) /\ (forall y1 : a0, (@IN a0 y1 x0) -> @FINITE a1 (y0 y1))) -> @FINITE a2 (@GSPEC a2 (fun y1 : a2 => exists y2 : a0, exists y3 : a1, @SETSPEC a2 y1 ((@IN a0 y2 x0) /\ (@IN a1 y3 (y0 y2))) (x1 y2 y3)))) x2.
Definition term46 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a0) := fun y0 : a1 => @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 y0 ((fun y1 : a0 => x2) x3))) (@pair a0 a1 x3 y0).
Definition term43 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0) (x2 : a0 -> Prop) (x3 : a1) (x4 : a1 -> Prop) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x1 x2) /\ (@IN a1 x3 x4)).
Definition term18 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : Prop) := (((@FINITE a0 x0) /\ (@FINITE a1 x1)) = ((@FINITE a0 x0) /\ (@FINITE a1 x1))) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = x2) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2)))) = (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> x2).
Definition term42 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1) (x3 : a1 -> Prop) (x4 : a0) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x4 x1) /\ (@IN a1 x2 ((fun y0 : a0 => x3) x4))).
Definition term77 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := ((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2))).
Definition term14 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, (((@FINITE a0 x0) /\ (@FINITE a1 x1)) = y0) -> (y0 -> (@FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 x1)) (@pair a0 a1 y3 y4)))) = y1) -> (((@FINITE a0 x0) /\ (@FINITE a1 x1)) -> @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y2 : prod a0 a1 => exists y3 : a0, exists y4 : a1, @SETSPEC (prod a0 a1) y2 ((@IN a0 y3 x0) /\ (@IN a1 y4 x1)) (@pair a0 a1 y3 y4)))) = (y0 -> y1)) x2.
Definition term58 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 ((fun y3 : a0 => x1) y1))) (@pair a0 a1 y1 y2))).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a1 -> Prop) := @FINITE (prod a0 a1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : a0, exists y2 : a1, @SETSPEC (prod a0 a1) y0 ((@IN a0 y1 x0) /\ (@IN a1 y2 x1)) (@pair a0 a1 y1 y2))).
Definition term68 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) (x2 : a0 -> Prop) (x3 : Prop) := ((@IN a0 x1 x2) -> (@FINITE a1 x0) = x3) -> ((@IN a0 x1 x2) -> @FINITE a1 x0) = ((@IN a0 x1 x2) -> x3).
Definition term45 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) (x2 : a1 -> Prop) (x3 : a0) (x4 : a1) := @SETSPEC (prod a0 a1) x0 ((@IN a0 x3 x1) /\ (@IN a1 x4 x2)) (@pair a0 a1 x3 x4).
Definition term82 (a0 : Type') := forall y0 : a0 -> Prop, True.
Definition term24 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a0) := (fun y0 : a0 => x0) x1.
