require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term39 a0 ≔ (∀ (λ y0 : El a0, (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El (list a0), (= ((@FILTER a0) y1 ((@CONS a0) y0 y2)) ((@COND (list a0)) (y1 y0) ((@CONS a0) y0 ((@FILTER a0) y1 y2)) ((@FILTER a0) y1 y2)))))))));
symbol term38 a0 ≔ (∀ (λ y0 : El a0, (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 ((@CONS a0) y0 y2)) ((@COND (list a0)) (y1 y0) ((@CONS a0) y0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 y2)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 y2)))))))));
symbol term9 a0 (x0: El (fun a0 bool)) ≔ ((@= (list a0)) ((@FILTER a0) x0 (@NIL a0)));
symbol term20 a0 (x0: El (fun a0 bool)) (x1: El (list a0)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x0 x1);
symbol term2 a0 ≔ ((λ y0 : El type1671, (∧ (∀ (λ y1 : El (fun a0 bool), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) y0 y1 (@NIL a0)) (@NIL a0)))) (∀ (λ y1 : El a0, (∀ (λ y2 : El (fun a0 bool), (∀ (λ y3 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y4 : El (type1267 a0), (∀ (λ y5 : El type1671, (∧ (∀ (λ y6 : El (fun a0 bool), (= (y4 y5 y6 (@NIL a0)) (@NIL a0)))) (∀ (λ y6 : El a0, (∀ (λ y7 : El (fun a0 bool), (∀ (λ y8 : El (list a0), (= (y4 y5 y7 ((@CONS a0) y6 y8)) ((@COND (list a0)) (y7 y6) ((@CONS a0) y6 (y4 y5 y7 y8)) (y4 y5 y7 y8))))))))))))) y0 y2 ((@CONS a0) y1 y3)) ((@COND (list a0)) (y2 y1) ((@CONS a0) y1 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y4 : El (type1267 a0), (∀ (λ y5 : El type1671, (∧ (∀ (λ y6 : El (fun a0 bool), (= (y4 y5 y6 (@NIL a0)) (@NIL a0)))) (∀ (λ y6 : El a0, (∀ (λ y7 : El (fun a0 bool), (∀ (λ y8 : El (list a0), (= (y4 y5 y7 ((@CONS a0) y6 y8)) ((@COND (list a0)) (y7 y6) ((@CONS a0) y6 (y4 y5 y7 y8)) (y4 y5 y7 y8))))))))))))) y0 y2 y3)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y4 : El (type1267 a0), (∀ (λ y5 : El type1671, (∧ (∀ (λ y6 : El (fun a0 bool), (= (y4 y5 y6 (@NIL a0)) (@NIL a0)))) (∀ (λ y6 : El a0, (∀ (λ y7 : El (fun a0 bool), (∀ (λ y8 : El (list a0), (= (y4 y5 y7 ((@CONS a0) y6 y8)) ((@COND (list a0)) (y7 y6) ((@CONS a0) y6 (y4 y5 y7 y8)) (y4 y5 y7 y8))))))))))))) y0 y2 y3))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))));
symbol term21 a0 (x0: El a0) (x1: El (fun a0 bool)) (x2: El (list a0)) ≔ ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 x2));
symbol term0 a0 ≔ ((λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4)))))))))))))));
symbol term37 a0 ≔ (λ y0 : El a0, (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El (list a0), (= ((@FILTER a0) y1 ((@CONS a0) y0 y2)) ((@COND (list a0)) (y1 y0) ((@CONS a0) y0 ((@FILTER a0) y1 y2)) ((@FILTER a0) y1 y2))))))));
symbol term36 a0 ≔ (λ y0 : El a0, (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 ((@CONS a0) y0 y2)) ((@COND (list a0)) (y1 y0) ((@CONS a0) y0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 y2)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 y2))))))));
symbol term1 a0 ≔ (∀ (λ y0 : El type1671, (∧ (∀ (λ y1 : El (fun a0 bool), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) y0 y1 (@NIL a0)) (@NIL a0)))) (∀ (λ y1 : El a0, (∀ (λ y2 : El (fun a0 bool), (∀ (λ y3 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y4 : El (type1267 a0), (∀ (λ y5 : El type1671, (∧ (∀ (λ y6 : El (fun a0 bool), (= (y4 y5 y6 (@NIL a0)) (@NIL a0)))) (∀ (λ y6 : El a0, (∀ (λ y7 : El (fun a0 bool), (∀ (λ y8 : El (list a0), (= (y4 y5 y7 ((@CONS a0) y6 y8)) ((@COND (list a0)) (y7 y6) ((@CONS a0) y6 (y4 y5 y7 y8)) (y4 y5 y7 y8))))))))))))) y0 y2 ((@CONS a0) y1 y3)) ((@COND (list a0)) (y2 y1) ((@CONS a0) y1 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y4 : El (type1267 a0), (∀ (λ y5 : El type1671, (∧ (∀ (λ y6 : El (fun a0 bool), (= (y4 y5 y6 (@NIL a0)) (@NIL a0)))) (∀ (λ y6 : El a0, (∀ (λ y7 : El (fun a0 bool), (∀ (λ y8 : El (list a0), (= (y4 y5 y7 ((@CONS a0) y6 y8)) ((@COND (list a0)) (y7 y6) ((@CONS a0) y6 (y4 y5 y7 y8)) (y4 y5 y7 y8))))))))))))) y0 y2 y3)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y4 : El (type1267 a0), (∀ (λ y5 : El type1671, (∧ (∀ (λ y6 : El (fun a0 bool), (= (y4 y5 y6 (@NIL a0)) (@NIL a0)))) (∀ (λ y6 : El a0, (∀ (λ y7 : El (fun a0 bool), (∀ (λ y8 : El (list a0), (= (y4 y5 y7 ((@CONS a0) y6 y8)) ((@COND (list a0)) (y7 y6) ((@CONS a0) y6 (y4 y5 y7 y8)) (y4 y5 y7 y8))))))))))))) y0 y2 y3))))))))))));
symbol term6 a0 (x0: El (fun a0 bool)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x0);
symbol term7 a0 (x0: El (fun a0 bool)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x0 (@NIL a0));
symbol term10 a0 ≔ (λ y0 : El (fun a0 bool), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 (@NIL a0)) (@NIL a0)));
symbol term40 a0 ≔ (∧ (∀ (λ y0 : El (fun a0 bool), (= ((@FILTER a0) y0 (@NIL a0)) (@NIL a0)))) (∀ (λ y0 : El a0, (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El (list a0), (= ((@FILTER a0) y1 ((@CONS a0) y0 y2)) ((@COND (list a0)) (y1 y0) ((@CONS a0) y0 ((@FILTER a0) y1 y2)) ((@FILTER a0) y1 y2))))))))));
symbol term4 a0 ≔ (∧ (∀ (λ y0 : El (fun a0 bool), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 (@NIL a0)) (@NIL a0)))) (∀ (λ y0 : El a0, (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 ((@CONS a0) y0 y2)) ((@COND (list a0)) (y1 y0) ((@CONS a0) y0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 y2)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y3 : El (type1267 a0), (∀ (λ y4 : El type1671, (∧ (∀ (λ y5 : El (fun a0 bool), (= (y3 y4 y5 (@NIL a0)) (@NIL a0)))) (∀ (λ y5 : El a0, (∀ (λ y6 : El (fun a0 bool), (∀ (λ y7 : El (list a0), (= (y3 y4 y6 ((@CONS a0) y5 y7)) ((@COND (list a0)) (y6 y5) ((@CONS a0) y5 (y3 y4 y6 y7)) (y3 y4 y6 y7))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y1 y2))))))))));
symbol term15 a0 ≔ (∧ (∀ (λ y0 : El (fun a0 bool), (= ((@FILTER a0) y0 (@NIL a0)) (@NIL a0)))));
symbol term14 a0 ≔ (∧ (∀ (λ y0 : El (fun a0 bool), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 (@NIL a0)) (@NIL a0)))));
symbol term33 a0 (x0: El a0) ≔ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El (list a0), (= ((@FILTER a0) y0 ((@CONS a0) x0 y1)) ((@COND (list a0)) (y0 x0) ((@CONS a0) x0 ((@FILTER a0) y0 y1)) ((@FILTER a0) y0 y1))))));
symbol term32 a0 (x0: El a0) ≔ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 ((@CONS a0) x0 y1)) ((@COND (list a0)) (y0 x0) ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 y1)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 y1))))));
symbol term28 a0 (x0: El a0) (x1: El (fun a0 bool)) ≔ (λ y0 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 ((@CONS a0) x0 y0)) ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 y0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 y0))));
symbol term29 a0 (x0: El a0) (x1: El (fun a0 bool)) ≔ (λ y0 : El (list a0), (= ((@FILTER a0) x1 ((@CONS a0) x0 y0)) ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@FILTER a0) x1 y0)) ((@FILTER a0) x1 y0))));
symbol term8 a0 (x0: El (fun a0 bool)) ≔ ((@= (list a0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x0 (@NIL a0)));
symbol term23 a0 (x0: El (fun a0 bool)) (x1: El a0) ≔ ((@COND (list a0)) (x0 x1));
symbol term31 a0 (x0: El a0) (x1: El (fun a0 bool)) ≔ (∀ (λ y0 : El (list a0), (= ((@FILTER a0) x1 ((@CONS a0) x0 y0)) ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@FILTER a0) x1 y0)) ((@FILTER a0) x1 y0)))));
symbol term30 a0 (x0: El a0) (x1: El (fun a0 bool)) ≔ (∀ (λ y0 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 ((@CONS a0) x0 y0)) ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 y0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 y0)))));
symbol term18 a0 (x0: El (fun a0 bool)) (x1: El a0) (x2: El (list a0)) ≔ ((@= (list a0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x0 ((@CONS a0) x1 x2)));
symbol term19 a0 (x0: El (fun a0 bool)) (x1: El a0) (x2: El (list a0)) ≔ ((@= (list a0)) ((@FILTER a0) x0 ((@CONS a0) x1 x2)));
symbol term17 a0 (x0: El (fun a0 bool)) (x1: El a0) (x2: El (list a0)) ≔ ((@FILTER a0) x0 ((@CONS a0) x1 x2));
symbol term24 a0 (x0: El a0) (x1: El (fun a0 bool)) (x2: El (list a0)) ≔ ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 x2)));
symbol term13 a0 ≔ (∀ (λ y0 : El (fun a0 bool), (= ((@FILTER a0) y0 (@NIL a0)) (@NIL a0))));
symbol term12 a0 ≔ (∀ (λ y0 : El (fun a0 bool), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y1 : El (type1267 a0), (∀ (λ y2 : El type1671, (∧ (∀ (λ y3 : El (fun a0 bool), (= (y1 y2 y3 (@NIL a0)) (@NIL a0)))) (∀ (λ y3 : El a0, (∀ (λ y4 : El (fun a0 bool), (∀ (λ y5 : El (list a0), (= (y1 y2 y4 ((@CONS a0) y3 y5)) ((@COND (list a0)) (y4 y3) ((@CONS a0) y3 (y1 y2 y4 y5)) (y1 y2 y4 y5))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 (@NIL a0)) (@NIL a0))));
symbol term3 ≔ ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))))))));
symbol term35 a0 (x0: El a0) ≔ (∀ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El (list a0), (= ((@FILTER a0) y0 ((@CONS a0) x0 y1)) ((@COND (list a0)) (y0 x0) ((@CONS a0) x0 ((@FILTER a0) y0 y1)) ((@FILTER a0) y0 y1)))))));
symbol term34 a0 (x0: El a0) ≔ (∀ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El (list a0), (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 ((@CONS a0) x0 y1)) ((@COND (list a0)) (y0 x0) ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 y1)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y2 : El (type1267 a0), (∀ (λ y3 : El type1671, (∧ (∀ (λ y4 : El (fun a0 bool), (= (y2 y3 y4 (@NIL a0)) (@NIL a0)))) (∀ (λ y4 : El a0, (∀ (λ y5 : El (fun a0 bool), (∀ (λ y6 : El (list a0), (= (y2 y3 y5 ((@CONS a0) y4 y6)) ((@COND (list a0)) (y5 y4) ((@CONS a0) y4 (y2 y3 y5 y6)) (y2 y3 y5 y6))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) y0 y1)))))));
symbol term27 a0 (x0: El a0) (x1: El (fun a0 bool)) (x2: El (list a0)) ≔ ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@FILTER a0) x1 x2)) ((@FILTER a0) x1 x2));
symbol term22 a0 (x0: El a0) (x1: El (fun a0 bool)) (x2: El (list a0)) ≔ ((@CONS a0) x0 ((@FILTER a0) x1 x2));
symbol term25 a0 (x0: El a0) (x1: El (fun a0 bool)) (x2: El (list a0)) ≔ ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@FILTER a0) x1 x2)));
symbol term5 a0 ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))));
symbol term16 a0 (x0: El (fun a0 bool)) (x1: El a0) (x2: El (list a0)) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x0 ((@CONS a0) x1 x2));
symbol term26 a0 (x0: El a0) (x1: El (fun a0 bool)) (x2: El (list a0)) ≔ ((@COND (list a0)) (x1 x0) ((@CONS a0) x0 ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 x2)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun a0 bool) (fun (list a0) (list a0))))) (λ y0 : El (type1267 a0), (∀ (λ y1 : El type1671, (∧ (∀ (λ y2 : El (fun a0 bool), (= (y0 y1 y2 (@NIL a0)) (@NIL a0)))) (∀ (λ y2 : El a0, (∀ (λ y3 : El (fun a0 bool), (∀ (λ y4 : El (list a0), (= (y0 y1 y3 ((@CONS a0) y2 y4)) ((@COND (list a0)) (y3 y2) ((@CONS a0) y2 (y0 y1 y3 y4)) (y0 y1 y3 y4))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 _0))))))))))))) x1 x2));
symbol term11 a0 ≔ (λ y0 : El (fun a0 bool), (= ((@FILTER a0) y0 (@NIL a0)) (@NIL a0)));
