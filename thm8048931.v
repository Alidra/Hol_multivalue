Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm8048931_term_abbrevs.
Require Import thm13473_spec.
Lemma lem8048914 {_142951 _142952 _142953 : Type'} (_474 : type16 _142951 _142952 _142953) (_475 : Prop) (_476 : type51 _142951 _142952 _142953) (_477 : type16 _142951 _142952 _142953) : (term0 _142951 _142952 _142953 _476 _475 _474 _477) = (term1 _142951 _142952 _142953 _474 _475 _476 _477).
Proof. exact (@lem13473 (type16 _142951 _142952 _142953) _474 _475 _476 _477). Qed.
Lemma lem8048915 {_142951 _142952 _142953 : Type'} (_474 : type16 _142951 _142952 _142953) (_475 : Prop) (f : type56 _142951 _142952) (g : type56 _142951 _142953) (_477 : type16 _142951 _142952 _142953) : (term2 _142951 _142952 _142953 f g _475 _474 _477) = (term3 _142951 _142952 _142953 _474 _475 f g _477).
Proof. exact (@lem8048914 _142951 _142952 _142953 _474 _475 (term4 _142951 _142952 _142953 f g) _477). Qed.
Lemma lem8048916 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term5 _142951 _142952 _142953 f g) = (term6 _142951 _142952 _142953 f g).
Proof. exact (@lem8048915 _142951 _142952 _142953 (term7 _142951 _142952 _142953 f) (g = (@EMPTY ((cart _142951 _142953) -> Prop))) f g (term8 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048917 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term9 _142951 _142952 _142953 f g) = ((term10 _142951 _142952 _142953 f g) = (term8 _142951 _142952 _142953 f g)).
Proof. exact (eq_refl (term9 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048918 {_142951 _142953 : Type'} (g : type56 _142951 _142953) : (term11 _142951 _142953 g) = (term11 _142951 _142953 g).
Proof. exact (eq_refl (term11 _142951 _142953 g)). Qed.
Lemma lem8048919 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term12 _142951 _142952 _142953 f g) = (term13 _142951 _142952 _142953 f g).
Proof. exact (MK_COMB (@lem8048918 _142951 _142953 g) (@lem8048917 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048920 {_142951 _142952 _142953 : Type'} (g : type56 _142951 _142953) (f : type56 _142951 _142952) : (term14 _142951 _142952 _142953 g f) = ((term10 _142951 _142952 _142953 f g) = (term7 _142951 _142952 _142953 f)).
Proof. exact (eq_refl (term14 _142951 _142952 _142953 g f)). Qed.
Lemma lem8048921 {_142951 _142953 : Type'} (g : type56 _142951 _142953) : (term15 _142951 _142953 g) = (term15 _142951 _142953 g).
Proof. exact (eq_refl (term15 _142951 _142953 g)). Qed.
Lemma lem8048922 {_142951 _142952 _142953 : Type'} (g : type56 _142951 _142953) (f : type56 _142951 _142952) : (term16 _142951 _142952 _142953 g f) = (term17 _142951 _142952 _142953 g f).
Proof. exact (MK_COMB (@lem8048921 _142951 _142953 g) (@lem8048920 _142951 _142952 _142953 g f)). Qed.
Lemma lem8048923 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8048924 {_142951 _142952 _142953 : Type'} (g : type56 _142951 _142953) (f : type56 _142951 _142952) : (term18 _142951 _142952 _142953 g f) = (term19 _142951 _142952 _142953 g f).
Proof. exact (MK_COMB (@lem8048923) (@lem8048922 _142951 _142952 _142953 g f)). Qed.
Lemma lem8048925 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term6 _142951 _142952 _142953 f g) = (term20 _142951 _142952 _142953 f g).
Proof. exact (MK_COMB (@lem8048924 _142951 _142952 _142953 g f) (@lem8048919 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048926 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term5 _142951 _142952 _142953 f g) = ((term10 _142951 _142952 _142953 f g) = (term21 _142951 _142952 _142953 f g)).
Proof. exact (eq_refl (term5 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048927 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8048928 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term22 _142951 _142952 _142953 f g) = (term23 _142951 _142952 _142953 f g).
Proof. exact (MK_COMB (@lem8048927) (@lem8048926 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048929 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : ((term5 _142951 _142952 _142953 f g) = (term6 _142951 _142952 _142953 f g)) = (((term10 _142951 _142952 _142953 f g) = (term21 _142951 _142952 _142953 f g)) = (term20 _142951 _142952 _142953 f g)).
Proof. exact (MK_COMB (@lem8048928 _142951 _142952 _142953 f g) (@lem8048925 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048930 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : ((term10 _142951 _142952 _142953 f g) = (term21 _142951 _142952 _142953 f g)) = (term20 _142951 _142952 _142953 f g).
Proof. exact (EQ_MP (@lem8048929 _142951 _142952 _142953 f g) (@lem8048916 _142951 _142952 _142953 f g)). Qed.
Lemma lem8048931 {_142951 _142952 _142953 : Type'} (f : type56 _142951 _142952) (g : type56 _142951 _142953) : (term20 _142951 _142952 _142953 f g) = ((term10 _142951 _142952 _142953 f g) = (term21 _142951 _142952 _142953 f g)).
Proof. exact (SYM (@lem8048930 _142951 _142952 _142953 f g)). Qed.
