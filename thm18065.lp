require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
require open hol-light.hol_axioms;
require open hol-light.hol_type_abbrevs;
require open hol-light.thm18065_term_abbrevs;
require open hol-light.thm0_spec;
require open hol-light.thm17963_spec;
require open hol-light.thm17964_spec;
require open hol-light.thm1862_spec;
require open hol-light.thm1863_spec;
private symbol lem18045 [A] (P : El (fun A bool)) : Prf (= (term0 A P) (term1 A P)) ≔ EQ_MP (@lem17964 A P) (@lem17963 A P);
private symbol lem18046 [A] (P : El (fun A bool)) : Prf (= (term0 A P) (term1 A P)) ≔ (@lem18045 A P);
private symbol lem18051 : Prf (= (@= bool) (@= bool)) ≔ REFL (@= bool);
private symbol lem18052 [A] (P : El (fun A bool)) : Prf (= (term2 A P) (term3 A P)) ≔ MK_COMB (@lem18051) (@lem18046 A P);
private symbol lem18057 [A] (P : El (fun A bool)) : Prf (= (term1 A P) (term1 A P)) ≔ REFL (term1 A P);
private symbol lem18058 [A] (P : El (fun A bool)) : Prf (= (= (term0 A P) (term1 A P)) (= (term1 A P) (term1 A P))) ≔ MK_COMB (@lem18052 A P) (@lem18057 A P);
private symbol lem18060 [A] (x : El A) : Prf (= (= x x) T) ≔ EQ_MP (@lem1863 A x) (@lem1862 A x);
private symbol lem18061 (x : El bool) : Prf (= (= x x) T) ≔ (@lem18060 bool x);
private symbol lem18062 [A] (P : El (fun A bool)) : Prf (= (= (term1 A P) (term1 A P)) T) ≔ (@lem18061 (term1 A P));
private symbol lem18063 [A] (P : El (fun A bool)) : Prf (= (= (term0 A P) (term1 A P)) T) ≔ TRANS (@lem18058 A P) (@lem18062 A P);
opaque symbol lem18064 [A] (P : El (fun A bool)) : Prf (= T (= (term0 A P) (term1 A P))) ≔ SYM (@lem18063 A P);
opaque symbol lem18065 [A] (P : El (fun A bool)) : Prf (= (term0 A P) (term1 A P)) ≔ EQ_MP (@lem18064 A P) (@lem0);
