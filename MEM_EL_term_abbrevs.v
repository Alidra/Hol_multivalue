Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term58 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := (Peano.lt x0 (@List.length a0 (@cons a0 x1 x2))) -> @List.In a0 (@EL a0 x0 (@cons a0 x1 x2)) (@cons a0 x1 x2).
Definition term33 (a0 : Type') := (forall y0 : nat, (Peano.lt y0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 y0 (@nil a0)) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) -> forall y2 : nat, (Peano.lt y2 (@List.length a0 (@cons a0 y0 y1))) -> @List.In a0 (@EL a0 y2 (@cons a0 y0 y1)) (@cons a0 y0 y1)).
Definition term106 (a0 : Type') (x0 : a0) (x1 : list a0) := True \/ (@List.In a0 x0 x1).
Definition term101 (a0 : Type') (x0 : a0) (x1 : list a0) := @hd a0 (@cons a0 x0 x1).
Definition term5 (a0 : Type') (x0 : a0) (x1 : list a0) := @List.length a0 (@cons a0 x0 x1).
Definition term136 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)).
Definition term55 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @List.In a0 (@EL a0 x0 (@cons a0 x1 x2)) (@cons a0 x1 x2).
Definition term34 (a0 : Type') := imp (((fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) y1) -> (fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) (@cons a0 y0 y1))).
Definition term47 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term68 (a0 : Type') (x0 : a0) (x1 : list a0) := and ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)).
Definition term132 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @eq a0 (@EL a0 (S x0) (@cons a0 x1 x2)).
Definition term127 (a0 : Type') (x0 : nat) (x1 : list a0) := @EL a0 (S x0) x1.
Definition term107 (a0 : Type') (x0 : a0) (x1 : list a0) := (Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = True.
Definition term12 (a0 : Type') := (fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@nil a0).
Definition term14 (a0 : Type') := and ((fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@nil a0)).
Definition term10 (a0 : Type') := (((fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) y1) -> (fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) (@cons a0 y0 y1))) -> forall y0 : list a0, (fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) y0.
Definition term133 (a0 : Type') (x0 : nat) (x1 : list a0) := @eq a0 (@EL a0 x0 x1).
Definition term27 (a0 : Type') (x0 : a0) := forall y0 : list a0, (forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) -> forall y1 : nat, (Peano.lt y1 (@List.length a0 (@cons a0 x0 y0))) -> @List.In a0 (@EL a0 y1 (@cons a0 x0 y0)) (@cons a0 x0 y0).
Definition term9 (a0 : Type') (x0 : type1143 a0) := ((x0 (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (x0 y1) -> x0 (@cons a0 y0 y1))) -> forall y0 : list a0, x0 y0.
Definition term120 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2).
Definition term51 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := imp (Peano.lt x0 (@List.length a0 (@cons a0 x1 x2))).
Definition term99 (a0 : Type') (x0 : list a0) := @EL a0 (NUMERAL 0) x0.
Definition term50 (a0 : Type') (x0 : nat) (x1 : list a0) := Peano.lt x0 (S (@List.length a0 x1)).
Definition term38 (a0 : Type') := forall y0 : list a0, forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0.
Definition term139 (a0 : Type') (x0 : nat) (x1 : list a0) := (Peano.lt x0 (@List.length a0 x1)) -> (@List.In a0 (@EL a0 x0 x1) x1) = True.
Definition term3 (a0 : Type') (x0 : a0) := forall y0 : list a0, (@List.length a0 (@cons a0 x0 y0)) = (S (@List.length a0 y0)).
Definition term111 (x0 : nat) := forall y0 : nat, (Peano.lt (S x0) (S y0)) = (Peano.lt x0 y0).
Definition term85 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : nat, (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0.
Definition term100 (a0 : Type') (x0 : a0) (x1 : list a0) := @EL a0 (NUMERAL 0) (@cons a0 x0 x1).
Definition term6 (a0 : Type') (x0 : list a0) := S (@List.length a0 x0).
Definition term80 (a0 : Type') (x0 : a0) (x1 : list a0) := ((fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (NUMERAL 0)) /\ (forall y0 : nat, ((fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0) -> (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) (S y0)).
Definition term126 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : list a0) (x3 : Prop) := ((Peano.lt x1 (@List.length a0 x2)) -> (((@EL a0 (S x1) (@cons a0 x0 x2)) = x0) \/ (@List.In a0 (@EL a0 (S x1) (@cons a0 x0 x2)) x2)) = x3) -> ((Peano.lt (S x1) (S (@List.length a0 x2))) -> ((@EL a0 (S x1) (@cons a0 x0 x2)) = x0) \/ (@List.In a0 (@EL a0 (S x1) (@cons a0 x0 x2)) x2)) = ((Peano.lt x1 (@List.length a0 x2)) -> x3).
Definition term40 (a0 : Type') (x0 : nat) := Peano.lt x0 (@List.length a0 (@nil a0)).
Definition term64 (a0 : Type') (x0 : a0) (x1 : list a0) := (((fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (NUMERAL 0)) /\ (forall y0 : nat, ((fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0) -> (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) (S y0))) -> forall y0 : nat, (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0.
Definition term0 := forall y0 : nat, (Peano.lt y0 (NUMERAL 0)) = False.
Definition term28 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, ((fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) y1) -> (fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) (@cons a0 y0 y1).
Definition term77 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : nat => ((Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) -> (Peano.lt (S y0) (S (@List.length a0 x1))) -> ((@EL a0 (S y0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (S y0) (@cons a0 x0 x1)) x1).
Definition term63 (x0 : nat -> Prop) := ((x0 (NUMERAL 0)) /\ (forall y0 : nat, (x0 y0) -> x0 (S y0))) -> forall y0 : nat, x0 y0.
Definition term44 (a0 : Type') := fun y0 : nat => (Peano.lt y0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 y0 (@nil a0)) (@nil a0).
Definition term82 (a0 : Type') (x0 : a0) (x1 : list a0) := imp (((fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (NUMERAL 0)) /\ (forall y0 : nat, ((fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0) -> (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) (S y0))).
Definition term121 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((Peano.lt (S x0) (S (@List.length a0 x2))) = y0) -> (y0 -> (((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = y1) -> ((Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = (y0 -> y1)) x3.
Definition term128 (a0 : Type') (x0 : nat) (x1 : list a0) := @EL a0 x0 (@tl a0 x1).
Definition term65 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (NUMERAL 0).
Definition term81 (a0 : Type') (x0 : a0) (x1 : list a0) := ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) /\ (forall y0 : nat, ((Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) -> (Peano.lt (S y0) (S (@List.length a0 x1))) -> ((@EL a0 (S y0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (S y0) (@cons a0 x0 x1)) x1)).
Definition term16 (a0 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) x0.
Definition term115 (a0 : Type') (x0 : nat) (x1 : list a0) := (Peano.lt x0 (@List.length a0 x1)) -> @List.In a0 (@EL a0 x0 x1) x1.
Definition term131 (a0 : Type') (x0 : a0) (x1 : list a0) := @tl a0 (@cons a0 x0 x1).
Definition term60 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : nat => (Peano.lt y0 (@List.length a0 (@cons a0 x0 x1))) -> @List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) (@cons a0 x0 x1).
Definition term78 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : nat, ((fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0) -> (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) (S y0).
Definition term11 (a0 : Type') := fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0.
Definition term71 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := imp ((Peano.lt x0 (S (@List.length a0 x2))) -> ((@EL a0 x0 (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 x0 (@cons a0 x1 x2)) x2)).
Definition term91 (a0 : Type') (x0 : list a0) := Peano.lt (NUMERAL 0) (S (@List.length a0 x0)).
Definition term25 (a0 : Type') (x0 : a0) := fun y0 : list a0 => (forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) -> forall y1 : nat, (Peano.lt y1 (@List.length a0 (@cons a0 x0 y0))) -> @List.In a0 (@EL a0 y1 (@cons a0 x0 y0)) (@cons a0 x0 y0).
Definition term87 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term67 (a0 : Type') (x0 : a0) (x1 : list a0) := and ((fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (NUMERAL 0)).
Definition term37 (a0 : Type') := forall y0 : list a0, (fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) y0.
Definition term7 (x0 : nat) := (fun y0 : nat => (Peano.lt y0 (NUMERAL 0)) = False) x0.
Definition term109 (a0 : Type') (x0 : list a0) := (Peano.lt (NUMERAL 0) (S (@List.length a0 x0))) -> True.
Definition term39 (a0 : Type') := ((forall y0 : nat, (Peano.lt y0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 y0 (@nil a0)) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) -> forall y2 : nat, (Peano.lt y2 (@List.length a0 (@cons a0 y0 y1))) -> @List.In a0 (@EL a0 y2 (@cons a0 y0 y1)) (@cons a0 y0 y1))) -> forall y0 : list a0, forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0.
Definition term19 (a0 : Type') (x0 : list a0) := imp (forall y0 : nat, (Peano.lt y0 (@List.length a0 x0)) -> @List.In a0 (@EL a0 y0 x0) x0).
Definition term15 (a0 : Type') := and (forall y0 : nat, (Peano.lt y0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 y0 (@nil a0)) (@nil a0)).
Definition term76 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : nat => ((fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0) -> (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) (S y0).
Definition term61 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1).
Definition term84 (a0 : Type') (x0 : a0) (x1 : list a0) := fun y0 : nat => (fun y1 : nat => (Peano.lt y1 (S (@List.length a0 x1))) -> ((@EL a0 y1 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y1 (@cons a0 x0 x1)) x1)) y0.
Definition term35 (a0 : Type') := imp ((forall y0 : nat, (Peano.lt y0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 y0 (@nil a0)) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) -> forall y2 : nat, (Peano.lt y2 (@List.length a0 (@cons a0 y0 y1))) -> @List.In a0 (@EL a0 y2 (@cons a0 y0 y1)) (@cons a0 y0 y1))).
Definition term69 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : nat) := (fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) x2.
Definition term72 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : nat) := (fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (S x2).
Definition term124 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) (x3 : Prop) (x4 : Prop) := ((Peano.lt (S x0) (S (@List.length a0 x2))) = x3) -> (x3 -> (((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = x4) -> ((Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = (x3 -> x4).
Definition term26 (a0 : Type') (x0 : a0) := forall y0 : list a0, ((fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) y0) -> (fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) (@cons a0 x0 y0).
Definition term142 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : list a0) := ((Peano.lt x1 (@List.length a0 x2)) -> (((@EL a0 (S x1) (@cons a0 x0 x2)) = x0) \/ (@List.In a0 (@EL a0 (S x1) (@cons a0 x0 x2)) x2)) = True) -> ((Peano.lt (S x1) (S (@List.length a0 x2))) -> ((@EL a0 (S x1) (@cons a0 x0 x2)) = x0) \/ (@List.In a0 (@EL a0 (S x1) (@cons a0 x0 x2)) x2)) = ((Peano.lt x1 (@List.length a0 x2)) -> True).
Definition term108 (a0 : Type') (x0 : a0) (x1 : list a0) := ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = True) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> True).
Definition term2 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : list a0, (@List.length a0 (@cons a0 y0 y1)) = (S (@List.length a0 y1))) x0.
Definition term17 (a0 : Type') (x0 : list a0) := forall y0 : nat, (Peano.lt y0 (@List.length a0 x0)) -> @List.In a0 (@EL a0 y0 x0) x0.
Definition term36 (a0 : Type') := fun y0 : list a0 => (fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) y0.
Definition term41 (a0 : Type') (x0 : nat) := imp (Peano.lt x0 (@List.length a0 (@nil a0))).
Definition term18 (a0 : Type') (x0 : list a0) := imp ((fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) x0).
Definition term95 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) := (fun y0 : Prop => ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) = x2) -> (x2 -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = y0) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = (x2 -> y0)) x3.
Definition term140 (a0 : Type') (x0 : nat) (x1 : list a0) (x2 : a0) := ((@EL a0 x0 x1) = x2) \/ True.
Definition term46 := forall y0 : nat, True.
Definition term86 (a0 : Type') (x0 : a0) (x1 : list a0) := (((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) /\ (forall y0 : nat, ((Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) -> (Peano.lt (S y0) (S (@List.length a0 x1))) -> ((@EL a0 (S y0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (S y0) (@cons a0 x0 x1)) x1))) -> forall y0 : nat, (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1).
Definition term97 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : Prop) := ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) = (Peano.lt (NUMERAL 0) (S (@List.length a0 x1)))) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = x2) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> x2).
Definition term117 (a0 : Type') (x0 : nat) (x1 : list a0) := @List.In a0 (@EL a0 x0 x1) x1.
Definition term105 (a0 : Type') (x0 : a0) (x1 : list a0) := @List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1.
Definition term29 (a0 : Type') := fun y0 : a0 => forall y1 : list a0, (forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) -> forall y2 : nat, (Peano.lt y2 (@List.length a0 (@cons a0 y0 y1))) -> @List.In a0 (@EL a0 y2 (@cons a0 y0 y1)) (@cons a0 y0 y1).
Definition term42 (a0 : Type') (x0 : nat) := @List.In a0 (@EL a0 x0 (@nil a0)) (@nil a0).
Definition term54 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : list a0) := (x1 = x0) \/ (@List.In a0 x1 x2).
Definition term45 := fun y0 : nat => True.
Definition term4 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : list a0 => (@List.length a0 (@cons a0 x0 y0)) = (S (@List.length a0 y0))) x1.
Definition term112 (x0 : nat) (x1 : nat) := (fun y0 : nat => (Peano.lt (S x0) (S y0)) = (Peano.lt x0 y0)) x1.
Definition term122 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) (x3 : Prop) := forall y0 : Prop, ((Peano.lt (S x0) (S (@List.length a0 x2))) = x3) -> (x3 -> (((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = y0) -> ((Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = (x3 -> y0).
Definition term94 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : Prop) := forall y0 : Prop, ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) = x2) -> (x2 -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = y0) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = (x2 -> y0).
Definition term88 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term56 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := ((@EL a0 x0 (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 x0 (@cons a0 x1 x2)) x2).
Definition term32 (a0 : Type') := ((fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) y1) -> (fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) (@cons a0 y0 y1)).
Definition term20 (a0 : Type') (x0 : a0) (x1 : list a0) := (fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@cons a0 x0 x1).
Definition term75 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := ((Peano.lt x0 (S (@List.length a0 x2))) -> ((@EL a0 x0 (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 x0 (@cons a0 x1 x2)) x2)) -> (Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2).
Definition term118 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := forall y0 : Prop, forall y1 : Prop, ((Peano.lt (S x0) (S (@List.length a0 x2))) = y0) -> (y0 -> (((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = y1) -> ((Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = (y0 -> y1).
Definition term90 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : Prop, forall y1 : Prop, ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) = y0) -> (y0 -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = y1) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = (y0 -> y1).
Definition term89 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term49 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := Peano.lt x0 (@List.length a0 (@cons a0 x1 x2)).
Definition term119 (a0 : Type') (x0 : nat) (x1 : list a0) := Peano.lt (S x0) (S (@List.length a0 x1)).
Definition term98 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : Prop) := ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = x2) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> x2).
Definition term59 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := (Peano.lt x0 (S (@List.length a0 x2))) -> ((@EL a0 x0 (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 x0 (@cons a0 x1 x2)) x2).
Definition term123 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((Peano.lt (S x0) (S (@List.length a0 x2))) = x3) -> (x3 -> (((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = y0) -> ((Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = (x3 -> y0)) x4.
Definition term53 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : list a0) := @List.In a0 x0 (@cons a0 x1 x2).
Definition term8 (x0 : nat) := Peano.lt x0 (NUMERAL 0).
Definition term22 (a0 : Type') (x0 : a0) (x1 : list a0) := ((fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) x1) -> (fun y0 : list a0 => forall y1 : nat, (Peano.lt y1 (@List.length a0 y0)) -> @List.In a0 (@EL a0 y1 y0) y0) (@cons a0 x0 x1).
Definition term110 (x0 : nat) := (fun y0 : nat => forall y1 : nat, (Peano.lt (S y0) (S y1)) = (Peano.lt y0 y1)) x0.
Definition term62 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : nat, (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1).
Definition term21 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : nat, (Peano.lt y0 (@List.length a0 (@cons a0 x0 x1))) -> @List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) (@cons a0 x0 x1).
Definition term103 (a0 : Type') (x0 : list a0) (x1 : a0) := or ((@EL a0 (NUMERAL 0) (@cons a0 x1 x0)) = x1).
Definition term57 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @EL a0 x0 (@cons a0 x1 x2).
Definition term96 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : Prop) (x3 : Prop) := ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) = x2) -> (x2 -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = x3) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = (x2 -> x3).
Definition term102 (a0 : Type') (x0 : a0) (x1 : list a0) := @eq a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)).
Definition term134 (a0 : Type') (x0 : nat) (x1 : list a0) (x2 : a0) := or ((@EL a0 (S x0) (@cons a0 x2 x1)) = x2).
Definition term113 (x0 : nat) (x1 : nat) := Peano.lt (S x0) (S x1).
Definition term141 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := (Peano.lt x0 (@List.length a0 x2)) -> (((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2)) = True.
Definition term73 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := (Peano.lt (S x0) (S (@List.length a0 x2))) -> ((@EL a0 (S x0) (@cons a0 x1 x2)) = x1) \/ (@List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2).
Definition term114 (a0 : Type') (x0 : list a0) (x1 : nat) := (fun y0 : nat => (Peano.lt y0 (@List.length a0 x0)) -> @List.In a0 (@EL a0 y0 x0) x0) x1.
Definition term92 (a0 : Type') (x0 : a0) (x1 : list a0) := ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1).
Definition term43 (a0 : Type') (x0 : nat) := (Peano.lt x0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 x0 (@nil a0)) (@nil a0).
Definition term130 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @EL a0 x0 (@tl a0 (@cons a0 x1 x2)).
Definition term52 (a0 : Type') (x0 : nat) (x1 : list a0) := imp (Peano.lt x0 (S (@List.length a0 x1))).
Definition term83 (a0 : Type') (x0 : a0) (x1 : list a0) := imp (((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) /\ (forall y0 : nat, ((Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) -> (Peano.lt (S y0) (S (@List.length a0 x1))) -> ((@EL a0 (S y0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (S y0) (@cons a0 x0 x1)) x1))).
Definition term48 (x0 : Prop) := forall y0 : nat, x0.
Definition term137 (a0 : Type') (x0 : nat) (x1 : list a0) := @List.In a0 (@EL a0 x0 x1).
Definition term125 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : list a0) (x3 : Prop) := ((Peano.lt (S x1) (S (@List.length a0 x2))) = (Peano.lt x1 (@List.length a0 x2))) -> ((Peano.lt x1 (@List.length a0 x2)) -> (((@EL a0 (S x1) (@cons a0 x0 x2)) = x0) \/ (@List.In a0 (@EL a0 (S x1) (@cons a0 x0 x2)) x2)) = x3) -> ((Peano.lt (S x1) (S (@List.length a0 x2))) -> ((@EL a0 (S x1) (@cons a0 x0 x2)) = x0) \/ (@List.In a0 (@EL a0 (S x1) (@cons a0 x0 x2)) x2)) = ((Peano.lt x1 (@List.length a0 x2)) -> x3).
Definition term79 (a0 : Type') (x0 : a0) (x1 : list a0) := forall y0 : nat, ((Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) -> (Peano.lt (S y0) (S (@List.length a0 x1))) -> ((@EL a0 (S y0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (S y0) (@cons a0 x0 x1)) x1).
Definition term74 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : nat) := ((fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) x2) -> (fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) (S x2).
Definition term129 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @EL a0 (S x0) (@cons a0 x1 x2).
Definition term70 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : nat) := imp ((fun y0 : nat => (Peano.lt y0 (S (@List.length a0 x1))) -> ((@EL a0 y0 (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) x1)) x2).
Definition term116 (a0 : Type') (x0 : nat) (x1 : list a0) := Peano.lt x0 (@List.length a0 x1).
Definition term104 (a0 : Type') (x0 : a0) (x1 : list a0) := @List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)).
Definition term135 (a0 : Type') (x0 : nat) (x1 : list a0) (x2 : a0) := or ((@EL a0 x0 x1) = x2).
Definition term143 (a0 : Type') (x0 : nat) (x1 : list a0) := (Peano.lt x0 (@List.length a0 x1)) -> True.
Definition term13 (a0 : Type') := forall y0 : nat, (Peano.lt y0 (@List.length a0 (@nil a0))) -> @List.In a0 (@EL a0 y0 (@nil a0)) (@nil a0).
Definition term93 (a0 : Type') (x0 : a0) (x1 : list a0) (x2 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) = y0) -> (y0 -> (((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = y1) -> ((Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1)) = (y0 -> y1)) x2.
Definition term31 (a0 : Type') := forall y0 : a0, forall y1 : list a0, (forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) -> forall y2 : nat, (Peano.lt y2 (@List.length a0 (@cons a0 y0 y1))) -> @List.In a0 (@EL a0 y2 (@cons a0 y0 y1)) (@cons a0 y0 y1).
Definition term30 (a0 : Type') := forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) y1) -> (fun y2 : list a0 => forall y3 : nat, (Peano.lt y3 (@List.length a0 y2)) -> @List.In a0 (@EL a0 y3 y2) y2) (@cons a0 y0 y1).
Definition term1 (a0 : Type') := forall y0 : a0, forall y1 : list a0, (@List.length a0 (@cons a0 y0 y1)) = (S (@List.length a0 y1)).
Definition term138 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : list a0) := @List.In a0 (@EL a0 (S x0) (@cons a0 x1 x2)) x2.
Definition term66 (a0 : Type') (x0 : a0) (x1 : list a0) := (Peano.lt (NUMERAL 0) (S (@List.length a0 x1))) -> ((@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) = x0) \/ (@List.In a0 (@EL a0 (NUMERAL 0) (@cons a0 x0 x1)) x1).
Definition term24 (a0 : Type') (x0 : a0) := fun y0 : list a0 => ((fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) y0) -> (fun y1 : list a0 => forall y2 : nat, (Peano.lt y2 (@List.length a0 y1)) -> @List.In a0 (@EL a0 y2 y1) y1) (@cons a0 x0 y0).
Definition term23 (a0 : Type') (x0 : a0) (x1 : list a0) := (forall y0 : nat, (Peano.lt y0 (@List.length a0 x1)) -> @List.In a0 (@EL a0 y0 x1) x1) -> forall y0 : nat, (Peano.lt y0 (@List.length a0 (@cons a0 x0 x1))) -> @List.In a0 (@EL a0 y0 (@cons a0 x0 x1)) (@cons a0 x0 x1).
