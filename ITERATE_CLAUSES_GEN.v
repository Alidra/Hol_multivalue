Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import ITERATE_CLAUSES_GEN_term_abbrevs.
Require Import AND_FORALL_THM_spec.
Require Import COND_ID_spec.
Require Import COND_RAND_spec.
Require Import DISJ_ACI_spec.
Require Import EXCLUDED_MIDDLE_spec.
Require Import FINITE_INSERT_spec.
Require Import FINITE_RECURSION_spec.
Require Import FINITE_RULES_spec.
Require Import IN_SUPPORT_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import SUPPORT_CLAUSES_spec.
Require Import iterate_spec.
Require Import monoidal_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm129_spec.
Require Import thm13473_spec.
Require Import thm137_spec.
Require Import thm14781_spec.
Require Import thm15222_spec.
Require Import thm16474_spec.
Require Import thm17045_spec.
Require Import thm17362_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm18392_spec.
Require Import thm1843_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm18958_spec.
Require Import thm18959_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19018_spec.
Require Import thm19019_spec.
Require Import thm19024_spec.
Require Import thm19025_spec.
Require Import thm19030_spec.
Require Import thm19031_spec.
Require Import thm19490_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm69_spec.
Require Import thm7_spec.
Require Import thm82_spec.
Lemma lem5738129 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : term0 A B f x op.
Proof. exact (@lem9784 ((f x) = (@neutral B op))). Qed.
Lemma lem5738130 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term0 A B f x op) = (term1 A B f x op).
Proof. exact (eq_refl (term0 A B f x op)). Qed.
Lemma lem5738131 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : term1 A B f x op.
Proof. exact (EQ_MP (@lem5738130 A B f x op) (@lem5738129 A B f x op)). Qed.
Lemma lem5738132 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (f x) = (@neutral B op).
Proof. exact (h1). Qed.
Lemma lem5738133 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term2 A B f x op.
Proof. exact (h1). Qed.
Lemma lem5738134 {A B : Type'} (b : Prop) : term3 A B b.
Proof. exact (@lem12958 A B b). Qed.
Lemma lem5738135 {A B : Type'} (b : Prop) : (term3 A B b) = (term4 A B b).
Proof. exact (eq_refl (term3 A B b)). Qed.
Lemma lem5738136 {A B : Type'} (b : Prop) : term4 A B b.
Proof. exact (EQ_MP (@lem5738135 A B b) (@lem5738134 A B b)). Qed.
Lemma lem5738137 {A B : Type'} (b : Prop) (f : A -> B) : term5 A B b f.
Proof. exact (@lem5738136 A B b f). Qed.
Lemma lem5738138 {A B : Type'} (b : Prop) (f : A -> B) : (term5 A B b f) = (term6 A B b f).
Proof. exact (eq_refl (term5 A B b f)). Qed.
Lemma lem5738139 {A B : Type'} (b : Prop) (f : A -> B) : term6 A B b f.
Proof. exact (EQ_MP (@lem5738138 A B b f) (@lem5738137 A B b f)). Qed.
Lemma lem5738140 {A B : Type'} (b : Prop) (f : A -> B) (x : A) : term7 A B b f x.
Proof. exact (@lem5738139 A B b f x). Qed.
Lemma lem5738141 {A B : Type'} (b : Prop) (x : A) (f : A -> B) : (term7 A B b f x) = (term8 A B b x f).
Proof. exact (eq_refl (term7 A B b f x)). Qed.
Lemma lem5738142 {A B : Type'} (b : Prop) (x : A) (f : A -> B) : term8 A B b x f.
Proof. exact (EQ_MP (@lem5738141 A B b x f) (@lem5738140 A B b f x)). Qed.
Lemma lem5738143 {A B : Type'} (b : Prop) (x : A) (f : A -> B) (y : A) : term9 A B b x f y.
Proof. exact (@lem5738142 A B b x f y). Qed.
Lemma lem5738144 {A B : Type'} (b : Prop) (x : A) (f : A -> B) (y : A) : (term9 A B b x f y) = ((term10 A B f b x y) = (term11 A B b x f y)).
Proof. exact (eq_refl (term9 A B b x f y)). Qed.
Lemma lem5738156 {A B : Type'} : term12 A B.
Proof. exact (@lem3816218 A B). Qed.
Lemma lem5738157 {A B : Type'} (op : type1400 B) (f : A -> B) : term13 A B op f.
Proof. exact (@lem5738156 A B (term14 A B op f)). Qed.
Lemma lem5738158 {A B : Type'} (op : type1400 B) (f : A -> B) : (term13 A B op f) = (term15 A B op f).
Proof. exact (eq_refl (term13 A B op f)). Qed.
Lemma lem5738159 {A B : Type'} (op : type1400 B) (f : A -> B) : term15 A B op f.
Proof. exact (EQ_MP (@lem5738158 A B op f) (@lem5738157 A B op f)). Qed.
Lemma lem5738160 {A B : Type'} (f : A -> B) (op : type1400 B) : term16 A B f op.
Proof. exact (@lem5738159 A B op f (@neutral B op)). Qed.
Lemma lem5738161 {A B : Type'} (f : A -> B) (op : type1400 B) : (term16 A B f op) = (term17 A B f op).
Proof. exact (eq_refl (term16 A B f op)). Qed.
Lemma lem5738162 {A B : Type'} (f : A -> B) (op : type1400 B) : term17 A B f op.
Proof. exact (EQ_MP (@lem5738161 A B f op) (@lem5738160 A B f op)). Qed.
Lemma lem5738163 {A : Type'} (P : A -> Prop) : term18 A P.
Proof. exact (@lem5146 A P). Qed.
Lemma lem5738164 {A : Type'} (P : A -> Prop) : (term18 A P) = (term19 A P).
Proof. exact (eq_refl (term18 A P)). Qed.
Lemma lem5738165 {A : Type'} (P : A -> Prop) : term19 A P.
Proof. exact (EQ_MP (@lem5738164 A P) (@lem5738163 A P)). Qed.
Lemma lem5738166 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term20 A P Q.
Proof. exact (@lem5738165 A P Q). Qed.
Lemma lem5738167 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term20 A P Q) = ((term21 A P Q) = (term22 A P Q)).
Proof. exact (eq_refl (term20 A P Q)). Qed.
Lemma lem5738169 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @monoidal B op.
Proof. exact (h1). Qed.
Lemma lem5738171 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem5738167 A P Q) (@lem5738166 A P Q)). Qed.
Lemma lem5738172 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term23 A B P Q) = (term24 A B P Q).
Proof. exact (@lem5738171 (A -> B) P Q). Qed.
Lemma lem5738173 {A B : Type'} (op : type1400 B) : (term25 A B op) = (term26 A B op).
Proof. exact (@lem5738172 A B (term27 A B op) (term28 A B op)). Qed.
Lemma lem5738174 {A B : Type'} (f : A -> B) (op : type1400 B) : (term29 A B op f) = ((@iterate B A op (@EMPTY A) f) = (@neutral B op)).
Proof. exact (eq_refl (term29 A B op f)). Qed.
Lemma lem5738175 {A B : Type'} (op : type1400 B) : (term30 A B op) = (term27 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5738174 A B f op)). Qed.
Lemma lem5738176 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5738177 {A B : Type'} (op : type1400 B) : (term31 A B op) = (term32 A B op).
Proof. exact (MK_COMB (@lem5738176 A B) (@lem5738175 A B op)). Qed.
Lemma lem5738178 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738179 {A B : Type'} (op : type1400 B) : (term33 A B op) = (term34 A B op).
Proof. exact (MK_COMB (@lem5738178) (@lem5738177 A B op)). Qed.
Lemma lem5738180 {A B : Type'} (op : type1400 B) (f : A -> B) : (term35 A B op f) = (term36 A B op f).
Proof. exact (eq_refl (term35 A B op f)). Qed.
Lemma lem5738181 {A B : Type'} (op : type1400 B) : (term37 A B op) = (term28 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5738180 A B op f)). Qed.
Lemma lem5738182 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5738183 {A B : Type'} (op : type1400 B) : (term38 A B op) = (term39 A B op).
Proof. exact (MK_COMB (@lem5738182 A B) (@lem5738181 A B op)). Qed.
Lemma lem5738184 {A B : Type'} (op : type1400 B) : (term25 A B op) = (term40 A B op).
Proof. exact (MK_COMB (@lem5738179 A B op) (@lem5738183 A B op)). Qed.
Lemma lem5738185 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5738186 {A B : Type'} (op : type1400 B) : (term41 A B op) = (term42 A B op).
Proof. exact (MK_COMB (@lem5738185) (@lem5738184 A B op)). Qed.
Lemma lem5738187 {A B : Type'} (f : A -> B) (op : type1400 B) : (term29 A B op f) = ((@iterate B A op (@EMPTY A) f) = (@neutral B op)).
Proof. exact (eq_refl (term29 A B op f)). Qed.
Lemma lem5738188 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738189 {A B : Type'} (f : A -> B) (op : type1400 B) : (term43 A B op f) = (term44 A B f op).
Proof. exact (MK_COMB (@lem5738188) (@lem5738187 A B f op)). Qed.
Lemma lem5738190 {A B : Type'} (op : type1400 B) (f : A -> B) : (term35 A B op f) = (term36 A B op f).
Proof. exact (eq_refl (term35 A B op f)). Qed.
Lemma lem5738191 {A B : Type'} (op : type1400 B) (f : A -> B) : (term45 A B op f) = (term46 A B op f).
Proof. exact (MK_COMB (@lem5738189 A B f op) (@lem5738190 A B op f)). Qed.
Lemma lem5738192 {A B : Type'} (op : type1400 B) : (term47 A B op) = (term48 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5738191 A B op f)). Qed.
Lemma lem5738193 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5738194 {A B : Type'} (op : type1400 B) : (term26 A B op) = (term49 A B op).
Proof. exact (MK_COMB (@lem5738193 A B) (@lem5738192 A B op)). Qed.
Lemma lem5738195 {A B : Type'} (op : type1400 B) : ((term25 A B op) = (term26 A B op)) = ((term40 A B op) = (term49 A B op)).
Proof. exact (MK_COMB (@lem5738186 A B op) (@lem5738194 A B op)). Qed.
Lemma lem5738196 {A B : Type'} (op : type1400 B) : (term40 A B op) = (term49 A B op).
Proof. exact (EQ_MP (@lem5738195 A B op) (@lem5738173 A B op)). Qed.
Lemma lem5738197 {A B : Type'} (op : type1400 B) : (term49 A B op) = (term40 A B op).
Proof. exact (SYM (@lem5738196 A B op)). Qed.
Lemma lem5738199 (p : Prop) (q : Prop) (r : Prop) : term50 p q r.
Proof. exact (@lem137 p q r (@lem129 p q r)). Qed.
Lemma lem5738200 {A B : Type'} (op : type1400 B) (f : A -> B) : term51 A B op f.
Proof. exact (@lem5738199 (term52 A B op f) (term53 A B f op) (term46 A B op f)). Qed.
Lemma lem5738202 (p : Prop) : p = (term54 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem5738203 {A B : Type'} (op : type1400 B) (f : A -> B) : (term52 A B op f) = (term55 A B op f).
Proof. exact (@lem5738202 (term52 A B op f)). Qed.
Lemma lem5738204 {A B : Type'} (op : type1400 B) (f : A -> B) : (term55 A B op f) = (term52 A B op f).
Proof. exact (SYM (@lem5738203 A B op f)). Qed.
Lemma lem5738205 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term56 A B op f) : term56 A B op f.
Proof. exact (h1). Qed.
Lemma lem5738206 {B : Type'} : term57 B.
Proof. exact (@lem5712802 B). Qed.
Lemma lem5738207 {A : Type'} : term57 A.
Proof. exact (@lem5712802 A). Qed.
Lemma lem5738211 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term58 A B op f) : term58 A B op f.
Proof. exact (h1). Qed.
Lemma lem5738212 {A B : Type'} (op : type1400 B) (f : A -> B) : term59 A B op f.
Proof. exact (fun h0 : term58 A B op f => @lem5738211 A B op f h0). Qed.
Lemma lem5738213 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term59 A B op f) : term59 A B op f.
Proof. exact (h1). Qed.
Lemma lem5738214 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term58 A B op f) : term58 A B op f.
Proof. exact (h1). Qed.
Lemma lem5738215 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term58 A B op f) (h2 : term59 A B op f) : term58 A B op f.
Proof. exact (@lem5738213 A B op f h2 (@lem5738214 A B op f h1)). Qed.
Lemma lem5738216 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term58 A B op f) : term60 A B op f.
Proof. exact (fun h0 : term59 A B op f => @lem5738215 A B op f h1 h0). Qed.
Lemma lem5738217 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term59 A B op f) : term59 A B op f.
Proof. exact (h1). Qed.
Lemma lem5738218 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term58 A B op f) (h2 : term59 A B op f) : term58 A B op f.
Proof. exact (@lem5738216 A B op f h1 (@lem5738217 A B op f h2)). Qed.
Lemma lem5738219 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term59 A B op f) : term59 A B op f.
Proof. exact (fun h0 : term58 A B op f => @lem5738218 A B op f h0 h1). Qed.
Lemma lem5738220 {A B : Type'} (op : type1400 B) (f : A -> B) : term61 A B op f.
Proof. exact (fun h0 : term59 A B op f => @lem5738219 A B op f h0). Qed.
Lemma lem5738223 {A B : Type'} (op : type1400 B) (f : A -> B) : term59 A B op f.
Proof. exact (@lem5738220 A B op f (@lem5738212 A B op f)). Qed.
Lemma lem5738224 {A B : Type'} (op : type1400 B) (f : A -> B) : term59 A B op f.
Proof. exact (@lem5738223 A B op f). Qed.
Lemma lem5738286 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem5738287 {B : Type'} : (term62 B) = (term63 B).
Proof. exact (@lem5738286 (term57 B)). Qed.
Lemma lem5738320 {A : Type'} : (term64 A) = (term64 A).
Proof. exact (eq_refl (term64 A)). Qed.
Lemma lem5738321 {A B : Type'} : (term65 A B) = (term66 A B).
Proof. exact (MK_COMB (@lem5738320 A) (@lem5738287 B)). Qed.
Lemma lem5738324 {A B : Type'} (op : type1400 B) (f : A -> B) : (term67 A B op f) = (term67 A B op f).
Proof. exact (eq_refl (term67 A B op f)). Qed.
Lemma lem5738325 {A B : Type'} (op : type1400 B) (f : A -> B) : (term68 A B op f) = (term69 A B op f).
Proof. exact (MK_COMB (@lem5738324 A B op f) (@lem5738321 A B)). Qed.
Lemma lem5738328 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5738329 {A B : Type'} (op : type1400 B) (f : A -> B) : (term58 A B op f) = (term71 A B op f).
Proof. exact (MK_COMB (@lem5738328 B op) (@lem5738325 A B op f)). Qed.
Lemma lem5738332 {A B : Type'} (f : A -> B) : (term72 A B f) = (term73 A B f).
Proof. exact (fun_ext (fun op : type1400 B => @lem5738329 A B op f)). Qed.
Lemma lem5738333 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5738334 {A B : Type'} (f : A -> B) : (term74 A B f) = (term75 A B f).
Proof. exact (MK_COMB (@lem5738333 B) (@lem5738332 A B f)). Qed.
Lemma lem5738339 {A B : Type'} : (term76 A B) = (term77 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem5738334 A B f)). Qed.
Lemma lem5738340 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5738341 {A B : Type'} : (term78 A B) = (term79 A B).
Proof. exact (MK_COMB (@lem5738340 A B) (@lem5738339 A B)). Qed.
Lemma lem5738346 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5738347 {A B : Type'} (op : type1400 B) (f : A -> B) (y : A) : (term80 A B op f y) = (term81 A B op f y).
Proof. exact (eq_refl (term80 A B op f y)). Qed.
Lemma lem5738348 {B : Type'} (s : B) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5738349 {A B : Type'} (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term82 A B op f y s) = (term83 A B op f y s).
Proof. exact (MK_COMB (@lem5738347 A B op f y) (@lem5738348 B s)). Qed.
Lemma lem5738350 {A B : Type'} (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term83 A B op f y s) = (term84 A B op f y s).
Proof. exact (eq_refl (term83 A B op f y s)). Qed.
Lemma lem5738351 {A B : Type'} (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term82 A B op f y s) = (term84 A B op f y s).
Proof. exact (TRANS (@lem5738349 A B op f y s) (@lem5738350 A B op f y s)). Qed.
Lemma lem5738352 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term85 A B x op f y s) = (term86 A B x op f y s).
Proof. exact (MK_COMB (@lem5738346 A B op f x) (@lem5738351 A B op f y s)). Qed.
Lemma lem5738353 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term86 A B x op f y s) = (term87 A B x op f y s).
Proof. exact (eq_refl (term86 A B x op f y s)). Qed.
Lemma lem5738354 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term85 A B x op f y s) = (term87 A B x op f y s).
Proof. exact (TRANS (@lem5738352 A B x op f y s) (@lem5738353 A B x op f y s)). Qed.
Lemma lem5738355 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5738356 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (y : A) (s : B) : (term88 A B x op f y s) = (term89 A B x op f y s).
Proof. exact (MK_COMB (@lem5738355 B) (@lem5738354 A B x op f y s)). Qed.
Lemma lem5738357 {A B : Type'} (op : type1400 B) (f : A -> B) (y : A) : (term80 A B op f y) = (term81 A B op f y).
Proof. exact (eq_refl (term80 A B op f y)). Qed.
Lemma lem5738358 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5738359 {B : Type'} (s : B) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5738360 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term82 A B op f x s) = (term83 A B op f x s).
Proof. exact (MK_COMB (@lem5738358 A B op f x) (@lem5738359 B s)). Qed.
Lemma lem5738361 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term83 A B op f x s) = (term84 A B op f x s).
Proof. exact (eq_refl (term83 A B op f x s)). Qed.
Lemma lem5738362 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term82 A B op f x s) = (term84 A B op f x s).
Proof. exact (TRANS (@lem5738360 A B op f x s) (@lem5738361 A B op f x s)). Qed.
Lemma lem5738363 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term85 A B y op f x s) = (term86 A B y op f x s).
Proof. exact (MK_COMB (@lem5738357 A B op f y) (@lem5738362 A B op f x s)). Qed.
Lemma lem5738364 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term86 A B y op f x s) = (term87 A B y op f x s).
Proof. exact (eq_refl (term86 A B y op f x s)). Qed.
Lemma lem5738365 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term85 A B y op f x s) = (term87 A B y op f x s).
Proof. exact (TRANS (@lem5738363 A B y op f x s) (@lem5738364 A B y op f x s)). Qed.
Lemma lem5738366 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : ((term85 A B x op f y s) = (term85 A B y op f x s)) = ((term87 A B x op f y s) = (term87 A B y op f x s)).
Proof. exact (MK_COMB (@lem5738356 A B x op f y s) (@lem5738365 A B y op f x s)). Qed.
Lemma lem5738367 {A : Type'} (x : A) (y : A) : (term90 A x y) = (term90 A x y).
Proof. exact (eq_refl (term90 A x y)). Qed.
Lemma lem5738368 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term91 A B y op f x s) = (term92 A B y op f x s).
Proof. exact (MK_COMB (@lem5738367 A x y) (@lem5738366 A B y op f x s)). Qed.
Lemma lem5738369 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term93 A B y op f x) = (term94 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738368 A B y op f x s)). Qed.
Lemma lem5738370 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738371 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term95 A B y op f x) = (term96 A B y op f x).
Proof. exact (MK_COMB (@lem5738370 B) (@lem5738369 A B y op f x)). Qed.
Lemma lem5738372 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term97 A B op f x) = (term98 A B op f x).
Proof. exact (fun_ext (fun y : A => @lem5738371 A B y op f x)). Qed.
Lemma lem5738373 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738374 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term99 A B op f x) = (term100 A B op f x).
Proof. exact (MK_COMB (@lem5738373 A) (@lem5738372 A B op f x)). Qed.
Lemma lem5738375 {A B : Type'} (op : type1400 B) (f : A -> B) : (term101 A B op f) = (term102 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5738374 A B op f x)). Qed.
Lemma lem5738376 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738377 {A B : Type'} (op : type1400 B) (f : A -> B) : (term52 A B op f) = (term103 A B op f).
Proof. exact (MK_COMB (@lem5738376 A) (@lem5738375 A B op f)). Qed.
Lemma lem5738378 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738379 {A B : Type'} (op : type1400 B) (f : A -> B) : (term56 A B op f) = (term104 A B op f).
Proof. exact (MK_COMB (@lem5738378) (@lem5738377 A B op f)). Qed.
Lemma lem5738380 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5738381 {A B : Type'} (op : type1400 B) (f : A -> B) : (term67 A B op f) = (term105 A B op f).
Proof. exact (MK_COMB (@lem5738380) (@lem5738379 A B op f)). Qed.
Lemma lem5738382 {A B : Type'} : (term66 A B) = (term66 A B).
Proof. exact (eq_refl (term66 A B)). Qed.
Lemma lem5738383 {A B : Type'} (op : type1400 B) (f : A -> B) : (term69 A B op f) = (term106 A B op f).
Proof. exact (MK_COMB (@lem5738381 A B op f) (@lem5738382 A B)). Qed.
Lemma lem5738384 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5738385 {A B : Type'} (op : type1400 B) (f : A -> B) : (term71 A B op f) = (term107 A B op f).
Proof. exact (MK_COMB (@lem5738384 B op) (@lem5738383 A B op f)). Qed.
Lemma lem5738386 {A B : Type'} (f : A -> B) : (term73 A B f) = (term108 A B f).
Proof. exact (fun_ext (fun op : type1400 B => @lem5738385 A B op f)). Qed.
Lemma lem5738387 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5738388 {A B : Type'} (f : A -> B) : (term75 A B f) = (term109 A B f).
Proof. exact (MK_COMB (@lem5738387 B) (@lem5738386 A B f)). Qed.
Lemma lem5738389 {A B : Type'} : (term77 A B) = (term110 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem5738388 A B f)). Qed.
Lemma lem5738390 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5738391 {A B : Type'} : (term79 A B) = (term111 A B).
Proof. exact (MK_COMB (@lem5738390 A B) (@lem5738389 A B)). Qed.
Lemma lem5738394 {A B : Type'} : (term78 A B) = (term111 A B).
Proof. exact (TRANS (@lem5738341 A B) (@lem5738391 A B)). Qed.
Lemma lem5738395 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5738396 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5738395 B op x)). Qed.
Lemma lem5738397 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738398 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5738397 B) (@lem5738396 B op)). Qed.
Lemma lem5738399 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5738400 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5738399 B op x y z)). Qed.
Lemma lem5738401 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738402 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5738401 B) (@lem5738400 B op x y)). Qed.
Lemma lem5738403 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5738402 B op x y)). Qed.
Lemma lem5738404 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738405 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5738404 B) (@lem5738403 B op x)). Qed.
Lemma lem5738406 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5738405 B op x)). Qed.
Lemma lem5738407 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738408 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5738407 B) (@lem5738406 B op)). Qed.
Lemma lem5738409 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738410 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5738409) (@lem5738408 B op)). Qed.
Lemma lem5738411 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5738410 B op) (@lem5738398 B op)). Qed.
Lemma lem5738412 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5738413 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5738412 B op y x)). Qed.
Lemma lem5738414 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738415 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5738414 B) (@lem5738413 B op x)). Qed.
Lemma lem5738416 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5738415 B op x)). Qed.
Lemma lem5738417 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738418 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5738417 B) (@lem5738416 B op)). Qed.
Lemma lem5738419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738420 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5738419) (@lem5738418 B op)). Qed.
Lemma lem5738421 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5738420 B op) (@lem5738411 B op)). Qed.
Lemma lem5738424 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5738425 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5738424 B op) (@lem5738421 B op)). Qed.
Lemma lem5738426 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5738425 B op)). Qed.
Lemma lem5738427 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5738428 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5738427 B) (@lem5738426 B)). Qed.
Lemma lem5738429 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738430 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5738429) (@lem5738428 B)). Qed.
Lemma lem5738431 {A : Type'} (op : type1400 A) (x : A) : ((term112 A op x) = x) = ((term112 A op x) = x).
Proof. exact (eq_refl ((term112 A op x) = x)). Qed.
Lemma lem5738432 {A : Type'} (op : type1400 A) : (term113 A op) = (term113 A op).
Proof. exact (fun_ext (fun x : A => @lem5738431 A op x)). Qed.
Lemma lem5738433 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738434 {A : Type'} (op : type1400 A) : (term114 A op) = (term114 A op).
Proof. exact (MK_COMB (@lem5738433 A) (@lem5738432 A op)). Qed.
Lemma lem5738435 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : ((term115 A x op y z) = (term116 A op x y z)) = ((term115 A x op y z) = (term116 A op x y z)).
Proof. exact (eq_refl ((term115 A x op y z) = (term116 A op x y z))). Qed.
Lemma lem5738436 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term117 A op x y) = (term117 A op x y).
Proof. exact (fun_ext (fun z : A => @lem5738435 A op x y z)). Qed.
Lemma lem5738437 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738438 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term118 A op x y) = (term118 A op x y).
Proof. exact (MK_COMB (@lem5738437 A) (@lem5738436 A op x y)). Qed.
Lemma lem5738439 {A : Type'} (op : type1400 A) (x : A) : (term119 A op x) = (term119 A op x).
Proof. exact (fun_ext (fun y : A => @lem5738438 A op x y)). Qed.
Lemma lem5738440 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738441 {A : Type'} (op : type1400 A) (x : A) : (term120 A op x) = (term120 A op x).
Proof. exact (MK_COMB (@lem5738440 A) (@lem5738439 A op x)). Qed.
Lemma lem5738442 {A : Type'} (op : type1400 A) : (term121 A op) = (term121 A op).
Proof. exact (fun_ext (fun x : A => @lem5738441 A op x)). Qed.
Lemma lem5738443 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738444 {A : Type'} (op : type1400 A) : (term122 A op) = (term122 A op).
Proof. exact (MK_COMB (@lem5738443 A) (@lem5738442 A op)). Qed.
Lemma lem5738445 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738446 {A : Type'} (op : type1400 A) : (term123 A op) = (term123 A op).
Proof. exact (MK_COMB (@lem5738445) (@lem5738444 A op)). Qed.
Lemma lem5738447 {A : Type'} (op : type1400 A) : (term124 A op) = (term124 A op).
Proof. exact (MK_COMB (@lem5738446 A op) (@lem5738434 A op)). Qed.
Lemma lem5738448 {A : Type'} (op : type1400 A) (y : A) (x : A) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5738449 {A : Type'} (op : type1400 A) (x : A) : (term125 A op x) = (term125 A op x).
Proof. exact (fun_ext (fun y : A => @lem5738448 A op y x)). Qed.
Lemma lem5738450 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738451 {A : Type'} (op : type1400 A) (x : A) : (term126 A op x) = (term126 A op x).
Proof. exact (MK_COMB (@lem5738450 A) (@lem5738449 A op x)). Qed.
Lemma lem5738452 {A : Type'} (op : type1400 A) : (term127 A op) = (term127 A op).
Proof. exact (fun_ext (fun x : A => @lem5738451 A op x)). Qed.
Lemma lem5738453 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738454 {A : Type'} (op : type1400 A) : (term128 A op) = (term128 A op).
Proof. exact (MK_COMB (@lem5738453 A) (@lem5738452 A op)). Qed.
Lemma lem5738455 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738456 {A : Type'} (op : type1400 A) : (term129 A op) = (term129 A op).
Proof. exact (MK_COMB (@lem5738455) (@lem5738454 A op)). Qed.
Lemma lem5738457 {A : Type'} (op : type1400 A) : (term130 A op) = (term130 A op).
Proof. exact (MK_COMB (@lem5738456 A op) (@lem5738447 A op)). Qed.
Lemma lem5738460 {A : Type'} (op : type1400 A) : (term131 A op) = (term131 A op).
Proof. exact (eq_refl (term131 A op)). Qed.
Lemma lem5738461 {A : Type'} (op : type1400 A) : ((@monoidal A op) = (term130 A op)) = ((@monoidal A op) = (term130 A op)).
Proof. exact (MK_COMB (@lem5738460 A op) (@lem5738457 A op)). Qed.
Lemma lem5738462 {A : Type'} : (term132 A) = (term132 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5738461 A op)). Qed.
Lemma lem5738463 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5738464 {A : Type'} : (term57 A) = (term57 A).
Proof. exact (MK_COMB (@lem5738463 A) (@lem5738462 A)). Qed.
Lemma lem5738465 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5738466 {A : Type'} : (term64 A) = (term64 A).
Proof. exact (MK_COMB (@lem5738465) (@lem5738464 A)). Qed.
Lemma lem5738467 {A B : Type'} : (term66 A B) = (term66 A B).
Proof. exact (MK_COMB (@lem5738466 A) (@lem5738430 B)). Qed.
Lemma lem5738474 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term92 A B y op f x s) = (term92 A B y op f x s).
Proof. exact (eq_refl (term92 A B y op f x s)). Qed.
Lemma lem5738475 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term94 A B y op f x) = (term94 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738474 A B y op f x s)). Qed.
Lemma lem5738476 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5738477 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term96 A B y op f x) = (term96 A B y op f x).
Proof. exact (MK_COMB (@lem5738476 B) (@lem5738475 A B y op f x)). Qed.
Lemma lem5738478 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term98 A B op f x) = (term98 A B op f x).
Proof. exact (fun_ext (fun y : A => @lem5738477 A B y op f x)). Qed.
Lemma lem5738479 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738480 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term100 A B op f x) = (term100 A B op f x).
Proof. exact (MK_COMB (@lem5738479 A) (@lem5738478 A B op f x)). Qed.
Lemma lem5738481 {A B : Type'} (op : type1400 B) (f : A -> B) : (term102 A B op f) = (term102 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5738480 A B op f x)). Qed.
Lemma lem5738482 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738483 {A B : Type'} (op : type1400 B) (f : A -> B) : (term103 A B op f) = (term103 A B op f).
Proof. exact (MK_COMB (@lem5738482 A) (@lem5738481 A B op f)). Qed.
Lemma lem5738484 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738485 {A B : Type'} (op : type1400 B) (f : A -> B) : (term104 A B op f) = (term104 A B op f).
Proof. exact (MK_COMB (@lem5738484) (@lem5738483 A B op f)). Qed.
Lemma lem5738486 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5738487 {A B : Type'} (op : type1400 B) (f : A -> B) : (term105 A B op f) = (term105 A B op f).
Proof. exact (MK_COMB (@lem5738486) (@lem5738485 A B op f)). Qed.
Lemma lem5738488 {A B : Type'} (op : type1400 B) (f : A -> B) : (term106 A B op f) = (term106 A B op f).
Proof. exact (MK_COMB (@lem5738487 A B op f) (@lem5738467 A B)). Qed.
Lemma lem5738491 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5738492 {A B : Type'} (op : type1400 B) (f : A -> B) : (term107 A B op f) = (term107 A B op f).
Proof. exact (MK_COMB (@lem5738491 B op) (@lem5738488 A B op f)). Qed.
Lemma lem5738493 {A B : Type'} (f : A -> B) : (term108 A B f) = (term108 A B f).
Proof. exact (fun_ext (fun op : type1400 B => @lem5738492 A B op f)). Qed.
Lemma lem5738494 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5738495 {A B : Type'} (f : A -> B) : (term109 A B f) = (term109 A B f).
Proof. exact (MK_COMB (@lem5738494 B) (@lem5738493 A B f)). Qed.
Lemma lem5738496 {A B : Type'} : (term110 A B) = (term110 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem5738495 A B f)). Qed.
Lemma lem5738497 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5738498 {A B : Type'} : (term111 A B) = (term111 A B).
Proof. exact (MK_COMB (@lem5738497 A B) (@lem5738496 A B)). Qed.
Lemma lem5738631 {A B : Type'} : (term78 A B) = (term111 A B).
Proof. exact (TRANS (@lem5738394 A B) (@lem5738498 A B)). Qed.
Lemma lem5738632 {A B : Type'} : (term111 A B) = (term78 A B).
Proof. exact (SYM (@lem5738631 A B)). Qed.
Lemma lem5738634 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term104 A B op f) : term104 A B op f.
Proof. exact (h1). Qed.
Lemma lem5738635 {A : Type'} (h1 : term57 A) : term57 A.
Proof. exact (h1). Qed.
Lemma lem5738636 {B : Type'} (h1 : term57 B) : term57 B.
Proof. exact (h1). Qed.
Lemma lem5738642 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @monoidal B op.
Proof. exact (h1). Qed.
Lemma lem5738649 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term133 A B y op f x s) = (term134 A B y op f x s).
Proof. exact (@lem17362 (term135 A x y) ((term87 A B x op f y s) = (term87 A B y op f x s))). Qed.
Lemma lem5738650 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5738651 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term138 A B y op f x) = (term139 A B y op f x).
Proof. exact (@lem5738650 B (term94 A B y op f x)). Qed.
Lemma lem5738652 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term140 A B y op f x s) = (term92 A B y op f x s).
Proof. exact (eq_refl (term140 A B y op f x s)). Qed.
Lemma lem5738653 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738654 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term141 A B y op f x s) = (term133 A B y op f x s).
Proof. exact (MK_COMB (@lem5738653) (@lem5738652 A B y op f x s)). Qed.
Lemma lem5738655 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term141 A B y op f x s) = (term134 A B y op f x s).
Proof. exact (TRANS (@lem5738654 A B y op f x s) (@lem5738649 A B y op f x s)). Qed.
Lemma lem5738656 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term142 A B y op f x) = (term143 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738655 A B y op f x s)). Qed.
Lemma lem5738657 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5738658 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term139 A B y op f x) = (term144 A B y op f x).
Proof. exact (MK_COMB (@lem5738657 B) (@lem5738656 A B y op f x)). Qed.
Lemma lem5738659 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term138 A B y op f x) = (term144 A B y op f x).
Proof. exact (TRANS (@lem5738651 A B y op f x) (@lem5738658 A B y op f x)). Qed.
Lemma lem5738660 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738661 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term145 A B op f x) = (term146 A B op f x).
Proof. exact (@lem5738660 A (term98 A B op f x)). Qed.
Lemma lem5738662 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term147 A B op f x y) = (term96 A B y op f x).
Proof. exact (eq_refl (term147 A B op f x y)). Qed.
Lemma lem5738663 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738664 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term148 A B op f x y) = (term138 A B y op f x).
Proof. exact (MK_COMB (@lem5738663) (@lem5738662 A B y op f x)). Qed.
Lemma lem5738665 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term148 A B op f x y) = (term144 A B y op f x).
Proof. exact (TRANS (@lem5738664 A B y op f x) (@lem5738659 A B y op f x)). Qed.
Lemma lem5738666 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term149 A B op f x) = (term150 A B op f x).
Proof. exact (fun_ext (fun y : A => @lem5738665 A B y op f x)). Qed.
Lemma lem5738667 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738668 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term146 A B op f x) = (term151 A B op f x).
Proof. exact (MK_COMB (@lem5738667 A) (@lem5738666 A B op f x)). Qed.
Lemma lem5738669 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term145 A B op f x) = (term151 A B op f x).
Proof. exact (TRANS (@lem5738661 A B op f x) (@lem5738668 A B op f x)). Qed.
Lemma lem5738670 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738671 {A B : Type'} (op : type1400 B) (f : A -> B) : (term104 A B op f) = (term152 A B op f).
Proof. exact (@lem5738670 A (term102 A B op f)). Qed.
Lemma lem5738672 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term153 A B op f x) = (term100 A B op f x).
Proof. exact (eq_refl (term153 A B op f x)). Qed.
Lemma lem5738673 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738674 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term154 A B op f x) = (term145 A B op f x).
Proof. exact (MK_COMB (@lem5738673) (@lem5738672 A B op f x)). Qed.
Lemma lem5738675 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term154 A B op f x) = (term151 A B op f x).
Proof. exact (TRANS (@lem5738674 A B op f x) (@lem5738669 A B op f x)). Qed.
Lemma lem5738676 {A B : Type'} (op : type1400 B) (f : A -> B) : (term155 A B op f) = (term156 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5738675 A B op f x)). Qed.
Lemma lem5738677 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738678 {A B : Type'} (op : type1400 B) (f : A -> B) : (term152 A B op f) = (term157 A B op f).
Proof. exact (MK_COMB (@lem5738677 A) (@lem5738676 A B op f)). Qed.
Lemma lem5738679 {A B : Type'} (op : type1400 B) (f : A -> B) : (term104 A B op f) = (term157 A B op f).
Proof. exact (TRANS (@lem5738671 A B op f) (@lem5738678 A B op f)). Qed.
Lemma lem5738689 {A : Type'} (P : Prop) (Q : A -> Prop) : (term158 A P Q) = (term159 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem5738690 {B : Type'} (P : Prop) (Q : B -> Prop) : (term158 B P Q) = (term159 B P Q).
Proof. exact (@lem5738689 B P Q). Qed.
Lemma lem5738691 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term160 A B y op f x) = (term161 A B y op f x).
Proof. exact (@lem5738690 B (term135 A x y) (term162 A B y op f x)). Qed.
Lemma lem5738692 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term163 A B y op f x s) = (term164 A B y op f x s).
Proof. exact (eq_refl (term163 A B y op f x s)). Qed.
Lemma lem5738693 {A : Type'} (x : A) (y : A) : (term165 A x y) = (term165 A x y).
Proof. exact (eq_refl (term165 A x y)). Qed.
Lemma lem5738694 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term166 A B y op f x s) = (term134 A B y op f x s).
Proof. exact (MK_COMB (@lem5738693 A x y) (@lem5738692 A B y op f x s)). Qed.
Lemma lem5738695 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term167 A B y op f x) = (term143 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738694 A B y op f x s)). Qed.
Lemma lem5738696 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5738697 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term160 A B y op f x) = (term144 A B y op f x).
Proof. exact (MK_COMB (@lem5738696 B) (@lem5738695 A B y op f x)). Qed.
Lemma lem5738698 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5738699 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term168 A B y op f x) = (term169 A B y op f x).
Proof. exact (MK_COMB (@lem5738698) (@lem5738697 A B y op f x)). Qed.
Lemma lem5738700 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term163 A B y op f x s) = (term164 A B y op f x s).
Proof. exact (eq_refl (term163 A B y op f x s)). Qed.
Lemma lem5738701 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term170 A B y op f x) = (term162 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738700 A B y op f x s)). Qed.
Lemma lem5738702 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5738703 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term171 A B y op f x) = (term172 A B y op f x).
Proof. exact (MK_COMB (@lem5738702 B) (@lem5738701 A B y op f x)). Qed.
Lemma lem5738704 {A : Type'} (x : A) (y : A) : (term165 A x y) = (term165 A x y).
Proof. exact (eq_refl (term165 A x y)). Qed.
Lemma lem5738705 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term161 A B y op f x) = (term173 A B y op f x).
Proof. exact (MK_COMB (@lem5738704 A x y) (@lem5738703 A B y op f x)). Qed.
Lemma lem5738706 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : ((term160 A B y op f x) = (term161 A B y op f x)) = ((term144 A B y op f x) = (term173 A B y op f x)).
Proof. exact (MK_COMB (@lem5738699 A B y op f x) (@lem5738705 A B y op f x)). Qed.
Lemma lem5738707 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term144 A B y op f x) = (term173 A B y op f x).
Proof. exact (EQ_MP (@lem5738706 A B y op f x) (@lem5738691 A B y op f x)). Qed.
Lemma lem5738712 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term150 A B op f x) = (term174 A B op f x).
Proof. exact (fun_ext (fun y : A => @lem5738707 A B y op f x)). Qed.
Lemma lem5738713 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738714 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term151 A B op f x) = (term175 A B op f x).
Proof. exact (MK_COMB (@lem5738713 A) (@lem5738712 A B op f x)). Qed.
Lemma lem5738763 {A B : Type'} (op : type1400 B) (f : A -> B) : (term156 A B op f) = (term176 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5738714 A B op f x)). Qed.
Lemma lem5738764 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738765 {A B : Type'} (op : type1400 B) (f : A -> B) : (term157 A B op f) = (term177 A B op f).
Proof. exact (MK_COMB (@lem5738764 A) (@lem5738763 A B op f)). Qed.
Lemma lem5738771 {A : Type'} (P : Prop) (Q : A -> Prop) : (term159 A P Q) = (term158 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem5738772 {B : Type'} (P : Prop) (Q : B -> Prop) : (term159 B P Q) = (term158 B P Q).
Proof. exact (@lem5738771 B P Q). Qed.
Lemma lem5738773 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term161 A B y op f x) = (term160 A B y op f x).
Proof. exact (@lem5738772 B (term135 A x y) (term162 A B y op f x)). Qed.
Lemma lem5738774 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term163 A B y op f x s) = (term164 A B y op f x s).
Proof. exact (eq_refl (term163 A B y op f x s)). Qed.
Lemma lem5738775 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term170 A B y op f x) = (term162 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738774 A B y op f x s)). Qed.
Lemma lem5738776 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5738777 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term171 A B y op f x) = (term172 A B y op f x).
Proof. exact (MK_COMB (@lem5738776 B) (@lem5738775 A B y op f x)). Qed.
Lemma lem5738778 {A : Type'} (x : A) (y : A) : (term165 A x y) = (term165 A x y).
Proof. exact (eq_refl (term165 A x y)). Qed.
Lemma lem5738779 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term161 A B y op f x) = (term173 A B y op f x).
Proof. exact (MK_COMB (@lem5738778 A x y) (@lem5738777 A B y op f x)). Qed.
Lemma lem5738780 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5738781 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term178 A B y op f x) = (term179 A B y op f x).
Proof. exact (MK_COMB (@lem5738780) (@lem5738779 A B y op f x)). Qed.
Lemma lem5738782 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term163 A B y op f x s) = (term164 A B y op f x s).
Proof. exact (eq_refl (term163 A B y op f x s)). Qed.
Lemma lem5738783 {A : Type'} (x : A) (y : A) : (term165 A x y) = (term165 A x y).
Proof. exact (eq_refl (term165 A x y)). Qed.
Lemma lem5738784 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) (s : B) : (term166 A B y op f x s) = (term134 A B y op f x s).
Proof. exact (MK_COMB (@lem5738783 A x y) (@lem5738782 A B y op f x s)). Qed.
Lemma lem5738785 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term167 A B y op f x) = (term143 A B y op f x).
Proof. exact (fun_ext (fun s : B => @lem5738784 A B y op f x s)). Qed.
Lemma lem5738786 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5738787 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term160 A B y op f x) = (term144 A B y op f x).
Proof. exact (MK_COMB (@lem5738786 B) (@lem5738785 A B y op f x)). Qed.
Lemma lem5738788 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : ((term161 A B y op f x) = (term160 A B y op f x)) = ((term173 A B y op f x) = (term144 A B y op f x)).
Proof. exact (MK_COMB (@lem5738781 A B y op f x) (@lem5738787 A B y op f x)). Qed.
Lemma lem5738789 {A B : Type'} (y : A) (op : type1400 B) (f : A -> B) (x : A) : (term173 A B y op f x) = (term144 A B y op f x).
Proof. exact (EQ_MP (@lem5738788 A B y op f x) (@lem5738773 A B y op f x)). Qed.
Lemma lem5738790 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term174 A B op f x) = (term150 A B op f x).
Proof. exact (fun_ext (fun y : A => @lem5738789 A B y op f x)). Qed.
Lemma lem5738791 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738792 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term175 A B op f x) = (term151 A B op f x).
Proof. exact (MK_COMB (@lem5738791 A) (@lem5738790 A B op f x)). Qed.
Lemma lem5738793 {A B : Type'} (op : type1400 B) (f : A -> B) : (term176 A B op f) = (term156 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5738792 A B op f x)). Qed.
Lemma lem5738794 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738795 {A B : Type'} (op : type1400 B) (f : A -> B) : (term177 A B op f) = (term157 A B op f).
Proof. exact (MK_COMB (@lem5738794 A) (@lem5738793 A B op f)). Qed.
Lemma lem5738796 {A B : Type'} (op : type1400 B) (f : A -> B) : (term157 A B op f) = (term157 A B op f).
Proof. exact (TRANS (@lem5738765 A B op f) (@lem5738795 A B op f)). Qed.
Lemma lem5738797 {A B : Type'} (op : type1400 B) (f : A -> B) : (term104 A B op f) = (term157 A B op f).
Proof. exact (TRANS (@lem5738679 A B op f) (@lem5738796 A B op f)). Qed.
Lemma lem5738798 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term104 A B op f) : term157 A B op f.
Proof. exact (EQ_MP (@lem5738797 A B op f) (@lem5738634 A B op f h1)). Qed.
Lemma lem5738802 {A : Type'} (op : type1400 A) (y : A) (x : A) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5738803 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738804 {A : Type'} (op : type1400 A) (x : A) : (term180 A op x) = (term181 A op x).
Proof. exact (@lem5738803 A (term125 A op x)). Qed.
Lemma lem5738805 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term182 A op x y) = ((op x y) = (op y x)).
Proof. exact (eq_refl (term182 A op x y)). Qed.
Lemma lem5738806 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738808 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term183 A op x y) = (term184 A op y x).
Proof. exact (MK_COMB (@lem5738806) (@lem5738805 A op y x)). Qed.
Lemma lem5738809 {A : Type'} (op : type1400 A) (x : A) : (term185 A op x) = (term186 A op x).
Proof. exact (fun_ext (fun y : A => @lem5738808 A op y x)). Qed.
Lemma lem5738810 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738811 {A : Type'} (op : type1400 A) (x : A) : (term181 A op x) = (term187 A op x).
Proof. exact (MK_COMB (@lem5738810 A) (@lem5738809 A op x)). Qed.
Lemma lem5738812 {A : Type'} (op : type1400 A) (x : A) : (term180 A op x) = (term187 A op x).
Proof. exact (TRANS (@lem5738804 A op x) (@lem5738811 A op x)). Qed.
Lemma lem5738813 {A : Type'} (op : type1400 A) (x : A) : (term125 A op x) = (term125 A op x).
Proof. exact (fun_ext (fun y : A => @lem5738802 A op y x)). Qed.
Lemma lem5738814 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738815 {A : Type'} (op : type1400 A) (x : A) : (term126 A op x) = (term126 A op x).
Proof. exact (MK_COMB (@lem5738814 A) (@lem5738813 A op x)). Qed.
Lemma lem5738816 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738817 {A : Type'} (op : type1400 A) : (term188 A op) = (term189 A op).
Proof. exact (@lem5738816 A (term127 A op)). Qed.
Lemma lem5738818 {A : Type'} (op : type1400 A) (x : A) : (term190 A op x) = (term126 A op x).
Proof. exact (eq_refl (term190 A op x)). Qed.
Lemma lem5738819 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738820 {A : Type'} (op : type1400 A) (x : A) : (term191 A op x) = (term180 A op x).
Proof. exact (MK_COMB (@lem5738819) (@lem5738818 A op x)). Qed.
Lemma lem5738821 {A : Type'} (op : type1400 A) (x : A) : (term191 A op x) = (term187 A op x).
Proof. exact (TRANS (@lem5738820 A op x) (@lem5738812 A op x)). Qed.
Lemma lem5738822 {A : Type'} (op : type1400 A) : (term192 A op) = (term193 A op).
Proof. exact (fun_ext (fun x : A => @lem5738821 A op x)). Qed.
Lemma lem5738823 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738824 {A : Type'} (op : type1400 A) : (term189 A op) = (term194 A op).
Proof. exact (MK_COMB (@lem5738823 A) (@lem5738822 A op)). Qed.
Lemma lem5738825 {A : Type'} (op : type1400 A) : (term188 A op) = (term194 A op).
Proof. exact (TRANS (@lem5738817 A op) (@lem5738824 A op)). Qed.
Lemma lem5738826 {A : Type'} (op : type1400 A) : (term127 A op) = (term127 A op).
Proof. exact (fun_ext (fun x : A => @lem5738815 A op x)). Qed.
Lemma lem5738827 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738828 {A : Type'} (op : type1400 A) : (term128 A op) = (term128 A op).
Proof. exact (MK_COMB (@lem5738827 A) (@lem5738826 A op)). Qed.
Lemma lem5738830 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : ((term115 A x op y z) = (term116 A op x y z)) = ((term115 A x op y z) = (term116 A op x y z)).
Proof. exact (eq_refl ((term115 A x op y z) = (term116 A op x y z))). Qed.
Lemma lem5738831 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738832 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term195 A op x y) = (term196 A op x y).
Proof. exact (@lem5738831 A (term117 A op x y)). Qed.
Lemma lem5738833 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : (term197 A op x y z) = ((term115 A x op y z) = (term116 A op x y z)).
Proof. exact (eq_refl (term197 A op x y z)). Qed.
Lemma lem5738834 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738836 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : (term198 A op x y z) = (term199 A op x y z).
Proof. exact (MK_COMB (@lem5738834) (@lem5738833 A op x y z)). Qed.
Lemma lem5738837 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term200 A op x y) = (term201 A op x y).
Proof. exact (fun_ext (fun z : A => @lem5738836 A op x y z)). Qed.
Lemma lem5738838 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738839 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term196 A op x y) = (term202 A op x y).
Proof. exact (MK_COMB (@lem5738838 A) (@lem5738837 A op x y)). Qed.
Lemma lem5738840 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term195 A op x y) = (term202 A op x y).
Proof. exact (TRANS (@lem5738832 A op x y) (@lem5738839 A op x y)). Qed.
Lemma lem5738841 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term117 A op x y) = (term117 A op x y).
Proof. exact (fun_ext (fun z : A => @lem5738830 A op x y z)). Qed.
Lemma lem5738842 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738843 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term118 A op x y) = (term118 A op x y).
Proof. exact (MK_COMB (@lem5738842 A) (@lem5738841 A op x y)). Qed.
Lemma lem5738844 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738845 {A : Type'} (op : type1400 A) (x : A) : (term203 A op x) = (term204 A op x).
Proof. exact (@lem5738844 A (term119 A op x)). Qed.
Lemma lem5738846 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term205 A op x y) = (term118 A op x y).
Proof. exact (eq_refl (term205 A op x y)). Qed.
Lemma lem5738847 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738848 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term206 A op x y) = (term195 A op x y).
Proof. exact (MK_COMB (@lem5738847) (@lem5738846 A op x y)). Qed.
Lemma lem5738849 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term206 A op x y) = (term202 A op x y).
Proof. exact (TRANS (@lem5738848 A op x y) (@lem5738840 A op x y)). Qed.
Lemma lem5738850 {A : Type'} (op : type1400 A) (x : A) : (term207 A op x) = (term208 A op x).
Proof. exact (fun_ext (fun y : A => @lem5738849 A op x y)). Qed.
Lemma lem5738851 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738852 {A : Type'} (op : type1400 A) (x : A) : (term204 A op x) = (term209 A op x).
Proof. exact (MK_COMB (@lem5738851 A) (@lem5738850 A op x)). Qed.
Lemma lem5738853 {A : Type'} (op : type1400 A) (x : A) : (term203 A op x) = (term209 A op x).
Proof. exact (TRANS (@lem5738845 A op x) (@lem5738852 A op x)). Qed.
Lemma lem5738854 {A : Type'} (op : type1400 A) (x : A) : (term119 A op x) = (term119 A op x).
Proof. exact (fun_ext (fun y : A => @lem5738843 A op x y)). Qed.
Lemma lem5738855 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738856 {A : Type'} (op : type1400 A) (x : A) : (term120 A op x) = (term120 A op x).
Proof. exact (MK_COMB (@lem5738855 A) (@lem5738854 A op x)). Qed.
Lemma lem5738857 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738858 {A : Type'} (op : type1400 A) : (term210 A op) = (term211 A op).
Proof. exact (@lem5738857 A (term121 A op)). Qed.
Lemma lem5738859 {A : Type'} (op : type1400 A) (x : A) : (term212 A op x) = (term120 A op x).
Proof. exact (eq_refl (term212 A op x)). Qed.
Lemma lem5738860 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738861 {A : Type'} (op : type1400 A) (x : A) : (term213 A op x) = (term203 A op x).
Proof. exact (MK_COMB (@lem5738860) (@lem5738859 A op x)). Qed.
Lemma lem5738862 {A : Type'} (op : type1400 A) (x : A) : (term213 A op x) = (term209 A op x).
Proof. exact (TRANS (@lem5738861 A op x) (@lem5738853 A op x)). Qed.
Lemma lem5738863 {A : Type'} (op : type1400 A) : (term214 A op) = (term215 A op).
Proof. exact (fun_ext (fun x : A => @lem5738862 A op x)). Qed.
Lemma lem5738864 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738865 {A : Type'} (op : type1400 A) : (term211 A op) = (term216 A op).
Proof. exact (MK_COMB (@lem5738864 A) (@lem5738863 A op)). Qed.
Lemma lem5738866 {A : Type'} (op : type1400 A) : (term210 A op) = (term216 A op).
Proof. exact (TRANS (@lem5738858 A op) (@lem5738865 A op)). Qed.
Lemma lem5738867 {A : Type'} (op : type1400 A) : (term121 A op) = (term121 A op).
Proof. exact (fun_ext (fun x : A => @lem5738856 A op x)). Qed.
Lemma lem5738868 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738869 {A : Type'} (op : type1400 A) : (term122 A op) = (term122 A op).
Proof. exact (MK_COMB (@lem5738868 A) (@lem5738867 A op)). Qed.
Lemma lem5738871 {A : Type'} (op : type1400 A) (x : A) : ((term112 A op x) = x) = ((term112 A op x) = x).
Proof. exact (eq_refl ((term112 A op x) = x)). Qed.
Lemma lem5738872 {A : Type'} (P : A -> Prop) : (term136 A P) = (term137 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem5738873 {A : Type'} (op : type1400 A) : (term217 A op) = (term218 A op).
Proof. exact (@lem5738872 A (term113 A op)). Qed.
Lemma lem5738874 {A : Type'} (op : type1400 A) (x : A) : (term219 A op x) = ((term112 A op x) = x).
Proof. exact (eq_refl (term219 A op x)). Qed.
Lemma lem5738875 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5738877 {A : Type'} (op : type1400 A) (x : A) : (term220 A op x) = (term221 A op x).
Proof. exact (MK_COMB (@lem5738875) (@lem5738874 A op x)). Qed.
Lemma lem5738878 {A : Type'} (op : type1400 A) : (term222 A op) = (term223 A op).
Proof. exact (fun_ext (fun x : A => @lem5738877 A op x)). Qed.
Lemma lem5738879 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5738880 {A : Type'} (op : type1400 A) : (term218 A op) = (term224 A op).
Proof. exact (MK_COMB (@lem5738879 A) (@lem5738878 A op)). Qed.
Lemma lem5738881 {A : Type'} (op : type1400 A) : (term217 A op) = (term224 A op).
Proof. exact (TRANS (@lem5738873 A op) (@lem5738880 A op)). Qed.
Lemma lem5738882 {A : Type'} (op : type1400 A) : (term113 A op) = (term113 A op).
Proof. exact (fun_ext (fun x : A => @lem5738871 A op x)). Qed.
Lemma lem5738883 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5738884 {A : Type'} (op : type1400 A) : (term114 A op) = (term114 A op).
Proof. exact (MK_COMB (@lem5738883 A) (@lem5738882 A op)). Qed.
Lemma lem5738885 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5738886 {A : Type'} (op : type1400 A) : (term225 A op) = (term226 A op).
Proof. exact (MK_COMB (@lem5738885) (@lem5738866 A op)). Qed.
Lemma lem5738887 {A : Type'} (op : type1400 A) : (term227 A op) = (term228 A op).
Proof. exact (MK_COMB (@lem5738886 A op) (@lem5738881 A op)). Qed.
Lemma lem5738888 {A : Type'} (op : type1400 A) : (term229 A op) = (term227 A op).
Proof. exact (@lem17045 (term122 A op) (term114 A op)). Qed.
Lemma lem5738889 {A : Type'} (op : type1400 A) : (term229 A op) = (term228 A op).
Proof. exact (TRANS (@lem5738888 A op) (@lem5738887 A op)). Qed.
Lemma lem5738890 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738891 {A : Type'} (op : type1400 A) : (term123 A op) = (term123 A op).
Proof. exact (MK_COMB (@lem5738890) (@lem5738869 A op)). Qed.
Lemma lem5738892 {A : Type'} (op : type1400 A) : (term124 A op) = (term124 A op).
Proof. exact (MK_COMB (@lem5738891 A op) (@lem5738884 A op)). Qed.
Lemma lem5738893 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5738894 {A : Type'} (op : type1400 A) : (term230 A op) = (term231 A op).
Proof. exact (MK_COMB (@lem5738893) (@lem5738825 A op)). Qed.
Lemma lem5738895 {A : Type'} (op : type1400 A) : (term232 A op) = (term233 A op).
Proof. exact (MK_COMB (@lem5738894 A op) (@lem5738889 A op)). Qed.
Lemma lem5738896 {A : Type'} (op : type1400 A) : (term234 A op) = (term232 A op).
Proof. exact (@lem17045 (term128 A op) (term124 A op)). Qed.
Lemma lem5738897 {A : Type'} (op : type1400 A) : (term234 A op) = (term233 A op).
Proof. exact (TRANS (@lem5738896 A op) (@lem5738895 A op)). Qed.
Lemma lem5738898 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738899 {A : Type'} (op : type1400 A) : (term129 A op) = (term129 A op).
Proof. exact (MK_COMB (@lem5738898) (@lem5738828 A op)). Qed.
Lemma lem5738900 {A : Type'} (op : type1400 A) : (term130 A op) = (term130 A op).
Proof. exact (MK_COMB (@lem5738899 A op) (@lem5738892 A op)). Qed.
Lemma lem5738902 {A : Type'} (op : type1400 A) : (term235 A op) = (term235 A op).
Proof. exact (eq_refl (term235 A op)). Qed.
Lemma lem5738903 {A : Type'} (op : type1400 A) : (term236 A op) = (term236 A op).
Proof. exact (MK_COMB (@lem5738902 A op) (@lem5738900 A op)). Qed.
Lemma lem5738905 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5738906 {A : Type'} (op : type1400 A) : (term238 A op) = (term239 A op).
Proof. exact (MK_COMB (@lem5738905 A op) (@lem5738897 A op)). Qed.
Lemma lem5738907 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738908 {A : Type'} (op : type1400 A) : (term240 A op) = (term241 A op).
Proof. exact (MK_COMB (@lem5738907) (@lem5738906 A op)). Qed.
Lemma lem5738909 {A : Type'} (op : type1400 A) : (term242 A op) = (term243 A op).
Proof. exact (MK_COMB (@lem5738908 A op) (@lem5738903 A op)). Qed.
Lemma lem5738910 {A : Type'} (op : type1400 A) : ((@monoidal A op) = (term130 A op)) = (term242 A op).
Proof. exact (@lem17784 (@monoidal A op) (term130 A op)). Qed.
Lemma lem5738911 {A : Type'} (op : type1400 A) : ((@monoidal A op) = (term130 A op)) = (term243 A op).
Proof. exact (TRANS (@lem5738910 A op) (@lem5738909 A op)). Qed.
Lemma lem5738912 {A : Type'} : (term132 A) = (term244 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5738911 A op)). Qed.
Lemma lem5738913 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5738914 {A : Type'} : (term57 A) = (term245 A).
Proof. exact (MK_COMB (@lem5738913 A) (@lem5738912 A)). Qed.
Lemma lem5738916 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term22 A P Q) = (term21 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5738917 {A : Type'} (P : type403 A) (Q : type403 A) : (term246 A P Q) = (term247 A P Q).
Proof. exact (@lem5738916 (type1400 A) P Q). Qed.
Lemma lem5738918 {A : Type'} : (term248 A) = (term249 A).
Proof. exact (@lem5738917 A (term250 A) (term251 A)). Qed.
Lemma lem5738919 {A : Type'} (op : type1400 A) : (term252 A op) = (term239 A op).
Proof. exact (eq_refl (term252 A op)). Qed.
Lemma lem5738920 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738921 {A : Type'} (op : type1400 A) : (term253 A op) = (term241 A op).
Proof. exact (MK_COMB (@lem5738920) (@lem5738919 A op)). Qed.
Lemma lem5738922 {A : Type'} (op : type1400 A) : (term254 A op) = (term236 A op).
Proof. exact (eq_refl (term254 A op)). Qed.
Lemma lem5738923 {A : Type'} (op : type1400 A) : (term255 A op) = (term243 A op).
Proof. exact (MK_COMB (@lem5738921 A op) (@lem5738922 A op)). Qed.
Lemma lem5738924 {A : Type'} : (term256 A) = (term244 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5738923 A op)). Qed.
Lemma lem5738925 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5738926 {A : Type'} : (term248 A) = (term245 A).
Proof. exact (MK_COMB (@lem5738925 A) (@lem5738924 A)). Qed.
Lemma lem5738927 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5738928 {A : Type'} : (term257 A) = (term258 A).
Proof. exact (MK_COMB (@lem5738927) (@lem5738926 A)). Qed.
Lemma lem5738929 {A : Type'} (op : type1400 A) : (term252 A op) = (term239 A op).
Proof. exact (eq_refl (term252 A op)). Qed.
Lemma lem5738930 {A : Type'} : (term259 A) = (term250 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5738929 A op)). Qed.
Lemma lem5738931 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5738932 {A : Type'} : (term260 A) = (term261 A).
Proof. exact (MK_COMB (@lem5738931 A) (@lem5738930 A)). Qed.
Lemma lem5738933 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5738934 {A : Type'} : (term262 A) = (term263 A).
Proof. exact (MK_COMB (@lem5738933) (@lem5738932 A)). Qed.
Lemma lem5738935 {A : Type'} (op : type1400 A) : (term254 A op) = (term236 A op).
Proof. exact (eq_refl (term254 A op)). Qed.
Lemma lem5738936 {A : Type'} : (term264 A) = (term251 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5738935 A op)). Qed.
Lemma lem5738937 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5738938 {A : Type'} : (term265 A) = (term266 A).
Proof. exact (MK_COMB (@lem5738937 A) (@lem5738936 A)). Qed.
Lemma lem5738939 {A : Type'} : (term249 A) = (term267 A).
Proof. exact (MK_COMB (@lem5738934 A) (@lem5738938 A)). Qed.
Lemma lem5738940 {A : Type'} : ((term248 A) = (term249 A)) = ((term245 A) = (term267 A)).
Proof. exact (MK_COMB (@lem5738928 A) (@lem5738939 A)). Qed.
Lemma lem5738941 {A : Type'} : (term245 A) = (term267 A).
Proof. exact (EQ_MP (@lem5738940 A) (@lem5738918 A)). Qed.
Lemma lem5739067 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5739068 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (@lem5739067 A P Q). Qed.
Lemma lem5739069 {A : Type'} (op : type1400 A) : (term270 A op) = (term271 A op).
Proof. exact (@lem5739068 A (term215 A op) (term223 A op)). Qed.
Lemma lem5739070 {A : Type'} (op : type1400 A) (x : A) : (term272 A op x) = (term209 A op x).
Proof. exact (eq_refl (term272 A op x)). Qed.
Lemma lem5739071 {A : Type'} (op : type1400 A) : (term273 A op) = (term215 A op).
Proof. exact (fun_ext (fun x : A => @lem5739070 A op x)). Qed.
Lemma lem5739072 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739073 {A : Type'} (op : type1400 A) : (term274 A op) = (term216 A op).
Proof. exact (MK_COMB (@lem5739072 A) (@lem5739071 A op)). Qed.
Lemma lem5739074 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739075 {A : Type'} (op : type1400 A) : (term275 A op) = (term226 A op).
Proof. exact (MK_COMB (@lem5739074) (@lem5739073 A op)). Qed.
Lemma lem5739076 {A : Type'} (op : type1400 A) (x : A) : (term276 A op x) = (term221 A op x).
Proof. exact (eq_refl (term276 A op x)). Qed.
Lemma lem5739077 {A : Type'} (op : type1400 A) : (term277 A op) = (term223 A op).
Proof. exact (fun_ext (fun x : A => @lem5739076 A op x)). Qed.
Lemma lem5739078 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739079 {A : Type'} (op : type1400 A) : (term278 A op) = (term224 A op).
Proof. exact (MK_COMB (@lem5739078 A) (@lem5739077 A op)). Qed.
Lemma lem5739080 {A : Type'} (op : type1400 A) : (term270 A op) = (term228 A op).
Proof. exact (MK_COMB (@lem5739075 A op) (@lem5739079 A op)). Qed.
Lemma lem5739081 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739082 {A : Type'} (op : type1400 A) : (term279 A op) = (term280 A op).
Proof. exact (MK_COMB (@lem5739081) (@lem5739080 A op)). Qed.
Lemma lem5739083 {A : Type'} (op : type1400 A) (x : A) : (term272 A op x) = (term209 A op x).
Proof. exact (eq_refl (term272 A op x)). Qed.
Lemma lem5739084 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739085 {A : Type'} (op : type1400 A) (x : A) : (term281 A op x) = (term282 A op x).
Proof. exact (MK_COMB (@lem5739084) (@lem5739083 A op x)). Qed.
Lemma lem5739086 {A : Type'} (op : type1400 A) (x : A) : (term276 A op x) = (term221 A op x).
Proof. exact (eq_refl (term276 A op x)). Qed.
Lemma lem5739087 {A : Type'} (op : type1400 A) (x : A) : (term283 A op x) = (term284 A op x).
Proof. exact (MK_COMB (@lem5739085 A op x) (@lem5739086 A op x)). Qed.
Lemma lem5739088 {A : Type'} (op : type1400 A) : (term285 A op) = (term286 A op).
Proof. exact (fun_ext (fun x : A => @lem5739087 A op x)). Qed.
Lemma lem5739089 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739090 {A : Type'} (op : type1400 A) : (term271 A op) = (term287 A op).
Proof. exact (MK_COMB (@lem5739089 A) (@lem5739088 A op)). Qed.
Lemma lem5739091 {A : Type'} (op : type1400 A) : ((term270 A op) = (term271 A op)) = ((term228 A op) = (term287 A op)).
Proof. exact (MK_COMB (@lem5739082 A op) (@lem5739090 A op)). Qed.
Lemma lem5739092 {A : Type'} (op : type1400 A) : (term228 A op) = (term287 A op).
Proof. exact (EQ_MP (@lem5739091 A op) (@lem5739069 A op)). Qed.
Lemma lem5739094 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5739095 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (@lem5739094 A P Q). Qed.
Lemma lem5739096 {A : Type'} (op : type1400 A) (x : A) : (term290 A op x) = (term291 A op x).
Proof. exact (@lem5739095 A (term208 A op x) (term221 A op x)). Qed.
Lemma lem5739097 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term292 A op x y) = (term202 A op x y).
Proof. exact (eq_refl (term292 A op x y)). Qed.
Lemma lem5739098 {A : Type'} (op : type1400 A) (x : A) : (term293 A op x) = (term208 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739097 A op x y)). Qed.
Lemma lem5739099 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739100 {A : Type'} (op : type1400 A) (x : A) : (term294 A op x) = (term209 A op x).
Proof. exact (MK_COMB (@lem5739099 A) (@lem5739098 A op x)). Qed.
Lemma lem5739101 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739102 {A : Type'} (op : type1400 A) (x : A) : (term295 A op x) = (term282 A op x).
Proof. exact (MK_COMB (@lem5739101) (@lem5739100 A op x)). Qed.
Lemma lem5739103 {A : Type'} (op : type1400 A) (x : A) : (term221 A op x) = (term221 A op x).
Proof. exact (eq_refl (term221 A op x)). Qed.
Lemma lem5739104 {A : Type'} (op : type1400 A) (x : A) : (term290 A op x) = (term284 A op x).
Proof. exact (MK_COMB (@lem5739102 A op x) (@lem5739103 A op x)). Qed.
Lemma lem5739105 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739106 {A : Type'} (op : type1400 A) (x : A) : (term296 A op x) = (term297 A op x).
Proof. exact (MK_COMB (@lem5739105) (@lem5739104 A op x)). Qed.
Lemma lem5739107 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term292 A op x y) = (term202 A op x y).
Proof. exact (eq_refl (term292 A op x y)). Qed.
Lemma lem5739108 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739109 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term298 A op x y) = (term299 A op x y).
Proof. exact (MK_COMB (@lem5739108) (@lem5739107 A op x y)). Qed.
Lemma lem5739110 {A : Type'} (op : type1400 A) (x : A) : (term221 A op x) = (term221 A op x).
Proof. exact (eq_refl (term221 A op x)). Qed.
Lemma lem5739111 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term300 A y op x) = (term301 A y op x).
Proof. exact (MK_COMB (@lem5739109 A op x y) (@lem5739110 A op x)). Qed.
Lemma lem5739112 {A : Type'} (op : type1400 A) (x : A) : (term302 A op x) = (term303 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739111 A y op x)). Qed.
Lemma lem5739113 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739114 {A : Type'} (op : type1400 A) (x : A) : (term291 A op x) = (term304 A op x).
Proof. exact (MK_COMB (@lem5739113 A) (@lem5739112 A op x)). Qed.
Lemma lem5739115 {A : Type'} (op : type1400 A) (x : A) : ((term290 A op x) = (term291 A op x)) = ((term284 A op x) = (term304 A op x)).
Proof. exact (MK_COMB (@lem5739106 A op x) (@lem5739114 A op x)). Qed.
Lemma lem5739116 {A : Type'} (op : type1400 A) (x : A) : (term284 A op x) = (term304 A op x).
Proof. exact (EQ_MP (@lem5739115 A op x) (@lem5739096 A op x)). Qed.
Lemma lem5739118 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5739119 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (@lem5739118 A P Q). Qed.
Lemma lem5739120 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term305 A y op x) = (term306 A y op x).
Proof. exact (@lem5739119 A (term201 A op x y) (term221 A op x)). Qed.
Lemma lem5739121 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : (term307 A op x y z) = (term199 A op x y z).
Proof. exact (eq_refl (term307 A op x y z)). Qed.
Lemma lem5739122 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term308 A op x y) = (term201 A op x y).
Proof. exact (fun_ext (fun z : A => @lem5739121 A op x y z)). Qed.
Lemma lem5739123 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739124 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term309 A op x y) = (term202 A op x y).
Proof. exact (MK_COMB (@lem5739123 A) (@lem5739122 A op x y)). Qed.
Lemma lem5739125 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739126 {A : Type'} (op : type1400 A) (x : A) (y : A) : (term310 A op x y) = (term299 A op x y).
Proof. exact (MK_COMB (@lem5739125) (@lem5739124 A op x y)). Qed.
Lemma lem5739127 {A : Type'} (op : type1400 A) (x : A) : (term221 A op x) = (term221 A op x).
Proof. exact (eq_refl (term221 A op x)). Qed.
Lemma lem5739128 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term305 A y op x) = (term301 A y op x).
Proof. exact (MK_COMB (@lem5739126 A op x y) (@lem5739127 A op x)). Qed.
Lemma lem5739129 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739130 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term311 A y op x) = (term312 A y op x).
Proof. exact (MK_COMB (@lem5739129) (@lem5739128 A y op x)). Qed.
Lemma lem5739131 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : (term307 A op x y z) = (term199 A op x y z).
Proof. exact (eq_refl (term307 A op x y z)). Qed.
Lemma lem5739132 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739133 {A : Type'} (op : type1400 A) (x : A) (y : A) (z : A) : (term313 A op x y z) = (term314 A op x y z).
Proof. exact (MK_COMB (@lem5739132) (@lem5739131 A op x y z)). Qed.
Lemma lem5739134 {A : Type'} (op : type1400 A) (x : A) : (term221 A op x) = (term221 A op x).
Proof. exact (eq_refl (term221 A op x)). Qed.
Lemma lem5739135 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term315 A y z op x) = (term316 A y z op x).
Proof. exact (MK_COMB (@lem5739133 A op x y z) (@lem5739134 A op x)). Qed.
Lemma lem5739136 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term317 A y op x) = (term318 A y op x).
Proof. exact (fun_ext (fun z : A => @lem5739135 A y z op x)). Qed.
Lemma lem5739137 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739138 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term306 A y op x) = (term319 A y op x).
Proof. exact (MK_COMB (@lem5739137 A) (@lem5739136 A y op x)). Qed.
Lemma lem5739139 {A : Type'} (y : A) (op : type1400 A) (x : A) : ((term305 A y op x) = (term306 A y op x)) = ((term301 A y op x) = (term319 A y op x)).
Proof. exact (MK_COMB (@lem5739130 A y op x) (@lem5739138 A y op x)). Qed.
Lemma lem5739140 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term301 A y op x) = (term319 A y op x).
Proof. exact (EQ_MP (@lem5739139 A y op x) (@lem5739120 A y op x)). Qed.
Lemma lem5739141 {A : Type'} (op : type1400 A) (x : A) : (term303 A op x) = (term320 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739140 A y op x)). Qed.
Lemma lem5739142 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739143 {A : Type'} (op : type1400 A) (x : A) : (term304 A op x) = (term321 A op x).
Proof. exact (MK_COMB (@lem5739142 A) (@lem5739141 A op x)). Qed.
Lemma lem5739144 {A : Type'} (op : type1400 A) (x : A) : (term284 A op x) = (term321 A op x).
Proof. exact (TRANS (@lem5739116 A op x) (@lem5739143 A op x)). Qed.
Lemma lem5739145 {A : Type'} (op : type1400 A) : (term286 A op) = (term322 A op).
Proof. exact (fun_ext (fun x : A => @lem5739144 A op x)). Qed.
Lemma lem5739146 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739147 {A : Type'} (op : type1400 A) : (term287 A op) = (term323 A op).
Proof. exact (MK_COMB (@lem5739146 A) (@lem5739145 A op)). Qed.
Lemma lem5739148 {A : Type'} (op : type1400 A) : (term228 A op) = (term323 A op).
Proof. exact (TRANS (@lem5739092 A op) (@lem5739147 A op)). Qed.
Lemma lem5739149 {A : Type'} (op : type1400 A) : (term231 A op) = (term231 A op).
Proof. exact (eq_refl (term231 A op)). Qed.
Lemma lem5739150 {A : Type'} (op : type1400 A) : (term233 A op) = (term324 A op).
Proof. exact (MK_COMB (@lem5739149 A op) (@lem5739148 A op)). Qed.
Lemma lem5739152 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5739153 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (@lem5739152 A P Q). Qed.
Lemma lem5739154 {A : Type'} (op : type1400 A) : (term325 A op) = (term326 A op).
Proof. exact (@lem5739153 A (term193 A op) (term322 A op)). Qed.
Lemma lem5739155 {A : Type'} (op : type1400 A) (x : A) : (term327 A op x) = (term187 A op x).
Proof. exact (eq_refl (term327 A op x)). Qed.
Lemma lem5739156 {A : Type'} (op : type1400 A) : (term328 A op) = (term193 A op).
Proof. exact (fun_ext (fun x : A => @lem5739155 A op x)). Qed.
Lemma lem5739157 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739158 {A : Type'} (op : type1400 A) : (term329 A op) = (term194 A op).
Proof. exact (MK_COMB (@lem5739157 A) (@lem5739156 A op)). Qed.
Lemma lem5739159 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739160 {A : Type'} (op : type1400 A) : (term330 A op) = (term231 A op).
Proof. exact (MK_COMB (@lem5739159) (@lem5739158 A op)). Qed.
Lemma lem5739161 {A : Type'} (op : type1400 A) (x : A) : (term331 A op x) = (term321 A op x).
Proof. exact (eq_refl (term331 A op x)). Qed.
Lemma lem5739162 {A : Type'} (op : type1400 A) : (term332 A op) = (term322 A op).
Proof. exact (fun_ext (fun x : A => @lem5739161 A op x)). Qed.
Lemma lem5739163 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739164 {A : Type'} (op : type1400 A) : (term333 A op) = (term323 A op).
Proof. exact (MK_COMB (@lem5739163 A) (@lem5739162 A op)). Qed.
Lemma lem5739165 {A : Type'} (op : type1400 A) : (term325 A op) = (term324 A op).
Proof. exact (MK_COMB (@lem5739160 A op) (@lem5739164 A op)). Qed.
Lemma lem5739166 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739167 {A : Type'} (op : type1400 A) : (term334 A op) = (term335 A op).
Proof. exact (MK_COMB (@lem5739166) (@lem5739165 A op)). Qed.
Lemma lem5739168 {A : Type'} (op : type1400 A) (x : A) : (term327 A op x) = (term187 A op x).
Proof. exact (eq_refl (term327 A op x)). Qed.
Lemma lem5739169 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739170 {A : Type'} (op : type1400 A) (x : A) : (term336 A op x) = (term337 A op x).
Proof. exact (MK_COMB (@lem5739169) (@lem5739168 A op x)). Qed.
Lemma lem5739171 {A : Type'} (op : type1400 A) (x : A) : (term331 A op x) = (term321 A op x).
Proof. exact (eq_refl (term331 A op x)). Qed.
Lemma lem5739172 {A : Type'} (op : type1400 A) (x : A) : (term338 A op x) = (term339 A op x).
Proof. exact (MK_COMB (@lem5739170 A op x) (@lem5739171 A op x)). Qed.
Lemma lem5739173 {A : Type'} (op : type1400 A) : (term340 A op) = (term341 A op).
Proof. exact (fun_ext (fun x : A => @lem5739172 A op x)). Qed.
Lemma lem5739174 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739175 {A : Type'} (op : type1400 A) : (term326 A op) = (term342 A op).
Proof. exact (MK_COMB (@lem5739174 A) (@lem5739173 A op)). Qed.
Lemma lem5739176 {A : Type'} (op : type1400 A) : ((term325 A op) = (term326 A op)) = ((term324 A op) = (term342 A op)).
Proof. exact (MK_COMB (@lem5739167 A op) (@lem5739175 A op)). Qed.
Lemma lem5739177 {A : Type'} (op : type1400 A) : (term324 A op) = (term342 A op).
Proof. exact (EQ_MP (@lem5739176 A op) (@lem5739154 A op)). Qed.
Lemma lem5739179 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5739180 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (@lem5739179 A P Q). Qed.
Lemma lem5739181 {A : Type'} (op : type1400 A) (x : A) : (term343 A op x) = (term344 A op x).
Proof. exact (@lem5739180 A (term186 A op x) (term320 A op x)). Qed.
Lemma lem5739182 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term345 A op x y) = (term184 A op y x).
Proof. exact (eq_refl (term345 A op x y)). Qed.
Lemma lem5739183 {A : Type'} (op : type1400 A) (x : A) : (term346 A op x) = (term186 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739182 A op y x)). Qed.
Lemma lem5739184 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739185 {A : Type'} (op : type1400 A) (x : A) : (term347 A op x) = (term187 A op x).
Proof. exact (MK_COMB (@lem5739184 A) (@lem5739183 A op x)). Qed.
Lemma lem5739186 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739187 {A : Type'} (op : type1400 A) (x : A) : (term348 A op x) = (term337 A op x).
Proof. exact (MK_COMB (@lem5739186) (@lem5739185 A op x)). Qed.
Lemma lem5739188 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term349 A op x y) = (term319 A y op x).
Proof. exact (eq_refl (term349 A op x y)). Qed.
Lemma lem5739189 {A : Type'} (op : type1400 A) (x : A) : (term350 A op x) = (term320 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739188 A y op x)). Qed.
Lemma lem5739190 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739191 {A : Type'} (op : type1400 A) (x : A) : (term351 A op x) = (term321 A op x).
Proof. exact (MK_COMB (@lem5739190 A) (@lem5739189 A op x)). Qed.
Lemma lem5739192 {A : Type'} (op : type1400 A) (x : A) : (term343 A op x) = (term339 A op x).
Proof. exact (MK_COMB (@lem5739187 A op x) (@lem5739191 A op x)). Qed.
Lemma lem5739193 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739194 {A : Type'} (op : type1400 A) (x : A) : (term352 A op x) = (term353 A op x).
Proof. exact (MK_COMB (@lem5739193) (@lem5739192 A op x)). Qed.
Lemma lem5739195 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term345 A op x y) = (term184 A op y x).
Proof. exact (eq_refl (term345 A op x y)). Qed.
Lemma lem5739196 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739197 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term354 A op x y) = (term355 A op y x).
Proof. exact (MK_COMB (@lem5739196) (@lem5739195 A op y x)). Qed.
Lemma lem5739198 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term349 A op x y) = (term319 A y op x).
Proof. exact (eq_refl (term349 A op x y)). Qed.
Lemma lem5739199 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term356 A op x y) = (term357 A y op x).
Proof. exact (MK_COMB (@lem5739197 A op y x) (@lem5739198 A y op x)). Qed.
Lemma lem5739200 {A : Type'} (op : type1400 A) (x : A) : (term358 A op x) = (term359 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739199 A y op x)). Qed.
Lemma lem5739201 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739202 {A : Type'} (op : type1400 A) (x : A) : (term344 A op x) = (term360 A op x).
Proof. exact (MK_COMB (@lem5739201 A) (@lem5739200 A op x)). Qed.
Lemma lem5739203 {A : Type'} (op : type1400 A) (x : A) : ((term343 A op x) = (term344 A op x)) = ((term339 A op x) = (term360 A op x)).
Proof. exact (MK_COMB (@lem5739194 A op x) (@lem5739202 A op x)). Qed.
Lemma lem5739204 {A : Type'} (op : type1400 A) (x : A) : (term339 A op x) = (term360 A op x).
Proof. exact (EQ_MP (@lem5739203 A op x) (@lem5739181 A op x)). Qed.
Lemma lem5739206 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739207 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (@lem5739206 A P Q). Qed.
Lemma lem5739208 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term363 A y op x) = (term364 A y op x).
Proof. exact (@lem5739207 A (term184 A op y x) (term318 A y op x)). Qed.
Lemma lem5739209 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term365 A y op x z) = (term316 A y z op x).
Proof. exact (eq_refl (term365 A y op x z)). Qed.
Lemma lem5739210 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term366 A y op x) = (term318 A y op x).
Proof. exact (fun_ext (fun z : A => @lem5739209 A y z op x)). Qed.
Lemma lem5739211 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739212 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term367 A y op x) = (term319 A y op x).
Proof. exact (MK_COMB (@lem5739211 A) (@lem5739210 A y op x)). Qed.
Lemma lem5739213 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term355 A op y x) = (term355 A op y x).
Proof. exact (eq_refl (term355 A op y x)). Qed.
Lemma lem5739214 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term363 A y op x) = (term357 A y op x).
Proof. exact (MK_COMB (@lem5739213 A op y x) (@lem5739212 A y op x)). Qed.
Lemma lem5739215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739216 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term368 A y op x) = (term369 A y op x).
Proof. exact (MK_COMB (@lem5739215) (@lem5739214 A y op x)). Qed.
Lemma lem5739217 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term365 A y op x z) = (term316 A y z op x).
Proof. exact (eq_refl (term365 A y op x z)). Qed.
Lemma lem5739218 {A : Type'} (op : type1400 A) (y : A) (x : A) : (term355 A op y x) = (term355 A op y x).
Proof. exact (eq_refl (term355 A op y x)). Qed.
Lemma lem5739219 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term370 A y op x z) = (term371 A y z op x).
Proof. exact (MK_COMB (@lem5739218 A op y x) (@lem5739217 A y z op x)). Qed.
Lemma lem5739220 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term372 A y op x) = (term373 A y op x).
Proof. exact (fun_ext (fun z : A => @lem5739219 A y z op x)). Qed.
Lemma lem5739221 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739222 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term364 A y op x) = (term374 A y op x).
Proof. exact (MK_COMB (@lem5739221 A) (@lem5739220 A y op x)). Qed.
Lemma lem5739223 {A : Type'} (y : A) (op : type1400 A) (x : A) : ((term363 A y op x) = (term364 A y op x)) = ((term357 A y op x) = (term374 A y op x)).
Proof. exact (MK_COMB (@lem5739216 A y op x) (@lem5739222 A y op x)). Qed.
Lemma lem5739224 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term357 A y op x) = (term374 A y op x).
Proof. exact (EQ_MP (@lem5739223 A y op x) (@lem5739208 A y op x)). Qed.
Lemma lem5739225 {A : Type'} (op : type1400 A) (x : A) : (term359 A op x) = (term375 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739224 A y op x)). Qed.
Lemma lem5739226 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739227 {A : Type'} (op : type1400 A) (x : A) : (term360 A op x) = (term376 A op x).
Proof. exact (MK_COMB (@lem5739226 A) (@lem5739225 A op x)). Qed.
Lemma lem5739228 {A : Type'} (op : type1400 A) (x : A) : (term339 A op x) = (term376 A op x).
Proof. exact (TRANS (@lem5739204 A op x) (@lem5739227 A op x)). Qed.
Lemma lem5739229 {A : Type'} (op : type1400 A) : (term341 A op) = (term377 A op).
Proof. exact (fun_ext (fun x : A => @lem5739228 A op x)). Qed.
Lemma lem5739230 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739231 {A : Type'} (op : type1400 A) : (term342 A op) = (term378 A op).
Proof. exact (MK_COMB (@lem5739230 A) (@lem5739229 A op)). Qed.
Lemma lem5739232 {A : Type'} (op : type1400 A) : (term324 A op) = (term378 A op).
Proof. exact (TRANS (@lem5739177 A op) (@lem5739231 A op)). Qed.
Lemma lem5739233 {A : Type'} (op : type1400 A) : (term233 A op) = (term378 A op).
Proof. exact (TRANS (@lem5739150 A op) (@lem5739232 A op)). Qed.
Lemma lem5739234 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739235 {A : Type'} (op : type1400 A) : (term239 A op) = (term379 A op).
Proof. exact (MK_COMB (@lem5739234 A op) (@lem5739233 A op)). Qed.
Lemma lem5739237 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739238 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (@lem5739237 A P Q). Qed.
Lemma lem5739239 {A : Type'} (op : type1400 A) : (term380 A op) = (term381 A op).
Proof. exact (@lem5739238 A (@monoidal A op) (term377 A op)). Qed.
Lemma lem5739240 {A : Type'} (op : type1400 A) (x : A) : (term382 A op x) = (term376 A op x).
Proof. exact (eq_refl (term382 A op x)). Qed.
Lemma lem5739241 {A : Type'} (op : type1400 A) : (term383 A op) = (term377 A op).
Proof. exact (fun_ext (fun x : A => @lem5739240 A op x)). Qed.
Lemma lem5739242 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739243 {A : Type'} (op : type1400 A) : (term384 A op) = (term378 A op).
Proof. exact (MK_COMB (@lem5739242 A) (@lem5739241 A op)). Qed.
Lemma lem5739244 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739245 {A : Type'} (op : type1400 A) : (term380 A op) = (term379 A op).
Proof. exact (MK_COMB (@lem5739244 A op) (@lem5739243 A op)). Qed.
Lemma lem5739246 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739247 {A : Type'} (op : type1400 A) : (term385 A op) = (term386 A op).
Proof. exact (MK_COMB (@lem5739246) (@lem5739245 A op)). Qed.
Lemma lem5739248 {A : Type'} (op : type1400 A) (x : A) : (term382 A op x) = (term376 A op x).
Proof. exact (eq_refl (term382 A op x)). Qed.
Lemma lem5739249 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739250 {A : Type'} (op : type1400 A) (x : A) : (term387 A op x) = (term388 A op x).
Proof. exact (MK_COMB (@lem5739249 A op) (@lem5739248 A op x)). Qed.
Lemma lem5739251 {A : Type'} (op : type1400 A) : (term389 A op) = (term390 A op).
Proof. exact (fun_ext (fun x : A => @lem5739250 A op x)). Qed.
Lemma lem5739252 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739253 {A : Type'} (op : type1400 A) : (term381 A op) = (term391 A op).
Proof. exact (MK_COMB (@lem5739252 A) (@lem5739251 A op)). Qed.
Lemma lem5739254 {A : Type'} (op : type1400 A) : ((term380 A op) = (term381 A op)) = ((term379 A op) = (term391 A op)).
Proof. exact (MK_COMB (@lem5739247 A op) (@lem5739253 A op)). Qed.
Lemma lem5739255 {A : Type'} (op : type1400 A) : (term379 A op) = (term391 A op).
Proof. exact (EQ_MP (@lem5739254 A op) (@lem5739239 A op)). Qed.
Lemma lem5739257 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739258 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (@lem5739257 A P Q). Qed.
Lemma lem5739259 {A : Type'} (op : type1400 A) (x : A) : (term392 A op x) = (term393 A op x).
Proof. exact (@lem5739258 A (@monoidal A op) (term375 A op x)). Qed.
Lemma lem5739260 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term394 A op x y) = (term374 A y op x).
Proof. exact (eq_refl (term394 A op x y)). Qed.
Lemma lem5739261 {A : Type'} (op : type1400 A) (x : A) : (term395 A op x) = (term375 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739260 A y op x)). Qed.
Lemma lem5739262 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739263 {A : Type'} (op : type1400 A) (x : A) : (term396 A op x) = (term376 A op x).
Proof. exact (MK_COMB (@lem5739262 A) (@lem5739261 A op x)). Qed.
Lemma lem5739264 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739265 {A : Type'} (op : type1400 A) (x : A) : (term392 A op x) = (term388 A op x).
Proof. exact (MK_COMB (@lem5739264 A op) (@lem5739263 A op x)). Qed.
Lemma lem5739266 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739267 {A : Type'} (op : type1400 A) (x : A) : (term397 A op x) = (term398 A op x).
Proof. exact (MK_COMB (@lem5739266) (@lem5739265 A op x)). Qed.
Lemma lem5739268 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term394 A op x y) = (term374 A y op x).
Proof. exact (eq_refl (term394 A op x y)). Qed.
Lemma lem5739269 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739270 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term399 A op x y) = (term400 A y op x).
Proof. exact (MK_COMB (@lem5739269 A op) (@lem5739268 A y op x)). Qed.
Lemma lem5739271 {A : Type'} (op : type1400 A) (x : A) : (term401 A op x) = (term402 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739270 A y op x)). Qed.
Lemma lem5739272 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739273 {A : Type'} (op : type1400 A) (x : A) : (term393 A op x) = (term403 A op x).
Proof. exact (MK_COMB (@lem5739272 A) (@lem5739271 A op x)). Qed.
Lemma lem5739274 {A : Type'} (op : type1400 A) (x : A) : ((term392 A op x) = (term393 A op x)) = ((term388 A op x) = (term403 A op x)).
Proof. exact (MK_COMB (@lem5739267 A op x) (@lem5739273 A op x)). Qed.
Lemma lem5739275 {A : Type'} (op : type1400 A) (x : A) : (term388 A op x) = (term403 A op x).
Proof. exact (EQ_MP (@lem5739274 A op x) (@lem5739259 A op x)). Qed.
Lemma lem5739277 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739278 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (@lem5739277 A P Q). Qed.
Lemma lem5739279 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term404 A y op x) = (term405 A y op x).
Proof. exact (@lem5739278 A (@monoidal A op) (term373 A y op x)). Qed.
Lemma lem5739280 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term406 A y op x z) = (term371 A y z op x).
Proof. exact (eq_refl (term406 A y op x z)). Qed.
Lemma lem5739281 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term407 A y op x) = (term373 A y op x).
Proof. exact (fun_ext (fun z : A => @lem5739280 A y z op x)). Qed.
Lemma lem5739282 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739283 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term408 A y op x) = (term374 A y op x).
Proof. exact (MK_COMB (@lem5739282 A) (@lem5739281 A y op x)). Qed.
Lemma lem5739284 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739285 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term404 A y op x) = (term400 A y op x).
Proof. exact (MK_COMB (@lem5739284 A op) (@lem5739283 A y op x)). Qed.
Lemma lem5739286 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739287 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term409 A y op x) = (term410 A y op x).
Proof. exact (MK_COMB (@lem5739286) (@lem5739285 A y op x)). Qed.
Lemma lem5739288 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term406 A y op x z) = (term371 A y z op x).
Proof. exact (eq_refl (term406 A y op x z)). Qed.
Lemma lem5739289 {A : Type'} (op : type1400 A) : (term237 A op) = (term237 A op).
Proof. exact (eq_refl (term237 A op)). Qed.
Lemma lem5739290 {A : Type'} (y : A) (z : A) (op : type1400 A) (x : A) : (term411 A y op x z) = (term412 A y z op x).
Proof. exact (MK_COMB (@lem5739289 A op) (@lem5739288 A y z op x)). Qed.
Lemma lem5739291 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term413 A y op x) = (term414 A y op x).
Proof. exact (fun_ext (fun z : A => @lem5739290 A y z op x)). Qed.
Lemma lem5739292 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739293 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term405 A y op x) = (term415 A y op x).
Proof. exact (MK_COMB (@lem5739292 A) (@lem5739291 A y op x)). Qed.
Lemma lem5739294 {A : Type'} (y : A) (op : type1400 A) (x : A) : ((term404 A y op x) = (term405 A y op x)) = ((term400 A y op x) = (term415 A y op x)).
Proof. exact (MK_COMB (@lem5739287 A y op x) (@lem5739293 A y op x)). Qed.
Lemma lem5739295 {A : Type'} (y : A) (op : type1400 A) (x : A) : (term400 A y op x) = (term415 A y op x).
Proof. exact (EQ_MP (@lem5739294 A y op x) (@lem5739279 A y op x)). Qed.
Lemma lem5739296 {A : Type'} (op : type1400 A) (x : A) : (term402 A op x) = (term416 A op x).
Proof. exact (fun_ext (fun y : A => @lem5739295 A y op x)). Qed.
Lemma lem5739297 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739298 {A : Type'} (op : type1400 A) (x : A) : (term403 A op x) = (term417 A op x).
Proof. exact (MK_COMB (@lem5739297 A) (@lem5739296 A op x)). Qed.
Lemma lem5739299 {A : Type'} (op : type1400 A) (x : A) : (term388 A op x) = (term417 A op x).
Proof. exact (TRANS (@lem5739275 A op x) (@lem5739298 A op x)). Qed.
Lemma lem5739300 {A : Type'} (op : type1400 A) : (term390 A op) = (term418 A op).
Proof. exact (fun_ext (fun x : A => @lem5739299 A op x)). Qed.
Lemma lem5739301 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739302 {A : Type'} (op : type1400 A) : (term391 A op) = (term419 A op).
Proof. exact (MK_COMB (@lem5739301 A) (@lem5739300 A op)). Qed.
Lemma lem5739303 {A : Type'} (op : type1400 A) : (term379 A op) = (term419 A op).
Proof. exact (TRANS (@lem5739255 A op) (@lem5739302 A op)). Qed.
Lemma lem5739304 {A : Type'} (op : type1400 A) : (term239 A op) = (term419 A op).
Proof. exact (TRANS (@lem5739235 A op) (@lem5739303 A op)). Qed.
Lemma lem5739305 {A : Type'} : (term250 A) = (term420 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739304 A op)). Qed.
Lemma lem5739306 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739307 {A : Type'} : (term261 A) = (term421 A).
Proof. exact (MK_COMB (@lem5739306 A) (@lem5739305 A)). Qed.
Lemma lem5739309 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5739310 {A : Type'} (P : type401 A) : (term424 A P) = (term425 A P).
Proof. exact (@lem5739309 (type1400 A) A P). Qed.
Lemma lem5739311 {A : Type'} : (term426 A) = (term427 A).
Proof. exact (@lem5739310 A (term428 A)). Qed.
Lemma lem5739312 {A : Type'} (op : type1400 A) : (term429 A op) = (term418 A op).
Proof. exact (eq_refl (term429 A op)). Qed.
Lemma lem5739313 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5739314 {A : Type'} (op : type1400 A) (x : A) : (term430 A op x) = (term431 A op x).
Proof. exact (MK_COMB (@lem5739312 A op) (@lem5739313 A x)). Qed.
Lemma lem5739315 {A : Type'} (op : type1400 A) (x : A) : (term431 A op x) = (term417 A op x).
Proof. exact (eq_refl (term431 A op x)). Qed.
Lemma lem5739316 {A : Type'} (op : type1400 A) (x : A) : (term430 A op x) = (term417 A op x).
Proof. exact (TRANS (@lem5739314 A op x) (@lem5739315 A op x)). Qed.
Lemma lem5739317 {A : Type'} (op : type1400 A) : (term432 A op) = (term418 A op).
Proof. exact (fun_ext (fun x : A => @lem5739316 A op x)). Qed.
Lemma lem5739318 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739319 {A : Type'} (op : type1400 A) : (term433 A op) = (term419 A op).
Proof. exact (MK_COMB (@lem5739318 A) (@lem5739317 A op)). Qed.
Lemma lem5739320 {A : Type'} : (term434 A) = (term420 A).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739319 A op)). Qed.
Lemma lem5739321 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739322 {A : Type'} : (term426 A) = (term421 A).
Proof. exact (MK_COMB (@lem5739321 A) (@lem5739320 A)). Qed.
Lemma lem5739323 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739324 {A : Type'} : (term435 A) = (term436 A).
Proof. exact (MK_COMB (@lem5739323) (@lem5739322 A)). Qed.
Lemma lem5739325 {A : Type'} (op : type1400 A) : (term429 A op) = (term418 A op).
Proof. exact (eq_refl (term429 A op)). Qed.
Lemma lem5739326 {A : Type'} (x : type402 A) (op : type1400 A) : (x op) = (x op).
Proof. exact (eq_refl (x op)). Qed.
Lemma lem5739327 {A : Type'} (x : type402 A) (op : type1400 A) : (term437 A x op) = (term438 A x op).
Proof. exact (MK_COMB (@lem5739325 A op) (@lem5739326 A x op)). Qed.
Lemma lem5739328 {A : Type'} (x : type402 A) (op : type1400 A) : (term438 A x op) = (term439 A x op).
Proof. exact (eq_refl (term438 A x op)). Qed.
Lemma lem5739329 {A : Type'} (x : type402 A) (op : type1400 A) : (term437 A x op) = (term439 A x op).
Proof. exact (TRANS (@lem5739327 A x op) (@lem5739328 A x op)). Qed.
Lemma lem5739330 {A : Type'} (x : type402 A) : (term440 A x) = (term441 A x).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739329 A x op)). Qed.
Lemma lem5739331 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739332 {A : Type'} (x : type402 A) : (term442 A x) = (term443 A x).
Proof. exact (MK_COMB (@lem5739331 A) (@lem5739330 A x)). Qed.
Lemma lem5739333 {A : Type'} : (term444 A) = (term445 A).
Proof. exact (fun_ext (fun x : type402 A => @lem5739332 A x)). Qed.
Lemma lem5739334 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739335 {A : Type'} : (term427 A) = (term446 A).
Proof. exact (MK_COMB (@lem5739334 A) (@lem5739333 A)). Qed.
Lemma lem5739336 {A : Type'} : ((term426 A) = (term427 A)) = ((term421 A) = (term446 A)).
Proof. exact (MK_COMB (@lem5739324 A) (@lem5739335 A)). Qed.
Lemma lem5739337 {A : Type'} : (term421 A) = (term446 A).
Proof. exact (EQ_MP (@lem5739336 A) (@lem5739311 A)). Qed.
Lemma lem5739339 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5739340 {A : Type'} (P : type401 A) : (term424 A P) = (term425 A P).
Proof. exact (@lem5739339 (type1400 A) A P). Qed.
Lemma lem5739341 {A : Type'} (x : type402 A) : (term447 A x) = (term448 A x).
Proof. exact (@lem5739340 A (term449 A x)). Qed.
Lemma lem5739342 {A : Type'} (x : type402 A) (op : type1400 A) : (term450 A x op) = (term451 A x op).
Proof. exact (eq_refl (term450 A x op)). Qed.
Lemma lem5739343 {A : Type'} (y : A) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5739344 {A : Type'} (x : type402 A) (op : type1400 A) (y : A) : (term452 A x op y) = (term453 A x op y).
Proof. exact (MK_COMB (@lem5739342 A x op) (@lem5739343 A y)). Qed.
Lemma lem5739345 {A : Type'} (y : A) (x : type402 A) (op : type1400 A) : (term453 A x op y) = (term454 A y x op).
Proof. exact (eq_refl (term453 A x op y)). Qed.
Lemma lem5739346 {A : Type'} (y : A) (x : type402 A) (op : type1400 A) : (term452 A x op y) = (term454 A y x op).
Proof. exact (TRANS (@lem5739344 A x op y) (@lem5739345 A y x op)). Qed.
Lemma lem5739347 {A : Type'} (x : type402 A) (op : type1400 A) : (term455 A x op) = (term451 A x op).
Proof. exact (fun_ext (fun y : A => @lem5739346 A y x op)). Qed.
Lemma lem5739348 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739349 {A : Type'} (x : type402 A) (op : type1400 A) : (term456 A x op) = (term439 A x op).
Proof. exact (MK_COMB (@lem5739348 A) (@lem5739347 A x op)). Qed.
Lemma lem5739350 {A : Type'} (x : type402 A) : (term457 A x) = (term441 A x).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739349 A x op)). Qed.
Lemma lem5739351 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739352 {A : Type'} (x : type402 A) : (term447 A x) = (term443 A x).
Proof. exact (MK_COMB (@lem5739351 A) (@lem5739350 A x)). Qed.
Lemma lem5739353 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739354 {A : Type'} (x : type402 A) : (term458 A x) = (term459 A x).
Proof. exact (MK_COMB (@lem5739353) (@lem5739352 A x)). Qed.
Lemma lem5739355 {A : Type'} (x : type402 A) (op : type1400 A) : (term450 A x op) = (term451 A x op).
Proof. exact (eq_refl (term450 A x op)). Qed.
Lemma lem5739356 {A : Type'} (y : type402 A) (op : type1400 A) : (y op) = (y op).
Proof. exact (eq_refl (y op)). Qed.
Lemma lem5739357 {A : Type'} (x : type402 A) (y : type402 A) (op : type1400 A) : (term460 A x y op) = (term461 A x y op).
Proof. exact (MK_COMB (@lem5739355 A x op) (@lem5739356 A y op)). Qed.
Lemma lem5739358 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) : (term461 A x y op) = (term462 A y x op).
Proof. exact (eq_refl (term461 A x y op)). Qed.
Lemma lem5739359 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) : (term460 A x y op) = (term462 A y x op).
Proof. exact (TRANS (@lem5739357 A x y op) (@lem5739358 A y x op)). Qed.
Lemma lem5739360 {A : Type'} (y : type402 A) (x : type402 A) : (term463 A x y) = (term464 A y x).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739359 A y x op)). Qed.
Lemma lem5739361 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739362 {A : Type'} (y : type402 A) (x : type402 A) : (term465 A x y) = (term466 A y x).
Proof. exact (MK_COMB (@lem5739361 A) (@lem5739360 A y x)). Qed.
Lemma lem5739363 {A : Type'} (x : type402 A) : (term467 A x) = (term468 A x).
Proof. exact (fun_ext (fun y : type402 A => @lem5739362 A y x)). Qed.
Lemma lem5739364 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739365 {A : Type'} (x : type402 A) : (term448 A x) = (term469 A x).
Proof. exact (MK_COMB (@lem5739364 A) (@lem5739363 A x)). Qed.
Lemma lem5739366 {A : Type'} (x : type402 A) : ((term447 A x) = (term448 A x)) = ((term443 A x) = (term469 A x)).
Proof. exact (MK_COMB (@lem5739354 A x) (@lem5739365 A x)). Qed.
Lemma lem5739367 {A : Type'} (x : type402 A) : (term443 A x) = (term469 A x).
Proof. exact (EQ_MP (@lem5739366 A x) (@lem5739341 A x)). Qed.
Lemma lem5739369 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5739370 {A : Type'} (P : type401 A) : (term424 A P) = (term425 A P).
Proof. exact (@lem5739369 (type1400 A) A P). Qed.
Lemma lem5739371 {A : Type'} (y : type402 A) (x : type402 A) : (term470 A y x) = (term471 A y x).
Proof. exact (@lem5739370 A (term472 A y x)). Qed.
Lemma lem5739372 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) : (term473 A y x op) = (term474 A y x op).
Proof. exact (eq_refl (term473 A y x op)). Qed.
Lemma lem5739373 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5739374 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) (z : A) : (term475 A y x op z) = (term476 A y x op z).
Proof. exact (MK_COMB (@lem5739372 A y x op) (@lem5739373 A z)). Qed.
Lemma lem5739375 {A : Type'} (y : type402 A) (z : A) (x : type402 A) (op : type1400 A) : (term476 A y x op z) = (term477 A y z x op).
Proof. exact (eq_refl (term476 A y x op z)). Qed.
Lemma lem5739376 {A : Type'} (y : type402 A) (z : A) (x : type402 A) (op : type1400 A) : (term475 A y x op z) = (term477 A y z x op).
Proof. exact (TRANS (@lem5739374 A y x op z) (@lem5739375 A y z x op)). Qed.
Lemma lem5739377 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) : (term478 A y x op) = (term474 A y x op).
Proof. exact (fun_ext (fun z : A => @lem5739376 A y z x op)). Qed.
Lemma lem5739378 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem5739379 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) : (term479 A y x op) = (term462 A y x op).
Proof. exact (MK_COMB (@lem5739378 A) (@lem5739377 A y x op)). Qed.
Lemma lem5739380 {A : Type'} (y : type402 A) (x : type402 A) : (term480 A y x) = (term464 A y x).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739379 A y x op)). Qed.
Lemma lem5739381 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739382 {A : Type'} (y : type402 A) (x : type402 A) : (term470 A y x) = (term466 A y x).
Proof. exact (MK_COMB (@lem5739381 A) (@lem5739380 A y x)). Qed.
Lemma lem5739383 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739384 {A : Type'} (y : type402 A) (x : type402 A) : (term481 A y x) = (term482 A y x).
Proof. exact (MK_COMB (@lem5739383) (@lem5739382 A y x)). Qed.
Lemma lem5739385 {A : Type'} (y : type402 A) (x : type402 A) (op : type1400 A) : (term473 A y x op) = (term474 A y x op).
Proof. exact (eq_refl (term473 A y x op)). Qed.
Lemma lem5739386 {A : Type'} (z : type402 A) (op : type1400 A) : (z op) = (z op).
Proof. exact (eq_refl (z op)). Qed.
Lemma lem5739387 {A : Type'} (y : type402 A) (x : type402 A) (z : type402 A) (op : type1400 A) : (term483 A y x z op) = (term484 A y x z op).
Proof. exact (MK_COMB (@lem5739385 A y x op) (@lem5739386 A z op)). Qed.
Lemma lem5739388 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) (op : type1400 A) : (term484 A y x z op) = (term485 A y z x op).
Proof. exact (eq_refl (term484 A y x z op)). Qed.
Lemma lem5739389 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) (op : type1400 A) : (term483 A y x z op) = (term485 A y z x op).
Proof. exact (TRANS (@lem5739387 A y x z op) (@lem5739388 A y z x op)). Qed.
Lemma lem5739390 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) : (term486 A y x z) = (term487 A y z x).
Proof. exact (fun_ext (fun op : type1400 A => @lem5739389 A y z x op)). Qed.
Lemma lem5739391 {A : Type'} : (@all (A -> A -> A)) = (@all (A -> A -> A)).
Proof. exact (eq_refl (@all (A -> A -> A))). Qed.
Lemma lem5739392 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) : (term488 A y x z) = (term489 A y z x).
Proof. exact (MK_COMB (@lem5739391 A) (@lem5739390 A y z x)). Qed.
Lemma lem5739393 {A : Type'} (y : type402 A) (x : type402 A) : (term490 A y x) = (term491 A y x).
Proof. exact (fun_ext (fun z : type402 A => @lem5739392 A y z x)). Qed.
Lemma lem5739394 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739395 {A : Type'} (y : type402 A) (x : type402 A) : (term471 A y x) = (term492 A y x).
Proof. exact (MK_COMB (@lem5739394 A) (@lem5739393 A y x)). Qed.
Lemma lem5739396 {A : Type'} (y : type402 A) (x : type402 A) : ((term470 A y x) = (term471 A y x)) = ((term466 A y x) = (term492 A y x)).
Proof. exact (MK_COMB (@lem5739384 A y x) (@lem5739395 A y x)). Qed.
Lemma lem5739397 {A : Type'} (y : type402 A) (x : type402 A) : (term466 A y x) = (term492 A y x).
Proof. exact (EQ_MP (@lem5739396 A y x) (@lem5739371 A y x)). Qed.
Lemma lem5739398 {A : Type'} (x : type402 A) : (term468 A x) = (term493 A x).
Proof. exact (fun_ext (fun y : type402 A => @lem5739397 A y x)). Qed.
Lemma lem5739399 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739400 {A : Type'} (x : type402 A) : (term469 A x) = (term494 A x).
Proof. exact (MK_COMB (@lem5739399 A) (@lem5739398 A x)). Qed.
Lemma lem5739401 {A : Type'} (x : type402 A) : (term443 A x) = (term494 A x).
Proof. exact (TRANS (@lem5739367 A x) (@lem5739400 A x)). Qed.
Lemma lem5739402 {A : Type'} : (term445 A) = (term495 A).
Proof. exact (fun_ext (fun x : type402 A => @lem5739401 A x)). Qed.
Lemma lem5739403 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739404 {A : Type'} : (term446 A) = (term496 A).
Proof. exact (MK_COMB (@lem5739403 A) (@lem5739402 A)). Qed.
Lemma lem5739405 {A : Type'} : (term421 A) = (term496 A).
Proof. exact (TRANS (@lem5739337 A) (@lem5739404 A)). Qed.
Lemma lem5739406 {A : Type'} : (term261 A) = (term496 A).
Proof. exact (TRANS (@lem5739307 A) (@lem5739405 A)). Qed.
Lemma lem5739407 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739408 {A : Type'} : (term263 A) = (term497 A).
Proof. exact (MK_COMB (@lem5739407) (@lem5739406 A)). Qed.
Lemma lem5739409 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739410 {A : Type'} : (term267 A) = (term498 A).
Proof. exact (MK_COMB (@lem5739408 A) (@lem5739409 A)). Qed.
Lemma lem5739412 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5739413 {A : Type'} (P : type82 A) (Q : Prop) : (term501 A P Q) = (term502 A P Q).
Proof. exact (@lem5739412 (type402 A) P Q). Qed.
Lemma lem5739414 {A : Type'} : (term503 A) = (term504 A).
Proof. exact (@lem5739413 A (term495 A) (term266 A)). Qed.
Lemma lem5739415 {A : Type'} (x : type402 A) : (term505 A x) = (term494 A x).
Proof. exact (eq_refl (term505 A x)). Qed.
Lemma lem5739416 {A : Type'} : (term506 A) = (term495 A).
Proof. exact (fun_ext (fun x : type402 A => @lem5739415 A x)). Qed.
Lemma lem5739417 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739418 {A : Type'} : (term507 A) = (term496 A).
Proof. exact (MK_COMB (@lem5739417 A) (@lem5739416 A)). Qed.
Lemma lem5739419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739420 {A : Type'} : (term508 A) = (term497 A).
Proof. exact (MK_COMB (@lem5739419) (@lem5739418 A)). Qed.
Lemma lem5739421 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739422 {A : Type'} : (term503 A) = (term498 A).
Proof. exact (MK_COMB (@lem5739420 A) (@lem5739421 A)). Qed.
Lemma lem5739423 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739424 {A : Type'} : (term509 A) = (term510 A).
Proof. exact (MK_COMB (@lem5739423) (@lem5739422 A)). Qed.
Lemma lem5739425 {A : Type'} (x : type402 A) : (term505 A x) = (term494 A x).
Proof. exact (eq_refl (term505 A x)). Qed.
Lemma lem5739426 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739427 {A : Type'} (x : type402 A) : (term511 A x) = (term512 A x).
Proof. exact (MK_COMB (@lem5739426) (@lem5739425 A x)). Qed.
Lemma lem5739428 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739429 {A : Type'} (x : type402 A) : (term513 A x) = (term514 A x).
Proof. exact (MK_COMB (@lem5739427 A x) (@lem5739428 A)). Qed.
Lemma lem5739430 {A : Type'} : (term515 A) = (term516 A).
Proof. exact (fun_ext (fun x : type402 A => @lem5739429 A x)). Qed.
Lemma lem5739431 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739432 {A : Type'} : (term504 A) = (term517 A).
Proof. exact (MK_COMB (@lem5739431 A) (@lem5739430 A)). Qed.
Lemma lem5739433 {A : Type'} : ((term503 A) = (term504 A)) = ((term498 A) = (term517 A)).
Proof. exact (MK_COMB (@lem5739424 A) (@lem5739432 A)). Qed.
Lemma lem5739434 {A : Type'} : (term498 A) = (term517 A).
Proof. exact (EQ_MP (@lem5739433 A) (@lem5739414 A)). Qed.
Lemma lem5739436 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5739437 {A : Type'} (P : type82 A) (Q : Prop) : (term501 A P Q) = (term502 A P Q).
Proof. exact (@lem5739436 (type402 A) P Q). Qed.
Lemma lem5739438 {A : Type'} (x : type402 A) : (term518 A x) = (term519 A x).
Proof. exact (@lem5739437 A (term493 A x) (term266 A)). Qed.
Lemma lem5739439 {A : Type'} (y : type402 A) (x : type402 A) : (term520 A x y) = (term492 A y x).
Proof. exact (eq_refl (term520 A x y)). Qed.
Lemma lem5739440 {A : Type'} (x : type402 A) : (term521 A x) = (term493 A x).
Proof. exact (fun_ext (fun y : type402 A => @lem5739439 A y x)). Qed.
Lemma lem5739441 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739442 {A : Type'} (x : type402 A) : (term522 A x) = (term494 A x).
Proof. exact (MK_COMB (@lem5739441 A) (@lem5739440 A x)). Qed.
Lemma lem5739443 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739444 {A : Type'} (x : type402 A) : (term523 A x) = (term512 A x).
Proof. exact (MK_COMB (@lem5739443) (@lem5739442 A x)). Qed.
Lemma lem5739445 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739446 {A : Type'} (x : type402 A) : (term518 A x) = (term514 A x).
Proof. exact (MK_COMB (@lem5739444 A x) (@lem5739445 A)). Qed.
Lemma lem5739447 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739448 {A : Type'} (x : type402 A) : (term524 A x) = (term525 A x).
Proof. exact (MK_COMB (@lem5739447) (@lem5739446 A x)). Qed.
Lemma lem5739449 {A : Type'} (y : type402 A) (x : type402 A) : (term520 A x y) = (term492 A y x).
Proof. exact (eq_refl (term520 A x y)). Qed.
Lemma lem5739450 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739451 {A : Type'} (y : type402 A) (x : type402 A) : (term526 A x y) = (term527 A y x).
Proof. exact (MK_COMB (@lem5739450) (@lem5739449 A y x)). Qed.
Lemma lem5739452 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739453 {A : Type'} (y : type402 A) (x : type402 A) : (term528 A x y) = (term529 A y x).
Proof. exact (MK_COMB (@lem5739451 A y x) (@lem5739452 A)). Qed.
Lemma lem5739454 {A : Type'} (x : type402 A) : (term530 A x) = (term531 A x).
Proof. exact (fun_ext (fun y : type402 A => @lem5739453 A y x)). Qed.
Lemma lem5739455 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739456 {A : Type'} (x : type402 A) : (term519 A x) = (term532 A x).
Proof. exact (MK_COMB (@lem5739455 A) (@lem5739454 A x)). Qed.
Lemma lem5739457 {A : Type'} (x : type402 A) : ((term518 A x) = (term519 A x)) = ((term514 A x) = (term532 A x)).
Proof. exact (MK_COMB (@lem5739448 A x) (@lem5739456 A x)). Qed.
Lemma lem5739458 {A : Type'} (x : type402 A) : (term514 A x) = (term532 A x).
Proof. exact (EQ_MP (@lem5739457 A x) (@lem5739438 A x)). Qed.
Lemma lem5739460 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5739461 {A : Type'} (P : type82 A) (Q : Prop) : (term501 A P Q) = (term502 A P Q).
Proof. exact (@lem5739460 (type402 A) P Q). Qed.
Lemma lem5739462 {A : Type'} (y : type402 A) (x : type402 A) : (term533 A y x) = (term534 A y x).
Proof. exact (@lem5739461 A (term491 A y x) (term266 A)). Qed.
Lemma lem5739463 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) : (term535 A y x z) = (term489 A y z x).
Proof. exact (eq_refl (term535 A y x z)). Qed.
Lemma lem5739464 {A : Type'} (y : type402 A) (x : type402 A) : (term536 A y x) = (term491 A y x).
Proof. exact (fun_ext (fun z : type402 A => @lem5739463 A y z x)). Qed.
Lemma lem5739465 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739466 {A : Type'} (y : type402 A) (x : type402 A) : (term537 A y x) = (term492 A y x).
Proof. exact (MK_COMB (@lem5739465 A) (@lem5739464 A y x)). Qed.
Lemma lem5739467 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739468 {A : Type'} (y : type402 A) (x : type402 A) : (term538 A y x) = (term527 A y x).
Proof. exact (MK_COMB (@lem5739467) (@lem5739466 A y x)). Qed.
Lemma lem5739469 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739470 {A : Type'} (y : type402 A) (x : type402 A) : (term533 A y x) = (term529 A y x).
Proof. exact (MK_COMB (@lem5739468 A y x) (@lem5739469 A)). Qed.
Lemma lem5739471 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739472 {A : Type'} (y : type402 A) (x : type402 A) : (term539 A y x) = (term540 A y x).
Proof. exact (MK_COMB (@lem5739471) (@lem5739470 A y x)). Qed.
Lemma lem5739473 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) : (term535 A y x z) = (term489 A y z x).
Proof. exact (eq_refl (term535 A y x z)). Qed.
Lemma lem5739474 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739475 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) : (term541 A y x z) = (term542 A y z x).
Proof. exact (MK_COMB (@lem5739474) (@lem5739473 A y z x)). Qed.
Lemma lem5739476 {A : Type'} : (term266 A) = (term266 A).
Proof. exact (eq_refl (term266 A)). Qed.
Lemma lem5739477 {A : Type'} (y : type402 A) (z : type402 A) (x : type402 A) : (term543 A y x z) = (term544 A y z x).
Proof. exact (MK_COMB (@lem5739475 A y z x) (@lem5739476 A)). Qed.
Lemma lem5739478 {A : Type'} (y : type402 A) (x : type402 A) : (term545 A y x) = (term546 A y x).
Proof. exact (fun_ext (fun z : type402 A => @lem5739477 A y z x)). Qed.
Lemma lem5739479 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739480 {A : Type'} (y : type402 A) (x : type402 A) : (term534 A y x) = (term547 A y x).
Proof. exact (MK_COMB (@lem5739479 A) (@lem5739478 A y x)). Qed.
Lemma lem5739481 {A : Type'} (y : type402 A) (x : type402 A) : ((term533 A y x) = (term534 A y x)) = ((term529 A y x) = (term547 A y x)).
Proof. exact (MK_COMB (@lem5739472 A y x) (@lem5739480 A y x)). Qed.
Lemma lem5739482 {A : Type'} (y : type402 A) (x : type402 A) : (term529 A y x) = (term547 A y x).
Proof. exact (EQ_MP (@lem5739481 A y x) (@lem5739462 A y x)). Qed.
Lemma lem5739483 {A : Type'} (x : type402 A) : (term531 A x) = (term548 A x).
Proof. exact (fun_ext (fun y : type402 A => @lem5739482 A y x)). Qed.
Lemma lem5739484 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739485 {A : Type'} (x : type402 A) : (term532 A x) = (term549 A x).
Proof. exact (MK_COMB (@lem5739484 A) (@lem5739483 A x)). Qed.
Lemma lem5739486 {A : Type'} (x : type402 A) : (term514 A x) = (term549 A x).
Proof. exact (TRANS (@lem5739458 A x) (@lem5739485 A x)). Qed.
Lemma lem5739487 {A : Type'} : (term516 A) = (term550 A).
Proof. exact (fun_ext (fun x : type402 A => @lem5739486 A x)). Qed.
Lemma lem5739488 {A : Type'} : (@ex ((A -> A -> A) -> A)) = (@ex ((A -> A -> A) -> A)).
Proof. exact (eq_refl (@ex ((A -> A -> A) -> A))). Qed.
Lemma lem5739489 {A : Type'} : (term517 A) = (term551 A).
Proof. exact (MK_COMB (@lem5739488 A) (@lem5739487 A)). Qed.
Lemma lem5739490 {A : Type'} : (term498 A) = (term551 A).
Proof. exact (TRANS (@lem5739434 A) (@lem5739489 A)). Qed.
Lemma lem5739491 {A : Type'} : (term267 A) = (term551 A).
Proof. exact (TRANS (@lem5739410 A) (@lem5739490 A)). Qed.
Lemma lem5739492 {A : Type'} : (term245 A) = (term551 A).
Proof. exact (TRANS (@lem5738941 A) (@lem5739491 A)). Qed.
Lemma lem5739493 {A : Type'} : (term57 A) = (term551 A).
Proof. exact (TRANS (@lem5738914 A) (@lem5739492 A)). Qed.
Lemma lem5739494 {A : Type'} (h1 : term57 A) : term551 A.
Proof. exact (EQ_MP (@lem5739493 A) (@lem5738635 A h1)). Qed.
Lemma lem5739498 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5739499 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5739500 {B : Type'} (op : type1400 B) (x : B) : (term180 B op x) = (term181 B op x).
Proof. exact (@lem5739499 B (term125 B op x)). Qed.
Lemma lem5739501 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term182 B op x y) = ((op x y) = (op y x)).
Proof. exact (eq_refl (term182 B op x y)). Qed.
Lemma lem5739502 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5739504 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term183 B op x y) = (term184 B op y x).
Proof. exact (MK_COMB (@lem5739502) (@lem5739501 B op y x)). Qed.
Lemma lem5739505 {B : Type'} (op : type1400 B) (x : B) : (term185 B op x) = (term186 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739504 B op y x)). Qed.
Lemma lem5739506 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739507 {B : Type'} (op : type1400 B) (x : B) : (term181 B op x) = (term187 B op x).
Proof. exact (MK_COMB (@lem5739506 B) (@lem5739505 B op x)). Qed.
Lemma lem5739508 {B : Type'} (op : type1400 B) (x : B) : (term180 B op x) = (term187 B op x).
Proof. exact (TRANS (@lem5739500 B op x) (@lem5739507 B op x)). Qed.
Lemma lem5739509 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739498 B op y x)). Qed.
Lemma lem5739510 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5739511 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5739510 B) (@lem5739509 B op x)). Qed.
Lemma lem5739512 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5739513 {B : Type'} (op : type1400 B) : (term188 B op) = (term189 B op).
Proof. exact (@lem5739512 B (term127 B op)). Qed.
Lemma lem5739514 {B : Type'} (op : type1400 B) (x : B) : (term190 B op x) = (term126 B op x).
Proof. exact (eq_refl (term190 B op x)). Qed.
Lemma lem5739515 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5739516 {B : Type'} (op : type1400 B) (x : B) : (term191 B op x) = (term180 B op x).
Proof. exact (MK_COMB (@lem5739515) (@lem5739514 B op x)). Qed.
Lemma lem5739517 {B : Type'} (op : type1400 B) (x : B) : (term191 B op x) = (term187 B op x).
Proof. exact (TRANS (@lem5739516 B op x) (@lem5739508 B op x)). Qed.
Lemma lem5739518 {B : Type'} (op : type1400 B) : (term192 B op) = (term193 B op).
Proof. exact (fun_ext (fun x : B => @lem5739517 B op x)). Qed.
Lemma lem5739519 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739520 {B : Type'} (op : type1400 B) : (term189 B op) = (term194 B op).
Proof. exact (MK_COMB (@lem5739519 B) (@lem5739518 B op)). Qed.
Lemma lem5739521 {B : Type'} (op : type1400 B) : (term188 B op) = (term194 B op).
Proof. exact (TRANS (@lem5739513 B op) (@lem5739520 B op)). Qed.
Lemma lem5739522 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5739511 B op x)). Qed.
Lemma lem5739523 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5739524 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5739523 B) (@lem5739522 B op)). Qed.
Lemma lem5739526 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5739527 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5739528 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term195 B op x y) = (term196 B op x y).
Proof. exact (@lem5739527 B (term117 B op x y)). Qed.
Lemma lem5739529 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term197 B op x y z) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl (term197 B op x y z)). Qed.
Lemma lem5739530 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5739532 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term198 B op x y z) = (term199 B op x y z).
Proof. exact (MK_COMB (@lem5739530) (@lem5739529 B op x y z)). Qed.
Lemma lem5739533 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term200 B op x y) = (term201 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5739532 B op x y z)). Qed.
Lemma lem5739534 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739535 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term196 B op x y) = (term202 B op x y).
Proof. exact (MK_COMB (@lem5739534 B) (@lem5739533 B op x y)). Qed.
Lemma lem5739536 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term195 B op x y) = (term202 B op x y).
Proof. exact (TRANS (@lem5739528 B op x y) (@lem5739535 B op x y)). Qed.
Lemma lem5739537 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5739526 B op x y z)). Qed.
Lemma lem5739538 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5739539 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5739538 B) (@lem5739537 B op x y)). Qed.
Lemma lem5739540 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5739541 {B : Type'} (op : type1400 B) (x : B) : (term203 B op x) = (term204 B op x).
Proof. exact (@lem5739540 B (term119 B op x)). Qed.
Lemma lem5739542 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term205 B op x y) = (term118 B op x y).
Proof. exact (eq_refl (term205 B op x y)). Qed.
Lemma lem5739543 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5739544 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term206 B op x y) = (term195 B op x y).
Proof. exact (MK_COMB (@lem5739543) (@lem5739542 B op x y)). Qed.
Lemma lem5739545 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term206 B op x y) = (term202 B op x y).
Proof. exact (TRANS (@lem5739544 B op x y) (@lem5739536 B op x y)). Qed.
Lemma lem5739546 {B : Type'} (op : type1400 B) (x : B) : (term207 B op x) = (term208 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739545 B op x y)). Qed.
Lemma lem5739547 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739548 {B : Type'} (op : type1400 B) (x : B) : (term204 B op x) = (term209 B op x).
Proof. exact (MK_COMB (@lem5739547 B) (@lem5739546 B op x)). Qed.
Lemma lem5739549 {B : Type'} (op : type1400 B) (x : B) : (term203 B op x) = (term209 B op x).
Proof. exact (TRANS (@lem5739541 B op x) (@lem5739548 B op x)). Qed.
Lemma lem5739550 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739539 B op x y)). Qed.
Lemma lem5739551 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5739552 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5739551 B) (@lem5739550 B op x)). Qed.
Lemma lem5739553 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5739554 {B : Type'} (op : type1400 B) : (term210 B op) = (term211 B op).
Proof. exact (@lem5739553 B (term121 B op)). Qed.
Lemma lem5739555 {B : Type'} (op : type1400 B) (x : B) : (term212 B op x) = (term120 B op x).
Proof. exact (eq_refl (term212 B op x)). Qed.
Lemma lem5739556 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5739557 {B : Type'} (op : type1400 B) (x : B) : (term213 B op x) = (term203 B op x).
Proof. exact (MK_COMB (@lem5739556) (@lem5739555 B op x)). Qed.
Lemma lem5739558 {B : Type'} (op : type1400 B) (x : B) : (term213 B op x) = (term209 B op x).
Proof. exact (TRANS (@lem5739557 B op x) (@lem5739549 B op x)). Qed.
Lemma lem5739559 {B : Type'} (op : type1400 B) : (term214 B op) = (term215 B op).
Proof. exact (fun_ext (fun x : B => @lem5739558 B op x)). Qed.
Lemma lem5739560 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739561 {B : Type'} (op : type1400 B) : (term211 B op) = (term216 B op).
Proof. exact (MK_COMB (@lem5739560 B) (@lem5739559 B op)). Qed.
Lemma lem5739562 {B : Type'} (op : type1400 B) : (term210 B op) = (term216 B op).
Proof. exact (TRANS (@lem5739554 B op) (@lem5739561 B op)). Qed.
Lemma lem5739563 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5739552 B op x)). Qed.
Lemma lem5739564 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5739565 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5739564 B) (@lem5739563 B op)). Qed.
Lemma lem5739567 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5739568 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5739569 {B : Type'} (op : type1400 B) : (term217 B op) = (term218 B op).
Proof. exact (@lem5739568 B (term113 B op)). Qed.
Lemma lem5739570 {B : Type'} (op : type1400 B) (x : B) : (term219 B op x) = ((term112 B op x) = x).
Proof. exact (eq_refl (term219 B op x)). Qed.
Lemma lem5739571 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5739573 {B : Type'} (op : type1400 B) (x : B) : (term220 B op x) = (term221 B op x).
Proof. exact (MK_COMB (@lem5739571) (@lem5739570 B op x)). Qed.
Lemma lem5739574 {B : Type'} (op : type1400 B) : (term222 B op) = (term223 B op).
Proof. exact (fun_ext (fun x : B => @lem5739573 B op x)). Qed.
Lemma lem5739575 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739576 {B : Type'} (op : type1400 B) : (term218 B op) = (term224 B op).
Proof. exact (MK_COMB (@lem5739575 B) (@lem5739574 B op)). Qed.
Lemma lem5739577 {B : Type'} (op : type1400 B) : (term217 B op) = (term224 B op).
Proof. exact (TRANS (@lem5739569 B op) (@lem5739576 B op)). Qed.
Lemma lem5739578 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5739567 B op x)). Qed.
Lemma lem5739579 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5739580 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5739579 B) (@lem5739578 B op)). Qed.
Lemma lem5739581 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739582 {B : Type'} (op : type1400 B) : (term225 B op) = (term226 B op).
Proof. exact (MK_COMB (@lem5739581) (@lem5739562 B op)). Qed.
Lemma lem5739583 {B : Type'} (op : type1400 B) : (term227 B op) = (term228 B op).
Proof. exact (MK_COMB (@lem5739582 B op) (@lem5739577 B op)). Qed.
Lemma lem5739584 {B : Type'} (op : type1400 B) : (term229 B op) = (term227 B op).
Proof. exact (@lem17045 (term122 B op) (term114 B op)). Qed.
Lemma lem5739585 {B : Type'} (op : type1400 B) : (term229 B op) = (term228 B op).
Proof. exact (TRANS (@lem5739584 B op) (@lem5739583 B op)). Qed.
Lemma lem5739586 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739587 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5739586) (@lem5739565 B op)). Qed.
Lemma lem5739588 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5739587 B op) (@lem5739580 B op)). Qed.
Lemma lem5739589 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739590 {B : Type'} (op : type1400 B) : (term230 B op) = (term231 B op).
Proof. exact (MK_COMB (@lem5739589) (@lem5739521 B op)). Qed.
Lemma lem5739591 {B : Type'} (op : type1400 B) : (term232 B op) = (term233 B op).
Proof. exact (MK_COMB (@lem5739590 B op) (@lem5739585 B op)). Qed.
Lemma lem5739592 {B : Type'} (op : type1400 B) : (term234 B op) = (term232 B op).
Proof. exact (@lem17045 (term128 B op) (term124 B op)). Qed.
Lemma lem5739593 {B : Type'} (op : type1400 B) : (term234 B op) = (term233 B op).
Proof. exact (TRANS (@lem5739592 B op) (@lem5739591 B op)). Qed.
Lemma lem5739594 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739595 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5739594) (@lem5739524 B op)). Qed.
Lemma lem5739596 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5739595 B op) (@lem5739588 B op)). Qed.
Lemma lem5739598 {B : Type'} (op : type1400 B) : (term235 B op) = (term235 B op).
Proof. exact (eq_refl (term235 B op)). Qed.
Lemma lem5739599 {B : Type'} (op : type1400 B) : (term236 B op) = (term236 B op).
Proof. exact (MK_COMB (@lem5739598 B op) (@lem5739596 B op)). Qed.
Lemma lem5739601 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739602 {B : Type'} (op : type1400 B) : (term238 B op) = (term239 B op).
Proof. exact (MK_COMB (@lem5739601 B op) (@lem5739593 B op)). Qed.
Lemma lem5739603 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739604 {B : Type'} (op : type1400 B) : (term240 B op) = (term241 B op).
Proof. exact (MK_COMB (@lem5739603) (@lem5739602 B op)). Qed.
Lemma lem5739605 {B : Type'} (op : type1400 B) : (term242 B op) = (term243 B op).
Proof. exact (MK_COMB (@lem5739604 B op) (@lem5739599 B op)). Qed.
Lemma lem5739606 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = (term242 B op).
Proof. exact (@lem17784 (@monoidal B op) (term130 B op)). Qed.
Lemma lem5739607 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = (term243 B op).
Proof. exact (TRANS (@lem5739606 B op) (@lem5739605 B op)). Qed.
Lemma lem5739608 {B : Type'} : (term132 B) = (term244 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5739607 B op)). Qed.
Lemma lem5739609 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5739610 {B : Type'} : (term57 B) = (term245 B).
Proof. exact (MK_COMB (@lem5739609 B) (@lem5739608 B)). Qed.
Lemma lem5739612 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term22 A P Q) = (term21 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5739613 {B : Type'} (P : type403 B) (Q : type403 B) : (term246 B P Q) = (term247 B P Q).
Proof. exact (@lem5739612 (type1400 B) P Q). Qed.
Lemma lem5739614 {B : Type'} : (term248 B) = (term249 B).
Proof. exact (@lem5739613 B (term250 B) (term251 B)). Qed.
Lemma lem5739615 {B : Type'} (op : type1400 B) : (term252 B op) = (term239 B op).
Proof. exact (eq_refl (term252 B op)). Qed.
Lemma lem5739616 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739617 {B : Type'} (op : type1400 B) : (term253 B op) = (term241 B op).
Proof. exact (MK_COMB (@lem5739616) (@lem5739615 B op)). Qed.
Lemma lem5739618 {B : Type'} (op : type1400 B) : (term254 B op) = (term236 B op).
Proof. exact (eq_refl (term254 B op)). Qed.
Lemma lem5739619 {B : Type'} (op : type1400 B) : (term255 B op) = (term243 B op).
Proof. exact (MK_COMB (@lem5739617 B op) (@lem5739618 B op)). Qed.
Lemma lem5739620 {B : Type'} : (term256 B) = (term244 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5739619 B op)). Qed.
Lemma lem5739621 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5739622 {B : Type'} : (term248 B) = (term245 B).
Proof. exact (MK_COMB (@lem5739621 B) (@lem5739620 B)). Qed.
Lemma lem5739623 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739624 {B : Type'} : (term257 B) = (term258 B).
Proof. exact (MK_COMB (@lem5739623) (@lem5739622 B)). Qed.
Lemma lem5739625 {B : Type'} (op : type1400 B) : (term252 B op) = (term239 B op).
Proof. exact (eq_refl (term252 B op)). Qed.
Lemma lem5739626 {B : Type'} : (term259 B) = (term250 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5739625 B op)). Qed.
Lemma lem5739627 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5739628 {B : Type'} : (term260 B) = (term261 B).
Proof. exact (MK_COMB (@lem5739627 B) (@lem5739626 B)). Qed.
Lemma lem5739629 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5739630 {B : Type'} : (term262 B) = (term263 B).
Proof. exact (MK_COMB (@lem5739629) (@lem5739628 B)). Qed.
Lemma lem5739631 {B : Type'} (op : type1400 B) : (term254 B op) = (term236 B op).
Proof. exact (eq_refl (term254 B op)). Qed.
Lemma lem5739632 {B : Type'} : (term264 B) = (term251 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5739631 B op)). Qed.
Lemma lem5739633 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5739634 {B : Type'} : (term265 B) = (term266 B).
Proof. exact (MK_COMB (@lem5739633 B) (@lem5739632 B)). Qed.
Lemma lem5739635 {B : Type'} : (term249 B) = (term267 B).
Proof. exact (MK_COMB (@lem5739630 B) (@lem5739634 B)). Qed.
Lemma lem5739636 {B : Type'} : ((term248 B) = (term249 B)) = ((term245 B) = (term267 B)).
Proof. exact (MK_COMB (@lem5739624 B) (@lem5739635 B)). Qed.
Lemma lem5739637 {B : Type'} : (term245 B) = (term267 B).
Proof. exact (EQ_MP (@lem5739636 B) (@lem5739614 B)). Qed.
Lemma lem5739763 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5739764 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5739763 B P Q). Qed.
Lemma lem5739765 {B : Type'} (op : type1400 B) : (term270 B op) = (term271 B op).
Proof. exact (@lem5739764 B (term215 B op) (term223 B op)). Qed.
Lemma lem5739766 {B : Type'} (op : type1400 B) (x : B) : (term272 B op x) = (term209 B op x).
Proof. exact (eq_refl (term272 B op x)). Qed.
Lemma lem5739767 {B : Type'} (op : type1400 B) : (term273 B op) = (term215 B op).
Proof. exact (fun_ext (fun x : B => @lem5739766 B op x)). Qed.
Lemma lem5739768 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739769 {B : Type'} (op : type1400 B) : (term274 B op) = (term216 B op).
Proof. exact (MK_COMB (@lem5739768 B) (@lem5739767 B op)). Qed.
Lemma lem5739770 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739771 {B : Type'} (op : type1400 B) : (term275 B op) = (term226 B op).
Proof. exact (MK_COMB (@lem5739770) (@lem5739769 B op)). Qed.
Lemma lem5739772 {B : Type'} (op : type1400 B) (x : B) : (term276 B op x) = (term221 B op x).
Proof. exact (eq_refl (term276 B op x)). Qed.
Lemma lem5739773 {B : Type'} (op : type1400 B) : (term277 B op) = (term223 B op).
Proof. exact (fun_ext (fun x : B => @lem5739772 B op x)). Qed.
Lemma lem5739774 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739775 {B : Type'} (op : type1400 B) : (term278 B op) = (term224 B op).
Proof. exact (MK_COMB (@lem5739774 B) (@lem5739773 B op)). Qed.
Lemma lem5739776 {B : Type'} (op : type1400 B) : (term270 B op) = (term228 B op).
Proof. exact (MK_COMB (@lem5739771 B op) (@lem5739775 B op)). Qed.
Lemma lem5739777 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739778 {B : Type'} (op : type1400 B) : (term279 B op) = (term280 B op).
Proof. exact (MK_COMB (@lem5739777) (@lem5739776 B op)). Qed.
Lemma lem5739779 {B : Type'} (op : type1400 B) (x : B) : (term272 B op x) = (term209 B op x).
Proof. exact (eq_refl (term272 B op x)). Qed.
Lemma lem5739780 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739781 {B : Type'} (op : type1400 B) (x : B) : (term281 B op x) = (term282 B op x).
Proof. exact (MK_COMB (@lem5739780) (@lem5739779 B op x)). Qed.
Lemma lem5739782 {B : Type'} (op : type1400 B) (x : B) : (term276 B op x) = (term221 B op x).
Proof. exact (eq_refl (term276 B op x)). Qed.
Lemma lem5739783 {B : Type'} (op : type1400 B) (x : B) : (term283 B op x) = (term284 B op x).
Proof. exact (MK_COMB (@lem5739781 B op x) (@lem5739782 B op x)). Qed.
Lemma lem5739784 {B : Type'} (op : type1400 B) : (term285 B op) = (term286 B op).
Proof. exact (fun_ext (fun x : B => @lem5739783 B op x)). Qed.
Lemma lem5739785 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739786 {B : Type'} (op : type1400 B) : (term271 B op) = (term287 B op).
Proof. exact (MK_COMB (@lem5739785 B) (@lem5739784 B op)). Qed.
Lemma lem5739787 {B : Type'} (op : type1400 B) : ((term270 B op) = (term271 B op)) = ((term228 B op) = (term287 B op)).
Proof. exact (MK_COMB (@lem5739778 B op) (@lem5739786 B op)). Qed.
Lemma lem5739788 {B : Type'} (op : type1400 B) : (term228 B op) = (term287 B op).
Proof. exact (EQ_MP (@lem5739787 B op) (@lem5739765 B op)). Qed.
Lemma lem5739790 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5739791 {B : Type'} (P : B -> Prop) (Q : Prop) : (term288 B P Q) = (term289 B P Q).
Proof. exact (@lem5739790 B P Q). Qed.
Lemma lem5739792 {B : Type'} (op : type1400 B) (x : B) : (term290 B op x) = (term291 B op x).
Proof. exact (@lem5739791 B (term208 B op x) (term221 B op x)). Qed.
Lemma lem5739793 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term292 B op x y) = (term202 B op x y).
Proof. exact (eq_refl (term292 B op x y)). Qed.
Lemma lem5739794 {B : Type'} (op : type1400 B) (x : B) : (term293 B op x) = (term208 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739793 B op x y)). Qed.
Lemma lem5739795 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739796 {B : Type'} (op : type1400 B) (x : B) : (term294 B op x) = (term209 B op x).
Proof. exact (MK_COMB (@lem5739795 B) (@lem5739794 B op x)). Qed.
Lemma lem5739797 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739798 {B : Type'} (op : type1400 B) (x : B) : (term295 B op x) = (term282 B op x).
Proof. exact (MK_COMB (@lem5739797) (@lem5739796 B op x)). Qed.
Lemma lem5739799 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5739800 {B : Type'} (op : type1400 B) (x : B) : (term290 B op x) = (term284 B op x).
Proof. exact (MK_COMB (@lem5739798 B op x) (@lem5739799 B op x)). Qed.
Lemma lem5739801 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739802 {B : Type'} (op : type1400 B) (x : B) : (term296 B op x) = (term297 B op x).
Proof. exact (MK_COMB (@lem5739801) (@lem5739800 B op x)). Qed.
Lemma lem5739803 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term292 B op x y) = (term202 B op x y).
Proof. exact (eq_refl (term292 B op x y)). Qed.
Lemma lem5739804 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739805 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term298 B op x y) = (term299 B op x y).
Proof. exact (MK_COMB (@lem5739804) (@lem5739803 B op x y)). Qed.
Lemma lem5739806 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5739807 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term300 B y op x) = (term301 B y op x).
Proof. exact (MK_COMB (@lem5739805 B op x y) (@lem5739806 B op x)). Qed.
Lemma lem5739808 {B : Type'} (op : type1400 B) (x : B) : (term302 B op x) = (term303 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739807 B y op x)). Qed.
Lemma lem5739809 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739810 {B : Type'} (op : type1400 B) (x : B) : (term291 B op x) = (term304 B op x).
Proof. exact (MK_COMB (@lem5739809 B) (@lem5739808 B op x)). Qed.
Lemma lem5739811 {B : Type'} (op : type1400 B) (x : B) : ((term290 B op x) = (term291 B op x)) = ((term284 B op x) = (term304 B op x)).
Proof. exact (MK_COMB (@lem5739802 B op x) (@lem5739810 B op x)). Qed.
Lemma lem5739812 {B : Type'} (op : type1400 B) (x : B) : (term284 B op x) = (term304 B op x).
Proof. exact (EQ_MP (@lem5739811 B op x) (@lem5739792 B op x)). Qed.
Lemma lem5739814 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5739815 {B : Type'} (P : B -> Prop) (Q : Prop) : (term288 B P Q) = (term289 B P Q).
Proof. exact (@lem5739814 B P Q). Qed.
Lemma lem5739816 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term305 B y op x) = (term306 B y op x).
Proof. exact (@lem5739815 B (term201 B op x y) (term221 B op x)). Qed.
Lemma lem5739817 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term307 B op x y z) = (term199 B op x y z).
Proof. exact (eq_refl (term307 B op x y z)). Qed.
Lemma lem5739818 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term308 B op x y) = (term201 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5739817 B op x y z)). Qed.
Lemma lem5739819 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739820 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term309 B op x y) = (term202 B op x y).
Proof. exact (MK_COMB (@lem5739819 B) (@lem5739818 B op x y)). Qed.
Lemma lem5739821 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739822 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term310 B op x y) = (term299 B op x y).
Proof. exact (MK_COMB (@lem5739821) (@lem5739820 B op x y)). Qed.
Lemma lem5739823 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5739824 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term305 B y op x) = (term301 B y op x).
Proof. exact (MK_COMB (@lem5739822 B op x y) (@lem5739823 B op x)). Qed.
Lemma lem5739825 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739826 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term311 B y op x) = (term312 B y op x).
Proof. exact (MK_COMB (@lem5739825) (@lem5739824 B y op x)). Qed.
Lemma lem5739827 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term307 B op x y z) = (term199 B op x y z).
Proof. exact (eq_refl (term307 B op x y z)). Qed.
Lemma lem5739828 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739829 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term313 B op x y z) = (term314 B op x y z).
Proof. exact (MK_COMB (@lem5739828) (@lem5739827 B op x y z)). Qed.
Lemma lem5739830 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5739831 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term315 B y z op x) = (term316 B y z op x).
Proof. exact (MK_COMB (@lem5739829 B op x y z) (@lem5739830 B op x)). Qed.
Lemma lem5739832 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term317 B y op x) = (term318 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5739831 B y z op x)). Qed.
Lemma lem5739833 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739834 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term306 B y op x) = (term319 B y op x).
Proof. exact (MK_COMB (@lem5739833 B) (@lem5739832 B y op x)). Qed.
Lemma lem5739835 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term305 B y op x) = (term306 B y op x)) = ((term301 B y op x) = (term319 B y op x)).
Proof. exact (MK_COMB (@lem5739826 B y op x) (@lem5739834 B y op x)). Qed.
Lemma lem5739836 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term301 B y op x) = (term319 B y op x).
Proof. exact (EQ_MP (@lem5739835 B y op x) (@lem5739816 B y op x)). Qed.
Lemma lem5739837 {B : Type'} (op : type1400 B) (x : B) : (term303 B op x) = (term320 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739836 B y op x)). Qed.
Lemma lem5739838 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739839 {B : Type'} (op : type1400 B) (x : B) : (term304 B op x) = (term321 B op x).
Proof. exact (MK_COMB (@lem5739838 B) (@lem5739837 B op x)). Qed.
Lemma lem5739840 {B : Type'} (op : type1400 B) (x : B) : (term284 B op x) = (term321 B op x).
Proof. exact (TRANS (@lem5739812 B op x) (@lem5739839 B op x)). Qed.
Lemma lem5739841 {B : Type'} (op : type1400 B) : (term286 B op) = (term322 B op).
Proof. exact (fun_ext (fun x : B => @lem5739840 B op x)). Qed.
Lemma lem5739842 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739843 {B : Type'} (op : type1400 B) : (term287 B op) = (term323 B op).
Proof. exact (MK_COMB (@lem5739842 B) (@lem5739841 B op)). Qed.
Lemma lem5739844 {B : Type'} (op : type1400 B) : (term228 B op) = (term323 B op).
Proof. exact (TRANS (@lem5739788 B op) (@lem5739843 B op)). Qed.
Lemma lem5739845 {B : Type'} (op : type1400 B) : (term231 B op) = (term231 B op).
Proof. exact (eq_refl (term231 B op)). Qed.
Lemma lem5739846 {B : Type'} (op : type1400 B) : (term233 B op) = (term324 B op).
Proof. exact (MK_COMB (@lem5739845 B op) (@lem5739844 B op)). Qed.
Lemma lem5739848 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5739849 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5739848 B P Q). Qed.
Lemma lem5739850 {B : Type'} (op : type1400 B) : (term325 B op) = (term326 B op).
Proof. exact (@lem5739849 B (term193 B op) (term322 B op)). Qed.
Lemma lem5739851 {B : Type'} (op : type1400 B) (x : B) : (term327 B op x) = (term187 B op x).
Proof. exact (eq_refl (term327 B op x)). Qed.
Lemma lem5739852 {B : Type'} (op : type1400 B) : (term328 B op) = (term193 B op).
Proof. exact (fun_ext (fun x : B => @lem5739851 B op x)). Qed.
Lemma lem5739853 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739854 {B : Type'} (op : type1400 B) : (term329 B op) = (term194 B op).
Proof. exact (MK_COMB (@lem5739853 B) (@lem5739852 B op)). Qed.
Lemma lem5739855 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739856 {B : Type'} (op : type1400 B) : (term330 B op) = (term231 B op).
Proof. exact (MK_COMB (@lem5739855) (@lem5739854 B op)). Qed.
Lemma lem5739857 {B : Type'} (op : type1400 B) (x : B) : (term331 B op x) = (term321 B op x).
Proof. exact (eq_refl (term331 B op x)). Qed.
Lemma lem5739858 {B : Type'} (op : type1400 B) : (term332 B op) = (term322 B op).
Proof. exact (fun_ext (fun x : B => @lem5739857 B op x)). Qed.
Lemma lem5739859 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739860 {B : Type'} (op : type1400 B) : (term333 B op) = (term323 B op).
Proof. exact (MK_COMB (@lem5739859 B) (@lem5739858 B op)). Qed.
Lemma lem5739861 {B : Type'} (op : type1400 B) : (term325 B op) = (term324 B op).
Proof. exact (MK_COMB (@lem5739856 B op) (@lem5739860 B op)). Qed.
Lemma lem5739862 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739863 {B : Type'} (op : type1400 B) : (term334 B op) = (term335 B op).
Proof. exact (MK_COMB (@lem5739862) (@lem5739861 B op)). Qed.
Lemma lem5739864 {B : Type'} (op : type1400 B) (x : B) : (term327 B op x) = (term187 B op x).
Proof. exact (eq_refl (term327 B op x)). Qed.
Lemma lem5739865 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739866 {B : Type'} (op : type1400 B) (x : B) : (term336 B op x) = (term337 B op x).
Proof. exact (MK_COMB (@lem5739865) (@lem5739864 B op x)). Qed.
Lemma lem5739867 {B : Type'} (op : type1400 B) (x : B) : (term331 B op x) = (term321 B op x).
Proof. exact (eq_refl (term331 B op x)). Qed.
Lemma lem5739868 {B : Type'} (op : type1400 B) (x : B) : (term338 B op x) = (term339 B op x).
Proof. exact (MK_COMB (@lem5739866 B op x) (@lem5739867 B op x)). Qed.
Lemma lem5739869 {B : Type'} (op : type1400 B) : (term340 B op) = (term341 B op).
Proof. exact (fun_ext (fun x : B => @lem5739868 B op x)). Qed.
Lemma lem5739870 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739871 {B : Type'} (op : type1400 B) : (term326 B op) = (term342 B op).
Proof. exact (MK_COMB (@lem5739870 B) (@lem5739869 B op)). Qed.
Lemma lem5739872 {B : Type'} (op : type1400 B) : ((term325 B op) = (term326 B op)) = ((term324 B op) = (term342 B op)).
Proof. exact (MK_COMB (@lem5739863 B op) (@lem5739871 B op)). Qed.
Lemma lem5739873 {B : Type'} (op : type1400 B) : (term324 B op) = (term342 B op).
Proof. exact (EQ_MP (@lem5739872 B op) (@lem5739850 B op)). Qed.
Lemma lem5739875 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5739876 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5739875 B P Q). Qed.
Lemma lem5739877 {B : Type'} (op : type1400 B) (x : B) : (term343 B op x) = (term344 B op x).
Proof. exact (@lem5739876 B (term186 B op x) (term320 B op x)). Qed.
Lemma lem5739878 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term345 B op x y) = (term184 B op y x).
Proof. exact (eq_refl (term345 B op x y)). Qed.
Lemma lem5739879 {B : Type'} (op : type1400 B) (x : B) : (term346 B op x) = (term186 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739878 B op y x)). Qed.
Lemma lem5739880 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739881 {B : Type'} (op : type1400 B) (x : B) : (term347 B op x) = (term187 B op x).
Proof. exact (MK_COMB (@lem5739880 B) (@lem5739879 B op x)). Qed.
Lemma lem5739882 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739883 {B : Type'} (op : type1400 B) (x : B) : (term348 B op x) = (term337 B op x).
Proof. exact (MK_COMB (@lem5739882) (@lem5739881 B op x)). Qed.
Lemma lem5739884 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term349 B op x y) = (term319 B y op x).
Proof. exact (eq_refl (term349 B op x y)). Qed.
Lemma lem5739885 {B : Type'} (op : type1400 B) (x : B) : (term350 B op x) = (term320 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739884 B y op x)). Qed.
Lemma lem5739886 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739887 {B : Type'} (op : type1400 B) (x : B) : (term351 B op x) = (term321 B op x).
Proof. exact (MK_COMB (@lem5739886 B) (@lem5739885 B op x)). Qed.
Lemma lem5739888 {B : Type'} (op : type1400 B) (x : B) : (term343 B op x) = (term339 B op x).
Proof. exact (MK_COMB (@lem5739883 B op x) (@lem5739887 B op x)). Qed.
Lemma lem5739889 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739890 {B : Type'} (op : type1400 B) (x : B) : (term352 B op x) = (term353 B op x).
Proof. exact (MK_COMB (@lem5739889) (@lem5739888 B op x)). Qed.
Lemma lem5739891 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term345 B op x y) = (term184 B op y x).
Proof. exact (eq_refl (term345 B op x y)). Qed.
Lemma lem5739892 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5739893 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term354 B op x y) = (term355 B op y x).
Proof. exact (MK_COMB (@lem5739892) (@lem5739891 B op y x)). Qed.
Lemma lem5739894 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term349 B op x y) = (term319 B y op x).
Proof. exact (eq_refl (term349 B op x y)). Qed.
Lemma lem5739895 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term356 B op x y) = (term357 B y op x).
Proof. exact (MK_COMB (@lem5739893 B op y x) (@lem5739894 B y op x)). Qed.
Lemma lem5739896 {B : Type'} (op : type1400 B) (x : B) : (term358 B op x) = (term359 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739895 B y op x)). Qed.
Lemma lem5739897 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739898 {B : Type'} (op : type1400 B) (x : B) : (term344 B op x) = (term360 B op x).
Proof. exact (MK_COMB (@lem5739897 B) (@lem5739896 B op x)). Qed.
Lemma lem5739899 {B : Type'} (op : type1400 B) (x : B) : ((term343 B op x) = (term344 B op x)) = ((term339 B op x) = (term360 B op x)).
Proof. exact (MK_COMB (@lem5739890 B op x) (@lem5739898 B op x)). Qed.
Lemma lem5739900 {B : Type'} (op : type1400 B) (x : B) : (term339 B op x) = (term360 B op x).
Proof. exact (EQ_MP (@lem5739899 B op x) (@lem5739877 B op x)). Qed.
Lemma lem5739902 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739903 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5739902 B P Q). Qed.
Lemma lem5739904 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term363 B y op x) = (term364 B y op x).
Proof. exact (@lem5739903 B (term184 B op y x) (term318 B y op x)). Qed.
Lemma lem5739905 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term365 B y op x z) = (term316 B y z op x).
Proof. exact (eq_refl (term365 B y op x z)). Qed.
Lemma lem5739906 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term366 B y op x) = (term318 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5739905 B y z op x)). Qed.
Lemma lem5739907 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739908 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term367 B y op x) = (term319 B y op x).
Proof. exact (MK_COMB (@lem5739907 B) (@lem5739906 B y op x)). Qed.
Lemma lem5739909 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term355 B op y x) = (term355 B op y x).
Proof. exact (eq_refl (term355 B op y x)). Qed.
Lemma lem5739910 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term363 B y op x) = (term357 B y op x).
Proof. exact (MK_COMB (@lem5739909 B op y x) (@lem5739908 B y op x)). Qed.
Lemma lem5739911 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739912 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term368 B y op x) = (term369 B y op x).
Proof. exact (MK_COMB (@lem5739911) (@lem5739910 B y op x)). Qed.
Lemma lem5739913 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term365 B y op x z) = (term316 B y z op x).
Proof. exact (eq_refl (term365 B y op x z)). Qed.
Lemma lem5739914 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term355 B op y x) = (term355 B op y x).
Proof. exact (eq_refl (term355 B op y x)). Qed.
Lemma lem5739915 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term370 B y op x z) = (term371 B y z op x).
Proof. exact (MK_COMB (@lem5739914 B op y x) (@lem5739913 B y z op x)). Qed.
Lemma lem5739916 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term372 B y op x) = (term373 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5739915 B y z op x)). Qed.
Lemma lem5739917 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739918 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term364 B y op x) = (term374 B y op x).
Proof. exact (MK_COMB (@lem5739917 B) (@lem5739916 B y op x)). Qed.
Lemma lem5739919 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term363 B y op x) = (term364 B y op x)) = ((term357 B y op x) = (term374 B y op x)).
Proof. exact (MK_COMB (@lem5739912 B y op x) (@lem5739918 B y op x)). Qed.
Lemma lem5739920 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term357 B y op x) = (term374 B y op x).
Proof. exact (EQ_MP (@lem5739919 B y op x) (@lem5739904 B y op x)). Qed.
Lemma lem5739921 {B : Type'} (op : type1400 B) (x : B) : (term359 B op x) = (term375 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739920 B y op x)). Qed.
Lemma lem5739922 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739923 {B : Type'} (op : type1400 B) (x : B) : (term360 B op x) = (term376 B op x).
Proof. exact (MK_COMB (@lem5739922 B) (@lem5739921 B op x)). Qed.
Lemma lem5739924 {B : Type'} (op : type1400 B) (x : B) : (term339 B op x) = (term376 B op x).
Proof. exact (TRANS (@lem5739900 B op x) (@lem5739923 B op x)). Qed.
Lemma lem5739925 {B : Type'} (op : type1400 B) : (term341 B op) = (term377 B op).
Proof. exact (fun_ext (fun x : B => @lem5739924 B op x)). Qed.
Lemma lem5739926 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739927 {B : Type'} (op : type1400 B) : (term342 B op) = (term378 B op).
Proof. exact (MK_COMB (@lem5739926 B) (@lem5739925 B op)). Qed.
Lemma lem5739928 {B : Type'} (op : type1400 B) : (term324 B op) = (term378 B op).
Proof. exact (TRANS (@lem5739873 B op) (@lem5739927 B op)). Qed.
Lemma lem5739929 {B : Type'} (op : type1400 B) : (term233 B op) = (term378 B op).
Proof. exact (TRANS (@lem5739846 B op) (@lem5739928 B op)). Qed.
Lemma lem5739930 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739931 {B : Type'} (op : type1400 B) : (term239 B op) = (term379 B op).
Proof. exact (MK_COMB (@lem5739930 B op) (@lem5739929 B op)). Qed.
Lemma lem5739933 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739934 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5739933 B P Q). Qed.
Lemma lem5739935 {B : Type'} (op : type1400 B) : (term380 B op) = (term381 B op).
Proof. exact (@lem5739934 B (@monoidal B op) (term377 B op)). Qed.
Lemma lem5739936 {B : Type'} (op : type1400 B) (x : B) : (term382 B op x) = (term376 B op x).
Proof. exact (eq_refl (term382 B op x)). Qed.
Lemma lem5739937 {B : Type'} (op : type1400 B) : (term383 B op) = (term377 B op).
Proof. exact (fun_ext (fun x : B => @lem5739936 B op x)). Qed.
Lemma lem5739938 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739939 {B : Type'} (op : type1400 B) : (term384 B op) = (term378 B op).
Proof. exact (MK_COMB (@lem5739938 B) (@lem5739937 B op)). Qed.
Lemma lem5739940 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739941 {B : Type'} (op : type1400 B) : (term380 B op) = (term379 B op).
Proof. exact (MK_COMB (@lem5739940 B op) (@lem5739939 B op)). Qed.
Lemma lem5739942 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739943 {B : Type'} (op : type1400 B) : (term385 B op) = (term386 B op).
Proof. exact (MK_COMB (@lem5739942) (@lem5739941 B op)). Qed.
Lemma lem5739944 {B : Type'} (op : type1400 B) (x : B) : (term382 B op x) = (term376 B op x).
Proof. exact (eq_refl (term382 B op x)). Qed.
Lemma lem5739945 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739946 {B : Type'} (op : type1400 B) (x : B) : (term387 B op x) = (term388 B op x).
Proof. exact (MK_COMB (@lem5739945 B op) (@lem5739944 B op x)). Qed.
Lemma lem5739947 {B : Type'} (op : type1400 B) : (term389 B op) = (term390 B op).
Proof. exact (fun_ext (fun x : B => @lem5739946 B op x)). Qed.
Lemma lem5739948 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739949 {B : Type'} (op : type1400 B) : (term381 B op) = (term391 B op).
Proof. exact (MK_COMB (@lem5739948 B) (@lem5739947 B op)). Qed.
Lemma lem5739950 {B : Type'} (op : type1400 B) : ((term380 B op) = (term381 B op)) = ((term379 B op) = (term391 B op)).
Proof. exact (MK_COMB (@lem5739943 B op) (@lem5739949 B op)). Qed.
Lemma lem5739951 {B : Type'} (op : type1400 B) : (term379 B op) = (term391 B op).
Proof. exact (EQ_MP (@lem5739950 B op) (@lem5739935 B op)). Qed.
Lemma lem5739953 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739954 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5739953 B P Q). Qed.
Lemma lem5739955 {B : Type'} (op : type1400 B) (x : B) : (term392 B op x) = (term393 B op x).
Proof. exact (@lem5739954 B (@monoidal B op) (term375 B op x)). Qed.
Lemma lem5739956 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term394 B op x y) = (term374 B y op x).
Proof. exact (eq_refl (term394 B op x y)). Qed.
Lemma lem5739957 {B : Type'} (op : type1400 B) (x : B) : (term395 B op x) = (term375 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739956 B y op x)). Qed.
Lemma lem5739958 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739959 {B : Type'} (op : type1400 B) (x : B) : (term396 B op x) = (term376 B op x).
Proof. exact (MK_COMB (@lem5739958 B) (@lem5739957 B op x)). Qed.
Lemma lem5739960 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739961 {B : Type'} (op : type1400 B) (x : B) : (term392 B op x) = (term388 B op x).
Proof. exact (MK_COMB (@lem5739960 B op) (@lem5739959 B op x)). Qed.
Lemma lem5739962 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739963 {B : Type'} (op : type1400 B) (x : B) : (term397 B op x) = (term398 B op x).
Proof. exact (MK_COMB (@lem5739962) (@lem5739961 B op x)). Qed.
Lemma lem5739964 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term394 B op x y) = (term374 B y op x).
Proof. exact (eq_refl (term394 B op x y)). Qed.
Lemma lem5739965 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739966 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term399 B op x y) = (term400 B y op x).
Proof. exact (MK_COMB (@lem5739965 B op) (@lem5739964 B y op x)). Qed.
Lemma lem5739967 {B : Type'} (op : type1400 B) (x : B) : (term401 B op x) = (term402 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739966 B y op x)). Qed.
Lemma lem5739968 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739969 {B : Type'} (op : type1400 B) (x : B) : (term393 B op x) = (term403 B op x).
Proof. exact (MK_COMB (@lem5739968 B) (@lem5739967 B op x)). Qed.
Lemma lem5739970 {B : Type'} (op : type1400 B) (x : B) : ((term392 B op x) = (term393 B op x)) = ((term388 B op x) = (term403 B op x)).
Proof. exact (MK_COMB (@lem5739963 B op x) (@lem5739969 B op x)). Qed.
Lemma lem5739971 {B : Type'} (op : type1400 B) (x : B) : (term388 B op x) = (term403 B op x).
Proof. exact (EQ_MP (@lem5739970 B op x) (@lem5739955 B op x)). Qed.
Lemma lem5739973 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5739974 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5739973 B P Q). Qed.
Lemma lem5739975 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term404 B y op x) = (term405 B y op x).
Proof. exact (@lem5739974 B (@monoidal B op) (term373 B y op x)). Qed.
Lemma lem5739976 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term406 B y op x z) = (term371 B y z op x).
Proof. exact (eq_refl (term406 B y op x z)). Qed.
Lemma lem5739977 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term407 B y op x) = (term373 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5739976 B y z op x)). Qed.
Lemma lem5739978 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739979 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term408 B y op x) = (term374 B y op x).
Proof. exact (MK_COMB (@lem5739978 B) (@lem5739977 B y op x)). Qed.
Lemma lem5739980 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739981 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term404 B y op x) = (term400 B y op x).
Proof. exact (MK_COMB (@lem5739980 B op) (@lem5739979 B y op x)). Qed.
Lemma lem5739982 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5739983 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term409 B y op x) = (term410 B y op x).
Proof. exact (MK_COMB (@lem5739982) (@lem5739981 B y op x)). Qed.
Lemma lem5739984 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term406 B y op x z) = (term371 B y z op x).
Proof. exact (eq_refl (term406 B y op x z)). Qed.
Lemma lem5739985 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5739986 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term411 B y op x z) = (term412 B y z op x).
Proof. exact (MK_COMB (@lem5739985 B op) (@lem5739984 B y z op x)). Qed.
Lemma lem5739987 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term413 B y op x) = (term414 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5739986 B y z op x)). Qed.
Lemma lem5739988 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739989 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term405 B y op x) = (term415 B y op x).
Proof. exact (MK_COMB (@lem5739988 B) (@lem5739987 B y op x)). Qed.
Lemma lem5739990 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term404 B y op x) = (term405 B y op x)) = ((term400 B y op x) = (term415 B y op x)).
Proof. exact (MK_COMB (@lem5739983 B y op x) (@lem5739989 B y op x)). Qed.
Lemma lem5739991 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term400 B y op x) = (term415 B y op x).
Proof. exact (EQ_MP (@lem5739990 B y op x) (@lem5739975 B y op x)). Qed.
Lemma lem5739992 {B : Type'} (op : type1400 B) (x : B) : (term402 B op x) = (term416 B op x).
Proof. exact (fun_ext (fun y : B => @lem5739991 B y op x)). Qed.
Lemma lem5739993 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739994 {B : Type'} (op : type1400 B) (x : B) : (term403 B op x) = (term417 B op x).
Proof. exact (MK_COMB (@lem5739993 B) (@lem5739992 B op x)). Qed.
Lemma lem5739995 {B : Type'} (op : type1400 B) (x : B) : (term388 B op x) = (term417 B op x).
Proof. exact (TRANS (@lem5739971 B op x) (@lem5739994 B op x)). Qed.
Lemma lem5739996 {B : Type'} (op : type1400 B) : (term390 B op) = (term418 B op).
Proof. exact (fun_ext (fun x : B => @lem5739995 B op x)). Qed.
Lemma lem5739997 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5739998 {B : Type'} (op : type1400 B) : (term391 B op) = (term419 B op).
Proof. exact (MK_COMB (@lem5739997 B) (@lem5739996 B op)). Qed.
Lemma lem5739999 {B : Type'} (op : type1400 B) : (term379 B op) = (term419 B op).
Proof. exact (TRANS (@lem5739951 B op) (@lem5739998 B op)). Qed.
Lemma lem5740000 {B : Type'} (op : type1400 B) : (term239 B op) = (term419 B op).
Proof. exact (TRANS (@lem5739931 B op) (@lem5739999 B op)). Qed.
Lemma lem5740001 {B : Type'} : (term250 B) = (term420 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740000 B op)). Qed.
Lemma lem5740002 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740003 {B : Type'} : (term261 B) = (term421 B).
Proof. exact (MK_COMB (@lem5740002 B) (@lem5740001 B)). Qed.
Lemma lem5740005 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5740006 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5740005 (type1400 B) B P). Qed.
Lemma lem5740007 {B : Type'} : (term426 B) = (term427 B).
Proof. exact (@lem5740006 B (term428 B)). Qed.
Lemma lem5740008 {B : Type'} (op : type1400 B) : (term429 B op) = (term418 B op).
Proof. exact (eq_refl (term429 B op)). Qed.
Lemma lem5740009 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5740010 {B : Type'} (op : type1400 B) (x : B) : (term430 B op x) = (term431 B op x).
Proof. exact (MK_COMB (@lem5740008 B op) (@lem5740009 B x)). Qed.
Lemma lem5740011 {B : Type'} (op : type1400 B) (x : B) : (term431 B op x) = (term417 B op x).
Proof. exact (eq_refl (term431 B op x)). Qed.
Lemma lem5740012 {B : Type'} (op : type1400 B) (x : B) : (term430 B op x) = (term417 B op x).
Proof. exact (TRANS (@lem5740010 B op x) (@lem5740011 B op x)). Qed.
Lemma lem5740013 {B : Type'} (op : type1400 B) : (term432 B op) = (term418 B op).
Proof. exact (fun_ext (fun x : B => @lem5740012 B op x)). Qed.
Lemma lem5740014 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5740015 {B : Type'} (op : type1400 B) : (term433 B op) = (term419 B op).
Proof. exact (MK_COMB (@lem5740014 B) (@lem5740013 B op)). Qed.
Lemma lem5740016 {B : Type'} : (term434 B) = (term420 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740015 B op)). Qed.
Lemma lem5740017 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740018 {B : Type'} : (term426 B) = (term421 B).
Proof. exact (MK_COMB (@lem5740017 B) (@lem5740016 B)). Qed.
Lemma lem5740019 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5740020 {B : Type'} : (term435 B) = (term436 B).
Proof. exact (MK_COMB (@lem5740019) (@lem5740018 B)). Qed.
Lemma lem5740021 {B : Type'} (op : type1400 B) : (term429 B op) = (term418 B op).
Proof. exact (eq_refl (term429 B op)). Qed.
Lemma lem5740022 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (x op).
Proof. exact (eq_refl (x op)). Qed.
Lemma lem5740023 {B : Type'} (x : type402 B) (op : type1400 B) : (term437 B x op) = (term438 B x op).
Proof. exact (MK_COMB (@lem5740021 B op) (@lem5740022 B x op)). Qed.
Lemma lem5740024 {B : Type'} (x : type402 B) (op : type1400 B) : (term438 B x op) = (term439 B x op).
Proof. exact (eq_refl (term438 B x op)). Qed.
Lemma lem5740025 {B : Type'} (x : type402 B) (op : type1400 B) : (term437 B x op) = (term439 B x op).
Proof. exact (TRANS (@lem5740023 B x op) (@lem5740024 B x op)). Qed.
Lemma lem5740026 {B : Type'} (x : type402 B) : (term440 B x) = (term441 B x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740025 B x op)). Qed.
Lemma lem5740027 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740028 {B : Type'} (x : type402 B) : (term442 B x) = (term443 B x).
Proof. exact (MK_COMB (@lem5740027 B) (@lem5740026 B x)). Qed.
Lemma lem5740029 {B : Type'} : (term444 B) = (term445 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5740028 B x)). Qed.
Lemma lem5740030 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740031 {B : Type'} : (term427 B) = (term446 B).
Proof. exact (MK_COMB (@lem5740030 B) (@lem5740029 B)). Qed.
Lemma lem5740032 {B : Type'} : ((term426 B) = (term427 B)) = ((term421 B) = (term446 B)).
Proof. exact (MK_COMB (@lem5740020 B) (@lem5740031 B)). Qed.
Lemma lem5740033 {B : Type'} : (term421 B) = (term446 B).
Proof. exact (EQ_MP (@lem5740032 B) (@lem5740007 B)). Qed.
Lemma lem5740035 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5740036 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5740035 (type1400 B) B P). Qed.
Lemma lem5740037 {B : Type'} (x : type402 B) : (term447 B x) = (term448 B x).
Proof. exact (@lem5740036 B (term449 B x)). Qed.
Lemma lem5740038 {B : Type'} (x : type402 B) (op : type1400 B) : (term450 B x op) = (term451 B x op).
Proof. exact (eq_refl (term450 B x op)). Qed.
Lemma lem5740039 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5740040 {B : Type'} (x : type402 B) (op : type1400 B) (y : B) : (term452 B x op y) = (term453 B x op y).
Proof. exact (MK_COMB (@lem5740038 B x op) (@lem5740039 B y)). Qed.
Lemma lem5740041 {B : Type'} (y : B) (x : type402 B) (op : type1400 B) : (term453 B x op y) = (term454 B y x op).
Proof. exact (eq_refl (term453 B x op y)). Qed.
Lemma lem5740042 {B : Type'} (y : B) (x : type402 B) (op : type1400 B) : (term452 B x op y) = (term454 B y x op).
Proof. exact (TRANS (@lem5740040 B x op y) (@lem5740041 B y x op)). Qed.
Lemma lem5740043 {B : Type'} (x : type402 B) (op : type1400 B) : (term455 B x op) = (term451 B x op).
Proof. exact (fun_ext (fun y : B => @lem5740042 B y x op)). Qed.
Lemma lem5740044 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5740045 {B : Type'} (x : type402 B) (op : type1400 B) : (term456 B x op) = (term439 B x op).
Proof. exact (MK_COMB (@lem5740044 B) (@lem5740043 B x op)). Qed.
Lemma lem5740046 {B : Type'} (x : type402 B) : (term457 B x) = (term441 B x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740045 B x op)). Qed.
Lemma lem5740047 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740048 {B : Type'} (x : type402 B) : (term447 B x) = (term443 B x).
Proof. exact (MK_COMB (@lem5740047 B) (@lem5740046 B x)). Qed.
Lemma lem5740049 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5740050 {B : Type'} (x : type402 B) : (term458 B x) = (term459 B x).
Proof. exact (MK_COMB (@lem5740049) (@lem5740048 B x)). Qed.
Lemma lem5740051 {B : Type'} (x : type402 B) (op : type1400 B) : (term450 B x op) = (term451 B x op).
Proof. exact (eq_refl (term450 B x op)). Qed.
Lemma lem5740052 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (y op).
Proof. exact (eq_refl (y op)). Qed.
Lemma lem5740053 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term460 B x y op) = (term461 B x y op).
Proof. exact (MK_COMB (@lem5740051 B x op) (@lem5740052 B y op)). Qed.
Lemma lem5740054 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term461 B x y op) = (term462 B y x op).
Proof. exact (eq_refl (term461 B x y op)). Qed.
Lemma lem5740055 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term460 B x y op) = (term462 B y x op).
Proof. exact (TRANS (@lem5740053 B x y op) (@lem5740054 B y x op)). Qed.
Lemma lem5740056 {B : Type'} (y : type402 B) (x : type402 B) : (term463 B x y) = (term464 B y x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740055 B y x op)). Qed.
Lemma lem5740057 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740058 {B : Type'} (y : type402 B) (x : type402 B) : (term465 B x y) = (term466 B y x).
Proof. exact (MK_COMB (@lem5740057 B) (@lem5740056 B y x)). Qed.
Lemma lem5740059 {B : Type'} (x : type402 B) : (term467 B x) = (term468 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5740058 B y x)). Qed.
Lemma lem5740060 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740061 {B : Type'} (x : type402 B) : (term448 B x) = (term469 B x).
Proof. exact (MK_COMB (@lem5740060 B) (@lem5740059 B x)). Qed.
Lemma lem5740062 {B : Type'} (x : type402 B) : ((term447 B x) = (term448 B x)) = ((term443 B x) = (term469 B x)).
Proof. exact (MK_COMB (@lem5740050 B x) (@lem5740061 B x)). Qed.
Lemma lem5740063 {B : Type'} (x : type402 B) : (term443 B x) = (term469 B x).
Proof. exact (EQ_MP (@lem5740062 B x) (@lem5740037 B x)). Qed.
Lemma lem5740065 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5740066 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5740065 (type1400 B) B P). Qed.
Lemma lem5740067 {B : Type'} (y : type402 B) (x : type402 B) : (term470 B y x) = (term471 B y x).
Proof. exact (@lem5740066 B (term472 B y x)). Qed.
Lemma lem5740068 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term473 B y x op) = (term474 B y x op).
Proof. exact (eq_refl (term473 B y x op)). Qed.
Lemma lem5740069 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5740070 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) (z : B) : (term475 B y x op z) = (term476 B y x op z).
Proof. exact (MK_COMB (@lem5740068 B y x op) (@lem5740069 B z)). Qed.
Lemma lem5740071 {B : Type'} (y : type402 B) (z : B) (x : type402 B) (op : type1400 B) : (term476 B y x op z) = (term477 B y z x op).
Proof. exact (eq_refl (term476 B y x op z)). Qed.
Lemma lem5740072 {B : Type'} (y : type402 B) (z : B) (x : type402 B) (op : type1400 B) : (term475 B y x op z) = (term477 B y z x op).
Proof. exact (TRANS (@lem5740070 B y x op z) (@lem5740071 B y z x op)). Qed.
Lemma lem5740073 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term478 B y x op) = (term474 B y x op).
Proof. exact (fun_ext (fun z : B => @lem5740072 B y z x op)). Qed.
Lemma lem5740074 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5740075 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term479 B y x op) = (term462 B y x op).
Proof. exact (MK_COMB (@lem5740074 B) (@lem5740073 B y x op)). Qed.
Lemma lem5740076 {B : Type'} (y : type402 B) (x : type402 B) : (term480 B y x) = (term464 B y x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740075 B y x op)). Qed.
Lemma lem5740077 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740078 {B : Type'} (y : type402 B) (x : type402 B) : (term470 B y x) = (term466 B y x).
Proof. exact (MK_COMB (@lem5740077 B) (@lem5740076 B y x)). Qed.
Lemma lem5740079 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5740080 {B : Type'} (y : type402 B) (x : type402 B) : (term481 B y x) = (term482 B y x).
Proof. exact (MK_COMB (@lem5740079) (@lem5740078 B y x)). Qed.
Lemma lem5740081 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term473 B y x op) = (term474 B y x op).
Proof. exact (eq_refl (term473 B y x op)). Qed.
Lemma lem5740082 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (z op).
Proof. exact (eq_refl (z op)). Qed.
Lemma lem5740083 {B : Type'} (y : type402 B) (x : type402 B) (z : type402 B) (op : type1400 B) : (term483 B y x z op) = (term484 B y x z op).
Proof. exact (MK_COMB (@lem5740081 B y x op) (@lem5740082 B z op)). Qed.
Lemma lem5740084 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term484 B y x z op) = (term485 B y z x op).
Proof. exact (eq_refl (term484 B y x z op)). Qed.
Lemma lem5740085 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term483 B y x z op) = (term485 B y z x op).
Proof. exact (TRANS (@lem5740083 B y x z op) (@lem5740084 B y z x op)). Qed.
Lemma lem5740086 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term486 B y x z) = (term487 B y z x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740085 B y z x op)). Qed.
Lemma lem5740087 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740088 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term488 B y x z) = (term489 B y z x).
Proof. exact (MK_COMB (@lem5740087 B) (@lem5740086 B y z x)). Qed.
Lemma lem5740089 {B : Type'} (y : type402 B) (x : type402 B) : (term490 B y x) = (term491 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5740088 B y z x)). Qed.
Lemma lem5740090 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740091 {B : Type'} (y : type402 B) (x : type402 B) : (term471 B y x) = (term492 B y x).
Proof. exact (MK_COMB (@lem5740090 B) (@lem5740089 B y x)). Qed.
Lemma lem5740092 {B : Type'} (y : type402 B) (x : type402 B) : ((term470 B y x) = (term471 B y x)) = ((term466 B y x) = (term492 B y x)).
Proof. exact (MK_COMB (@lem5740080 B y x) (@lem5740091 B y x)). Qed.
Lemma lem5740093 {B : Type'} (y : type402 B) (x : type402 B) : (term466 B y x) = (term492 B y x).
Proof. exact (EQ_MP (@lem5740092 B y x) (@lem5740067 B y x)). Qed.
Lemma lem5740094 {B : Type'} (x : type402 B) : (term468 B x) = (term493 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5740093 B y x)). Qed.
Lemma lem5740095 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740096 {B : Type'} (x : type402 B) : (term469 B x) = (term494 B x).
Proof. exact (MK_COMB (@lem5740095 B) (@lem5740094 B x)). Qed.
Lemma lem5740097 {B : Type'} (x : type402 B) : (term443 B x) = (term494 B x).
Proof. exact (TRANS (@lem5740063 B x) (@lem5740096 B x)). Qed.
Lemma lem5740098 {B : Type'} : (term445 B) = (term495 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5740097 B x)). Qed.
Lemma lem5740099 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740100 {B : Type'} : (term446 B) = (term496 B).
Proof. exact (MK_COMB (@lem5740099 B) (@lem5740098 B)). Qed.
Lemma lem5740101 {B : Type'} : (term421 B) = (term496 B).
Proof. exact (TRANS (@lem5740033 B) (@lem5740100 B)). Qed.
Lemma lem5740102 {B : Type'} : (term261 B) = (term496 B).
Proof. exact (TRANS (@lem5740003 B) (@lem5740101 B)). Qed.
Lemma lem5740103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740104 {B : Type'} : (term263 B) = (term497 B).
Proof. exact (MK_COMB (@lem5740103) (@lem5740102 B)). Qed.
Lemma lem5740105 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740106 {B : Type'} : (term267 B) = (term498 B).
Proof. exact (MK_COMB (@lem5740104 B) (@lem5740105 B)). Qed.
Lemma lem5740108 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5740109 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5740108 (type402 B) P Q). Qed.
Lemma lem5740110 {B : Type'} : (term503 B) = (term504 B).
Proof. exact (@lem5740109 B (term495 B) (term266 B)). Qed.
Lemma lem5740111 {B : Type'} (x : type402 B) : (term505 B x) = (term494 B x).
Proof. exact (eq_refl (term505 B x)). Qed.
Lemma lem5740112 {B : Type'} : (term506 B) = (term495 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5740111 B x)). Qed.
Lemma lem5740113 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740114 {B : Type'} : (term507 B) = (term496 B).
Proof. exact (MK_COMB (@lem5740113 B) (@lem5740112 B)). Qed.
Lemma lem5740115 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740116 {B : Type'} : (term508 B) = (term497 B).
Proof. exact (MK_COMB (@lem5740115) (@lem5740114 B)). Qed.
Lemma lem5740117 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740118 {B : Type'} : (term503 B) = (term498 B).
Proof. exact (MK_COMB (@lem5740116 B) (@lem5740117 B)). Qed.
Lemma lem5740119 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5740120 {B : Type'} : (term509 B) = (term510 B).
Proof. exact (MK_COMB (@lem5740119) (@lem5740118 B)). Qed.
Lemma lem5740121 {B : Type'} (x : type402 B) : (term505 B x) = (term494 B x).
Proof. exact (eq_refl (term505 B x)). Qed.
Lemma lem5740122 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740123 {B : Type'} (x : type402 B) : (term511 B x) = (term512 B x).
Proof. exact (MK_COMB (@lem5740122) (@lem5740121 B x)). Qed.
Lemma lem5740124 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740125 {B : Type'} (x : type402 B) : (term513 B x) = (term514 B x).
Proof. exact (MK_COMB (@lem5740123 B x) (@lem5740124 B)). Qed.
Lemma lem5740126 {B : Type'} : (term515 B) = (term516 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5740125 B x)). Qed.
Lemma lem5740127 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740128 {B : Type'} : (term504 B) = (term517 B).
Proof. exact (MK_COMB (@lem5740127 B) (@lem5740126 B)). Qed.
Lemma lem5740129 {B : Type'} : ((term503 B) = (term504 B)) = ((term498 B) = (term517 B)).
Proof. exact (MK_COMB (@lem5740120 B) (@lem5740128 B)). Qed.
Lemma lem5740130 {B : Type'} : (term498 B) = (term517 B).
Proof. exact (EQ_MP (@lem5740129 B) (@lem5740110 B)). Qed.
Lemma lem5740132 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5740133 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5740132 (type402 B) P Q). Qed.
Lemma lem5740134 {B : Type'} (x : type402 B) : (term518 B x) = (term519 B x).
Proof. exact (@lem5740133 B (term493 B x) (term266 B)). Qed.
Lemma lem5740135 {B : Type'} (y : type402 B) (x : type402 B) : (term520 B x y) = (term492 B y x).
Proof. exact (eq_refl (term520 B x y)). Qed.
Lemma lem5740136 {B : Type'} (x : type402 B) : (term521 B x) = (term493 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5740135 B y x)). Qed.
Lemma lem5740137 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740138 {B : Type'} (x : type402 B) : (term522 B x) = (term494 B x).
Proof. exact (MK_COMB (@lem5740137 B) (@lem5740136 B x)). Qed.
Lemma lem5740139 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740140 {B : Type'} (x : type402 B) : (term523 B x) = (term512 B x).
Proof. exact (MK_COMB (@lem5740139) (@lem5740138 B x)). Qed.
Lemma lem5740141 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740142 {B : Type'} (x : type402 B) : (term518 B x) = (term514 B x).
Proof. exact (MK_COMB (@lem5740140 B x) (@lem5740141 B)). Qed.
Lemma lem5740143 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5740144 {B : Type'} (x : type402 B) : (term524 B x) = (term525 B x).
Proof. exact (MK_COMB (@lem5740143) (@lem5740142 B x)). Qed.
Lemma lem5740145 {B : Type'} (y : type402 B) (x : type402 B) : (term520 B x y) = (term492 B y x).
Proof. exact (eq_refl (term520 B x y)). Qed.
Lemma lem5740146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740147 {B : Type'} (y : type402 B) (x : type402 B) : (term526 B x y) = (term527 B y x).
Proof. exact (MK_COMB (@lem5740146) (@lem5740145 B y x)). Qed.
Lemma lem5740148 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740149 {B : Type'} (y : type402 B) (x : type402 B) : (term528 B x y) = (term529 B y x).
Proof. exact (MK_COMB (@lem5740147 B y x) (@lem5740148 B)). Qed.
Lemma lem5740150 {B : Type'} (x : type402 B) : (term530 B x) = (term531 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5740149 B y x)). Qed.
Lemma lem5740151 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740152 {B : Type'} (x : type402 B) : (term519 B x) = (term532 B x).
Proof. exact (MK_COMB (@lem5740151 B) (@lem5740150 B x)). Qed.
Lemma lem5740153 {B : Type'} (x : type402 B) : ((term518 B x) = (term519 B x)) = ((term514 B x) = (term532 B x)).
Proof. exact (MK_COMB (@lem5740144 B x) (@lem5740152 B x)). Qed.
Lemma lem5740154 {B : Type'} (x : type402 B) : (term514 B x) = (term532 B x).
Proof. exact (EQ_MP (@lem5740153 B x) (@lem5740134 B x)). Qed.
Lemma lem5740156 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5740157 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5740156 (type402 B) P Q). Qed.
Lemma lem5740158 {B : Type'} (y : type402 B) (x : type402 B) : (term533 B y x) = (term534 B y x).
Proof. exact (@lem5740157 B (term491 B y x) (term266 B)). Qed.
Lemma lem5740159 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term535 B y x z) = (term489 B y z x).
Proof. exact (eq_refl (term535 B y x z)). Qed.
Lemma lem5740160 {B : Type'} (y : type402 B) (x : type402 B) : (term536 B y x) = (term491 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5740159 B y z x)). Qed.
Lemma lem5740161 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740162 {B : Type'} (y : type402 B) (x : type402 B) : (term537 B y x) = (term492 B y x).
Proof. exact (MK_COMB (@lem5740161 B) (@lem5740160 B y x)). Qed.
Lemma lem5740163 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740164 {B : Type'} (y : type402 B) (x : type402 B) : (term538 B y x) = (term527 B y x).
Proof. exact (MK_COMB (@lem5740163) (@lem5740162 B y x)). Qed.
Lemma lem5740165 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740166 {B : Type'} (y : type402 B) (x : type402 B) : (term533 B y x) = (term529 B y x).
Proof. exact (MK_COMB (@lem5740164 B y x) (@lem5740165 B)). Qed.
Lemma lem5740167 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5740168 {B : Type'} (y : type402 B) (x : type402 B) : (term539 B y x) = (term540 B y x).
Proof. exact (MK_COMB (@lem5740167) (@lem5740166 B y x)). Qed.
Lemma lem5740169 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term535 B y x z) = (term489 B y z x).
Proof. exact (eq_refl (term535 B y x z)). Qed.
Lemma lem5740170 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740171 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term541 B y x z) = (term542 B y z x).
Proof. exact (MK_COMB (@lem5740170) (@lem5740169 B y z x)). Qed.
Lemma lem5740172 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5740173 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term543 B y x z) = (term544 B y z x).
Proof. exact (MK_COMB (@lem5740171 B y z x) (@lem5740172 B)). Qed.
Lemma lem5740174 {B : Type'} (y : type402 B) (x : type402 B) : (term545 B y x) = (term546 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5740173 B y z x)). Qed.
Lemma lem5740175 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740176 {B : Type'} (y : type402 B) (x : type402 B) : (term534 B y x) = (term547 B y x).
Proof. exact (MK_COMB (@lem5740175 B) (@lem5740174 B y x)). Qed.
Lemma lem5740177 {B : Type'} (y : type402 B) (x : type402 B) : ((term533 B y x) = (term534 B y x)) = ((term529 B y x) = (term547 B y x)).
Proof. exact (MK_COMB (@lem5740168 B y x) (@lem5740176 B y x)). Qed.
Lemma lem5740178 {B : Type'} (y : type402 B) (x : type402 B) : (term529 B y x) = (term547 B y x).
Proof. exact (EQ_MP (@lem5740177 B y x) (@lem5740158 B y x)). Qed.
Lemma lem5740179 {B : Type'} (x : type402 B) : (term531 B x) = (term548 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5740178 B y x)). Qed.
Lemma lem5740180 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740181 {B : Type'} (x : type402 B) : (term532 B x) = (term549 B x).
Proof. exact (MK_COMB (@lem5740180 B) (@lem5740179 B x)). Qed.
Lemma lem5740182 {B : Type'} (x : type402 B) : (term514 B x) = (term549 B x).
Proof. exact (TRANS (@lem5740154 B x) (@lem5740181 B x)). Qed.
Lemma lem5740183 {B : Type'} : (term516 B) = (term550 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5740182 B x)). Qed.
Lemma lem5740184 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5740185 {B : Type'} : (term517 B) = (term551 B).
Proof. exact (MK_COMB (@lem5740184 B) (@lem5740183 B)). Qed.
Lemma lem5740186 {B : Type'} : (term498 B) = (term551 B).
Proof. exact (TRANS (@lem5740130 B) (@lem5740185 B)). Qed.
Lemma lem5740187 {B : Type'} : (term267 B) = (term551 B).
Proof. exact (TRANS (@lem5740106 B) (@lem5740186 B)). Qed.
Lemma lem5740188 {B : Type'} : (term245 B) = (term551 B).
Proof. exact (TRANS (@lem5739637 B) (@lem5740187 B)). Qed.
Lemma lem5740189 {B : Type'} : (term57 B) = (term551 B).
Proof. exact (TRANS (@lem5739610 B) (@lem5740188 B)). Qed.
Lemma lem5740190 {B : Type'} (h1 : term57 B) : term551 B.
Proof. exact (EQ_MP (@lem5740189 B) (@lem5738636 B h1)). Qed.
Lemma lem5740191 {B : Type'} (x : type402 B) (h1 : term549 B x) : term549 B x.
Proof. exact (h1). Qed.
Lemma lem5740192 {B : Type'} (y : type402 B) (x : type402 B) (h1 : term547 B y x) : term547 B y x.
Proof. exact (h1). Qed.
Lemma lem5740193 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term544 B y z x.
Proof. exact (h1). Qed.
Lemma lem5740194 {A : Type'} (x' : type402 A) (h1 : term549 A x') : term549 A x'.
Proof. exact (h1). Qed.
Lemma lem5740195 {A : Type'} (y' : type402 A) (x' : type402 A) (h1 : term547 A y' x') : term547 A y' x'.
Proof. exact (h1). Qed.
Lemma lem5740197 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (h1 : term151 A B op f x'') : term151 A B op f x''.
Proof. exact (h1). Qed.
Lemma lem5740198 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (h1 : term144 A B y'' op f x'') : term144 A B y'' op f x''.
Proof. exact (h1). Qed.
Lemma lem5740199 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : term134 A B y'' op f x'' s) : term134 A B y'' op f x'' s.
Proof. exact (h1). Qed.
Lemma lem5740204 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740205 {B : Type'} (f : type403 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> Prop) f x).
Proof. exact (@lem5740204 (type1400 B) Prop f x). Qed.
Lemma lem5740207 {B : Type'} (op : type1400 B) : (@monoidal B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5740205 B (@monoidal B) op). Qed.
Lemma lem5740209 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5740210 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740216 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740215 (type1400 B) B f x). Qed.
Lemma lem5740218 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5740216 B (@neutral B) op). Qed.
Lemma lem5740219 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5740220 {B : Type'} (op : type1400 B) : (term552 B op) = (term553 B op).
Proof. exact (MK_COMB (@lem5740210 B op) (@lem5740218 B op)). Qed.
Lemma lem5740221 {B : Type'} (op : type1400 B) (x : B) : (term112 B op x) = (term554 B op x).
Proof. exact (MK_COMB (@lem5740220 B op) (@lem5740219 B x)). Qed.
Lemma lem5740223 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740224 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740223 B (B -> B) f x). Qed.
Lemma lem5740225 {B : Type'} (op : type1400 B) : (term553 B op) = (term555 B op).
Proof. exact (@lem5740224 B op (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5740226 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5740227 {B : Type'} (op : type1400 B) (x : B) : (term554 B op x) = (term556 B op x).
Proof. exact (MK_COMB (@lem5740225 B op) (@lem5740226 B x)). Qed.
Lemma lem5740229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740230 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740229 B B f x). Qed.
Lemma lem5740231 {B : Type'} (op : type1400 B) (x : B) : (term556 B op x) = (term557 B op x).
Proof. exact (@lem5740230 B (term555 B op) x). Qed.
Lemma lem5740232 {B : Type'} (op : type1400 B) (x : B) : (term554 B op x) = (term557 B op x).
Proof. exact (TRANS (@lem5740227 B op x) (@lem5740231 B op x)). Qed.
Lemma lem5740233 {B : Type'} (op : type1400 B) (x : B) : (term112 B op x) = (term557 B op x).
Proof. exact (TRANS (@lem5740221 B op x) (@lem5740232 B op x)). Qed.
Lemma lem5740234 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5740235 {B : Type'} (op : type1400 B) (x : B) : (term558 B op x) = (term559 B op x).
Proof. exact (MK_COMB (@lem5740209 B) (@lem5740233 B op x)). Qed.
Lemma lem5740236 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term557 B op x) = x).
Proof. exact (MK_COMB (@lem5740235 B op x) (@lem5740234 B x)). Qed.
Lemma lem5740237 {B : Type'} (op : type1400 B) : (term113 B op) = (term560 B op).
Proof. exact (fun_ext (fun x : B => @lem5740236 B op x)). Qed.
Lemma lem5740238 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5740239 {B : Type'} (op : type1400 B) : (term114 B op) = (term561 B op).
Proof. exact (MK_COMB (@lem5740238 B) (@lem5740237 B op)). Qed.
Lemma lem5740240 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5740249 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740250 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740249 B (B -> B) f x). Qed.
Lemma lem5740251 {B : Type'} (op : type1400 B) (y : B) : (op y) = (@I (B -> B -> B) op y).
Proof. exact (@lem5740250 B op y). Qed.
Lemma lem5740252 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5740253 {B : Type'} (op : type1400 B) (y : B) (z : B) : (op y z) = (@I (B -> B -> B) op y z).
Proof. exact (MK_COMB (@lem5740251 B op y) (@lem5740252 B z)). Qed.
Lemma lem5740255 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740256 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740255 B B f x). Qed.
Lemma lem5740257 {B : Type'} (op : type1400 B) (y : B) (z : B) : (@I (B -> B -> B) op y z) = (term562 B op y z).
Proof. exact (@lem5740256 B (@I (B -> B -> B) op y) z). Qed.
Lemma lem5740259 {B : Type'} (op : type1400 B) (y : B) (z : B) : (op y z) = (term562 B op y z).
Proof. exact (TRANS (@lem5740253 B op y z) (@lem5740257 B op y z)). Qed.
Lemma lem5740260 {B : Type'} (op : type1400 B) (x : B) : (op x) = (op x).
Proof. exact (eq_refl (op x)). Qed.
Lemma lem5740261 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term115 B x op y z) = (term563 B x op y z).
Proof. exact (MK_COMB (@lem5740260 B op x) (@lem5740259 B op y z)). Qed.
Lemma lem5740263 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740264 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740263 B (B -> B) f x). Qed.
Lemma lem5740265 {B : Type'} (op : type1400 B) (x : B) : (op x) = (@I (B -> B -> B) op x).
Proof. exact (@lem5740264 B op x). Qed.
Lemma lem5740266 {B : Type'} (op : type1400 B) (y : B) (z : B) : (term562 B op y z) = (term562 B op y z).
Proof. exact (eq_refl (term562 B op y z)). Qed.
Lemma lem5740267 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term563 B x op y z) = (term564 B x op y z).
Proof. exact (MK_COMB (@lem5740265 B op x) (@lem5740266 B op y z)). Qed.
Lemma lem5740269 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740270 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740269 B B f x). Qed.
Lemma lem5740271 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term564 B x op y z) = (term565 B x op y z).
Proof. exact (@lem5740270 B (@I (B -> B -> B) op x) (term562 B op y z)). Qed.
Lemma lem5740272 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term563 B x op y z) = (term565 B x op y z).
Proof. exact (TRANS (@lem5740267 B x op y z) (@lem5740271 B x op y z)). Qed.
Lemma lem5740273 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term115 B x op y z) = (term565 B x op y z).
Proof. exact (TRANS (@lem5740261 B x op y z) (@lem5740272 B x op y z)). Qed.
Lemma lem5740274 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740281 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740282 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740281 B (B -> B) f x). Qed.
Lemma lem5740283 {B : Type'} (op : type1400 B) (x : B) : (op x) = (@I (B -> B -> B) op x).
Proof. exact (@lem5740282 B op x). Qed.
Lemma lem5740284 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5740285 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (@I (B -> B -> B) op x y).
Proof. exact (MK_COMB (@lem5740283 B op x) (@lem5740284 B y)). Qed.
Lemma lem5740287 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740288 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740287 B B f x). Qed.
Lemma lem5740289 {B : Type'} (op : type1400 B) (x : B) (y : B) : (@I (B -> B -> B) op x y) = (term562 B op x y).
Proof. exact (@lem5740288 B (@I (B -> B -> B) op x) y). Qed.
Lemma lem5740291 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (term562 B op x y).
Proof. exact (TRANS (@lem5740285 B op x y) (@lem5740289 B op x y)). Qed.
Lemma lem5740292 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5740293 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term566 B op x y) = (term567 B op x y).
Proof. exact (MK_COMB (@lem5740274 B op) (@lem5740291 B op x y)). Qed.
Lemma lem5740294 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term116 B op x y z) = (term568 B op x y z).
Proof. exact (MK_COMB (@lem5740293 B op x y) (@lem5740292 B z)). Qed.
Lemma lem5740296 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740297 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740296 B (B -> B) f x). Qed.
Lemma lem5740298 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term567 B op x y) = (term569 B op x y).
Proof. exact (@lem5740297 B op (term562 B op x y)). Qed.
Lemma lem5740299 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5740300 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term568 B op x y z) = (term570 B op x y z).
Proof. exact (MK_COMB (@lem5740298 B op x y) (@lem5740299 B z)). Qed.
Lemma lem5740302 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740303 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740302 B B f x). Qed.
Lemma lem5740304 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term570 B op x y z) = (term571 B op x y z).
Proof. exact (@lem5740303 B (term569 B op x y) z). Qed.
Lemma lem5740305 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term568 B op x y z) = (term571 B op x y z).
Proof. exact (TRANS (@lem5740300 B op x y z) (@lem5740304 B op x y z)). Qed.
Lemma lem5740306 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term116 B op x y z) = (term571 B op x y z).
Proof. exact (TRANS (@lem5740294 B op x y z) (@lem5740305 B op x y z)). Qed.
Lemma lem5740307 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term572 B x op y z) = (term573 B x op y z).
Proof. exact (MK_COMB (@lem5740240 B) (@lem5740273 B x op y z)). Qed.
Lemma lem5740308 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term565 B x op y z) = (term571 B op x y z)).
Proof. exact (MK_COMB (@lem5740307 B x op y z) (@lem5740306 B op x y z)). Qed.
Lemma lem5740309 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term574 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5740308 B op x y z)). Qed.
Lemma lem5740310 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5740311 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term575 B op x y).
Proof. exact (MK_COMB (@lem5740310 B) (@lem5740309 B op x y)). Qed.
Lemma lem5740312 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term576 B op x).
Proof. exact (fun_ext (fun y : B => @lem5740311 B op x y)). Qed.
Lemma lem5740313 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5740314 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term577 B op x).
Proof. exact (MK_COMB (@lem5740313 B) (@lem5740312 B op x)). Qed.
Lemma lem5740315 {B : Type'} (op : type1400 B) : (term121 B op) = (term578 B op).
Proof. exact (fun_ext (fun x : B => @lem5740314 B op x)). Qed.
Lemma lem5740316 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5740317 {B : Type'} (op : type1400 B) : (term122 B op) = (term579 B op).
Proof. exact (MK_COMB (@lem5740316 B) (@lem5740315 B op)). Qed.
Lemma lem5740318 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740319 {B : Type'} (op : type1400 B) : (term123 B op) = (term580 B op).
Proof. exact (MK_COMB (@lem5740318) (@lem5740317 B op)). Qed.
Lemma lem5740320 {B : Type'} (op : type1400 B) : (term124 B op) = (term581 B op).
Proof. exact (MK_COMB (@lem5740319 B op) (@lem5740239 B op)). Qed.
Lemma lem5740321 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5740328 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740329 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740328 B (B -> B) f x). Qed.
Lemma lem5740330 {B : Type'} (op : type1400 B) (x : B) : (op x) = (@I (B -> B -> B) op x).
Proof. exact (@lem5740329 B op x). Qed.
Lemma lem5740331 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5740332 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (@I (B -> B -> B) op x y).
Proof. exact (MK_COMB (@lem5740330 B op x) (@lem5740331 B y)). Qed.
Lemma lem5740334 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740335 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740334 B B f x). Qed.
Lemma lem5740336 {B : Type'} (op : type1400 B) (x : B) (y : B) : (@I (B -> B -> B) op x y) = (term562 B op x y).
Proof. exact (@lem5740335 B (@I (B -> B -> B) op x) y). Qed.
Lemma lem5740338 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (term562 B op x y).
Proof. exact (TRANS (@lem5740332 B op x y) (@lem5740336 B op x y)). Qed.
Lemma lem5740345 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740346 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740345 B (B -> B) f x). Qed.
Lemma lem5740347 {B : Type'} (op : type1400 B) (y : B) : (op y) = (@I (B -> B -> B) op y).
Proof. exact (@lem5740346 B op y). Qed.
Lemma lem5740348 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5740349 {B : Type'} (op : type1400 B) (y : B) (x : B) : (op y x) = (@I (B -> B -> B) op y x).
Proof. exact (MK_COMB (@lem5740347 B op y) (@lem5740348 B x)). Qed.
Lemma lem5740351 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740352 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740351 B B f x). Qed.
Lemma lem5740353 {B : Type'} (op : type1400 B) (y : B) (x : B) : (@I (B -> B -> B) op y x) = (term562 B op y x).
Proof. exact (@lem5740352 B (@I (B -> B -> B) op y) x). Qed.
Lemma lem5740355 {B : Type'} (op : type1400 B) (y : B) (x : B) : (op y x) = (term562 B op y x).
Proof. exact (TRANS (@lem5740349 B op y x) (@lem5740353 B op y x)). Qed.
Lemma lem5740356 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term582 B op x y) = (term583 B op x y).
Proof. exact (MK_COMB (@lem5740321 B) (@lem5740338 B op x y)). Qed.
Lemma lem5740357 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((term562 B op x y) = (term562 B op y x)).
Proof. exact (MK_COMB (@lem5740356 B op x y) (@lem5740355 B op y x)). Qed.
Lemma lem5740358 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term584 B op x).
Proof. exact (fun_ext (fun y : B => @lem5740357 B op y x)). Qed.
Lemma lem5740359 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5740360 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term585 B op x).
Proof. exact (MK_COMB (@lem5740359 B) (@lem5740358 B op x)). Qed.
Lemma lem5740361 {B : Type'} (op : type1400 B) : (term127 B op) = (term586 B op).
Proof. exact (fun_ext (fun x : B => @lem5740360 B op x)). Qed.
Lemma lem5740362 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5740363 {B : Type'} (op : type1400 B) : (term128 B op) = (term587 B op).
Proof. exact (MK_COMB (@lem5740362 B) (@lem5740361 B op)). Qed.
Lemma lem5740364 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740365 {B : Type'} (op : type1400 B) : (term129 B op) = (term588 B op).
Proof. exact (MK_COMB (@lem5740364) (@lem5740363 B op)). Qed.
Lemma lem5740366 {B : Type'} (op : type1400 B) : (term130 B op) = (term589 B op).
Proof. exact (MK_COMB (@lem5740365 B op) (@lem5740320 B op)). Qed.
Lemma lem5740367 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5740372 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740373 {B : Type'} (f : type403 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> Prop) f x).
Proof. exact (@lem5740372 (type1400 B) Prop f x). Qed.
Lemma lem5740375 {B : Type'} (op : type1400 B) : (@monoidal B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5740373 B (@monoidal B) op). Qed.
Lemma lem5740376 {B : Type'} (op : type1400 B) : (term590 B op) = (term591 B op).
Proof. exact (MK_COMB (@lem5740367) (@lem5740375 B op)). Qed.
Lemma lem5740377 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5740378 {B : Type'} (op : type1400 B) : (term235 B op) = (term592 B op).
Proof. exact (MK_COMB (@lem5740377) (@lem5740376 B op)). Qed.
Lemma lem5740379 {B : Type'} (op : type1400 B) : (term236 B op) = (term593 B op).
Proof. exact (MK_COMB (@lem5740378 B op) (@lem5740366 B op)). Qed.
Lemma lem5740380 {B : Type'} : (term251 B) = (term594 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740379 B op)). Qed.
Lemma lem5740381 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740382 {B : Type'} : (term266 B) = (term595 B).
Proof. exact (MK_COMB (@lem5740381 B) (@lem5740380 B)). Qed.
Lemma lem5740383 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5740384 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5740385 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740390 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740391 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740390 (type1400 B) B f x). Qed.
Lemma lem5740393 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5740391 B (@neutral B) op). Qed.
Lemma lem5740398 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740399 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740398 (type1400 B) B f x). Qed.
Lemma lem5740401 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (@lem5740399 B x op). Qed.
Lemma lem5740402 {B : Type'} (op : type1400 B) : (term552 B op) = (term553 B op).
Proof. exact (MK_COMB (@lem5740385 B op) (@lem5740393 B op)). Qed.
Lemma lem5740403 {B : Type'} (x : type402 B) (op : type1400 B) : (term596 B x op) = (term597 B x op).
Proof. exact (MK_COMB (@lem5740402 B op) (@lem5740401 B x op)). Qed.
Lemma lem5740405 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740406 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740405 B (B -> B) f x). Qed.
Lemma lem5740407 {B : Type'} (op : type1400 B) : (term553 B op) = (term555 B op).
Proof. exact (@lem5740406 B op (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5740408 {B : Type'} (x : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740409 {B : Type'} (x : type402 B) (op : type1400 B) : (term597 B x op) = (term598 B x op).
Proof. exact (MK_COMB (@lem5740407 B op) (@lem5740408 B x op)). Qed.
Lemma lem5740411 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740412 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740411 B B f x). Qed.
Lemma lem5740413 {B : Type'} (x : type402 B) (op : type1400 B) : (term598 B x op) = (term599 B x op).
Proof. exact (@lem5740412 B (term555 B op) (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740414 {B : Type'} (x : type402 B) (op : type1400 B) : (term597 B x op) = (term599 B x op).
Proof. exact (TRANS (@lem5740409 B x op) (@lem5740413 B x op)). Qed.
Lemma lem5740415 {B : Type'} (x : type402 B) (op : type1400 B) : (term596 B x op) = (term599 B x op).
Proof. exact (TRANS (@lem5740403 B x op) (@lem5740414 B x op)). Qed.
Lemma lem5740420 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740421 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740420 (type1400 B) B f x). Qed.
Lemma lem5740423 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (@lem5740421 B x op). Qed.
Lemma lem5740424 {B : Type'} (x : type402 B) (op : type1400 B) : (term600 B x op) = (term601 B x op).
Proof. exact (MK_COMB (@lem5740384 B) (@lem5740415 B x op)). Qed.
Lemma lem5740425 {B : Type'} (x : type402 B) (op : type1400 B) : ((term596 B x op) = (x op)) = ((term599 B x op) = (@I ((B -> B -> B) -> B) x op)).
Proof. exact (MK_COMB (@lem5740424 B x op) (@lem5740423 B x op)). Qed.
Lemma lem5740426 {B : Type'} (x : type402 B) (op : type1400 B) : (term602 B x op) = (term603 B x op).
Proof. exact (MK_COMB (@lem5740383) (@lem5740425 B x op)). Qed.
Lemma lem5740427 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5740428 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5740429 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740434 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740435 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740434 (type1400 B) B f x). Qed.
Lemma lem5740437 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (@lem5740435 B x op). Qed.
Lemma lem5740438 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740443 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740444 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740443 (type1400 B) B f x). Qed.
Lemma lem5740446 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5740444 B y op). Qed.
Lemma lem5740451 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740452 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740451 (type1400 B) B f x). Qed.
Lemma lem5740454 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (@lem5740452 B z op). Qed.
Lemma lem5740455 {B : Type'} (y : type402 B) (op : type1400 B) : (term604 B y op) = (term605 B y op).
Proof. exact (MK_COMB (@lem5740438 B op) (@lem5740446 B y op)). Qed.
Lemma lem5740456 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term606 B y z op) = (term607 B y z op).
Proof. exact (MK_COMB (@lem5740455 B y op) (@lem5740454 B z op)). Qed.
Lemma lem5740458 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740459 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740458 B (B -> B) f x). Qed.
Lemma lem5740460 {B : Type'} (y : type402 B) (op : type1400 B) : (term605 B y op) = (term608 B y op).
Proof. exact (@lem5740459 B op (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5740461 {B : Type'} (z : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5740462 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term607 B y z op) = (term609 B y z op).
Proof. exact (MK_COMB (@lem5740460 B y op) (@lem5740461 B z op)). Qed.
Lemma lem5740464 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740465 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740464 B B f x). Qed.
Lemma lem5740466 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term609 B y z op) = (term610 B y z op).
Proof. exact (@lem5740465 B (term608 B y op) (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5740467 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term607 B y z op) = (term610 B y z op).
Proof. exact (TRANS (@lem5740462 B y z op) (@lem5740466 B y z op)). Qed.
Lemma lem5740468 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term606 B y z op) = (term610 B y z op).
Proof. exact (TRANS (@lem5740456 B y z op) (@lem5740467 B y z op)). Qed.
Lemma lem5740469 {B : Type'} (x : type402 B) (op : type1400 B) : (term604 B x op) = (term605 B x op).
Proof. exact (MK_COMB (@lem5740429 B op) (@lem5740437 B x op)). Qed.
Lemma lem5740470 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term611 B x y z op) = (term612 B x y z op).
Proof. exact (MK_COMB (@lem5740469 B x op) (@lem5740468 B y z op)). Qed.
Lemma lem5740472 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740473 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740472 B (B -> B) f x). Qed.
Lemma lem5740474 {B : Type'} (x : type402 B) (op : type1400 B) : (term605 B x op) = (term608 B x op).
Proof. exact (@lem5740473 B op (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740475 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term610 B y z op) = (term610 B y z op).
Proof. exact (eq_refl (term610 B y z op)). Qed.
Lemma lem5740476 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term612 B x y z op) = (term613 B x y z op).
Proof. exact (MK_COMB (@lem5740474 B x op) (@lem5740475 B y z op)). Qed.
Lemma lem5740478 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740479 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740478 B B f x). Qed.
Lemma lem5740480 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term613 B x y z op) = (term614 B x y z op).
Proof. exact (@lem5740479 B (term608 B x op) (term610 B y z op)). Qed.
Lemma lem5740481 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term612 B x y z op) = (term614 B x y z op).
Proof. exact (TRANS (@lem5740476 B x y z op) (@lem5740480 B x y z op)). Qed.
Lemma lem5740482 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term611 B x y z op) = (term614 B x y z op).
Proof. exact (TRANS (@lem5740470 B x y z op) (@lem5740481 B x y z op)). Qed.
Lemma lem5740483 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740484 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740489 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740490 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740489 (type1400 B) B f x). Qed.
Lemma lem5740492 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (@lem5740490 B x op). Qed.
Lemma lem5740497 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740498 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740497 (type1400 B) B f x). Qed.
Lemma lem5740500 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5740498 B y op). Qed.
Lemma lem5740501 {B : Type'} (x : type402 B) (op : type1400 B) : (term604 B x op) = (term605 B x op).
Proof. exact (MK_COMB (@lem5740484 B op) (@lem5740492 B x op)). Qed.
Lemma lem5740502 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x y op) = (term607 B x y op).
Proof. exact (MK_COMB (@lem5740501 B x op) (@lem5740500 B y op)). Qed.
Lemma lem5740504 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740505 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740504 B (B -> B) f x). Qed.
Lemma lem5740506 {B : Type'} (x : type402 B) (op : type1400 B) : (term605 B x op) = (term608 B x op).
Proof. exact (@lem5740505 B op (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740507 {B : Type'} (y : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5740508 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x y op) = (term609 B x y op).
Proof. exact (MK_COMB (@lem5740506 B x op) (@lem5740507 B y op)). Qed.
Lemma lem5740510 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740511 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740510 B B f x). Qed.
Lemma lem5740512 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term609 B x y op) = (term610 B x y op).
Proof. exact (@lem5740511 B (term608 B x op) (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5740513 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x y op) = (term610 B x y op).
Proof. exact (TRANS (@lem5740508 B x y op) (@lem5740512 B x y op)). Qed.
Lemma lem5740514 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x y op) = (term610 B x y op).
Proof. exact (TRANS (@lem5740502 B x y op) (@lem5740513 B x y op)). Qed.
Lemma lem5740519 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740520 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740519 (type1400 B) B f x). Qed.
Lemma lem5740522 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (@lem5740520 B z op). Qed.
Lemma lem5740523 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term615 B x y op) = (term616 B x y op).
Proof. exact (MK_COMB (@lem5740483 B op) (@lem5740514 B x y op)). Qed.
Lemma lem5740524 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term617 B x y z op) = (term618 B x y z op).
Proof. exact (MK_COMB (@lem5740523 B x y op) (@lem5740522 B z op)). Qed.
Lemma lem5740526 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740527 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740526 B (B -> B) f x). Qed.
Lemma lem5740528 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term616 B x y op) = (term619 B x y op).
Proof. exact (@lem5740527 B op (term610 B x y op)). Qed.
Lemma lem5740529 {B : Type'} (z : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5740530 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term618 B x y z op) = (term620 B x y z op).
Proof. exact (MK_COMB (@lem5740528 B x y op) (@lem5740529 B z op)). Qed.
Lemma lem5740532 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740533 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740532 B B f x). Qed.
Lemma lem5740534 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term620 B x y z op) = (term621 B x y z op).
Proof. exact (@lem5740533 B (term619 B x y op) (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5740535 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term618 B x y z op) = (term621 B x y z op).
Proof. exact (TRANS (@lem5740530 B x y z op) (@lem5740534 B x y z op)). Qed.
Lemma lem5740536 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term617 B x y z op) = (term621 B x y z op).
Proof. exact (TRANS (@lem5740524 B x y z op) (@lem5740535 B x y z op)). Qed.
Lemma lem5740537 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term622 B x y z op) = (term623 B x y z op).
Proof. exact (MK_COMB (@lem5740428 B) (@lem5740482 B x y z op)). Qed.
Lemma lem5740538 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : ((term611 B x y z op) = (term617 B x y z op)) = ((term614 B x y z op) = (term621 B x y z op)).
Proof. exact (MK_COMB (@lem5740537 B x y z op) (@lem5740536 B x y z op)). Qed.
Lemma lem5740539 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term624 B x y z op) = (term625 B x y z op).
Proof. exact (MK_COMB (@lem5740427) (@lem5740538 B x y z op)). Qed.
Lemma lem5740540 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5740541 {B : Type'} (x : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term626 B x y z op) = (term627 B x y z op).
Proof. exact (MK_COMB (@lem5740540) (@lem5740539 B x y z op)). Qed.
Lemma lem5740542 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term628 B y z x op) = (term629 B y z x op).
Proof. exact (MK_COMB (@lem5740541 B x y z op) (@lem5740426 B x op)). Qed.
Lemma lem5740543 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5740544 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5740545 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740550 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740551 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740550 (type1400 B) B f x). Qed.
Lemma lem5740553 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (@lem5740551 B x op). Qed.
Lemma lem5740558 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740559 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740558 (type1400 B) B f x). Qed.
Lemma lem5740561 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5740559 B y op). Qed.
Lemma lem5740562 {B : Type'} (x : type402 B) (op : type1400 B) : (term604 B x op) = (term605 B x op).
Proof. exact (MK_COMB (@lem5740545 B op) (@lem5740553 B x op)). Qed.
Lemma lem5740563 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x y op) = (term607 B x y op).
Proof. exact (MK_COMB (@lem5740562 B x op) (@lem5740561 B y op)). Qed.
Lemma lem5740565 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740566 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740565 B (B -> B) f x). Qed.
Lemma lem5740567 {B : Type'} (x : type402 B) (op : type1400 B) : (term605 B x op) = (term608 B x op).
Proof. exact (@lem5740566 B op (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740568 {B : Type'} (y : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5740569 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x y op) = (term609 B x y op).
Proof. exact (MK_COMB (@lem5740567 B x op) (@lem5740568 B y op)). Qed.
Lemma lem5740571 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740572 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740571 B B f x). Qed.
Lemma lem5740573 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term609 B x y op) = (term610 B x y op).
Proof. exact (@lem5740572 B (term608 B x op) (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5740574 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x y op) = (term610 B x y op).
Proof. exact (TRANS (@lem5740569 B x y op) (@lem5740573 B x y op)). Qed.
Lemma lem5740575 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x y op) = (term610 B x y op).
Proof. exact (TRANS (@lem5740563 B x y op) (@lem5740574 B x y op)). Qed.
Lemma lem5740576 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5740581 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740582 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740581 (type1400 B) B f x). Qed.
Lemma lem5740584 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5740582 B y op). Qed.
Lemma lem5740589 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740590 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5740589 (type1400 B) B f x). Qed.
Lemma lem5740592 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (@lem5740590 B x op). Qed.
Lemma lem5740593 {B : Type'} (y : type402 B) (op : type1400 B) : (term604 B y op) = (term605 B y op).
Proof. exact (MK_COMB (@lem5740576 B op) (@lem5740584 B y op)). Qed.
Lemma lem5740594 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term606 B y x op) = (term607 B y x op).
Proof. exact (MK_COMB (@lem5740593 B y op) (@lem5740592 B x op)). Qed.
Lemma lem5740596 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740597 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5740596 B (B -> B) f x). Qed.
Lemma lem5740598 {B : Type'} (y : type402 B) (op : type1400 B) : (term605 B y op) = (term608 B y op).
Proof. exact (@lem5740597 B op (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5740599 {B : Type'} (x : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) x op) = (@I ((B -> B -> B) -> B) x op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740600 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term607 B y x op) = (term609 B y x op).
Proof. exact (MK_COMB (@lem5740598 B y op) (@lem5740599 B x op)). Qed.
Lemma lem5740602 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740603 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5740602 B B f x). Qed.
Lemma lem5740604 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term609 B y x op) = (term610 B y x op).
Proof. exact (@lem5740603 B (term608 B y op) (@I ((B -> B -> B) -> B) x op)). Qed.
Lemma lem5740605 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term607 B y x op) = (term610 B y x op).
Proof. exact (TRANS (@lem5740600 B y x op) (@lem5740604 B y x op)). Qed.
Lemma lem5740606 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term606 B y x op) = (term610 B y x op).
Proof. exact (TRANS (@lem5740594 B y x op) (@lem5740605 B y x op)). Qed.
Lemma lem5740607 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term630 B x y op) = (term631 B x y op).
Proof. exact (MK_COMB (@lem5740544 B) (@lem5740575 B x y op)). Qed.
Lemma lem5740608 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : ((term606 B x y op) = (term606 B y x op)) = ((term610 B x y op) = (term610 B y x op)).
Proof. exact (MK_COMB (@lem5740607 B x y op) (@lem5740606 B y x op)). Qed.
Lemma lem5740609 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term632 B y x op) = (term633 B y x op).
Proof. exact (MK_COMB (@lem5740543) (@lem5740608 B y x op)). Qed.
Lemma lem5740610 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5740611 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term634 B y x op) = (term635 B y x op).
Proof. exact (MK_COMB (@lem5740610) (@lem5740609 B y x op)). Qed.
Lemma lem5740612 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term636 B y z x op) = (term637 B y z x op).
Proof. exact (MK_COMB (@lem5740611 B y x op) (@lem5740542 B y z x op)). Qed.
Lemma lem5740617 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5740618 {B : Type'} (f : type403 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> Prop) f x).
Proof. exact (@lem5740617 (type1400 B) Prop f x). Qed.
Lemma lem5740620 {B : Type'} (op : type1400 B) : (@monoidal B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5740618 B (@monoidal B) op). Qed.
Lemma lem5740621 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5740622 {B : Type'} (op : type1400 B) : (term237 B op) = (term638 B op).
Proof. exact (MK_COMB (@lem5740621) (@lem5740620 B op)). Qed.
Lemma lem5740623 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term485 B y z x op) = (term639 B y z x op).
Proof. exact (MK_COMB (@lem5740622 B op) (@lem5740612 B y z x op)). Qed.
Lemma lem5740624 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term487 B y z x) = (term640 B y z x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5740623 B y z x op)). Qed.
Lemma lem5740625 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5740626 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term489 B y z x) = (term641 B y z x).
Proof. exact (MK_COMB (@lem5740625 B) (@lem5740624 B y z x)). Qed.
Lemma lem5740627 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5740628 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term542 B y z x) = (term642 B y z x).
Proof. exact (MK_COMB (@lem5740627) (@lem5740626 B y z x)). Qed.
Lemma lem5740629 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term544 B y z x) = (term643 B y z x).
Proof. exact (MK_COMB (@lem5740628 B y z x) (@lem5740382 B)). Qed.
Lemma lem5740630 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term643 B y z x.
Proof. exact (EQ_MP (@lem5740629 B y z x) (@lem5740193 B y z x h1)). Qed.
Lemma lem5741053 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5741054 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5741055 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5741060 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741061 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5741060 A B f x). Qed.
Lemma lem5741063 {A B : Type'} (f : A -> B) (x'' : A) : (f x'') = (@I (A -> B) f x'').
Proof. exact (@lem5741061 A B f x''). Qed.
Lemma lem5741064 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5741069 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741070 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5741069 A B f x). Qed.
Lemma lem5741072 {A B : Type'} (f : A -> B) (y'' : A) : (f y'') = (@I (A -> B) f y'').
Proof. exact (@lem5741070 A B f y''). Qed.
Lemma lem5741073 {B : Type'} (s : B) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5741074 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term644 A B op f y'') = (term645 A B op f y'').
Proof. exact (MK_COMB (@lem5741064 B op) (@lem5741072 A B f y'')). Qed.
Lemma lem5741075 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term84 A B op f y'' s) = (term646 A B op f y'' s).
Proof. exact (MK_COMB (@lem5741074 A B op f y'') (@lem5741073 B s)). Qed.
Lemma lem5741077 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741078 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5741077 B (B -> B) f x). Qed.
Lemma lem5741079 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term645 A B op f y'') = (term647 A B op f y'').
Proof. exact (@lem5741078 B op (@I (A -> B) f y'')). Qed.
Lemma lem5741080 {B : Type'} (s : B) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5741081 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term646 A B op f y'' s) = (term648 A B op f y'' s).
Proof. exact (MK_COMB (@lem5741079 A B op f y'') (@lem5741080 B s)). Qed.
Lemma lem5741083 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741084 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5741083 B B f x). Qed.
Lemma lem5741085 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term648 A B op f y'' s) = (term649 A B op f y'' s).
Proof. exact (@lem5741084 B (term647 A B op f y'') s). Qed.
Lemma lem5741086 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term646 A B op f y'' s) = (term649 A B op f y'' s).
Proof. exact (TRANS (@lem5741081 A B op f y'' s) (@lem5741085 A B op f y'' s)). Qed.
Lemma lem5741087 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term84 A B op f y'' s) = (term649 A B op f y'' s).
Proof. exact (TRANS (@lem5741075 A B op f y'' s) (@lem5741086 A B op f y'' s)). Qed.
Lemma lem5741088 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) : (term644 A B op f x'') = (term645 A B op f x'').
Proof. exact (MK_COMB (@lem5741055 B op) (@lem5741063 A B f x'')). Qed.
Lemma lem5741089 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term87 A B x'' op f y'' s) = (term650 A B x'' op f y'' s).
Proof. exact (MK_COMB (@lem5741088 A B op f x'') (@lem5741087 A B op f y'' s)). Qed.
Lemma lem5741091 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741092 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5741091 B (B -> B) f x). Qed.
Lemma lem5741093 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) : (term645 A B op f x'') = (term647 A B op f x'').
Proof. exact (@lem5741092 B op (@I (A -> B) f x'')). Qed.
Lemma lem5741094 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term649 A B op f y'' s) = (term649 A B op f y'' s).
Proof. exact (eq_refl (term649 A B op f y'' s)). Qed.
Lemma lem5741095 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term650 A B x'' op f y'' s) = (term651 A B x'' op f y'' s).
Proof. exact (MK_COMB (@lem5741093 A B op f x'') (@lem5741094 A B op f y'' s)). Qed.
Lemma lem5741097 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741098 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5741097 B B f x). Qed.
Lemma lem5741099 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term651 A B x'' op f y'' s) = (term652 A B x'' op f y'' s).
Proof. exact (@lem5741098 B (term647 A B op f x'') (term649 A B op f y'' s)). Qed.
Lemma lem5741100 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term650 A B x'' op f y'' s) = (term652 A B x'' op f y'' s).
Proof. exact (TRANS (@lem5741095 A B x'' op f y'' s) (@lem5741099 A B x'' op f y'' s)). Qed.
Lemma lem5741101 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term87 A B x'' op f y'' s) = (term652 A B x'' op f y'' s).
Proof. exact (TRANS (@lem5741089 A B x'' op f y'' s) (@lem5741100 A B x'' op f y'' s)). Qed.
Lemma lem5741102 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5741107 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741108 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5741107 A B f x). Qed.
Lemma lem5741110 {A B : Type'} (f : A -> B) (y'' : A) : (f y'') = (@I (A -> B) f y'').
Proof. exact (@lem5741108 A B f y''). Qed.
Lemma lem5741111 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5741116 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem5741116 A B f x). Qed.
Lemma lem5741119 {A B : Type'} (f : A -> B) (x'' : A) : (f x'') = (@I (A -> B) f x'').
Proof. exact (@lem5741117 A B f x''). Qed.
Lemma lem5741120 {B : Type'} (s : B) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5741121 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) : (term644 A B op f x'') = (term645 A B op f x'').
Proof. exact (MK_COMB (@lem5741111 B op) (@lem5741119 A B f x'')). Qed.
Lemma lem5741122 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term84 A B op f x'' s) = (term646 A B op f x'' s).
Proof. exact (MK_COMB (@lem5741121 A B op f x'') (@lem5741120 B s)). Qed.
Lemma lem5741124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741125 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5741124 B (B -> B) f x). Qed.
Lemma lem5741126 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) : (term645 A B op f x'') = (term647 A B op f x'').
Proof. exact (@lem5741125 B op (@I (A -> B) f x'')). Qed.
Lemma lem5741127 {B : Type'} (s : B) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5741128 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term646 A B op f x'' s) = (term648 A B op f x'' s).
Proof. exact (MK_COMB (@lem5741126 A B op f x'') (@lem5741127 B s)). Qed.
Lemma lem5741130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741131 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5741130 B B f x). Qed.
Lemma lem5741132 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term648 A B op f x'' s) = (term649 A B op f x'' s).
Proof. exact (@lem5741131 B (term647 A B op f x'') s). Qed.
Lemma lem5741133 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term646 A B op f x'' s) = (term649 A B op f x'' s).
Proof. exact (TRANS (@lem5741128 A B op f x'' s) (@lem5741132 A B op f x'' s)). Qed.
Lemma lem5741134 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term84 A B op f x'' s) = (term649 A B op f x'' s).
Proof. exact (TRANS (@lem5741122 A B op f x'' s) (@lem5741133 A B op f x'' s)). Qed.
Lemma lem5741135 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term644 A B op f y'') = (term645 A B op f y'').
Proof. exact (MK_COMB (@lem5741102 B op) (@lem5741110 A B f y'')). Qed.
Lemma lem5741136 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term87 A B y'' op f x'' s) = (term650 A B y'' op f x'' s).
Proof. exact (MK_COMB (@lem5741135 A B op f y'') (@lem5741134 A B op f x'' s)). Qed.
Lemma lem5741138 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741139 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5741138 B (B -> B) f x). Qed.
Lemma lem5741140 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term645 A B op f y'') = (term647 A B op f y'').
Proof. exact (@lem5741139 B op (@I (A -> B) f y'')). Qed.
Lemma lem5741141 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term649 A B op f x'' s) = (term649 A B op f x'' s).
Proof. exact (eq_refl (term649 A B op f x'' s)). Qed.
Lemma lem5741142 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term650 A B y'' op f x'' s) = (term651 A B y'' op f x'' s).
Proof. exact (MK_COMB (@lem5741140 A B op f y'') (@lem5741141 A B op f x'' s)). Qed.
Lemma lem5741144 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5741145 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5741144 B B f x). Qed.
Lemma lem5741146 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term651 A B y'' op f x'' s) = (term652 A B y'' op f x'' s).
Proof. exact (@lem5741145 B (term647 A B op f y'') (term649 A B op f x'' s)). Qed.
Lemma lem5741147 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term650 A B y'' op f x'' s) = (term652 A B y'' op f x'' s).
Proof. exact (TRANS (@lem5741142 A B y'' op f x'' s) (@lem5741146 A B y'' op f x'' s)). Qed.
Lemma lem5741148 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term87 A B y'' op f x'' s) = (term652 A B y'' op f x'' s).
Proof. exact (TRANS (@lem5741136 A B y'' op f x'' s) (@lem5741147 A B y'' op f x'' s)). Qed.
Lemma lem5741149 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term89 A B x'' op f y'' s) = (term653 A B x'' op f y'' s).
Proof. exact (MK_COMB (@lem5741054 B) (@lem5741101 A B x'' op f y'' s)). Qed.
Lemma lem5741150 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : ((term87 A B x'' op f y'' s) = (term87 A B y'' op f x'' s)) = ((term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s)).
Proof. exact (MK_COMB (@lem5741149 A B x'' op f y'' s) (@lem5741148 A B y'' op f x'' s)). Qed.
Lemma lem5741151 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term164 A B y'' op f x'' s) = (term654 A B y'' op f x'' s).
Proof. exact (MK_COMB (@lem5741053) (@lem5741150 A B y'' op f x'' s)). Qed.
Lemma lem5741160 {A : Type'} (x'' : A) (y'' : A) : (term165 A x'' y'') = (term165 A x'' y'').
Proof. exact (eq_refl (term165 A x'' y'')). Qed.
Lemma lem5741161 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term134 A B y'' op f x'' s) = (term655 A B y'' op f x'' s).
Proof. exact (MK_COMB (@lem5741160 A x'' y'') (@lem5741151 A B y'' op f x'' s)). Qed.
Lemma lem5741162 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : term134 A B y'' op f x'' s) : term655 A B y'' op f x'' s.
Proof. exact (EQ_MP (@lem5741161 A B y'' op f x'' s) (@lem5740199 A B y'' op f x'' s h1)). Qed.
Lemma lem5741167 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term595 B.
Proof. exact (proj2 (@lem5740630 B y z x h1)). Qed.
Lemma lem5741515 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem5741516 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term21 B P Q) = (term22 B P Q).
Proof. exact (@lem5741515 B P Q). Qed.
Lemma lem5741517 {B : Type'} (op : type1400 B) : (term656 B op) = (term657 B op).
Proof. exact (@lem5741516 B (term578 B op) (term560 B op)). Qed.
Lemma lem5741518 {B : Type'} (op : type1400 B) (x : B) : (term658 B op x) = (term577 B op x).
Proof. exact (eq_refl (term658 B op x)). Qed.
Lemma lem5741519 {B : Type'} (op : type1400 B) : (term659 B op) = (term578 B op).
Proof. exact (fun_ext (fun x : B => @lem5741518 B op x)). Qed.
Lemma lem5741520 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741521 {B : Type'} (op : type1400 B) : (term660 B op) = (term579 B op).
Proof. exact (MK_COMB (@lem5741520 B) (@lem5741519 B op)). Qed.
Lemma lem5741522 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741523 {B : Type'} (op : type1400 B) : (term661 B op) = (term580 B op).
Proof. exact (MK_COMB (@lem5741522) (@lem5741521 B op)). Qed.
Lemma lem5741524 {B : Type'} (op : type1400 B) (x : B) : (term662 B op x) = ((term557 B op x) = x).
Proof. exact (eq_refl (term662 B op x)). Qed.
Lemma lem5741525 {B : Type'} (op : type1400 B) : (term663 B op) = (term560 B op).
Proof. exact (fun_ext (fun x : B => @lem5741524 B op x)). Qed.
Lemma lem5741526 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741527 {B : Type'} (op : type1400 B) : (term664 B op) = (term561 B op).
Proof. exact (MK_COMB (@lem5741526 B) (@lem5741525 B op)). Qed.
Lemma lem5741528 {B : Type'} (op : type1400 B) : (term656 B op) = (term581 B op).
Proof. exact (MK_COMB (@lem5741523 B op) (@lem5741527 B op)). Qed.
Lemma lem5741529 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741530 {B : Type'} (op : type1400 B) : (term665 B op) = (term666 B op).
Proof. exact (MK_COMB (@lem5741529) (@lem5741528 B op)). Qed.
Lemma lem5741531 {B : Type'} (op : type1400 B) (x : B) : (term658 B op x) = (term577 B op x).
Proof. exact (eq_refl (term658 B op x)). Qed.
Lemma lem5741532 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741533 {B : Type'} (op : type1400 B) (x : B) : (term667 B op x) = (term668 B op x).
Proof. exact (MK_COMB (@lem5741532) (@lem5741531 B op x)). Qed.
Lemma lem5741534 {B : Type'} (op : type1400 B) (x : B) : (term662 B op x) = ((term557 B op x) = x).
Proof. exact (eq_refl (term662 B op x)). Qed.
Lemma lem5741535 {B : Type'} (op : type1400 B) (x : B) : (term669 B op x) = (term670 B op x).
Proof. exact (MK_COMB (@lem5741533 B op x) (@lem5741534 B op x)). Qed.
Lemma lem5741536 {B : Type'} (op : type1400 B) : (term671 B op) = (term672 B op).
Proof. exact (fun_ext (fun x : B => @lem5741535 B op x)). Qed.
Lemma lem5741537 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741538 {B : Type'} (op : type1400 B) : (term657 B op) = (term673 B op).
Proof. exact (MK_COMB (@lem5741537 B) (@lem5741536 B op)). Qed.
Lemma lem5741539 {B : Type'} (op : type1400 B) : ((term656 B op) = (term657 B op)) = ((term581 B op) = (term673 B op)).
Proof. exact (MK_COMB (@lem5741530 B op) (@lem5741538 B op)). Qed.
Lemma lem5741540 {B : Type'} (op : type1400 B) : (term581 B op) = (term673 B op).
Proof. exact (EQ_MP (@lem5741539 B op) (@lem5741517 B op)). Qed.
Lemma lem5741542 {A : Type'} (P : A -> Prop) (Q : Prop) : (term674 A P Q) = (term675 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem5741543 {B : Type'} (P : B -> Prop) (Q : Prop) : (term674 B P Q) = (term675 B P Q).
Proof. exact (@lem5741542 B P Q). Qed.
Lemma lem5741544 {B : Type'} (op : type1400 B) (x : B) : (term676 B op x) = (term677 B op x).
Proof. exact (@lem5741543 B (term576 B op x) ((term557 B op x) = x)). Qed.
Lemma lem5741545 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term678 B op x y) = (term575 B op x y).
Proof. exact (eq_refl (term678 B op x y)). Qed.
Lemma lem5741546 {B : Type'} (op : type1400 B) (x : B) : (term679 B op x) = (term576 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741545 B op x y)). Qed.
Lemma lem5741547 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741548 {B : Type'} (op : type1400 B) (x : B) : (term680 B op x) = (term577 B op x).
Proof. exact (MK_COMB (@lem5741547 B) (@lem5741546 B op x)). Qed.
Lemma lem5741549 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741550 {B : Type'} (op : type1400 B) (x : B) : (term681 B op x) = (term668 B op x).
Proof. exact (MK_COMB (@lem5741549) (@lem5741548 B op x)). Qed.
Lemma lem5741551 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5741552 {B : Type'} (op : type1400 B) (x : B) : (term676 B op x) = (term670 B op x).
Proof. exact (MK_COMB (@lem5741550 B op x) (@lem5741551 B op x)). Qed.
Lemma lem5741553 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741554 {B : Type'} (op : type1400 B) (x : B) : (term682 B op x) = (term683 B op x).
Proof. exact (MK_COMB (@lem5741553) (@lem5741552 B op x)). Qed.
Lemma lem5741555 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term678 B op x y) = (term575 B op x y).
Proof. exact (eq_refl (term678 B op x y)). Qed.
Lemma lem5741556 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741557 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term684 B op x y) = (term685 B op x y).
Proof. exact (MK_COMB (@lem5741556) (@lem5741555 B op x y)). Qed.
Lemma lem5741558 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5741559 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term686 B y op x) = (term687 B y op x).
Proof. exact (MK_COMB (@lem5741557 B op x y) (@lem5741558 B op x)). Qed.
Lemma lem5741560 {B : Type'} (op : type1400 B) (x : B) : (term688 B op x) = (term689 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741559 B y op x)). Qed.
Lemma lem5741561 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741562 {B : Type'} (op : type1400 B) (x : B) : (term677 B op x) = (term690 B op x).
Proof. exact (MK_COMB (@lem5741561 B) (@lem5741560 B op x)). Qed.
Lemma lem5741563 {B : Type'} (op : type1400 B) (x : B) : ((term676 B op x) = (term677 B op x)) = ((term670 B op x) = (term690 B op x)).
Proof. exact (MK_COMB (@lem5741554 B op x) (@lem5741562 B op x)). Qed.
Lemma lem5741564 {B : Type'} (op : type1400 B) (x : B) : (term670 B op x) = (term690 B op x).
Proof. exact (EQ_MP (@lem5741563 B op x) (@lem5741544 B op x)). Qed.
Lemma lem5741566 {A : Type'} (P : A -> Prop) (Q : Prop) : (term674 A P Q) = (term675 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem5741567 {B : Type'} (P : B -> Prop) (Q : Prop) : (term674 B P Q) = (term675 B P Q).
Proof. exact (@lem5741566 B P Q). Qed.
Lemma lem5741568 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term691 B y op x) = (term692 B y op x).
Proof. exact (@lem5741567 B (term574 B op x y) ((term557 B op x) = x)). Qed.
Lemma lem5741569 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term693 B op x y z) = ((term565 B x op y z) = (term571 B op x y z)).
Proof. exact (eq_refl (term693 B op x y z)). Qed.
Lemma lem5741570 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term694 B op x y) = (term574 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5741569 B op x y z)). Qed.
Lemma lem5741571 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741572 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term695 B op x y) = (term575 B op x y).
Proof. exact (MK_COMB (@lem5741571 B) (@lem5741570 B op x y)). Qed.
Lemma lem5741573 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741574 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term696 B op x y) = (term685 B op x y).
Proof. exact (MK_COMB (@lem5741573) (@lem5741572 B op x y)). Qed.
Lemma lem5741575 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5741576 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term691 B y op x) = (term687 B y op x).
Proof. exact (MK_COMB (@lem5741574 B op x y) (@lem5741575 B op x)). Qed.
Lemma lem5741577 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741578 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term697 B y op x) = (term698 B y op x).
Proof. exact (MK_COMB (@lem5741577) (@lem5741576 B y op x)). Qed.
Lemma lem5741579 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term693 B op x y z) = ((term565 B x op y z) = (term571 B op x y z)).
Proof. exact (eq_refl (term693 B op x y z)). Qed.
Lemma lem5741580 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741581 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term699 B op x y z) = (term700 B op x y z).
Proof. exact (MK_COMB (@lem5741580) (@lem5741579 B op x y z)). Qed.
Lemma lem5741582 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5741583 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term701 B y z op x) = (term702 B y z op x).
Proof. exact (MK_COMB (@lem5741581 B op x y z) (@lem5741582 B op x)). Qed.
Lemma lem5741584 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term703 B y op x) = (term704 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5741583 B y z op x)). Qed.
Lemma lem5741585 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741586 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term692 B y op x) = (term705 B y op x).
Proof. exact (MK_COMB (@lem5741585 B) (@lem5741584 B y op x)). Qed.
Lemma lem5741587 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term691 B y op x) = (term692 B y op x)) = ((term687 B y op x) = (term705 B y op x)).
Proof. exact (MK_COMB (@lem5741578 B y op x) (@lem5741586 B y op x)). Qed.
Lemma lem5741588 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term687 B y op x) = (term705 B y op x).
Proof. exact (EQ_MP (@lem5741587 B y op x) (@lem5741568 B y op x)). Qed.
Lemma lem5741589 {B : Type'} (op : type1400 B) (x : B) : (term689 B op x) = (term706 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741588 B y op x)). Qed.
Lemma lem5741590 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741591 {B : Type'} (op : type1400 B) (x : B) : (term690 B op x) = (term707 B op x).
Proof. exact (MK_COMB (@lem5741590 B) (@lem5741589 B op x)). Qed.
Lemma lem5741592 {B : Type'} (op : type1400 B) (x : B) : (term670 B op x) = (term707 B op x).
Proof. exact (TRANS (@lem5741564 B op x) (@lem5741591 B op x)). Qed.
Lemma lem5741593 {B : Type'} (op : type1400 B) : (term672 B op) = (term708 B op).
Proof. exact (fun_ext (fun x : B => @lem5741592 B op x)). Qed.
Lemma lem5741594 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741595 {B : Type'} (op : type1400 B) : (term673 B op) = (term709 B op).
Proof. exact (MK_COMB (@lem5741594 B) (@lem5741593 B op)). Qed.
Lemma lem5741596 {B : Type'} (op : type1400 B) : (term581 B op) = (term709 B op).
Proof. exact (TRANS (@lem5741540 B op) (@lem5741595 B op)). Qed.
Lemma lem5741597 {B : Type'} (op : type1400 B) : (term588 B op) = (term588 B op).
Proof. exact (eq_refl (term588 B op)). Qed.
Lemma lem5741598 {B : Type'} (op : type1400 B) : (term589 B op) = (term710 B op).
Proof. exact (MK_COMB (@lem5741597 B op) (@lem5741596 B op)). Qed.
Lemma lem5741600 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem5741601 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term21 B P Q) = (term22 B P Q).
Proof. exact (@lem5741600 B P Q). Qed.
Lemma lem5741602 {B : Type'} (op : type1400 B) : (term711 B op) = (term712 B op).
Proof. exact (@lem5741601 B (term586 B op) (term708 B op)). Qed.
Lemma lem5741603 {B : Type'} (op : type1400 B) (x : B) : (term713 B op x) = (term585 B op x).
Proof. exact (eq_refl (term713 B op x)). Qed.
Lemma lem5741604 {B : Type'} (op : type1400 B) : (term714 B op) = (term586 B op).
Proof. exact (fun_ext (fun x : B => @lem5741603 B op x)). Qed.
Lemma lem5741605 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741606 {B : Type'} (op : type1400 B) : (term715 B op) = (term587 B op).
Proof. exact (MK_COMB (@lem5741605 B) (@lem5741604 B op)). Qed.
Lemma lem5741607 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741608 {B : Type'} (op : type1400 B) : (term716 B op) = (term588 B op).
Proof. exact (MK_COMB (@lem5741607) (@lem5741606 B op)). Qed.
Lemma lem5741609 {B : Type'} (op : type1400 B) (x : B) : (term717 B op x) = (term707 B op x).
Proof. exact (eq_refl (term717 B op x)). Qed.
Lemma lem5741610 {B : Type'} (op : type1400 B) : (term718 B op) = (term708 B op).
Proof. exact (fun_ext (fun x : B => @lem5741609 B op x)). Qed.
Lemma lem5741611 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741612 {B : Type'} (op : type1400 B) : (term719 B op) = (term709 B op).
Proof. exact (MK_COMB (@lem5741611 B) (@lem5741610 B op)). Qed.
Lemma lem5741613 {B : Type'} (op : type1400 B) : (term711 B op) = (term710 B op).
Proof. exact (MK_COMB (@lem5741608 B op) (@lem5741612 B op)). Qed.
Lemma lem5741614 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741615 {B : Type'} (op : type1400 B) : (term720 B op) = (term721 B op).
Proof. exact (MK_COMB (@lem5741614) (@lem5741613 B op)). Qed.
Lemma lem5741616 {B : Type'} (op : type1400 B) (x : B) : (term713 B op x) = (term585 B op x).
Proof. exact (eq_refl (term713 B op x)). Qed.
Lemma lem5741617 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741618 {B : Type'} (op : type1400 B) (x : B) : (term722 B op x) = (term723 B op x).
Proof. exact (MK_COMB (@lem5741617) (@lem5741616 B op x)). Qed.
Lemma lem5741619 {B : Type'} (op : type1400 B) (x : B) : (term717 B op x) = (term707 B op x).
Proof. exact (eq_refl (term717 B op x)). Qed.
Lemma lem5741620 {B : Type'} (op : type1400 B) (x : B) : (term724 B op x) = (term725 B op x).
Proof. exact (MK_COMB (@lem5741618 B op x) (@lem5741619 B op x)). Qed.
Lemma lem5741621 {B : Type'} (op : type1400 B) : (term726 B op) = (term727 B op).
Proof. exact (fun_ext (fun x : B => @lem5741620 B op x)). Qed.
Lemma lem5741622 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741623 {B : Type'} (op : type1400 B) : (term712 B op) = (term728 B op).
Proof. exact (MK_COMB (@lem5741622 B) (@lem5741621 B op)). Qed.
Lemma lem5741624 {B : Type'} (op : type1400 B) : ((term711 B op) = (term712 B op)) = ((term710 B op) = (term728 B op)).
Proof. exact (MK_COMB (@lem5741615 B op) (@lem5741623 B op)). Qed.
Lemma lem5741625 {B : Type'} (op : type1400 B) : (term710 B op) = (term728 B op).
Proof. exact (EQ_MP (@lem5741624 B op) (@lem5741602 B op)). Qed.
Lemma lem5741627 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem5741628 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term21 B P Q) = (term22 B P Q).
Proof. exact (@lem5741627 B P Q). Qed.
Lemma lem5741629 {B : Type'} (op : type1400 B) (x : B) : (term729 B op x) = (term730 B op x).
Proof. exact (@lem5741628 B (term584 B op x) (term706 B op x)). Qed.
Lemma lem5741630 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term731 B op x y) = ((term562 B op x y) = (term562 B op y x)).
Proof. exact (eq_refl (term731 B op x y)). Qed.
Lemma lem5741631 {B : Type'} (op : type1400 B) (x : B) : (term732 B op x) = (term584 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741630 B op y x)). Qed.
Lemma lem5741632 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741633 {B : Type'} (op : type1400 B) (x : B) : (term733 B op x) = (term585 B op x).
Proof. exact (MK_COMB (@lem5741632 B) (@lem5741631 B op x)). Qed.
Lemma lem5741634 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741635 {B : Type'} (op : type1400 B) (x : B) : (term734 B op x) = (term723 B op x).
Proof. exact (MK_COMB (@lem5741634) (@lem5741633 B op x)). Qed.
Lemma lem5741636 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term735 B op x y) = (term705 B y op x).
Proof. exact (eq_refl (term735 B op x y)). Qed.
Lemma lem5741637 {B : Type'} (op : type1400 B) (x : B) : (term736 B op x) = (term706 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741636 B y op x)). Qed.
Lemma lem5741638 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741639 {B : Type'} (op : type1400 B) (x : B) : (term737 B op x) = (term707 B op x).
Proof. exact (MK_COMB (@lem5741638 B) (@lem5741637 B op x)). Qed.
Lemma lem5741640 {B : Type'} (op : type1400 B) (x : B) : (term729 B op x) = (term725 B op x).
Proof. exact (MK_COMB (@lem5741635 B op x) (@lem5741639 B op x)). Qed.
Lemma lem5741641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741642 {B : Type'} (op : type1400 B) (x : B) : (term738 B op x) = (term739 B op x).
Proof. exact (MK_COMB (@lem5741641) (@lem5741640 B op x)). Qed.
Lemma lem5741643 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term731 B op x y) = ((term562 B op x y) = (term562 B op y x)).
Proof. exact (eq_refl (term731 B op x y)). Qed.
Lemma lem5741644 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5741645 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term740 B op x y) = (term741 B op y x).
Proof. exact (MK_COMB (@lem5741644) (@lem5741643 B op y x)). Qed.
Lemma lem5741646 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term735 B op x y) = (term705 B y op x).
Proof. exact (eq_refl (term735 B op x y)). Qed.
Lemma lem5741647 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term742 B op x y) = (term743 B y op x).
Proof. exact (MK_COMB (@lem5741645 B op y x) (@lem5741646 B y op x)). Qed.
Lemma lem5741648 {B : Type'} (op : type1400 B) (x : B) : (term744 B op x) = (term745 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741647 B y op x)). Qed.
Lemma lem5741649 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741650 {B : Type'} (op : type1400 B) (x : B) : (term730 B op x) = (term746 B op x).
Proof. exact (MK_COMB (@lem5741649 B) (@lem5741648 B op x)). Qed.
Lemma lem5741651 {B : Type'} (op : type1400 B) (x : B) : ((term729 B op x) = (term730 B op x)) = ((term725 B op x) = (term746 B op x)).
Proof. exact (MK_COMB (@lem5741642 B op x) (@lem5741650 B op x)). Qed.
Lemma lem5741652 {B : Type'} (op : type1400 B) (x : B) : (term725 B op x) = (term746 B op x).
Proof. exact (EQ_MP (@lem5741651 B op x) (@lem5741629 B op x)). Qed.
Lemma lem5741654 {A : Type'} (P : Prop) (Q : A -> Prop) : (term747 A P Q) = (term748 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem5741655 {B : Type'} (P : Prop) (Q : B -> Prop) : (term747 B P Q) = (term748 B P Q).
Proof. exact (@lem5741654 B P Q). Qed.
Lemma lem5741656 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term749 B y op x) = (term750 B y op x).
Proof. exact (@lem5741655 B ((term562 B op x y) = (term562 B op y x)) (term704 B y op x)). Qed.
Lemma lem5741657 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term751 B y op x z) = (term702 B y z op x).
Proof. exact (eq_refl (term751 B y op x z)). Qed.
Lemma lem5741658 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term752 B y op x) = (term704 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5741657 B y z op x)). Qed.
Lemma lem5741659 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741660 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term753 B y op x) = (term705 B y op x).
Proof. exact (MK_COMB (@lem5741659 B) (@lem5741658 B y op x)). Qed.
Lemma lem5741661 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term741 B op y x) = (term741 B op y x).
Proof. exact (eq_refl (term741 B op y x)). Qed.
Lemma lem5741662 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term749 B y op x) = (term743 B y op x).
Proof. exact (MK_COMB (@lem5741661 B op y x) (@lem5741660 B y op x)). Qed.
Lemma lem5741663 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741664 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term754 B y op x) = (term755 B y op x).
Proof. exact (MK_COMB (@lem5741663) (@lem5741662 B y op x)). Qed.
Lemma lem5741665 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term751 B y op x z) = (term702 B y z op x).
Proof. exact (eq_refl (term751 B y op x z)). Qed.
Lemma lem5741666 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term741 B op y x) = (term741 B op y x).
Proof. exact (eq_refl (term741 B op y x)). Qed.
Lemma lem5741667 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term756 B y op x z) = (term757 B y z op x).
Proof. exact (MK_COMB (@lem5741666 B op y x) (@lem5741665 B y z op x)). Qed.
Lemma lem5741668 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term758 B y op x) = (term759 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5741667 B y z op x)). Qed.
Lemma lem5741669 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741670 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term750 B y op x) = (term760 B y op x).
Proof. exact (MK_COMB (@lem5741669 B) (@lem5741668 B y op x)). Qed.
Lemma lem5741671 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term749 B y op x) = (term750 B y op x)) = ((term743 B y op x) = (term760 B y op x)).
Proof. exact (MK_COMB (@lem5741664 B y op x) (@lem5741670 B y op x)). Qed.
Lemma lem5741672 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term743 B y op x) = (term760 B y op x).
Proof. exact (EQ_MP (@lem5741671 B y op x) (@lem5741656 B y op x)). Qed.
Lemma lem5741673 {B : Type'} (op : type1400 B) (x : B) : (term745 B op x) = (term761 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741672 B y op x)). Qed.
Lemma lem5741674 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741675 {B : Type'} (op : type1400 B) (x : B) : (term746 B op x) = (term762 B op x).
Proof. exact (MK_COMB (@lem5741674 B) (@lem5741673 B op x)). Qed.
Lemma lem5741676 {B : Type'} (op : type1400 B) (x : B) : (term725 B op x) = (term762 B op x).
Proof. exact (TRANS (@lem5741652 B op x) (@lem5741675 B op x)). Qed.
Lemma lem5741677 {B : Type'} (op : type1400 B) : (term727 B op) = (term763 B op).
Proof. exact (fun_ext (fun x : B => @lem5741676 B op x)). Qed.
Lemma lem5741678 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741679 {B : Type'} (op : type1400 B) : (term728 B op) = (term764 B op).
Proof. exact (MK_COMB (@lem5741678 B) (@lem5741677 B op)). Qed.
Lemma lem5741680 {B : Type'} (op : type1400 B) : (term710 B op) = (term764 B op).
Proof. exact (TRANS (@lem5741625 B op) (@lem5741679 B op)). Qed.
Lemma lem5741681 {B : Type'} (op : type1400 B) : (term589 B op) = (term764 B op).
Proof. exact (TRANS (@lem5741598 B op) (@lem5741680 B op)). Qed.
Lemma lem5741682 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741683 {B : Type'} (op : type1400 B) : (term593 B op) = (term765 B op).
Proof. exact (MK_COMB (@lem5741682 B op) (@lem5741681 B op)). Qed.
Lemma lem5741685 {A : Type'} (P : Prop) (Q : A -> Prop) : (term766 A P Q) = (term767 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5741686 {B : Type'} (P : Prop) (Q : B -> Prop) : (term766 B P Q) = (term767 B P Q).
Proof. exact (@lem5741685 B P Q). Qed.
Lemma lem5741687 {B : Type'} (op : type1400 B) : (term768 B op) = (term769 B op).
Proof. exact (@lem5741686 B (term591 B op) (term763 B op)). Qed.
Lemma lem5741688 {B : Type'} (op : type1400 B) (x : B) : (term770 B op x) = (term762 B op x).
Proof. exact (eq_refl (term770 B op x)). Qed.
Lemma lem5741689 {B : Type'} (op : type1400 B) : (term771 B op) = (term763 B op).
Proof. exact (fun_ext (fun x : B => @lem5741688 B op x)). Qed.
Lemma lem5741690 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741691 {B : Type'} (op : type1400 B) : (term772 B op) = (term764 B op).
Proof. exact (MK_COMB (@lem5741690 B) (@lem5741689 B op)). Qed.
Lemma lem5741692 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741693 {B : Type'} (op : type1400 B) : (term768 B op) = (term765 B op).
Proof. exact (MK_COMB (@lem5741692 B op) (@lem5741691 B op)). Qed.
Lemma lem5741694 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741695 {B : Type'} (op : type1400 B) : (term773 B op) = (term774 B op).
Proof. exact (MK_COMB (@lem5741694) (@lem5741693 B op)). Qed.
Lemma lem5741696 {B : Type'} (op : type1400 B) (x : B) : (term770 B op x) = (term762 B op x).
Proof. exact (eq_refl (term770 B op x)). Qed.
Lemma lem5741697 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741698 {B : Type'} (op : type1400 B) (x : B) : (term775 B op x) = (term776 B op x).
Proof. exact (MK_COMB (@lem5741697 B op) (@lem5741696 B op x)). Qed.
Lemma lem5741699 {B : Type'} (op : type1400 B) : (term777 B op) = (term778 B op).
Proof. exact (fun_ext (fun x : B => @lem5741698 B op x)). Qed.
Lemma lem5741700 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741701 {B : Type'} (op : type1400 B) : (term769 B op) = (term779 B op).
Proof. exact (MK_COMB (@lem5741700 B) (@lem5741699 B op)). Qed.
Lemma lem5741702 {B : Type'} (op : type1400 B) : ((term768 B op) = (term769 B op)) = ((term765 B op) = (term779 B op)).
Proof. exact (MK_COMB (@lem5741695 B op) (@lem5741701 B op)). Qed.
Lemma lem5741703 {B : Type'} (op : type1400 B) : (term765 B op) = (term779 B op).
Proof. exact (EQ_MP (@lem5741702 B op) (@lem5741687 B op)). Qed.
Lemma lem5741705 {A : Type'} (P : Prop) (Q : A -> Prop) : (term766 A P Q) = (term767 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5741706 {B : Type'} (P : Prop) (Q : B -> Prop) : (term766 B P Q) = (term767 B P Q).
Proof. exact (@lem5741705 B P Q). Qed.
Lemma lem5741707 {B : Type'} (op : type1400 B) (x : B) : (term780 B op x) = (term781 B op x).
Proof. exact (@lem5741706 B (term591 B op) (term761 B op x)). Qed.
Lemma lem5741708 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term782 B op x y) = (term760 B y op x).
Proof. exact (eq_refl (term782 B op x y)). Qed.
Lemma lem5741709 {B : Type'} (op : type1400 B) (x : B) : (term783 B op x) = (term761 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741708 B y op x)). Qed.
Lemma lem5741710 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741711 {B : Type'} (op : type1400 B) (x : B) : (term784 B op x) = (term762 B op x).
Proof. exact (MK_COMB (@lem5741710 B) (@lem5741709 B op x)). Qed.
Lemma lem5741712 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741713 {B : Type'} (op : type1400 B) (x : B) : (term780 B op x) = (term776 B op x).
Proof. exact (MK_COMB (@lem5741712 B op) (@lem5741711 B op x)). Qed.
Lemma lem5741714 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741715 {B : Type'} (op : type1400 B) (x : B) : (term785 B op x) = (term786 B op x).
Proof. exact (MK_COMB (@lem5741714) (@lem5741713 B op x)). Qed.
Lemma lem5741716 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term782 B op x y) = (term760 B y op x).
Proof. exact (eq_refl (term782 B op x y)). Qed.
Lemma lem5741717 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741718 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term787 B op x y) = (term788 B y op x).
Proof. exact (MK_COMB (@lem5741717 B op) (@lem5741716 B y op x)). Qed.
Lemma lem5741719 {B : Type'} (op : type1400 B) (x : B) : (term789 B op x) = (term790 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741718 B y op x)). Qed.
Lemma lem5741720 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741721 {B : Type'} (op : type1400 B) (x : B) : (term781 B op x) = (term791 B op x).
Proof. exact (MK_COMB (@lem5741720 B) (@lem5741719 B op x)). Qed.
Lemma lem5741722 {B : Type'} (op : type1400 B) (x : B) : ((term780 B op x) = (term781 B op x)) = ((term776 B op x) = (term791 B op x)).
Proof. exact (MK_COMB (@lem5741715 B op x) (@lem5741721 B op x)). Qed.
Lemma lem5741723 {B : Type'} (op : type1400 B) (x : B) : (term776 B op x) = (term791 B op x).
Proof. exact (EQ_MP (@lem5741722 B op x) (@lem5741707 B op x)). Qed.
Lemma lem5741725 {A : Type'} (P : Prop) (Q : A -> Prop) : (term766 A P Q) = (term767 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5741726 {B : Type'} (P : Prop) (Q : B -> Prop) : (term766 B P Q) = (term767 B P Q).
Proof. exact (@lem5741725 B P Q). Qed.
Lemma lem5741727 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term792 B y op x) = (term793 B y op x).
Proof. exact (@lem5741726 B (term591 B op) (term759 B y op x)). Qed.
Lemma lem5741728 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term794 B y op x z) = (term757 B y z op x).
Proof. exact (eq_refl (term794 B y op x z)). Qed.
Lemma lem5741729 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term795 B y op x) = (term759 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5741728 B y z op x)). Qed.
Lemma lem5741730 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741731 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term796 B y op x) = (term760 B y op x).
Proof. exact (MK_COMB (@lem5741730 B) (@lem5741729 B y op x)). Qed.
Lemma lem5741732 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741733 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term792 B y op x) = (term788 B y op x).
Proof. exact (MK_COMB (@lem5741732 B op) (@lem5741731 B y op x)). Qed.
Lemma lem5741734 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5741735 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term797 B y op x) = (term798 B y op x).
Proof. exact (MK_COMB (@lem5741734) (@lem5741733 B y op x)). Qed.
Lemma lem5741736 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term794 B y op x z) = (term757 B y z op x).
Proof. exact (eq_refl (term794 B y op x z)). Qed.
Lemma lem5741737 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5741738 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term799 B y op x z) = (term800 B y z op x).
Proof. exact (MK_COMB (@lem5741737 B op) (@lem5741736 B y z op x)). Qed.
Lemma lem5741739 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term801 B y op x) = (term802 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5741738 B y z op x)). Qed.
Lemma lem5741740 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741741 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term793 B y op x) = (term803 B y op x).
Proof. exact (MK_COMB (@lem5741740 B) (@lem5741739 B y op x)). Qed.
Lemma lem5741742 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term792 B y op x) = (term793 B y op x)) = ((term788 B y op x) = (term803 B y op x)).
Proof. exact (MK_COMB (@lem5741735 B y op x) (@lem5741741 B y op x)). Qed.
Lemma lem5741743 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term788 B y op x) = (term803 B y op x).
Proof. exact (EQ_MP (@lem5741742 B y op x) (@lem5741727 B y op x)). Qed.
Lemma lem5741744 {B : Type'} (op : type1400 B) (x : B) : (term790 B op x) = (term804 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741743 B y op x)). Qed.
Lemma lem5741745 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741746 {B : Type'} (op : type1400 B) (x : B) : (term791 B op x) = (term805 B op x).
Proof. exact (MK_COMB (@lem5741745 B) (@lem5741744 B op x)). Qed.
Lemma lem5741747 {B : Type'} (op : type1400 B) (x : B) : (term776 B op x) = (term805 B op x).
Proof. exact (TRANS (@lem5741723 B op x) (@lem5741746 B op x)). Qed.
Lemma lem5741748 {B : Type'} (op : type1400 B) : (term778 B op) = (term806 B op).
Proof. exact (fun_ext (fun x : B => @lem5741747 B op x)). Qed.
Lemma lem5741749 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741750 {B : Type'} (op : type1400 B) : (term779 B op) = (term807 B op).
Proof. exact (MK_COMB (@lem5741749 B) (@lem5741748 B op)). Qed.
Lemma lem5741751 {B : Type'} (op : type1400 B) : (term765 B op) = (term807 B op).
Proof. exact (TRANS (@lem5741703 B op) (@lem5741750 B op)). Qed.
Lemma lem5741752 {B : Type'} (op : type1400 B) : (term593 B op) = (term807 B op).
Proof. exact (TRANS (@lem5741683 B op) (@lem5741751 B op)). Qed.
Lemma lem5741753 {B : Type'} : (term594 B) = (term808 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5741752 B op)). Qed.
Lemma lem5741754 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5741755 {B : Type'} : (term595 B) = (term809 B).
Proof. exact (MK_COMB (@lem5741754 B) (@lem5741753 B)). Qed.
Lemma lem5741769 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term800 B y z op x) = (term810 B y z op x).
Proof. exact (@lem19490 ((term562 B op x y) = (term562 B op y x)) (term591 B op) (term702 B y z op x)). Qed.
Lemma lem5741776 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term811 B y z op x) = (term812 B y z op x).
Proof. exact (@lem19490 ((term565 B x op y z) = (term571 B op x y z)) (term591 B op) ((term557 B op x) = x)). Qed.
Lemma lem5741779 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term813 B op y x) = (term813 B op y x).
Proof. exact (eq_refl (term813 B op y x)). Qed.
Lemma lem5741780 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term810 B y z op x) = (term814 B y z op x).
Proof. exact (MK_COMB (@lem5741779 B op y x) (@lem5741776 B y z op x)). Qed.
Lemma lem5741782 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term800 B y z op x) = (term814 B y z op x).
Proof. exact (TRANS (@lem5741769 B y z op x) (@lem5741780 B y z op x)). Qed.
Lemma lem5741783 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term802 B y op x) = (term815 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5741782 B y z op x)). Qed.
Lemma lem5741784 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741785 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term803 B y op x) = (term816 B y op x).
Proof. exact (MK_COMB (@lem5741784 B) (@lem5741783 B y op x)). Qed.
Lemma lem5741786 {B : Type'} (op : type1400 B) (x : B) : (term804 B op x) = (term817 B op x).
Proof. exact (fun_ext (fun y : B => @lem5741785 B y op x)). Qed.
Lemma lem5741787 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741788 {B : Type'} (op : type1400 B) (x : B) : (term805 B op x) = (term818 B op x).
Proof. exact (MK_COMB (@lem5741787 B) (@lem5741786 B op x)). Qed.
Lemma lem5741789 {B : Type'} (op : type1400 B) : (term806 B op) = (term819 B op).
Proof. exact (fun_ext (fun x : B => @lem5741788 B op x)). Qed.
Lemma lem5741790 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5741791 {B : Type'} (op : type1400 B) : (term807 B op) = (term820 B op).
Proof. exact (MK_COMB (@lem5741790 B) (@lem5741789 B op)). Qed.
Lemma lem5741792 {B : Type'} : (term808 B) = (term821 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5741791 B op)). Qed.
Lemma lem5741793 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5741794 {B : Type'} : (term809 B) = (term822 B).
Proof. exact (MK_COMB (@lem5741793 B) (@lem5741792 B)). Qed.
Lemma lem5741795 {B : Type'} : (term595 B) = (term822 B).
Proof. exact (TRANS (@lem5741755 B) (@lem5741794 B)). Qed.
Lemma lem5741796 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term822 B.
Proof. exact (EQ_MP (@lem5741795 B) (@lem5741167 B y z x h1)). Qed.
Lemma lem5741815 {B : Type'} (_72289 : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term823 B _72289.
Proof. exact (@lem5741796 B y z x h1 _72289). Qed.
Lemma lem5741816 {B : Type'} (_72289 : type1400 B) : (term823 B _72289) = (term820 B _72289).
Proof. exact (eq_refl (term823 B _72289)). Qed.
Lemma lem5741817 {B : Type'} (_72289 : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term820 B _72289.
Proof. exact (EQ_MP (@lem5741816 B _72289) (@lem5741815 B _72289 y z x h1)). Qed.
Lemma lem5741818 {B : Type'} (_72289 : type1400 B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term824 B _72289 _72290.
Proof. exact (@lem5741817 B _72289 y z x h1 _72290). Qed.
Lemma lem5741819 {B : Type'} (_72289 : type1400 B) (_72290 : B) : (term824 B _72289 _72290) = (term818 B _72289 _72290).
Proof. exact (eq_refl (term824 B _72289 _72290)). Qed.
Lemma lem5741820 {B : Type'} (_72289 : type1400 B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term818 B _72289 _72290.
Proof. exact (EQ_MP (@lem5741819 B _72289 _72290) (@lem5741818 B _72289 _72290 y z x h1)). Qed.
Lemma lem5741821 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term825 B _72289 _72290 _72291.
Proof. exact (@lem5741820 B _72289 _72290 y z x h1 _72291). Qed.
Lemma lem5741822 {B : Type'} (_72291 : B) (_72289 : type1400 B) (_72290 : B) : (term825 B _72289 _72290 _72291) = (term816 B _72291 _72289 _72290).
Proof. exact (eq_refl (term825 B _72289 _72290 _72291)). Qed.
Lemma lem5741823 {B : Type'} (_72291 : B) (_72289 : type1400 B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term816 B _72291 _72289 _72290.
Proof. exact (EQ_MP (@lem5741822 B _72291 _72289 _72290) (@lem5741821 B _72289 _72290 _72291 y z x h1)). Qed.
Lemma lem5741824 {B : Type'} (_72291 : B) (_72289 : type1400 B) (_72290 : B) (_72292 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term826 B _72291 _72289 _72290 _72292.
Proof. exact (@lem5741823 B _72291 _72289 _72290 y z x h1 _72292). Qed.
Lemma lem5741825 {B : Type'} (_72291 : B) (_72292 : B) (_72289 : type1400 B) (_72290 : B) : (term826 B _72291 _72289 _72290 _72292) = (term814 B _72291 _72292 _72289 _72290).
Proof. exact (eq_refl (term826 B _72291 _72289 _72290 _72292)). Qed.
Lemma lem5741826 {B : Type'} (_72291 : B) (_72292 : B) (_72289 : type1400 B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term814 B _72291 _72292 _72289 _72290.
Proof. exact (EQ_MP (@lem5741825 B _72291 _72292 _72289 _72290) (@lem5741824 B _72291 _72289 _72290 _72292 y z x h1)). Qed.
Lemma lem5741827 {B : Type'} (_72291 : B) (_72292 : B) (_72289 : type1400 B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term812 B _72291 _72292 _72289 _72290.
Proof. exact (proj2 (@lem5741826 B _72291 _72292 _72289 _72290 y z x h1)). Qed.
Lemma lem5741840 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : term134 A B y'' op f x'' s) : term654 A B y'' op f x'' s.
Proof. exact (proj2 (@lem5741162 A B y'' op f x'' s h1)). Qed.
Lemma lem5741874 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term827 B _72289 _72291 _72290.
Proof. exact (proj1 (@lem5741826 B _72291 (@el B) _72289 _72290 y z x h1)). Qed.
Lemma lem5741880 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term828 B _72289 _72290 _72291 _72292.
Proof. exact (proj1 (@lem5741827 B _72291 _72292 _72289 _72290 y z x h1)). Qed.
Lemma lem5742033 {B : Type'} : (@I (B -> B)) = (@I (B -> B)).
Proof. exact (eq_refl (@I (B -> B))). Qed.
Lemma lem5742034 {B : Type'} (_72325 : B -> B) (_72327 : B -> B) (h1 : _72325 = _72327) : _72325 = _72327.
Proof. exact (h1). Qed.
Lemma lem5742035 {B : Type'} (_72326 : B) (_72328 : B) (h1 : _72326 = _72328) : _72326 = _72328.
Proof. exact (h1). Qed.
Lemma lem5742036 {B : Type'} (_72325 : B -> B) (_72327 : B -> B) (h1 : _72325 = _72327) : (@I (B -> B) _72325) = (@I (B -> B) _72327).
Proof. exact (MK_COMB (@lem5742033 B) (@lem5742034 B _72325 _72327 h1)). Qed.
Lemma lem5742037 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) (h1 : _72326 = _72328) (h2 : _72325 = _72327) : (@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328).
Proof. exact (MK_COMB (@lem5742036 B _72325 _72327 h2) (@lem5742035 B _72326 _72328 h1)). Qed.
Lemma lem5742038 {B : Type'} (_72325 : B -> B) (_72327 : B -> B) (_72326 : B) (_72328 : B) (h1 : _72326 = _72328) : term829 B _72325 _72326 _72327 _72328.
Proof. exact (fun h0 : _72325 = _72327 => @lem5742037 B _72326 _72328 _72325 _72327 h1 h0). Qed.
Lemma lem5742040 (a : Prop) (b : Prop) : (a -> b) = (term830 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5742041 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : (term829 B _72325 _72326 _72327 _72328) = (term831 B _72325 _72326 _72327 _72328).
Proof. exact (@lem5742040 (_72325 = _72327) ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328))). Qed.
Lemma lem5742042 {B : Type'} (_72325 : B -> B) (_72327 : B -> B) (_72326 : B) (_72328 : B) (h1 : _72326 = _72328) : term831 B _72325 _72326 _72327 _72328.
Proof. exact (EQ_MP (@lem5742041 B _72325 _72326 _72327 _72328) (@lem5742038 B _72325 _72327 _72326 _72328 h1)). Qed.
Lemma lem5742043 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : term832 B _72325 _72326 _72327 _72328.
Proof. exact (fun h0 : _72326 = _72328 => @lem5742042 B _72325 _72327 _72326 _72328 h0). Qed.
Lemma lem5742045 (a : Prop) (b : Prop) : (a -> b) = (term830 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem5742046 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : (term832 B _72325 _72326 _72327 _72328) = (term833 B _72325 _72326 _72327 _72328).
Proof. exact (@lem5742045 (_72326 = _72328) (term831 B _72325 _72326 _72327 _72328)). Qed.
Lemma lem5742047 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : term833 B _72325 _72326 _72327 _72328.
Proof. exact (EQ_MP (@lem5742046 B _72325 _72326 _72327 _72328) (@lem5742043 B _72325 _72326 _72327 _72328)). Qed.
Lemma lem5742049 {B : Type'} (x : B) (y : B) (z : B) : term834 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem5742071 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5740207 B op) (@lem5738642 B op h1)). Qed.
Lemma lem5742072 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term835 B op.
Proof. exact (fun h0 : term591 B op => @lem5742071 B op h1). Qed.
Lemma lem5742074 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742075 {B : Type'} (op : type1400 B) : (term835 B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5742074 (@I ((B -> B -> B) -> Prop) (@monoidal B) op)). Qed.
Lemma lem5742076 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5742075 B op) (@lem5742072 B op h1)). Qed.
Lemma lem5742082 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5742083 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : (term827 B _72289 _72291 _72290) = (term837 B _72291 _72290 _72289).
Proof. exact (@lem5742082 ((term562 B _72289 _72290 _72291) = (term562 B _72289 _72291 _72290)) (term591 B _72289)). Qed.
Lemma lem5742091 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5742092 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : (term838 B _72289 _72291 _72290) = (term839 B _72291 _72290 _72289).
Proof. exact (MK_COMB (@lem5742091) (@lem5742083 B _72291 _72290 _72289)). Qed.
Lemma lem5742100 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : (term837 B _72291 _72290 _72289) = (term837 B _72291 _72290 _72289).
Proof. exact (eq_refl (term837 B _72291 _72290 _72289)). Qed.
Lemma lem5742101 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : ((term827 B _72289 _72291 _72290) = (term837 B _72291 _72290 _72289)) = ((term837 B _72291 _72290 _72289) = (term837 B _72291 _72290 _72289)).
Proof. exact (MK_COMB (@lem5742092 B _72291 _72290 _72289) (@lem5742100 B _72291 _72290 _72289)). Qed.
Lemma lem5742103 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5742104 (x : Prop) : (x = x) = True.
Proof. exact (@lem5742103 Prop x). Qed.
Lemma lem5742105 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : ((term837 B _72291 _72290 _72289) = (term837 B _72291 _72290 _72289)) = True.
Proof. exact (@lem5742104 (term837 B _72291 _72290 _72289)). Qed.
Lemma lem5742106 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : ((term827 B _72289 _72291 _72290) = (term837 B _72291 _72290 _72289)) = True.
Proof. exact (TRANS (@lem5742101 B _72291 _72290 _72289) (@lem5742105 B _72291 _72290 _72289)). Qed.
Lemma lem5742107 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : True = ((term827 B _72289 _72291 _72290) = (term837 B _72291 _72290 _72289)).
Proof. exact (SYM (@lem5742106 B _72291 _72290 _72289)). Qed.
Lemma lem5742108 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) : (term827 B _72289 _72291 _72290) = (term837 B _72291 _72290 _72289).
Proof. exact (EQ_MP (@lem5742107 B _72291 _72290 _72289) (@lem0)). Qed.
Lemma lem5742109 {B : Type'} (_72291 : B) (_72290 : B) (_72289 : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term837 B _72291 _72290 _72289.
Proof. exact (EQ_MP (@lem5742108 B _72291 _72290 _72289) (@lem5741874 B _72289 _72291 _72290 y z x h1)). Qed.
Lemma lem5742111 (b : Prop) (a : Prop) : (a \/ b) = (term840 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5742112 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) : (term837 B _72291 _72290 _72289) = (term841 B _72289 _72291 _72290).
Proof. exact (@lem5742111 (term591 B _72289) ((term562 B _72289 _72290 _72291) = (term562 B _72289 _72291 _72290))). Qed.
Lemma lem5742114 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5742115 {B : Type'} (_72289 : type1400 B) : (term843 B _72289) = (@I ((B -> B -> B) -> Prop) (@monoidal B) _72289).
Proof. exact (@lem5742114 (@I ((B -> B -> B) -> Prop) (@monoidal B) _72289)). Qed.
Lemma lem5742116 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5742117 {B : Type'} (_72289 : type1400 B) : (term844 B _72289) = (term845 B _72289).
Proof. exact (MK_COMB (@lem5742116) (@lem5742115 B _72289)). Qed.
Lemma lem5742118 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) : ((term562 B _72289 _72290 _72291) = (term562 B _72289 _72291 _72290)) = ((term562 B _72289 _72290 _72291) = (term562 B _72289 _72291 _72290)).
Proof. exact (eq_refl ((term562 B _72289 _72290 _72291) = (term562 B _72289 _72291 _72290))). Qed.
Lemma lem5742119 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) : (term841 B _72289 _72291 _72290) = (term846 B _72289 _72291 _72290).
Proof. exact (MK_COMB (@lem5742117 B _72289) (@lem5742118 B _72289 _72291 _72290)). Qed.
Lemma lem5742120 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) : (term837 B _72291 _72290 _72289) = (term846 B _72289 _72291 _72290).
Proof. exact (TRANS (@lem5742112 B _72289 _72291 _72290) (@lem5742119 B _72289 _72291 _72290)). Qed.
Lemma lem5742123 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term846 B _72289 _72291 _72290.
Proof. exact (EQ_MP (@lem5742120 B _72289 _72291 _72290) (@lem5742109 B _72291 _72290 _72289 y z x h1)). Qed.
Lemma lem5742124 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term846 B _72289 _72291 _72290.
Proof. exact (@lem5742123 B _72289 _72291 _72290 y z x h1). Qed.
Lemma lem5742125 {B : Type'} (op : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term846 B op _72291 _72290.
Proof. exact (@lem5742124 B op _72291 _72290 y z x h1). Qed.
Lemma lem5742128 {B : Type'} (_72291 : B) (_72290 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term562 B op _72290 _72291) = (term562 B op _72291 _72290).
Proof. exact (@lem5742125 B op _72291 _72290 y z x h2 (@lem5742076 B op h1)). Qed.
Lemma lem5742129 {B : Type'} (_72291 : B) (_72290 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term562 B op _72290 _72291) = (term562 B op _72291 _72290).
Proof. exact (@lem5742128 B _72291 _72290 op y z x h1 h2). Qed.
Lemma lem5742130 {A B : Type'} (x'' : A) (f : A -> B) (y'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term847 A B op y'' s f x'') = (term652 A B x'' op f y'' s).
Proof. exact (@lem5742129 B (@I (A -> B) f x'') (term649 A B op f y'' s) op y z x h1 h2). Qed.
Lemma lem5742131 {A B : Type'} (x'' : A) (f : A -> B) (y'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term848 A B x'' op f y'' s.
Proof. exact (fun h0 : term849 A B x'' op f y'' s => @lem5742130 A B x'' f y'' s op y z x h1 h2). Qed.
Lemma lem5742133 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742134 {A B : Type'} (x'' : A) (op : type1400 B) (f : A -> B) (y'' : A) (s : B) : (term848 A B x'' op f y'' s) = ((term847 A B op y'' s f x'') = (term652 A B x'' op f y'' s)).
Proof. exact (@lem5742133 ((term847 A B op y'' s f x'') = (term652 A B x'' op f y'' s))). Qed.
Lemma lem5742135 {A B : Type'} (x'' : A) (f : A -> B) (y'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term847 A B op y'' s f x'') = (term652 A B x'' op f y'' s).
Proof. exact (EQ_MP (@lem5742134 A B x'' op f y'' s) (@lem5742131 A B x'' f y'' s op y z x h1 h2)). Qed.
Lemma lem5742137 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5740207 B op) (@lem5738642 B op h1)). Qed.
Lemma lem5742138 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term835 B op.
Proof. exact (fun h0 : term591 B op => @lem5742137 B op h1). Qed.
Lemma lem5742140 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742141 {B : Type'} (op : type1400 B) : (term835 B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5742140 (@I ((B -> B -> B) -> Prop) (@monoidal B) op)). Qed.
Lemma lem5742142 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5742141 B op) (@lem5742138 B op h1)). Qed.
Lemma lem5742148 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5742149 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : (term828 B _72289 _72290 _72291 _72292) = (term850 B _72290 _72291 _72292 _72289).
Proof. exact (@lem5742148 ((term565 B _72290 _72289 _72291 _72292) = (term571 B _72289 _72290 _72291 _72292)) (term591 B _72289)). Qed.
Lemma lem5742157 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5742158 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : (term851 B _72289 _72290 _72291 _72292) = (term852 B _72290 _72291 _72292 _72289).
Proof. exact (MK_COMB (@lem5742157) (@lem5742149 B _72290 _72291 _72292 _72289)). Qed.
Lemma lem5742166 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : (term850 B _72290 _72291 _72292 _72289) = (term850 B _72290 _72291 _72292 _72289).
Proof. exact (eq_refl (term850 B _72290 _72291 _72292 _72289)). Qed.
Lemma lem5742167 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : ((term828 B _72289 _72290 _72291 _72292) = (term850 B _72290 _72291 _72292 _72289)) = ((term850 B _72290 _72291 _72292 _72289) = (term850 B _72290 _72291 _72292 _72289)).
Proof. exact (MK_COMB (@lem5742158 B _72290 _72291 _72292 _72289) (@lem5742166 B _72290 _72291 _72292 _72289)). Qed.
Lemma lem5742169 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5742170 (x : Prop) : (x = x) = True.
Proof. exact (@lem5742169 Prop x). Qed.
Lemma lem5742171 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : ((term850 B _72290 _72291 _72292 _72289) = (term850 B _72290 _72291 _72292 _72289)) = True.
Proof. exact (@lem5742170 (term850 B _72290 _72291 _72292 _72289)). Qed.
Lemma lem5742172 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : ((term828 B _72289 _72290 _72291 _72292) = (term850 B _72290 _72291 _72292 _72289)) = True.
Proof. exact (TRANS (@lem5742167 B _72290 _72291 _72292 _72289) (@lem5742171 B _72290 _72291 _72292 _72289)). Qed.
Lemma lem5742173 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : True = ((term828 B _72289 _72290 _72291 _72292) = (term850 B _72290 _72291 _72292 _72289)).
Proof. exact (SYM (@lem5742172 B _72290 _72291 _72292 _72289)). Qed.
Lemma lem5742174 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) : (term828 B _72289 _72290 _72291 _72292) = (term850 B _72290 _72291 _72292 _72289).
Proof. exact (EQ_MP (@lem5742173 B _72290 _72291 _72292 _72289) (@lem0)). Qed.
Lemma lem5742175 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (_72289 : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term850 B _72290 _72291 _72292 _72289.
Proof. exact (EQ_MP (@lem5742174 B _72290 _72291 _72292 _72289) (@lem5741880 B _72289 _72290 _72291 _72292 y z x h1)). Qed.
Lemma lem5742177 (b : Prop) (a : Prop) : (a \/ b) = (term840 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5742178 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) : (term850 B _72290 _72291 _72292 _72289) = (term853 B _72289 _72290 _72291 _72292).
Proof. exact (@lem5742177 (term591 B _72289) ((term565 B _72290 _72289 _72291 _72292) = (term571 B _72289 _72290 _72291 _72292))). Qed.
Lemma lem5742180 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5742181 {B : Type'} (_72289 : type1400 B) : (term843 B _72289) = (@I ((B -> B -> B) -> Prop) (@monoidal B) _72289).
Proof. exact (@lem5742180 (@I ((B -> B -> B) -> Prop) (@monoidal B) _72289)). Qed.
Lemma lem5742182 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5742183 {B : Type'} (_72289 : type1400 B) : (term844 B _72289) = (term845 B _72289).
Proof. exact (MK_COMB (@lem5742182) (@lem5742181 B _72289)). Qed.
Lemma lem5742184 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) : ((term565 B _72290 _72289 _72291 _72292) = (term571 B _72289 _72290 _72291 _72292)) = ((term565 B _72290 _72289 _72291 _72292) = (term571 B _72289 _72290 _72291 _72292)).
Proof. exact (eq_refl ((term565 B _72290 _72289 _72291 _72292) = (term571 B _72289 _72290 _72291 _72292))). Qed.
Lemma lem5742185 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) : (term853 B _72289 _72290 _72291 _72292) = (term854 B _72289 _72290 _72291 _72292).
Proof. exact (MK_COMB (@lem5742183 B _72289) (@lem5742184 B _72289 _72290 _72291 _72292)). Qed.
Lemma lem5742186 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) : (term850 B _72290 _72291 _72292 _72289) = (term854 B _72289 _72290 _72291 _72292).
Proof. exact (TRANS (@lem5742178 B _72289 _72290 _72291 _72292) (@lem5742185 B _72289 _72290 _72291 _72292)). Qed.
Lemma lem5742189 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term854 B _72289 _72290 _72291 _72292.
Proof. exact (EQ_MP (@lem5742186 B _72289 _72290 _72291 _72292) (@lem5742175 B _72290 _72291 _72292 _72289 y z x h1)). Qed.
Lemma lem5742190 {B : Type'} (_72289 : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term854 B _72289 _72290 _72291 _72292.
Proof. exact (@lem5742189 B _72289 _72290 _72291 _72292 y z x h1). Qed.
Lemma lem5742191 {B : Type'} (op : type1400 B) (_72290 : B) (_72291 : B) (_72292 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term854 B op _72290 _72291 _72292.
Proof. exact (@lem5742190 B op _72290 _72291 _72292 y z x h1). Qed.
Lemma lem5742194 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term565 B _72290 op _72291 _72292) = (term571 B op _72290 _72291 _72292).
Proof. exact (@lem5742191 B op _72290 _72291 _72292 y z x h2 (@lem5742142 B op h1)). Qed.
Lemma lem5742195 {B : Type'} (_72290 : B) (_72291 : B) (_72292 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term565 B _72290 op _72291 _72292) = (term571 B op _72290 _72291 _72292).
Proof. exact (@lem5742194 B _72290 _72291 _72292 op y z x h1 h2). Qed.
Lemma lem5742196 {A B : Type'} (y'' : A) (s : B) (f : A -> B) (x'' : A) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term855 A B y'' op s f x'') = (term847 A B op y'' s f x'').
Proof. exact (@lem5742195 B (@I (A -> B) f y'') s (@I (A -> B) f x'') op y z x h1 h2). Qed.
Lemma lem5742197 {A B : Type'} (y'' : A) (s : B) (f : A -> B) (x'' : A) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term856 A B op y'' s f x''.
Proof. exact (fun h0 : term857 A B op y'' s f x'' => @lem5742196 A B y'' s f x'' op y z x h1 h2). Qed.
Lemma lem5742199 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742200 {A B : Type'} (op : type1400 B) (y'' : A) (s : B) (f : A -> B) (x'' : A) : (term856 A B op y'' s f x'') = ((term855 A B y'' op s f x'') = (term847 A B op y'' s f x'')).
Proof. exact (@lem5742199 ((term855 A B y'' op s f x'') = (term847 A B op y'' s f x''))). Qed.
Lemma lem5742201 {A B : Type'} (y'' : A) (s : B) (f : A -> B) (x'' : A) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term855 A B y'' op s f x'') = (term847 A B op y'' s f x'').
Proof. exact (EQ_MP (@lem5742200 A B op y'' s f x'') (@lem5742197 A B y'' s f x'' op y z x h1 h2)). Qed.
Lemma lem5742203 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5740207 B op) (@lem5738642 B op h1)). Qed.
Lemma lem5742204 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term835 B op.
Proof. exact (fun h0 : term591 B op => @lem5742203 B op h1). Qed.
Lemma lem5742206 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742207 {B : Type'} (op : type1400 B) : (term835 B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5742206 (@I ((B -> B -> B) -> Prop) (@monoidal B) op)). Qed.
Lemma lem5742208 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5742207 B op) (@lem5742204 B op h1)). Qed.
Lemma lem5742210 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term846 B _72289 _72291 _72290.
Proof. exact (EQ_MP (@lem5742120 B _72289 _72291 _72290) (@lem5742109 B _72291 _72290 _72289 y z x h1)). Qed.
Lemma lem5742211 {B : Type'} (_72289 : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term846 B _72289 _72291 _72290.
Proof. exact (@lem5742210 B _72289 _72291 _72290 y z x h1). Qed.
Lemma lem5742212 {B : Type'} (op : type1400 B) (_72291 : B) (_72290 : B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term544 B y z x) : term846 B op _72291 _72290.
Proof. exact (@lem5742211 B op _72291 _72290 y z x h1). Qed.
Lemma lem5742215 {B : Type'} (_72291 : B) (_72290 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term562 B op _72290 _72291) = (term562 B op _72291 _72290).
Proof. exact (@lem5742212 B op _72291 _72290 y z x h2 (@lem5742208 B op h1)). Qed.
Lemma lem5742216 {B : Type'} (_72291 : B) (_72290 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term562 B op _72290 _72291) = (term562 B op _72291 _72290).
Proof. exact (@lem5742215 B _72291 _72290 op y z x h1 h2). Qed.
Lemma lem5742217 {A B : Type'} (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term858 A B op s f x'') = (term649 A B op f x'' s).
Proof. exact (@lem5742216 B (@I (A -> B) f x'') s op y z x h1 h2). Qed.
Lemma lem5742218 {A B : Type'} (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term859 A B op f x'' s.
Proof. exact (fun h0 : term860 A B op f x'' s => @lem5742217 A B f x'' s op y z x h1 h2). Qed.
Lemma lem5742220 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742221 {A B : Type'} (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term859 A B op f x'' s) = ((term858 A B op s f x'') = (term649 A B op f x'' s)).
Proof. exact (@lem5742220 ((term858 A B op s f x'') = (term649 A B op f x'' s))). Qed.
Lemma lem5742222 {A B : Type'} (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term858 A B op s f x'') = (term649 A B op f x'' s).
Proof. exact (EQ_MP (@lem5742221 A B op f x'' s) (@lem5742218 A B f x'' s op y z x h1 h2)). Qed.
Lemma lem5742224 {B : Type'} (x : B -> B) : x = x.
Proof. exact (@lem21386 (B -> B) x). Qed.
Lemma lem5742225 {B : Type'} (x : B -> B) : x = x.
Proof. exact (@lem5742224 B x). Qed.
Lemma lem5742226 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term647 A B op f y'') = (term647 A B op f y'').
Proof. exact (@lem5742225 B (term647 A B op f y'')). Qed.
Lemma lem5742227 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : term861 A B op f y''.
Proof. exact (fun h0 : term862 A B op f y'' => @lem5742226 A B op f y''). Qed.
Lemma lem5742229 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742230 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term861 A B op f y'') = ((term647 A B op f y'') = (term647 A B op f y'')).
Proof. exact (@lem5742229 ((term647 A B op f y'') = (term647 A B op f y''))). Qed.
Lemma lem5742231 {A B : Type'} (op : type1400 B) (f : A -> B) (y'' : A) : (term647 A B op f y'') = (term647 A B op f y'').
Proof. exact (EQ_MP (@lem5742230 A B op f y'') (@lem5742227 A B op f y'')). Qed.
Lemma lem5742249 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5742250 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term831 B _72325 _72326 _72327 _72328) = (term863 B _72326 _72328 _72325 _72327).
Proof. exact (@lem5742249 ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328)) (term864 B _72325 _72327)). Qed.
Lemma lem5742260 {B : Type'} (_72326 : B) (_72328 : B) : (term865 B _72326 _72328) = (term865 B _72326 _72328).
Proof. exact (eq_refl (term865 B _72326 _72328)). Qed.
Lemma lem5742261 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term833 B _72325 _72326 _72327 _72328) = (term866 B _72326 _72328 _72325 _72327).
Proof. exact (MK_COMB (@lem5742260 B _72326 _72328) (@lem5742250 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742265 (q : Prop) (p : Prop) (r : Prop) : (term867 p q r) = (term867 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5742266 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term866 B _72326 _72328 _72325 _72327) = (term868 B _72326 _72328 _72325 _72327).
Proof. exact (@lem5742265 ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328)) (term135 B _72326 _72328) (term864 B _72325 _72327)). Qed.
Lemma lem5742288 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term833 B _72325 _72326 _72327 _72328) = (term868 B _72326 _72328 _72325 _72327).
Proof. exact (TRANS (@lem5742261 B _72326 _72328 _72325 _72327) (@lem5742266 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742289 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5742290 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term869 B _72325 _72326 _72327 _72328) = (term870 B _72326 _72328 _72325 _72327).
Proof. exact (MK_COMB (@lem5742289) (@lem5742288 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742312 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term868 B _72326 _72328 _72325 _72327) = (term868 B _72326 _72328 _72325 _72327).
Proof. exact (eq_refl (term868 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742313 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : ((term833 B _72325 _72326 _72327 _72328) = (term868 B _72326 _72328 _72325 _72327)) = ((term868 B _72326 _72328 _72325 _72327) = (term868 B _72326 _72328 _72325 _72327)).
Proof. exact (MK_COMB (@lem5742290 B _72326 _72328 _72325 _72327) (@lem5742312 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742315 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5742316 (x : Prop) : (x = x) = True.
Proof. exact (@lem5742315 Prop x). Qed.
Lemma lem5742317 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : ((term868 B _72326 _72328 _72325 _72327) = (term868 B _72326 _72328 _72325 _72327)) = True.
Proof. exact (@lem5742316 (term868 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742318 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : ((term833 B _72325 _72326 _72327 _72328) = (term868 B _72326 _72328 _72325 _72327)) = True.
Proof. exact (TRANS (@lem5742313 B _72326 _72328 _72325 _72327) (@lem5742317 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742319 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : True = ((term833 B _72325 _72326 _72327 _72328) = (term868 B _72326 _72328 _72325 _72327)).
Proof. exact (SYM (@lem5742318 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742320 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term833 B _72325 _72326 _72327 _72328) = (term868 B _72326 _72328 _72325 _72327).
Proof. exact (EQ_MP (@lem5742319 B _72326 _72328 _72325 _72327) (@lem0)). Qed.
Lemma lem5742321 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : term868 B _72326 _72328 _72325 _72327.
Proof. exact (EQ_MP (@lem5742320 B _72326 _72328 _72325 _72327) (@lem5742047 B _72325 _72326 _72327 _72328)). Qed.
Lemma lem5742323 (b : Prop) (a : Prop) : (a \/ b) = (term840 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5742324 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : (term868 B _72326 _72328 _72325 _72327) = (term871 B _72325 _72326 _72327 _72328).
Proof. exact (@lem5742323 (term872 B _72326 _72328 _72325 _72327) ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328))). Qed.
Lemma lem5742326 (a : Prop) (b : Prop) : (term873 a b) = (term874 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5742327 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term875 B _72326 _72328 _72325 _72327) = (term876 B _72326 _72328 _72325 _72327).
Proof. exact (@lem5742326 (term135 B _72326 _72328) (term864 B _72325 _72327)). Qed.
Lemma lem5742329 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5742330 {B : Type'} (_72326 : B) (_72328 : B) : (term877 B _72326 _72328) = (_72326 = _72328).
Proof. exact (@lem5742329 (_72326 = _72328)). Qed.
Lemma lem5742331 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5742332 {B : Type'} (_72326 : B) (_72328 : B) : (term878 B _72326 _72328) = (term879 B _72326 _72328).
Proof. exact (MK_COMB (@lem5742331) (@lem5742330 B _72326 _72328)). Qed.
Lemma lem5742334 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5742335 {B : Type'} (_72325 : B -> B) (_72327 : B -> B) : (term880 B _72325 _72327) = (_72325 = _72327).
Proof. exact (@lem5742334 (_72325 = _72327)). Qed.
Lemma lem5742336 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term876 B _72326 _72328 _72325 _72327) = (term881 B _72326 _72328 _72325 _72327).
Proof. exact (MK_COMB (@lem5742332 B _72326 _72328) (@lem5742335 B _72325 _72327)). Qed.
Lemma lem5742337 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term875 B _72326 _72328 _72325 _72327) = (term881 B _72326 _72328 _72325 _72327).
Proof. exact (TRANS (@lem5742327 B _72326 _72328 _72325 _72327) (@lem5742336 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742338 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5742339 {B : Type'} (_72326 : B) (_72328 : B) (_72325 : B -> B) (_72327 : B -> B) : (term882 B _72326 _72328 _72325 _72327) = (term883 B _72326 _72328 _72325 _72327).
Proof. exact (MK_COMB (@lem5742338) (@lem5742337 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742340 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328)) = ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328)).
Proof. exact (eq_refl ((@I (B -> B) _72325 _72326) = (@I (B -> B) _72327 _72328))). Qed.
Lemma lem5742341 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : (term871 B _72325 _72326 _72327 _72328) = (term884 B _72325 _72326 _72327 _72328).
Proof. exact (MK_COMB (@lem5742339 B _72326 _72328 _72325 _72327) (@lem5742340 B _72325 _72326 _72327 _72328)). Qed.
Lemma lem5742342 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : (term868 B _72326 _72328 _72325 _72327) = (term884 B _72325 _72326 _72327 _72328).
Proof. exact (TRANS (@lem5742324 B _72325 _72326 _72327 _72328) (@lem5742341 B _72325 _72326 _72327 _72328)). Qed.
Lemma lem5742344 {A B : Type'} (x'' : A) (s : B) (f : A -> B) (y'' : A) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term885 A B x'' s op f y''.
Proof. exact (conj (@lem5742222 A B f x'' s op y z x h1 h2) (@lem5742231 A B op f y'')). Qed.
Lemma lem5742346 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : term884 B _72325 _72326 _72327 _72328.
Proof. exact (EQ_MP (@lem5742342 B _72325 _72326 _72327 _72328) (@lem5742321 B _72326 _72328 _72325 _72327)). Qed.
Lemma lem5742347 {B : Type'} (_72325 : B -> B) (_72326 : B) (_72327 : B -> B) (_72328 : B) : term884 B _72325 _72326 _72327 _72328.
Proof. exact (@lem5742346 B _72325 _72326 _72327 _72328). Qed.
Lemma lem5742348 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : term886 A B y'' op f x'' s.
Proof. exact (@lem5742347 B (term647 A B op f y'') (term858 A B op s f x'') (term647 A B op f y'') (term649 A B op f x'' s)). Qed.
Lemma lem5742351 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term855 A B y'' op s f x'') = (term652 A B y'' op f x'' s).
Proof. exact (@lem5742348 A B y'' op f x'' s (@lem5742344 A B x'' s f y'' op y z x h1 h2)). Qed.
Lemma lem5742352 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term855 A B y'' op s f x'') = (term652 A B y'' op f x'' s).
Proof. exact (@lem5742351 A B y'' f x'' s op y z x h1 h2). Qed.
Lemma lem5742353 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term887 A B y'' op f x'' s.
Proof. exact (fun h0 : term888 A B y'' op f x'' s => @lem5742352 A B y'' f x'' s op y z x h1 h2). Qed.
Lemma lem5742355 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742356 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term887 A B y'' op f x'' s) = ((term855 A B y'' op s f x'') = (term652 A B y'' op f x'' s)).
Proof. exact (@lem5742355 ((term855 A B y'' op s f x'') = (term652 A B y'' op f x'' s))). Qed.
Lemma lem5742357 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term855 A B y'' op s f x'') = (term652 A B y'' op f x'' s).
Proof. exact (EQ_MP (@lem5742356 A B y'' op f x'' s) (@lem5742353 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742375 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5742376 {B : Type'} (y : B) (x : B) (z : B) : (term889 B x y z) = (term890 B y x z).
Proof. exact (@lem5742375 (y = z) (term135 B x z)). Qed.
Lemma lem5742386 {B : Type'} (x : B) (y : B) : (term865 B x y) = (term865 B x y).
Proof. exact (eq_refl (term865 B x y)). Qed.
Lemma lem5742387 {B : Type'} (y : B) (x : B) (z : B) : (term834 B x y z) = (term891 B y x z).
Proof. exact (MK_COMB (@lem5742386 B x y) (@lem5742376 B y x z)). Qed.
Lemma lem5742391 (q : Prop) (p : Prop) (r : Prop) : (term867 p q r) = (term867 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5742392 {B : Type'} (y : B) (x : B) (z : B) : (term891 B y x z) = (term892 B y x z).
Proof. exact (@lem5742391 (y = z) (term135 B x y) (term135 B x z)). Qed.
Lemma lem5742414 {B : Type'} (y : B) (x : B) (z : B) : (term834 B x y z) = (term892 B y x z).
Proof. exact (TRANS (@lem5742387 B y x z) (@lem5742392 B y x z)). Qed.
Lemma lem5742415 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5742416 {B : Type'} (y : B) (x : B) (z : B) : (term893 B x y z) = (term894 B y x z).
Proof. exact (MK_COMB (@lem5742415) (@lem5742414 B y x z)). Qed.
Lemma lem5742438 {B : Type'} (y : B) (x : B) (z : B) : (term892 B y x z) = (term892 B y x z).
Proof. exact (eq_refl (term892 B y x z)). Qed.
Lemma lem5742439 {B : Type'} (y : B) (x : B) (z : B) : ((term834 B x y z) = (term892 B y x z)) = ((term892 B y x z) = (term892 B y x z)).
Proof. exact (MK_COMB (@lem5742416 B y x z) (@lem5742438 B y x z)). Qed.
Lemma lem5742441 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5742442 (x : Prop) : (x = x) = True.
Proof. exact (@lem5742441 Prop x). Qed.
Lemma lem5742443 {B : Type'} (y : B) (x : B) (z : B) : ((term892 B y x z) = (term892 B y x z)) = True.
Proof. exact (@lem5742442 (term892 B y x z)). Qed.
Lemma lem5742444 {B : Type'} (y : B) (x : B) (z : B) : ((term834 B x y z) = (term892 B y x z)) = True.
Proof. exact (TRANS (@lem5742439 B y x z) (@lem5742443 B y x z)). Qed.
Lemma lem5742445 {B : Type'} (y : B) (x : B) (z : B) : True = ((term834 B x y z) = (term892 B y x z)).
Proof. exact (SYM (@lem5742444 B y x z)). Qed.
Lemma lem5742446 {B : Type'} (y : B) (x : B) (z : B) : (term834 B x y z) = (term892 B y x z).
Proof. exact (EQ_MP (@lem5742445 B y x z) (@lem0)). Qed.
Lemma lem5742447 {B : Type'} (y : B) (x : B) (z : B) : term892 B y x z.
Proof. exact (EQ_MP (@lem5742446 B y x z) (@lem5742049 B x y z)). Qed.
Lemma lem5742449 (b : Prop) (a : Prop) : (a \/ b) = (term840 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5742450 {B : Type'} (x : B) (y : B) (z : B) : (term892 B y x z) = (term895 B x y z).
Proof. exact (@lem5742449 (term896 B y x z) (y = z)). Qed.
Lemma lem5742452 (a : Prop) (b : Prop) : (term873 a b) = (term874 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5742453 {B : Type'} (y : B) (x : B) (z : B) : (term897 B y x z) = (term898 B y x z).
Proof. exact (@lem5742452 (term135 B x y) (term135 B x z)). Qed.
Lemma lem5742455 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5742456 {B : Type'} (x : B) (y : B) : (term877 B x y) = (x = y).
Proof. exact (@lem5742455 (x = y)). Qed.
Lemma lem5742457 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5742458 {B : Type'} (x : B) (y : B) : (term878 B x y) = (term879 B x y).
Proof. exact (MK_COMB (@lem5742457) (@lem5742456 B x y)). Qed.
Lemma lem5742460 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5742461 {B : Type'} (x : B) (z : B) : (term877 B x z) = (x = z).
Proof. exact (@lem5742460 (x = z)). Qed.
Lemma lem5742462 {B : Type'} (y : B) (x : B) (z : B) : (term898 B y x z) = (term899 B y x z).
Proof. exact (MK_COMB (@lem5742458 B x y) (@lem5742461 B x z)). Qed.
Lemma lem5742463 {B : Type'} (y : B) (x : B) (z : B) : (term897 B y x z) = (term899 B y x z).
Proof. exact (TRANS (@lem5742453 B y x z) (@lem5742462 B y x z)). Qed.
Lemma lem5742464 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5742465 {B : Type'} (y : B) (x : B) (z : B) : (term900 B y x z) = (term901 B y x z).
Proof. exact (MK_COMB (@lem5742464) (@lem5742463 B y x z)). Qed.
Lemma lem5742466 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem5742467 {B : Type'} (x : B) (y : B) (z : B) : (term895 B x y z) = (term902 B x y z).
Proof. exact (MK_COMB (@lem5742465 B y x z) (@lem5742466 B y z)). Qed.
Lemma lem5742468 {B : Type'} (x : B) (y : B) (z : B) : (term892 B y x z) = (term902 B x y z).
Proof. exact (TRANS (@lem5742450 B x y z) (@lem5742467 B x y z)). Qed.
Lemma lem5742470 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term903 A B y'' op f x'' s.
Proof. exact (conj (@lem5742201 A B y'' s f x'' op y z x h1 h2) (@lem5742357 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742472 {B : Type'} (x : B) (y : B) (z : B) : term902 B x y z.
Proof. exact (EQ_MP (@lem5742468 B x y z) (@lem5742447 B y x z)). Qed.
Lemma lem5742473 {B : Type'} (x : B) (y : B) (z : B) : term902 B x y z.
Proof. exact (@lem5742472 B x y z). Qed.
Lemma lem5742474 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : term904 A B y'' op f x'' s.
Proof. exact (@lem5742473 B (term855 A B y'' op s f x'') (term847 A B op y'' s f x'') (term652 A B y'' op f x'' s)). Qed.
Lemma lem5742477 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term847 A B op y'' s f x'') = (term652 A B y'' op f x'' s).
Proof. exact (@lem5742474 A B y'' op f x'' s (@lem5742470 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742478 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term847 A B op y'' s f x'') = (term652 A B y'' op f x'' s).
Proof. exact (@lem5742477 A B y'' f x'' s op y z x h1 h2). Qed.
Lemma lem5742479 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term905 A B y'' op f x'' s.
Proof. exact (fun h0 : term906 A B y'' op f x'' s => @lem5742478 A B y'' f x'' s op y z x h1 h2). Qed.
Lemma lem5742481 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742482 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term905 A B y'' op f x'' s) = ((term847 A B op y'' s f x'') = (term652 A B y'' op f x'' s)).
Proof. exact (@lem5742481 ((term847 A B op y'' s f x'') = (term652 A B y'' op f x'' s))). Qed.
Lemma lem5742483 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term847 A B op y'' s f x'') = (term652 A B y'' op f x'' s).
Proof. exact (EQ_MP (@lem5742482 A B y'' op f x'' s) (@lem5742479 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742484 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term907 A B y'' op f x'' s.
Proof. exact (conj (@lem5742135 A B x'' f y'' s op y z x h1 h2) (@lem5742483 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742486 {B : Type'} (x : B) (y : B) (z : B) : term902 B x y z.
Proof. exact (EQ_MP (@lem5742468 B x y z) (@lem5742447 B y x z)). Qed.
Lemma lem5742487 {B : Type'} (x : B) (y : B) (z : B) : term902 B x y z.
Proof. exact (@lem5742486 B x y z). Qed.
Lemma lem5742488 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : term908 A B y'' op f x'' s.
Proof. exact (@lem5742487 B (term847 A B op y'' s f x'') (term652 A B x'' op f y'' s) (term652 A B y'' op f x'' s)). Qed.
Lemma lem5742491 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s).
Proof. exact (@lem5742488 A B y'' op f x'' s (@lem5742484 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742492 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s).
Proof. exact (@lem5742491 A B y'' f x'' s op y z x h1 h2). Qed.
Lemma lem5742493 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : term909 A B y'' op f x'' s.
Proof. exact (fun h0 : term654 A B y'' op f x'' s => @lem5742492 A B y'' f x'' s op y z x h1 h2). Qed.
Lemma lem5742495 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742496 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term909 A B y'' op f x'' s) = ((term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s)).
Proof. exact (@lem5742495 ((term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s))). Qed.
Lemma lem5742497 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (s : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x) : (term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s).
Proof. exact (EQ_MP (@lem5742496 A B y'' op f x'' s) (@lem5742493 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742500 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5742502 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) : (term654 A B y'' op f x'' s) = (term910 A B y'' op f x'' s).
Proof. exact (@lem5742500 ((term652 A B x'' op f y'' s) = (term652 A B y'' op f x'' s))). Qed.
Lemma lem5742505 {A B : Type'} (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : term134 A B y'' op f x'' s) : term910 A B y'' op f x'' s.
Proof. exact (EQ_MP (@lem5742502 A B y'' op f x'' s) (@lem5741840 A B y'' op f x'' s h1)). Qed.
Lemma lem5742508 {A B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : @monoidal B op) (h2 : term544 B y z x) (h3 : term134 A B y'' op f x'' s) : False.
Proof. exact (@lem5742505 A B y'' op f x'' s h3 (@lem5742497 A B y'' f x'' s op y z x h1 h2)). Qed.
Lemma lem5742509 {A B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : @monoidal B op) (h2 : term544 B y z x) (h3 : term134 A B y'' op f x'' s) : term911.
Proof. exact (fun h0 : ~ False => @lem5742508 A B y z x y'' op f x'' s h1 h2 h3). Qed.
Lemma lem5742511 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5742512 : term911 = False.
Proof. exact (@lem5742511 False). Qed.
Lemma lem5742513 {A B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (y'' : A) (op : type1400 B) (f : A -> B) (x'' : A) (s : B) (h1 : @monoidal B op) (h2 : term544 B y z x) (h3 : term134 A B y'' op f x'' s) : False.
Proof. exact (EQ_MP (@lem5742512) (@lem5742509 A B y z x y'' op f x'' s h1 h2 h3)). Qed.
Lemma lem5742514 {A B : Type'} (y'' : A) (f : A -> B) (x'' : A) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term144 A B y'' op f x'') (h2 : @monoidal B op) (h3 : term544 B y z x) : False.
Proof. exact (ex_elim (@lem5740198 A B y'' op f x'' h1) (fun s : B => fun h0 : term143 A B y'' op f x'' s => @lem5742513 A B y z x y'' op f x'' s h2 h3 h0)). Qed.
Lemma lem5742515 {A B : Type'} (f : A -> B) (x'' : A) (op : type1400 B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term151 A B op f x'') (h2 : @monoidal B op) (h3 : term544 B y z x) : False.
Proof. exact (ex_elim (@lem5740197 A B op f x'' h1) (fun y'' : A => fun h0 : term150 A B op f x'' y'' => @lem5742514 A B y'' f x'' op y z x h0 h2 h3)). Qed.
Lemma lem5742516 {A B : Type'} (op : type1400 B) (f : A -> B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : @monoidal B op) (h2 : term104 A B op f) (h3 : term544 B y z x) : False.
Proof. exact (ex_elim (@lem5738798 A B op f h2) (fun x'' : A => fun h0 : term156 A B op f x'' => @lem5742515 A B f x'' op y z x h0 h1 h3)). Qed.
Lemma lem5742517 {A B : Type'} (y' : type402 A) (x' : type402 A) (op : type1400 B) (f : A -> B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term547 A y' x') (h2 : @monoidal B op) (h3 : term104 A B op f) (h4 : term544 B y z x) : False.
Proof. exact (ex_elim (@lem5740195 A y' x' h1) (fun z' : type402 A => fun h0 : term546 A y' x' z' => @lem5742516 A B op f y z x h2 h3 h4)). Qed.
Lemma lem5742518 {A B : Type'} (x' : type402 A) (op : type1400 B) (f : A -> B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term549 A x') (h2 : @monoidal B op) (h3 : term104 A B op f) (h4 : term544 B y z x) : False.
Proof. exact (ex_elim (@lem5740194 A x' h1) (fun y' : type402 A => fun h0 : term548 A x' y' => @lem5742517 A B y' x' op f y z x h0 h2 h3 h4)). Qed.
Lemma lem5742519 {A B : Type'} (op : type1400 B) (f : A -> B) (y : type402 B) (z : type402 B) (x : type402 B) (h1 : term57 A) (h2 : @monoidal B op) (h3 : term104 A B op f) (h4 : term544 B y z x) : False.
Proof. exact (ex_elim (@lem5739494 A h1) (fun x' : type402 A => fun h0 : term550 A x' => @lem5742518 A B x' op f y z x h0 h2 h3 h4)). Qed.
Lemma lem5742520 {A B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : term547 B y x) (h3 : @monoidal B op) (h4 : term104 A B op f) : False.
Proof. exact (ex_elim (@lem5740192 B y x h2) (fun z : type402 B => fun h0 : term546 B y x z => @lem5742519 A B op f y z x h1 h3 h4 h0)). Qed.
Lemma lem5742521 {A B : Type'} (x : type402 B) (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : term549 B x) (h3 : @monoidal B op) (h4 : term104 A B op f) : False.
Proof. exact (ex_elim (@lem5740191 B x h2) (fun y : type402 B => fun h0 : term548 B x y => @lem5742520 A B y x op f h1 h0 h3 h4)). Qed.
Lemma lem5742522 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : term57 B) (h3 : @monoidal B op) (h4 : term104 A B op f) : False.
Proof. exact (ex_elim (@lem5740190 B h2) (fun x : type402 B => fun h0 : term550 B x => @lem5742521 A B x op f h1 h0 h3 h4)). Qed.
Lemma lem5742523 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : term57 B) (h3 : @monoidal B op) (h4 : term104 A B op f) : (@monoidal B op) = False.
Proof. exact (prop_ext (fun h5 : @monoidal B op => @lem5742522 A B op f h1 h2 h3 h4) (fun h5 : False => @lem5738642 B op h3)). Qed.
Lemma lem5742524 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : term57 B) (h3 : @monoidal B op) (h4 : term104 A B op f) : False.
Proof. exact (EQ_MP (@lem5742523 A B op f h1 h2 h3 h4) (@lem5738642 B op h3)). Qed.
Lemma lem5742525 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : @monoidal B op) (h3 : term104 A B op f) : term62 B.
Proof. exact (fun h0 : term57 B => @lem5742524 A B op f h1 h0 h2 h3). Qed.
Lemma lem5742526 {B : Type'} : (term62 B) = (term63 B).
Proof. exact (@lem69 (term57 B)). Qed.
Lemma lem5742527 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : term57 A) (h2 : @monoidal B op) (h3 : term104 A B op f) : term63 B.
Proof. exact (EQ_MP (@lem5742526 B) (@lem5742525 A B op f h1 h2 h3)). Qed.
Lemma lem5742528 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : @monoidal B op) (h2 : term104 A B op f) : term66 A B.
Proof. exact (fun h0 : term57 A => @lem5742527 A B op f h0 h1 h2). Qed.
Lemma lem5742529 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term106 A B op f.
Proof. exact (fun h0 : term104 A B op f => @lem5742528 A B op f h1 h0). Qed.
Lemma lem5742530 {A B : Type'} (op : type1400 B) (f : A -> B) : term107 A B op f.
Proof. exact (fun h0 : @monoidal B op => @lem5742529 A B f op h0). Qed.
Lemma lem5742535 {A B : Type'} (f : A -> B) : term109 A B f.
Proof. exact (fun op : type1400 B => @lem5742530 A B op f). Qed.
Lemma lem5742540 {A B : Type'} : term111 A B.
Proof. exact (fun f : A -> B => @lem5742535 A B f). Qed.
Lemma lem5742541 {A B : Type'} : term78 A B.
Proof. exact (EQ_MP (@lem5738632 A B) (@lem5742540 A B)). Qed.
Lemma lem5742542 {A B : Type'} (f : A -> B) : term912 A B f.
Proof. exact (@lem5742541 A B f). Qed.
Lemma lem5742543 {A B : Type'} (f : A -> B) : (term912 A B f) = (term74 A B f).
Proof. exact (eq_refl (term912 A B f)). Qed.
Lemma lem5742544 {A B : Type'} (f : A -> B) : term74 A B f.
Proof. exact (EQ_MP (@lem5742543 A B f) (@lem5742542 A B f)). Qed.
Lemma lem5742545 {A B : Type'} (f : A -> B) (op : type1400 B) : term913 A B f op.
Proof. exact (@lem5742544 A B f op). Qed.
Lemma lem5742546 {A B : Type'} (op : type1400 B) (f : A -> B) : (term913 A B f op) = (term58 A B op f).
Proof. exact (eq_refl (term913 A B f op)). Qed.
Lemma lem5742547 {A B : Type'} (op : type1400 B) (f : A -> B) : term58 A B op f.
Proof. exact (EQ_MP (@lem5742546 A B op f) (@lem5742545 A B f op)). Qed.
Lemma lem5742549 {A B : Type'} (op : type1400 B) (f : A -> B) : term58 A B op f.
Proof. exact (@lem5738224 A B op f (@lem5742547 A B op f)). Qed.
Lemma lem5742550 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term68 A B op f.
Proof. exact (@lem5742549 A B op f (@lem5738169 B op h1)). Qed.
Lemma lem5742551 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : @monoidal B op) (h2 : term56 A B op f) : term65 A B.
Proof. exact (@lem5742550 A B f op h1 (@lem5738205 A B op f h2)). Qed.
Lemma lem5742552 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : @monoidal B op) (h2 : term56 A B op f) : term62 B.
Proof. exact (@lem5742551 A B op f h1 h2 (@lem5738207 A)). Qed.
Lemma lem5742553 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : @monoidal B op) (h2 : term56 A B op f) : False.
Proof. exact (@lem5742552 A B op f h1 h2 (@lem5738206 B)). Qed.
Lemma lem5742554 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : @monoidal B op) (h2 : term56 A B op f) : (term56 A B op f) = False.
Proof. exact (prop_ext (fun h3 : term56 A B op f => @lem5742553 A B op f h1 h2) (fun h3 : False => @lem5738205 A B op f h2)). Qed.
Lemma lem5742555 {A B : Type'} (op : type1400 B) (f : A -> B) (h1 : @monoidal B op) (h2 : term56 A B op f) : False.
Proof. exact (EQ_MP (@lem5742554 A B op f h1 h2) (@lem5738205 A B op f h2)). Qed.
Lemma lem5742556 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term55 A B op f.
Proof. exact (fun h0 : term56 A B op f => @lem5742555 A B op f h1 h0). Qed.
Lemma lem5742557 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term52 A B op f.
Proof. exact (EQ_MP (@lem5738204 A B op f) (@lem5742556 A B f op h1)). Qed.
Lemma lem5742558 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term53 A B f op) : term53 A B f op.
Proof. exact (h1). Qed.
Lemma lem5742559 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term914 A B f op.
Proof. exact (h1). Qed.
Lemma lem5742560 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term915 A B f op) = (@neutral B op).
Proof. exact (h1). Qed.
Lemma lem5742561 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : term916 A B op f s.
Proof. exact (h1). Qed.
Lemma lem5742571 {A : Type'} : @FINITE A (@EMPTY A).
Proof. exact (proj1 (@lem3197565 A)). Qed.
Lemma lem5742572 {A : Type'} : (@FINITE A (@EMPTY A)) = ((@FINITE A (@EMPTY A)) = True).
Proof. exact (@lem7 (@FINITE A (@EMPTY A))). Qed.
Lemma lem5742639 {_119963 _120196 : Type'} (op : type1400 _120196) : term917 _119963 _120196 op.
Proof. exact (proj1 (@lem5736505 _119963 Prop Prop Prop Prop Prop Prop Prop _120196 op)). Qed.
Lemma lem5742640 {_119963 _120196 : Type'} (op : type1400 _120196) (f : _119963 -> _120196) : term918 _119963 _120196 op f.
Proof. exact (@lem5742639 _119963 _120196 op f). Qed.
Lemma lem5742641 {_119963 _120196 : Type'} (op : type1400 _120196) (f : _119963 -> _120196) : (term918 _119963 _120196 op f) = ((@support _119963 _120196 op f (@EMPTY _119963)) = (@EMPTY _119963)).
Proof. exact (eq_refl (term918 _119963 _120196 op f)). Qed.
Lemma lem5742643 {_119779 A : Type'} (f : A -> _119779) : term919 _119779 A f.
Proof. exact (@lem5718049 _119779 A f). Qed.
Lemma lem5742644 {_119779 A : Type'} (f : A -> _119779) : (term919 _119779 A f) = (term920 _119779 A f).
Proof. exact (eq_refl (term919 _119779 A f)). Qed.
Lemma lem5742645 {_119779 A : Type'} (f : A -> _119779) : term920 _119779 A f.
Proof. exact (EQ_MP (@lem5742644 _119779 A f) (@lem5742643 _119779 A f)). Qed.
Lemma lem5742646 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) : term921 _119779 A f s.
Proof. exact (@lem5742645 _119779 A f s). Qed.
Lemma lem5742647 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) : (term921 _119779 A f s) = (term922 _119779 A f s).
Proof. exact (eq_refl (term921 _119779 A f s)). Qed.
Lemma lem5742648 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) : term922 _119779 A f s.
Proof. exact (EQ_MP (@lem5742647 _119779 A f s) (@lem5742646 _119779 A f s)). Qed.
Lemma lem5742649 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : term923 _119779 A f s op.
Proof. exact (@lem5742648 _119779 A f s op). Qed.
Lemma lem5742650 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : (term923 _119779 A f s op) = ((@iterate _119779 A op s f) = (term924 _119779 A f s op)).
Proof. exact (eq_refl (term923 _119779 A f s op)). Qed.
Lemma lem5742665 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : (@iterate _119779 A op s f) = (term924 _119779 A f s op).
Proof. exact (EQ_MP (@lem5742650 _119779 A f s op) (@lem5742649 _119779 A f s op)). Qed.
Lemma lem5742666 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (@iterate B A op s f) = (term925 A B f s op).
Proof. exact (@lem5742665 B A f s op). Qed.
Lemma lem5742667 {A B : Type'} (f : A -> B) (op : type1400 B) : (@iterate B A op (@EMPTY A) f) = (term926 A B f op).
Proof. exact (@lem5742666 A B f (@EMPTY A) op). Qed.
Lemma lem5742669 {_119963 _120196 : Type'} (op : type1400 _120196) (f : _119963 -> _120196) : (@support _119963 _120196 op f (@EMPTY _119963)) = (@EMPTY _119963).
Proof. exact (EQ_MP (@lem5742641 _119963 _120196 op f) (@lem5742640 _119963 _120196 op f)). Qed.
Lemma lem5742670 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f (@EMPTY A)) = (@EMPTY A).
Proof. exact (@lem5742669 A B op f). Qed.
Lemma lem5742671 {A : Type'} : (@FINITE A) = (@FINITE A).
Proof. exact (eq_refl (@FINITE A)). Qed.
Lemma lem5742672 {A B : Type'} (op : type1400 B) (f : A -> B) : (term927 A B op f) = (@FINITE A (@EMPTY A)).
Proof. exact (MK_COMB (@lem5742671 A) (@lem5742670 A B op f)). Qed.
Lemma lem5742674 {A : Type'} : (@FINITE A (@EMPTY A)) = True.
Proof. exact (EQ_MP (@lem5742572 A) (@lem5742571 A)). Qed.
Lemma lem5742675 {A B : Type'} (op : type1400 B) (f : A -> B) : (term927 A B op f) = True.
Proof. exact (TRANS (@lem5742672 A B op f) (@lem5742674 A)). Qed.
Lemma lem5742676 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5742677 {A B : Type'} (op : type1400 B) (f : A -> B) : (term928 A B op f) = (@COND B True).
Proof. exact (MK_COMB (@lem5742676 B) (@lem5742675 A B op f)). Qed.
Lemma lem5742679 {_119963 _120196 : Type'} (op : type1400 _120196) (f : _119963 -> _120196) : (@support _119963 _120196 op f (@EMPTY _119963)) = (@EMPTY _119963).
Proof. exact (EQ_MP (@lem5742641 _119963 _120196 op f) (@lem5742640 _119963 _120196 op f)). Qed.
Lemma lem5742680 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f (@EMPTY A)) = (@EMPTY A).
Proof. exact (@lem5742679 A B op f). Qed.
Lemma lem5742681 {A B : Type'} (op : type1400 B) (f : A -> B) : (term929 A B op f) = (term929 A B op f).
Proof. exact (eq_refl (term929 A B op f)). Qed.
Lemma lem5742682 {A B : Type'} (op : type1400 B) (f : A -> B) : (term930 A B op f) = (term931 A B op f).
Proof. exact (MK_COMB (@lem5742681 A B op f) (@lem5742680 A B op f)). Qed.
Lemma lem5742683 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742684 {A B : Type'} (f : A -> B) (op : type1400 B) : (term932 A B f op) = (term915 A B f op).
Proof. exact (MK_COMB (@lem5742682 A B op f) (@lem5742683 B op)). Qed.
Lemma lem5742686 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term915 A B f op) = (@neutral B op).
Proof. exact (h1). Qed.
Lemma lem5742687 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term915 A B f op) = (@neutral B op).
Proof. exact (@lem5742686 A B f op h1). Qed.
Lemma lem5742688 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term932 A B f op) = (@neutral B op).
Proof. exact (TRANS (@lem5742684 A B f op) (@lem5742687 A B f op h1)). Qed.
Lemma lem5742689 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term933 A B f op) = (term934 B op).
Proof. exact (MK_COMB (@lem5742677 A B op f) (@lem5742688 A B f op h1)). Qed.
Lemma lem5742690 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742691 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term926 A B f op) = (term935 B op).
Proof. exact (MK_COMB (@lem5742689 A B f op h1) (@lem5742690 B op)). Qed.
Lemma lem5742693 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5742694 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem5742693 B t2 t1). Qed.
Lemma lem5742695 {B : Type'} (op : type1400 B) : (term935 B op) = (@neutral B op).
Proof. exact (@lem5742694 B (@neutral B op) (@neutral B op)). Qed.
Lemma lem5742696 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term926 A B f op) = (@neutral B op).
Proof. exact (TRANS (@lem5742691 A B f op h1) (@lem5742695 B op)). Qed.
Lemma lem5742697 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (@iterate B A op (@EMPTY A) f) = (@neutral B op).
Proof. exact (TRANS (@lem5742667 A B f op) (@lem5742696 A B f op h1)). Qed.
Lemma lem5742698 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5742699 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (term936 A B op f) = (term937 B op).
Proof. exact (MK_COMB (@lem5742698 B) (@lem5742697 A B f op h1)). Qed.
Lemma lem5742700 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742701 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : ((@iterate B A op (@EMPTY A) f) = (@neutral B op)) = ((@neutral B op) = (@neutral B op)).
Proof. exact (MK_COMB (@lem5742699 A B f op h1) (@lem5742700 B op)). Qed.
Lemma lem5742703 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem5742704 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem5742703 B x). Qed.
Lemma lem5742705 {B : Type'} (op : type1400 B) : ((@neutral B op) = (@neutral B op)) = True.
Proof. exact (@lem5742704 B (@neutral B op)). Qed.
Lemma lem5742706 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : ((@iterate B A op (@EMPTY A) f) = (@neutral B op)) = True.
Proof. exact (TRANS (@lem5742701 A B f op h1) (@lem5742705 B op)). Qed.
Lemma lem5742707 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : True = ((@iterate B A op (@EMPTY A) f) = (@neutral B op)).
Proof. exact (SYM (@lem5742706 A B f op h1)). Qed.
Lemma lem5742708 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : (term915 A B f op) = (@neutral B op)) : (@iterate B A op (@EMPTY A) f) = (@neutral B op).
Proof. exact (EQ_MP (@lem5742707 A B f op h1) (@lem0)). Qed.
Lemma lem5742721 {_120011 _120044 _120082 _120120 _120158 _120186 _120195 _120196 : Type'} (op : type1400 _120196) : term938 _120011 _120044 _120082 _120120 _120158 _120186 _120195 _120196 op.
Proof. exact (proj2 (@lem5736505 Prop _120011 _120044 _120082 _120120 _120158 _120186 _120195 _120196 op)). Qed.
Lemma lem5742776 {_120011 _120196 : Type'} (op : type1400 _120196) : term939 _120011 _120196 op.
Proof. exact (proj1 (@lem5742721 _120011 Prop Prop Prop Prop Prop Prop _120196 op)). Qed.
Lemma lem5742777 {_120011 _120196 : Type'} (op : type1400 _120196) (f : _120011 -> _120196) : term940 _120011 _120196 op f.
Proof. exact (@lem5742776 _120011 _120196 op f). Qed.
Lemma lem5742778 {_120011 _120196 : Type'} (op : type1400 _120196) (f : _120011 -> _120196) : (term940 _120011 _120196 op f) = (term941 _120011 _120196 op f).
Proof. exact (eq_refl (term940 _120011 _120196 op f)). Qed.
Lemma lem5742779 {_120011 _120196 : Type'} (op : type1400 _120196) (f : _120011 -> _120196) : term941 _120011 _120196 op f.
Proof. exact (EQ_MP (@lem5742778 _120011 _120196 op f) (@lem5742777 _120011 _120196 op f)). Qed.
Lemma lem5742780 {_120011 _120196 : Type'} (op : type1400 _120196) (f : _120011 -> _120196) (x : _120011) : term942 _120011 _120196 op f x.
Proof. exact (@lem5742779 _120011 _120196 op f x). Qed.
Lemma lem5742781 {_120011 _120196 : Type'} (x : _120011) (op : type1400 _120196) (f : _120011 -> _120196) : (term942 _120011 _120196 op f x) = (term943 _120011 _120196 x op f).
Proof. exact (eq_refl (term942 _120011 _120196 op f x)). Qed.
Lemma lem5742782 {_120011 _120196 : Type'} (x : _120011) (op : type1400 _120196) (f : _120011 -> _120196) : term943 _120011 _120196 x op f.
Proof. exact (EQ_MP (@lem5742781 _120011 _120196 x op f) (@lem5742780 _120011 _120196 op f x)). Qed.
Lemma lem5742783 {_120011 _120196 : Type'} (x : _120011) (op : type1400 _120196) (f : _120011 -> _120196) (s : _120011 -> Prop) : term944 _120011 _120196 x op f s.
Proof. exact (@lem5742782 _120011 _120196 x op f s). Qed.
Lemma lem5742784 {_120011 _120196 : Type'} (x : _120011) (op : type1400 _120196) (f : _120011 -> _120196) (s : _120011 -> Prop) : (term944 _120011 _120196 x op f s) = ((term945 _120011 _120196 op f x s) = (term946 _120011 _120196 x op f s)).
Proof. exact (eq_refl (term944 _120011 _120196 x op f s)). Qed.
Lemma lem5742790 {_119779 A : Type'} (f : A -> _119779) : term919 _119779 A f.
Proof. exact (@lem5718049 _119779 A f). Qed.
Lemma lem5742791 {_119779 A : Type'} (f : A -> _119779) : (term919 _119779 A f) = (term920 _119779 A f).
Proof. exact (eq_refl (term919 _119779 A f)). Qed.
Lemma lem5742792 {_119779 A : Type'} (f : A -> _119779) : term920 _119779 A f.
Proof. exact (EQ_MP (@lem5742791 _119779 A f) (@lem5742790 _119779 A f)). Qed.
Lemma lem5742793 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) : term921 _119779 A f s.
Proof. exact (@lem5742792 _119779 A f s). Qed.
Lemma lem5742794 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) : (term921 _119779 A f s) = (term922 _119779 A f s).
Proof. exact (eq_refl (term921 _119779 A f s)). Qed.
Lemma lem5742795 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) : term922 _119779 A f s.
Proof. exact (EQ_MP (@lem5742794 _119779 A f s) (@lem5742793 _119779 A f s)). Qed.
Lemma lem5742796 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : term923 _119779 A f s op.
Proof. exact (@lem5742795 _119779 A f s op). Qed.
Lemma lem5742797 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : (term923 _119779 A f s op) = ((@iterate _119779 A op s f) = (term924 _119779 A f s op)).
Proof. exact (eq_refl (term923 _119779 A f s op)). Qed.
Lemma lem5742809 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term916 A B op f s) = ((term916 A B op f s) = True).
Proof. exact (@lem7 (term916 A B op f s)). Qed.
Lemma lem5742814 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : (@iterate _119779 A op s f) = (term924 _119779 A f s op).
Proof. exact (EQ_MP (@lem5742797 _119779 A f s op) (@lem5742796 _119779 A f s op)). Qed.
Lemma lem5742815 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (@iterate B A op s f) = (term925 A B f s op).
Proof. exact (@lem5742814 B A f s op). Qed.
Lemma lem5742816 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term947 A B op x s f) = (term948 A B f x s op).
Proof. exact (@lem5742815 A B f (@INSERT A x s) op). Qed.
Lemma lem5742818 {_120011 _120196 : Type'} (x : _120011) (op : type1400 _120196) (f : _120011 -> _120196) (s : _120011 -> Prop) : (term945 _120011 _120196 op f x s) = (term946 _120011 _120196 x op f s).
Proof. exact (EQ_MP (@lem5742784 _120011 _120196 x op f s) (@lem5742783 _120011 _120196 x op f s)). Qed.
Lemma lem5742819 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term945 A B op f x s) = (term946 A B x op f s).
Proof. exact (@lem5742818 A B x op f s). Qed.
Lemma lem5742824 {A : Type'} : (@FINITE A) = (@FINITE A).
Proof. exact (eq_refl (@FINITE A)). Qed.
Lemma lem5742825 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term949 A B op f x s) = (term950 A B x op f s).
Proof. exact (MK_COMB (@lem5742824 A) (@lem5742819 A B x op f s)). Qed.
Lemma lem5742826 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5742827 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term951 A B op f x s) = (term952 A B x op f s).
Proof. exact (MK_COMB (@lem5742826 B) (@lem5742825 A B x op f s)). Qed.
Lemma lem5742829 {_120011 _120196 : Type'} (x : _120011) (op : type1400 _120196) (f : _120011 -> _120196) (s : _120011 -> Prop) : (term945 _120011 _120196 op f x s) = (term946 _120011 _120196 x op f s).
Proof. exact (EQ_MP (@lem5742784 _120011 _120196 x op f s) (@lem5742783 _120011 _120196 x op f s)). Qed.
Lemma lem5742830 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term945 A B op f x s) = (term946 A B x op f s).
Proof. exact (@lem5742829 A B x op f s). Qed.
Lemma lem5742835 {A B : Type'} (op : type1400 B) (f : A -> B) : (term929 A B op f) = (term929 A B op f).
Proof. exact (eq_refl (term929 A B op f)). Qed.
Lemma lem5742836 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term953 A B op f x s) = (term954 A B x op f s).
Proof. exact (MK_COMB (@lem5742835 A B op f) (@lem5742830 A B x op f s)). Qed.
Lemma lem5742837 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742838 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term955 A B f x s op) = (term956 A B x f s op).
Proof. exact (MK_COMB (@lem5742836 A B x op f s) (@lem5742837 B op)). Qed.
Lemma lem5742839 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term957 A B f x s op) = (term958 A B x f s op).
Proof. exact (MK_COMB (@lem5742827 A B x op f s) (@lem5742838 A B x f s op)). Qed.
Lemma lem5742840 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742841 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term948 A B f x s op) = (term959 A B x f s op).
Proof. exact (MK_COMB (@lem5742839 A B x f s op) (@lem5742840 B op)). Qed.
Lemma lem5742842 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term947 A B op x s f) = (term959 A B x f s op).
Proof. exact (TRANS (@lem5742816 A B f x s op) (@lem5742841 A B x f s op)). Qed.
Lemma lem5742843 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5742844 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term960 A B op x s f) = (term961 A B x f s op).
Proof. exact (MK_COMB (@lem5742843 B) (@lem5742842 A B x f s op)). Qed.
Lemma lem5742846 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : (@iterate _119779 A op s f) = (term924 _119779 A f s op).
Proof. exact (EQ_MP (@lem5742797 _119779 A f s op) (@lem5742796 _119779 A f s op)). Qed.
Lemma lem5742847 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (@iterate B A op s f) = (term925 A B f s op).
Proof. exact (@lem5742846 B A f s op). Qed.
Lemma lem5742849 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term916 A B op f s) = True.
Proof. exact (EQ_MP (@lem5742809 A B op f s) (@lem5742561 A B op f s h1)). Qed.
Lemma lem5742850 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5742851 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term962 A B op f s) = (@COND B True).
Proof. exact (MK_COMB (@lem5742850 B) (@lem5742849 A B op f s h1)). Qed.
Lemma lem5742852 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5742853 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term964 A B f s op) = (term965 A B f s op).
Proof. exact (MK_COMB (@lem5742851 A B op f s h1) (@lem5742852 A B f s op)). Qed.
Lemma lem5742854 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742855 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term925 A B f s op) = (term966 A B f s op).
Proof. exact (MK_COMB (@lem5742853 A B op f s h1) (@lem5742854 B op)). Qed.
Lemma lem5742857 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5742858 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem5742857 B t2 t1). Qed.
Lemma lem5742859 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term966 A B f s op) = (term963 A B f s op).
Proof. exact (@lem5742858 B (@neutral B op) (term963 A B f s op)). Qed.
Lemma lem5742860 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term925 A B f s op) = (term963 A B f s op).
Proof. exact (TRANS (@lem5742855 A B op f s h1) (@lem5742859 A B f s op)). Qed.
Lemma lem5742861 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (@iterate B A op s f) = (term963 A B f s op).
Proof. exact (TRANS (@lem5742847 A B f s op) (@lem5742860 A B op f s h1)). Qed.
Lemma lem5742862 {A B : Type'} (x : A) (s : A -> Prop) : (term967 A B x s) = (term967 A B x s).
Proof. exact (eq_refl (term967 A B x s)). Qed.
Lemma lem5742863 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term968 A B x op s f) = (term969 A B x f s op).
Proof. exact (MK_COMB (@lem5742862 A B x s) (@lem5742861 A B op f s h1)). Qed.
Lemma lem5742865 {_119779 A : Type'} (f : A -> _119779) (s : A -> Prop) (op : type1400 _119779) : (@iterate _119779 A op s f) = (term924 _119779 A f s op).
Proof. exact (EQ_MP (@lem5742797 _119779 A f s op) (@lem5742796 _119779 A f s op)). Qed.
Lemma lem5742866 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (@iterate B A op s f) = (term925 A B f s op).
Proof. exact (@lem5742865 B A f s op). Qed.
Lemma lem5742868 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term916 A B op f s) = True.
Proof. exact (EQ_MP (@lem5742809 A B op f s) (@lem5742561 A B op f s h1)). Qed.
Lemma lem5742869 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5742870 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term962 A B op f s) = (@COND B True).
Proof. exact (MK_COMB (@lem5742869 B) (@lem5742868 A B op f s h1)). Qed.
Lemma lem5742871 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5742872 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term964 A B f s op) = (term965 A B f s op).
Proof. exact (MK_COMB (@lem5742870 A B op f s h1) (@lem5742871 A B f s op)). Qed.
Lemma lem5742873 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742874 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term925 A B f s op) = (term966 A B f s op).
Proof. exact (MK_COMB (@lem5742872 A B op f s h1) (@lem5742873 B op)). Qed.
Lemma lem5742876 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5742877 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem5742876 B t2 t1). Qed.
Lemma lem5742878 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term966 A B f s op) = (term963 A B f s op).
Proof. exact (@lem5742877 B (@neutral B op) (term963 A B f s op)). Qed.
Lemma lem5742879 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term925 A B f s op) = (term963 A B f s op).
Proof. exact (TRANS (@lem5742874 A B op f s h1) (@lem5742878 A B f s op)). Qed.
Lemma lem5742880 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (@iterate B A op s f) = (term963 A B f s op).
Proof. exact (TRANS (@lem5742866 A B f s op) (@lem5742879 A B op f s h1)). Qed.
Lemma lem5742881 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term644 A B op f x) = (term644 A B op f x).
Proof. exact (eq_refl (term644 A B op f x)). Qed.
Lemma lem5742882 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term970 A B x op s f) = (term971 A B x f s op).
Proof. exact (MK_COMB (@lem5742881 A B op f x) (@lem5742880 A B op f s h1)). Qed.
Lemma lem5742883 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term972 A B x op s f) = (term973 A B x f s op).
Proof. exact (MK_COMB (@lem5742863 A B x op f s h1) (@lem5742882 A B x op f s h1)). Qed.
Lemma lem5742884 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : ((term947 A B op x s f) = (term972 A B x op s f)) = ((term959 A B x f s op) = (term973 A B x f s op)).
Proof. exact (MK_COMB (@lem5742844 A B x f s op) (@lem5742883 A B x op f s h1)). Qed.
Lemma lem5742887 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : ((term959 A B x f s op) = (term973 A B x f s op)) = ((term947 A B op x s f) = (term972 A B x op s f)).
Proof. exact (SYM (@lem5742884 A B x op f s h1)). Qed.
Lemma lem5742889 {A B : Type'} (b : Prop) (x : A) (f : A -> B) (y : A) : (term10 A B f b x y) = (term11 A B b x f y).
Proof. exact (EQ_MP (@lem5738144 A B b x f y) (@lem5738143 A B b x f y)). Qed.
Lemma lem5742890 {A : Type'} (b : Prop) (x : A -> Prop) (f : type686 A) (y : A -> Prop) : (term974 A f b x y) = (term975 A b x f y).
Proof. exact (@lem5742889 (A -> Prop) Prop b x f y). Qed.
Lemma lem5742891 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term950 A B x op f s) = (term976 A B x op f s).
Proof. exact (@lem5742890 A ((f x) = (@neutral B op)) (@support A B op f s) (@FINITE A) (term977 A B x op f s)). Qed.
Lemma lem5742892 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5742893 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term952 A B x op f s) = (term978 A B x op f s).
Proof. exact (MK_COMB (@lem5742892 B) (@lem5742891 A B x op f s)). Qed.
Lemma lem5742894 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term956 A B x f s op) = (term956 A B x f s op).
Proof. exact (eq_refl (term956 A B x f s op)). Qed.
Lemma lem5742895 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term958 A B x f s op) = (term979 A B x f s op).
Proof. exact (MK_COMB (@lem5742893 A B x op f s) (@lem5742894 A B x f s op)). Qed.
Lemma lem5742896 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5742897 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term959 A B x f s op) = (term980 A B x f s op).
Proof. exact (MK_COMB (@lem5742895 A B x f s op) (@lem5742896 B op)). Qed.
Lemma lem5742898 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5742899 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term961 A B x f s op) = (term981 A B x f s op).
Proof. exact (MK_COMB (@lem5742898 B) (@lem5742897 A B x f s op)). Qed.
Lemma lem5742900 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term973 A B x f s op) = (term973 A B x f s op).
Proof. exact (eq_refl (term973 A B x f s op)). Qed.
Lemma lem5742901 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term959 A B x f s op) = (term973 A B x f s op)) = ((term980 A B x f s op) = (term973 A B x f s op)).
Proof. exact (MK_COMB (@lem5742899 A B x f s op) (@lem5742900 A B x f s op)). Qed.
Lemma lem5742902 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term980 A B x f s op) = (term973 A B x f s op)) = ((term959 A B x f s op) = (term973 A B x f s op)).
Proof. exact (SYM (@lem5742901 A B x f s op)). Qed.
Lemma lem5742903 {A : Type'} (b : Prop) : term982 A b.
Proof. exact (@lem12860 A b). Qed.
Lemma lem5742904 {A : Type'} (b : Prop) : (term982 A b) = (term983 A b).
Proof. exact (eq_refl (term982 A b)). Qed.
Lemma lem5742905 {A : Type'} (b : Prop) : term983 A b.
Proof. exact (EQ_MP (@lem5742904 A b) (@lem5742903 A b)). Qed.
Lemma lem5742906 {A : Type'} (b : Prop) (t : A) : term984 A b t.
Proof. exact (@lem5742905 A b t). Qed.
Lemma lem5742907 {A : Type'} (b : Prop) (t : A) : (term984 A b t) = ((@COND A b t t) = t).
Proof. exact (eq_refl (term984 A b t)). Qed.
Lemma lem5742909 {A : Type'} (s : A -> Prop) : term985 A s.
Proof. exact (@lem3608316 A s). Qed.
Lemma lem5742910 {A : Type'} (s : A -> Prop) : (term985 A s) = (term986 A s).
Proof. exact (eq_refl (term985 A s)). Qed.
Lemma lem5742911 {A : Type'} (s : A -> Prop) : term986 A s.
Proof. exact (EQ_MP (@lem5742910 A s) (@lem5742909 A s)). Qed.
Lemma lem5742912 {A : Type'} (s : A -> Prop) (x : A) : term987 A s x.
Proof. exact (@lem5742911 A s x). Qed.
Lemma lem5742913 {A : Type'} (x : A) (s : A -> Prop) : (term987 A s x) = ((term988 A x s) = (@FINITE A s)).
Proof. exact (eq_refl (term987 A s x)). Qed.
Lemma lem5742994 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term916 A B op f s) = ((term916 A B op f s) = True).
Proof. exact (@lem7 (term916 A B op f s)). Qed.
Lemma lem5743007 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term916 A B op f s) = True.
Proof. exact (EQ_MP (@lem5742994 A B op f s) (@lem5742561 A B op f s h1)). Qed.
Lemma lem5743008 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term989 A B f x op) = (term989 A B f x op).
Proof. exact (eq_refl (term989 A B f x op)). Qed.
Lemma lem5743009 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term990 A B x op f s) = (term991 A B f x op).
Proof. exact (MK_COMB (@lem5743008 A B f x op) (@lem5743007 A B op f s h1)). Qed.
Lemma lem5743011 {A : Type'} (x : A) (s : A -> Prop) : (term988 A x s) = (@FINITE A s).
Proof. exact (EQ_MP (@lem5742913 A x s) (@lem5742912 A s x)). Qed.
Lemma lem5743012 {A : Type'} (x : A) (s : A -> Prop) : (term988 A x s) = (@FINITE A s).
Proof. exact (@lem5743011 A x s). Qed.
Lemma lem5743013 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term992 A B x op f s) = (term916 A B op f s).
Proof. exact (@lem5743012 A x (@support A B op f s)). Qed.
Lemma lem5743015 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term916 A B op f s) = True.
Proof. exact (EQ_MP (@lem5742994 A B op f s) (@lem5742561 A B op f s h1)). Qed.
Lemma lem5743016 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term992 A B x op f s) = True.
Proof. exact (TRANS (@lem5743013 A B x op f s) (@lem5743015 A B op f s h1)). Qed.
Lemma lem5743017 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term976 A B x op f s) = (term993 A B f x op).
Proof. exact (MK_COMB (@lem5743009 A B x op f s h1) (@lem5743016 A B x op f s h1)). Qed.
Lemma lem5743021 {A : Type'} (b : Prop) (t : A) : (@COND A b t t) = t.
Proof. exact (EQ_MP (@lem5742907 A b t) (@lem5742906 A b t)). Qed.
Lemma lem5743022 (b : Prop) (t : Prop) : (@COND Prop b t t) = t.
Proof. exact (@lem5743021 Prop b t). Qed.
Lemma lem5743023 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term993 A B f x op) = True.
Proof. exact (@lem5743022 ((f x) = (@neutral B op)) True). Qed.
Lemma lem5743024 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term976 A B x op f s) = True.
Proof. exact (TRANS (@lem5743017 A B x op f s h1) (@lem5743023 A B f x op)). Qed.
Lemma lem5743025 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5743026 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term978 A B x op f s) = (@COND B True).
Proof. exact (MK_COMB (@lem5743025 B) (@lem5743024 A B x op f s h1)). Qed.
Lemma lem5743033 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term956 A B x f s op) = (term956 A B x f s op).
Proof. exact (eq_refl (term956 A B x f s op)). Qed.
Lemma lem5743034 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term979 A B x f s op) = (term994 A B x f s op).
Proof. exact (MK_COMB (@lem5743026 A B x op f s h1) (@lem5743033 A B x f s op)). Qed.
Lemma lem5743035 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5743036 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term980 A B x f s op) = (term995 A B x f s op).
Proof. exact (MK_COMB (@lem5743034 A B x op f s h1) (@lem5743035 B op)). Qed.
Lemma lem5743038 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5743039 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem5743038 B t2 t1). Qed.
Lemma lem5743040 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term995 A B x f s op) = (term956 A B x f s op).
Proof. exact (@lem5743039 B (@neutral B op) (term956 A B x f s op)). Qed.
Lemma lem5743047 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term980 A B x f s op) = (term956 A B x f s op).
Proof. exact (TRANS (@lem5743036 A B x op f s h1) (@lem5743040 A B x f s op)). Qed.
Lemma lem5743048 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5743049 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term981 A B x f s op) = (term996 A B x f s op).
Proof. exact (MK_COMB (@lem5743048 B) (@lem5743047 A B x op f s h1)). Qed.
Lemma lem5743052 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term973 A B x f s op) = (term973 A B x f s op).
Proof. exact (eq_refl (term973 A B x f s op)). Qed.
Lemma lem5743053 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : ((term980 A B x f s op) = (term973 A B x f s op)) = ((term956 A B x f s op) = (term973 A B x f s op)).
Proof. exact (MK_COMB (@lem5743049 A B x op f s h1) (@lem5743052 A B x f s op)). Qed.
Lemma lem5743056 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : ((term956 A B x f s op) = (term973 A B x f s op)) = ((term980 A B x f s op) = (term973 A B x f s op)).
Proof. exact (SYM (@lem5743053 A B x op f s h1)). Qed.
Lemma lem5743098 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term997 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem5743099 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term998 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem5743098 _2963 g t e g' t' e'). Qed.
Lemma lem5743100 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term999 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem5743099 _2963 g t e g' t'). Qed.
Lemma lem5743101 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1000 _2963 g t e.
Proof. exact (fun g' : Prop => @lem5743100 _2963 g t e g'). Qed.
Lemma lem5743102 {A : Type'} (g : Prop) (t : A -> Prop) (e : A -> Prop) : term1001 A g t e.
Proof. exact (@lem5743101 (A -> Prop) g t e). Qed.
Lemma lem5743103 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : term1002 A B x op f s.
Proof. exact (@lem5743102 A ((f x) = (@neutral B op)) (@support A B op f s) (term977 A B x op f s)). Qed.
Lemma lem5743104 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) : term1003 A B x op f s g'.
Proof. exact (@lem5743103 A B x op f s g'). Qed.
Lemma lem5743105 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) : (term1003 A B x op f s g') = (term1004 A B x op f s g').
Proof. exact (eq_refl (term1003 A B x op f s g')). Qed.
Lemma lem5743106 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) : term1004 A B x op f s g'.
Proof. exact (EQ_MP (@lem5743105 A B x op f s g') (@lem5743104 A B x op f s g')). Qed.
Lemma lem5743107 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) : term1005 A B x op f s g' t'.
Proof. exact (@lem5743106 A B x op f s g' t'). Qed.
Lemma lem5743108 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) : (term1005 A B x op f s g' t') = (term1006 A B x op f s g' t').
Proof. exact (eq_refl (term1005 A B x op f s g' t')). Qed.
Lemma lem5743109 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) : term1006 A B x op f s g' t'.
Proof. exact (EQ_MP (@lem5743108 A B x op f s g' t') (@lem5743107 A B x op f s g' t')). Qed.
Lemma lem5743110 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) (e' : A -> Prop) : term1007 A B x op f s g' t' e'.
Proof. exact (@lem5743109 A B x op f s g' t' e'). Qed.
Lemma lem5743111 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) (e' : A -> Prop) : (term1007 A B x op f s g' t' e') = (term1008 A B x op f s g' t' e').
Proof. exact (eq_refl (term1007 A B x op f s g' t' e')). Qed.
Lemma lem5743112 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) (e' : A -> Prop) : term1008 A B x op f s g' t' e'.
Proof. exact (EQ_MP (@lem5743111 A B x op f s g' t' e') (@lem5743110 A B x op f s g' t' e')). Qed.
Lemma lem5743116 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (f x) = (@neutral B op).
Proof. exact (h1). Qed.
Lemma lem5743117 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5743118 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term1009 A B f x) = (term937 B op).
Proof. exact (MK_COMB (@lem5743117 B) (@lem5743116 A B f x op h1)). Qed.
Lemma lem5743119 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5743120 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : ((f x) = (@neutral B op)) = ((@neutral B op) = (@neutral B op)).
Proof. exact (MK_COMB (@lem5743118 A B f x op h1) (@lem5743119 B op)). Qed.
Lemma lem5743122 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem5743123 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem5743122 B x). Qed.
Lemma lem5743124 {B : Type'} (op : type1400 B) : ((@neutral B op) = (@neutral B op)) = True.
Proof. exact (@lem5743123 B (@neutral B op)). Qed.
Lemma lem5743125 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : ((f x) = (@neutral B op)) = True.
Proof. exact (TRANS (@lem5743120 A B f x op h1) (@lem5743124 B op)). Qed.
Lemma lem5743126 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (t' : A -> Prop) (e' : A -> Prop) : term1010 A B x op f s t' e'.
Proof. exact (@lem5743112 A B x op f s True t' e'). Qed.
Lemma lem5743127 {A B : Type'} (s : A -> Prop) (t' : A -> Prop) (e' : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : term1011 A B x op f s t' e'.
Proof. exact (@lem5743126 A B x op f s t' e' (@lem5743125 A B f x op h1)). Qed.
Lemma lem5743133 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (@support A B op f s).
Proof. exact (eq_refl (@support A B op f s)). Qed.
Lemma lem5743134 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : term1012 A B op f s.
Proof. exact (fun h0 : True => @lem5743133 A B op f s). Qed.
Lemma lem5743135 {A B : Type'} (s : A -> Prop) (e' : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : term1013 A B x op f s e'.
Proof. exact (@lem5743127 A B s (@support A B op f s) e' f x op h1). Qed.
Lemma lem5743136 {A B : Type'} (s : A -> Prop) (e' : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : term1014 A B x op f s e'.
Proof. exact (@lem5743135 A B s e' f x op h1 (@lem5743134 A B op f s)). Qed.
Lemma lem5743140 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term977 A B x op f s) = (term977 A B x op f s).
Proof. exact (eq_refl (term977 A B x op f s)). Qed.
Lemma lem5743141 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : term1015 A B x op f s.
Proof. exact (fun h0 : ~ True => @lem5743140 A B x op f s). Qed.
Lemma lem5743142 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : term1016 A B x op f s.
Proof. exact (@lem5743136 A B s (term977 A B x op f s) f x op h1). Qed.
Lemma lem5743143 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term946 A B x op f s) = (term1017 A B x op f s).
Proof. exact (@lem5743142 A B s f x op h1 (@lem5743141 A B x op f s)). Qed.
Lemma lem5743145 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5743146 {A : Type'} (t2 : A -> Prop) (t1 : A -> Prop) : (@COND (A -> Prop) True t1 t2) = t1.
Proof. exact (@lem5743145 (A -> Prop) t2 t1). Qed.
Lemma lem5743147 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1017 A B x op f s) = (@support A B op f s).
Proof. exact (@lem5743146 A (term977 A B x op f s) (@support A B op f s)). Qed.
Lemma lem5743148 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term946 A B x op f s) = (@support A B op f s).
Proof. exact (TRANS (@lem5743143 A B s f x op h1) (@lem5743147 A B x op f s)). Qed.
Lemma lem5743149 {A B : Type'} (op : type1400 B) (f : A -> B) : (term929 A B op f) = (term929 A B op f).
Proof. exact (eq_refl (term929 A B op f)). Qed.
Lemma lem5743150 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term954 A B x op f s) = (term1018 A B op f s).
Proof. exact (MK_COMB (@lem5743149 A B op f) (@lem5743148 A B s f x op h1)). Qed.
Lemma lem5743158 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5743159 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term956 A B x f s op) = (term963 A B f s op).
Proof. exact (MK_COMB (@lem5743150 A B s f x op h1) (@lem5743158 B op)). Qed.
Lemma lem5743167 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5743168 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term996 A B x f s op) = (term1019 A B f s op).
Proof. exact (MK_COMB (@lem5743167 B) (@lem5743159 A B s f x op h1)). Qed.
Lemma lem5743177 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term997 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem5743178 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term998 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem5743177 _2963 g t e g' t' e'). Qed.
Lemma lem5743179 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term999 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem5743178 _2963 g t e g' t'). Qed.
Lemma lem5743180 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1000 _2963 g t e.
Proof. exact (fun g' : Prop => @lem5743179 _2963 g t e g'). Qed.
Lemma lem5743181 {B : Type'} (g : Prop) (t : B) (e : B) : term1000 B g t e.
Proof. exact (@lem5743180 B g t e). Qed.
Lemma lem5743182 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1020 A B x f s op.
Proof. exact (@lem5743181 B (@IN A x s) (term963 A B f s op) (term971 A B x f s op)). Qed.
Lemma lem5743183 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) : term1021 A B x f s op g'.
Proof. exact (@lem5743182 A B x f s op g'). Qed.
Lemma lem5743184 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) : (term1021 A B x f s op g') = (term1022 A B x f s op g').
Proof. exact (eq_refl (term1021 A B x f s op g')). Qed.
Lemma lem5743185 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) : term1022 A B x f s op g'.
Proof. exact (EQ_MP (@lem5743184 A B x f s op g') (@lem5743183 A B x f s op g')). Qed.
Lemma lem5743186 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) : term1023 A B x f s op g' t'.
Proof. exact (@lem5743185 A B x f s op g' t'). Qed.
Lemma lem5743187 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) : (term1023 A B x f s op g' t') = (term1024 A B x f s op g' t').
Proof. exact (eq_refl (term1023 A B x f s op g' t')). Qed.
Lemma lem5743188 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) : term1024 A B x f s op g' t'.
Proof. exact (EQ_MP (@lem5743187 A B x f s op g' t') (@lem5743186 A B x f s op g' t')). Qed.
Lemma lem5743189 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) (e' : B) : term1025 A B x f s op g' t' e'.
Proof. exact (@lem5743188 A B x f s op g' t' e'). Qed.
Lemma lem5743190 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) (e' : B) : (term1025 A B x f s op g' t' e') = (term1026 A B x f s op g' t' e').
Proof. exact (eq_refl (term1025 A B x f s op g' t' e')). Qed.
Lemma lem5743191 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) (e' : B) : term1026 A B x f s op g' t' e'.
Proof. exact (EQ_MP (@lem5743190 A B x f s op g' t' e') (@lem5743189 A B x f s op g' t' e')). Qed.
Lemma lem5743192 {A : Type'} (x : A) (s : A -> Prop) : (@IN A x s) = (@IN A x s).
Proof. exact (eq_refl (@IN A x s)). Qed.
Lemma lem5743193 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (t' : B) (e' : B) : term1027 A B f op x s t' e'.
Proof. exact (@lem5743191 A B x f s op (@IN A x s) t' e'). Qed.
Lemma lem5743194 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (t' : B) (e' : B) : term1028 A B f op x s t' e'.
Proof. exact (@lem5743193 A B f op x s t' e' (@lem5743192 A x s)). Qed.
Lemma lem5743205 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5743206 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1029 A B x f s op.
Proof. exact (fun h0 : @IN A x s => @lem5743205 A B f s op). Qed.
Lemma lem5743207 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (e' : B) : term1030 A B x f s op e'.
Proof. exact (@lem5743194 A B f op x s (term963 A B f s op) e'). Qed.
Lemma lem5743208 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (e' : B) : term1031 A B x f s op e'.
Proof. exact (@lem5743207 A B x f s op e' (@lem5743206 A B x f s op)). Qed.
Lemma lem5743213 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (f x) = (@neutral B op).
Proof. exact (h1). Qed.
Lemma lem5743214 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5743215 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term644 A B op f x) = (term552 B op).
Proof. exact (MK_COMB (@lem5743214 B op) (@lem5743213 A B f x op h1)). Qed.
Lemma lem5743223 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5743224 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term971 A B x f s op) = (term1032 A B f s op).
Proof. exact (MK_COMB (@lem5743215 A B f x op h1) (@lem5743223 A B f s op)). Qed.
Lemma lem5743232 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : term1033 A B x f s op.
Proof. exact (fun h0 : term1034 A x s => @lem5743224 A B s f x op h1). Qed.
Lemma lem5743233 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1035 A B x f s op.
Proof. exact (@lem5743208 A B x f s op (term1032 A B f s op)). Qed.
Lemma lem5743234 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : (term973 A B x f s op) = (term1036 A B x f s op).
Proof. exact (@lem5743233 A B x f s op (@lem5743232 A B s f x op h1)). Qed.
Lemma lem5743296 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : ((term956 A B x f s op) = (term973 A B x f s op)) = ((term963 A B f s op) = (term1036 A B x f s op)).
Proof. exact (MK_COMB (@lem5743168 A B s f x op h1) (@lem5743234 A B s f x op h1)). Qed.
Lemma lem5743367 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : (f x) = (@neutral B op)) : ((term963 A B f s op) = (term1036 A B x f s op)) = ((term956 A B x f s op) = (term973 A B x f s op)).
Proof. exact (SYM (@lem5743296 A B s f x op h1)). Qed.
Lemma lem5743368 {_119826 _119829 : Type'} (op : type1400 _119826) : term1037 _119826 _119829 op.
Proof. exact (@lem5718201 _119826 _119829 op). Qed.
Lemma lem5743369 {_119826 _119829 : Type'} (op : type1400 _119826) : (term1037 _119826 _119829 op) = (term1038 _119826 _119829 op).
Proof. exact (eq_refl (term1037 _119826 _119829 op)). Qed.
Lemma lem5743370 {_119826 _119829 : Type'} (op : type1400 _119826) : term1038 _119826 _119829 op.
Proof. exact (EQ_MP (@lem5743369 _119826 _119829 op) (@lem5743368 _119826 _119829 op)). Qed.
Lemma lem5743371 {_119826 _119829 : Type'} (op : type1400 _119826) (f : _119829 -> _119826) : term1039 _119826 _119829 op f.
Proof. exact (@lem5743370 _119826 _119829 op f). Qed.
Lemma lem5743372 {_119826 _119829 : Type'} (f : _119829 -> _119826) (op : type1400 _119826) : (term1039 _119826 _119829 op f) = (term1040 _119826 _119829 f op).
Proof. exact (eq_refl (term1039 _119826 _119829 op f)). Qed.
Lemma lem5743373 {_119826 _119829 : Type'} (f : _119829 -> _119826) (op : type1400 _119826) : term1040 _119826 _119829 f op.
Proof. exact (EQ_MP (@lem5743372 _119826 _119829 f op) (@lem5743371 _119826 _119829 op f)). Qed.
Lemma lem5743374 {_119826 _119829 : Type'} (f : _119829 -> _119826) (op : type1400 _119826) (x : _119829) : term1041 _119826 _119829 f op x.
Proof. exact (@lem5743373 _119826 _119829 f op x). Qed.
Lemma lem5743375 {_119826 _119829 : Type'} (f : _119829 -> _119826) (x : _119829) (op : type1400 _119826) : (term1041 _119826 _119829 f op x) = (term1042 _119826 _119829 f x op).
Proof. exact (eq_refl (term1041 _119826 _119829 f op x)). Qed.
Lemma lem5743376 {_119826 _119829 : Type'} (f : _119829 -> _119826) (x : _119829) (op : type1400 _119826) : term1042 _119826 _119829 f x op.
Proof. exact (EQ_MP (@lem5743375 _119826 _119829 f x op) (@lem5743374 _119826 _119829 f op x)). Qed.
Lemma lem5743377 {_119826 _119829 : Type'} (f : _119829 -> _119826) (x : _119829) (op : type1400 _119826) (s : _119829 -> Prop) : term1043 _119826 _119829 f x op s.
Proof. exact (@lem5743376 _119826 _119829 f x op s). Qed.
Lemma lem5743378 {_119826 _119829 : Type'} (s : _119829 -> Prop) (f : _119829 -> _119826) (x : _119829) (op : type1400 _119826) : (term1043 _119826 _119829 f x op s) = ((term1044 _119826 _119829 x op f s) = (term1045 _119826 _119829 s f x op)).
Proof. exact (eq_refl (term1043 _119826 _119829 f x op s)). Qed.
Lemma lem5743382 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1046 A B f op x.
Proof. exact (@lem5742559 A B f op h1 x). Qed.
Lemma lem5743383 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) : (term1046 A B f op x) = (term1047 A B x f op).
Proof. exact (eq_refl (term1046 A B f op x)). Qed.
Lemma lem5743384 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1047 A B x f op.
Proof. exact (EQ_MP (@lem5743383 A B x f op) (@lem5743382 A B x f op h1)). Qed.
Lemma lem5743385 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1048 A B x f op s.
Proof. exact (@lem5743384 A B x f op h1 s). Qed.
Lemma lem5743386 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1048 A B x f op s) = (term1049 A B x f s op).
Proof. exact (eq_refl (term1048 A B x f op s)). Qed.
Lemma lem5743387 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1049 A B x f s op.
Proof. exact (EQ_MP (@lem5743386 A B x f s op) (@lem5743385 A B x s f op h1)). Qed.
Lemma lem5743388 {A : Type'} (s : A -> Prop) (h1 : @FINITE A s) : @FINITE A s.
Proof. exact (h1). Qed.
Lemma lem5743389 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (s : A -> Prop) (h1 : term914 A B f op) (h2 : @FINITE A s) : (term1050 A B f x s op) = (term1051 A B x f s op).
Proof. exact (@lem5743387 A B x s f op h1 (@lem5743388 A s h2)). Qed.
Lemma lem5743395 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term916 A B op f s) = ((term916 A B op f s) = True).
Proof. exact (@lem7 (term916 A B op f s)). Qed.
Lemma lem5743397 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : term1052 A B f x op.
Proof. exact (@lem82 ((f x) = (@neutral B op))). Qed.
Lemma lem5743415 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term997 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem5743416 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term998 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem5743415 _2963 g t e g' t' e'). Qed.
Lemma lem5743417 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term999 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem5743416 _2963 g t e g' t'). Qed.
Lemma lem5743418 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1000 _2963 g t e.
Proof. exact (fun g' : Prop => @lem5743417 _2963 g t e g'). Qed.
Lemma lem5743419 {A : Type'} (g : Prop) (t : A -> Prop) (e : A -> Prop) : term1001 A g t e.
Proof. exact (@lem5743418 (A -> Prop) g t e). Qed.
Lemma lem5743420 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : term1002 A B x op f s.
Proof. exact (@lem5743419 A ((f x) = (@neutral B op)) (@support A B op f s) (term977 A B x op f s)). Qed.
Lemma lem5743421 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) : term1003 A B x op f s g'.
Proof. exact (@lem5743420 A B x op f s g'). Qed.
Lemma lem5743422 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) : (term1003 A B x op f s g') = (term1004 A B x op f s g').
Proof. exact (eq_refl (term1003 A B x op f s g')). Qed.
Lemma lem5743423 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) : term1004 A B x op f s g'.
Proof. exact (EQ_MP (@lem5743422 A B x op f s g') (@lem5743421 A B x op f s g')). Qed.
Lemma lem5743424 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) : term1005 A B x op f s g' t'.
Proof. exact (@lem5743423 A B x op f s g' t'). Qed.
Lemma lem5743425 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) : (term1005 A B x op f s g' t') = (term1006 A B x op f s g' t').
Proof. exact (eq_refl (term1005 A B x op f s g' t')). Qed.
Lemma lem5743426 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) : term1006 A B x op f s g' t'.
Proof. exact (EQ_MP (@lem5743425 A B x op f s g' t') (@lem5743424 A B x op f s g' t')). Qed.
Lemma lem5743427 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) (e' : A -> Prop) : term1007 A B x op f s g' t' e'.
Proof. exact (@lem5743426 A B x op f s g' t' e'). Qed.
Lemma lem5743428 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) (e' : A -> Prop) : (term1007 A B x op f s g' t' e') = (term1008 A B x op f s g' t' e').
Proof. exact (eq_refl (term1007 A B x op f s g' t' e')). Qed.
Lemma lem5743429 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (g' : Prop) (t' : A -> Prop) (e' : A -> Prop) : term1008 A B x op f s g' t' e'.
Proof. exact (EQ_MP (@lem5743428 A B x op f s g' t' e') (@lem5743427 A B x op f s g' t' e')). Qed.
Lemma lem5743431 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : ((f x) = (@neutral B op)) = False.
Proof. exact (@lem5743397 A B f x op (@lem5738133 A B f x op h1)). Qed.
Lemma lem5743432 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (t' : A -> Prop) (e' : A -> Prop) : term1053 A B x op f s t' e'.
Proof. exact (@lem5743429 A B x op f s False t' e'). Qed.
Lemma lem5743433 {A B : Type'} (s : A -> Prop) (t' : A -> Prop) (e' : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1054 A B x op f s t' e'.
Proof. exact (@lem5743432 A B x op f s t' e' (@lem5743431 A B f x op h1)). Qed.
Lemma lem5743437 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (@support A B op f s).
Proof. exact (eq_refl (@support A B op f s)). Qed.
Lemma lem5743438 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : term1055 A B op f s.
Proof. exact (fun h0 : False => @lem5743437 A B op f s). Qed.
Lemma lem5743439 {A B : Type'} (s : A -> Prop) (e' : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1056 A B x op f s e'.
Proof. exact (@lem5743433 A B s (@support A B op f s) e' f x op h1). Qed.
Lemma lem5743440 {A B : Type'} (s : A -> Prop) (e' : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1057 A B x op f s e'.
Proof. exact (@lem5743439 A B s e' f x op h1 (@lem5743438 A B op f s)). Qed.
Lemma lem5743446 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term977 A B x op f s) = (term977 A B x op f s).
Proof. exact (eq_refl (term977 A B x op f s)). Qed.
Lemma lem5743447 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : term1058 A B x op f s.
Proof. exact (fun h0 : ~ False => @lem5743446 A B x op f s). Qed.
Lemma lem5743448 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1059 A B x op f s.
Proof. exact (@lem5743440 A B s (term977 A B x op f s) f x op h1). Qed.
Lemma lem5743449 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term946 A B x op f s) = (term1060 A B x op f s).
Proof. exact (@lem5743448 A B s f x op h1 (@lem5743447 A B x op f s)). Qed.
Lemma lem5743451 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5743452 {A : Type'} (t1 : A -> Prop) (t2 : A -> Prop) : (@COND (A -> Prop) False t1 t2) = t2.
Proof. exact (@lem5743451 (A -> Prop) t1 t2). Qed.
Lemma lem5743453 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1060 A B x op f s) = (term977 A B x op f s).
Proof. exact (@lem5743452 A (@support A B op f s) (term977 A B x op f s)). Qed.
Lemma lem5743454 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term946 A B x op f s) = (term977 A B x op f s).
Proof. exact (TRANS (@lem5743449 A B s f x op h1) (@lem5743453 A B x op f s)). Qed.
Lemma lem5743455 {A B : Type'} (op : type1400 B) (f : A -> B) : (term929 A B op f) = (term929 A B op f).
Proof. exact (eq_refl (term929 A B op f)). Qed.
Lemma lem5743456 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term954 A B x op f s) = (term1061 A B x op f s).
Proof. exact (MK_COMB (@lem5743455 A B op f) (@lem5743454 A B s f x op h1)). Qed.
Lemma lem5743457 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5743458 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term956 A B x f s op) = (term1062 A B x f s op).
Proof. exact (MK_COMB (@lem5743456 A B s f x op h1) (@lem5743457 B op)). Qed.
Lemma lem5743460 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1049 A B x f s op.
Proof. exact (fun h0 : @FINITE A s => @lem5743389 A B x f op s h1 h0). Qed.
Lemma lem5743461 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1049 A B x f s op.
Proof. exact (@lem5743460 A B x s f op h1). Qed.
Lemma lem5743462 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) : term1063 A B x f s op.
Proof. exact (@lem5743461 A B x (@support A B op f s) f op h1). Qed.
Lemma lem5743464 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : (term916 A B op f s) = True.
Proof. exact (EQ_MP (@lem5743395 A B op f s) (@lem5742561 A B op f s h1)). Qed.
Lemma lem5743465 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : True = (term916 A B op f s).
Proof. exact (SYM (@lem5743464 A B op f s h1)). Qed.
Lemma lem5743466 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term916 A B op f s) : term916 A B op f s.
Proof. exact (EQ_MP (@lem5743465 A B op f s h1) (@lem0)). Qed.
Lemma lem5743467 {A B : Type'} (x : A) (op : type1400 B) (f : A -> B) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) : (term1062 A B x f s op) = (term1064 A B x f s op).
Proof. exact (@lem5743462 A B x s f op h1 (@lem5743466 A B op f s h2)). Qed.
Lemma lem5743469 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) (e' : _2963) : term997 _2963 g t e g' t' e'.
Proof. exact (EQ_MP (@lem14781 _2963 g t e g' t' e') (@lem15222 _2963 g t e g' t' e')). Qed.
Lemma lem5743470 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) (t' : _2963) : term998 _2963 g t e g' t'.
Proof. exact (fun e' : _2963 => @lem5743469 _2963 g t e g' t' e'). Qed.
Lemma lem5743471 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) (g' : Prop) : term999 _2963 g t e g'.
Proof. exact (fun t' : _2963 => @lem5743470 _2963 g t e g' t'). Qed.
Lemma lem5743472 {_2963 : Type'} (g : Prop) (t : _2963) (e : _2963) : term1000 _2963 g t e.
Proof. exact (fun g' : Prop => @lem5743471 _2963 g t e g'). Qed.
Lemma lem5743473 {B : Type'} (g : Prop) (t : B) (e : B) : term1000 B g t e.
Proof. exact (@lem5743472 B g t e). Qed.
Lemma lem5743474 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1065 A B x f s op.
Proof. exact (@lem5743473 B (term1066 A B x op f s) (term963 A B f s op) (term1067 A B x f s op)). Qed.
Lemma lem5743475 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) : term1068 A B x f s op g'.
Proof. exact (@lem5743474 A B x f s op g'). Qed.
Lemma lem5743476 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) : (term1068 A B x f s op g') = (term1069 A B x f s op g').
Proof. exact (eq_refl (term1068 A B x f s op g')). Qed.
Lemma lem5743477 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) : term1069 A B x f s op g'.
Proof. exact (EQ_MP (@lem5743476 A B x f s op g') (@lem5743475 A B x f s op g')). Qed.
Lemma lem5743478 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) : term1070 A B x f s op g' t'.
Proof. exact (@lem5743477 A B x f s op g' t'). Qed.
Lemma lem5743479 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) : (term1070 A B x f s op g' t') = (term1071 A B x f s op g' t').
Proof. exact (eq_refl (term1070 A B x f s op g' t')). Qed.
Lemma lem5743480 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) : term1071 A B x f s op g' t'.
Proof. exact (EQ_MP (@lem5743479 A B x f s op g' t') (@lem5743478 A B x f s op g' t')). Qed.
Lemma lem5743481 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) (e' : B) : term1072 A B x f s op g' t' e'.
Proof. exact (@lem5743480 A B x f s op g' t' e'). Qed.
Lemma lem5743482 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) (e' : B) : (term1072 A B x f s op g' t' e') = (term1073 A B x f s op g' t' e').
Proof. exact (eq_refl (term1072 A B x f s op g' t' e')). Qed.
Lemma lem5743483 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (g' : Prop) (t' : B) (e' : B) : term1073 A B x f s op g' t' e'.
Proof. exact (EQ_MP (@lem5743482 A B x f s op g' t' e') (@lem5743481 A B x f s op g' t' e')). Qed.
Lemma lem5743485 {_119826 _119829 : Type'} (s : _119829 -> Prop) (f : _119829 -> _119826) (x : _119829) (op : type1400 _119826) : (term1044 _119826 _119829 x op f s) = (term1045 _119826 _119829 s f x op).
Proof. exact (EQ_MP (@lem5743378 _119826 _119829 s f x op) (@lem5743377 _119826 _119829 f x op s)). Qed.
Lemma lem5743486 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) : (term1066 A B x op f s) = (term1074 A B s f x op).
Proof. exact (@lem5743485 B A s f x op). Qed.
Lemma lem5743490 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : ((f x) = (@neutral B op)) = False.
Proof. exact (@lem5743397 A B f x op (@lem5738133 A B f x op h1)). Qed.
Lemma lem5743491 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5743492 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term2 A B f x op) = (~ False).
Proof. exact (MK_COMB (@lem5743491) (@lem5743490 A B f x op h1)). Qed.
Lemma lem5743494 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem5743495 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term2 A B f x op) = True.
Proof. exact (TRANS (@lem5743492 A B f x op h1) (@lem5743494)). Qed.
Lemma lem5743496 {A : Type'} (x : A) (s : A -> Prop) : (term1075 A x s) = (term1075 A x s).
Proof. exact (eq_refl (term1075 A x s)). Qed.
Lemma lem5743497 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term1074 A B s f x op) = (term1076 A x s).
Proof. exact (MK_COMB (@lem5743496 A x s) (@lem5743495 A B f x op h1)). Qed.
Lemma lem5743499 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem5743500 {A : Type'} (x : A) (s : A -> Prop) : (term1076 A x s) = (@IN A x s).
Proof. exact (@lem5743499 (@IN A x s)). Qed.
Lemma lem5743501 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term1074 A B s f x op) = (@IN A x s).
Proof. exact (TRANS (@lem5743497 A B s f x op h1) (@lem5743500 A x s)). Qed.
Lemma lem5743502 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term1066 A B x op f s) = (@IN A x s).
Proof. exact (TRANS (@lem5743486 A B s f x op) (@lem5743501 A B s f x op h1)). Qed.
Lemma lem5743503 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (t' : B) (e' : B) : term1077 A B f op x s t' e'.
Proof. exact (@lem5743483 A B x f s op (@IN A x s) t' e'). Qed.
Lemma lem5743504 {A B : Type'} (s : A -> Prop) (t' : B) (e' : B) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1078 A B f op x s t' e'.
Proof. exact (@lem5743503 A B f op x s t' e' (@lem5743502 A B s f x op h1)). Qed.
Lemma lem5743508 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5743509 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1029 A B x f s op.
Proof. exact (fun h0 : @IN A x s => @lem5743508 A B f s op). Qed.
Lemma lem5743510 {A B : Type'} (s : A -> Prop) (e' : B) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1079 A B x f s op e'.
Proof. exact (@lem5743504 A B s (term963 A B f s op) e' f x op h1). Qed.
Lemma lem5743511 {A B : Type'} (s : A -> Prop) (e' : B) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1080 A B x f s op e'.
Proof. exact (@lem5743510 A B s e' f x op h1 (@lem5743509 A B x f s op)). Qed.
Lemma lem5743516 {A B : Type'} (f : A -> B) (y : A) : (term1081 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem5743517 {A B : Type'} (f : type1411 A B) (y : A) : (term1082 A B f y) = (f y).
Proof. exact (@lem5743516 A (B -> B) f y). Qed.
Lemma lem5743518 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term1083 A B op f x) = (term80 A B op f x).
Proof. exact (@lem5743517 A B (term14 A B op f) x). Qed.
Lemma lem5743519 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5743520 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1084 A B op f) = (term14 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5743519 A B op f x)). Qed.
Lemma lem5743521 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5743522 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term1083 A B op f x) = (term80 A B op f x).
Proof. exact (MK_COMB (@lem5743520 A B op f) (@lem5743521 A x)). Qed.
Lemma lem5743523 {B : Type'} : (@eq (B -> B)) = (@eq (B -> B)).
Proof. exact (eq_refl (@eq (B -> B))). Qed.
Lemma lem5743524 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term1085 A B op f x) = (term1086 A B op f x).
Proof. exact (MK_COMB (@lem5743523 B) (@lem5743522 A B op f x)). Qed.
Lemma lem5743525 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5743526 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : ((term1083 A B op f x) = (term80 A B op f x)) = ((term80 A B op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5743524 A B op f x) (@lem5743525 A B op f x)). Qed.
Lemma lem5743527 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (EQ_MP (@lem5743526 A B op f x) (@lem5743518 A B op f x)). Qed.
Lemma lem5743528 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5743529 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1067 A B x f s op) = (term1087 A B x f s op).
Proof. exact (MK_COMB (@lem5743527 A B op f x) (@lem5743528 A B f s op)). Qed.
Lemma lem5743531 {A B : Type'} (f : A -> B) (y : A) : (term1081 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem5743532 {B : Type'} (f : B -> B) (y : B) : (term1088 B f y) = (f y).
Proof. exact (@lem5743531 B B f y). Qed.
Lemma lem5743533 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1089 A B x f s op) = (term1087 A B x f s op).
Proof. exact (@lem5743532 B (term81 A B op f x) (term963 A B f s op)). Qed.
Lemma lem5743534 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term83 A B op f x a) = (term84 A B op f x a).
Proof. exact (eq_refl (term83 A B op f x a)). Qed.
Lemma lem5743535 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term1090 A B op f x) = (term81 A B op f x).
Proof. exact (fun_ext (fun a : B => @lem5743534 A B op f x a)). Qed.
Lemma lem5743536 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (eq_refl (term963 A B f s op)). Qed.
Lemma lem5743537 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1089 A B x f s op) = (term1087 A B x f s op).
Proof. exact (MK_COMB (@lem5743535 A B op f x) (@lem5743536 A B f s op)). Qed.
Lemma lem5743538 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5743539 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1091 A B x f s op) = (term1092 A B x f s op).
Proof. exact (MK_COMB (@lem5743538 B) (@lem5743537 A B x f s op)). Qed.
Lemma lem5743540 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1087 A B x f s op) = (term971 A B x f s op).
Proof. exact (eq_refl (term1087 A B x f s op)). Qed.
Lemma lem5743541 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term1089 A B x f s op) = (term1087 A B x f s op)) = ((term1087 A B x f s op) = (term971 A B x f s op)).
Proof. exact (MK_COMB (@lem5743539 A B x f s op) (@lem5743540 A B x f s op)). Qed.
Lemma lem5743542 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1087 A B x f s op) = (term971 A B x f s op).
Proof. exact (EQ_MP (@lem5743541 A B x f s op) (@lem5743533 A B x f s op)). Qed.
Lemma lem5743543 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1067 A B x f s op) = (term971 A B x f s op).
Proof. exact (TRANS (@lem5743529 A B x f s op) (@lem5743542 A B x f s op)). Qed.
Lemma lem5743544 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1093 A B x f s op.
Proof. exact (fun h0 : term1034 A x s => @lem5743543 A B x f s op). Qed.
Lemma lem5743545 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : term1094 A B x f s op.
Proof. exact (@lem5743511 A B s (term971 A B x f s op) f x op h1). Qed.
Lemma lem5743546 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term2 A B f x op) : (term1064 A B x f s op) = (term973 A B x f s op).
Proof. exact (@lem5743545 A B s f x op h1 (@lem5743544 A B x f s op)). Qed.
Lemma lem5743580 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : (term1062 A B x f s op) = (term973 A B x f s op).
Proof. exact (TRANS (@lem5743467 A B x op f s h1 h2) (@lem5743546 A B s f x op h3)). Qed.
Lemma lem5743581 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : (term956 A B x f s op) = (term973 A B x f s op).
Proof. exact (TRANS (@lem5743458 A B s f x op h3) (@lem5743580 A B s f x op h1 h2 h3)). Qed.
Lemma lem5743582 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5743583 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : (term996 A B x f s op) = (term1095 A B x f s op).
Proof. exact (MK_COMB (@lem5743582 B) (@lem5743581 A B s f x op h1 h2 h3)). Qed.
Lemma lem5743650 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term973 A B x f s op) = (term973 A B x f s op).
Proof. exact (eq_refl (term973 A B x f s op)). Qed.
Lemma lem5743651 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : ((term956 A B x f s op) = (term973 A B x f s op)) = ((term973 A B x f s op) = (term973 A B x f s op)).
Proof. exact (MK_COMB (@lem5743583 A B s f x op h1 h2 h3) (@lem5743650 A B x f s op)). Qed.
Lemma lem5743653 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem5743654 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem5743653 B x). Qed.
Lemma lem5743655 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term973 A B x f s op) = (term973 A B x f s op)) = True.
Proof. exact (@lem5743654 B (term973 A B x f s op)). Qed.
Lemma lem5743656 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : ((term956 A B x f s op) = (term973 A B x f s op)) = True.
Proof. exact (TRANS (@lem5743651 A B s f x op h1 h2 h3) (@lem5743655 A B x f s op)). Qed.
Lemma lem5743657 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : True = ((term956 A B x f s op) = (term973 A B x f s op)).
Proof. exact (SYM (@lem5743656 A B s f x op h1 h2 h3)). Qed.
Lemma lem5743658 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : term2 A B f x op) : (term956 A B x f s op) = (term973 A B x f s op).
Proof. exact (EQ_MP (@lem5743657 A B s f x op h1 h2 h3) (@lem0)). Qed.
Lemma lem5743659 {B : Type'} (_474 : B) (_475 : Prop) (_476 : B -> Prop) (_477 : B) : (term1096 B _476 _475 _474 _477) = (term1097 B _474 _475 _476 _477).
Proof. exact (@lem13473 B _474 _475 _476 _477). Qed.
Lemma lem5743660 {A B : Type'} (_474 : B) (_475 : Prop) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_477 : B) : (term1098 A B f s op _475 _474 _477) = (term1099 A B _474 _475 f s op _477).
Proof. exact (@lem5743659 B _474 _475 (term1100 A B f s op) _477). Qed.
Lemma lem5743661 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1101 A B x f s op) = (term1102 A B x f s op).
Proof. exact (@lem5743660 A B (term963 A B f s op) (@IN A x s) f s op (term1032 A B f s op)). Qed.
Lemma lem5743662 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1103 A B f s op) = ((term963 A B f s op) = (term1032 A B f s op)).
Proof. exact (eq_refl (term1103 A B f s op)). Qed.
Lemma lem5743663 {A : Type'} (x : A) (s : A -> Prop) : (term1104 A x s) = (term1104 A x s).
Proof. exact (eq_refl (term1104 A x s)). Qed.
Lemma lem5743664 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1105 A B x f s op) = (term1106 A B x f s op).
Proof. exact (MK_COMB (@lem5743663 A x s) (@lem5743662 A B f s op)). Qed.
Lemma lem5743665 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1107 A B f s op) = ((term963 A B f s op) = (term963 A B f s op)).
Proof. exact (eq_refl (term1107 A B f s op)). Qed.
Lemma lem5743666 {A : Type'} (x : A) (s : A -> Prop) : (term1108 A x s) = (term1108 A x s).
Proof. exact (eq_refl (term1108 A x s)). Qed.
Lemma lem5743667 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1109 A B x f s op) = (term1029 A B x f s op).
Proof. exact (MK_COMB (@lem5743666 A x s) (@lem5743665 A B f s op)). Qed.
Lemma lem5743668 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5743669 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1110 A B x f s op) = (term1111 A B x f s op).
Proof. exact (MK_COMB (@lem5743668) (@lem5743667 A B x f s op)). Qed.
Lemma lem5743670 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1102 A B x f s op) = (term1112 A B x f s op).
Proof. exact (MK_COMB (@lem5743669 A B x f s op) (@lem5743664 A B x f s op)). Qed.
Lemma lem5743671 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1101 A B x f s op) = ((term963 A B f s op) = (term1036 A B x f s op)).
Proof. exact (eq_refl (term1101 A B x f s op)). Qed.
Lemma lem5743672 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5743673 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1113 A B x f s op) = (term1114 A B x f s op).
Proof. exact (MK_COMB (@lem5743672) (@lem5743671 A B x f s op)). Qed.
Lemma lem5743674 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term1101 A B x f s op) = (term1102 A B x f s op)) = (((term963 A B f s op) = (term1036 A B x f s op)) = (term1112 A B x f s op)).
Proof. exact (MK_COMB (@lem5743673 A B x f s op) (@lem5743670 A B x f s op)). Qed.
Lemma lem5743675 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term963 A B f s op) = (term1036 A B x f s op)) = (term1112 A B x f s op).
Proof. exact (EQ_MP (@lem5743674 A B x f s op) (@lem5743661 A B x f s op)). Qed.
Lemma lem5743676 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1112 A B x f s op) = ((term963 A B f s op) = (term1036 A B x f s op)).
Proof. exact (SYM (@lem5743675 A B x f s op)). Qed.
Lemma lem5743677 {A : Type'} (x : A) (s : A -> Prop) (h1 : @IN A x s) : @IN A x s.
Proof. exact (h1). Qed.
Lemma lem5743694 {A : Type'} (x : A) (s : A -> Prop) (h1 : term1034 A x s) : term1034 A x s.
Proof. exact (h1). Qed.
Lemma lem5743712 (p : Prop) : p = (term54 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem5743713 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term963 A B f s op) = (term963 A B f s op)) = (term1115 A B f s op).
Proof. exact (@lem5743712 ((term963 A B f s op) = (term963 A B f s op))). Qed.
Lemma lem5743714 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1115 A B f s op) = ((term963 A B f s op) = (term963 A B f s op)).
Proof. exact (SYM (@lem5743713 A B f s op)). Qed.
Lemma lem5743715 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1116 A B f s op) : term1116 A B f s op.
Proof. exact (h1). Qed.
Lemma lem5743716 {B : Type'} : term57 B.
Proof. exact (@lem5712802 B). Qed.
Lemma lem5743721 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1117 A B x f s op) : term1117 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5743722 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1118 A B x f s op.
Proof. exact (fun h0 : term1117 A B x f s op => @lem5743721 A B x f s op h0). Qed.
Lemma lem5743723 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1118 A B x f s op) : term1118 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5743724 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1117 A B x f s op) : term1117 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5743725 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1117 A B x f s op) (h2 : term1118 A B x f s op) : term1117 A B x f s op.
Proof. exact (@lem5743723 A B x f s op h2 (@lem5743724 A B x f s op h1)). Qed.
Lemma lem5743726 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1117 A B x f s op) : term1119 A B x f s op.
Proof. exact (fun h0 : term1118 A B x f s op => @lem5743725 A B x f s op h1 h0). Qed.
Lemma lem5743727 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1118 A B x f s op) : term1118 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5743728 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1117 A B x f s op) (h2 : term1118 A B x f s op) : term1117 A B x f s op.
Proof. exact (@lem5743726 A B x f s op h1 (@lem5743727 A B x f s op h2)). Qed.
Lemma lem5743729 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1118 A B x f s op) : term1118 A B x f s op.
Proof. exact (fun h0 : term1117 A B x f s op => @lem5743728 A B x f s op h0 h1). Qed.
Lemma lem5743730 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1120 A B x f s op.
Proof. exact (fun h0 : term1118 A B x f s op => @lem5743729 A B x f s op h0). Qed.
Lemma lem5743733 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1118 A B x f s op.
Proof. exact (@lem5743730 A B x f s op (@lem5743722 A B x f s op)). Qed.
Lemma lem5743734 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1118 A B x f s op.
Proof. exact (@lem5743733 A B x f s op). Qed.
Lemma lem5743776 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem5743777 {B : Type'} : (term62 B) = (term63 B).
Proof. exact (@lem5743776 (term57 B)). Qed.
Lemma lem5743810 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1121 A B f s op) = (term1121 A B f s op).
Proof. exact (eq_refl (term1121 A B f s op)). Qed.
Lemma lem5743811 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1122 A B f s op) = (term1123 A B f s op).
Proof. exact (MK_COMB (@lem5743810 A B f s op) (@lem5743777 B)). Qed.
Lemma lem5743814 {A : Type'} (x : A) (s : A -> Prop) : (term1108 A x s) = (term1108 A x s).
Proof. exact (eq_refl (term1108 A x s)). Qed.
Lemma lem5743815 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1124 A B x f s op) = (term1125 A B x f s op).
Proof. exact (MK_COMB (@lem5743814 A x s) (@lem5743811 A B f s op)). Qed.
Lemma lem5743818 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5743819 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1127 A B x f s op) = (term1128 A B x f s op).
Proof. exact (MK_COMB (@lem5743818 A B f x op) (@lem5743815 A B x f s op)). Qed.
Lemma lem5743822 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5743823 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1130 A B x f s op) = (term1131 A B x f s op).
Proof. exact (MK_COMB (@lem5743822 A B op f s) (@lem5743819 A B x f s op)). Qed.
Lemma lem5743826 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1132 A B f op) = (term1132 A B f op).
Proof. exact (eq_refl (term1132 A B f op)). Qed.
Lemma lem5743827 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1133 A B x f s op) = (term1134 A B x f s op).
Proof. exact (MK_COMB (@lem5743826 A B f op) (@lem5743823 A B x f s op)). Qed.
Lemma lem5743830 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1135 A B f op) = (term1135 A B f op).
Proof. exact (eq_refl (term1135 A B f op)). Qed.
Lemma lem5743831 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1136 A B x f s op) = (term1137 A B x f s op).
Proof. exact (MK_COMB (@lem5743830 A B f op) (@lem5743827 A B x f s op)). Qed.
Lemma lem5743834 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5743835 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1117 A B x f s op) = (term1138 A B x f s op).
Proof. exact (MK_COMB (@lem5743834 B op) (@lem5743831 A B x f s op)). Qed.
Lemma lem5743838 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1139 A B f s op) = (term1140 A B f s op).
Proof. exact (fun_ext (fun x : A => @lem5743835 A B x f s op)). Qed.
Lemma lem5743839 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5743840 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1141 A B f s op) = (term1142 A B f s op).
Proof. exact (MK_COMB (@lem5743839 A) (@lem5743838 A B f s op)). Qed.
Lemma lem5743845 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1143 A B s op) = (term1144 A B s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5743840 A B f s op)). Qed.
Lemma lem5743846 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5743847 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1145 A B s op) = (term1146 A B s op).
Proof. exact (MK_COMB (@lem5743846 A B) (@lem5743845 A B s op)). Qed.
Lemma lem5743852 {A B : Type'} (op : type1400 B) : (term1147 A B op) = (term1148 A B op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5743847 A B s op)). Qed.
Lemma lem5743853 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5743854 {A B : Type'} (op : type1400 B) : (term1149 A B op) = (term1150 A B op).
Proof. exact (MK_COMB (@lem5743853 A) (@lem5743852 A B op)). Qed.
Lemma lem5743859 {A B : Type'} : (term1151 A B) = (term1152 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5743854 A B op)). Qed.
Lemma lem5743860 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5743861 {A B : Type'} : (term1153 A B) = (term1154 A B).
Proof. exact (MK_COMB (@lem5743860 B) (@lem5743859 A B)). Qed.
Lemma lem5743866 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5743867 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1155 A B f s op) = (term1155 A B f s op).
Proof. exact (eq_refl (term1155 A B f s op)). Qed.
Lemma lem5743868 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1156 A B x f s op) = (term1157 A B x f s op).
Proof. exact (MK_COMB (@lem5743866 A B op f x) (@lem5743867 A B f s op)). Qed.
Lemma lem5743869 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1157 A B x f s op) = (term1158 A B x f s op).
Proof. exact (eq_refl (term1157 A B x f s op)). Qed.
Lemma lem5743870 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1156 A B x f s op) = (term1158 A B x f s op).
Proof. exact (TRANS (@lem5743868 A B x f s op) (@lem5743869 A B x f s op)). Qed.
Lemma lem5743871 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1159 A B x f s op) = (term1159 A B x f s op).
Proof. exact (eq_refl (term1159 A B x f s op)). Qed.
Lemma lem5743872 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1051 A B x f s op) = (term1160 A B x f s op).
Proof. exact (MK_COMB (@lem5743871 A B x f s op) (@lem5743870 A B x f s op)). Qed.
Lemma lem5743873 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term1161 A B f x s op) = (term1161 A B f x s op).
Proof. exact (eq_refl (term1161 A B f x s op)). Qed.
Lemma lem5743874 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term1050 A B f x s op) = (term1051 A B x f s op)) = ((term1050 A B f x s op) = (term1160 A B x f s op)).
Proof. exact (MK_COMB (@lem5743873 A B f x s op) (@lem5743872 A B x f s op)). Qed.
Lemma lem5743875 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5743876 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1049 A B x f s op) = (term1163 A B x f s op).
Proof. exact (MK_COMB (@lem5743875 A s) (@lem5743874 A B x f s op)). Qed.
Lemma lem5743877 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) : (term1164 A B x f op) = (term1165 A B x f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5743876 A B x f s op)). Qed.
Lemma lem5743878 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5743879 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) : (term1047 A B x f op) = (term1166 A B x f op).
Proof. exact (MK_COMB (@lem5743878 A) (@lem5743877 A B x f op)). Qed.
Lemma lem5743880 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1167 A B f op) = (term1168 A B f op).
Proof. exact (fun_ext (fun x : A => @lem5743879 A B x f op)). Qed.
Lemma lem5743881 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5743882 {A B : Type'} (f : A -> B) (op : type1400 B) : (term914 A B f op) = (term1169 A B f op).
Proof. exact (MK_COMB (@lem5743881 A) (@lem5743880 A B f op)). Qed.
Lemma lem5743883 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5743884 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1132 A B f op) = (term1170 A B f op).
Proof. exact (MK_COMB (@lem5743883) (@lem5743882 A B f op)). Qed.
Lemma lem5743885 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1131 A B x f s op) = (term1131 A B x f s op).
Proof. exact (eq_refl (term1131 A B x f s op)). Qed.
Lemma lem5743886 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1134 A B x f s op) = (term1171 A B x f s op).
Proof. exact (MK_COMB (@lem5743884 A B f op) (@lem5743885 A B x f s op)). Qed.
Lemma lem5743887 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1135 A B f op) = (term1135 A B f op).
Proof. exact (eq_refl (term1135 A B f op)). Qed.
Lemma lem5743888 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1137 A B x f s op) = (term1172 A B x f s op).
Proof. exact (MK_COMB (@lem5743887 A B f op) (@lem5743886 A B x f s op)). Qed.
Lemma lem5743889 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5743890 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1138 A B x f s op) = (term1173 A B x f s op).
Proof. exact (MK_COMB (@lem5743889 B op) (@lem5743888 A B x f s op)). Qed.
Lemma lem5743891 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1140 A B f s op) = (term1174 A B f s op).
Proof. exact (fun_ext (fun x : A => @lem5743890 A B x f s op)). Qed.
Lemma lem5743892 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5743893 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1142 A B f s op) = (term1175 A B f s op).
Proof. exact (MK_COMB (@lem5743892 A) (@lem5743891 A B f s op)). Qed.
Lemma lem5743894 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1144 A B s op) = (term1176 A B s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5743893 A B f s op)). Qed.
Lemma lem5743895 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5743896 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1146 A B s op) = (term1177 A B s op).
Proof. exact (MK_COMB (@lem5743895 A B) (@lem5743894 A B s op)). Qed.
Lemma lem5743897 {A B : Type'} (op : type1400 B) : (term1148 A B op) = (term1178 A B op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5743896 A B s op)). Qed.
Lemma lem5743898 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5743899 {A B : Type'} (op : type1400 B) : (term1150 A B op) = (term1179 A B op).
Proof. exact (MK_COMB (@lem5743898 A) (@lem5743897 A B op)). Qed.
Lemma lem5743900 {A B : Type'} : (term1152 A B) = (term1180 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5743899 A B op)). Qed.
Lemma lem5743901 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5743902 {A B : Type'} : (term1154 A B) = (term1181 A B).
Proof. exact (MK_COMB (@lem5743901 B) (@lem5743900 A B)). Qed.
Lemma lem5743903 {A B : Type'} : (term1153 A B) = (term1181 A B).
Proof. exact (TRANS (@lem5743861 A B) (@lem5743902 A B)). Qed.
Lemma lem5743904 {A B : Type'} (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : _72351 = (term1182 A B).
Proof. exact (h1). Qed.
Lemma lem5743905 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5743906 {A B : Type'} (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (_72351 op) = (term1183 A B op).
Proof. exact (MK_COMB (@lem5743904 A B _72351 h1) (@lem5743905 B op)). Qed.
Lemma lem5743907 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5743908 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1185 A B _72351 op) = (term1185 A B _72351 op).
Proof. exact (eq_refl (term1185 A B _72351 op)). Qed.
Lemma lem5743909 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : ((_72351 op) = (term1183 A B op)) = ((_72351 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5743908 A B _72351 op) (@lem5743907 A B op)). Qed.
Lemma lem5743910 {A B : Type'} (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (_72351 op) = (term1184 A B op).
Proof. exact (EQ_MP (@lem5743909 A B _72351 op) (@lem5743906 A B op _72351 h1)). Qed.
Lemma lem5743911 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5743912 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (_72351 op f) = (term1186 A B op f).
Proof. exact (MK_COMB (@lem5743910 A B op _72351 h1) (@lem5743911 A B f)). Qed.
Lemma lem5743913 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5743914 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72351 op f) = (term1187 A B _72351 op f).
Proof. exact (eq_refl (term1187 A B _72351 op f)). Qed.
Lemma lem5743915 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72351 op f) = (term1186 A B op f)) = ((_72351 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5743914 A B _72351 op f) (@lem5743913 A B op f)). Qed.
Lemma lem5743916 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (_72351 op f) = (term14 A B op f).
Proof. exact (EQ_MP (@lem5743915 A B _72351 op f) (@lem5743912 A B op f _72351 h1)). Qed.
Lemma lem5743928 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5743929 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5743928 B op x)). Qed.
Lemma lem5743930 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5743931 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5743930 B) (@lem5743929 B op)). Qed.
Lemma lem5743952 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5743953 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5743952 B op x y z)). Qed.
Lemma lem5743954 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5743955 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5743954 B) (@lem5743953 B op x y)). Qed.
Lemma lem5743956 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5743955 B op x y)). Qed.
Lemma lem5743957 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5743958 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5743957 B) (@lem5743956 B op x)). Qed.
Lemma lem5743959 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5743958 B op x)). Qed.
Lemma lem5743960 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5743961 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5743960 B) (@lem5743959 B op)). Qed.
Lemma lem5743962 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5743963 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5743962) (@lem5743961 B op)). Qed.
Lemma lem5743964 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5743963 B op) (@lem5743931 B op)). Qed.
Lemma lem5743977 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5743978 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5743977 B op y x)). Qed.
Lemma lem5743979 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5743980 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5743979 B) (@lem5743978 B op x)). Qed.
Lemma lem5743981 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5743980 B op x)). Qed.
Lemma lem5743982 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5743983 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5743982 B) (@lem5743981 B op)). Qed.
Lemma lem5743984 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5743985 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5743984) (@lem5743983 B op)). Qed.
Lemma lem5743986 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5743985 B op) (@lem5743964 B op)). Qed.
Lemma lem5743991 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5743992 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5743991 B op) (@lem5743986 B op)). Qed.
Lemma lem5743993 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5743992 B op)). Qed.
Lemma lem5743994 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5743995 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5743994 B) (@lem5743993 B)). Qed.
Lemma lem5743996 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5743997 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5743996) (@lem5743995 B)). Qed.
Lemma lem5744000 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744007 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (@support A B op f s).
Proof. exact (eq_refl (@support A B op f s)). Qed.
Lemma lem5744009 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (SYM (@lem5743916 A B op f _72351 h1)). Qed.
Lemma lem5744010 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (@lem5744009 A B op f _72351 h1). Qed.
Lemma lem5744011 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5744012 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744011 A B) (@lem5744010 A B op f _72351 h1)). Qed.
Lemma lem5744013 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1018 A B op f s) = (term1189 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5744012 A B op f _72351 h1) (@lem5744007 A B op f s)). Qed.
Lemma lem5744014 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term963 A B f s op) = (term1190 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744013 A B op f s _72351 h1) (@lem5744000 B op)). Qed.
Lemma lem5744017 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744024 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (@support A B op f s).
Proof. exact (eq_refl (@support A B op f s)). Qed.
Lemma lem5744026 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (SYM (@lem5743916 A B op f _72351 h1)). Qed.
Lemma lem5744027 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (@lem5744026 A B op f _72351 h1). Qed.
Lemma lem5744028 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5744029 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744028 A B) (@lem5744027 A B op f _72351 h1)). Qed.
Lemma lem5744030 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1018 A B op f s) = (term1189 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5744029 A B op f _72351 h1) (@lem5744024 A B op f s)). Qed.
Lemma lem5744031 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term963 A B f s op) = (term1190 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744030 A B op f s _72351 h1) (@lem5744017 B op)). Qed.
Lemma lem5744032 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5744033 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1019 A B f s op) = (term1191 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744032 B) (@lem5744031 A B f s op _72351 h1)). Qed.
Lemma lem5744034 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : ((term963 A B f s op) = (term963 A B f s op)) = ((term1190 A B _72351 f s op) = (term1190 A B _72351 f s op)).
Proof. exact (MK_COMB (@lem5744033 A B f s op _72351 h1) (@lem5744014 A B f s op _72351 h1)). Qed.
Lemma lem5744035 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5744036 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1116 A B f s op) = (term1192 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744035) (@lem5744034 A B f s op _72351 h1)). Qed.
Lemma lem5744037 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744038 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1121 A B f s op) = (term1193 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744037) (@lem5744036 A B f s op _72351 h1)). Qed.
Lemma lem5744039 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1123 A B f s op) = (term1194 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744038 A B f s op _72351 h1) (@lem5743997 B)). Qed.
Lemma lem5744046 {A : Type'} (x : A) (s : A -> Prop) : (term1108 A x s) = (term1108 A x s).
Proof. exact (eq_refl (term1108 A x s)). Qed.
Lemma lem5744047 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1125 A B x f s op) = (term1195 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744046 A x s) (@lem5744039 A B f s op _72351 h1)). Qed.
Lemma lem5744058 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5744059 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1128 A B x f s op) = (term1196 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744058 A B f x op) (@lem5744047 A B x f s op _72351 h1)). Qed.
Lemma lem5744070 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5744071 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1131 A B x f s op) = (term1197 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744070 A B op f s) (@lem5744059 A B x f s op _72351 h1)). Qed.
Lemma lem5744074 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744075 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5744077 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (SYM (@lem5743916 A B op f _72351 h1)). Qed.
Lemma lem5744078 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (@lem5744077 A B op f _72351 h1). Qed.
Lemma lem5744079 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5744080 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744079 A B) (@lem5744078 A B op f _72351 h1)). Qed.
Lemma lem5744081 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1198 A B op f s) = (term1199 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5744080 A B op f _72351 h1) (@lem5744075 A s)). Qed.
Lemma lem5744082 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1155 A B f s op) = (term1200 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744081 A B op f s _72351 h1) (@lem5744074 B op)). Qed.
Lemma lem5744087 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term644 A B op f x) = (term644 A B op f x).
Proof. exact (eq_refl (term644 A B op f x)). Qed.
Lemma lem5744088 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1158 A B x f s op) = (term1201 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744087 A B op f x) (@lem5744082 A B f s op _72351 h1)). Qed.
Lemma lem5744091 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744092 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5744094 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (SYM (@lem5743916 A B op f _72351 h1)). Qed.
Lemma lem5744095 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (@lem5744094 A B op f _72351 h1). Qed.
Lemma lem5744096 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5744097 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744096 A B) (@lem5744095 A B op f _72351 h1)). Qed.
Lemma lem5744098 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1198 A B op f s) = (term1199 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5744097 A B op f _72351 h1) (@lem5744092 A s)). Qed.
Lemma lem5744099 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1155 A B f s op) = (term1200 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744098 A B op f s _72351 h1) (@lem5744091 B op)). Qed.
Lemma lem5744106 {A B : Type'} (x : A) (s : A -> Prop) : (term967 A B x s) = (term967 A B x s).
Proof. exact (eq_refl (term967 A B x s)). Qed.
Lemma lem5744107 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1159 A B x f s op) = (term1202 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744106 A B x s) (@lem5744099 A B f s op _72351 h1)). Qed.
Lemma lem5744108 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1160 A B x f s op) = (term1203 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744107 A B x f s op _72351 h1) (@lem5744088 A B x f s op _72351 h1)). Qed.
Lemma lem5744111 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744116 {A : Type'} (x : A) (s : A -> Prop) : (@INSERT A x s) = (@INSERT A x s).
Proof. exact (eq_refl (@INSERT A x s)). Qed.
Lemma lem5744118 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (SYM (@lem5743916 A B op f _72351 h1)). Qed.
Lemma lem5744119 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (@lem5744118 A B op f _72351 h1). Qed.
Lemma lem5744120 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5744121 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744120 A B) (@lem5744119 A B op f _72351 h1)). Qed.
Lemma lem5744122 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (s : A -> Prop) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1204 A B op f x s) = (term1205 A B _72351 op f x s).
Proof. exact (MK_COMB (@lem5744121 A B op f _72351 h1) (@lem5744116 A x s)). Qed.
Lemma lem5744123 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1050 A B f x s op) = (term1206 A B _72351 f x s op).
Proof. exact (MK_COMB (@lem5744122 A B op f x s _72351 h1) (@lem5744111 B op)). Qed.
Lemma lem5744124 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5744125 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1161 A B f x s op) = (term1207 A B _72351 f x s op).
Proof. exact (MK_COMB (@lem5744124 B) (@lem5744123 A B f x s op _72351 h1)). Qed.
Lemma lem5744126 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : ((term1050 A B f x s op) = (term1160 A B x f s op)) = ((term1206 A B _72351 f x s op) = (term1203 A B x _72351 f s op)).
Proof. exact (MK_COMB (@lem5744125 A B f x s op _72351 h1) (@lem5744108 A B x f s op _72351 h1)). Qed.
Lemma lem5744131 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5744132 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1163 A B x f s op) = (term1208 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744131 A s) (@lem5744126 A B x f s op _72351 h1)). Qed.
Lemma lem5744133 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1165 A B x f op) = (term1209 A B x _72351 f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5744132 A B x f s op _72351 h1)). Qed.
Lemma lem5744134 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5744135 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1166 A B x f op) = (term1210 A B x _72351 f op).
Proof. exact (MK_COMB (@lem5744134 A) (@lem5744133 A B x f op _72351 h1)). Qed.
Lemma lem5744136 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1168 A B f op) = (term1211 A B _72351 f op).
Proof. exact (fun_ext (fun x : A => @lem5744135 A B x f op _72351 h1)). Qed.
Lemma lem5744137 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744138 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1169 A B f op) = (term1212 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744137 A) (@lem5744136 A B f op _72351 h1)). Qed.
Lemma lem5744139 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744140 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1170 A B f op) = (term1213 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744139) (@lem5744138 A B f op _72351 h1)). Qed.
Lemma lem5744141 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1171 A B x f s op) = (term1214 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744140 A B f op _72351 h1) (@lem5744071 A B x f s op _72351 h1)). Qed.
Lemma lem5744144 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744147 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5744148 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem5744150 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (SYM (@lem5743916 A B op f _72351 h1)). Qed.
Lemma lem5744151 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term14 A B op f) = (_72351 op f).
Proof. exact (@lem5744150 A B op f _72351 h1). Qed.
Lemma lem5744152 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5744153 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744152 A B) (@lem5744151 A B op f _72351 h1)). Qed.
Lemma lem5744154 {A B : Type'} (op : type1400 B) (f : A -> B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term931 A B op f) = (term1215 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744153 A B op f _72351 h1) (@lem5744148 A)). Qed.
Lemma lem5744155 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term915 A B f op) = (term1216 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744154 A B op f _72351 h1) (@lem5744147 B op)). Qed.
Lemma lem5744156 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5744157 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1217 A B f op) = (term1218 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744156 B) (@lem5744155 A B f op _72351 h1)). Qed.
Lemma lem5744158 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : ((term915 A B f op) = (@neutral B op)) = ((term1216 A B _72351 f op) = (@neutral B op)).
Proof. exact (MK_COMB (@lem5744157 A B f op _72351 h1) (@lem5744144 B op)). Qed.
Lemma lem5744159 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744160 {A B : Type'} (f : A -> B) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1135 A B f op) = (term1219 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744159) (@lem5744158 A B f op _72351 h1)). Qed.
Lemma lem5744161 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1172 A B x f s op) = (term1220 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744160 A B f op _72351 h1) (@lem5744141 A B x f s op _72351 h1)). Qed.
Lemma lem5744166 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5744167 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1173 A B x f s op) = (term1221 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744166 B op) (@lem5744161 A B x f s op _72351 h1)). Qed.
Lemma lem5744168 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1174 A B f s op) = (term1222 A B _72351 f s op).
Proof. exact (fun_ext (fun x : A => @lem5744167 A B x f s op _72351 h1)). Qed.
Lemma lem5744169 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744170 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1175 A B f s op) = (term1223 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744169 A) (@lem5744168 A B f s op _72351 h1)). Qed.
Lemma lem5744171 {A B : Type'} (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1176 A B s op) = (term1224 A B _72351 s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744170 A B f s op _72351 h1)). Qed.
Lemma lem5744172 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744173 {A B : Type'} (s : A -> Prop) (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1177 A B s op) = (term1225 A B _72351 s op).
Proof. exact (MK_COMB (@lem5744172 A B) (@lem5744171 A B s op _72351 h1)). Qed.
Lemma lem5744174 {A B : Type'} (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1178 A B op) = (term1226 A B _72351 op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5744173 A B s op _72351 h1)). Qed.
Lemma lem5744175 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5744176 {A B : Type'} (op : type1400 B) (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1179 A B op) = (term1227 A B _72351 op).
Proof. exact (MK_COMB (@lem5744175 A) (@lem5744174 A B op _72351 h1)). Qed.
Lemma lem5744177 {A B : Type'} (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1180 A B) = (term1228 A B _72351).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744176 A B op _72351 h1)). Qed.
Lemma lem5744178 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744179 {A B : Type'} (_72351 : type749 A B) (h1 : _72351 = (term1182 A B)) : (term1181 A B) = (term1229 A B _72351).
Proof. exact (MK_COMB (@lem5744178 B) (@lem5744177 A B _72351 h1)). Qed.
Lemma lem5744180 {A B : Type'} (_72351 : type749 A B) : term1230 A B _72351.
Proof. exact (fun h0 : _72351 = (term1182 A B) => @lem5744179 A B _72351 h0). Qed.
Lemma lem5744181 {A B : Type'} : term1231 A B.
Proof. exact (fun _72351 : type749 A B => @lem5744180 A B _72351). Qed.
Lemma lem5744183 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term1232 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem5744184 {A B : Type'} (P : Prop) (c : type749 A B) (Q : type191 A B) : term1233 A B P c Q.
Proof. exact (@lem5744183 (type749 A B) P c Q). Qed.
Lemma lem5744185 {A B : Type'} : term1234 A B.
Proof. exact (@lem5744184 A B (term1181 A B) (term1182 A B) (term1235 A B)). Qed.
Lemma lem5744186 {A B : Type'} (_72351 : type749 A B) : (term1236 A B _72351) = (term1229 A B _72351).
Proof. exact (eq_refl (term1236 A B _72351)). Qed.
Lemma lem5744187 {A B : Type'} : (term1237 A B) = (term1237 A B).
Proof. exact (eq_refl (term1237 A B)). Qed.
Lemma lem5744188 {A B : Type'} (_72351 : type749 A B) : ((term1181 A B) = (term1236 A B _72351)) = ((term1181 A B) = (term1229 A B _72351)).
Proof. exact (MK_COMB (@lem5744187 A B) (@lem5744186 A B _72351)). Qed.
Lemma lem5744189 {A B : Type'} (_72351 : type749 A B) : (term1238 A B _72351) = (term1238 A B _72351).
Proof. exact (eq_refl (term1238 A B _72351)). Qed.
Lemma lem5744190 {A B : Type'} (_72351 : type749 A B) : (term1239 A B _72351) = (term1230 A B _72351).
Proof. exact (MK_COMB (@lem5744189 A B _72351) (@lem5744188 A B _72351)). Qed.
Lemma lem5744191 {A B : Type'} : (term1240 A B) = (term1241 A B).
Proof. exact (fun_ext (fun _72351 : type749 A B => @lem5744190 A B _72351)). Qed.
Lemma lem5744192 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744193 {A B : Type'} : (term1242 A B) = (term1231 A B).
Proof. exact (MK_COMB (@lem5744192 A B) (@lem5744191 A B)). Qed.
Lemma lem5744194 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744195 {A B : Type'} : (term1243 A B) = (term1244 A B).
Proof. exact (MK_COMB (@lem5744194) (@lem5744193 A B)). Qed.
Lemma lem5744196 {A B : Type'} (_72351 : type749 A B) : (term1236 A B _72351) = (term1229 A B _72351).
Proof. exact (eq_refl (term1236 A B _72351)). Qed.
Lemma lem5744197 {A B : Type'} (_72351 : type749 A B) : (term1238 A B _72351) = (term1238 A B _72351).
Proof. exact (eq_refl (term1238 A B _72351)). Qed.
Lemma lem5744198 {A B : Type'} (_72351 : type749 A B) : (term1245 A B _72351) = (term1246 A B _72351).
Proof. exact (MK_COMB (@lem5744197 A B _72351) (@lem5744196 A B _72351)). Qed.
Lemma lem5744199 {A B : Type'} : (term1247 A B) = (term1248 A B).
Proof. exact (fun_ext (fun _72351 : type749 A B => @lem5744198 A B _72351)). Qed.
Lemma lem5744200 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744201 {A B : Type'} : (term1249 A B) = (term1250 A B).
Proof. exact (MK_COMB (@lem5744200 A B) (@lem5744199 A B)). Qed.
Lemma lem5744202 {A B : Type'} : (term1237 A B) = (term1237 A B).
Proof. exact (eq_refl (term1237 A B)). Qed.
Lemma lem5744203 {A B : Type'} : ((term1181 A B) = (term1249 A B)) = ((term1181 A B) = (term1250 A B)).
Proof. exact (MK_COMB (@lem5744202 A B) (@lem5744201 A B)). Qed.
Lemma lem5744204 {A B : Type'} : (term1234 A B) = (term1251 A B).
Proof. exact (MK_COMB (@lem5744195 A B) (@lem5744203 A B)). Qed.
Lemma lem5744205 {A B : Type'} : term1251 A B.
Proof. exact (EQ_MP (@lem5744204 A B) (@lem5744185 A B)). Qed.
Lemma lem5744206 {A B : Type'} : (term1181 A B) = (term1250 A B).
Proof. exact (@lem5744205 A B (@lem5744181 A B)). Qed.
Lemma lem5744208 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744209 {A B : Type'} (s : type749 A B) (t : type749 A B) : (s = (term1254 A B t)) = (term1255 A B s t).
Proof. exact (@lem5744208 (type546 A B) (type1400 B) s t). Qed.
Lemma lem5744210 {A B : Type'} (_72351 : type749 A B) : (_72351 = (term1256 A B)) = (term1257 A B _72351).
Proof. exact (@lem5744209 A B _72351 (term1182 A B)). Qed.
Lemma lem5744211 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5744212 {A B : Type'} : (term1256 A B) = (term1182 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744211 A B op)). Qed.
Lemma lem5744213 {A B : Type'} (_72351 : type749 A B) : (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351) = (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351).
Proof. exact (eq_refl (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351)). Qed.
Lemma lem5744214 {A B : Type'} (_72351 : type749 A B) : (_72351 = (term1256 A B)) = (_72351 = (term1182 A B)).
Proof. exact (MK_COMB (@lem5744213 A B _72351) (@lem5744212 A B)). Qed.
Lemma lem5744215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744216 {A B : Type'} (_72351 : type749 A B) : (term1258 A B _72351) = (term1259 A B _72351).
Proof. exact (MK_COMB (@lem5744215) (@lem5744214 A B _72351)). Qed.
Lemma lem5744217 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5744218 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1185 A B _72351 op) = (term1185 A B _72351 op).
Proof. exact (eq_refl (term1185 A B _72351 op)). Qed.
Lemma lem5744219 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : ((_72351 op) = (term1183 A B op)) = ((_72351 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5744218 A B _72351 op) (@lem5744217 A B op)). Qed.
Lemma lem5744220 {A B : Type'} (_72351 : type749 A B) : (term1260 A B _72351) = (term1261 A B _72351).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744219 A B _72351 op)). Qed.
Lemma lem5744221 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744222 {A B : Type'} (_72351 : type749 A B) : (term1257 A B _72351) = (term1262 A B _72351).
Proof. exact (MK_COMB (@lem5744221 B) (@lem5744220 A B _72351)). Qed.
Lemma lem5744223 {A B : Type'} (_72351 : type749 A B) : ((_72351 = (term1256 A B)) = (term1257 A B _72351)) = ((_72351 = (term1182 A B)) = (term1262 A B _72351)).
Proof. exact (MK_COMB (@lem5744216 A B _72351) (@lem5744222 A B _72351)). Qed.
Lemma lem5744224 {A B : Type'} (_72351 : type749 A B) : (_72351 = (term1182 A B)) = (term1262 A B _72351).
Proof. exact (EQ_MP (@lem5744223 A B _72351) (@lem5744210 A B _72351)). Qed.
Lemma lem5744226 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744227 {A B : Type'} (s : type546 A B) (t : type546 A B) : (s = (term1263 A B t)) = (term1264 A B s t).
Proof. exact (@lem5744226 (type1411 A B) (A -> B) s t). Qed.
Lemma lem5744228 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : ((_72351 op) = (term1265 A B op)) = (term1266 A B _72351 op).
Proof. exact (@lem5744227 A B (_72351 op) (term1184 A B op)). Qed.
Lemma lem5744229 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5744230 {A B : Type'} (op : type1400 B) : (term1265 A B op) = (term1184 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744229 A B op f)). Qed.
Lemma lem5744231 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1185 A B _72351 op) = (term1185 A B _72351 op).
Proof. exact (eq_refl (term1185 A B _72351 op)). Qed.
Lemma lem5744232 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : ((_72351 op) = (term1265 A B op)) = ((_72351 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5744231 A B _72351 op) (@lem5744230 A B op)). Qed.
Lemma lem5744233 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744234 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1267 A B _72351 op) = (term1268 A B _72351 op).
Proof. exact (MK_COMB (@lem5744233) (@lem5744232 A B _72351 op)). Qed.
Lemma lem5744235 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5744236 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72351 op f) = (term1187 A B _72351 op f).
Proof. exact (eq_refl (term1187 A B _72351 op f)). Qed.
Lemma lem5744237 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72351 op f) = (term1186 A B op f)) = ((_72351 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5744236 A B _72351 op f) (@lem5744235 A B op f)). Qed.
Lemma lem5744238 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1269 A B _72351 op) = (term1270 A B _72351 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744237 A B _72351 op f)). Qed.
Lemma lem5744239 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744240 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1266 A B _72351 op) = (term1271 A B _72351 op).
Proof. exact (MK_COMB (@lem5744239 A B) (@lem5744238 A B _72351 op)). Qed.
Lemma lem5744241 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (((_72351 op) = (term1265 A B op)) = (term1266 A B _72351 op)) = (((_72351 op) = (term1184 A B op)) = (term1271 A B _72351 op)).
Proof. exact (MK_COMB (@lem5744234 A B _72351 op) (@lem5744240 A B _72351 op)). Qed.
Lemma lem5744242 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : ((_72351 op) = (term1184 A B op)) = (term1271 A B _72351 op).
Proof. exact (EQ_MP (@lem5744241 A B _72351 op) (@lem5744228 A B _72351 op)). Qed.
Lemma lem5744244 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744245 {A B : Type'} (s : type1411 A B) (t : type1411 A B) : (s = (term1272 A B t)) = (term1273 A B s t).
Proof. exact (@lem5744244 (B -> B) A s t). Qed.
Lemma lem5744246 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72351 op f) = (term1084 A B op f)) = (term1274 A B _72351 op f).
Proof. exact (@lem5744245 A B (_72351 op f) (term14 A B op f)). Qed.
Lemma lem5744247 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5744248 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1084 A B op f) = (term14 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5744247 A B op f x)). Qed.
Lemma lem5744249 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72351 op f) = (term1187 A B _72351 op f).
Proof. exact (eq_refl (term1187 A B _72351 op f)). Qed.
Lemma lem5744250 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72351 op f) = (term1084 A B op f)) = ((_72351 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5744249 A B _72351 op f) (@lem5744248 A B op f)). Qed.
Lemma lem5744251 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744252 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1275 A B _72351 op f) = (term1276 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744251) (@lem5744250 A B _72351 op f)). Qed.
Lemma lem5744253 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5744254 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72351 op f x) = (term1277 A B _72351 op f x).
Proof. exact (eq_refl (term1277 A B _72351 op f x)). Qed.
Lemma lem5744255 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72351 op f x) = (term80 A B op f x)) = ((_72351 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5744254 A B _72351 op f x) (@lem5744253 A B op f x)). Qed.
Lemma lem5744256 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1278 A B _72351 op f) = (term1279 A B _72351 op f).
Proof. exact (fun_ext (fun x : A => @lem5744255 A B _72351 op f x)). Qed.
Lemma lem5744257 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744258 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1274 A B _72351 op f) = (term1280 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744257 A) (@lem5744256 A B _72351 op f)). Qed.
Lemma lem5744259 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (((_72351 op f) = (term1084 A B op f)) = (term1274 A B _72351 op f)) = (((_72351 op f) = (term14 A B op f)) = (term1280 A B _72351 op f)).
Proof. exact (MK_COMB (@lem5744252 A B _72351 op f) (@lem5744258 A B _72351 op f)). Qed.
Lemma lem5744260 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72351 op f) = (term14 A B op f)) = (term1280 A B _72351 op f).
Proof. exact (EQ_MP (@lem5744259 A B _72351 op f) (@lem5744246 A B _72351 op f)). Qed.
Lemma lem5744261 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72351 op f x) = (term81 A B op f x)) = ((_72351 op f x) = (term81 A B op f x)).
Proof. exact (eq_refl ((_72351 op f x) = (term81 A B op f x))). Qed.
Lemma lem5744262 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1279 A B _72351 op f) = (term1279 A B _72351 op f).
Proof. exact (fun_ext (fun x : A => @lem5744261 A B _72351 op f x)). Qed.
Lemma lem5744263 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744264 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1280 A B _72351 op f) = (term1280 A B _72351 op f).
Proof. exact (MK_COMB (@lem5744263 A) (@lem5744262 A B _72351 op f)). Qed.
Lemma lem5744265 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72351 op f) = (term14 A B op f)) = (term1280 A B _72351 op f).
Proof. exact (TRANS (@lem5744260 A B _72351 op f) (@lem5744264 A B _72351 op f)). Qed.
Lemma lem5744266 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1270 A B _72351 op) = (term1281 A B _72351 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744265 A B _72351 op f)). Qed.
Lemma lem5744267 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744268 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1271 A B _72351 op) = (term1282 A B _72351 op).
Proof. exact (MK_COMB (@lem5744267 A B) (@lem5744266 A B _72351 op)). Qed.
Lemma lem5744269 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : ((_72351 op) = (term1184 A B op)) = (term1282 A B _72351 op).
Proof. exact (TRANS (@lem5744242 A B _72351 op) (@lem5744268 A B _72351 op)). Qed.
Lemma lem5744270 {A B : Type'} (_72351 : type749 A B) : (term1261 A B _72351) = (term1283 A B _72351).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744269 A B _72351 op)). Qed.
Lemma lem5744271 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744272 {A B : Type'} (_72351 : type749 A B) : (term1262 A B _72351) = (term1284 A B _72351).
Proof. exact (MK_COMB (@lem5744271 B) (@lem5744270 A B _72351)). Qed.
Lemma lem5744273 {A B : Type'} (_72351 : type749 A B) : (_72351 = (term1182 A B)) = (term1284 A B _72351).
Proof. exact (TRANS (@lem5744224 A B _72351) (@lem5744272 A B _72351)). Qed.
Lemma lem5744274 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744275 {A B : Type'} (_72351 : type749 A B) : (term1238 A B _72351) = (term1285 A B _72351).
Proof. exact (MK_COMB (@lem5744274) (@lem5744273 A B _72351)). Qed.
Lemma lem5744276 {A B : Type'} (_72351 : type749 A B) : (term1229 A B _72351) = (term1229 A B _72351).
Proof. exact (eq_refl (term1229 A B _72351)). Qed.
Lemma lem5744277 {A B : Type'} (_72351 : type749 A B) : (term1246 A B _72351) = (term1286 A B _72351).
Proof. exact (MK_COMB (@lem5744275 A B _72351) (@lem5744276 A B _72351)). Qed.
Lemma lem5744278 {A B : Type'} : (term1248 A B) = (term1287 A B).
Proof. exact (fun_ext (fun _72351 : type749 A B => @lem5744277 A B _72351)). Qed.
Lemma lem5744279 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744280 {A B : Type'} : (term1250 A B) = (term1288 A B).
Proof. exact (MK_COMB (@lem5744279 A B) (@lem5744278 A B)). Qed.
Lemma lem5744281 {A B : Type'} : (term1237 A B) = (term1237 A B).
Proof. exact (eq_refl (term1237 A B)). Qed.
Lemma lem5744282 {A B : Type'} : ((term1181 A B) = (term1250 A B)) = ((term1181 A B) = (term1288 A B)).
Proof. exact (MK_COMB (@lem5744281 A B) (@lem5744280 A B)). Qed.
Lemma lem5744283 {A B : Type'} : (term1181 A B) = (term1288 A B).
Proof. exact (EQ_MP (@lem5744282 A B) (@lem5744206 A B)). Qed.
Lemma lem5744284 {A B : Type'} (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : _72352 = (term1182 A B).
Proof. exact (h1). Qed.
Lemma lem5744285 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5744286 {A B : Type'} (op : type1400 B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (_72352 op) = (term1183 A B op).
Proof. exact (MK_COMB (@lem5744284 A B _72352 h1) (@lem5744285 B op)). Qed.
Lemma lem5744287 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5744288 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1185 A B _72352 op) = (term1185 A B _72352 op).
Proof. exact (eq_refl (term1185 A B _72352 op)). Qed.
Lemma lem5744289 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : ((_72352 op) = (term1183 A B op)) = ((_72352 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5744288 A B _72352 op) (@lem5744287 A B op)). Qed.
Lemma lem5744290 {A B : Type'} (op : type1400 B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (_72352 op) = (term1184 A B op).
Proof. exact (EQ_MP (@lem5744289 A B _72352 op) (@lem5744286 A B op _72352 h1)). Qed.
Lemma lem5744291 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5744292 {A B : Type'} (op : type1400 B) (f : A -> B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (_72352 op f) = (term1186 A B op f).
Proof. exact (MK_COMB (@lem5744290 A B op _72352 h1) (@lem5744291 A B f)). Qed.
Lemma lem5744293 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5744294 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72352 op f) = (term1187 A B _72352 op f).
Proof. exact (eq_refl (term1187 A B _72352 op f)). Qed.
Lemma lem5744295 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72352 op f) = (term1186 A B op f)) = ((_72352 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5744294 A B _72352 op f) (@lem5744293 A B op f)). Qed.
Lemma lem5744296 {A B : Type'} (op : type1400 B) (f : A -> B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (_72352 op f) = (term14 A B op f).
Proof. exact (EQ_MP (@lem5744295 A B _72352 op f) (@lem5744292 A B op f _72352 h1)). Qed.
Lemma lem5744297 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5744298 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (_72352 op f x) = (term80 A B op f x).
Proof. exact (MK_COMB (@lem5744296 A B op f _72352 h1) (@lem5744297 A x)). Qed.
Lemma lem5744299 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5744300 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72352 op f x) = (term1277 A B _72352 op f x).
Proof. exact (eq_refl (term1277 A B _72352 op f x)). Qed.
Lemma lem5744301 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72352 op f x) = (term80 A B op f x)) = ((_72352 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5744300 A B _72352 op f x) (@lem5744299 A B op f x)). Qed.
Lemma lem5744302 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (_72352 op f x) = (term81 A B op f x).
Proof. exact (EQ_MP (@lem5744301 A B _72352 op f x) (@lem5744298 A B op f x _72352 h1)). Qed.
Lemma lem5744314 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5744315 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5744314 B op x)). Qed.
Lemma lem5744316 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744317 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5744316 B) (@lem5744315 B op)). Qed.
Lemma lem5744338 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5744339 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5744338 B op x y z)). Qed.
Lemma lem5744340 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744341 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5744340 B) (@lem5744339 B op x y)). Qed.
Lemma lem5744342 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5744341 B op x y)). Qed.
Lemma lem5744343 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744344 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5744343 B) (@lem5744342 B op x)). Qed.
Lemma lem5744345 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5744344 B op x)). Qed.
Lemma lem5744346 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744347 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5744346 B) (@lem5744345 B op)). Qed.
Lemma lem5744348 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5744349 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5744348) (@lem5744347 B op)). Qed.
Lemma lem5744350 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5744349 B op) (@lem5744317 B op)). Qed.
Lemma lem5744363 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5744364 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5744363 B op y x)). Qed.
Lemma lem5744365 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744366 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5744365 B) (@lem5744364 B op x)). Qed.
Lemma lem5744367 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5744366 B op x)). Qed.
Lemma lem5744368 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744369 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5744368 B) (@lem5744367 B op)). Qed.
Lemma lem5744370 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5744371 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5744370) (@lem5744369 B op)). Qed.
Lemma lem5744372 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5744371 B op) (@lem5744350 B op)). Qed.
Lemma lem5744377 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5744378 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5744377 B op) (@lem5744372 B op)). Qed.
Lemma lem5744379 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744378 B op)). Qed.
Lemma lem5744380 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744381 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5744380 B) (@lem5744379 B)). Qed.
Lemma lem5744382 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5744383 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5744382) (@lem5744381 B)). Qed.
Lemma lem5744428 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1193 A B _72351 f s op) = (term1193 A B _72351 f s op).
Proof. exact (eq_refl (term1193 A B _72351 f s op)). Qed.
Lemma lem5744429 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1194 A B _72351 f s op) = (term1194 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744428 A B _72351 f s op) (@lem5744383 B)). Qed.
Lemma lem5744436 {A : Type'} (x : A) (s : A -> Prop) : (term1108 A x s) = (term1108 A x s).
Proof. exact (eq_refl (term1108 A x s)). Qed.
Lemma lem5744437 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1195 A B x _72351 f s op) = (term1195 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744436 A x s) (@lem5744429 A B _72351 f s op)). Qed.
Lemma lem5744448 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5744449 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1196 A B x _72351 f s op) = (term1196 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744448 A B f x op) (@lem5744437 A B x _72351 f s op)). Qed.
Lemma lem5744460 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5744461 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1197 A B x _72351 f s op) = (term1197 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744460 A B op f s) (@lem5744449 A B x _72351 f s op)). Qed.
Lemma lem5744528 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1208 A B x _72351 f s op) = (term1208 A B x _72351 f s op).
Proof. exact (eq_refl (term1208 A B x _72351 f s op)). Qed.
Lemma lem5744529 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1209 A B x _72351 f op) = (term1209 A B x _72351 f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5744528 A B x _72351 f s op)). Qed.
Lemma lem5744530 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5744531 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1210 A B x _72351 f op) = (term1210 A B x _72351 f op).
Proof. exact (MK_COMB (@lem5744530 A) (@lem5744529 A B x _72351 f op)). Qed.
Lemma lem5744532 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1211 A B _72351 f op) = (term1211 A B _72351 f op).
Proof. exact (fun_ext (fun x : A => @lem5744531 A B x _72351 f op)). Qed.
Lemma lem5744533 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744534 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1212 A B _72351 f op) = (term1212 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744533 A) (@lem5744532 A B _72351 f op)). Qed.
Lemma lem5744535 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744536 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1213 A B _72351 f op) = (term1213 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744535) (@lem5744534 A B _72351 f op)). Qed.
Lemma lem5744537 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1214 A B x _72351 f s op) = (term1214 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744536 A B _72351 f op) (@lem5744461 A B x _72351 f s op)). Qed.
Lemma lem5744558 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1219 A B _72351 f op) = (term1219 A B _72351 f op).
Proof. exact (eq_refl (term1219 A B _72351 f op)). Qed.
Lemma lem5744559 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1220 A B x _72351 f s op) = (term1220 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744558 A B _72351 f op) (@lem5744537 A B x _72351 f s op)). Qed.
Lemma lem5744564 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5744565 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1221 A B x _72351 f s op) = (term1221 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744564 B op) (@lem5744559 A B x _72351 f s op)). Qed.
Lemma lem5744566 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1222 A B _72351 f s op) = (term1222 A B _72351 f s op).
Proof. exact (fun_ext (fun x : A => @lem5744565 A B x _72351 f s op)). Qed.
Lemma lem5744567 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744568 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1223 A B _72351 f s op) = (term1223 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744567 A) (@lem5744566 A B _72351 f s op)). Qed.
Lemma lem5744569 {A B : Type'} (_72351 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1224 A B _72351 s op) = (term1224 A B _72351 s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744568 A B _72351 f s op)). Qed.
Lemma lem5744570 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744571 {A B : Type'} (_72351 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1225 A B _72351 s op) = (term1225 A B _72351 s op).
Proof. exact (MK_COMB (@lem5744570 A B) (@lem5744569 A B _72351 s op)). Qed.
Lemma lem5744572 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1226 A B _72351 op) = (term1226 A B _72351 op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5744571 A B _72351 s op)). Qed.
Lemma lem5744573 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5744574 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1227 A B _72351 op) = (term1227 A B _72351 op).
Proof. exact (MK_COMB (@lem5744573 A) (@lem5744572 A B _72351 op)). Qed.
Lemma lem5744575 {A B : Type'} (_72351 : type749 A B) : (term1228 A B _72351) = (term1228 A B _72351).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744574 A B _72351 op)). Qed.
Lemma lem5744576 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744577 {A B : Type'} (_72351 : type749 A B) : (term1229 A B _72351) = (term1229 A B _72351).
Proof. exact (MK_COMB (@lem5744576 B) (@lem5744575 A B _72351)). Qed.
Lemma lem5744579 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term81 A B op f x) = (_72352 op f x).
Proof. exact (SYM (@lem5744302 A B op f x _72352 h1)). Qed.
Lemma lem5744580 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term81 A B op f x) = (_72352 op f x).
Proof. exact (@lem5744579 A B op f x _72352 h1). Qed.
Lemma lem5744589 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72351 op f x) = (term1277 A B _72351 op f x).
Proof. exact (eq_refl (term1277 A B _72351 op f x)). Qed.
Lemma lem5744590 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : ((_72351 op f x) = (term81 A B op f x)) = ((_72351 op f x) = (_72352 op f x)).
Proof. exact (MK_COMB (@lem5744589 A B _72351 op f x) (@lem5744580 A B op f x _72352 h1)). Qed.
Lemma lem5744591 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1279 A B _72351 op f) = (term1289 A B _72351 _72352 op f).
Proof. exact (fun_ext (fun x : A => @lem5744590 A B _72351 op f x _72352 h1)). Qed.
Lemma lem5744592 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744593 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1280 A B _72351 op f) = (term1290 A B _72351 _72352 op f).
Proof. exact (MK_COMB (@lem5744592 A) (@lem5744591 A B _72351 op f _72352 h1)). Qed.
Lemma lem5744594 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1281 A B _72351 op) = (term1291 A B _72351 _72352 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744593 A B _72351 op f _72352 h1)). Qed.
Lemma lem5744595 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744596 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1282 A B _72351 op) = (term1292 A B _72351 _72352 op).
Proof. exact (MK_COMB (@lem5744595 A B) (@lem5744594 A B _72351 op _72352 h1)). Qed.
Lemma lem5744597 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1283 A B _72351) = (term1293 A B _72351 _72352).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744596 A B _72351 op _72352 h1)). Qed.
Lemma lem5744598 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744599 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1284 A B _72351) = (term1294 A B _72351 _72352).
Proof. exact (MK_COMB (@lem5744598 B) (@lem5744597 A B _72351 _72352 h1)). Qed.
Lemma lem5744600 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744601 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1285 A B _72351) = (term1295 A B _72351 _72352).
Proof. exact (MK_COMB (@lem5744600) (@lem5744599 A B _72351 _72352 h1)). Qed.
Lemma lem5744602 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1286 A B _72351) = (term1296 A B _72352 _72351).
Proof. exact (MK_COMB (@lem5744601 A B _72351 _72352 h1) (@lem5744577 A B _72351)). Qed.
Lemma lem5744603 {A B : Type'} (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1287 A B) = (term1297 A B _72352).
Proof. exact (fun_ext (fun _72351 : type749 A B => @lem5744602 A B _72351 _72352 h1)). Qed.
Lemma lem5744604 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744605 {A B : Type'} (_72352 : type749 A B) (h1 : _72352 = (term1182 A B)) : (term1288 A B) = (term1298 A B _72352).
Proof. exact (MK_COMB (@lem5744604 A B) (@lem5744603 A B _72352 h1)). Qed.
Lemma lem5744606 {A B : Type'} (_72352 : type749 A B) : term1299 A B _72352.
Proof. exact (fun h0 : _72352 = (term1182 A B) => @lem5744605 A B _72352 h0). Qed.
Lemma lem5744607 {A B : Type'} : term1300 A B.
Proof. exact (fun _72352 : type749 A B => @lem5744606 A B _72352). Qed.
Lemma lem5744609 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term1232 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem5744610 {A B : Type'} (P : Prop) (c : type749 A B) (Q : type191 A B) : term1233 A B P c Q.
Proof. exact (@lem5744609 (type749 A B) P c Q). Qed.
Lemma lem5744611 {A B : Type'} : term1301 A B.
Proof. exact (@lem5744610 A B (term1288 A B) (term1182 A B) (term1302 A B)). Qed.
Lemma lem5744612 {A B : Type'} (_72352 : type749 A B) : (term1303 A B _72352) = (term1298 A B _72352).
Proof. exact (eq_refl (term1303 A B _72352)). Qed.
Lemma lem5744613 {A B : Type'} : (term1304 A B) = (term1304 A B).
Proof. exact (eq_refl (term1304 A B)). Qed.
Lemma lem5744614 {A B : Type'} (_72352 : type749 A B) : ((term1288 A B) = (term1303 A B _72352)) = ((term1288 A B) = (term1298 A B _72352)).
Proof. exact (MK_COMB (@lem5744613 A B) (@lem5744612 A B _72352)). Qed.
Lemma lem5744615 {A B : Type'} (_72352 : type749 A B) : (term1238 A B _72352) = (term1238 A B _72352).
Proof. exact (eq_refl (term1238 A B _72352)). Qed.
Lemma lem5744616 {A B : Type'} (_72352 : type749 A B) : (term1305 A B _72352) = (term1299 A B _72352).
Proof. exact (MK_COMB (@lem5744615 A B _72352) (@lem5744614 A B _72352)). Qed.
Lemma lem5744617 {A B : Type'} : (term1306 A B) = (term1307 A B).
Proof. exact (fun_ext (fun _72352 : type749 A B => @lem5744616 A B _72352)). Qed.
Lemma lem5744618 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744619 {A B : Type'} : (term1308 A B) = (term1300 A B).
Proof. exact (MK_COMB (@lem5744618 A B) (@lem5744617 A B)). Qed.
Lemma lem5744620 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744621 {A B : Type'} : (term1309 A B) = (term1310 A B).
Proof. exact (MK_COMB (@lem5744620) (@lem5744619 A B)). Qed.
Lemma lem5744622 {A B : Type'} (_72352 : type749 A B) : (term1303 A B _72352) = (term1298 A B _72352).
Proof. exact (eq_refl (term1303 A B _72352)). Qed.
Lemma lem5744623 {A B : Type'} (_72352 : type749 A B) : (term1238 A B _72352) = (term1238 A B _72352).
Proof. exact (eq_refl (term1238 A B _72352)). Qed.
Lemma lem5744624 {A B : Type'} (_72352 : type749 A B) : (term1311 A B _72352) = (term1312 A B _72352).
Proof. exact (MK_COMB (@lem5744623 A B _72352) (@lem5744622 A B _72352)). Qed.
Lemma lem5744625 {A B : Type'} : (term1313 A B) = (term1314 A B).
Proof. exact (fun_ext (fun _72352 : type749 A B => @lem5744624 A B _72352)). Qed.
Lemma lem5744626 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744627 {A B : Type'} : (term1315 A B) = (term1316 A B).
Proof. exact (MK_COMB (@lem5744626 A B) (@lem5744625 A B)). Qed.
Lemma lem5744628 {A B : Type'} : (term1304 A B) = (term1304 A B).
Proof. exact (eq_refl (term1304 A B)). Qed.
Lemma lem5744629 {A B : Type'} : ((term1288 A B) = (term1315 A B)) = ((term1288 A B) = (term1316 A B)).
Proof. exact (MK_COMB (@lem5744628 A B) (@lem5744627 A B)). Qed.
Lemma lem5744630 {A B : Type'} : (term1301 A B) = (term1317 A B).
Proof. exact (MK_COMB (@lem5744621 A B) (@lem5744629 A B)). Qed.
Lemma lem5744631 {A B : Type'} : term1317 A B.
Proof. exact (EQ_MP (@lem5744630 A B) (@lem5744611 A B)). Qed.
Lemma lem5744632 {A B : Type'} : (term1288 A B) = (term1316 A B).
Proof. exact (@lem5744631 A B (@lem5744607 A B)). Qed.
Lemma lem5744634 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744635 {A B : Type'} (s : type749 A B) (t : type749 A B) : (s = (term1254 A B t)) = (term1255 A B s t).
Proof. exact (@lem5744634 (type546 A B) (type1400 B) s t). Qed.
Lemma lem5744636 {A B : Type'} (_72352 : type749 A B) : (_72352 = (term1256 A B)) = (term1257 A B _72352).
Proof. exact (@lem5744635 A B _72352 (term1182 A B)). Qed.
Lemma lem5744637 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5744638 {A B : Type'} : (term1256 A B) = (term1182 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744637 A B op)). Qed.
Lemma lem5744639 {A B : Type'} (_72352 : type749 A B) : (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72352) = (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72352).
Proof. exact (eq_refl (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72352)). Qed.
Lemma lem5744640 {A B : Type'} (_72352 : type749 A B) : (_72352 = (term1256 A B)) = (_72352 = (term1182 A B)).
Proof. exact (MK_COMB (@lem5744639 A B _72352) (@lem5744638 A B)). Qed.
Lemma lem5744641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744642 {A B : Type'} (_72352 : type749 A B) : (term1258 A B _72352) = (term1259 A B _72352).
Proof. exact (MK_COMB (@lem5744641) (@lem5744640 A B _72352)). Qed.
Lemma lem5744643 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5744644 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1185 A B _72352 op) = (term1185 A B _72352 op).
Proof. exact (eq_refl (term1185 A B _72352 op)). Qed.
Lemma lem5744645 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : ((_72352 op) = (term1183 A B op)) = ((_72352 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5744644 A B _72352 op) (@lem5744643 A B op)). Qed.
Lemma lem5744646 {A B : Type'} (_72352 : type749 A B) : (term1260 A B _72352) = (term1261 A B _72352).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744645 A B _72352 op)). Qed.
Lemma lem5744647 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744648 {A B : Type'} (_72352 : type749 A B) : (term1257 A B _72352) = (term1262 A B _72352).
Proof. exact (MK_COMB (@lem5744647 B) (@lem5744646 A B _72352)). Qed.
Lemma lem5744649 {A B : Type'} (_72352 : type749 A B) : ((_72352 = (term1256 A B)) = (term1257 A B _72352)) = ((_72352 = (term1182 A B)) = (term1262 A B _72352)).
Proof. exact (MK_COMB (@lem5744642 A B _72352) (@lem5744648 A B _72352)). Qed.
Lemma lem5744650 {A B : Type'} (_72352 : type749 A B) : (_72352 = (term1182 A B)) = (term1262 A B _72352).
Proof. exact (EQ_MP (@lem5744649 A B _72352) (@lem5744636 A B _72352)). Qed.
Lemma lem5744652 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744653 {A B : Type'} (s : type546 A B) (t : type546 A B) : (s = (term1263 A B t)) = (term1264 A B s t).
Proof. exact (@lem5744652 (type1411 A B) (A -> B) s t). Qed.
Lemma lem5744654 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : ((_72352 op) = (term1265 A B op)) = (term1266 A B _72352 op).
Proof. exact (@lem5744653 A B (_72352 op) (term1184 A B op)). Qed.
Lemma lem5744655 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5744656 {A B : Type'} (op : type1400 B) : (term1265 A B op) = (term1184 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744655 A B op f)). Qed.
Lemma lem5744657 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1185 A B _72352 op) = (term1185 A B _72352 op).
Proof. exact (eq_refl (term1185 A B _72352 op)). Qed.
Lemma lem5744658 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : ((_72352 op) = (term1265 A B op)) = ((_72352 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5744657 A B _72352 op) (@lem5744656 A B op)). Qed.
Lemma lem5744659 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744660 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1267 A B _72352 op) = (term1268 A B _72352 op).
Proof. exact (MK_COMB (@lem5744659) (@lem5744658 A B _72352 op)). Qed.
Lemma lem5744661 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5744662 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72352 op f) = (term1187 A B _72352 op f).
Proof. exact (eq_refl (term1187 A B _72352 op f)). Qed.
Lemma lem5744663 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72352 op f) = (term1186 A B op f)) = ((_72352 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5744662 A B _72352 op f) (@lem5744661 A B op f)). Qed.
Lemma lem5744664 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1269 A B _72352 op) = (term1270 A B _72352 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744663 A B _72352 op f)). Qed.
Lemma lem5744665 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744666 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1266 A B _72352 op) = (term1271 A B _72352 op).
Proof. exact (MK_COMB (@lem5744665 A B) (@lem5744664 A B _72352 op)). Qed.
Lemma lem5744667 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (((_72352 op) = (term1265 A B op)) = (term1266 A B _72352 op)) = (((_72352 op) = (term1184 A B op)) = (term1271 A B _72352 op)).
Proof. exact (MK_COMB (@lem5744660 A B _72352 op) (@lem5744666 A B _72352 op)). Qed.
Lemma lem5744668 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : ((_72352 op) = (term1184 A B op)) = (term1271 A B _72352 op).
Proof. exact (EQ_MP (@lem5744667 A B _72352 op) (@lem5744654 A B _72352 op)). Qed.
Lemma lem5744670 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744671 {A B : Type'} (s : type1411 A B) (t : type1411 A B) : (s = (term1272 A B t)) = (term1273 A B s t).
Proof. exact (@lem5744670 (B -> B) A s t). Qed.
Lemma lem5744672 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72352 op f) = (term1084 A B op f)) = (term1274 A B _72352 op f).
Proof. exact (@lem5744671 A B (_72352 op f) (term14 A B op f)). Qed.
Lemma lem5744673 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5744674 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1084 A B op f) = (term14 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5744673 A B op f x)). Qed.
Lemma lem5744675 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72352 op f) = (term1187 A B _72352 op f).
Proof. exact (eq_refl (term1187 A B _72352 op f)). Qed.
Lemma lem5744676 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72352 op f) = (term1084 A B op f)) = ((_72352 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5744675 A B _72352 op f) (@lem5744674 A B op f)). Qed.
Lemma lem5744677 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744678 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1275 A B _72352 op f) = (term1276 A B _72352 op f).
Proof. exact (MK_COMB (@lem5744677) (@lem5744676 A B _72352 op f)). Qed.
Lemma lem5744679 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5744680 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72352 op f x) = (term1277 A B _72352 op f x).
Proof. exact (eq_refl (term1277 A B _72352 op f x)). Qed.
Lemma lem5744681 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72352 op f x) = (term80 A B op f x)) = ((_72352 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5744680 A B _72352 op f x) (@lem5744679 A B op f x)). Qed.
Lemma lem5744682 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1278 A B _72352 op f) = (term1279 A B _72352 op f).
Proof. exact (fun_ext (fun x : A => @lem5744681 A B _72352 op f x)). Qed.
Lemma lem5744683 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744684 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1274 A B _72352 op f) = (term1280 A B _72352 op f).
Proof. exact (MK_COMB (@lem5744683 A) (@lem5744682 A B _72352 op f)). Qed.
Lemma lem5744685 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (((_72352 op f) = (term1084 A B op f)) = (term1274 A B _72352 op f)) = (((_72352 op f) = (term14 A B op f)) = (term1280 A B _72352 op f)).
Proof. exact (MK_COMB (@lem5744678 A B _72352 op f) (@lem5744684 A B _72352 op f)). Qed.
Lemma lem5744686 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72352 op f) = (term14 A B op f)) = (term1280 A B _72352 op f).
Proof. exact (EQ_MP (@lem5744685 A B _72352 op f) (@lem5744672 A B _72352 op f)). Qed.
Lemma lem5744688 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5744689 {B : Type'} (s : B -> B) (t : B -> B) : (s = (term1318 B t)) = (term1319 B s t).
Proof. exact (@lem5744688 B B s t). Qed.
Lemma lem5744690 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72352 op f x) = (term1090 A B op f x)) = (term1320 A B _72352 op f x).
Proof. exact (@lem5744689 B (_72352 op f x) (term81 A B op f x)). Qed.
Lemma lem5744691 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term83 A B op f x a) = (term84 A B op f x a).
Proof. exact (eq_refl (term83 A B op f x a)). Qed.
Lemma lem5744692 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term1090 A B op f x) = (term81 A B op f x).
Proof. exact (fun_ext (fun a : B => @lem5744691 A B op f x a)). Qed.
Lemma lem5744693 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72352 op f x) = (term1277 A B _72352 op f x).
Proof. exact (eq_refl (term1277 A B _72352 op f x)). Qed.
Lemma lem5744694 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72352 op f x) = (term1090 A B op f x)) = ((_72352 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5744693 A B _72352 op f x) (@lem5744692 A B op f x)). Qed.
Lemma lem5744695 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5744696 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1321 A B _72352 op f x) = (term1322 A B _72352 op f x).
Proof. exact (MK_COMB (@lem5744695) (@lem5744694 A B _72352 op f x)). Qed.
Lemma lem5744697 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term83 A B op f x a) = (term84 A B op f x a).
Proof. exact (eq_refl (term83 A B op f x a)). Qed.
Lemma lem5744698 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term1323 A B _72352 op f x a) = (term1323 A B _72352 op f x a).
Proof. exact (eq_refl (term1323 A B _72352 op f x a)). Qed.
Lemma lem5744699 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : ((_72352 op f x a) = (term83 A B op f x a)) = ((_72352 op f x a) = (term84 A B op f x a)).
Proof. exact (MK_COMB (@lem5744698 A B _72352 op f x a) (@lem5744697 A B op f x a)). Qed.
Lemma lem5744700 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1324 A B _72352 op f x) = (term1325 A B _72352 op f x).
Proof. exact (fun_ext (fun a : B => @lem5744699 A B _72352 op f x a)). Qed.
Lemma lem5744701 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744702 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1320 A B _72352 op f x) = (term1326 A B _72352 op f x).
Proof. exact (MK_COMB (@lem5744701 B) (@lem5744700 A B _72352 op f x)). Qed.
Lemma lem5744703 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (((_72352 op f x) = (term1090 A B op f x)) = (term1320 A B _72352 op f x)) = (((_72352 op f x) = (term81 A B op f x)) = (term1326 A B _72352 op f x)).
Proof. exact (MK_COMB (@lem5744696 A B _72352 op f x) (@lem5744702 A B _72352 op f x)). Qed.
Lemma lem5744704 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72352 op f x) = (term81 A B op f x)) = (term1326 A B _72352 op f x).
Proof. exact (EQ_MP (@lem5744703 A B _72352 op f x) (@lem5744690 A B _72352 op f x)). Qed.
Lemma lem5744705 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : ((_72352 op f x a) = (term84 A B op f x a)) = ((_72352 op f x a) = (term84 A B op f x a)).
Proof. exact (eq_refl ((_72352 op f x a) = (term84 A B op f x a))). Qed.
Lemma lem5744706 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1325 A B _72352 op f x) = (term1325 A B _72352 op f x).
Proof. exact (fun_ext (fun a : B => @lem5744705 A B _72352 op f x a)). Qed.
Lemma lem5744707 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744708 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1326 A B _72352 op f x) = (term1326 A B _72352 op f x).
Proof. exact (MK_COMB (@lem5744707 B) (@lem5744706 A B _72352 op f x)). Qed.
Lemma lem5744709 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72352 op f x) = (term81 A B op f x)) = (term1326 A B _72352 op f x).
Proof. exact (TRANS (@lem5744704 A B _72352 op f x) (@lem5744708 A B _72352 op f x)). Qed.
Lemma lem5744710 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1279 A B _72352 op f) = (term1327 A B _72352 op f).
Proof. exact (fun_ext (fun x : A => @lem5744709 A B _72352 op f x)). Qed.
Lemma lem5744711 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744712 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1280 A B _72352 op f) = (term1328 A B _72352 op f).
Proof. exact (MK_COMB (@lem5744711 A) (@lem5744710 A B _72352 op f)). Qed.
Lemma lem5744713 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72352 op f) = (term14 A B op f)) = (term1328 A B _72352 op f).
Proof. exact (TRANS (@lem5744686 A B _72352 op f) (@lem5744712 A B _72352 op f)). Qed.
Lemma lem5744714 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1270 A B _72352 op) = (term1329 A B _72352 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744713 A B _72352 op f)). Qed.
Lemma lem5744715 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744716 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1271 A B _72352 op) = (term1330 A B _72352 op).
Proof. exact (MK_COMB (@lem5744715 A B) (@lem5744714 A B _72352 op)). Qed.
Lemma lem5744717 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : ((_72352 op) = (term1184 A B op)) = (term1330 A B _72352 op).
Proof. exact (TRANS (@lem5744668 A B _72352 op) (@lem5744716 A B _72352 op)). Qed.
Lemma lem5744718 {A B : Type'} (_72352 : type749 A B) : (term1261 A B _72352) = (term1331 A B _72352).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744717 A B _72352 op)). Qed.
Lemma lem5744719 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744720 {A B : Type'} (_72352 : type749 A B) : (term1262 A B _72352) = (term1332 A B _72352).
Proof. exact (MK_COMB (@lem5744719 B) (@lem5744718 A B _72352)). Qed.
Lemma lem5744721 {A B : Type'} (_72352 : type749 A B) : (_72352 = (term1182 A B)) = (term1332 A B _72352).
Proof. exact (TRANS (@lem5744650 A B _72352) (@lem5744720 A B _72352)). Qed.
Lemma lem5744722 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744723 {A B : Type'} (_72352 : type749 A B) : (term1238 A B _72352) = (term1333 A B _72352).
Proof. exact (MK_COMB (@lem5744722) (@lem5744721 A B _72352)). Qed.
Lemma lem5744724 {A B : Type'} (_72352 : type749 A B) : (term1298 A B _72352) = (term1298 A B _72352).
Proof. exact (eq_refl (term1298 A B _72352)). Qed.
Lemma lem5744725 {A B : Type'} (_72352 : type749 A B) : (term1312 A B _72352) = (term1334 A B _72352).
Proof. exact (MK_COMB (@lem5744723 A B _72352) (@lem5744724 A B _72352)). Qed.
Lemma lem5744726 {A B : Type'} : (term1314 A B) = (term1335 A B).
Proof. exact (fun_ext (fun _72352 : type749 A B => @lem5744725 A B _72352)). Qed.
Lemma lem5744727 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744728 {A B : Type'} : (term1316 A B) = (term1336 A B).
Proof. exact (MK_COMB (@lem5744727 A B) (@lem5744726 A B)). Qed.
Lemma lem5744729 {A B : Type'} : (term1304 A B) = (term1304 A B).
Proof. exact (eq_refl (term1304 A B)). Qed.
Lemma lem5744730 {A B : Type'} : ((term1288 A B) = (term1316 A B)) = ((term1288 A B) = (term1336 A B)).
Proof. exact (MK_COMB (@lem5744729 A B) (@lem5744728 A B)). Qed.
Lemma lem5744733 {A B : Type'} : (term1288 A B) = (term1336 A B).
Proof. exact (EQ_MP (@lem5744730 A B) (@lem5744632 A B)). Qed.
Lemma lem5744734 {A B : Type'} : (term1181 A B) = (term1336 A B).
Proof. exact (TRANS (@lem5744283 A B) (@lem5744733 A B)). Qed.
Lemma lem5744735 {A B : Type'} : (term1153 A B) = (term1336 A B).
Proof. exact (TRANS (@lem5743903 A B) (@lem5744734 A B)). Qed.
Lemma lem5744736 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5744737 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5744736 B op x)). Qed.
Lemma lem5744738 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744739 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5744738 B) (@lem5744737 B op)). Qed.
Lemma lem5744740 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5744741 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5744740 B op x y z)). Qed.
Lemma lem5744742 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744743 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5744742 B) (@lem5744741 B op x y)). Qed.
Lemma lem5744744 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5744743 B op x y)). Qed.
Lemma lem5744745 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744746 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5744745 B) (@lem5744744 B op x)). Qed.
Lemma lem5744747 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5744746 B op x)). Qed.
Lemma lem5744748 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744749 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5744748 B) (@lem5744747 B op)). Qed.
Lemma lem5744750 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5744751 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5744750) (@lem5744749 B op)). Qed.
Lemma lem5744752 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5744751 B op) (@lem5744739 B op)). Qed.
Lemma lem5744753 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5744754 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5744753 B op y x)). Qed.
Lemma lem5744755 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744756 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5744755 B) (@lem5744754 B op x)). Qed.
Lemma lem5744757 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5744756 B op x)). Qed.
Lemma lem5744758 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744759 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5744758 B) (@lem5744757 B op)). Qed.
Lemma lem5744760 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5744761 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5744760) (@lem5744759 B op)). Qed.
Lemma lem5744762 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5744761 B op) (@lem5744752 B op)). Qed.
Lemma lem5744765 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5744766 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5744765 B op) (@lem5744762 B op)). Qed.
Lemma lem5744767 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744766 B op)). Qed.
Lemma lem5744768 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744769 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5744768 B) (@lem5744767 B)). Qed.
Lemma lem5744770 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5744771 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5744770) (@lem5744769 B)). Qed.
Lemma lem5744776 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1193 A B _72351 f s op) = (term1193 A B _72351 f s op).
Proof. exact (eq_refl (term1193 A B _72351 f s op)). Qed.
Lemma lem5744777 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1194 A B _72351 f s op) = (term1194 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744776 A B _72351 f s op) (@lem5744771 B)). Qed.
Lemma lem5744780 {A : Type'} (x : A) (s : A -> Prop) : (term1108 A x s) = (term1108 A x s).
Proof. exact (eq_refl (term1108 A x s)). Qed.
Lemma lem5744781 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1195 A B x _72351 f s op) = (term1195 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744780 A x s) (@lem5744777 A B _72351 f s op)). Qed.
Lemma lem5744784 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5744785 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1196 A B x _72351 f s op) = (term1196 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744784 A B f x op) (@lem5744781 A B x _72351 f s op)). Qed.
Lemma lem5744788 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5744789 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1197 A B x _72351 f s op) = (term1197 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744788 A B op f s) (@lem5744785 A B x _72351 f s op)). Qed.
Lemma lem5744793 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem5744794 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5744795 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term967 A B x s) = (@COND B False).
Proof. exact (MK_COMB (@lem5744794 B) (@lem5744793 A x s h1)). Qed.
Lemma lem5744796 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1200 A B _72351 f s op) = (term1200 A B _72351 f s op).
Proof. exact (eq_refl (term1200 A B _72351 f s op)). Qed.
Lemma lem5744797 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1202 A B x _72351 f s op) = (term1337 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744795 A B x s h1) (@lem5744796 A B _72351 f s op)). Qed.
Lemma lem5744798 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1201 A B x _72351 f s op) = (term1201 A B x _72351 f s op).
Proof. exact (eq_refl (term1201 A B x _72351 f s op)). Qed.
Lemma lem5744799 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1203 A B x _72351 f s op) = (term1338 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744797 A B _72351 f op x s h1) (@lem5744798 A B x _72351 f s op)). Qed.
Lemma lem5744801 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5744802 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem5744801 B t1 t2). Qed.
Lemma lem5744803 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1338 A B x _72351 f s op) = (term1201 A B x _72351 f s op).
Proof. exact (@lem5744802 B (term1200 A B _72351 f s op) (term1201 A B x _72351 f s op)). Qed.
Lemma lem5744804 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1203 A B x _72351 f s op) = (term1201 A B x _72351 f s op).
Proof. exact (TRANS (@lem5744799 A B _72351 f op x s h1) (@lem5744803 A B x _72351 f s op)). Qed.
Lemma lem5744805 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term1207 A B _72351 f x s op) = (term1207 A B _72351 f x s op).
Proof. exact (eq_refl (term1207 A B _72351 f x s op)). Qed.
Lemma lem5744806 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : ((term1206 A B _72351 f x s op) = (term1203 A B x _72351 f s op)) = ((term1206 A B _72351 f x s op) = (term1201 A B x _72351 f s op)).
Proof. exact (MK_COMB (@lem5744805 A B _72351 f x s op) (@lem5744804 A B _72351 f op x s h1)). Qed.
Lemma lem5744809 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5744810 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1208 A B x _72351 f s op) = (term1339 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744809 A s) (@lem5744806 A B _72351 f op x s h1)). Qed.
Lemma lem5744813 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1340 A B x _72351 f s op.
Proof. exact (fun h0 : (@IN A x s) = False => @lem5744810 A B _72351 f op x s h0). Qed.
Lemma lem5744815 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem5744816 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5744817 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term967 A B x s) = (@COND B True).
Proof. exact (MK_COMB (@lem5744816 B) (@lem5744815 A x s h1)). Qed.
Lemma lem5744818 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1200 A B _72351 f s op) = (term1200 A B _72351 f s op).
Proof. exact (eq_refl (term1200 A B _72351 f s op)). Qed.
Lemma lem5744819 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1202 A B x _72351 f s op) = (term1341 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744817 A B x s h1) (@lem5744818 A B _72351 f s op)). Qed.
Lemma lem5744820 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1201 A B x _72351 f s op) = (term1201 A B x _72351 f s op).
Proof. exact (eq_refl (term1201 A B x _72351 f s op)). Qed.
Lemma lem5744821 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1203 A B x _72351 f s op) = (term1342 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744819 A B _72351 f op x s h1) (@lem5744820 A B x _72351 f s op)). Qed.
Lemma lem5744823 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5744824 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem5744823 B t2 t1). Qed.
Lemma lem5744825 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1342 A B x _72351 f s op) = (term1200 A B _72351 f s op).
Proof. exact (@lem5744824 B (term1201 A B x _72351 f s op) (term1200 A B _72351 f s op)). Qed.
Lemma lem5744826 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1203 A B x _72351 f s op) = (term1200 A B _72351 f s op).
Proof. exact (TRANS (@lem5744821 A B _72351 f op x s h1) (@lem5744825 A B x _72351 f s op)). Qed.
Lemma lem5744827 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term1207 A B _72351 f x s op) = (term1207 A B _72351 f x s op).
Proof. exact (eq_refl (term1207 A B _72351 f x s op)). Qed.
Lemma lem5744828 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : ((term1206 A B _72351 f x s op) = (term1203 A B x _72351 f s op)) = ((term1206 A B _72351 f x s op) = (term1200 A B _72351 f s op)).
Proof. exact (MK_COMB (@lem5744827 A B _72351 f x s op) (@lem5744826 A B _72351 f op x s h1)). Qed.
Lemma lem5744831 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5744832 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1208 A B x _72351 f s op) = (term1343 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744831 A s) (@lem5744828 A B _72351 f op x s h1)). Qed.
Lemma lem5744835 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1344 A B x _72351 f s op.
Proof. exact (fun h0 : (@IN A x s) = True => @lem5744832 A B _72351 f op x s h0). Qed.
Lemma lem5744836 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1345 A B x _72351 f s op.
Proof. exact (conj (@lem5744813 A B x _72351 f s op) (@lem5744835 A B x _72351 f s op)). Qed.
Lemma lem5744838 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1346 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem5744839 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1347 A B x _72351 f s op.
Proof. exact (@lem5744838 (term1208 A B x _72351 f s op) (term1343 A B x _72351 f s op) (@IN A x s) (term1339 A B x _72351 f s op)). Qed.
Lemma lem5744880 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1208 A B x _72351 f s op) = (term1348 A B x _72351 f s op).
Proof. exact (@lem5744839 A B x _72351 f s op (@lem5744836 A B x _72351 f s op)). Qed.
Lemma lem5744881 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1209 A B x _72351 f op) = (term1349 A B x _72351 f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5744880 A B x _72351 f s op)). Qed.
Lemma lem5744882 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5744883 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1210 A B x _72351 f op) = (term1350 A B x _72351 f op).
Proof. exact (MK_COMB (@lem5744882 A) (@lem5744881 A B x _72351 f op)). Qed.
Lemma lem5744884 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1211 A B _72351 f op) = (term1351 A B _72351 f op).
Proof. exact (fun_ext (fun x : A => @lem5744883 A B x _72351 f op)). Qed.
Lemma lem5744885 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744886 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1212 A B _72351 f op) = (term1352 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744885 A) (@lem5744884 A B _72351 f op)). Qed.
Lemma lem5744887 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744888 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1213 A B _72351 f op) = (term1353 A B _72351 f op).
Proof. exact (MK_COMB (@lem5744887) (@lem5744886 A B _72351 f op)). Qed.
Lemma lem5744889 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1214 A B x _72351 f s op) = (term1354 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744888 A B _72351 f op) (@lem5744789 A B x _72351 f s op)). Qed.
Lemma lem5744892 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (op : type1400 B) : (term1219 A B _72351 f op) = (term1219 A B _72351 f op).
Proof. exact (eq_refl (term1219 A B _72351 f op)). Qed.
Lemma lem5744893 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1220 A B x _72351 f s op) = (term1355 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744892 A B _72351 f op) (@lem5744889 A B x _72351 f s op)). Qed.
Lemma lem5744896 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5744897 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1221 A B x _72351 f s op) = (term1356 A B x _72351 f s op).
Proof. exact (MK_COMB (@lem5744896 B op) (@lem5744893 A B x _72351 f s op)). Qed.
Lemma lem5744898 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1222 A B _72351 f s op) = (term1357 A B _72351 f s op).
Proof. exact (fun_ext (fun x : A => @lem5744897 A B x _72351 f s op)). Qed.
Lemma lem5744899 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744900 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1223 A B _72351 f s op) = (term1358 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5744899 A) (@lem5744898 A B _72351 f s op)). Qed.
Lemma lem5744901 {A B : Type'} (_72351 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1224 A B _72351 s op) = (term1359 A B _72351 s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744900 A B _72351 f s op)). Qed.
Lemma lem5744902 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744903 {A B : Type'} (_72351 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1225 A B _72351 s op) = (term1360 A B _72351 s op).
Proof. exact (MK_COMB (@lem5744902 A B) (@lem5744901 A B _72351 s op)). Qed.
Lemma lem5744904 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1226 A B _72351 op) = (term1361 A B _72351 op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5744903 A B _72351 s op)). Qed.
Lemma lem5744905 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5744906 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (term1227 A B _72351 op) = (term1362 A B _72351 op).
Proof. exact (MK_COMB (@lem5744905 A) (@lem5744904 A B _72351 op)). Qed.
Lemma lem5744907 {A B : Type'} (_72351 : type749 A B) : (term1228 A B _72351) = (term1363 A B _72351).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744906 A B _72351 op)). Qed.
Lemma lem5744908 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744909 {A B : Type'} (_72351 : type749 A B) : (term1229 A B _72351) = (term1364 A B _72351).
Proof. exact (MK_COMB (@lem5744908 B) (@lem5744907 A B _72351)). Qed.
Lemma lem5744910 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72351 op f x) = (_72352 op f x)) = ((_72351 op f x) = (_72352 op f x)).
Proof. exact (eq_refl ((_72351 op f x) = (_72352 op f x))). Qed.
Lemma lem5744911 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1289 A B _72351 _72352 op f) = (term1289 A B _72351 _72352 op f).
Proof. exact (fun_ext (fun x : A => @lem5744910 A B _72351 _72352 op f x)). Qed.
Lemma lem5744912 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744913 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1290 A B _72351 _72352 op f) = (term1290 A B _72351 _72352 op f).
Proof. exact (MK_COMB (@lem5744912 A) (@lem5744911 A B _72351 _72352 op f)). Qed.
Lemma lem5744914 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (op : type1400 B) : (term1291 A B _72351 _72352 op) = (term1291 A B _72351 _72352 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744913 A B _72351 _72352 op f)). Qed.
Lemma lem5744915 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744916 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) (op : type1400 B) : (term1292 A B _72351 _72352 op) = (term1292 A B _72351 _72352 op).
Proof. exact (MK_COMB (@lem5744915 A B) (@lem5744914 A B _72351 _72352 op)). Qed.
Lemma lem5744917 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) : (term1293 A B _72351 _72352) = (term1293 A B _72351 _72352).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744916 A B _72351 _72352 op)). Qed.
Lemma lem5744918 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744919 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) : (term1294 A B _72351 _72352) = (term1294 A B _72351 _72352).
Proof. exact (MK_COMB (@lem5744918 B) (@lem5744917 A B _72351 _72352)). Qed.
Lemma lem5744920 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744921 {A B : Type'} (_72351 : type749 A B) (_72352 : type749 A B) : (term1295 A B _72351 _72352) = (term1295 A B _72351 _72352).
Proof. exact (MK_COMB (@lem5744920) (@lem5744919 A B _72351 _72352)). Qed.
Lemma lem5744922 {A B : Type'} (_72352 : type749 A B) (_72351 : type749 A B) : (term1296 A B _72352 _72351) = (term1365 A B _72352 _72351).
Proof. exact (MK_COMB (@lem5744921 A B _72351 _72352) (@lem5744909 A B _72351)). Qed.
Lemma lem5744923 {A B : Type'} (_72352 : type749 A B) : (term1297 A B _72352) = (term1366 A B _72352).
Proof. exact (fun_ext (fun _72351 : type749 A B => @lem5744922 A B _72352 _72351)). Qed.
Lemma lem5744924 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744925 {A B : Type'} (_72352 : type749 A B) : (term1298 A B _72352) = (term1367 A B _72352).
Proof. exact (MK_COMB (@lem5744924 A B) (@lem5744923 A B _72352)). Qed.
Lemma lem5744926 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : ((_72352 op f x a) = (term84 A B op f x a)) = ((_72352 op f x a) = (term84 A B op f x a)).
Proof. exact (eq_refl ((_72352 op f x a) = (term84 A B op f x a))). Qed.
Lemma lem5744927 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1325 A B _72352 op f x) = (term1325 A B _72352 op f x).
Proof. exact (fun_ext (fun a : B => @lem5744926 A B _72352 op f x a)). Qed.
Lemma lem5744928 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5744929 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1326 A B _72352 op f x) = (term1326 A B _72352 op f x).
Proof. exact (MK_COMB (@lem5744928 B) (@lem5744927 A B _72352 op f x)). Qed.
Lemma lem5744930 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1327 A B _72352 op f) = (term1327 A B _72352 op f).
Proof. exact (fun_ext (fun x : A => @lem5744929 A B _72352 op f x)). Qed.
Lemma lem5744931 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5744932 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) (f : A -> B) : (term1328 A B _72352 op f) = (term1328 A B _72352 op f).
Proof. exact (MK_COMB (@lem5744931 A) (@lem5744930 A B _72352 op f)). Qed.
Lemma lem5744933 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1329 A B _72352 op) = (term1329 A B _72352 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5744932 A B _72352 op f)). Qed.
Lemma lem5744934 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5744935 {A B : Type'} (_72352 : type749 A B) (op : type1400 B) : (term1330 A B _72352 op) = (term1330 A B _72352 op).
Proof. exact (MK_COMB (@lem5744934 A B) (@lem5744933 A B _72352 op)). Qed.
Lemma lem5744936 {A B : Type'} (_72352 : type749 A B) : (term1331 A B _72352) = (term1331 A B _72352).
Proof. exact (fun_ext (fun op : type1400 B => @lem5744935 A B _72352 op)). Qed.
Lemma lem5744937 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5744938 {A B : Type'} (_72352 : type749 A B) : (term1332 A B _72352) = (term1332 A B _72352).
Proof. exact (MK_COMB (@lem5744937 B) (@lem5744936 A B _72352)). Qed.
Lemma lem5744939 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5744940 {A B : Type'} (_72352 : type749 A B) : (term1333 A B _72352) = (term1333 A B _72352).
Proof. exact (MK_COMB (@lem5744939) (@lem5744938 A B _72352)). Qed.
Lemma lem5744941 {A B : Type'} (_72352 : type749 A B) : (term1334 A B _72352) = (term1368 A B _72352).
Proof. exact (MK_COMB (@lem5744940 A B _72352) (@lem5744925 A B _72352)). Qed.
Lemma lem5744942 {A B : Type'} : (term1335 A B) = (term1369 A B).
Proof. exact (fun_ext (fun _72352 : type749 A B => @lem5744941 A B _72352)). Qed.
Lemma lem5744943 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5744944 {A B : Type'} : (term1336 A B) = (term1370 A B).
Proof. exact (MK_COMB (@lem5744943 A B) (@lem5744942 A B)). Qed.
Lemma lem5745111 {A B : Type'} : (term1153 A B) = (term1370 A B).
Proof. exact (TRANS (@lem5744735 A B) (@lem5744944 A B)). Qed.
Lemma lem5745112 {A B : Type'} : (term1370 A B) = (term1153 A B).
Proof. exact (SYM (@lem5745111 A B)). Qed.
Lemma lem5745122 {B : Type'} (h1 : term57 B) : term57 B.
Proof. exact (h1). Qed.
Lemma lem5745516 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : term1192 A B _72351 f s op.
Proof. exact (h1). Qed.
Lemma lem5745520 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5745521 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5745522 {B : Type'} (op : type1400 B) (x : B) : (term180 B op x) = (term181 B op x).
Proof. exact (@lem5745521 B (term125 B op x)). Qed.
Lemma lem5745523 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term182 B op x y) = ((op x y) = (op y x)).
Proof. exact (eq_refl (term182 B op x y)). Qed.
Lemma lem5745524 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5745526 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term183 B op x y) = (term184 B op y x).
Proof. exact (MK_COMB (@lem5745524) (@lem5745523 B op y x)). Qed.
Lemma lem5745527 {B : Type'} (op : type1400 B) (x : B) : (term185 B op x) = (term186 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745526 B op y x)). Qed.
Lemma lem5745528 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745529 {B : Type'} (op : type1400 B) (x : B) : (term181 B op x) = (term187 B op x).
Proof. exact (MK_COMB (@lem5745528 B) (@lem5745527 B op x)). Qed.
Lemma lem5745530 {B : Type'} (op : type1400 B) (x : B) : (term180 B op x) = (term187 B op x).
Proof. exact (TRANS (@lem5745522 B op x) (@lem5745529 B op x)). Qed.
Lemma lem5745531 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745520 B op y x)). Qed.
Lemma lem5745532 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5745533 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5745532 B) (@lem5745531 B op x)). Qed.
Lemma lem5745534 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5745535 {B : Type'} (op : type1400 B) : (term188 B op) = (term189 B op).
Proof. exact (@lem5745534 B (term127 B op)). Qed.
Lemma lem5745536 {B : Type'} (op : type1400 B) (x : B) : (term190 B op x) = (term126 B op x).
Proof. exact (eq_refl (term190 B op x)). Qed.
Lemma lem5745537 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5745538 {B : Type'} (op : type1400 B) (x : B) : (term191 B op x) = (term180 B op x).
Proof. exact (MK_COMB (@lem5745537) (@lem5745536 B op x)). Qed.
Lemma lem5745539 {B : Type'} (op : type1400 B) (x : B) : (term191 B op x) = (term187 B op x).
Proof. exact (TRANS (@lem5745538 B op x) (@lem5745530 B op x)). Qed.
Lemma lem5745540 {B : Type'} (op : type1400 B) : (term192 B op) = (term193 B op).
Proof. exact (fun_ext (fun x : B => @lem5745539 B op x)). Qed.
Lemma lem5745541 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745542 {B : Type'} (op : type1400 B) : (term189 B op) = (term194 B op).
Proof. exact (MK_COMB (@lem5745541 B) (@lem5745540 B op)). Qed.
Lemma lem5745543 {B : Type'} (op : type1400 B) : (term188 B op) = (term194 B op).
Proof. exact (TRANS (@lem5745535 B op) (@lem5745542 B op)). Qed.
Lemma lem5745544 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5745533 B op x)). Qed.
Lemma lem5745545 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5745546 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5745545 B) (@lem5745544 B op)). Qed.
Lemma lem5745548 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5745549 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5745550 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term195 B op x y) = (term196 B op x y).
Proof. exact (@lem5745549 B (term117 B op x y)). Qed.
Lemma lem5745551 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term197 B op x y z) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl (term197 B op x y z)). Qed.
Lemma lem5745552 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5745554 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term198 B op x y z) = (term199 B op x y z).
Proof. exact (MK_COMB (@lem5745552) (@lem5745551 B op x y z)). Qed.
Lemma lem5745555 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term200 B op x y) = (term201 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5745554 B op x y z)). Qed.
Lemma lem5745556 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745557 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term196 B op x y) = (term202 B op x y).
Proof. exact (MK_COMB (@lem5745556 B) (@lem5745555 B op x y)). Qed.
Lemma lem5745558 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term195 B op x y) = (term202 B op x y).
Proof. exact (TRANS (@lem5745550 B op x y) (@lem5745557 B op x y)). Qed.
Lemma lem5745559 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5745548 B op x y z)). Qed.
Lemma lem5745560 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5745561 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5745560 B) (@lem5745559 B op x y)). Qed.
Lemma lem5745562 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5745563 {B : Type'} (op : type1400 B) (x : B) : (term203 B op x) = (term204 B op x).
Proof. exact (@lem5745562 B (term119 B op x)). Qed.
Lemma lem5745564 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term205 B op x y) = (term118 B op x y).
Proof. exact (eq_refl (term205 B op x y)). Qed.
Lemma lem5745565 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5745566 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term206 B op x y) = (term195 B op x y).
Proof. exact (MK_COMB (@lem5745565) (@lem5745564 B op x y)). Qed.
Lemma lem5745567 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term206 B op x y) = (term202 B op x y).
Proof. exact (TRANS (@lem5745566 B op x y) (@lem5745558 B op x y)). Qed.
Lemma lem5745568 {B : Type'} (op : type1400 B) (x : B) : (term207 B op x) = (term208 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745567 B op x y)). Qed.
Lemma lem5745569 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745570 {B : Type'} (op : type1400 B) (x : B) : (term204 B op x) = (term209 B op x).
Proof. exact (MK_COMB (@lem5745569 B) (@lem5745568 B op x)). Qed.
Lemma lem5745571 {B : Type'} (op : type1400 B) (x : B) : (term203 B op x) = (term209 B op x).
Proof. exact (TRANS (@lem5745563 B op x) (@lem5745570 B op x)). Qed.
Lemma lem5745572 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745561 B op x y)). Qed.
Lemma lem5745573 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5745574 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5745573 B) (@lem5745572 B op x)). Qed.
Lemma lem5745575 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5745576 {B : Type'} (op : type1400 B) : (term210 B op) = (term211 B op).
Proof. exact (@lem5745575 B (term121 B op)). Qed.
Lemma lem5745577 {B : Type'} (op : type1400 B) (x : B) : (term212 B op x) = (term120 B op x).
Proof. exact (eq_refl (term212 B op x)). Qed.
Lemma lem5745578 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5745579 {B : Type'} (op : type1400 B) (x : B) : (term213 B op x) = (term203 B op x).
Proof. exact (MK_COMB (@lem5745578) (@lem5745577 B op x)). Qed.
Lemma lem5745580 {B : Type'} (op : type1400 B) (x : B) : (term213 B op x) = (term209 B op x).
Proof. exact (TRANS (@lem5745579 B op x) (@lem5745571 B op x)). Qed.
Lemma lem5745581 {B : Type'} (op : type1400 B) : (term214 B op) = (term215 B op).
Proof. exact (fun_ext (fun x : B => @lem5745580 B op x)). Qed.
Lemma lem5745582 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745583 {B : Type'} (op : type1400 B) : (term211 B op) = (term216 B op).
Proof. exact (MK_COMB (@lem5745582 B) (@lem5745581 B op)). Qed.
Lemma lem5745584 {B : Type'} (op : type1400 B) : (term210 B op) = (term216 B op).
Proof. exact (TRANS (@lem5745576 B op) (@lem5745583 B op)). Qed.
Lemma lem5745585 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5745574 B op x)). Qed.
Lemma lem5745586 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5745587 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5745586 B) (@lem5745585 B op)). Qed.
Lemma lem5745589 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5745590 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5745591 {B : Type'} (op : type1400 B) : (term217 B op) = (term218 B op).
Proof. exact (@lem5745590 B (term113 B op)). Qed.
Lemma lem5745592 {B : Type'} (op : type1400 B) (x : B) : (term219 B op x) = ((term112 B op x) = x).
Proof. exact (eq_refl (term219 B op x)). Qed.
Lemma lem5745593 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5745595 {B : Type'} (op : type1400 B) (x : B) : (term220 B op x) = (term221 B op x).
Proof. exact (MK_COMB (@lem5745593) (@lem5745592 B op x)). Qed.
Lemma lem5745596 {B : Type'} (op : type1400 B) : (term222 B op) = (term223 B op).
Proof. exact (fun_ext (fun x : B => @lem5745595 B op x)). Qed.
Lemma lem5745597 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745598 {B : Type'} (op : type1400 B) : (term218 B op) = (term224 B op).
Proof. exact (MK_COMB (@lem5745597 B) (@lem5745596 B op)). Qed.
Lemma lem5745599 {B : Type'} (op : type1400 B) : (term217 B op) = (term224 B op).
Proof. exact (TRANS (@lem5745591 B op) (@lem5745598 B op)). Qed.
Lemma lem5745600 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5745589 B op x)). Qed.
Lemma lem5745601 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5745602 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5745601 B) (@lem5745600 B op)). Qed.
Lemma lem5745603 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745604 {B : Type'} (op : type1400 B) : (term225 B op) = (term226 B op).
Proof. exact (MK_COMB (@lem5745603) (@lem5745584 B op)). Qed.
Lemma lem5745605 {B : Type'} (op : type1400 B) : (term227 B op) = (term228 B op).
Proof. exact (MK_COMB (@lem5745604 B op) (@lem5745599 B op)). Qed.
Lemma lem5745606 {B : Type'} (op : type1400 B) : (term229 B op) = (term227 B op).
Proof. exact (@lem17045 (term122 B op) (term114 B op)). Qed.
Lemma lem5745607 {B : Type'} (op : type1400 B) : (term229 B op) = (term228 B op).
Proof. exact (TRANS (@lem5745606 B op) (@lem5745605 B op)). Qed.
Lemma lem5745608 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5745609 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5745608) (@lem5745587 B op)). Qed.
Lemma lem5745610 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5745609 B op) (@lem5745602 B op)). Qed.
Lemma lem5745611 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745612 {B : Type'} (op : type1400 B) : (term230 B op) = (term231 B op).
Proof. exact (MK_COMB (@lem5745611) (@lem5745543 B op)). Qed.
Lemma lem5745613 {B : Type'} (op : type1400 B) : (term232 B op) = (term233 B op).
Proof. exact (MK_COMB (@lem5745612 B op) (@lem5745607 B op)). Qed.
Lemma lem5745614 {B : Type'} (op : type1400 B) : (term234 B op) = (term232 B op).
Proof. exact (@lem17045 (term128 B op) (term124 B op)). Qed.
Lemma lem5745615 {B : Type'} (op : type1400 B) : (term234 B op) = (term233 B op).
Proof. exact (TRANS (@lem5745614 B op) (@lem5745613 B op)). Qed.
Lemma lem5745616 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5745617 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5745616) (@lem5745546 B op)). Qed.
Lemma lem5745618 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5745617 B op) (@lem5745610 B op)). Qed.
Lemma lem5745620 {B : Type'} (op : type1400 B) : (term235 B op) = (term235 B op).
Proof. exact (eq_refl (term235 B op)). Qed.
Lemma lem5745621 {B : Type'} (op : type1400 B) : (term236 B op) = (term236 B op).
Proof. exact (MK_COMB (@lem5745620 B op) (@lem5745618 B op)). Qed.
Lemma lem5745623 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5745624 {B : Type'} (op : type1400 B) : (term238 B op) = (term239 B op).
Proof. exact (MK_COMB (@lem5745623 B op) (@lem5745615 B op)). Qed.
Lemma lem5745625 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5745626 {B : Type'} (op : type1400 B) : (term240 B op) = (term241 B op).
Proof. exact (MK_COMB (@lem5745625) (@lem5745624 B op)). Qed.
Lemma lem5745627 {B : Type'} (op : type1400 B) : (term242 B op) = (term243 B op).
Proof. exact (MK_COMB (@lem5745626 B op) (@lem5745621 B op)). Qed.
Lemma lem5745628 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = (term242 B op).
Proof. exact (@lem17784 (@monoidal B op) (term130 B op)). Qed.
Lemma lem5745629 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = (term243 B op).
Proof. exact (TRANS (@lem5745628 B op) (@lem5745627 B op)). Qed.
Lemma lem5745630 {B : Type'} : (term132 B) = (term244 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5745629 B op)). Qed.
Lemma lem5745631 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5745632 {B : Type'} : (term57 B) = (term245 B).
Proof. exact (MK_COMB (@lem5745631 B) (@lem5745630 B)). Qed.
Lemma lem5745634 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term22 A P Q) = (term21 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5745635 {B : Type'} (P : type403 B) (Q : type403 B) : (term246 B P Q) = (term247 B P Q).
Proof. exact (@lem5745634 (type1400 B) P Q). Qed.
Lemma lem5745636 {B : Type'} : (term248 B) = (term249 B).
Proof. exact (@lem5745635 B (term250 B) (term251 B)). Qed.
Lemma lem5745637 {B : Type'} (op : type1400 B) : (term252 B op) = (term239 B op).
Proof. exact (eq_refl (term252 B op)). Qed.
Lemma lem5745638 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5745639 {B : Type'} (op : type1400 B) : (term253 B op) = (term241 B op).
Proof. exact (MK_COMB (@lem5745638) (@lem5745637 B op)). Qed.
Lemma lem5745640 {B : Type'} (op : type1400 B) : (term254 B op) = (term236 B op).
Proof. exact (eq_refl (term254 B op)). Qed.
Lemma lem5745641 {B : Type'} (op : type1400 B) : (term255 B op) = (term243 B op).
Proof. exact (MK_COMB (@lem5745639 B op) (@lem5745640 B op)). Qed.
Lemma lem5745642 {B : Type'} : (term256 B) = (term244 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5745641 B op)). Qed.
Lemma lem5745643 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5745644 {B : Type'} : (term248 B) = (term245 B).
Proof. exact (MK_COMB (@lem5745643 B) (@lem5745642 B)). Qed.
Lemma lem5745645 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745646 {B : Type'} : (term257 B) = (term258 B).
Proof. exact (MK_COMB (@lem5745645) (@lem5745644 B)). Qed.
Lemma lem5745647 {B : Type'} (op : type1400 B) : (term252 B op) = (term239 B op).
Proof. exact (eq_refl (term252 B op)). Qed.
Lemma lem5745648 {B : Type'} : (term259 B) = (term250 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5745647 B op)). Qed.
Lemma lem5745649 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5745650 {B : Type'} : (term260 B) = (term261 B).
Proof. exact (MK_COMB (@lem5745649 B) (@lem5745648 B)). Qed.
Lemma lem5745651 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5745652 {B : Type'} : (term262 B) = (term263 B).
Proof. exact (MK_COMB (@lem5745651) (@lem5745650 B)). Qed.
Lemma lem5745653 {B : Type'} (op : type1400 B) : (term254 B op) = (term236 B op).
Proof. exact (eq_refl (term254 B op)). Qed.
Lemma lem5745654 {B : Type'} : (term264 B) = (term251 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5745653 B op)). Qed.
Lemma lem5745655 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5745656 {B : Type'} : (term265 B) = (term266 B).
Proof. exact (MK_COMB (@lem5745655 B) (@lem5745654 B)). Qed.
Lemma lem5745657 {B : Type'} : (term249 B) = (term267 B).
Proof. exact (MK_COMB (@lem5745652 B) (@lem5745656 B)). Qed.
Lemma lem5745658 {B : Type'} : ((term248 B) = (term249 B)) = ((term245 B) = (term267 B)).
Proof. exact (MK_COMB (@lem5745646 B) (@lem5745657 B)). Qed.
Lemma lem5745659 {B : Type'} : (term245 B) = (term267 B).
Proof. exact (EQ_MP (@lem5745658 B) (@lem5745636 B)). Qed.
Lemma lem5745785 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5745786 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5745785 B P Q). Qed.
Lemma lem5745787 {B : Type'} (op : type1400 B) : (term270 B op) = (term271 B op).
Proof. exact (@lem5745786 B (term215 B op) (term223 B op)). Qed.
Lemma lem5745788 {B : Type'} (op : type1400 B) (x : B) : (term272 B op x) = (term209 B op x).
Proof. exact (eq_refl (term272 B op x)). Qed.
Lemma lem5745789 {B : Type'} (op : type1400 B) : (term273 B op) = (term215 B op).
Proof. exact (fun_ext (fun x : B => @lem5745788 B op x)). Qed.
Lemma lem5745790 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745791 {B : Type'} (op : type1400 B) : (term274 B op) = (term216 B op).
Proof. exact (MK_COMB (@lem5745790 B) (@lem5745789 B op)). Qed.
Lemma lem5745792 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745793 {B : Type'} (op : type1400 B) : (term275 B op) = (term226 B op).
Proof. exact (MK_COMB (@lem5745792) (@lem5745791 B op)). Qed.
Lemma lem5745794 {B : Type'} (op : type1400 B) (x : B) : (term276 B op x) = (term221 B op x).
Proof. exact (eq_refl (term276 B op x)). Qed.
Lemma lem5745795 {B : Type'} (op : type1400 B) : (term277 B op) = (term223 B op).
Proof. exact (fun_ext (fun x : B => @lem5745794 B op x)). Qed.
Lemma lem5745796 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745797 {B : Type'} (op : type1400 B) : (term278 B op) = (term224 B op).
Proof. exact (MK_COMB (@lem5745796 B) (@lem5745795 B op)). Qed.
Lemma lem5745798 {B : Type'} (op : type1400 B) : (term270 B op) = (term228 B op).
Proof. exact (MK_COMB (@lem5745793 B op) (@lem5745797 B op)). Qed.
Lemma lem5745799 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745800 {B : Type'} (op : type1400 B) : (term279 B op) = (term280 B op).
Proof. exact (MK_COMB (@lem5745799) (@lem5745798 B op)). Qed.
Lemma lem5745801 {B : Type'} (op : type1400 B) (x : B) : (term272 B op x) = (term209 B op x).
Proof. exact (eq_refl (term272 B op x)). Qed.
Lemma lem5745802 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745803 {B : Type'} (op : type1400 B) (x : B) : (term281 B op x) = (term282 B op x).
Proof. exact (MK_COMB (@lem5745802) (@lem5745801 B op x)). Qed.
Lemma lem5745804 {B : Type'} (op : type1400 B) (x : B) : (term276 B op x) = (term221 B op x).
Proof. exact (eq_refl (term276 B op x)). Qed.
Lemma lem5745805 {B : Type'} (op : type1400 B) (x : B) : (term283 B op x) = (term284 B op x).
Proof. exact (MK_COMB (@lem5745803 B op x) (@lem5745804 B op x)). Qed.
Lemma lem5745806 {B : Type'} (op : type1400 B) : (term285 B op) = (term286 B op).
Proof. exact (fun_ext (fun x : B => @lem5745805 B op x)). Qed.
Lemma lem5745807 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745808 {B : Type'} (op : type1400 B) : (term271 B op) = (term287 B op).
Proof. exact (MK_COMB (@lem5745807 B) (@lem5745806 B op)). Qed.
Lemma lem5745809 {B : Type'} (op : type1400 B) : ((term270 B op) = (term271 B op)) = ((term228 B op) = (term287 B op)).
Proof. exact (MK_COMB (@lem5745800 B op) (@lem5745808 B op)). Qed.
Lemma lem5745810 {B : Type'} (op : type1400 B) : (term228 B op) = (term287 B op).
Proof. exact (EQ_MP (@lem5745809 B op) (@lem5745787 B op)). Qed.
Lemma lem5745812 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5745813 {B : Type'} (P : B -> Prop) (Q : Prop) : (term288 B P Q) = (term289 B P Q).
Proof. exact (@lem5745812 B P Q). Qed.
Lemma lem5745814 {B : Type'} (op : type1400 B) (x : B) : (term290 B op x) = (term291 B op x).
Proof. exact (@lem5745813 B (term208 B op x) (term221 B op x)). Qed.
Lemma lem5745815 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term292 B op x y) = (term202 B op x y).
Proof. exact (eq_refl (term292 B op x y)). Qed.
Lemma lem5745816 {B : Type'} (op : type1400 B) (x : B) : (term293 B op x) = (term208 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745815 B op x y)). Qed.
Lemma lem5745817 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745818 {B : Type'} (op : type1400 B) (x : B) : (term294 B op x) = (term209 B op x).
Proof. exact (MK_COMB (@lem5745817 B) (@lem5745816 B op x)). Qed.
Lemma lem5745819 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745820 {B : Type'} (op : type1400 B) (x : B) : (term295 B op x) = (term282 B op x).
Proof. exact (MK_COMB (@lem5745819) (@lem5745818 B op x)). Qed.
Lemma lem5745821 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5745822 {B : Type'} (op : type1400 B) (x : B) : (term290 B op x) = (term284 B op x).
Proof. exact (MK_COMB (@lem5745820 B op x) (@lem5745821 B op x)). Qed.
Lemma lem5745823 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745824 {B : Type'} (op : type1400 B) (x : B) : (term296 B op x) = (term297 B op x).
Proof. exact (MK_COMB (@lem5745823) (@lem5745822 B op x)). Qed.
Lemma lem5745825 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term292 B op x y) = (term202 B op x y).
Proof. exact (eq_refl (term292 B op x y)). Qed.
Lemma lem5745826 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745827 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term298 B op x y) = (term299 B op x y).
Proof. exact (MK_COMB (@lem5745826) (@lem5745825 B op x y)). Qed.
Lemma lem5745828 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5745829 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term300 B y op x) = (term301 B y op x).
Proof. exact (MK_COMB (@lem5745827 B op x y) (@lem5745828 B op x)). Qed.
Lemma lem5745830 {B : Type'} (op : type1400 B) (x : B) : (term302 B op x) = (term303 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745829 B y op x)). Qed.
Lemma lem5745831 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745832 {B : Type'} (op : type1400 B) (x : B) : (term291 B op x) = (term304 B op x).
Proof. exact (MK_COMB (@lem5745831 B) (@lem5745830 B op x)). Qed.
Lemma lem5745833 {B : Type'} (op : type1400 B) (x : B) : ((term290 B op x) = (term291 B op x)) = ((term284 B op x) = (term304 B op x)).
Proof. exact (MK_COMB (@lem5745824 B op x) (@lem5745832 B op x)). Qed.
Lemma lem5745834 {B : Type'} (op : type1400 B) (x : B) : (term284 B op x) = (term304 B op x).
Proof. exact (EQ_MP (@lem5745833 B op x) (@lem5745814 B op x)). Qed.
Lemma lem5745836 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5745837 {B : Type'} (P : B -> Prop) (Q : Prop) : (term288 B P Q) = (term289 B P Q).
Proof. exact (@lem5745836 B P Q). Qed.
Lemma lem5745838 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term305 B y op x) = (term306 B y op x).
Proof. exact (@lem5745837 B (term201 B op x y) (term221 B op x)). Qed.
Lemma lem5745839 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term307 B op x y z) = (term199 B op x y z).
Proof. exact (eq_refl (term307 B op x y z)). Qed.
Lemma lem5745840 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term308 B op x y) = (term201 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5745839 B op x y z)). Qed.
Lemma lem5745841 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745842 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term309 B op x y) = (term202 B op x y).
Proof. exact (MK_COMB (@lem5745841 B) (@lem5745840 B op x y)). Qed.
Lemma lem5745843 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745844 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term310 B op x y) = (term299 B op x y).
Proof. exact (MK_COMB (@lem5745843) (@lem5745842 B op x y)). Qed.
Lemma lem5745845 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5745846 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term305 B y op x) = (term301 B y op x).
Proof. exact (MK_COMB (@lem5745844 B op x y) (@lem5745845 B op x)). Qed.
Lemma lem5745847 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745848 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term311 B y op x) = (term312 B y op x).
Proof. exact (MK_COMB (@lem5745847) (@lem5745846 B y op x)). Qed.
Lemma lem5745849 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term307 B op x y z) = (term199 B op x y z).
Proof. exact (eq_refl (term307 B op x y z)). Qed.
Lemma lem5745850 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745851 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term313 B op x y z) = (term314 B op x y z).
Proof. exact (MK_COMB (@lem5745850) (@lem5745849 B op x y z)). Qed.
Lemma lem5745852 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5745853 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term315 B y z op x) = (term316 B y z op x).
Proof. exact (MK_COMB (@lem5745851 B op x y z) (@lem5745852 B op x)). Qed.
Lemma lem5745854 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term317 B y op x) = (term318 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5745853 B y z op x)). Qed.
Lemma lem5745855 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745856 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term306 B y op x) = (term319 B y op x).
Proof. exact (MK_COMB (@lem5745855 B) (@lem5745854 B y op x)). Qed.
Lemma lem5745857 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term305 B y op x) = (term306 B y op x)) = ((term301 B y op x) = (term319 B y op x)).
Proof. exact (MK_COMB (@lem5745848 B y op x) (@lem5745856 B y op x)). Qed.
Lemma lem5745858 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term301 B y op x) = (term319 B y op x).
Proof. exact (EQ_MP (@lem5745857 B y op x) (@lem5745838 B y op x)). Qed.
Lemma lem5745859 {B : Type'} (op : type1400 B) (x : B) : (term303 B op x) = (term320 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745858 B y op x)). Qed.
Lemma lem5745860 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745861 {B : Type'} (op : type1400 B) (x : B) : (term304 B op x) = (term321 B op x).
Proof. exact (MK_COMB (@lem5745860 B) (@lem5745859 B op x)). Qed.
Lemma lem5745862 {B : Type'} (op : type1400 B) (x : B) : (term284 B op x) = (term321 B op x).
Proof. exact (TRANS (@lem5745834 B op x) (@lem5745861 B op x)). Qed.
Lemma lem5745863 {B : Type'} (op : type1400 B) : (term286 B op) = (term322 B op).
Proof. exact (fun_ext (fun x : B => @lem5745862 B op x)). Qed.
Lemma lem5745864 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745865 {B : Type'} (op : type1400 B) : (term287 B op) = (term323 B op).
Proof. exact (MK_COMB (@lem5745864 B) (@lem5745863 B op)). Qed.
Lemma lem5745866 {B : Type'} (op : type1400 B) : (term228 B op) = (term323 B op).
Proof. exact (TRANS (@lem5745810 B op) (@lem5745865 B op)). Qed.
Lemma lem5745867 {B : Type'} (op : type1400 B) : (term231 B op) = (term231 B op).
Proof. exact (eq_refl (term231 B op)). Qed.
Lemma lem5745868 {B : Type'} (op : type1400 B) : (term233 B op) = (term324 B op).
Proof. exact (MK_COMB (@lem5745867 B op) (@lem5745866 B op)). Qed.
Lemma lem5745870 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5745871 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5745870 B P Q). Qed.
Lemma lem5745872 {B : Type'} (op : type1400 B) : (term325 B op) = (term326 B op).
Proof. exact (@lem5745871 B (term193 B op) (term322 B op)). Qed.
Lemma lem5745873 {B : Type'} (op : type1400 B) (x : B) : (term327 B op x) = (term187 B op x).
Proof. exact (eq_refl (term327 B op x)). Qed.
Lemma lem5745874 {B : Type'} (op : type1400 B) : (term328 B op) = (term193 B op).
Proof. exact (fun_ext (fun x : B => @lem5745873 B op x)). Qed.
Lemma lem5745875 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745876 {B : Type'} (op : type1400 B) : (term329 B op) = (term194 B op).
Proof. exact (MK_COMB (@lem5745875 B) (@lem5745874 B op)). Qed.
Lemma lem5745877 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745878 {B : Type'} (op : type1400 B) : (term330 B op) = (term231 B op).
Proof. exact (MK_COMB (@lem5745877) (@lem5745876 B op)). Qed.
Lemma lem5745879 {B : Type'} (op : type1400 B) (x : B) : (term331 B op x) = (term321 B op x).
Proof. exact (eq_refl (term331 B op x)). Qed.
Lemma lem5745880 {B : Type'} (op : type1400 B) : (term332 B op) = (term322 B op).
Proof. exact (fun_ext (fun x : B => @lem5745879 B op x)). Qed.
Lemma lem5745881 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745882 {B : Type'} (op : type1400 B) : (term333 B op) = (term323 B op).
Proof. exact (MK_COMB (@lem5745881 B) (@lem5745880 B op)). Qed.
Lemma lem5745883 {B : Type'} (op : type1400 B) : (term325 B op) = (term324 B op).
Proof. exact (MK_COMB (@lem5745878 B op) (@lem5745882 B op)). Qed.
Lemma lem5745884 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745885 {B : Type'} (op : type1400 B) : (term334 B op) = (term335 B op).
Proof. exact (MK_COMB (@lem5745884) (@lem5745883 B op)). Qed.
Lemma lem5745886 {B : Type'} (op : type1400 B) (x : B) : (term327 B op x) = (term187 B op x).
Proof. exact (eq_refl (term327 B op x)). Qed.
Lemma lem5745887 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745888 {B : Type'} (op : type1400 B) (x : B) : (term336 B op x) = (term337 B op x).
Proof. exact (MK_COMB (@lem5745887) (@lem5745886 B op x)). Qed.
Lemma lem5745889 {B : Type'} (op : type1400 B) (x : B) : (term331 B op x) = (term321 B op x).
Proof. exact (eq_refl (term331 B op x)). Qed.
Lemma lem5745890 {B : Type'} (op : type1400 B) (x : B) : (term338 B op x) = (term339 B op x).
Proof. exact (MK_COMB (@lem5745888 B op x) (@lem5745889 B op x)). Qed.
Lemma lem5745891 {B : Type'} (op : type1400 B) : (term340 B op) = (term341 B op).
Proof. exact (fun_ext (fun x : B => @lem5745890 B op x)). Qed.
Lemma lem5745892 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745893 {B : Type'} (op : type1400 B) : (term326 B op) = (term342 B op).
Proof. exact (MK_COMB (@lem5745892 B) (@lem5745891 B op)). Qed.
Lemma lem5745894 {B : Type'} (op : type1400 B) : ((term325 B op) = (term326 B op)) = ((term324 B op) = (term342 B op)).
Proof. exact (MK_COMB (@lem5745885 B op) (@lem5745893 B op)). Qed.
Lemma lem5745895 {B : Type'} (op : type1400 B) : (term324 B op) = (term342 B op).
Proof. exact (EQ_MP (@lem5745894 B op) (@lem5745872 B op)). Qed.
Lemma lem5745897 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5745898 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5745897 B P Q). Qed.
Lemma lem5745899 {B : Type'} (op : type1400 B) (x : B) : (term343 B op x) = (term344 B op x).
Proof. exact (@lem5745898 B (term186 B op x) (term320 B op x)). Qed.
Lemma lem5745900 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term345 B op x y) = (term184 B op y x).
Proof. exact (eq_refl (term345 B op x y)). Qed.
Lemma lem5745901 {B : Type'} (op : type1400 B) (x : B) : (term346 B op x) = (term186 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745900 B op y x)). Qed.
Lemma lem5745902 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745903 {B : Type'} (op : type1400 B) (x : B) : (term347 B op x) = (term187 B op x).
Proof. exact (MK_COMB (@lem5745902 B) (@lem5745901 B op x)). Qed.
Lemma lem5745904 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745905 {B : Type'} (op : type1400 B) (x : B) : (term348 B op x) = (term337 B op x).
Proof. exact (MK_COMB (@lem5745904) (@lem5745903 B op x)). Qed.
Lemma lem5745906 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term349 B op x y) = (term319 B y op x).
Proof. exact (eq_refl (term349 B op x y)). Qed.
Lemma lem5745907 {B : Type'} (op : type1400 B) (x : B) : (term350 B op x) = (term320 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745906 B y op x)). Qed.
Lemma lem5745908 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745909 {B : Type'} (op : type1400 B) (x : B) : (term351 B op x) = (term321 B op x).
Proof. exact (MK_COMB (@lem5745908 B) (@lem5745907 B op x)). Qed.
Lemma lem5745910 {B : Type'} (op : type1400 B) (x : B) : (term343 B op x) = (term339 B op x).
Proof. exact (MK_COMB (@lem5745905 B op x) (@lem5745909 B op x)). Qed.
Lemma lem5745911 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745912 {B : Type'} (op : type1400 B) (x : B) : (term352 B op x) = (term353 B op x).
Proof. exact (MK_COMB (@lem5745911) (@lem5745910 B op x)). Qed.
Lemma lem5745913 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term345 B op x y) = (term184 B op y x).
Proof. exact (eq_refl (term345 B op x y)). Qed.
Lemma lem5745914 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5745915 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term354 B op x y) = (term355 B op y x).
Proof. exact (MK_COMB (@lem5745914) (@lem5745913 B op y x)). Qed.
Lemma lem5745916 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term349 B op x y) = (term319 B y op x).
Proof. exact (eq_refl (term349 B op x y)). Qed.
Lemma lem5745917 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term356 B op x y) = (term357 B y op x).
Proof. exact (MK_COMB (@lem5745915 B op y x) (@lem5745916 B y op x)). Qed.
Lemma lem5745918 {B : Type'} (op : type1400 B) (x : B) : (term358 B op x) = (term359 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745917 B y op x)). Qed.
Lemma lem5745919 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745920 {B : Type'} (op : type1400 B) (x : B) : (term344 B op x) = (term360 B op x).
Proof. exact (MK_COMB (@lem5745919 B) (@lem5745918 B op x)). Qed.
Lemma lem5745921 {B : Type'} (op : type1400 B) (x : B) : ((term343 B op x) = (term344 B op x)) = ((term339 B op x) = (term360 B op x)).
Proof. exact (MK_COMB (@lem5745912 B op x) (@lem5745920 B op x)). Qed.
Lemma lem5745922 {B : Type'} (op : type1400 B) (x : B) : (term339 B op x) = (term360 B op x).
Proof. exact (EQ_MP (@lem5745921 B op x) (@lem5745899 B op x)). Qed.
Lemma lem5745924 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5745925 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5745924 B P Q). Qed.
Lemma lem5745926 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term363 B y op x) = (term364 B y op x).
Proof. exact (@lem5745925 B (term184 B op y x) (term318 B y op x)). Qed.
Lemma lem5745927 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term365 B y op x z) = (term316 B y z op x).
Proof. exact (eq_refl (term365 B y op x z)). Qed.
Lemma lem5745928 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term366 B y op x) = (term318 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5745927 B y z op x)). Qed.
Lemma lem5745929 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745930 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term367 B y op x) = (term319 B y op x).
Proof. exact (MK_COMB (@lem5745929 B) (@lem5745928 B y op x)). Qed.
Lemma lem5745931 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term355 B op y x) = (term355 B op y x).
Proof. exact (eq_refl (term355 B op y x)). Qed.
Lemma lem5745932 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term363 B y op x) = (term357 B y op x).
Proof. exact (MK_COMB (@lem5745931 B op y x) (@lem5745930 B y op x)). Qed.
Lemma lem5745933 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745934 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term368 B y op x) = (term369 B y op x).
Proof. exact (MK_COMB (@lem5745933) (@lem5745932 B y op x)). Qed.
Lemma lem5745935 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term365 B y op x z) = (term316 B y z op x).
Proof. exact (eq_refl (term365 B y op x z)). Qed.
Lemma lem5745936 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term355 B op y x) = (term355 B op y x).
Proof. exact (eq_refl (term355 B op y x)). Qed.
Lemma lem5745937 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term370 B y op x z) = (term371 B y z op x).
Proof. exact (MK_COMB (@lem5745936 B op y x) (@lem5745935 B y z op x)). Qed.
Lemma lem5745938 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term372 B y op x) = (term373 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5745937 B y z op x)). Qed.
Lemma lem5745939 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745940 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term364 B y op x) = (term374 B y op x).
Proof. exact (MK_COMB (@lem5745939 B) (@lem5745938 B y op x)). Qed.
Lemma lem5745941 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term363 B y op x) = (term364 B y op x)) = ((term357 B y op x) = (term374 B y op x)).
Proof. exact (MK_COMB (@lem5745934 B y op x) (@lem5745940 B y op x)). Qed.
Lemma lem5745942 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term357 B y op x) = (term374 B y op x).
Proof. exact (EQ_MP (@lem5745941 B y op x) (@lem5745926 B y op x)). Qed.
Lemma lem5745943 {B : Type'} (op : type1400 B) (x : B) : (term359 B op x) = (term375 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745942 B y op x)). Qed.
Lemma lem5745944 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745945 {B : Type'} (op : type1400 B) (x : B) : (term360 B op x) = (term376 B op x).
Proof. exact (MK_COMB (@lem5745944 B) (@lem5745943 B op x)). Qed.
Lemma lem5745946 {B : Type'} (op : type1400 B) (x : B) : (term339 B op x) = (term376 B op x).
Proof. exact (TRANS (@lem5745922 B op x) (@lem5745945 B op x)). Qed.
Lemma lem5745947 {B : Type'} (op : type1400 B) : (term341 B op) = (term377 B op).
Proof. exact (fun_ext (fun x : B => @lem5745946 B op x)). Qed.
Lemma lem5745948 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745949 {B : Type'} (op : type1400 B) : (term342 B op) = (term378 B op).
Proof. exact (MK_COMB (@lem5745948 B) (@lem5745947 B op)). Qed.
Lemma lem5745950 {B : Type'} (op : type1400 B) : (term324 B op) = (term378 B op).
Proof. exact (TRANS (@lem5745895 B op) (@lem5745949 B op)). Qed.
Lemma lem5745951 {B : Type'} (op : type1400 B) : (term233 B op) = (term378 B op).
Proof. exact (TRANS (@lem5745868 B op) (@lem5745950 B op)). Qed.
Lemma lem5745952 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5745953 {B : Type'} (op : type1400 B) : (term239 B op) = (term379 B op).
Proof. exact (MK_COMB (@lem5745952 B op) (@lem5745951 B op)). Qed.
Lemma lem5745955 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5745956 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5745955 B P Q). Qed.
Lemma lem5745957 {B : Type'} (op : type1400 B) : (term380 B op) = (term381 B op).
Proof. exact (@lem5745956 B (@monoidal B op) (term377 B op)). Qed.
Lemma lem5745958 {B : Type'} (op : type1400 B) (x : B) : (term382 B op x) = (term376 B op x).
Proof. exact (eq_refl (term382 B op x)). Qed.
Lemma lem5745959 {B : Type'} (op : type1400 B) : (term383 B op) = (term377 B op).
Proof. exact (fun_ext (fun x : B => @lem5745958 B op x)). Qed.
Lemma lem5745960 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745961 {B : Type'} (op : type1400 B) : (term384 B op) = (term378 B op).
Proof. exact (MK_COMB (@lem5745960 B) (@lem5745959 B op)). Qed.
Lemma lem5745962 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5745963 {B : Type'} (op : type1400 B) : (term380 B op) = (term379 B op).
Proof. exact (MK_COMB (@lem5745962 B op) (@lem5745961 B op)). Qed.
Lemma lem5745964 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745965 {B : Type'} (op : type1400 B) : (term385 B op) = (term386 B op).
Proof. exact (MK_COMB (@lem5745964) (@lem5745963 B op)). Qed.
Lemma lem5745966 {B : Type'} (op : type1400 B) (x : B) : (term382 B op x) = (term376 B op x).
Proof. exact (eq_refl (term382 B op x)). Qed.
Lemma lem5745967 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5745968 {B : Type'} (op : type1400 B) (x : B) : (term387 B op x) = (term388 B op x).
Proof. exact (MK_COMB (@lem5745967 B op) (@lem5745966 B op x)). Qed.
Lemma lem5745969 {B : Type'} (op : type1400 B) : (term389 B op) = (term390 B op).
Proof. exact (fun_ext (fun x : B => @lem5745968 B op x)). Qed.
Lemma lem5745970 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745971 {B : Type'} (op : type1400 B) : (term381 B op) = (term391 B op).
Proof. exact (MK_COMB (@lem5745970 B) (@lem5745969 B op)). Qed.
Lemma lem5745972 {B : Type'} (op : type1400 B) : ((term380 B op) = (term381 B op)) = ((term379 B op) = (term391 B op)).
Proof. exact (MK_COMB (@lem5745965 B op) (@lem5745971 B op)). Qed.
Lemma lem5745973 {B : Type'} (op : type1400 B) : (term379 B op) = (term391 B op).
Proof. exact (EQ_MP (@lem5745972 B op) (@lem5745957 B op)). Qed.
Lemma lem5745975 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5745976 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5745975 B P Q). Qed.
Lemma lem5745977 {B : Type'} (op : type1400 B) (x : B) : (term392 B op x) = (term393 B op x).
Proof. exact (@lem5745976 B (@monoidal B op) (term375 B op x)). Qed.
Lemma lem5745978 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term394 B op x y) = (term374 B y op x).
Proof. exact (eq_refl (term394 B op x y)). Qed.
Lemma lem5745979 {B : Type'} (op : type1400 B) (x : B) : (term395 B op x) = (term375 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745978 B y op x)). Qed.
Lemma lem5745980 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745981 {B : Type'} (op : type1400 B) (x : B) : (term396 B op x) = (term376 B op x).
Proof. exact (MK_COMB (@lem5745980 B) (@lem5745979 B op x)). Qed.
Lemma lem5745982 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5745983 {B : Type'} (op : type1400 B) (x : B) : (term392 B op x) = (term388 B op x).
Proof. exact (MK_COMB (@lem5745982 B op) (@lem5745981 B op x)). Qed.
Lemma lem5745984 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5745985 {B : Type'} (op : type1400 B) (x : B) : (term397 B op x) = (term398 B op x).
Proof. exact (MK_COMB (@lem5745984) (@lem5745983 B op x)). Qed.
Lemma lem5745986 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term394 B op x y) = (term374 B y op x).
Proof. exact (eq_refl (term394 B op x y)). Qed.
Lemma lem5745987 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5745988 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term399 B op x y) = (term400 B y op x).
Proof. exact (MK_COMB (@lem5745987 B op) (@lem5745986 B y op x)). Qed.
Lemma lem5745989 {B : Type'} (op : type1400 B) (x : B) : (term401 B op x) = (term402 B op x).
Proof. exact (fun_ext (fun y : B => @lem5745988 B y op x)). Qed.
Lemma lem5745990 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5745991 {B : Type'} (op : type1400 B) (x : B) : (term393 B op x) = (term403 B op x).
Proof. exact (MK_COMB (@lem5745990 B) (@lem5745989 B op x)). Qed.
Lemma lem5745992 {B : Type'} (op : type1400 B) (x : B) : ((term392 B op x) = (term393 B op x)) = ((term388 B op x) = (term403 B op x)).
Proof. exact (MK_COMB (@lem5745985 B op x) (@lem5745991 B op x)). Qed.
Lemma lem5745993 {B : Type'} (op : type1400 B) (x : B) : (term388 B op x) = (term403 B op x).
Proof. exact (EQ_MP (@lem5745992 B op x) (@lem5745977 B op x)). Qed.
Lemma lem5745995 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5745996 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5745995 B P Q). Qed.
Lemma lem5745997 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term404 B y op x) = (term405 B y op x).
Proof. exact (@lem5745996 B (@monoidal B op) (term373 B y op x)). Qed.
Lemma lem5745998 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term406 B y op x z) = (term371 B y z op x).
Proof. exact (eq_refl (term406 B y op x z)). Qed.
Lemma lem5745999 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term407 B y op x) = (term373 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5745998 B y z op x)). Qed.
Lemma lem5746000 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746001 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term408 B y op x) = (term374 B y op x).
Proof. exact (MK_COMB (@lem5746000 B) (@lem5745999 B y op x)). Qed.
Lemma lem5746002 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5746003 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term404 B y op x) = (term400 B y op x).
Proof. exact (MK_COMB (@lem5746002 B op) (@lem5746001 B y op x)). Qed.
Lemma lem5746004 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746005 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term409 B y op x) = (term410 B y op x).
Proof. exact (MK_COMB (@lem5746004) (@lem5746003 B y op x)). Qed.
Lemma lem5746006 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term406 B y op x z) = (term371 B y z op x).
Proof. exact (eq_refl (term406 B y op x z)). Qed.
Lemma lem5746007 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5746008 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term411 B y op x z) = (term412 B y z op x).
Proof. exact (MK_COMB (@lem5746007 B op) (@lem5746006 B y z op x)). Qed.
Lemma lem5746009 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term413 B y op x) = (term414 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5746008 B y z op x)). Qed.
Lemma lem5746010 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746011 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term405 B y op x) = (term415 B y op x).
Proof. exact (MK_COMB (@lem5746010 B) (@lem5746009 B y op x)). Qed.
Lemma lem5746012 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term404 B y op x) = (term405 B y op x)) = ((term400 B y op x) = (term415 B y op x)).
Proof. exact (MK_COMB (@lem5746005 B y op x) (@lem5746011 B y op x)). Qed.
Lemma lem5746013 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term400 B y op x) = (term415 B y op x).
Proof. exact (EQ_MP (@lem5746012 B y op x) (@lem5745997 B y op x)). Qed.
Lemma lem5746014 {B : Type'} (op : type1400 B) (x : B) : (term402 B op x) = (term416 B op x).
Proof. exact (fun_ext (fun y : B => @lem5746013 B y op x)). Qed.
Lemma lem5746015 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746016 {B : Type'} (op : type1400 B) (x : B) : (term403 B op x) = (term417 B op x).
Proof. exact (MK_COMB (@lem5746015 B) (@lem5746014 B op x)). Qed.
Lemma lem5746017 {B : Type'} (op : type1400 B) (x : B) : (term388 B op x) = (term417 B op x).
Proof. exact (TRANS (@lem5745993 B op x) (@lem5746016 B op x)). Qed.
Lemma lem5746018 {B : Type'} (op : type1400 B) : (term390 B op) = (term418 B op).
Proof. exact (fun_ext (fun x : B => @lem5746017 B op x)). Qed.
Lemma lem5746019 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746020 {B : Type'} (op : type1400 B) : (term391 B op) = (term419 B op).
Proof. exact (MK_COMB (@lem5746019 B) (@lem5746018 B op)). Qed.
Lemma lem5746021 {B : Type'} (op : type1400 B) : (term379 B op) = (term419 B op).
Proof. exact (TRANS (@lem5745973 B op) (@lem5746020 B op)). Qed.
Lemma lem5746022 {B : Type'} (op : type1400 B) : (term239 B op) = (term419 B op).
Proof. exact (TRANS (@lem5745953 B op) (@lem5746021 B op)). Qed.
Lemma lem5746023 {B : Type'} : (term250 B) = (term420 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746022 B op)). Qed.
Lemma lem5746024 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746025 {B : Type'} : (term261 B) = (term421 B).
Proof. exact (MK_COMB (@lem5746024 B) (@lem5746023 B)). Qed.
Lemma lem5746027 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5746028 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5746027 (type1400 B) B P). Qed.
Lemma lem5746029 {B : Type'} : (term426 B) = (term427 B).
Proof. exact (@lem5746028 B (term428 B)). Qed.
Lemma lem5746030 {B : Type'} (op : type1400 B) : (term429 B op) = (term418 B op).
Proof. exact (eq_refl (term429 B op)). Qed.
Lemma lem5746031 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5746032 {B : Type'} (op : type1400 B) (x : B) : (term430 B op x) = (term431 B op x).
Proof. exact (MK_COMB (@lem5746030 B op) (@lem5746031 B x)). Qed.
Lemma lem5746033 {B : Type'} (op : type1400 B) (x : B) : (term431 B op x) = (term417 B op x).
Proof. exact (eq_refl (term431 B op x)). Qed.
Lemma lem5746034 {B : Type'} (op : type1400 B) (x : B) : (term430 B op x) = (term417 B op x).
Proof. exact (TRANS (@lem5746032 B op x) (@lem5746033 B op x)). Qed.
Lemma lem5746035 {B : Type'} (op : type1400 B) : (term432 B op) = (term418 B op).
Proof. exact (fun_ext (fun x : B => @lem5746034 B op x)). Qed.
Lemma lem5746036 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746037 {B : Type'} (op : type1400 B) : (term433 B op) = (term419 B op).
Proof. exact (MK_COMB (@lem5746036 B) (@lem5746035 B op)). Qed.
Lemma lem5746038 {B : Type'} : (term434 B) = (term420 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746037 B op)). Qed.
Lemma lem5746039 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746040 {B : Type'} : (term426 B) = (term421 B).
Proof. exact (MK_COMB (@lem5746039 B) (@lem5746038 B)). Qed.
Lemma lem5746041 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746042 {B : Type'} : (term435 B) = (term436 B).
Proof. exact (MK_COMB (@lem5746041) (@lem5746040 B)). Qed.
Lemma lem5746043 {B : Type'} (op : type1400 B) : (term429 B op) = (term418 B op).
Proof. exact (eq_refl (term429 B op)). Qed.
Lemma lem5746044 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (x op).
Proof. exact (eq_refl (x op)). Qed.
Lemma lem5746045 {B : Type'} (x : type402 B) (op : type1400 B) : (term437 B x op) = (term438 B x op).
Proof. exact (MK_COMB (@lem5746043 B op) (@lem5746044 B x op)). Qed.
Lemma lem5746046 {B : Type'} (x : type402 B) (op : type1400 B) : (term438 B x op) = (term439 B x op).
Proof. exact (eq_refl (term438 B x op)). Qed.
Lemma lem5746047 {B : Type'} (x : type402 B) (op : type1400 B) : (term437 B x op) = (term439 B x op).
Proof. exact (TRANS (@lem5746045 B x op) (@lem5746046 B x op)). Qed.
Lemma lem5746048 {B : Type'} (x : type402 B) : (term440 B x) = (term441 B x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746047 B x op)). Qed.
Lemma lem5746049 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746050 {B : Type'} (x : type402 B) : (term442 B x) = (term443 B x).
Proof. exact (MK_COMB (@lem5746049 B) (@lem5746048 B x)). Qed.
Lemma lem5746051 {B : Type'} : (term444 B) = (term445 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5746050 B x)). Qed.
Lemma lem5746052 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746053 {B : Type'} : (term427 B) = (term446 B).
Proof. exact (MK_COMB (@lem5746052 B) (@lem5746051 B)). Qed.
Lemma lem5746054 {B : Type'} : ((term426 B) = (term427 B)) = ((term421 B) = (term446 B)).
Proof. exact (MK_COMB (@lem5746042 B) (@lem5746053 B)). Qed.
Lemma lem5746055 {B : Type'} : (term421 B) = (term446 B).
Proof. exact (EQ_MP (@lem5746054 B) (@lem5746029 B)). Qed.
Lemma lem5746057 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5746058 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5746057 (type1400 B) B P). Qed.
Lemma lem5746059 {B : Type'} (x : type402 B) : (term447 B x) = (term448 B x).
Proof. exact (@lem5746058 B (term449 B x)). Qed.
Lemma lem5746060 {B : Type'} (x : type402 B) (op : type1400 B) : (term450 B x op) = (term451 B x op).
Proof. exact (eq_refl (term450 B x op)). Qed.
Lemma lem5746061 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5746062 {B : Type'} (x : type402 B) (op : type1400 B) (y : B) : (term452 B x op y) = (term453 B x op y).
Proof. exact (MK_COMB (@lem5746060 B x op) (@lem5746061 B y)). Qed.
Lemma lem5746063 {B : Type'} (y : B) (x : type402 B) (op : type1400 B) : (term453 B x op y) = (term454 B y x op).
Proof. exact (eq_refl (term453 B x op y)). Qed.
Lemma lem5746064 {B : Type'} (y : B) (x : type402 B) (op : type1400 B) : (term452 B x op y) = (term454 B y x op).
Proof. exact (TRANS (@lem5746062 B x op y) (@lem5746063 B y x op)). Qed.
Lemma lem5746065 {B : Type'} (x : type402 B) (op : type1400 B) : (term455 B x op) = (term451 B x op).
Proof. exact (fun_ext (fun y : B => @lem5746064 B y x op)). Qed.
Lemma lem5746066 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746067 {B : Type'} (x : type402 B) (op : type1400 B) : (term456 B x op) = (term439 B x op).
Proof. exact (MK_COMB (@lem5746066 B) (@lem5746065 B x op)). Qed.
Lemma lem5746068 {B : Type'} (x : type402 B) : (term457 B x) = (term441 B x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746067 B x op)). Qed.
Lemma lem5746069 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746070 {B : Type'} (x : type402 B) : (term447 B x) = (term443 B x).
Proof. exact (MK_COMB (@lem5746069 B) (@lem5746068 B x)). Qed.
Lemma lem5746071 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746072 {B : Type'} (x : type402 B) : (term458 B x) = (term459 B x).
Proof. exact (MK_COMB (@lem5746071) (@lem5746070 B x)). Qed.
Lemma lem5746073 {B : Type'} (x : type402 B) (op : type1400 B) : (term450 B x op) = (term451 B x op).
Proof. exact (eq_refl (term450 B x op)). Qed.
Lemma lem5746074 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (y op).
Proof. exact (eq_refl (y op)). Qed.
Lemma lem5746075 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term460 B x y op) = (term461 B x y op).
Proof. exact (MK_COMB (@lem5746073 B x op) (@lem5746074 B y op)). Qed.
Lemma lem5746076 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term461 B x y op) = (term462 B y x op).
Proof. exact (eq_refl (term461 B x y op)). Qed.
Lemma lem5746077 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term460 B x y op) = (term462 B y x op).
Proof. exact (TRANS (@lem5746075 B x y op) (@lem5746076 B y x op)). Qed.
Lemma lem5746078 {B : Type'} (y : type402 B) (x : type402 B) : (term463 B x y) = (term464 B y x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746077 B y x op)). Qed.
Lemma lem5746079 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746080 {B : Type'} (y : type402 B) (x : type402 B) : (term465 B x y) = (term466 B y x).
Proof. exact (MK_COMB (@lem5746079 B) (@lem5746078 B y x)). Qed.
Lemma lem5746081 {B : Type'} (x : type402 B) : (term467 B x) = (term468 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5746080 B y x)). Qed.
Lemma lem5746082 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746083 {B : Type'} (x : type402 B) : (term448 B x) = (term469 B x).
Proof. exact (MK_COMB (@lem5746082 B) (@lem5746081 B x)). Qed.
Lemma lem5746084 {B : Type'} (x : type402 B) : ((term447 B x) = (term448 B x)) = ((term443 B x) = (term469 B x)).
Proof. exact (MK_COMB (@lem5746072 B x) (@lem5746083 B x)). Qed.
Lemma lem5746085 {B : Type'} (x : type402 B) : (term443 B x) = (term469 B x).
Proof. exact (EQ_MP (@lem5746084 B x) (@lem5746059 B x)). Qed.
Lemma lem5746087 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5746088 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5746087 (type1400 B) B P). Qed.
Lemma lem5746089 {B : Type'} (y : type402 B) (x : type402 B) : (term470 B y x) = (term471 B y x).
Proof. exact (@lem5746088 B (term472 B y x)). Qed.
Lemma lem5746090 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term473 B y x op) = (term474 B y x op).
Proof. exact (eq_refl (term473 B y x op)). Qed.
Lemma lem5746091 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5746092 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) (z : B) : (term475 B y x op z) = (term476 B y x op z).
Proof. exact (MK_COMB (@lem5746090 B y x op) (@lem5746091 B z)). Qed.
Lemma lem5746093 {B : Type'} (y : type402 B) (z : B) (x : type402 B) (op : type1400 B) : (term476 B y x op z) = (term477 B y z x op).
Proof. exact (eq_refl (term476 B y x op z)). Qed.
Lemma lem5746094 {B : Type'} (y : type402 B) (z : B) (x : type402 B) (op : type1400 B) : (term475 B y x op z) = (term477 B y z x op).
Proof. exact (TRANS (@lem5746092 B y x op z) (@lem5746093 B y z x op)). Qed.
Lemma lem5746095 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term478 B y x op) = (term474 B y x op).
Proof. exact (fun_ext (fun z : B => @lem5746094 B y z x op)). Qed.
Lemma lem5746096 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5746097 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term479 B y x op) = (term462 B y x op).
Proof. exact (MK_COMB (@lem5746096 B) (@lem5746095 B y x op)). Qed.
Lemma lem5746098 {B : Type'} (y : type402 B) (x : type402 B) : (term480 B y x) = (term464 B y x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746097 B y x op)). Qed.
Lemma lem5746099 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746100 {B : Type'} (y : type402 B) (x : type402 B) : (term470 B y x) = (term466 B y x).
Proof. exact (MK_COMB (@lem5746099 B) (@lem5746098 B y x)). Qed.
Lemma lem5746101 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746102 {B : Type'} (y : type402 B) (x : type402 B) : (term481 B y x) = (term482 B y x).
Proof. exact (MK_COMB (@lem5746101) (@lem5746100 B y x)). Qed.
Lemma lem5746103 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term473 B y x op) = (term474 B y x op).
Proof. exact (eq_refl (term473 B y x op)). Qed.
Lemma lem5746104 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (z op).
Proof. exact (eq_refl (z op)). Qed.
Lemma lem5746105 {B : Type'} (y : type402 B) (x : type402 B) (z : type402 B) (op : type1400 B) : (term483 B y x z op) = (term484 B y x z op).
Proof. exact (MK_COMB (@lem5746103 B y x op) (@lem5746104 B z op)). Qed.
Lemma lem5746106 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term484 B y x z op) = (term485 B y z x op).
Proof. exact (eq_refl (term484 B y x z op)). Qed.
Lemma lem5746107 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term483 B y x z op) = (term485 B y z x op).
Proof. exact (TRANS (@lem5746105 B y x z op) (@lem5746106 B y z x op)). Qed.
Lemma lem5746108 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term486 B y x z) = (term487 B y z x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5746107 B y z x op)). Qed.
Lemma lem5746109 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5746110 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term488 B y x z) = (term489 B y z x).
Proof. exact (MK_COMB (@lem5746109 B) (@lem5746108 B y z x)). Qed.
Lemma lem5746111 {B : Type'} (y : type402 B) (x : type402 B) : (term490 B y x) = (term491 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5746110 B y z x)). Qed.
Lemma lem5746112 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746113 {B : Type'} (y : type402 B) (x : type402 B) : (term471 B y x) = (term492 B y x).
Proof. exact (MK_COMB (@lem5746112 B) (@lem5746111 B y x)). Qed.
Lemma lem5746114 {B : Type'} (y : type402 B) (x : type402 B) : ((term470 B y x) = (term471 B y x)) = ((term466 B y x) = (term492 B y x)).
Proof. exact (MK_COMB (@lem5746102 B y x) (@lem5746113 B y x)). Qed.
Lemma lem5746115 {B : Type'} (y : type402 B) (x : type402 B) : (term466 B y x) = (term492 B y x).
Proof. exact (EQ_MP (@lem5746114 B y x) (@lem5746089 B y x)). Qed.
Lemma lem5746116 {B : Type'} (x : type402 B) : (term468 B x) = (term493 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5746115 B y x)). Qed.
Lemma lem5746117 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746118 {B : Type'} (x : type402 B) : (term469 B x) = (term494 B x).
Proof. exact (MK_COMB (@lem5746117 B) (@lem5746116 B x)). Qed.
Lemma lem5746119 {B : Type'} (x : type402 B) : (term443 B x) = (term494 B x).
Proof. exact (TRANS (@lem5746085 B x) (@lem5746118 B x)). Qed.
Lemma lem5746120 {B : Type'} : (term445 B) = (term495 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5746119 B x)). Qed.
Lemma lem5746121 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746122 {B : Type'} : (term446 B) = (term496 B).
Proof. exact (MK_COMB (@lem5746121 B) (@lem5746120 B)). Qed.
Lemma lem5746123 {B : Type'} : (term421 B) = (term496 B).
Proof. exact (TRANS (@lem5746055 B) (@lem5746122 B)). Qed.
Lemma lem5746124 {B : Type'} : (term261 B) = (term496 B).
Proof. exact (TRANS (@lem5746025 B) (@lem5746123 B)). Qed.
Lemma lem5746125 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746126 {B : Type'} : (term263 B) = (term497 B).
Proof. exact (MK_COMB (@lem5746125) (@lem5746124 B)). Qed.
Lemma lem5746127 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746128 {B : Type'} : (term267 B) = (term498 B).
Proof. exact (MK_COMB (@lem5746126 B) (@lem5746127 B)). Qed.
Lemma lem5746130 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5746131 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5746130 (type402 B) P Q). Qed.
Lemma lem5746132 {B : Type'} : (term503 B) = (term504 B).
Proof. exact (@lem5746131 B (term495 B) (term266 B)). Qed.
Lemma lem5746133 {B : Type'} (x : type402 B) : (term505 B x) = (term494 B x).
Proof. exact (eq_refl (term505 B x)). Qed.
Lemma lem5746134 {B : Type'} : (term506 B) = (term495 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5746133 B x)). Qed.
Lemma lem5746135 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746136 {B : Type'} : (term507 B) = (term496 B).
Proof. exact (MK_COMB (@lem5746135 B) (@lem5746134 B)). Qed.
Lemma lem5746137 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746138 {B : Type'} : (term508 B) = (term497 B).
Proof. exact (MK_COMB (@lem5746137) (@lem5746136 B)). Qed.
Lemma lem5746139 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746140 {B : Type'} : (term503 B) = (term498 B).
Proof. exact (MK_COMB (@lem5746138 B) (@lem5746139 B)). Qed.
Lemma lem5746141 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746142 {B : Type'} : (term509 B) = (term510 B).
Proof. exact (MK_COMB (@lem5746141) (@lem5746140 B)). Qed.
Lemma lem5746143 {B : Type'} (x : type402 B) : (term505 B x) = (term494 B x).
Proof. exact (eq_refl (term505 B x)). Qed.
Lemma lem5746144 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746145 {B : Type'} (x : type402 B) : (term511 B x) = (term512 B x).
Proof. exact (MK_COMB (@lem5746144) (@lem5746143 B x)). Qed.
Lemma lem5746146 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746147 {B : Type'} (x : type402 B) : (term513 B x) = (term514 B x).
Proof. exact (MK_COMB (@lem5746145 B x) (@lem5746146 B)). Qed.
Lemma lem5746148 {B : Type'} : (term515 B) = (term516 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5746147 B x)). Qed.
Lemma lem5746149 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746150 {B : Type'} : (term504 B) = (term517 B).
Proof. exact (MK_COMB (@lem5746149 B) (@lem5746148 B)). Qed.
Lemma lem5746151 {B : Type'} : ((term503 B) = (term504 B)) = ((term498 B) = (term517 B)).
Proof. exact (MK_COMB (@lem5746142 B) (@lem5746150 B)). Qed.
Lemma lem5746152 {B : Type'} : (term498 B) = (term517 B).
Proof. exact (EQ_MP (@lem5746151 B) (@lem5746132 B)). Qed.
Lemma lem5746154 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5746155 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5746154 (type402 B) P Q). Qed.
Lemma lem5746156 {B : Type'} (x : type402 B) : (term518 B x) = (term519 B x).
Proof. exact (@lem5746155 B (term493 B x) (term266 B)). Qed.
Lemma lem5746157 {B : Type'} (y : type402 B) (x : type402 B) : (term520 B x y) = (term492 B y x).
Proof. exact (eq_refl (term520 B x y)). Qed.
Lemma lem5746158 {B : Type'} (x : type402 B) : (term521 B x) = (term493 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5746157 B y x)). Qed.
Lemma lem5746159 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746160 {B : Type'} (x : type402 B) : (term522 B x) = (term494 B x).
Proof. exact (MK_COMB (@lem5746159 B) (@lem5746158 B x)). Qed.
Lemma lem5746161 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746162 {B : Type'} (x : type402 B) : (term523 B x) = (term512 B x).
Proof. exact (MK_COMB (@lem5746161) (@lem5746160 B x)). Qed.
Lemma lem5746163 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746164 {B : Type'} (x : type402 B) : (term518 B x) = (term514 B x).
Proof. exact (MK_COMB (@lem5746162 B x) (@lem5746163 B)). Qed.
Lemma lem5746165 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746166 {B : Type'} (x : type402 B) : (term524 B x) = (term525 B x).
Proof. exact (MK_COMB (@lem5746165) (@lem5746164 B x)). Qed.
Lemma lem5746167 {B : Type'} (y : type402 B) (x : type402 B) : (term520 B x y) = (term492 B y x).
Proof. exact (eq_refl (term520 B x y)). Qed.
Lemma lem5746168 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746169 {B : Type'} (y : type402 B) (x : type402 B) : (term526 B x y) = (term527 B y x).
Proof. exact (MK_COMB (@lem5746168) (@lem5746167 B y x)). Qed.
Lemma lem5746170 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746171 {B : Type'} (y : type402 B) (x : type402 B) : (term528 B x y) = (term529 B y x).
Proof. exact (MK_COMB (@lem5746169 B y x) (@lem5746170 B)). Qed.
Lemma lem5746172 {B : Type'} (x : type402 B) : (term530 B x) = (term531 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5746171 B y x)). Qed.
Lemma lem5746173 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746174 {B : Type'} (x : type402 B) : (term519 B x) = (term532 B x).
Proof. exact (MK_COMB (@lem5746173 B) (@lem5746172 B x)). Qed.
Lemma lem5746175 {B : Type'} (x : type402 B) : ((term518 B x) = (term519 B x)) = ((term514 B x) = (term532 B x)).
Proof. exact (MK_COMB (@lem5746166 B x) (@lem5746174 B x)). Qed.
Lemma lem5746176 {B : Type'} (x : type402 B) : (term514 B x) = (term532 B x).
Proof. exact (EQ_MP (@lem5746175 B x) (@lem5746156 B x)). Qed.
Lemma lem5746178 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5746179 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5746178 (type402 B) P Q). Qed.
Lemma lem5746180 {B : Type'} (y : type402 B) (x : type402 B) : (term533 B y x) = (term534 B y x).
Proof. exact (@lem5746179 B (term491 B y x) (term266 B)). Qed.
Lemma lem5746181 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term535 B y x z) = (term489 B y z x).
Proof. exact (eq_refl (term535 B y x z)). Qed.
Lemma lem5746182 {B : Type'} (y : type402 B) (x : type402 B) : (term536 B y x) = (term491 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5746181 B y z x)). Qed.
Lemma lem5746183 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746184 {B : Type'} (y : type402 B) (x : type402 B) : (term537 B y x) = (term492 B y x).
Proof. exact (MK_COMB (@lem5746183 B) (@lem5746182 B y x)). Qed.
Lemma lem5746185 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746186 {B : Type'} (y : type402 B) (x : type402 B) : (term538 B y x) = (term527 B y x).
Proof. exact (MK_COMB (@lem5746185) (@lem5746184 B y x)). Qed.
Lemma lem5746187 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746188 {B : Type'} (y : type402 B) (x : type402 B) : (term533 B y x) = (term529 B y x).
Proof. exact (MK_COMB (@lem5746186 B y x) (@lem5746187 B)). Qed.
Lemma lem5746189 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5746190 {B : Type'} (y : type402 B) (x : type402 B) : (term539 B y x) = (term540 B y x).
Proof. exact (MK_COMB (@lem5746189) (@lem5746188 B y x)). Qed.
Lemma lem5746191 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term535 B y x z) = (term489 B y z x).
Proof. exact (eq_refl (term535 B y x z)). Qed.
Lemma lem5746192 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5746193 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term541 B y x z) = (term542 B y z x).
Proof. exact (MK_COMB (@lem5746192) (@lem5746191 B y z x)). Qed.
Lemma lem5746194 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5746195 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term543 B y x z) = (term544 B y z x).
Proof. exact (MK_COMB (@lem5746193 B y z x) (@lem5746194 B)). Qed.
Lemma lem5746196 {B : Type'} (y : type402 B) (x : type402 B) : (term545 B y x) = (term546 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5746195 B y z x)). Qed.
Lemma lem5746197 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746198 {B : Type'} (y : type402 B) (x : type402 B) : (term534 B y x) = (term547 B y x).
Proof. exact (MK_COMB (@lem5746197 B) (@lem5746196 B y x)). Qed.
Lemma lem5746199 {B : Type'} (y : type402 B) (x : type402 B) : ((term533 B y x) = (term534 B y x)) = ((term529 B y x) = (term547 B y x)).
Proof. exact (MK_COMB (@lem5746190 B y x) (@lem5746198 B y x)). Qed.
Lemma lem5746200 {B : Type'} (y : type402 B) (x : type402 B) : (term529 B y x) = (term547 B y x).
Proof. exact (EQ_MP (@lem5746199 B y x) (@lem5746180 B y x)). Qed.
Lemma lem5746201 {B : Type'} (x : type402 B) : (term531 B x) = (term548 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5746200 B y x)). Qed.
Lemma lem5746202 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746203 {B : Type'} (x : type402 B) : (term532 B x) = (term549 B x).
Proof. exact (MK_COMB (@lem5746202 B) (@lem5746201 B x)). Qed.
Lemma lem5746204 {B : Type'} (x : type402 B) : (term514 B x) = (term549 B x).
Proof. exact (TRANS (@lem5746176 B x) (@lem5746203 B x)). Qed.
Lemma lem5746205 {B : Type'} : (term516 B) = (term550 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5746204 B x)). Qed.
Lemma lem5746206 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5746207 {B : Type'} : (term517 B) = (term551 B).
Proof. exact (MK_COMB (@lem5746206 B) (@lem5746205 B)). Qed.
Lemma lem5746208 {B : Type'} : (term498 B) = (term551 B).
Proof. exact (TRANS (@lem5746152 B) (@lem5746207 B)). Qed.
Lemma lem5746209 {B : Type'} : (term267 B) = (term551 B).
Proof. exact (TRANS (@lem5746128 B) (@lem5746208 B)). Qed.
Lemma lem5746210 {B : Type'} : (term245 B) = (term551 B).
Proof. exact (TRANS (@lem5745659 B) (@lem5746209 B)). Qed.
Lemma lem5746211 {B : Type'} : (term57 B) = (term551 B).
Proof. exact (TRANS (@lem5745632 B) (@lem5746210 B)). Qed.
Lemma lem5746212 {B : Type'} (h1 : term57 B) : term551 B.
Proof. exact (EQ_MP (@lem5746211 B) (@lem5745122 B h1)). Qed.
Lemma lem5746213 {B : Type'} (x' : type402 B) (h1 : term549 B x') : term549 B x'.
Proof. exact (h1). Qed.
Lemma lem5746214 {B : Type'} (y : type402 B) (x' : type402 B) (h1 : term547 B y x') : term547 B y x'.
Proof. exact (h1). Qed.
Lemma lem5746836 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5746837 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5746838 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5746845 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746846 {A B : Type'} (f : type749 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5746845 (type1400 B) (type546 A B) f x). Qed.
Lemma lem5746847 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (_72351 op) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op).
Proof. exact (@lem5746846 A B _72351 op). Qed.
Lemma lem5746848 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5746849 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (_72351 op f) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op f).
Proof. exact (MK_COMB (@lem5746847 A B _72351 op) (@lem5746848 A B f)). Qed.
Lemma lem5746851 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746852 {A B : Type'} (f : type546 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5746851 (A -> B) (type1411 A B) f x). Qed.
Lemma lem5746853 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op f) = (term1371 A B _72351 op f).
Proof. exact (@lem5746852 A B (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op) f). Qed.
Lemma lem5746855 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (_72351 op f) = (term1371 A B _72351 op f).
Proof. exact (TRANS (@lem5746849 A B _72351 op f) (@lem5746853 A B _72351 op f)). Qed.
Lemma lem5746864 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746865 {A B : Type'} (f : type748 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5746864 (type1400 B) (type527 A B) f x). Qed.
Lemma lem5746866 {A B : Type'} (op : type1400 B) : (@support A B op) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op).
Proof. exact (@lem5746865 A B (@support A B) op). Qed.
Lemma lem5746867 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5746868 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f).
Proof. exact (MK_COMB (@lem5746866 A B op) (@lem5746867 A B f)). Qed.
Lemma lem5746870 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746871 {A B : Type'} (f : type527 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5746870 (A -> B) (type672 A) f x). Qed.
Lemma lem5746872 {A B : Type'} (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f) = (term1372 A B op f).
Proof. exact (@lem5746871 A B (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op) f). Qed.
Lemma lem5746873 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (term1372 A B op f).
Proof. exact (TRANS (@lem5746868 A B op f) (@lem5746872 A B op f)). Qed.
Lemma lem5746874 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5746875 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1373 A B op f s).
Proof. exact (MK_COMB (@lem5746873 A B op f) (@lem5746874 A s)). Qed.
Lemma lem5746877 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746878 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5746877 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5746879 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1373 A B op f s) = (term1374 A B op f s).
Proof. exact (@lem5746878 A (term1372 A B op f) s). Qed.
Lemma lem5746881 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1374 A B op f s).
Proof. exact (TRANS (@lem5746875 A B op f s) (@lem5746879 A B op f s)). Qed.
Lemma lem5746886 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746887 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5746886 (type1400 B) B f x). Qed.
Lemma lem5746889 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5746887 B (@neutral B) op). Qed.
Lemma lem5746890 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1188 A B _72351 op f) = (term1375 A B _72351 op f).
Proof. exact (MK_COMB (@lem5746838 A B) (@lem5746855 A B _72351 op f)). Qed.
Lemma lem5746891 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1189 A B _72351 op f s) = (term1376 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5746890 A B _72351 op f) (@lem5746881 A B op f s)). Qed.
Lemma lem5746892 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72351 f s op) = (term1377 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5746891 A B _72351 op f s) (@lem5746889 B op)). Qed.
Lemma lem5746894 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746895 {A B : Type'} (f : type429 A B) (x : type1411 A B) : (f x) = (@I ((A -> B -> B) -> (A -> Prop) -> B -> B) f x).
Proof. exact (@lem5746894 (type1411 A B) (type677 A B) f x). Qed.
Lemma lem5746896 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1375 A B _72351 op f) = (term1378 A B _72351 op f).
Proof. exact (@lem5746895 A B (@ITSET B A) (term1371 A B _72351 op f)). Qed.
Lemma lem5746897 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1374 A B op f s) = (term1374 A B op f s).
Proof. exact (eq_refl (term1374 A B op f s)). Qed.
Lemma lem5746898 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72351 op f s) = (term1379 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5746896 A B _72351 op f) (@lem5746897 A B op f s)). Qed.
Lemma lem5746900 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746901 {A B : Type'} (f : type677 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> B) f x).
Proof. exact (@lem5746900 (A -> Prop) (B -> B) f x). Qed.
Lemma lem5746902 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1379 A B _72351 op f s) = (term1380 A B _72351 op f s).
Proof. exact (@lem5746901 A B (term1378 A B _72351 op f) (term1374 A B op f s)). Qed.
Lemma lem5746903 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72351 op f s) = (term1380 A B _72351 op f s).
Proof. exact (TRANS (@lem5746898 A B _72351 op f s) (@lem5746902 A B _72351 op f s)). Qed.
Lemma lem5746904 {B : Type'} (op : type1400 B) : (@I ((B -> B -> B) -> B) (@neutral B) op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5746905 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72351 f s op) = (term1381 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5746903 A B _72351 op f s) (@lem5746904 B op)). Qed.
Lemma lem5746907 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746908 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5746907 B B f x). Qed.
Lemma lem5746909 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1381 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (@lem5746908 B (term1380 A B _72351 op f s) (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5746910 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (TRANS (@lem5746905 A B _72351 f s op) (@lem5746909 A B _72351 f s op)). Qed.
Lemma lem5746911 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (TRANS (@lem5746892 A B _72351 f s op) (@lem5746910 A B _72351 f s op)). Qed.
Lemma lem5746912 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5746919 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746920 {A B : Type'} (f : type749 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5746919 (type1400 B) (type546 A B) f x). Qed.
Lemma lem5746921 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : (_72351 op) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op).
Proof. exact (@lem5746920 A B _72351 op). Qed.
Lemma lem5746922 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5746923 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (_72351 op f) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op f).
Proof. exact (MK_COMB (@lem5746921 A B _72351 op) (@lem5746922 A B f)). Qed.
Lemma lem5746925 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746926 {A B : Type'} (f : type546 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5746925 (A -> B) (type1411 A B) f x). Qed.
Lemma lem5746927 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op f) = (term1371 A B _72351 op f).
Proof. exact (@lem5746926 A B (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72351 op) f). Qed.
Lemma lem5746929 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (_72351 op f) = (term1371 A B _72351 op f).
Proof. exact (TRANS (@lem5746923 A B _72351 op f) (@lem5746927 A B _72351 op f)). Qed.
Lemma lem5746938 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746939 {A B : Type'} (f : type748 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5746938 (type1400 B) (type527 A B) f x). Qed.
Lemma lem5746940 {A B : Type'} (op : type1400 B) : (@support A B op) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op).
Proof. exact (@lem5746939 A B (@support A B) op). Qed.
Lemma lem5746941 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5746942 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f).
Proof. exact (MK_COMB (@lem5746940 A B op) (@lem5746941 A B f)). Qed.
Lemma lem5746944 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746945 {A B : Type'} (f : type527 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5746944 (A -> B) (type672 A) f x). Qed.
Lemma lem5746946 {A B : Type'} (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f) = (term1372 A B op f).
Proof. exact (@lem5746945 A B (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op) f). Qed.
Lemma lem5746947 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (term1372 A B op f).
Proof. exact (TRANS (@lem5746942 A B op f) (@lem5746946 A B op f)). Qed.
Lemma lem5746948 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5746949 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1373 A B op f s).
Proof. exact (MK_COMB (@lem5746947 A B op f) (@lem5746948 A s)). Qed.
Lemma lem5746951 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746952 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5746951 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5746953 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1373 A B op f s) = (term1374 A B op f s).
Proof. exact (@lem5746952 A (term1372 A B op f) s). Qed.
Lemma lem5746955 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1374 A B op f s).
Proof. exact (TRANS (@lem5746949 A B op f s) (@lem5746953 A B op f s)). Qed.
Lemma lem5746960 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746961 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5746960 (type1400 B) B f x). Qed.
Lemma lem5746963 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5746961 B (@neutral B) op). Qed.
Lemma lem5746964 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1188 A B _72351 op f) = (term1375 A B _72351 op f).
Proof. exact (MK_COMB (@lem5746912 A B) (@lem5746929 A B _72351 op f)). Qed.
Lemma lem5746965 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1189 A B _72351 op f s) = (term1376 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5746964 A B _72351 op f) (@lem5746955 A B op f s)). Qed.
Lemma lem5746966 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72351 f s op) = (term1377 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5746965 A B _72351 op f s) (@lem5746963 B op)). Qed.
Lemma lem5746968 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746969 {A B : Type'} (f : type429 A B) (x : type1411 A B) : (f x) = (@I ((A -> B -> B) -> (A -> Prop) -> B -> B) f x).
Proof. exact (@lem5746968 (type1411 A B) (type677 A B) f x). Qed.
Lemma lem5746970 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) : (term1375 A B _72351 op f) = (term1378 A B _72351 op f).
Proof. exact (@lem5746969 A B (@ITSET B A) (term1371 A B _72351 op f)). Qed.
Lemma lem5746971 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1374 A B op f s) = (term1374 A B op f s).
Proof. exact (eq_refl (term1374 A B op f s)). Qed.
Lemma lem5746972 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72351 op f s) = (term1379 A B _72351 op f s).
Proof. exact (MK_COMB (@lem5746970 A B _72351 op f) (@lem5746971 A B op f s)). Qed.
Lemma lem5746974 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746975 {A B : Type'} (f : type677 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> B) f x).
Proof. exact (@lem5746974 (A -> Prop) (B -> B) f x). Qed.
Lemma lem5746976 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1379 A B _72351 op f s) = (term1380 A B _72351 op f s).
Proof. exact (@lem5746975 A B (term1378 A B _72351 op f) (term1374 A B op f s)). Qed.
Lemma lem5746977 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72351 op f s) = (term1380 A B _72351 op f s).
Proof. exact (TRANS (@lem5746972 A B _72351 op f s) (@lem5746976 A B _72351 op f s)). Qed.
Lemma lem5746978 {B : Type'} (op : type1400 B) : (@I ((B -> B -> B) -> B) (@neutral B) op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5746979 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72351 f s op) = (term1381 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5746977 A B _72351 op f s) (@lem5746978 B op)). Qed.
Lemma lem5746981 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5746982 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5746981 B B f x). Qed.
Lemma lem5746983 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1381 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (@lem5746982 B (term1380 A B _72351 op f s) (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5746984 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (TRANS (@lem5746979 A B _72351 f s op) (@lem5746983 A B _72351 f s op)). Qed.
Lemma lem5746985 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (TRANS (@lem5746966 A B _72351 f s op) (@lem5746984 A B _72351 f s op)). Qed.
Lemma lem5746986 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1191 A B _72351 f s op) = (term1383 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5746837 B) (@lem5746911 A B _72351 f s op)). Qed.
Lemma lem5746987 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term1190 A B _72351 f s op) = (term1190 A B _72351 f s op)) = ((term1382 A B _72351 f s op) = (term1382 A B _72351 f s op)).
Proof. exact (MK_COMB (@lem5746986 A B _72351 f s op) (@lem5746985 A B _72351 f s op)). Qed.
Lemma lem5746988 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1192 A B _72351 f s op) = (term1384 A B _72351 f s op).
Proof. exact (MK_COMB (@lem5746836) (@lem5746987 A B _72351 f s op)). Qed.
Lemma lem5747888 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : term1384 A B _72351 f s op.
Proof. exact (EQ_MP (@lem5746988 A B _72351 f s op) (@lem5745516 A B _72351 f s op h1)). Qed.
Lemma lem5748228 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem5748229 {B : Type'} (x : B) : x = x.
Proof. exact (@lem5748228 B x). Qed.
Lemma lem5748230 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1382 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (@lem5748229 B (term1382 A B _72351 f s op)). Qed.
Lemma lem5748231 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1385 A B _72351 f s op.
Proof. exact (fun h0 : term1384 A B _72351 f s op => @lem5748230 A B _72351 f s op). Qed.
Lemma lem5748233 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5748234 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1385 A B _72351 f s op) = ((term1382 A B _72351 f s op) = (term1382 A B _72351 f s op)).
Proof. exact (@lem5748233 ((term1382 A B _72351 f s op) = (term1382 A B _72351 f s op))). Qed.
Lemma lem5748235 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1382 A B _72351 f s op) = (term1382 A B _72351 f s op).
Proof. exact (EQ_MP (@lem5748234 A B _72351 f s op) (@lem5748231 A B _72351 f s op)). Qed.
Lemma lem5748238 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5748240 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1384 A B _72351 f s op) = (term1386 A B _72351 f s op).
Proof. exact (@lem5748238 ((term1382 A B _72351 f s op) = (term1382 A B _72351 f s op))). Qed.
Lemma lem5748243 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : term1386 A B _72351 f s op.
Proof. exact (EQ_MP (@lem5748240 A B _72351 f s op) (@lem5747888 A B _72351 f s op h1)). Qed.
Lemma lem5748246 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : False.
Proof. exact (@lem5748243 A B _72351 f s op h1 (@lem5748235 A B _72351 f s op)). Qed.
Lemma lem5748247 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : term911.
Proof. exact (fun h0 : ~ False => @lem5748246 A B _72351 f s op h1). Qed.
Lemma lem5748249 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5748250 : term911 = False.
Proof. exact (@lem5748249 False). Qed.
Lemma lem5748251 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : False.
Proof. exact (EQ_MP (@lem5748250) (@lem5748247 A B _72351 f s op h1)). Qed.
Lemma lem5748252 {A B : Type'} (y : type402 B) (x' : type402 B) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term547 B y x') (h2 : term1192 A B _72351 f s op) : False.
Proof. exact (ex_elim (@lem5746214 B y x' h1) (fun z : type402 B => fun h0 : term546 B y x' z => @lem5748251 A B _72351 f s op h2)). Qed.
Lemma lem5748253 {A B : Type'} (x' : type402 B) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term549 B x') (h2 : term1192 A B _72351 f s op) : False.
Proof. exact (ex_elim (@lem5746213 B x' h1) (fun y : type402 B => fun h0 : term548 B x' y => @lem5748252 A B y x' _72351 f s op h0 h2)). Qed.
Lemma lem5748254 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : term1192 A B _72351 f s op) : False.
Proof. exact (ex_elim (@lem5746212 B h1) (fun x' : type402 B => fun h0 : term550 B x' => @lem5748253 A B x' _72351 f s op h0 h2)). Qed.
Lemma lem5748255 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : term1192 A B _72351 f s op) : (term1192 A B _72351 f s op) = False.
Proof. exact (prop_ext (fun h3 : term1192 A B _72351 f s op => @lem5748254 A B _72351 f s op h1 h2) (fun h3 : False => @lem5745516 A B _72351 f s op h2)). Qed.
Lemma lem5748256 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : term1192 A B _72351 f s op) : False.
Proof. exact (EQ_MP (@lem5748255 A B _72351 f s op h1 h2) (@lem5745516 A B _72351 f s op h2)). Qed.
Lemma lem5748257 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : term62 B.
Proof. exact (fun h0 : term57 B => @lem5748256 A B _72351 f s op h0 h1). Qed.
Lemma lem5748258 {B : Type'} : (term62 B) = (term63 B).
Proof. exact (@lem69 (term57 B)). Qed.
Lemma lem5748259 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1192 A B _72351 f s op) : term63 B.
Proof. exact (EQ_MP (@lem5748258 B) (@lem5748257 A B _72351 f s op h1)). Qed.
Lemma lem5748260 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1194 A B _72351 f s op.
Proof. exact (fun h0 : term1192 A B _72351 f s op => @lem5748259 A B _72351 f s op h0). Qed.
Lemma lem5748261 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1195 A B x _72351 f s op.
Proof. exact (fun h0 : @IN A x s => @lem5748260 A B _72351 f s op). Qed.
Lemma lem5748262 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1196 A B x _72351 f s op.
Proof. exact (fun h0 : (f x) = (@neutral B op) => @lem5748261 A B x _72351 f s op). Qed.
Lemma lem5748263 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1197 A B x _72351 f s op.
Proof. exact (fun h0 : term916 A B op f s => @lem5748262 A B x _72351 f s op). Qed.
Lemma lem5748264 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1354 A B x _72351 f s op.
Proof. exact (fun h0 : term1352 A B _72351 f op => @lem5748263 A B x _72351 f s op). Qed.
Lemma lem5748265 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1355 A B x _72351 f s op.
Proof. exact (fun h0 : (term1216 A B _72351 f op) = (@neutral B op) => @lem5748264 A B x _72351 f s op). Qed.
Lemma lem5748266 {A B : Type'} (x : A) (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1356 A B x _72351 f s op.
Proof. exact (fun h0 : @monoidal B op => @lem5748265 A B x _72351 f s op). Qed.
Lemma lem5748271 {A B : Type'} (_72351 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1358 A B _72351 f s op.
Proof. exact (fun x : A => @lem5748266 A B x _72351 f s op). Qed.
Lemma lem5748276 {A B : Type'} (_72351 : type749 A B) (s : A -> Prop) (op : type1400 B) : term1360 A B _72351 s op.
Proof. exact (fun f : A -> B => @lem5748271 A B _72351 f s op). Qed.
Lemma lem5748281 {A B : Type'} (_72351 : type749 A B) (op : type1400 B) : term1362 A B _72351 op.
Proof. exact (fun s : A -> Prop => @lem5748276 A B _72351 s op). Qed.
Lemma lem5748286 {A B : Type'} (_72351 : type749 A B) : term1364 A B _72351.
Proof. exact (fun op : type1400 B => @lem5748281 A B _72351 op). Qed.
Lemma lem5748287 {A B : Type'} (_72352 : type749 A B) (_72351 : type749 A B) : term1365 A B _72352 _72351.
Proof. exact (fun h0 : term1294 A B _72351 _72352 => @lem5748286 A B _72351). Qed.
Lemma lem5748292 {A B : Type'} (_72352 : type749 A B) : term1367 A B _72352.
Proof. exact (fun _72351 : type749 A B => @lem5748287 A B _72352 _72351). Qed.
Lemma lem5748293 {A B : Type'} (_72352 : type749 A B) : term1368 A B _72352.
Proof. exact (fun h0 : term1332 A B _72352 => @lem5748292 A B _72352). Qed.
Lemma lem5748298 {A B : Type'} : term1370 A B.
Proof. exact (fun _72352 : type749 A B => @lem5748293 A B _72352). Qed.
Lemma lem5748299 {A B : Type'} : term1153 A B.
Proof. exact (EQ_MP (@lem5745112 A B) (@lem5748298 A B)). Qed.
Lemma lem5748300 {A B : Type'} (op : type1400 B) : term1387 A B op.
Proof. exact (@lem5748299 A B op). Qed.
Lemma lem5748301 {A B : Type'} (op : type1400 B) : (term1387 A B op) = (term1149 A B op).
Proof. exact (eq_refl (term1387 A B op)). Qed.
Lemma lem5748302 {A B : Type'} (op : type1400 B) : term1149 A B op.
Proof. exact (EQ_MP (@lem5748301 A B op) (@lem5748300 A B op)). Qed.
Lemma lem5748303 {A B : Type'} (op : type1400 B) (s : A -> Prop) : term1388 A B op s.
Proof. exact (@lem5748302 A B op s). Qed.
Lemma lem5748304 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1388 A B op s) = (term1145 A B s op).
Proof. exact (eq_refl (term1388 A B op s)). Qed.
Lemma lem5748305 {A B : Type'} (s : A -> Prop) (op : type1400 B) : term1145 A B s op.
Proof. exact (EQ_MP (@lem5748304 A B s op) (@lem5748303 A B op s)). Qed.
Lemma lem5748306 {A B : Type'} (s : A -> Prop) (op : type1400 B) (f : A -> B) : term1389 A B s op f.
Proof. exact (@lem5748305 A B s op f). Qed.
Lemma lem5748307 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1389 A B s op f) = (term1141 A B f s op).
Proof. exact (eq_refl (term1389 A B s op f)). Qed.
Lemma lem5748308 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1141 A B f s op.
Proof. exact (EQ_MP (@lem5748307 A B f s op) (@lem5748306 A B s op f)). Qed.
Lemma lem5748309 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (x : A) : term1390 A B f s op x.
Proof. exact (@lem5748308 A B f s op x). Qed.
Lemma lem5748310 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1390 A B f s op x) = (term1117 A B x f s op).
Proof. exact (eq_refl (term1390 A B f s op x)). Qed.
Lemma lem5748311 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1117 A B x f s op.
Proof. exact (EQ_MP (@lem5748310 A B x f s op) (@lem5748309 A B f s op x)). Qed.
Lemma lem5748313 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1117 A B x f s op.
Proof. exact (@lem5743734 A B x f s op (@lem5748311 A B x f s op)). Qed.
Lemma lem5748314 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1136 A B x f s op.
Proof. exact (@lem5748313 A B x f s op (@lem5738169 B op h1)). Qed.
Lemma lem5748315 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) (h2 : (term915 A B f op) = (@neutral B op)) : term1133 A B x f s op.
Proof. exact (@lem5748314 A B x f s op h1 (@lem5742560 A B f op h2)). Qed.
Lemma lem5748316 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term1130 A B x f s op.
Proof. exact (@lem5748315 A B x s f op h2 h3 (@lem5742559 A B f op h1)). Qed.
Lemma lem5748317 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : term1127 A B x f s op.
Proof. exact (@lem5748316 A B x s f op h1 h3 h4 (@lem5742561 A B op f s h2)). Qed.
Lemma lem5748318 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : term1124 A B x f s op.
Proof. exact (@lem5748317 A B x s f op h1 h2 h3 h5 (@lem5738132 A B f x op h4)). Qed.
Lemma lem5748319 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) (h6 : @IN A x s) : term1122 A B f s op.
Proof. exact (@lem5748318 A B s x f op h1 h2 h3 h4 h5 (@lem5743677 A x s h6)). Qed.
Lemma lem5748320 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1116 A B f s op) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) (h7 : @IN A x s) : term62 B.
Proof. exact (@lem5748319 A B f op x s h1 h2 h3 h5 h6 h7 (@lem5743715 A B f s op h4)). Qed.
Lemma lem5748321 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1116 A B f s op) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) (h7 : @IN A x s) : False.
Proof. exact (@lem5748320 A B f op x s h1 h2 h3 h4 h5 h6 h7 (@lem5743716 B)). Qed.
Lemma lem5748322 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1116 A B f s op) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) (h7 : @IN A x s) : (term1116 A B f s op) = False.
Proof. exact (prop_ext (fun h8 : term1116 A B f s op => @lem5748321 A B f op x s h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem5743715 A B f s op h4)). Qed.
Lemma lem5748323 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1116 A B f s op) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) (h7 : @IN A x s) : False.
Proof. exact (EQ_MP (@lem5748322 A B f op x s h1 h2 h3 h4 h5 h6 h7) (@lem5743715 A B f s op h4)). Qed.
Lemma lem5748324 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) (h6 : @IN A x s) : term1115 A B f s op.
Proof. exact (fun h0 : term1116 A B f s op => @lem5748323 A B f op x s h1 h2 h3 h0 h4 h5 h6). Qed.
Lemma lem5748327 (p : Prop) : p = (term54 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem5748328 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term963 A B f s op) = (term1032 A B f s op)) = (term1391 A B f s op).
Proof. exact (@lem5748327 ((term963 A B f s op) = (term1032 A B f s op))). Qed.
Lemma lem5748329 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1391 A B f s op) = ((term963 A B f s op) = (term1032 A B f s op)).
Proof. exact (SYM (@lem5748328 A B f s op)). Qed.
Lemma lem5748330 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1392 A B f s op) : term1392 A B f s op.
Proof. exact (h1). Qed.
Lemma lem5748331 {B : Type'} : term57 B.
Proof. exact (@lem5712802 B). Qed.
Lemma lem5748336 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1393 A B x f s op) : term1393 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5748337 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1394 A B x f s op.
Proof. exact (fun h0 : term1393 A B x f s op => @lem5748336 A B x f s op h0). Qed.
Lemma lem5748338 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1394 A B x f s op) : term1394 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5748339 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1393 A B x f s op) : term1393 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5748340 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1393 A B x f s op) (h2 : term1394 A B x f s op) : term1393 A B x f s op.
Proof. exact (@lem5748338 A B x f s op h2 (@lem5748339 A B x f s op h1)). Qed.
Lemma lem5748341 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1393 A B x f s op) : term1395 A B x f s op.
Proof. exact (fun h0 : term1394 A B x f s op => @lem5748340 A B x f s op h1 h0). Qed.
Lemma lem5748342 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1394 A B x f s op) : term1394 A B x f s op.
Proof. exact (h1). Qed.
Lemma lem5748343 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1393 A B x f s op) (h2 : term1394 A B x f s op) : term1393 A B x f s op.
Proof. exact (@lem5748341 A B x f s op h1 (@lem5748342 A B x f s op h2)). Qed.
Lemma lem5748344 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1394 A B x f s op) : term1394 A B x f s op.
Proof. exact (fun h0 : term1393 A B x f s op => @lem5748343 A B x f s op h0 h1). Qed.
Lemma lem5748345 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1396 A B x f s op.
Proof. exact (fun h0 : term1394 A B x f s op => @lem5748344 A B x f s op h0). Qed.
Lemma lem5748348 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1394 A B x f s op.
Proof. exact (@lem5748345 A B x f s op (@lem5748337 A B x f s op)). Qed.
Lemma lem5748349 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1394 A B x f s op.
Proof. exact (@lem5748348 A B x f s op). Qed.
Lemma lem5748391 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem5748392 {B : Type'} : (term62 B) = (term63 B).
Proof. exact (@lem5748391 (term57 B)). Qed.
Lemma lem5748425 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1397 A B f s op) = (term1397 A B f s op).
Proof. exact (eq_refl (term1397 A B f s op)). Qed.
Lemma lem5748426 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1398 A B f s op) = (term1399 A B f s op).
Proof. exact (MK_COMB (@lem5748425 A B f s op) (@lem5748392 B)). Qed.
Lemma lem5748429 {A : Type'} (x : A) (s : A -> Prop) : (term1104 A x s) = (term1104 A x s).
Proof. exact (eq_refl (term1104 A x s)). Qed.
Lemma lem5748430 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1400 A B x f s op) = (term1401 A B x f s op).
Proof. exact (MK_COMB (@lem5748429 A x s) (@lem5748426 A B f s op)). Qed.
Lemma lem5748433 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5748434 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1402 A B x f s op) = (term1403 A B x f s op).
Proof. exact (MK_COMB (@lem5748433 A B f x op) (@lem5748430 A B x f s op)). Qed.
Lemma lem5748437 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5748438 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1404 A B x f s op) = (term1405 A B x f s op).
Proof. exact (MK_COMB (@lem5748437 A B op f s) (@lem5748434 A B x f s op)). Qed.
Lemma lem5748441 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1132 A B f op) = (term1132 A B f op).
Proof. exact (eq_refl (term1132 A B f op)). Qed.
Lemma lem5748442 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1406 A B x f s op) = (term1407 A B x f s op).
Proof. exact (MK_COMB (@lem5748441 A B f op) (@lem5748438 A B x f s op)). Qed.
Lemma lem5748445 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1135 A B f op) = (term1135 A B f op).
Proof. exact (eq_refl (term1135 A B f op)). Qed.
Lemma lem5748446 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1408 A B x f s op) = (term1409 A B x f s op).
Proof. exact (MK_COMB (@lem5748445 A B f op) (@lem5748442 A B x f s op)). Qed.
Lemma lem5748449 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5748450 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1393 A B x f s op) = (term1410 A B x f s op).
Proof. exact (MK_COMB (@lem5748449 B op) (@lem5748446 A B x f s op)). Qed.
Lemma lem5748453 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1411 A B f s op) = (term1412 A B f s op).
Proof. exact (fun_ext (fun x : A => @lem5748450 A B x f s op)). Qed.
Lemma lem5748454 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748455 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1413 A B f s op) = (term1414 A B f s op).
Proof. exact (MK_COMB (@lem5748454 A) (@lem5748453 A B f s op)). Qed.
Lemma lem5748460 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1415 A B s op) = (term1416 A B s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5748455 A B f s op)). Qed.
Lemma lem5748461 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5748462 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1417 A B s op) = (term1418 A B s op).
Proof. exact (MK_COMB (@lem5748461 A B) (@lem5748460 A B s op)). Qed.
Lemma lem5748467 {A B : Type'} (op : type1400 B) : (term1419 A B op) = (term1420 A B op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5748462 A B s op)). Qed.
Lemma lem5748468 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5748469 {A B : Type'} (op : type1400 B) : (term1421 A B op) = (term1422 A B op).
Proof. exact (MK_COMB (@lem5748468 A) (@lem5748467 A B op)). Qed.
Lemma lem5748474 {A B : Type'} : (term1423 A B) = (term1424 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748469 A B op)). Qed.
Lemma lem5748475 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5748476 {A B : Type'} : (term1425 A B) = (term1426 A B).
Proof. exact (MK_COMB (@lem5748475 B) (@lem5748474 A B)). Qed.
Lemma lem5748481 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5748482 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1155 A B f s op) = (term1155 A B f s op).
Proof. exact (eq_refl (term1155 A B f s op)). Qed.
Lemma lem5748483 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1156 A B x f s op) = (term1157 A B x f s op).
Proof. exact (MK_COMB (@lem5748481 A B op f x) (@lem5748482 A B f s op)). Qed.
Lemma lem5748484 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1157 A B x f s op) = (term1158 A B x f s op).
Proof. exact (eq_refl (term1157 A B x f s op)). Qed.
Lemma lem5748485 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1156 A B x f s op) = (term1158 A B x f s op).
Proof. exact (TRANS (@lem5748483 A B x f s op) (@lem5748484 A B x f s op)). Qed.
Lemma lem5748486 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1159 A B x f s op) = (term1159 A B x f s op).
Proof. exact (eq_refl (term1159 A B x f s op)). Qed.
Lemma lem5748487 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1051 A B x f s op) = (term1160 A B x f s op).
Proof. exact (MK_COMB (@lem5748486 A B x f s op) (@lem5748485 A B x f s op)). Qed.
Lemma lem5748488 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term1161 A B f x s op) = (term1161 A B f x s op).
Proof. exact (eq_refl (term1161 A B f x s op)). Qed.
Lemma lem5748489 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term1050 A B f x s op) = (term1051 A B x f s op)) = ((term1050 A B f x s op) = (term1160 A B x f s op)).
Proof. exact (MK_COMB (@lem5748488 A B f x s op) (@lem5748487 A B x f s op)). Qed.
Lemma lem5748490 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5748491 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1049 A B x f s op) = (term1163 A B x f s op).
Proof. exact (MK_COMB (@lem5748490 A s) (@lem5748489 A B x f s op)). Qed.
Lemma lem5748492 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) : (term1164 A B x f op) = (term1165 A B x f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5748491 A B x f s op)). Qed.
Lemma lem5748493 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5748494 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) : (term1047 A B x f op) = (term1166 A B x f op).
Proof. exact (MK_COMB (@lem5748493 A) (@lem5748492 A B x f op)). Qed.
Lemma lem5748495 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1167 A B f op) = (term1168 A B f op).
Proof. exact (fun_ext (fun x : A => @lem5748494 A B x f op)). Qed.
Lemma lem5748496 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748497 {A B : Type'} (f : A -> B) (op : type1400 B) : (term914 A B f op) = (term1169 A B f op).
Proof. exact (MK_COMB (@lem5748496 A) (@lem5748495 A B f op)). Qed.
Lemma lem5748498 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5748499 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1132 A B f op) = (term1170 A B f op).
Proof. exact (MK_COMB (@lem5748498) (@lem5748497 A B f op)). Qed.
Lemma lem5748500 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1405 A B x f s op) = (term1405 A B x f s op).
Proof. exact (eq_refl (term1405 A B x f s op)). Qed.
Lemma lem5748501 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1407 A B x f s op) = (term1427 A B x f s op).
Proof. exact (MK_COMB (@lem5748499 A B f op) (@lem5748500 A B x f s op)). Qed.
Lemma lem5748502 {A B : Type'} (f : A -> B) (op : type1400 B) : (term1135 A B f op) = (term1135 A B f op).
Proof. exact (eq_refl (term1135 A B f op)). Qed.
Lemma lem5748503 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1409 A B x f s op) = (term1428 A B x f s op).
Proof. exact (MK_COMB (@lem5748502 A B f op) (@lem5748501 A B x f s op)). Qed.
Lemma lem5748504 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5748505 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1410 A B x f s op) = (term1429 A B x f s op).
Proof. exact (MK_COMB (@lem5748504 B op) (@lem5748503 A B x f s op)). Qed.
Lemma lem5748506 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1412 A B f s op) = (term1430 A B f s op).
Proof. exact (fun_ext (fun x : A => @lem5748505 A B x f s op)). Qed.
Lemma lem5748507 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748508 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1414 A B f s op) = (term1431 A B f s op).
Proof. exact (MK_COMB (@lem5748507 A) (@lem5748506 A B f s op)). Qed.
Lemma lem5748509 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1416 A B s op) = (term1432 A B s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5748508 A B f s op)). Qed.
Lemma lem5748510 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5748511 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1418 A B s op) = (term1433 A B s op).
Proof. exact (MK_COMB (@lem5748510 A B) (@lem5748509 A B s op)). Qed.
Lemma lem5748512 {A B : Type'} (op : type1400 B) : (term1420 A B op) = (term1434 A B op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5748511 A B s op)). Qed.
Lemma lem5748513 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5748514 {A B : Type'} (op : type1400 B) : (term1422 A B op) = (term1435 A B op).
Proof. exact (MK_COMB (@lem5748513 A) (@lem5748512 A B op)). Qed.
Lemma lem5748515 {A B : Type'} : (term1424 A B) = (term1436 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748514 A B op)). Qed.
Lemma lem5748516 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5748517 {A B : Type'} : (term1426 A B) = (term1437 A B).
Proof. exact (MK_COMB (@lem5748516 B) (@lem5748515 A B)). Qed.
Lemma lem5748518 {A B : Type'} : (term1425 A B) = (term1437 A B).
Proof. exact (TRANS (@lem5748476 A B) (@lem5748517 A B)). Qed.
Lemma lem5748519 {A B : Type'} (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : _72433 = (term1182 A B).
Proof. exact (h1). Qed.
Lemma lem5748520 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5748521 {A B : Type'} (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (_72433 op) = (term1183 A B op).
Proof. exact (MK_COMB (@lem5748519 A B _72433 h1) (@lem5748520 B op)). Qed.
Lemma lem5748522 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5748523 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1185 A B _72433 op) = (term1185 A B _72433 op).
Proof. exact (eq_refl (term1185 A B _72433 op)). Qed.
Lemma lem5748524 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : ((_72433 op) = (term1183 A B op)) = ((_72433 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5748523 A B _72433 op) (@lem5748522 A B op)). Qed.
Lemma lem5748525 {A B : Type'} (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (_72433 op) = (term1184 A B op).
Proof. exact (EQ_MP (@lem5748524 A B _72433 op) (@lem5748521 A B op _72433 h1)). Qed.
Lemma lem5748526 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5748527 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (_72433 op f) = (term1186 A B op f).
Proof. exact (MK_COMB (@lem5748525 A B op _72433 h1) (@lem5748526 A B f)). Qed.
Lemma lem5748528 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5748529 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72433 op f) = (term1187 A B _72433 op f).
Proof. exact (eq_refl (term1187 A B _72433 op f)). Qed.
Lemma lem5748530 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72433 op f) = (term1186 A B op f)) = ((_72433 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5748529 A B _72433 op f) (@lem5748528 A B op f)). Qed.
Lemma lem5748531 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (_72433 op f) = (term14 A B op f).
Proof. exact (EQ_MP (@lem5748530 A B _72433 op f) (@lem5748527 A B op f _72433 h1)). Qed.
Lemma lem5748543 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5748544 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5748543 B op x)). Qed.
Lemma lem5748545 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748546 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5748545 B) (@lem5748544 B op)). Qed.
Lemma lem5748567 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5748568 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5748567 B op x y z)). Qed.
Lemma lem5748569 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748570 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5748569 B) (@lem5748568 B op x y)). Qed.
Lemma lem5748571 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5748570 B op x y)). Qed.
Lemma lem5748572 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748573 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5748572 B) (@lem5748571 B op x)). Qed.
Lemma lem5748574 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5748573 B op x)). Qed.
Lemma lem5748575 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748576 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5748575 B) (@lem5748574 B op)). Qed.
Lemma lem5748577 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5748578 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5748577) (@lem5748576 B op)). Qed.
Lemma lem5748579 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5748578 B op) (@lem5748546 B op)). Qed.
Lemma lem5748592 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5748593 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5748592 B op y x)). Qed.
Lemma lem5748594 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748595 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5748594 B) (@lem5748593 B op x)). Qed.
Lemma lem5748596 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5748595 B op x)). Qed.
Lemma lem5748597 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748598 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5748597 B) (@lem5748596 B op)). Qed.
Lemma lem5748599 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5748600 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5748599) (@lem5748598 B op)). Qed.
Lemma lem5748601 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5748600 B op) (@lem5748579 B op)). Qed.
Lemma lem5748606 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5748607 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5748606 B op) (@lem5748601 B op)). Qed.
Lemma lem5748608 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748607 B op)). Qed.
Lemma lem5748609 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5748610 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5748609 B) (@lem5748608 B)). Qed.
Lemma lem5748611 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5748612 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5748611) (@lem5748610 B)). Qed.
Lemma lem5748615 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748622 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (@support A B op f s).
Proof. exact (eq_refl (@support A B op f s)). Qed.
Lemma lem5748624 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (SYM (@lem5748531 A B op f _72433 h1)). Qed.
Lemma lem5748625 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (@lem5748624 A B op f _72433 h1). Qed.
Lemma lem5748626 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5748627 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748626 A B) (@lem5748625 A B op f _72433 h1)). Qed.
Lemma lem5748628 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1018 A B op f s) = (term1189 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5748627 A B op f _72433 h1) (@lem5748622 A B op f s)). Qed.
Lemma lem5748629 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term963 A B f s op) = (term1190 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748628 A B op f s _72433 h1) (@lem5748615 B op)). Qed.
Lemma lem5748634 {B : Type'} (op : type1400 B) : (term552 B op) = (term552 B op).
Proof. exact (eq_refl (term552 B op)). Qed.
Lemma lem5748635 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1032 A B f s op) = (term1438 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748634 B op) (@lem5748629 A B f s op _72433 h1)). Qed.
Lemma lem5748638 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748645 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (@support A B op f s).
Proof. exact (eq_refl (@support A B op f s)). Qed.
Lemma lem5748647 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (SYM (@lem5748531 A B op f _72433 h1)). Qed.
Lemma lem5748648 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (@lem5748647 A B op f _72433 h1). Qed.
Lemma lem5748649 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5748650 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748649 A B) (@lem5748648 A B op f _72433 h1)). Qed.
Lemma lem5748651 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1018 A B op f s) = (term1189 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5748650 A B op f _72433 h1) (@lem5748645 A B op f s)). Qed.
Lemma lem5748652 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term963 A B f s op) = (term1190 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748651 A B op f s _72433 h1) (@lem5748638 B op)). Qed.
Lemma lem5748653 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5748654 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1019 A B f s op) = (term1191 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748653 B) (@lem5748652 A B f s op _72433 h1)). Qed.
Lemma lem5748655 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : ((term963 A B f s op) = (term1032 A B f s op)) = ((term1190 A B _72433 f s op) = (term1438 A B _72433 f s op)).
Proof. exact (MK_COMB (@lem5748654 A B f s op _72433 h1) (@lem5748635 A B f s op _72433 h1)). Qed.
Lemma lem5748656 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5748657 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1392 A B f s op) = (term1439 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748656) (@lem5748655 A B f s op _72433 h1)). Qed.
Lemma lem5748658 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5748659 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1397 A B f s op) = (term1440 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748658) (@lem5748657 A B f s op _72433 h1)). Qed.
Lemma lem5748660 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1399 A B f s op) = (term1441 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748659 A B f s op _72433 h1) (@lem5748612 B)). Qed.
Lemma lem5748669 {A : Type'} (x : A) (s : A -> Prop) : (term1104 A x s) = (term1104 A x s).
Proof. exact (eq_refl (term1104 A x s)). Qed.
Lemma lem5748670 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1401 A B x f s op) = (term1442 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748669 A x s) (@lem5748660 A B f s op _72433 h1)). Qed.
Lemma lem5748681 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5748682 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1403 A B x f s op) = (term1443 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748681 A B f x op) (@lem5748670 A B x f s op _72433 h1)). Qed.
Lemma lem5748693 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5748694 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1405 A B x f s op) = (term1444 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748693 A B op f s) (@lem5748682 A B x f s op _72433 h1)). Qed.
Lemma lem5748697 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748698 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5748700 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (SYM (@lem5748531 A B op f _72433 h1)). Qed.
Lemma lem5748701 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (@lem5748700 A B op f _72433 h1). Qed.
Lemma lem5748702 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5748703 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748702 A B) (@lem5748701 A B op f _72433 h1)). Qed.
Lemma lem5748704 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1198 A B op f s) = (term1199 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5748703 A B op f _72433 h1) (@lem5748698 A s)). Qed.
Lemma lem5748705 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1155 A B f s op) = (term1200 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748704 A B op f s _72433 h1) (@lem5748697 B op)). Qed.
Lemma lem5748710 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term644 A B op f x) = (term644 A B op f x).
Proof. exact (eq_refl (term644 A B op f x)). Qed.
Lemma lem5748711 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1158 A B x f s op) = (term1201 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748710 A B op f x) (@lem5748705 A B f s op _72433 h1)). Qed.
Lemma lem5748714 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748715 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5748717 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (SYM (@lem5748531 A B op f _72433 h1)). Qed.
Lemma lem5748718 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (@lem5748717 A B op f _72433 h1). Qed.
Lemma lem5748719 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5748720 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748719 A B) (@lem5748718 A B op f _72433 h1)). Qed.
Lemma lem5748721 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1198 A B op f s) = (term1199 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5748720 A B op f _72433 h1) (@lem5748715 A s)). Qed.
Lemma lem5748722 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1155 A B f s op) = (term1200 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748721 A B op f s _72433 h1) (@lem5748714 B op)). Qed.
Lemma lem5748729 {A B : Type'} (x : A) (s : A -> Prop) : (term967 A B x s) = (term967 A B x s).
Proof. exact (eq_refl (term967 A B x s)). Qed.
Lemma lem5748730 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1159 A B x f s op) = (term1202 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748729 A B x s) (@lem5748722 A B f s op _72433 h1)). Qed.
Lemma lem5748731 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1160 A B x f s op) = (term1203 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748730 A B x f s op _72433 h1) (@lem5748711 A B x f s op _72433 h1)). Qed.
Lemma lem5748734 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748739 {A : Type'} (x : A) (s : A -> Prop) : (@INSERT A x s) = (@INSERT A x s).
Proof. exact (eq_refl (@INSERT A x s)). Qed.
Lemma lem5748741 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (SYM (@lem5748531 A B op f _72433 h1)). Qed.
Lemma lem5748742 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (@lem5748741 A B op f _72433 h1). Qed.
Lemma lem5748743 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5748744 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748743 A B) (@lem5748742 A B op f _72433 h1)). Qed.
Lemma lem5748745 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (s : A -> Prop) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1204 A B op f x s) = (term1205 A B _72433 op f x s).
Proof. exact (MK_COMB (@lem5748744 A B op f _72433 h1) (@lem5748739 A x s)). Qed.
Lemma lem5748746 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1050 A B f x s op) = (term1206 A B _72433 f x s op).
Proof. exact (MK_COMB (@lem5748745 A B op f x s _72433 h1) (@lem5748734 B op)). Qed.
Lemma lem5748747 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5748748 {A B : Type'} (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1161 A B f x s op) = (term1207 A B _72433 f x s op).
Proof. exact (MK_COMB (@lem5748747 B) (@lem5748746 A B f x s op _72433 h1)). Qed.
Lemma lem5748749 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : ((term1050 A B f x s op) = (term1160 A B x f s op)) = ((term1206 A B _72433 f x s op) = (term1203 A B x _72433 f s op)).
Proof. exact (MK_COMB (@lem5748748 A B f x s op _72433 h1) (@lem5748731 A B x f s op _72433 h1)). Qed.
Lemma lem5748754 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5748755 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1163 A B x f s op) = (term1208 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748754 A s) (@lem5748749 A B x f s op _72433 h1)). Qed.
Lemma lem5748756 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1165 A B x f op) = (term1209 A B x _72433 f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5748755 A B x f s op _72433 h1)). Qed.
Lemma lem5748757 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5748758 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1166 A B x f op) = (term1210 A B x _72433 f op).
Proof. exact (MK_COMB (@lem5748757 A) (@lem5748756 A B x f op _72433 h1)). Qed.
Lemma lem5748759 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1168 A B f op) = (term1211 A B _72433 f op).
Proof. exact (fun_ext (fun x : A => @lem5748758 A B x f op _72433 h1)). Qed.
Lemma lem5748760 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748761 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1169 A B f op) = (term1212 A B _72433 f op).
Proof. exact (MK_COMB (@lem5748760 A) (@lem5748759 A B f op _72433 h1)). Qed.
Lemma lem5748762 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5748763 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1170 A B f op) = (term1213 A B _72433 f op).
Proof. exact (MK_COMB (@lem5748762) (@lem5748761 A B f op _72433 h1)). Qed.
Lemma lem5748764 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1427 A B x f s op) = (term1445 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748763 A B f op _72433 h1) (@lem5748694 A B x f s op _72433 h1)). Qed.
Lemma lem5748767 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748770 {B : Type'} (op : type1400 B) : (@neutral B op) = (@neutral B op).
Proof. exact (eq_refl (@neutral B op)). Qed.
Lemma lem5748771 {A : Type'} : (@EMPTY A) = (@EMPTY A).
Proof. exact (eq_refl (@EMPTY A)). Qed.
Lemma lem5748773 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (SYM (@lem5748531 A B op f _72433 h1)). Qed.
Lemma lem5748774 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term14 A B op f) = (_72433 op f).
Proof. exact (@lem5748773 A B op f _72433 h1). Qed.
Lemma lem5748775 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5748776 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term929 A B op f) = (term1188 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748775 A B) (@lem5748774 A B op f _72433 h1)). Qed.
Lemma lem5748777 {A B : Type'} (op : type1400 B) (f : A -> B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term931 A B op f) = (term1215 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748776 A B op f _72433 h1) (@lem5748771 A)). Qed.
Lemma lem5748778 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term915 A B f op) = (term1216 A B _72433 f op).
Proof. exact (MK_COMB (@lem5748777 A B op f _72433 h1) (@lem5748770 B op)). Qed.
Lemma lem5748779 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5748780 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1217 A B f op) = (term1218 A B _72433 f op).
Proof. exact (MK_COMB (@lem5748779 B) (@lem5748778 A B f op _72433 h1)). Qed.
Lemma lem5748781 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : ((term915 A B f op) = (@neutral B op)) = ((term1216 A B _72433 f op) = (@neutral B op)).
Proof. exact (MK_COMB (@lem5748780 A B f op _72433 h1) (@lem5748767 B op)). Qed.
Lemma lem5748782 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5748783 {A B : Type'} (f : A -> B) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1135 A B f op) = (term1219 A B _72433 f op).
Proof. exact (MK_COMB (@lem5748782) (@lem5748781 A B f op _72433 h1)). Qed.
Lemma lem5748784 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1428 A B x f s op) = (term1446 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748783 A B f op _72433 h1) (@lem5748764 A B x f s op _72433 h1)). Qed.
Lemma lem5748789 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5748790 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1429 A B x f s op) = (term1447 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5748789 B op) (@lem5748784 A B x f s op _72433 h1)). Qed.
Lemma lem5748791 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1430 A B f s op) = (term1448 A B _72433 f s op).
Proof. exact (fun_ext (fun x : A => @lem5748790 A B x f s op _72433 h1)). Qed.
Lemma lem5748792 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748793 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1431 A B f s op) = (term1449 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5748792 A) (@lem5748791 A B f s op _72433 h1)). Qed.
Lemma lem5748794 {A B : Type'} (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1432 A B s op) = (term1450 A B _72433 s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5748793 A B f s op _72433 h1)). Qed.
Lemma lem5748795 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5748796 {A B : Type'} (s : A -> Prop) (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1433 A B s op) = (term1451 A B _72433 s op).
Proof. exact (MK_COMB (@lem5748795 A B) (@lem5748794 A B s op _72433 h1)). Qed.
Lemma lem5748797 {A B : Type'} (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1434 A B op) = (term1452 A B _72433 op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5748796 A B s op _72433 h1)). Qed.
Lemma lem5748798 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5748799 {A B : Type'} (op : type1400 B) (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1435 A B op) = (term1453 A B _72433 op).
Proof. exact (MK_COMB (@lem5748798 A) (@lem5748797 A B op _72433 h1)). Qed.
Lemma lem5748800 {A B : Type'} (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1436 A B) = (term1454 A B _72433).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748799 A B op _72433 h1)). Qed.
Lemma lem5748801 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5748802 {A B : Type'} (_72433 : type749 A B) (h1 : _72433 = (term1182 A B)) : (term1437 A B) = (term1455 A B _72433).
Proof. exact (MK_COMB (@lem5748801 B) (@lem5748800 A B _72433 h1)). Qed.
Lemma lem5748803 {A B : Type'} (_72433 : type749 A B) : term1456 A B _72433.
Proof. exact (fun h0 : _72433 = (term1182 A B) => @lem5748802 A B _72433 h0). Qed.
Lemma lem5748804 {A B : Type'} : term1457 A B.
Proof. exact (fun _72433 : type749 A B => @lem5748803 A B _72433). Qed.
Lemma lem5748806 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term1232 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem5748807 {A B : Type'} (P : Prop) (c : type749 A B) (Q : type191 A B) : term1233 A B P c Q.
Proof. exact (@lem5748806 (type749 A B) P c Q). Qed.
Lemma lem5748808 {A B : Type'} : term1458 A B.
Proof. exact (@lem5748807 A B (term1437 A B) (term1182 A B) (term1459 A B)). Qed.
Lemma lem5748809 {A B : Type'} (_72433 : type749 A B) : (term1460 A B _72433) = (term1455 A B _72433).
Proof. exact (eq_refl (term1460 A B _72433)). Qed.
Lemma lem5748810 {A B : Type'} : (term1461 A B) = (term1461 A B).
Proof. exact (eq_refl (term1461 A B)). Qed.
Lemma lem5748811 {A B : Type'} (_72433 : type749 A B) : ((term1437 A B) = (term1460 A B _72433)) = ((term1437 A B) = (term1455 A B _72433)).
Proof. exact (MK_COMB (@lem5748810 A B) (@lem5748809 A B _72433)). Qed.
Lemma lem5748812 {A B : Type'} (_72433 : type749 A B) : (term1238 A B _72433) = (term1238 A B _72433).
Proof. exact (eq_refl (term1238 A B _72433)). Qed.
Lemma lem5748813 {A B : Type'} (_72433 : type749 A B) : (term1462 A B _72433) = (term1456 A B _72433).
Proof. exact (MK_COMB (@lem5748812 A B _72433) (@lem5748811 A B _72433)). Qed.
Lemma lem5748814 {A B : Type'} : (term1463 A B) = (term1464 A B).
Proof. exact (fun_ext (fun _72433 : type749 A B => @lem5748813 A B _72433)). Qed.
Lemma lem5748815 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5748816 {A B : Type'} : (term1465 A B) = (term1457 A B).
Proof. exact (MK_COMB (@lem5748815 A B) (@lem5748814 A B)). Qed.
Lemma lem5748817 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5748818 {A B : Type'} : (term1466 A B) = (term1467 A B).
Proof. exact (MK_COMB (@lem5748817) (@lem5748816 A B)). Qed.
Lemma lem5748819 {A B : Type'} (_72433 : type749 A B) : (term1460 A B _72433) = (term1455 A B _72433).
Proof. exact (eq_refl (term1460 A B _72433)). Qed.
Lemma lem5748820 {A B : Type'} (_72433 : type749 A B) : (term1238 A B _72433) = (term1238 A B _72433).
Proof. exact (eq_refl (term1238 A B _72433)). Qed.
Lemma lem5748821 {A B : Type'} (_72433 : type749 A B) : (term1468 A B _72433) = (term1469 A B _72433).
Proof. exact (MK_COMB (@lem5748820 A B _72433) (@lem5748819 A B _72433)). Qed.
Lemma lem5748822 {A B : Type'} : (term1470 A B) = (term1471 A B).
Proof. exact (fun_ext (fun _72433 : type749 A B => @lem5748821 A B _72433)). Qed.
Lemma lem5748823 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5748824 {A B : Type'} : (term1472 A B) = (term1473 A B).
Proof. exact (MK_COMB (@lem5748823 A B) (@lem5748822 A B)). Qed.
Lemma lem5748825 {A B : Type'} : (term1461 A B) = (term1461 A B).
Proof. exact (eq_refl (term1461 A B)). Qed.
Lemma lem5748826 {A B : Type'} : ((term1437 A B) = (term1472 A B)) = ((term1437 A B) = (term1473 A B)).
Proof. exact (MK_COMB (@lem5748825 A B) (@lem5748824 A B)). Qed.
Lemma lem5748827 {A B : Type'} : (term1458 A B) = (term1474 A B).
Proof. exact (MK_COMB (@lem5748818 A B) (@lem5748826 A B)). Qed.
Lemma lem5748828 {A B : Type'} : term1474 A B.
Proof. exact (EQ_MP (@lem5748827 A B) (@lem5748808 A B)). Qed.
Lemma lem5748829 {A B : Type'} : (term1437 A B) = (term1473 A B).
Proof. exact (@lem5748828 A B (@lem5748804 A B)). Qed.
Lemma lem5748831 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5748832 {A B : Type'} (s : type749 A B) (t : type749 A B) : (s = (term1254 A B t)) = (term1255 A B s t).
Proof. exact (@lem5748831 (type546 A B) (type1400 B) s t). Qed.
Lemma lem5748833 {A B : Type'} (_72433 : type749 A B) : (_72433 = (term1256 A B)) = (term1257 A B _72433).
Proof. exact (@lem5748832 A B _72433 (term1182 A B)). Qed.
Lemma lem5748834 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5748835 {A B : Type'} : (term1256 A B) = (term1182 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748834 A B op)). Qed.
Lemma lem5748836 {A B : Type'} (_72433 : type749 A B) : (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433) = (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433).
Proof. exact (eq_refl (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433)). Qed.
Lemma lem5748837 {A B : Type'} (_72433 : type749 A B) : (_72433 = (term1256 A B)) = (_72433 = (term1182 A B)).
Proof. exact (MK_COMB (@lem5748836 A B _72433) (@lem5748835 A B)). Qed.
Lemma lem5748838 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5748839 {A B : Type'} (_72433 : type749 A B) : (term1258 A B _72433) = (term1259 A B _72433).
Proof. exact (MK_COMB (@lem5748838) (@lem5748837 A B _72433)). Qed.
Lemma lem5748840 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5748841 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1185 A B _72433 op) = (term1185 A B _72433 op).
Proof. exact (eq_refl (term1185 A B _72433 op)). Qed.
Lemma lem5748842 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : ((_72433 op) = (term1183 A B op)) = ((_72433 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5748841 A B _72433 op) (@lem5748840 A B op)). Qed.
Lemma lem5748843 {A B : Type'} (_72433 : type749 A B) : (term1260 A B _72433) = (term1261 A B _72433).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748842 A B _72433 op)). Qed.
Lemma lem5748844 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5748845 {A B : Type'} (_72433 : type749 A B) : (term1257 A B _72433) = (term1262 A B _72433).
Proof. exact (MK_COMB (@lem5748844 B) (@lem5748843 A B _72433)). Qed.
Lemma lem5748846 {A B : Type'} (_72433 : type749 A B) : ((_72433 = (term1256 A B)) = (term1257 A B _72433)) = ((_72433 = (term1182 A B)) = (term1262 A B _72433)).
Proof. exact (MK_COMB (@lem5748839 A B _72433) (@lem5748845 A B _72433)). Qed.
Lemma lem5748847 {A B : Type'} (_72433 : type749 A B) : (_72433 = (term1182 A B)) = (term1262 A B _72433).
Proof. exact (EQ_MP (@lem5748846 A B _72433) (@lem5748833 A B _72433)). Qed.
Lemma lem5748849 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5748850 {A B : Type'} (s : type546 A B) (t : type546 A B) : (s = (term1263 A B t)) = (term1264 A B s t).
Proof. exact (@lem5748849 (type1411 A B) (A -> B) s t). Qed.
Lemma lem5748851 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : ((_72433 op) = (term1265 A B op)) = (term1266 A B _72433 op).
Proof. exact (@lem5748850 A B (_72433 op) (term1184 A B op)). Qed.
Lemma lem5748852 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5748853 {A B : Type'} (op : type1400 B) : (term1265 A B op) = (term1184 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5748852 A B op f)). Qed.
Lemma lem5748854 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1185 A B _72433 op) = (term1185 A B _72433 op).
Proof. exact (eq_refl (term1185 A B _72433 op)). Qed.
Lemma lem5748855 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : ((_72433 op) = (term1265 A B op)) = ((_72433 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5748854 A B _72433 op) (@lem5748853 A B op)). Qed.
Lemma lem5748856 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5748857 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1267 A B _72433 op) = (term1268 A B _72433 op).
Proof. exact (MK_COMB (@lem5748856) (@lem5748855 A B _72433 op)). Qed.
Lemma lem5748858 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5748859 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72433 op f) = (term1187 A B _72433 op f).
Proof. exact (eq_refl (term1187 A B _72433 op f)). Qed.
Lemma lem5748860 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72433 op f) = (term1186 A B op f)) = ((_72433 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5748859 A B _72433 op f) (@lem5748858 A B op f)). Qed.
Lemma lem5748861 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1269 A B _72433 op) = (term1270 A B _72433 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5748860 A B _72433 op f)). Qed.
Lemma lem5748862 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5748863 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1266 A B _72433 op) = (term1271 A B _72433 op).
Proof. exact (MK_COMB (@lem5748862 A B) (@lem5748861 A B _72433 op)). Qed.
Lemma lem5748864 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (((_72433 op) = (term1265 A B op)) = (term1266 A B _72433 op)) = (((_72433 op) = (term1184 A B op)) = (term1271 A B _72433 op)).
Proof. exact (MK_COMB (@lem5748857 A B _72433 op) (@lem5748863 A B _72433 op)). Qed.
Lemma lem5748865 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : ((_72433 op) = (term1184 A B op)) = (term1271 A B _72433 op).
Proof. exact (EQ_MP (@lem5748864 A B _72433 op) (@lem5748851 A B _72433 op)). Qed.
Lemma lem5748867 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5748868 {A B : Type'} (s : type1411 A B) (t : type1411 A B) : (s = (term1272 A B t)) = (term1273 A B s t).
Proof. exact (@lem5748867 (B -> B) A s t). Qed.
Lemma lem5748869 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72433 op f) = (term1084 A B op f)) = (term1274 A B _72433 op f).
Proof. exact (@lem5748868 A B (_72433 op f) (term14 A B op f)). Qed.
Lemma lem5748870 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5748871 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1084 A B op f) = (term14 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5748870 A B op f x)). Qed.
Lemma lem5748872 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72433 op f) = (term1187 A B _72433 op f).
Proof. exact (eq_refl (term1187 A B _72433 op f)). Qed.
Lemma lem5748873 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72433 op f) = (term1084 A B op f)) = ((_72433 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5748872 A B _72433 op f) (@lem5748871 A B op f)). Qed.
Lemma lem5748874 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5748875 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1275 A B _72433 op f) = (term1276 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748874) (@lem5748873 A B _72433 op f)). Qed.
Lemma lem5748876 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5748877 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72433 op f x) = (term1277 A B _72433 op f x).
Proof. exact (eq_refl (term1277 A B _72433 op f x)). Qed.
Lemma lem5748878 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72433 op f x) = (term80 A B op f x)) = ((_72433 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5748877 A B _72433 op f x) (@lem5748876 A B op f x)). Qed.
Lemma lem5748879 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1278 A B _72433 op f) = (term1279 A B _72433 op f).
Proof. exact (fun_ext (fun x : A => @lem5748878 A B _72433 op f x)). Qed.
Lemma lem5748880 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748881 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1274 A B _72433 op f) = (term1280 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748880 A) (@lem5748879 A B _72433 op f)). Qed.
Lemma lem5748882 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (((_72433 op f) = (term1084 A B op f)) = (term1274 A B _72433 op f)) = (((_72433 op f) = (term14 A B op f)) = (term1280 A B _72433 op f)).
Proof. exact (MK_COMB (@lem5748875 A B _72433 op f) (@lem5748881 A B _72433 op f)). Qed.
Lemma lem5748883 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72433 op f) = (term14 A B op f)) = (term1280 A B _72433 op f).
Proof. exact (EQ_MP (@lem5748882 A B _72433 op f) (@lem5748869 A B _72433 op f)). Qed.
Lemma lem5748884 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72433 op f x) = (term81 A B op f x)) = ((_72433 op f x) = (term81 A B op f x)).
Proof. exact (eq_refl ((_72433 op f x) = (term81 A B op f x))). Qed.
Lemma lem5748885 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1279 A B _72433 op f) = (term1279 A B _72433 op f).
Proof. exact (fun_ext (fun x : A => @lem5748884 A B _72433 op f x)). Qed.
Lemma lem5748886 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5748887 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1280 A B _72433 op f) = (term1280 A B _72433 op f).
Proof. exact (MK_COMB (@lem5748886 A) (@lem5748885 A B _72433 op f)). Qed.
Lemma lem5748888 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72433 op f) = (term14 A B op f)) = (term1280 A B _72433 op f).
Proof. exact (TRANS (@lem5748883 A B _72433 op f) (@lem5748887 A B _72433 op f)). Qed.
Lemma lem5748889 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1270 A B _72433 op) = (term1281 A B _72433 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5748888 A B _72433 op f)). Qed.
Lemma lem5748890 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5748891 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1271 A B _72433 op) = (term1282 A B _72433 op).
Proof. exact (MK_COMB (@lem5748890 A B) (@lem5748889 A B _72433 op)). Qed.
Lemma lem5748892 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : ((_72433 op) = (term1184 A B op)) = (term1282 A B _72433 op).
Proof. exact (TRANS (@lem5748865 A B _72433 op) (@lem5748891 A B _72433 op)). Qed.
Lemma lem5748893 {A B : Type'} (_72433 : type749 A B) : (term1261 A B _72433) = (term1283 A B _72433).
Proof. exact (fun_ext (fun op : type1400 B => @lem5748892 A B _72433 op)). Qed.
Lemma lem5748894 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5748895 {A B : Type'} (_72433 : type749 A B) : (term1262 A B _72433) = (term1284 A B _72433).
Proof. exact (MK_COMB (@lem5748894 B) (@lem5748893 A B _72433)). Qed.
Lemma lem5748896 {A B : Type'} (_72433 : type749 A B) : (_72433 = (term1182 A B)) = (term1284 A B _72433).
Proof. exact (TRANS (@lem5748847 A B _72433) (@lem5748895 A B _72433)). Qed.
Lemma lem5748897 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5748898 {A B : Type'} (_72433 : type749 A B) : (term1238 A B _72433) = (term1285 A B _72433).
Proof. exact (MK_COMB (@lem5748897) (@lem5748896 A B _72433)). Qed.
Lemma lem5748899 {A B : Type'} (_72433 : type749 A B) : (term1455 A B _72433) = (term1455 A B _72433).
Proof. exact (eq_refl (term1455 A B _72433)). Qed.
Lemma lem5748900 {A B : Type'} (_72433 : type749 A B) : (term1469 A B _72433) = (term1475 A B _72433).
Proof. exact (MK_COMB (@lem5748898 A B _72433) (@lem5748899 A B _72433)). Qed.
Lemma lem5748901 {A B : Type'} : (term1471 A B) = (term1476 A B).
Proof. exact (fun_ext (fun _72433 : type749 A B => @lem5748900 A B _72433)). Qed.
Lemma lem5748902 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5748903 {A B : Type'} : (term1473 A B) = (term1477 A B).
Proof. exact (MK_COMB (@lem5748902 A B) (@lem5748901 A B)). Qed.
Lemma lem5748904 {A B : Type'} : (term1461 A B) = (term1461 A B).
Proof. exact (eq_refl (term1461 A B)). Qed.
Lemma lem5748905 {A B : Type'} : ((term1437 A B) = (term1473 A B)) = ((term1437 A B) = (term1477 A B)).
Proof. exact (MK_COMB (@lem5748904 A B) (@lem5748903 A B)). Qed.
Lemma lem5748906 {A B : Type'} : (term1437 A B) = (term1477 A B).
Proof. exact (EQ_MP (@lem5748905 A B) (@lem5748829 A B)). Qed.
Lemma lem5748907 {A B : Type'} (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : _72434 = (term1182 A B).
Proof. exact (h1). Qed.
Lemma lem5748908 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5748909 {A B : Type'} (op : type1400 B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (_72434 op) = (term1183 A B op).
Proof. exact (MK_COMB (@lem5748907 A B _72434 h1) (@lem5748908 B op)). Qed.
Lemma lem5748910 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5748911 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1185 A B _72434 op) = (term1185 A B _72434 op).
Proof. exact (eq_refl (term1185 A B _72434 op)). Qed.
Lemma lem5748912 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : ((_72434 op) = (term1183 A B op)) = ((_72434 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5748911 A B _72434 op) (@lem5748910 A B op)). Qed.
Lemma lem5748913 {A B : Type'} (op : type1400 B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (_72434 op) = (term1184 A B op).
Proof. exact (EQ_MP (@lem5748912 A B _72434 op) (@lem5748909 A B op _72434 h1)). Qed.
Lemma lem5748914 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5748915 {A B : Type'} (op : type1400 B) (f : A -> B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (_72434 op f) = (term1186 A B op f).
Proof. exact (MK_COMB (@lem5748913 A B op _72434 h1) (@lem5748914 A B f)). Qed.
Lemma lem5748916 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5748917 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72434 op f) = (term1187 A B _72434 op f).
Proof. exact (eq_refl (term1187 A B _72434 op f)). Qed.
Lemma lem5748918 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72434 op f) = (term1186 A B op f)) = ((_72434 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5748917 A B _72434 op f) (@lem5748916 A B op f)). Qed.
Lemma lem5748919 {A B : Type'} (op : type1400 B) (f : A -> B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (_72434 op f) = (term14 A B op f).
Proof. exact (EQ_MP (@lem5748918 A B _72434 op f) (@lem5748915 A B op f _72434 h1)). Qed.
Lemma lem5748920 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5748921 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (_72434 op f x) = (term80 A B op f x).
Proof. exact (MK_COMB (@lem5748919 A B op f _72434 h1) (@lem5748920 A x)). Qed.
Lemma lem5748922 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5748923 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72434 op f x) = (term1277 A B _72434 op f x).
Proof. exact (eq_refl (term1277 A B _72434 op f x)). Qed.
Lemma lem5748924 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72434 op f x) = (term80 A B op f x)) = ((_72434 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5748923 A B _72434 op f x) (@lem5748922 A B op f x)). Qed.
Lemma lem5748925 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (_72434 op f x) = (term81 A B op f x).
Proof. exact (EQ_MP (@lem5748924 A B _72434 op f x) (@lem5748921 A B op f x _72434 h1)). Qed.
Lemma lem5748937 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5748938 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5748937 B op x)). Qed.
Lemma lem5748939 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748940 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5748939 B) (@lem5748938 B op)). Qed.
Lemma lem5748961 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5748962 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5748961 B op x y z)). Qed.
Lemma lem5748963 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748964 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5748963 B) (@lem5748962 B op x y)). Qed.
Lemma lem5748965 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5748964 B op x y)). Qed.
Lemma lem5748966 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748967 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5748966 B) (@lem5748965 B op x)). Qed.
Lemma lem5748968 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5748967 B op x)). Qed.
Lemma lem5748969 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748970 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5748969 B) (@lem5748968 B op)). Qed.
Lemma lem5748971 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5748972 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5748971) (@lem5748970 B op)). Qed.
Lemma lem5748973 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5748972 B op) (@lem5748940 B op)). Qed.
Lemma lem5748986 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5748987 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5748986 B op y x)). Qed.
Lemma lem5748988 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748989 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5748988 B) (@lem5748987 B op x)). Qed.
Lemma lem5748990 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5748989 B op x)). Qed.
Lemma lem5748991 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5748992 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5748991 B) (@lem5748990 B op)). Qed.
Lemma lem5748993 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5748994 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5748993) (@lem5748992 B op)). Qed.
Lemma lem5748995 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5748994 B op) (@lem5748973 B op)). Qed.
Lemma lem5749000 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5749001 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5749000 B op) (@lem5748995 B op)). Qed.
Lemma lem5749002 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749001 B op)). Qed.
Lemma lem5749003 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749004 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5749003 B) (@lem5749002 B)). Qed.
Lemma lem5749005 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5749006 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5749005) (@lem5749004 B)). Qed.
Lemma lem5749057 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1440 A B _72433 f s op) = (term1440 A B _72433 f s op).
Proof. exact (eq_refl (term1440 A B _72433 f s op)). Qed.
Lemma lem5749058 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1441 A B _72433 f s op) = (term1441 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5749057 A B _72433 f s op) (@lem5749006 B)). Qed.
Lemma lem5749067 {A : Type'} (x : A) (s : A -> Prop) : (term1104 A x s) = (term1104 A x s).
Proof. exact (eq_refl (term1104 A x s)). Qed.
Lemma lem5749068 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1442 A B x _72433 f s op) = (term1442 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749067 A x s) (@lem5749058 A B _72433 f s op)). Qed.
Lemma lem5749079 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5749080 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1443 A B x _72433 f s op) = (term1443 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749079 A B f x op) (@lem5749068 A B x _72433 f s op)). Qed.
Lemma lem5749091 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5749092 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1444 A B x _72433 f s op) = (term1444 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749091 A B op f s) (@lem5749080 A B x _72433 f s op)). Qed.
Lemma lem5749159 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1208 A B x _72433 f s op) = (term1208 A B x _72433 f s op).
Proof. exact (eq_refl (term1208 A B x _72433 f s op)). Qed.
Lemma lem5749160 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1209 A B x _72433 f op) = (term1209 A B x _72433 f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5749159 A B x _72433 f s op)). Qed.
Lemma lem5749161 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5749162 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1210 A B x _72433 f op) = (term1210 A B x _72433 f op).
Proof. exact (MK_COMB (@lem5749161 A) (@lem5749160 A B x _72433 f op)). Qed.
Lemma lem5749163 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1211 A B _72433 f op) = (term1211 A B _72433 f op).
Proof. exact (fun_ext (fun x : A => @lem5749162 A B x _72433 f op)). Qed.
Lemma lem5749164 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749165 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1212 A B _72433 f op) = (term1212 A B _72433 f op).
Proof. exact (MK_COMB (@lem5749164 A) (@lem5749163 A B _72433 f op)). Qed.
Lemma lem5749166 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749167 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1213 A B _72433 f op) = (term1213 A B _72433 f op).
Proof. exact (MK_COMB (@lem5749166) (@lem5749165 A B _72433 f op)). Qed.
Lemma lem5749168 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1445 A B x _72433 f s op) = (term1445 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749167 A B _72433 f op) (@lem5749092 A B x _72433 f s op)). Qed.
Lemma lem5749189 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1219 A B _72433 f op) = (term1219 A B _72433 f op).
Proof. exact (eq_refl (term1219 A B _72433 f op)). Qed.
Lemma lem5749190 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1446 A B x _72433 f s op) = (term1446 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749189 A B _72433 f op) (@lem5749168 A B x _72433 f s op)). Qed.
Lemma lem5749195 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5749196 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1447 A B x _72433 f s op) = (term1447 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749195 B op) (@lem5749190 A B x _72433 f s op)). Qed.
Lemma lem5749197 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1448 A B _72433 f s op) = (term1448 A B _72433 f s op).
Proof. exact (fun_ext (fun x : A => @lem5749196 A B x _72433 f s op)). Qed.
Lemma lem5749198 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749199 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1449 A B _72433 f s op) = (term1449 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5749198 A) (@lem5749197 A B _72433 f s op)). Qed.
Lemma lem5749200 {A B : Type'} (_72433 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1450 A B _72433 s op) = (term1450 A B _72433 s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749199 A B _72433 f s op)). Qed.
Lemma lem5749201 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749202 {A B : Type'} (_72433 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1451 A B _72433 s op) = (term1451 A B _72433 s op).
Proof. exact (MK_COMB (@lem5749201 A B) (@lem5749200 A B _72433 s op)). Qed.
Lemma lem5749203 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1452 A B _72433 op) = (term1452 A B _72433 op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5749202 A B _72433 s op)). Qed.
Lemma lem5749204 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5749205 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1453 A B _72433 op) = (term1453 A B _72433 op).
Proof. exact (MK_COMB (@lem5749204 A) (@lem5749203 A B _72433 op)). Qed.
Lemma lem5749206 {A B : Type'} (_72433 : type749 A B) : (term1454 A B _72433) = (term1454 A B _72433).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749205 A B _72433 op)). Qed.
Lemma lem5749207 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749208 {A B : Type'} (_72433 : type749 A B) : (term1455 A B _72433) = (term1455 A B _72433).
Proof. exact (MK_COMB (@lem5749207 B) (@lem5749206 A B _72433)). Qed.
Lemma lem5749210 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term81 A B op f x) = (_72434 op f x).
Proof. exact (SYM (@lem5748925 A B op f x _72434 h1)). Qed.
Lemma lem5749211 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term81 A B op f x) = (_72434 op f x).
Proof. exact (@lem5749210 A B op f x _72434 h1). Qed.
Lemma lem5749220 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72433 op f x) = (term1277 A B _72433 op f x).
Proof. exact (eq_refl (term1277 A B _72433 op f x)). Qed.
Lemma lem5749221 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : ((_72433 op f x) = (term81 A B op f x)) = ((_72433 op f x) = (_72434 op f x)).
Proof. exact (MK_COMB (@lem5749220 A B _72433 op f x) (@lem5749211 A B op f x _72434 h1)). Qed.
Lemma lem5749222 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1279 A B _72433 op f) = (term1289 A B _72433 _72434 op f).
Proof. exact (fun_ext (fun x : A => @lem5749221 A B _72433 op f x _72434 h1)). Qed.
Lemma lem5749223 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749224 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1280 A B _72433 op f) = (term1290 A B _72433 _72434 op f).
Proof. exact (MK_COMB (@lem5749223 A) (@lem5749222 A B _72433 op f _72434 h1)). Qed.
Lemma lem5749225 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1281 A B _72433 op) = (term1291 A B _72433 _72434 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749224 A B _72433 op f _72434 h1)). Qed.
Lemma lem5749226 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749227 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1282 A B _72433 op) = (term1292 A B _72433 _72434 op).
Proof. exact (MK_COMB (@lem5749226 A B) (@lem5749225 A B _72433 op _72434 h1)). Qed.
Lemma lem5749228 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1283 A B _72433) = (term1293 A B _72433 _72434).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749227 A B _72433 op _72434 h1)). Qed.
Lemma lem5749229 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749230 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1284 A B _72433) = (term1294 A B _72433 _72434).
Proof. exact (MK_COMB (@lem5749229 B) (@lem5749228 A B _72433 _72434 h1)). Qed.
Lemma lem5749231 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749232 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1285 A B _72433) = (term1295 A B _72433 _72434).
Proof. exact (MK_COMB (@lem5749231) (@lem5749230 A B _72433 _72434 h1)). Qed.
Lemma lem5749233 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1475 A B _72433) = (term1478 A B _72434 _72433).
Proof. exact (MK_COMB (@lem5749232 A B _72433 _72434 h1) (@lem5749208 A B _72433)). Qed.
Lemma lem5749234 {A B : Type'} (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1476 A B) = (term1479 A B _72434).
Proof. exact (fun_ext (fun _72433 : type749 A B => @lem5749233 A B _72433 _72434 h1)). Qed.
Lemma lem5749235 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5749236 {A B : Type'} (_72434 : type749 A B) (h1 : _72434 = (term1182 A B)) : (term1477 A B) = (term1480 A B _72434).
Proof. exact (MK_COMB (@lem5749235 A B) (@lem5749234 A B _72434 h1)). Qed.
Lemma lem5749237 {A B : Type'} (_72434 : type749 A B) : term1481 A B _72434.
Proof. exact (fun h0 : _72434 = (term1182 A B) => @lem5749236 A B _72434 h0). Qed.
Lemma lem5749238 {A B : Type'} : term1482 A B.
Proof. exact (fun _72434 : type749 A B => @lem5749237 A B _72434). Qed.
Lemma lem5749240 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term1232 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem5749241 {A B : Type'} (P : Prop) (c : type749 A B) (Q : type191 A B) : term1233 A B P c Q.
Proof. exact (@lem5749240 (type749 A B) P c Q). Qed.
Lemma lem5749242 {A B : Type'} : term1483 A B.
Proof. exact (@lem5749241 A B (term1477 A B) (term1182 A B) (term1484 A B)). Qed.
Lemma lem5749243 {A B : Type'} (_72434 : type749 A B) : (term1485 A B _72434) = (term1480 A B _72434).
Proof. exact (eq_refl (term1485 A B _72434)). Qed.
Lemma lem5749244 {A B : Type'} : (term1486 A B) = (term1486 A B).
Proof. exact (eq_refl (term1486 A B)). Qed.
Lemma lem5749245 {A B : Type'} (_72434 : type749 A B) : ((term1477 A B) = (term1485 A B _72434)) = ((term1477 A B) = (term1480 A B _72434)).
Proof. exact (MK_COMB (@lem5749244 A B) (@lem5749243 A B _72434)). Qed.
Lemma lem5749246 {A B : Type'} (_72434 : type749 A B) : (term1238 A B _72434) = (term1238 A B _72434).
Proof. exact (eq_refl (term1238 A B _72434)). Qed.
Lemma lem5749247 {A B : Type'} (_72434 : type749 A B) : (term1487 A B _72434) = (term1481 A B _72434).
Proof. exact (MK_COMB (@lem5749246 A B _72434) (@lem5749245 A B _72434)). Qed.
Lemma lem5749248 {A B : Type'} : (term1488 A B) = (term1489 A B).
Proof. exact (fun_ext (fun _72434 : type749 A B => @lem5749247 A B _72434)). Qed.
Lemma lem5749249 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5749250 {A B : Type'} : (term1490 A B) = (term1482 A B).
Proof. exact (MK_COMB (@lem5749249 A B) (@lem5749248 A B)). Qed.
Lemma lem5749251 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749252 {A B : Type'} : (term1491 A B) = (term1492 A B).
Proof. exact (MK_COMB (@lem5749251) (@lem5749250 A B)). Qed.
Lemma lem5749253 {A B : Type'} (_72434 : type749 A B) : (term1485 A B _72434) = (term1480 A B _72434).
Proof. exact (eq_refl (term1485 A B _72434)). Qed.
Lemma lem5749254 {A B : Type'} (_72434 : type749 A B) : (term1238 A B _72434) = (term1238 A B _72434).
Proof. exact (eq_refl (term1238 A B _72434)). Qed.
Lemma lem5749255 {A B : Type'} (_72434 : type749 A B) : (term1493 A B _72434) = (term1494 A B _72434).
Proof. exact (MK_COMB (@lem5749254 A B _72434) (@lem5749253 A B _72434)). Qed.
Lemma lem5749256 {A B : Type'} : (term1495 A B) = (term1496 A B).
Proof. exact (fun_ext (fun _72434 : type749 A B => @lem5749255 A B _72434)). Qed.
Lemma lem5749257 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5749258 {A B : Type'} : (term1497 A B) = (term1498 A B).
Proof. exact (MK_COMB (@lem5749257 A B) (@lem5749256 A B)). Qed.
Lemma lem5749259 {A B : Type'} : (term1486 A B) = (term1486 A B).
Proof. exact (eq_refl (term1486 A B)). Qed.
Lemma lem5749260 {A B : Type'} : ((term1477 A B) = (term1497 A B)) = ((term1477 A B) = (term1498 A B)).
Proof. exact (MK_COMB (@lem5749259 A B) (@lem5749258 A B)). Qed.
Lemma lem5749261 {A B : Type'} : (term1483 A B) = (term1499 A B).
Proof. exact (MK_COMB (@lem5749252 A B) (@lem5749260 A B)). Qed.
Lemma lem5749262 {A B : Type'} : term1499 A B.
Proof. exact (EQ_MP (@lem5749261 A B) (@lem5749242 A B)). Qed.
Lemma lem5749263 {A B : Type'} : (term1477 A B) = (term1498 A B).
Proof. exact (@lem5749262 A B (@lem5749238 A B)). Qed.
Lemma lem5749265 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5749266 {A B : Type'} (s : type749 A B) (t : type749 A B) : (s = (term1254 A B t)) = (term1255 A B s t).
Proof. exact (@lem5749265 (type546 A B) (type1400 B) s t). Qed.
Lemma lem5749267 {A B : Type'} (_72434 : type749 A B) : (_72434 = (term1256 A B)) = (term1257 A B _72434).
Proof. exact (@lem5749266 A B _72434 (term1182 A B)). Qed.
Lemma lem5749268 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5749269 {A B : Type'} : (term1256 A B) = (term1182 A B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749268 A B op)). Qed.
Lemma lem5749270 {A B : Type'} (_72434 : type749 A B) : (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72434) = (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72434).
Proof. exact (eq_refl (@eq ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72434)). Qed.
Lemma lem5749271 {A B : Type'} (_72434 : type749 A B) : (_72434 = (term1256 A B)) = (_72434 = (term1182 A B)).
Proof. exact (MK_COMB (@lem5749270 A B _72434) (@lem5749269 A B)). Qed.
Lemma lem5749272 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5749273 {A B : Type'} (_72434 : type749 A B) : (term1258 A B _72434) = (term1259 A B _72434).
Proof. exact (MK_COMB (@lem5749272) (@lem5749271 A B _72434)). Qed.
Lemma lem5749274 {A B : Type'} (op : type1400 B) : (term1183 A B op) = (term1184 A B op).
Proof. exact (eq_refl (term1183 A B op)). Qed.
Lemma lem5749275 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1185 A B _72434 op) = (term1185 A B _72434 op).
Proof. exact (eq_refl (term1185 A B _72434 op)). Qed.
Lemma lem5749276 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : ((_72434 op) = (term1183 A B op)) = ((_72434 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5749275 A B _72434 op) (@lem5749274 A B op)). Qed.
Lemma lem5749277 {A B : Type'} (_72434 : type749 A B) : (term1260 A B _72434) = (term1261 A B _72434).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749276 A B _72434 op)). Qed.
Lemma lem5749278 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749279 {A B : Type'} (_72434 : type749 A B) : (term1257 A B _72434) = (term1262 A B _72434).
Proof. exact (MK_COMB (@lem5749278 B) (@lem5749277 A B _72434)). Qed.
Lemma lem5749280 {A B : Type'} (_72434 : type749 A B) : ((_72434 = (term1256 A B)) = (term1257 A B _72434)) = ((_72434 = (term1182 A B)) = (term1262 A B _72434)).
Proof. exact (MK_COMB (@lem5749273 A B _72434) (@lem5749279 A B _72434)). Qed.
Lemma lem5749281 {A B : Type'} (_72434 : type749 A B) : (_72434 = (term1182 A B)) = (term1262 A B _72434).
Proof. exact (EQ_MP (@lem5749280 A B _72434) (@lem5749267 A B _72434)). Qed.
Lemma lem5749283 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5749284 {A B : Type'} (s : type546 A B) (t : type546 A B) : (s = (term1263 A B t)) = (term1264 A B s t).
Proof. exact (@lem5749283 (type1411 A B) (A -> B) s t). Qed.
Lemma lem5749285 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : ((_72434 op) = (term1265 A B op)) = (term1266 A B _72434 op).
Proof. exact (@lem5749284 A B (_72434 op) (term1184 A B op)). Qed.
Lemma lem5749286 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5749287 {A B : Type'} (op : type1400 B) : (term1265 A B op) = (term1184 A B op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749286 A B op f)). Qed.
Lemma lem5749288 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1185 A B _72434 op) = (term1185 A B _72434 op).
Proof. exact (eq_refl (term1185 A B _72434 op)). Qed.
Lemma lem5749289 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : ((_72434 op) = (term1265 A B op)) = ((_72434 op) = (term1184 A B op)).
Proof. exact (MK_COMB (@lem5749288 A B _72434 op) (@lem5749287 A B op)). Qed.
Lemma lem5749290 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5749291 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1267 A B _72434 op) = (term1268 A B _72434 op).
Proof. exact (MK_COMB (@lem5749290) (@lem5749289 A B _72434 op)). Qed.
Lemma lem5749292 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1186 A B op f) = (term14 A B op f).
Proof. exact (eq_refl (term1186 A B op f)). Qed.
Lemma lem5749293 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72434 op f) = (term1187 A B _72434 op f).
Proof. exact (eq_refl (term1187 A B _72434 op f)). Qed.
Lemma lem5749294 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72434 op f) = (term1186 A B op f)) = ((_72434 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5749293 A B _72434 op f) (@lem5749292 A B op f)). Qed.
Lemma lem5749295 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1269 A B _72434 op) = (term1270 A B _72434 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749294 A B _72434 op f)). Qed.
Lemma lem5749296 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749297 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1266 A B _72434 op) = (term1271 A B _72434 op).
Proof. exact (MK_COMB (@lem5749296 A B) (@lem5749295 A B _72434 op)). Qed.
Lemma lem5749298 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (((_72434 op) = (term1265 A B op)) = (term1266 A B _72434 op)) = (((_72434 op) = (term1184 A B op)) = (term1271 A B _72434 op)).
Proof. exact (MK_COMB (@lem5749291 A B _72434 op) (@lem5749297 A B _72434 op)). Qed.
Lemma lem5749299 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : ((_72434 op) = (term1184 A B op)) = (term1271 A B _72434 op).
Proof. exact (EQ_MP (@lem5749298 A B _72434 op) (@lem5749285 A B _72434 op)). Qed.
Lemma lem5749301 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5749302 {A B : Type'} (s : type1411 A B) (t : type1411 A B) : (s = (term1272 A B t)) = (term1273 A B s t).
Proof. exact (@lem5749301 (B -> B) A s t). Qed.
Lemma lem5749303 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72434 op f) = (term1084 A B op f)) = (term1274 A B _72434 op f).
Proof. exact (@lem5749302 A B (_72434 op f) (term14 A B op f)). Qed.
Lemma lem5749304 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5749305 {A B : Type'} (op : type1400 B) (f : A -> B) : (term1084 A B op f) = (term14 A B op f).
Proof. exact (fun_ext (fun x : A => @lem5749304 A B op f x)). Qed.
Lemma lem5749306 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1187 A B _72434 op f) = (term1187 A B _72434 op f).
Proof. exact (eq_refl (term1187 A B _72434 op f)). Qed.
Lemma lem5749307 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72434 op f) = (term1084 A B op f)) = ((_72434 op f) = (term14 A B op f)).
Proof. exact (MK_COMB (@lem5749306 A B _72434 op f) (@lem5749305 A B op f)). Qed.
Lemma lem5749308 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5749309 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1275 A B _72434 op f) = (term1276 A B _72434 op f).
Proof. exact (MK_COMB (@lem5749308) (@lem5749307 A B _72434 op f)). Qed.
Lemma lem5749310 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term80 A B op f x) = (term81 A B op f x).
Proof. exact (eq_refl (term80 A B op f x)). Qed.
Lemma lem5749311 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72434 op f x) = (term1277 A B _72434 op f x).
Proof. exact (eq_refl (term1277 A B _72434 op f x)). Qed.
Lemma lem5749312 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72434 op f x) = (term80 A B op f x)) = ((_72434 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5749311 A B _72434 op f x) (@lem5749310 A B op f x)). Qed.
Lemma lem5749313 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1278 A B _72434 op f) = (term1279 A B _72434 op f).
Proof. exact (fun_ext (fun x : A => @lem5749312 A B _72434 op f x)). Qed.
Lemma lem5749314 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749315 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1274 A B _72434 op f) = (term1280 A B _72434 op f).
Proof. exact (MK_COMB (@lem5749314 A) (@lem5749313 A B _72434 op f)). Qed.
Lemma lem5749316 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (((_72434 op f) = (term1084 A B op f)) = (term1274 A B _72434 op f)) = (((_72434 op f) = (term14 A B op f)) = (term1280 A B _72434 op f)).
Proof. exact (MK_COMB (@lem5749309 A B _72434 op f) (@lem5749315 A B _72434 op f)). Qed.
Lemma lem5749317 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72434 op f) = (term14 A B op f)) = (term1280 A B _72434 op f).
Proof. exact (EQ_MP (@lem5749316 A B _72434 op f) (@lem5749303 A B _72434 op f)). Qed.
Lemma lem5749319 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term1252 _3571 _3575 t)) = (term1253 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem5749320 {B : Type'} (s : B -> B) (t : B -> B) : (s = (term1318 B t)) = (term1319 B s t).
Proof. exact (@lem5749319 B B s t). Qed.
Lemma lem5749321 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72434 op f x) = (term1090 A B op f x)) = (term1320 A B _72434 op f x).
Proof. exact (@lem5749320 B (_72434 op f x) (term81 A B op f x)). Qed.
Lemma lem5749322 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term83 A B op f x a) = (term84 A B op f x a).
Proof. exact (eq_refl (term83 A B op f x a)). Qed.
Lemma lem5749323 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) : (term1090 A B op f x) = (term81 A B op f x).
Proof. exact (fun_ext (fun a : B => @lem5749322 A B op f x a)). Qed.
Lemma lem5749324 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1277 A B _72434 op f x) = (term1277 A B _72434 op f x).
Proof. exact (eq_refl (term1277 A B _72434 op f x)). Qed.
Lemma lem5749325 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72434 op f x) = (term1090 A B op f x)) = ((_72434 op f x) = (term81 A B op f x)).
Proof. exact (MK_COMB (@lem5749324 A B _72434 op f x) (@lem5749323 A B op f x)). Qed.
Lemma lem5749326 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5749327 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1321 A B _72434 op f x) = (term1322 A B _72434 op f x).
Proof. exact (MK_COMB (@lem5749326) (@lem5749325 A B _72434 op f x)). Qed.
Lemma lem5749328 {A B : Type'} (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term83 A B op f x a) = (term84 A B op f x a).
Proof. exact (eq_refl (term83 A B op f x a)). Qed.
Lemma lem5749329 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : (term1323 A B _72434 op f x a) = (term1323 A B _72434 op f x a).
Proof. exact (eq_refl (term1323 A B _72434 op f x a)). Qed.
Lemma lem5749330 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : ((_72434 op f x a) = (term83 A B op f x a)) = ((_72434 op f x a) = (term84 A B op f x a)).
Proof. exact (MK_COMB (@lem5749329 A B _72434 op f x a) (@lem5749328 A B op f x a)). Qed.
Lemma lem5749331 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1324 A B _72434 op f x) = (term1325 A B _72434 op f x).
Proof. exact (fun_ext (fun a : B => @lem5749330 A B _72434 op f x a)). Qed.
Lemma lem5749332 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749333 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1320 A B _72434 op f x) = (term1326 A B _72434 op f x).
Proof. exact (MK_COMB (@lem5749332 B) (@lem5749331 A B _72434 op f x)). Qed.
Lemma lem5749334 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (((_72434 op f x) = (term1090 A B op f x)) = (term1320 A B _72434 op f x)) = (((_72434 op f x) = (term81 A B op f x)) = (term1326 A B _72434 op f x)).
Proof. exact (MK_COMB (@lem5749327 A B _72434 op f x) (@lem5749333 A B _72434 op f x)). Qed.
Lemma lem5749335 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72434 op f x) = (term81 A B op f x)) = (term1326 A B _72434 op f x).
Proof. exact (EQ_MP (@lem5749334 A B _72434 op f x) (@lem5749321 A B _72434 op f x)). Qed.
Lemma lem5749336 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : ((_72434 op f x a) = (term84 A B op f x a)) = ((_72434 op f x a) = (term84 A B op f x a)).
Proof. exact (eq_refl ((_72434 op f x a) = (term84 A B op f x a))). Qed.
Lemma lem5749337 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1325 A B _72434 op f x) = (term1325 A B _72434 op f x).
Proof. exact (fun_ext (fun a : B => @lem5749336 A B _72434 op f x a)). Qed.
Lemma lem5749338 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749339 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1326 A B _72434 op f x) = (term1326 A B _72434 op f x).
Proof. exact (MK_COMB (@lem5749338 B) (@lem5749337 A B _72434 op f x)). Qed.
Lemma lem5749340 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72434 op f x) = (term81 A B op f x)) = (term1326 A B _72434 op f x).
Proof. exact (TRANS (@lem5749335 A B _72434 op f x) (@lem5749339 A B _72434 op f x)). Qed.
Lemma lem5749341 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1279 A B _72434 op f) = (term1327 A B _72434 op f).
Proof. exact (fun_ext (fun x : A => @lem5749340 A B _72434 op f x)). Qed.
Lemma lem5749342 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749343 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1280 A B _72434 op f) = (term1328 A B _72434 op f).
Proof. exact (MK_COMB (@lem5749342 A) (@lem5749341 A B _72434 op f)). Qed.
Lemma lem5749344 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : ((_72434 op f) = (term14 A B op f)) = (term1328 A B _72434 op f).
Proof. exact (TRANS (@lem5749317 A B _72434 op f) (@lem5749343 A B _72434 op f)). Qed.
Lemma lem5749345 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1270 A B _72434 op) = (term1329 A B _72434 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749344 A B _72434 op f)). Qed.
Lemma lem5749346 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749347 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1271 A B _72434 op) = (term1330 A B _72434 op).
Proof. exact (MK_COMB (@lem5749346 A B) (@lem5749345 A B _72434 op)). Qed.
Lemma lem5749348 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : ((_72434 op) = (term1184 A B op)) = (term1330 A B _72434 op).
Proof. exact (TRANS (@lem5749299 A B _72434 op) (@lem5749347 A B _72434 op)). Qed.
Lemma lem5749349 {A B : Type'} (_72434 : type749 A B) : (term1261 A B _72434) = (term1331 A B _72434).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749348 A B _72434 op)). Qed.
Lemma lem5749350 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749351 {A B : Type'} (_72434 : type749 A B) : (term1262 A B _72434) = (term1332 A B _72434).
Proof. exact (MK_COMB (@lem5749350 B) (@lem5749349 A B _72434)). Qed.
Lemma lem5749352 {A B : Type'} (_72434 : type749 A B) : (_72434 = (term1182 A B)) = (term1332 A B _72434).
Proof. exact (TRANS (@lem5749281 A B _72434) (@lem5749351 A B _72434)). Qed.
Lemma lem5749353 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749354 {A B : Type'} (_72434 : type749 A B) : (term1238 A B _72434) = (term1333 A B _72434).
Proof. exact (MK_COMB (@lem5749353) (@lem5749352 A B _72434)). Qed.
Lemma lem5749355 {A B : Type'} (_72434 : type749 A B) : (term1480 A B _72434) = (term1480 A B _72434).
Proof. exact (eq_refl (term1480 A B _72434)). Qed.
Lemma lem5749356 {A B : Type'} (_72434 : type749 A B) : (term1494 A B _72434) = (term1500 A B _72434).
Proof. exact (MK_COMB (@lem5749354 A B _72434) (@lem5749355 A B _72434)). Qed.
Lemma lem5749357 {A B : Type'} : (term1496 A B) = (term1501 A B).
Proof. exact (fun_ext (fun _72434 : type749 A B => @lem5749356 A B _72434)). Qed.
Lemma lem5749358 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5749359 {A B : Type'} : (term1498 A B) = (term1502 A B).
Proof. exact (MK_COMB (@lem5749358 A B) (@lem5749357 A B)). Qed.
Lemma lem5749360 {A B : Type'} : (term1486 A B) = (term1486 A B).
Proof. exact (eq_refl (term1486 A B)). Qed.
Lemma lem5749361 {A B : Type'} : ((term1477 A B) = (term1498 A B)) = ((term1477 A B) = (term1502 A B)).
Proof. exact (MK_COMB (@lem5749360 A B) (@lem5749359 A B)). Qed.
Lemma lem5749364 {A B : Type'} : (term1477 A B) = (term1502 A B).
Proof. exact (EQ_MP (@lem5749361 A B) (@lem5749263 A B)). Qed.
Lemma lem5749365 {A B : Type'} : (term1437 A B) = (term1502 A B).
Proof. exact (TRANS (@lem5748906 A B) (@lem5749364 A B)). Qed.
Lemma lem5749366 {A B : Type'} : (term1425 A B) = (term1502 A B).
Proof. exact (TRANS (@lem5748518 A B) (@lem5749365 A B)). Qed.
Lemma lem5749367 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5749368 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5749367 B op x)). Qed.
Lemma lem5749369 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749370 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5749369 B) (@lem5749368 B op)). Qed.
Lemma lem5749371 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5749372 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5749371 B op x y z)). Qed.
Lemma lem5749373 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749374 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5749373 B) (@lem5749372 B op x y)). Qed.
Lemma lem5749375 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5749374 B op x y)). Qed.
Lemma lem5749376 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749377 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5749376 B) (@lem5749375 B op x)). Qed.
Lemma lem5749378 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5749377 B op x)). Qed.
Lemma lem5749379 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749380 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5749379 B) (@lem5749378 B op)). Qed.
Lemma lem5749381 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5749382 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5749381) (@lem5749380 B op)). Qed.
Lemma lem5749383 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5749382 B op) (@lem5749370 B op)). Qed.
Lemma lem5749384 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5749385 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5749384 B op y x)). Qed.
Lemma lem5749386 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749387 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5749386 B) (@lem5749385 B op x)). Qed.
Lemma lem5749388 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5749387 B op x)). Qed.
Lemma lem5749389 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749390 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5749389 B) (@lem5749388 B op)). Qed.
Lemma lem5749391 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5749392 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5749391) (@lem5749390 B op)). Qed.
Lemma lem5749393 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5749392 B op) (@lem5749383 B op)). Qed.
Lemma lem5749396 {B : Type'} (op : type1400 B) : (term131 B op) = (term131 B op).
Proof. exact (eq_refl (term131 B op)). Qed.
Lemma lem5749397 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = ((@monoidal B op) = (term130 B op)).
Proof. exact (MK_COMB (@lem5749396 B op) (@lem5749393 B op)). Qed.
Lemma lem5749398 {B : Type'} : (term132 B) = (term132 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749397 B op)). Qed.
Lemma lem5749399 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749400 {B : Type'} : (term57 B) = (term57 B).
Proof. exact (MK_COMB (@lem5749399 B) (@lem5749398 B)). Qed.
Lemma lem5749401 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5749402 {B : Type'} : (term63 B) = (term63 B).
Proof. exact (MK_COMB (@lem5749401) (@lem5749400 B)). Qed.
Lemma lem5749407 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1440 A B _72433 f s op) = (term1440 A B _72433 f s op).
Proof. exact (eq_refl (term1440 A B _72433 f s op)). Qed.
Lemma lem5749408 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1441 A B _72433 f s op) = (term1441 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5749407 A B _72433 f s op) (@lem5749402 B)). Qed.
Lemma lem5749413 {A : Type'} (x : A) (s : A -> Prop) : (term1104 A x s) = (term1104 A x s).
Proof. exact (eq_refl (term1104 A x s)). Qed.
Lemma lem5749414 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1442 A B x _72433 f s op) = (term1442 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749413 A x s) (@lem5749408 A B _72433 f s op)). Qed.
Lemma lem5749417 {A B : Type'} (f : A -> B) (x : A) (op : type1400 B) : (term1126 A B f x op) = (term1126 A B f x op).
Proof. exact (eq_refl (term1126 A B f x op)). Qed.
Lemma lem5749418 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1443 A B x _72433 f s op) = (term1443 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749417 A B f x op) (@lem5749414 A B x _72433 f s op)). Qed.
Lemma lem5749421 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1129 A B op f s) = (term1129 A B op f s).
Proof. exact (eq_refl (term1129 A B op f s)). Qed.
Lemma lem5749422 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1444 A B x _72433 f s op) = (term1444 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749421 A B op f s) (@lem5749418 A B x _72433 f s op)). Qed.
Lemma lem5749426 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (@IN A x s) = False.
Proof. exact (h1). Qed.
Lemma lem5749427 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5749428 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term967 A B x s) = (@COND B False).
Proof. exact (MK_COMB (@lem5749427 B) (@lem5749426 A x s h1)). Qed.
Lemma lem5749429 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1200 A B _72433 f s op) = (term1200 A B _72433 f s op).
Proof. exact (eq_refl (term1200 A B _72433 f s op)). Qed.
Lemma lem5749430 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1202 A B x _72433 f s op) = (term1337 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5749428 A B x s h1) (@lem5749429 A B _72433 f s op)). Qed.
Lemma lem5749431 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1201 A B x _72433 f s op) = (term1201 A B x _72433 f s op).
Proof. exact (eq_refl (term1201 A B x _72433 f s op)). Qed.
Lemma lem5749432 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1203 A B x _72433 f s op) = (term1338 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749430 A B _72433 f op x s h1) (@lem5749431 A B x _72433 f s op)). Qed.
Lemma lem5749434 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem5749435 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem5749434 B t1 t2). Qed.
Lemma lem5749436 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1338 A B x _72433 f s op) = (term1201 A B x _72433 f s op).
Proof. exact (@lem5749435 B (term1200 A B _72433 f s op) (term1201 A B x _72433 f s op)). Qed.
Lemma lem5749437 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1203 A B x _72433 f s op) = (term1201 A B x _72433 f s op).
Proof. exact (TRANS (@lem5749432 A B _72433 f op x s h1) (@lem5749436 A B x _72433 f s op)). Qed.
Lemma lem5749438 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term1207 A B _72433 f x s op) = (term1207 A B _72433 f x s op).
Proof. exact (eq_refl (term1207 A B _72433 f x s op)). Qed.
Lemma lem5749439 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : ((term1206 A B _72433 f x s op) = (term1203 A B x _72433 f s op)) = ((term1206 A B _72433 f x s op) = (term1201 A B x _72433 f s op)).
Proof. exact (MK_COMB (@lem5749438 A B _72433 f x s op) (@lem5749437 A B _72433 f op x s h1)). Qed.
Lemma lem5749442 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5749443 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = False) : (term1208 A B x _72433 f s op) = (term1339 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749442 A s) (@lem5749439 A B _72433 f op x s h1)). Qed.
Lemma lem5749446 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1340 A B x _72433 f s op.
Proof. exact (fun h0 : (@IN A x s) = False => @lem5749443 A B _72433 f op x s h0). Qed.
Lemma lem5749448 {A : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (@IN A x s) = True.
Proof. exact (h1). Qed.
Lemma lem5749449 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem5749450 {A B : Type'} (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term967 A B x s) = (@COND B True).
Proof. exact (MK_COMB (@lem5749449 B) (@lem5749448 A x s h1)). Qed.
Lemma lem5749451 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1200 A B _72433 f s op) = (term1200 A B _72433 f s op).
Proof. exact (eq_refl (term1200 A B _72433 f s op)). Qed.
Lemma lem5749452 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1202 A B x _72433 f s op) = (term1341 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5749450 A B x s h1) (@lem5749451 A B _72433 f s op)). Qed.
Lemma lem5749453 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1201 A B x _72433 f s op) = (term1201 A B x _72433 f s op).
Proof. exact (eq_refl (term1201 A B x _72433 f s op)). Qed.
Lemma lem5749454 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1203 A B x _72433 f s op) = (term1342 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749452 A B _72433 f op x s h1) (@lem5749453 A B x _72433 f s op)). Qed.
Lemma lem5749456 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem5749457 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem5749456 B t2 t1). Qed.
Lemma lem5749458 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1342 A B x _72433 f s op) = (term1200 A B _72433 f s op).
Proof. exact (@lem5749457 B (term1201 A B x _72433 f s op) (term1200 A B _72433 f s op)). Qed.
Lemma lem5749459 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1203 A B x _72433 f s op) = (term1200 A B _72433 f s op).
Proof. exact (TRANS (@lem5749454 A B _72433 f op x s h1) (@lem5749458 A B x _72433 f s op)). Qed.
Lemma lem5749460 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (x : A) (s : A -> Prop) (op : type1400 B) : (term1207 A B _72433 f x s op) = (term1207 A B _72433 f x s op).
Proof. exact (eq_refl (term1207 A B _72433 f x s op)). Qed.
Lemma lem5749461 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : ((term1206 A B _72433 f x s op) = (term1203 A B x _72433 f s op)) = ((term1206 A B _72433 f x s op) = (term1200 A B _72433 f s op)).
Proof. exact (MK_COMB (@lem5749460 A B _72433 f x s op) (@lem5749459 A B _72433 f op x s h1)). Qed.
Lemma lem5749464 {A : Type'} (s : A -> Prop) : (term1162 A s) = (term1162 A s).
Proof. exact (eq_refl (term1162 A s)). Qed.
Lemma lem5749465 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : (@IN A x s) = True) : (term1208 A B x _72433 f s op) = (term1343 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749464 A s) (@lem5749461 A B _72433 f op x s h1)). Qed.
Lemma lem5749468 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1344 A B x _72433 f s op.
Proof. exact (fun h0 : (@IN A x s) = True => @lem5749465 A B _72433 f op x s h0). Qed.
Lemma lem5749469 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1345 A B x _72433 f s op.
Proof. exact (conj (@lem5749446 A B x _72433 f s op) (@lem5749468 A B x _72433 f s op)). Qed.
Lemma lem5749471 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1346 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem5749472 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1347 A B x _72433 f s op.
Proof. exact (@lem5749471 (term1208 A B x _72433 f s op) (term1343 A B x _72433 f s op) (@IN A x s) (term1339 A B x _72433 f s op)). Qed.
Lemma lem5749513 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1208 A B x _72433 f s op) = (term1348 A B x _72433 f s op).
Proof. exact (@lem5749472 A B x _72433 f s op (@lem5749469 A B x _72433 f s op)). Qed.
Lemma lem5749514 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1209 A B x _72433 f op) = (term1349 A B x _72433 f op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5749513 A B x _72433 f s op)). Qed.
Lemma lem5749515 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5749516 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1210 A B x _72433 f op) = (term1350 A B x _72433 f op).
Proof. exact (MK_COMB (@lem5749515 A) (@lem5749514 A B x _72433 f op)). Qed.
Lemma lem5749517 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1211 A B _72433 f op) = (term1351 A B _72433 f op).
Proof. exact (fun_ext (fun x : A => @lem5749516 A B x _72433 f op)). Qed.
Lemma lem5749518 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749519 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1212 A B _72433 f op) = (term1352 A B _72433 f op).
Proof. exact (MK_COMB (@lem5749518 A) (@lem5749517 A B _72433 f op)). Qed.
Lemma lem5749520 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749521 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1213 A B _72433 f op) = (term1353 A B _72433 f op).
Proof. exact (MK_COMB (@lem5749520) (@lem5749519 A B _72433 f op)). Qed.
Lemma lem5749522 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1445 A B x _72433 f s op) = (term1503 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749521 A B _72433 f op) (@lem5749422 A B x _72433 f s op)). Qed.
Lemma lem5749525 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (op : type1400 B) : (term1219 A B _72433 f op) = (term1219 A B _72433 f op).
Proof. exact (eq_refl (term1219 A B _72433 f op)). Qed.
Lemma lem5749526 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1446 A B x _72433 f s op) = (term1504 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749525 A B _72433 f op) (@lem5749522 A B x _72433 f s op)). Qed.
Lemma lem5749529 {B : Type'} (op : type1400 B) : (term70 B op) = (term70 B op).
Proof. exact (eq_refl (term70 B op)). Qed.
Lemma lem5749530 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1447 A B x _72433 f s op) = (term1505 A B x _72433 f s op).
Proof. exact (MK_COMB (@lem5749529 B op) (@lem5749526 A B x _72433 f s op)). Qed.
Lemma lem5749531 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1448 A B _72433 f s op) = (term1506 A B _72433 f s op).
Proof. exact (fun_ext (fun x : A => @lem5749530 A B x _72433 f s op)). Qed.
Lemma lem5749532 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749533 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1449 A B _72433 f s op) = (term1507 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5749532 A) (@lem5749531 A B _72433 f s op)). Qed.
Lemma lem5749534 {A B : Type'} (_72433 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1450 A B _72433 s op) = (term1508 A B _72433 s op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749533 A B _72433 f s op)). Qed.
Lemma lem5749535 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749536 {A B : Type'} (_72433 : type749 A B) (s : A -> Prop) (op : type1400 B) : (term1451 A B _72433 s op) = (term1509 A B _72433 s op).
Proof. exact (MK_COMB (@lem5749535 A B) (@lem5749534 A B _72433 s op)). Qed.
Lemma lem5749537 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1452 A B _72433 op) = (term1510 A B _72433 op).
Proof. exact (fun_ext (fun s : A -> Prop => @lem5749536 A B _72433 s op)). Qed.
Lemma lem5749538 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem5749539 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (term1453 A B _72433 op) = (term1511 A B _72433 op).
Proof. exact (MK_COMB (@lem5749538 A) (@lem5749537 A B _72433 op)). Qed.
Lemma lem5749540 {A B : Type'} (_72433 : type749 A B) : (term1454 A B _72433) = (term1512 A B _72433).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749539 A B _72433 op)). Qed.
Lemma lem5749541 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749542 {A B : Type'} (_72433 : type749 A B) : (term1455 A B _72433) = (term1513 A B _72433).
Proof. exact (MK_COMB (@lem5749541 B) (@lem5749540 A B _72433)). Qed.
Lemma lem5749543 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : ((_72433 op f x) = (_72434 op f x)) = ((_72433 op f x) = (_72434 op f x)).
Proof. exact (eq_refl ((_72433 op f x) = (_72434 op f x))). Qed.
Lemma lem5749544 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1289 A B _72433 _72434 op f) = (term1289 A B _72433 _72434 op f).
Proof. exact (fun_ext (fun x : A => @lem5749543 A B _72433 _72434 op f x)). Qed.
Lemma lem5749545 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749546 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1290 A B _72433 _72434 op f) = (term1290 A B _72433 _72434 op f).
Proof. exact (MK_COMB (@lem5749545 A) (@lem5749544 A B _72433 _72434 op f)). Qed.
Lemma lem5749547 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (op : type1400 B) : (term1291 A B _72433 _72434 op) = (term1291 A B _72433 _72434 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749546 A B _72433 _72434 op f)). Qed.
Lemma lem5749548 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749549 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) (op : type1400 B) : (term1292 A B _72433 _72434 op) = (term1292 A B _72433 _72434 op).
Proof. exact (MK_COMB (@lem5749548 A B) (@lem5749547 A B _72433 _72434 op)). Qed.
Lemma lem5749550 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) : (term1293 A B _72433 _72434) = (term1293 A B _72433 _72434).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749549 A B _72433 _72434 op)). Qed.
Lemma lem5749551 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749552 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) : (term1294 A B _72433 _72434) = (term1294 A B _72433 _72434).
Proof. exact (MK_COMB (@lem5749551 B) (@lem5749550 A B _72433 _72434)). Qed.
Lemma lem5749553 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749554 {A B : Type'} (_72433 : type749 A B) (_72434 : type749 A B) : (term1295 A B _72433 _72434) = (term1295 A B _72433 _72434).
Proof. exact (MK_COMB (@lem5749553) (@lem5749552 A B _72433 _72434)). Qed.
Lemma lem5749555 {A B : Type'} (_72434 : type749 A B) (_72433 : type749 A B) : (term1478 A B _72434 _72433) = (term1514 A B _72434 _72433).
Proof. exact (MK_COMB (@lem5749554 A B _72433 _72434) (@lem5749542 A B _72433)). Qed.
Lemma lem5749556 {A B : Type'} (_72434 : type749 A B) : (term1479 A B _72434) = (term1515 A B _72434).
Proof. exact (fun_ext (fun _72433 : type749 A B => @lem5749555 A B _72434 _72433)). Qed.
Lemma lem5749557 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5749558 {A B : Type'} (_72434 : type749 A B) : (term1480 A B _72434) = (term1516 A B _72434).
Proof. exact (MK_COMB (@lem5749557 A B) (@lem5749556 A B _72434)). Qed.
Lemma lem5749559 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) (a : B) : ((_72434 op f x a) = (term84 A B op f x a)) = ((_72434 op f x a) = (term84 A B op f x a)).
Proof. exact (eq_refl ((_72434 op f x a) = (term84 A B op f x a))). Qed.
Lemma lem5749560 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1325 A B _72434 op f x) = (term1325 A B _72434 op f x).
Proof. exact (fun_ext (fun a : B => @lem5749559 A B _72434 op f x a)). Qed.
Lemma lem5749561 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5749562 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) (x : A) : (term1326 A B _72434 op f x) = (term1326 A B _72434 op f x).
Proof. exact (MK_COMB (@lem5749561 B) (@lem5749560 A B _72434 op f x)). Qed.
Lemma lem5749563 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1327 A B _72434 op f) = (term1327 A B _72434 op f).
Proof. exact (fun_ext (fun x : A => @lem5749562 A B _72434 op f x)). Qed.
Lemma lem5749564 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem5749565 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) (f : A -> B) : (term1328 A B _72434 op f) = (term1328 A B _72434 op f).
Proof. exact (MK_COMB (@lem5749564 A) (@lem5749563 A B _72434 op f)). Qed.
Lemma lem5749566 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1329 A B _72434 op) = (term1329 A B _72434 op).
Proof. exact (fun_ext (fun f : A -> B => @lem5749565 A B _72434 op f)). Qed.
Lemma lem5749567 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem5749568 {A B : Type'} (_72434 : type749 A B) (op : type1400 B) : (term1330 A B _72434 op) = (term1330 A B _72434 op).
Proof. exact (MK_COMB (@lem5749567 A B) (@lem5749566 A B _72434 op)). Qed.
Lemma lem5749569 {A B : Type'} (_72434 : type749 A B) : (term1331 A B _72434) = (term1331 A B _72434).
Proof. exact (fun_ext (fun op : type1400 B => @lem5749568 A B _72434 op)). Qed.
Lemma lem5749570 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5749571 {A B : Type'} (_72434 : type749 A B) : (term1332 A B _72434) = (term1332 A B _72434).
Proof. exact (MK_COMB (@lem5749570 B) (@lem5749569 A B _72434)). Qed.
Lemma lem5749572 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5749573 {A B : Type'} (_72434 : type749 A B) : (term1333 A B _72434) = (term1333 A B _72434).
Proof. exact (MK_COMB (@lem5749572) (@lem5749571 A B _72434)). Qed.
Lemma lem5749574 {A B : Type'} (_72434 : type749 A B) : (term1500 A B _72434) = (term1517 A B _72434).
Proof. exact (MK_COMB (@lem5749573 A B _72434) (@lem5749558 A B _72434)). Qed.
Lemma lem5749575 {A B : Type'} : (term1501 A B) = (term1518 A B).
Proof. exact (fun_ext (fun _72434 : type749 A B => @lem5749574 A B _72434)). Qed.
Lemma lem5749576 {A B : Type'} : (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)) = (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B)).
Proof. exact (eq_refl (@all ((B -> B -> B) -> (A -> B) -> A -> B -> B))). Qed.
Lemma lem5749577 {A B : Type'} : (term1502 A B) = (term1519 A B).
Proof. exact (MK_COMB (@lem5749576 A B) (@lem5749575 A B)). Qed.
Lemma lem5749744 {A B : Type'} : (term1425 A B) = (term1519 A B).
Proof. exact (TRANS (@lem5749366 A B) (@lem5749577 A B)). Qed.
Lemma lem5749745 {A B : Type'} : (term1519 A B) = (term1425 A B).
Proof. exact (SYM (@lem5749744 A B)). Qed.
Lemma lem5749755 {B : Type'} (h1 : term57 B) : term57 B.
Proof. exact (h1). Qed.
Lemma lem5749822 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @monoidal B op.
Proof. exact (h1). Qed.
Lemma lem5750149 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1439 A B _72433 f s op) : term1439 A B _72433 f s op.
Proof. exact (h1). Qed.
Lemma lem5750153 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((op x y) = (op y x)).
Proof. exact (eq_refl ((op x y) = (op y x))). Qed.
Lemma lem5750154 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5750155 {B : Type'} (op : type1400 B) (x : B) : (term180 B op x) = (term181 B op x).
Proof. exact (@lem5750154 B (term125 B op x)). Qed.
Lemma lem5750156 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term182 B op x y) = ((op x y) = (op y x)).
Proof. exact (eq_refl (term182 B op x y)). Qed.
Lemma lem5750157 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5750159 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term183 B op x y) = (term184 B op y x).
Proof. exact (MK_COMB (@lem5750157) (@lem5750156 B op y x)). Qed.
Lemma lem5750160 {B : Type'} (op : type1400 B) (x : B) : (term185 B op x) = (term186 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750159 B op y x)). Qed.
Lemma lem5750161 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750162 {B : Type'} (op : type1400 B) (x : B) : (term181 B op x) = (term187 B op x).
Proof. exact (MK_COMB (@lem5750161 B) (@lem5750160 B op x)). Qed.
Lemma lem5750163 {B : Type'} (op : type1400 B) (x : B) : (term180 B op x) = (term187 B op x).
Proof. exact (TRANS (@lem5750155 B op x) (@lem5750162 B op x)). Qed.
Lemma lem5750164 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term125 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750153 B op y x)). Qed.
Lemma lem5750165 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5750166 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term126 B op x).
Proof. exact (MK_COMB (@lem5750165 B) (@lem5750164 B op x)). Qed.
Lemma lem5750167 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5750168 {B : Type'} (op : type1400 B) : (term188 B op) = (term189 B op).
Proof. exact (@lem5750167 B (term127 B op)). Qed.
Lemma lem5750169 {B : Type'} (op : type1400 B) (x : B) : (term190 B op x) = (term126 B op x).
Proof. exact (eq_refl (term190 B op x)). Qed.
Lemma lem5750170 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5750171 {B : Type'} (op : type1400 B) (x : B) : (term191 B op x) = (term180 B op x).
Proof. exact (MK_COMB (@lem5750170) (@lem5750169 B op x)). Qed.
Lemma lem5750172 {B : Type'} (op : type1400 B) (x : B) : (term191 B op x) = (term187 B op x).
Proof. exact (TRANS (@lem5750171 B op x) (@lem5750163 B op x)). Qed.
Lemma lem5750173 {B : Type'} (op : type1400 B) : (term192 B op) = (term193 B op).
Proof. exact (fun_ext (fun x : B => @lem5750172 B op x)). Qed.
Lemma lem5750174 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750175 {B : Type'} (op : type1400 B) : (term189 B op) = (term194 B op).
Proof. exact (MK_COMB (@lem5750174 B) (@lem5750173 B op)). Qed.
Lemma lem5750176 {B : Type'} (op : type1400 B) : (term188 B op) = (term194 B op).
Proof. exact (TRANS (@lem5750168 B op) (@lem5750175 B op)). Qed.
Lemma lem5750177 {B : Type'} (op : type1400 B) : (term127 B op) = (term127 B op).
Proof. exact (fun_ext (fun x : B => @lem5750166 B op x)). Qed.
Lemma lem5750178 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5750179 {B : Type'} (op : type1400 B) : (term128 B op) = (term128 B op).
Proof. exact (MK_COMB (@lem5750178 B) (@lem5750177 B op)). Qed.
Lemma lem5750181 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl ((term115 B x op y z) = (term116 B op x y z))). Qed.
Lemma lem5750182 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5750183 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term195 B op x y) = (term196 B op x y).
Proof. exact (@lem5750182 B (term117 B op x y)). Qed.
Lemma lem5750184 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term197 B op x y z) = ((term115 B x op y z) = (term116 B op x y z)).
Proof. exact (eq_refl (term197 B op x y z)). Qed.
Lemma lem5750185 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5750187 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term198 B op x y z) = (term199 B op x y z).
Proof. exact (MK_COMB (@lem5750185) (@lem5750184 B op x y z)). Qed.
Lemma lem5750188 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term200 B op x y) = (term201 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5750187 B op x y z)). Qed.
Lemma lem5750189 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750190 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term196 B op x y) = (term202 B op x y).
Proof. exact (MK_COMB (@lem5750189 B) (@lem5750188 B op x y)). Qed.
Lemma lem5750191 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term195 B op x y) = (term202 B op x y).
Proof. exact (TRANS (@lem5750183 B op x y) (@lem5750190 B op x y)). Qed.
Lemma lem5750192 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term117 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5750181 B op x y z)). Qed.
Lemma lem5750193 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5750194 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term118 B op x y).
Proof. exact (MK_COMB (@lem5750193 B) (@lem5750192 B op x y)). Qed.
Lemma lem5750195 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5750196 {B : Type'} (op : type1400 B) (x : B) : (term203 B op x) = (term204 B op x).
Proof. exact (@lem5750195 B (term119 B op x)). Qed.
Lemma lem5750197 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term205 B op x y) = (term118 B op x y).
Proof. exact (eq_refl (term205 B op x y)). Qed.
Lemma lem5750198 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5750199 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term206 B op x y) = (term195 B op x y).
Proof. exact (MK_COMB (@lem5750198) (@lem5750197 B op x y)). Qed.
Lemma lem5750200 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term206 B op x y) = (term202 B op x y).
Proof. exact (TRANS (@lem5750199 B op x y) (@lem5750191 B op x y)). Qed.
Lemma lem5750201 {B : Type'} (op : type1400 B) (x : B) : (term207 B op x) = (term208 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750200 B op x y)). Qed.
Lemma lem5750202 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750203 {B : Type'} (op : type1400 B) (x : B) : (term204 B op x) = (term209 B op x).
Proof. exact (MK_COMB (@lem5750202 B) (@lem5750201 B op x)). Qed.
Lemma lem5750204 {B : Type'} (op : type1400 B) (x : B) : (term203 B op x) = (term209 B op x).
Proof. exact (TRANS (@lem5750196 B op x) (@lem5750203 B op x)). Qed.
Lemma lem5750205 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term119 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750194 B op x y)). Qed.
Lemma lem5750206 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5750207 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term120 B op x).
Proof. exact (MK_COMB (@lem5750206 B) (@lem5750205 B op x)). Qed.
Lemma lem5750208 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5750209 {B : Type'} (op : type1400 B) : (term210 B op) = (term211 B op).
Proof. exact (@lem5750208 B (term121 B op)). Qed.
Lemma lem5750210 {B : Type'} (op : type1400 B) (x : B) : (term212 B op x) = (term120 B op x).
Proof. exact (eq_refl (term212 B op x)). Qed.
Lemma lem5750211 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5750212 {B : Type'} (op : type1400 B) (x : B) : (term213 B op x) = (term203 B op x).
Proof. exact (MK_COMB (@lem5750211) (@lem5750210 B op x)). Qed.
Lemma lem5750213 {B : Type'} (op : type1400 B) (x : B) : (term213 B op x) = (term209 B op x).
Proof. exact (TRANS (@lem5750212 B op x) (@lem5750204 B op x)). Qed.
Lemma lem5750214 {B : Type'} (op : type1400 B) : (term214 B op) = (term215 B op).
Proof. exact (fun_ext (fun x : B => @lem5750213 B op x)). Qed.
Lemma lem5750215 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750216 {B : Type'} (op : type1400 B) : (term211 B op) = (term216 B op).
Proof. exact (MK_COMB (@lem5750215 B) (@lem5750214 B op)). Qed.
Lemma lem5750217 {B : Type'} (op : type1400 B) : (term210 B op) = (term216 B op).
Proof. exact (TRANS (@lem5750209 B op) (@lem5750216 B op)). Qed.
Lemma lem5750218 {B : Type'} (op : type1400 B) : (term121 B op) = (term121 B op).
Proof. exact (fun_ext (fun x : B => @lem5750207 B op x)). Qed.
Lemma lem5750219 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5750220 {B : Type'} (op : type1400 B) : (term122 B op) = (term122 B op).
Proof. exact (MK_COMB (@lem5750219 B) (@lem5750218 B op)). Qed.
Lemma lem5750222 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term112 B op x) = x).
Proof. exact (eq_refl ((term112 B op x) = x)). Qed.
Lemma lem5750223 {B : Type'} (P : B -> Prop) : (term136 B P) = (term137 B P).
Proof. exact (@lem18392 B P). Qed.
Lemma lem5750224 {B : Type'} (op : type1400 B) : (term217 B op) = (term218 B op).
Proof. exact (@lem5750223 B (term113 B op)). Qed.
Lemma lem5750225 {B : Type'} (op : type1400 B) (x : B) : (term219 B op x) = ((term112 B op x) = x).
Proof. exact (eq_refl (term219 B op x)). Qed.
Lemma lem5750226 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5750228 {B : Type'} (op : type1400 B) (x : B) : (term220 B op x) = (term221 B op x).
Proof. exact (MK_COMB (@lem5750226) (@lem5750225 B op x)). Qed.
Lemma lem5750229 {B : Type'} (op : type1400 B) : (term222 B op) = (term223 B op).
Proof. exact (fun_ext (fun x : B => @lem5750228 B op x)). Qed.
Lemma lem5750230 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750231 {B : Type'} (op : type1400 B) : (term218 B op) = (term224 B op).
Proof. exact (MK_COMB (@lem5750230 B) (@lem5750229 B op)). Qed.
Lemma lem5750232 {B : Type'} (op : type1400 B) : (term217 B op) = (term224 B op).
Proof. exact (TRANS (@lem5750224 B op) (@lem5750231 B op)). Qed.
Lemma lem5750233 {B : Type'} (op : type1400 B) : (term113 B op) = (term113 B op).
Proof. exact (fun_ext (fun x : B => @lem5750222 B op x)). Qed.
Lemma lem5750234 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5750235 {B : Type'} (op : type1400 B) : (term114 B op) = (term114 B op).
Proof. exact (MK_COMB (@lem5750234 B) (@lem5750233 B op)). Qed.
Lemma lem5750236 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750237 {B : Type'} (op : type1400 B) : (term225 B op) = (term226 B op).
Proof. exact (MK_COMB (@lem5750236) (@lem5750217 B op)). Qed.
Lemma lem5750238 {B : Type'} (op : type1400 B) : (term227 B op) = (term228 B op).
Proof. exact (MK_COMB (@lem5750237 B op) (@lem5750232 B op)). Qed.
Lemma lem5750239 {B : Type'} (op : type1400 B) : (term229 B op) = (term227 B op).
Proof. exact (@lem17045 (term122 B op) (term114 B op)). Qed.
Lemma lem5750240 {B : Type'} (op : type1400 B) : (term229 B op) = (term228 B op).
Proof. exact (TRANS (@lem5750239 B op) (@lem5750238 B op)). Qed.
Lemma lem5750241 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750242 {B : Type'} (op : type1400 B) : (term123 B op) = (term123 B op).
Proof. exact (MK_COMB (@lem5750241) (@lem5750220 B op)). Qed.
Lemma lem5750243 {B : Type'} (op : type1400 B) : (term124 B op) = (term124 B op).
Proof. exact (MK_COMB (@lem5750242 B op) (@lem5750235 B op)). Qed.
Lemma lem5750244 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750245 {B : Type'} (op : type1400 B) : (term230 B op) = (term231 B op).
Proof. exact (MK_COMB (@lem5750244) (@lem5750176 B op)). Qed.
Lemma lem5750246 {B : Type'} (op : type1400 B) : (term232 B op) = (term233 B op).
Proof. exact (MK_COMB (@lem5750245 B op) (@lem5750240 B op)). Qed.
Lemma lem5750247 {B : Type'} (op : type1400 B) : (term234 B op) = (term232 B op).
Proof. exact (@lem17045 (term128 B op) (term124 B op)). Qed.
Lemma lem5750248 {B : Type'} (op : type1400 B) : (term234 B op) = (term233 B op).
Proof. exact (TRANS (@lem5750247 B op) (@lem5750246 B op)). Qed.
Lemma lem5750249 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750250 {B : Type'} (op : type1400 B) : (term129 B op) = (term129 B op).
Proof. exact (MK_COMB (@lem5750249) (@lem5750179 B op)). Qed.
Lemma lem5750251 {B : Type'} (op : type1400 B) : (term130 B op) = (term130 B op).
Proof. exact (MK_COMB (@lem5750250 B op) (@lem5750243 B op)). Qed.
Lemma lem5750253 {B : Type'} (op : type1400 B) : (term235 B op) = (term235 B op).
Proof. exact (eq_refl (term235 B op)). Qed.
Lemma lem5750254 {B : Type'} (op : type1400 B) : (term236 B op) = (term236 B op).
Proof. exact (MK_COMB (@lem5750253 B op) (@lem5750251 B op)). Qed.
Lemma lem5750256 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750257 {B : Type'} (op : type1400 B) : (term238 B op) = (term239 B op).
Proof. exact (MK_COMB (@lem5750256 B op) (@lem5750248 B op)). Qed.
Lemma lem5750258 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750259 {B : Type'} (op : type1400 B) : (term240 B op) = (term241 B op).
Proof. exact (MK_COMB (@lem5750258) (@lem5750257 B op)). Qed.
Lemma lem5750260 {B : Type'} (op : type1400 B) : (term242 B op) = (term243 B op).
Proof. exact (MK_COMB (@lem5750259 B op) (@lem5750254 B op)). Qed.
Lemma lem5750261 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = (term242 B op).
Proof. exact (@lem17784 (@monoidal B op) (term130 B op)). Qed.
Lemma lem5750262 {B : Type'} (op : type1400 B) : ((@monoidal B op) = (term130 B op)) = (term243 B op).
Proof. exact (TRANS (@lem5750261 B op) (@lem5750260 B op)). Qed.
Lemma lem5750263 {B : Type'} : (term132 B) = (term244 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750262 B op)). Qed.
Lemma lem5750264 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750265 {B : Type'} : (term57 B) = (term245 B).
Proof. exact (MK_COMB (@lem5750264 B) (@lem5750263 B)). Qed.
Lemma lem5750267 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term22 A P Q) = (term21 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem5750268 {B : Type'} (P : type403 B) (Q : type403 B) : (term246 B P Q) = (term247 B P Q).
Proof. exact (@lem5750267 (type1400 B) P Q). Qed.
Lemma lem5750269 {B : Type'} : (term248 B) = (term249 B).
Proof. exact (@lem5750268 B (term250 B) (term251 B)). Qed.
Lemma lem5750270 {B : Type'} (op : type1400 B) : (term252 B op) = (term239 B op).
Proof. exact (eq_refl (term252 B op)). Qed.
Lemma lem5750271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750272 {B : Type'} (op : type1400 B) : (term253 B op) = (term241 B op).
Proof. exact (MK_COMB (@lem5750271) (@lem5750270 B op)). Qed.
Lemma lem5750273 {B : Type'} (op : type1400 B) : (term254 B op) = (term236 B op).
Proof. exact (eq_refl (term254 B op)). Qed.
Lemma lem5750274 {B : Type'} (op : type1400 B) : (term255 B op) = (term243 B op).
Proof. exact (MK_COMB (@lem5750272 B op) (@lem5750273 B op)). Qed.
Lemma lem5750275 {B : Type'} : (term256 B) = (term244 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750274 B op)). Qed.
Lemma lem5750276 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750277 {B : Type'} : (term248 B) = (term245 B).
Proof. exact (MK_COMB (@lem5750276 B) (@lem5750275 B)). Qed.
Lemma lem5750278 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750279 {B : Type'} : (term257 B) = (term258 B).
Proof. exact (MK_COMB (@lem5750278) (@lem5750277 B)). Qed.
Lemma lem5750280 {B : Type'} (op : type1400 B) : (term252 B op) = (term239 B op).
Proof. exact (eq_refl (term252 B op)). Qed.
Lemma lem5750281 {B : Type'} : (term259 B) = (term250 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750280 B op)). Qed.
Lemma lem5750282 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750283 {B : Type'} : (term260 B) = (term261 B).
Proof. exact (MK_COMB (@lem5750282 B) (@lem5750281 B)). Qed.
Lemma lem5750284 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750285 {B : Type'} : (term262 B) = (term263 B).
Proof. exact (MK_COMB (@lem5750284) (@lem5750283 B)). Qed.
Lemma lem5750286 {B : Type'} (op : type1400 B) : (term254 B op) = (term236 B op).
Proof. exact (eq_refl (term254 B op)). Qed.
Lemma lem5750287 {B : Type'} : (term264 B) = (term251 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750286 B op)). Qed.
Lemma lem5750288 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750289 {B : Type'} : (term265 B) = (term266 B).
Proof. exact (MK_COMB (@lem5750288 B) (@lem5750287 B)). Qed.
Lemma lem5750290 {B : Type'} : (term249 B) = (term267 B).
Proof. exact (MK_COMB (@lem5750285 B) (@lem5750289 B)). Qed.
Lemma lem5750291 {B : Type'} : ((term248 B) = (term249 B)) = ((term245 B) = (term267 B)).
Proof. exact (MK_COMB (@lem5750279 B) (@lem5750290 B)). Qed.
Lemma lem5750292 {B : Type'} : (term245 B) = (term267 B).
Proof. exact (EQ_MP (@lem5750291 B) (@lem5750269 B)). Qed.
Lemma lem5750418 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5750419 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5750418 B P Q). Qed.
Lemma lem5750420 {B : Type'} (op : type1400 B) : (term270 B op) = (term271 B op).
Proof. exact (@lem5750419 B (term215 B op) (term223 B op)). Qed.
Lemma lem5750421 {B : Type'} (op : type1400 B) (x : B) : (term272 B op x) = (term209 B op x).
Proof. exact (eq_refl (term272 B op x)). Qed.
Lemma lem5750422 {B : Type'} (op : type1400 B) : (term273 B op) = (term215 B op).
Proof. exact (fun_ext (fun x : B => @lem5750421 B op x)). Qed.
Lemma lem5750423 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750424 {B : Type'} (op : type1400 B) : (term274 B op) = (term216 B op).
Proof. exact (MK_COMB (@lem5750423 B) (@lem5750422 B op)). Qed.
Lemma lem5750425 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750426 {B : Type'} (op : type1400 B) : (term275 B op) = (term226 B op).
Proof. exact (MK_COMB (@lem5750425) (@lem5750424 B op)). Qed.
Lemma lem5750427 {B : Type'} (op : type1400 B) (x : B) : (term276 B op x) = (term221 B op x).
Proof. exact (eq_refl (term276 B op x)). Qed.
Lemma lem5750428 {B : Type'} (op : type1400 B) : (term277 B op) = (term223 B op).
Proof. exact (fun_ext (fun x : B => @lem5750427 B op x)). Qed.
Lemma lem5750429 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750430 {B : Type'} (op : type1400 B) : (term278 B op) = (term224 B op).
Proof. exact (MK_COMB (@lem5750429 B) (@lem5750428 B op)). Qed.
Lemma lem5750431 {B : Type'} (op : type1400 B) : (term270 B op) = (term228 B op).
Proof. exact (MK_COMB (@lem5750426 B op) (@lem5750430 B op)). Qed.
Lemma lem5750432 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750433 {B : Type'} (op : type1400 B) : (term279 B op) = (term280 B op).
Proof. exact (MK_COMB (@lem5750432) (@lem5750431 B op)). Qed.
Lemma lem5750434 {B : Type'} (op : type1400 B) (x : B) : (term272 B op x) = (term209 B op x).
Proof. exact (eq_refl (term272 B op x)). Qed.
Lemma lem5750435 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750436 {B : Type'} (op : type1400 B) (x : B) : (term281 B op x) = (term282 B op x).
Proof. exact (MK_COMB (@lem5750435) (@lem5750434 B op x)). Qed.
Lemma lem5750437 {B : Type'} (op : type1400 B) (x : B) : (term276 B op x) = (term221 B op x).
Proof. exact (eq_refl (term276 B op x)). Qed.
Lemma lem5750438 {B : Type'} (op : type1400 B) (x : B) : (term283 B op x) = (term284 B op x).
Proof. exact (MK_COMB (@lem5750436 B op x) (@lem5750437 B op x)). Qed.
Lemma lem5750439 {B : Type'} (op : type1400 B) : (term285 B op) = (term286 B op).
Proof. exact (fun_ext (fun x : B => @lem5750438 B op x)). Qed.
Lemma lem5750440 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750441 {B : Type'} (op : type1400 B) : (term271 B op) = (term287 B op).
Proof. exact (MK_COMB (@lem5750440 B) (@lem5750439 B op)). Qed.
Lemma lem5750442 {B : Type'} (op : type1400 B) : ((term270 B op) = (term271 B op)) = ((term228 B op) = (term287 B op)).
Proof. exact (MK_COMB (@lem5750433 B op) (@lem5750441 B op)). Qed.
Lemma lem5750443 {B : Type'} (op : type1400 B) : (term228 B op) = (term287 B op).
Proof. exact (EQ_MP (@lem5750442 B op) (@lem5750420 B op)). Qed.
Lemma lem5750445 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5750446 {B : Type'} (P : B -> Prop) (Q : Prop) : (term288 B P Q) = (term289 B P Q).
Proof. exact (@lem5750445 B P Q). Qed.
Lemma lem5750447 {B : Type'} (op : type1400 B) (x : B) : (term290 B op x) = (term291 B op x).
Proof. exact (@lem5750446 B (term208 B op x) (term221 B op x)). Qed.
Lemma lem5750448 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term292 B op x y) = (term202 B op x y).
Proof. exact (eq_refl (term292 B op x y)). Qed.
Lemma lem5750449 {B : Type'} (op : type1400 B) (x : B) : (term293 B op x) = (term208 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750448 B op x y)). Qed.
Lemma lem5750450 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750451 {B : Type'} (op : type1400 B) (x : B) : (term294 B op x) = (term209 B op x).
Proof. exact (MK_COMB (@lem5750450 B) (@lem5750449 B op x)). Qed.
Lemma lem5750452 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750453 {B : Type'} (op : type1400 B) (x : B) : (term295 B op x) = (term282 B op x).
Proof. exact (MK_COMB (@lem5750452) (@lem5750451 B op x)). Qed.
Lemma lem5750454 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5750455 {B : Type'} (op : type1400 B) (x : B) : (term290 B op x) = (term284 B op x).
Proof. exact (MK_COMB (@lem5750453 B op x) (@lem5750454 B op x)). Qed.
Lemma lem5750456 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750457 {B : Type'} (op : type1400 B) (x : B) : (term296 B op x) = (term297 B op x).
Proof. exact (MK_COMB (@lem5750456) (@lem5750455 B op x)). Qed.
Lemma lem5750458 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term292 B op x y) = (term202 B op x y).
Proof. exact (eq_refl (term292 B op x y)). Qed.
Lemma lem5750459 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750460 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term298 B op x y) = (term299 B op x y).
Proof. exact (MK_COMB (@lem5750459) (@lem5750458 B op x y)). Qed.
Lemma lem5750461 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5750462 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term300 B y op x) = (term301 B y op x).
Proof. exact (MK_COMB (@lem5750460 B op x y) (@lem5750461 B op x)). Qed.
Lemma lem5750463 {B : Type'} (op : type1400 B) (x : B) : (term302 B op x) = (term303 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750462 B y op x)). Qed.
Lemma lem5750464 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750465 {B : Type'} (op : type1400 B) (x : B) : (term291 B op x) = (term304 B op x).
Proof. exact (MK_COMB (@lem5750464 B) (@lem5750463 B op x)). Qed.
Lemma lem5750466 {B : Type'} (op : type1400 B) (x : B) : ((term290 B op x) = (term291 B op x)) = ((term284 B op x) = (term304 B op x)).
Proof. exact (MK_COMB (@lem5750457 B op x) (@lem5750465 B op x)). Qed.
Lemma lem5750467 {B : Type'} (op : type1400 B) (x : B) : (term284 B op x) = (term304 B op x).
Proof. exact (EQ_MP (@lem5750466 B op x) (@lem5750447 B op x)). Qed.
Lemma lem5750469 {A : Type'} (P : A -> Prop) (Q : Prop) : (term288 A P Q) = (term289 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem5750470 {B : Type'} (P : B -> Prop) (Q : Prop) : (term288 B P Q) = (term289 B P Q).
Proof. exact (@lem5750469 B P Q). Qed.
Lemma lem5750471 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term305 B y op x) = (term306 B y op x).
Proof. exact (@lem5750470 B (term201 B op x y) (term221 B op x)). Qed.
Lemma lem5750472 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term307 B op x y z) = (term199 B op x y z).
Proof. exact (eq_refl (term307 B op x y z)). Qed.
Lemma lem5750473 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term308 B op x y) = (term201 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5750472 B op x y z)). Qed.
Lemma lem5750474 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750475 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term309 B op x y) = (term202 B op x y).
Proof. exact (MK_COMB (@lem5750474 B) (@lem5750473 B op x y)). Qed.
Lemma lem5750476 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750477 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term310 B op x y) = (term299 B op x y).
Proof. exact (MK_COMB (@lem5750476) (@lem5750475 B op x y)). Qed.
Lemma lem5750478 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5750479 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term305 B y op x) = (term301 B y op x).
Proof. exact (MK_COMB (@lem5750477 B op x y) (@lem5750478 B op x)). Qed.
Lemma lem5750480 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750481 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term311 B y op x) = (term312 B y op x).
Proof. exact (MK_COMB (@lem5750480) (@lem5750479 B y op x)). Qed.
Lemma lem5750482 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term307 B op x y z) = (term199 B op x y z).
Proof. exact (eq_refl (term307 B op x y z)). Qed.
Lemma lem5750483 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750484 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term313 B op x y z) = (term314 B op x y z).
Proof. exact (MK_COMB (@lem5750483) (@lem5750482 B op x y z)). Qed.
Lemma lem5750485 {B : Type'} (op : type1400 B) (x : B) : (term221 B op x) = (term221 B op x).
Proof. exact (eq_refl (term221 B op x)). Qed.
Lemma lem5750486 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term315 B y z op x) = (term316 B y z op x).
Proof. exact (MK_COMB (@lem5750484 B op x y z) (@lem5750485 B op x)). Qed.
Lemma lem5750487 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term317 B y op x) = (term318 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5750486 B y z op x)). Qed.
Lemma lem5750488 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750489 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term306 B y op x) = (term319 B y op x).
Proof. exact (MK_COMB (@lem5750488 B) (@lem5750487 B y op x)). Qed.
Lemma lem5750490 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term305 B y op x) = (term306 B y op x)) = ((term301 B y op x) = (term319 B y op x)).
Proof. exact (MK_COMB (@lem5750481 B y op x) (@lem5750489 B y op x)). Qed.
Lemma lem5750491 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term301 B y op x) = (term319 B y op x).
Proof. exact (EQ_MP (@lem5750490 B y op x) (@lem5750471 B y op x)). Qed.
Lemma lem5750492 {B : Type'} (op : type1400 B) (x : B) : (term303 B op x) = (term320 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750491 B y op x)). Qed.
Lemma lem5750493 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750494 {B : Type'} (op : type1400 B) (x : B) : (term304 B op x) = (term321 B op x).
Proof. exact (MK_COMB (@lem5750493 B) (@lem5750492 B op x)). Qed.
Lemma lem5750495 {B : Type'} (op : type1400 B) (x : B) : (term284 B op x) = (term321 B op x).
Proof. exact (TRANS (@lem5750467 B op x) (@lem5750494 B op x)). Qed.
Lemma lem5750496 {B : Type'} (op : type1400 B) : (term286 B op) = (term322 B op).
Proof. exact (fun_ext (fun x : B => @lem5750495 B op x)). Qed.
Lemma lem5750497 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750498 {B : Type'} (op : type1400 B) : (term287 B op) = (term323 B op).
Proof. exact (MK_COMB (@lem5750497 B) (@lem5750496 B op)). Qed.
Lemma lem5750499 {B : Type'} (op : type1400 B) : (term228 B op) = (term323 B op).
Proof. exact (TRANS (@lem5750443 B op) (@lem5750498 B op)). Qed.
Lemma lem5750500 {B : Type'} (op : type1400 B) : (term231 B op) = (term231 B op).
Proof. exact (eq_refl (term231 B op)). Qed.
Lemma lem5750501 {B : Type'} (op : type1400 B) : (term233 B op) = (term324 B op).
Proof. exact (MK_COMB (@lem5750500 B op) (@lem5750499 B op)). Qed.
Lemma lem5750503 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5750504 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5750503 B P Q). Qed.
Lemma lem5750505 {B : Type'} (op : type1400 B) : (term325 B op) = (term326 B op).
Proof. exact (@lem5750504 B (term193 B op) (term322 B op)). Qed.
Lemma lem5750506 {B : Type'} (op : type1400 B) (x : B) : (term327 B op x) = (term187 B op x).
Proof. exact (eq_refl (term327 B op x)). Qed.
Lemma lem5750507 {B : Type'} (op : type1400 B) : (term328 B op) = (term193 B op).
Proof. exact (fun_ext (fun x : B => @lem5750506 B op x)). Qed.
Lemma lem5750508 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750509 {B : Type'} (op : type1400 B) : (term329 B op) = (term194 B op).
Proof. exact (MK_COMB (@lem5750508 B) (@lem5750507 B op)). Qed.
Lemma lem5750510 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750511 {B : Type'} (op : type1400 B) : (term330 B op) = (term231 B op).
Proof. exact (MK_COMB (@lem5750510) (@lem5750509 B op)). Qed.
Lemma lem5750512 {B : Type'} (op : type1400 B) (x : B) : (term331 B op x) = (term321 B op x).
Proof. exact (eq_refl (term331 B op x)). Qed.
Lemma lem5750513 {B : Type'} (op : type1400 B) : (term332 B op) = (term322 B op).
Proof. exact (fun_ext (fun x : B => @lem5750512 B op x)). Qed.
Lemma lem5750514 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750515 {B : Type'} (op : type1400 B) : (term333 B op) = (term323 B op).
Proof. exact (MK_COMB (@lem5750514 B) (@lem5750513 B op)). Qed.
Lemma lem5750516 {B : Type'} (op : type1400 B) : (term325 B op) = (term324 B op).
Proof. exact (MK_COMB (@lem5750511 B op) (@lem5750515 B op)). Qed.
Lemma lem5750517 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750518 {B : Type'} (op : type1400 B) : (term334 B op) = (term335 B op).
Proof. exact (MK_COMB (@lem5750517) (@lem5750516 B op)). Qed.
Lemma lem5750519 {B : Type'} (op : type1400 B) (x : B) : (term327 B op x) = (term187 B op x).
Proof. exact (eq_refl (term327 B op x)). Qed.
Lemma lem5750520 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750521 {B : Type'} (op : type1400 B) (x : B) : (term336 B op x) = (term337 B op x).
Proof. exact (MK_COMB (@lem5750520) (@lem5750519 B op x)). Qed.
Lemma lem5750522 {B : Type'} (op : type1400 B) (x : B) : (term331 B op x) = (term321 B op x).
Proof. exact (eq_refl (term331 B op x)). Qed.
Lemma lem5750523 {B : Type'} (op : type1400 B) (x : B) : (term338 B op x) = (term339 B op x).
Proof. exact (MK_COMB (@lem5750521 B op x) (@lem5750522 B op x)). Qed.
Lemma lem5750524 {B : Type'} (op : type1400 B) : (term340 B op) = (term341 B op).
Proof. exact (fun_ext (fun x : B => @lem5750523 B op x)). Qed.
Lemma lem5750525 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750526 {B : Type'} (op : type1400 B) : (term326 B op) = (term342 B op).
Proof. exact (MK_COMB (@lem5750525 B) (@lem5750524 B op)). Qed.
Lemma lem5750527 {B : Type'} (op : type1400 B) : ((term325 B op) = (term326 B op)) = ((term324 B op) = (term342 B op)).
Proof. exact (MK_COMB (@lem5750518 B op) (@lem5750526 B op)). Qed.
Lemma lem5750528 {B : Type'} (op : type1400 B) : (term324 B op) = (term342 B op).
Proof. exact (EQ_MP (@lem5750527 B op) (@lem5750505 B op)). Qed.
Lemma lem5750530 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term268 A P Q) = (term269 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem5750531 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term268 B P Q) = (term269 B P Q).
Proof. exact (@lem5750530 B P Q). Qed.
Lemma lem5750532 {B : Type'} (op : type1400 B) (x : B) : (term343 B op x) = (term344 B op x).
Proof. exact (@lem5750531 B (term186 B op x) (term320 B op x)). Qed.
Lemma lem5750533 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term345 B op x y) = (term184 B op y x).
Proof. exact (eq_refl (term345 B op x y)). Qed.
Lemma lem5750534 {B : Type'} (op : type1400 B) (x : B) : (term346 B op x) = (term186 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750533 B op y x)). Qed.
Lemma lem5750535 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750536 {B : Type'} (op : type1400 B) (x : B) : (term347 B op x) = (term187 B op x).
Proof. exact (MK_COMB (@lem5750535 B) (@lem5750534 B op x)). Qed.
Lemma lem5750537 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750538 {B : Type'} (op : type1400 B) (x : B) : (term348 B op x) = (term337 B op x).
Proof. exact (MK_COMB (@lem5750537) (@lem5750536 B op x)). Qed.
Lemma lem5750539 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term349 B op x y) = (term319 B y op x).
Proof. exact (eq_refl (term349 B op x y)). Qed.
Lemma lem5750540 {B : Type'} (op : type1400 B) (x : B) : (term350 B op x) = (term320 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750539 B y op x)). Qed.
Lemma lem5750541 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750542 {B : Type'} (op : type1400 B) (x : B) : (term351 B op x) = (term321 B op x).
Proof. exact (MK_COMB (@lem5750541 B) (@lem5750540 B op x)). Qed.
Lemma lem5750543 {B : Type'} (op : type1400 B) (x : B) : (term343 B op x) = (term339 B op x).
Proof. exact (MK_COMB (@lem5750538 B op x) (@lem5750542 B op x)). Qed.
Lemma lem5750544 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750545 {B : Type'} (op : type1400 B) (x : B) : (term352 B op x) = (term353 B op x).
Proof. exact (MK_COMB (@lem5750544) (@lem5750543 B op x)). Qed.
Lemma lem5750546 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term345 B op x y) = (term184 B op y x).
Proof. exact (eq_refl (term345 B op x y)). Qed.
Lemma lem5750547 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5750548 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term354 B op x y) = (term355 B op y x).
Proof. exact (MK_COMB (@lem5750547) (@lem5750546 B op y x)). Qed.
Lemma lem5750549 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term349 B op x y) = (term319 B y op x).
Proof. exact (eq_refl (term349 B op x y)). Qed.
Lemma lem5750550 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term356 B op x y) = (term357 B y op x).
Proof. exact (MK_COMB (@lem5750548 B op y x) (@lem5750549 B y op x)). Qed.
Lemma lem5750551 {B : Type'} (op : type1400 B) (x : B) : (term358 B op x) = (term359 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750550 B y op x)). Qed.
Lemma lem5750552 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750553 {B : Type'} (op : type1400 B) (x : B) : (term344 B op x) = (term360 B op x).
Proof. exact (MK_COMB (@lem5750552 B) (@lem5750551 B op x)). Qed.
Lemma lem5750554 {B : Type'} (op : type1400 B) (x : B) : ((term343 B op x) = (term344 B op x)) = ((term339 B op x) = (term360 B op x)).
Proof. exact (MK_COMB (@lem5750545 B op x) (@lem5750553 B op x)). Qed.
Lemma lem5750555 {B : Type'} (op : type1400 B) (x : B) : (term339 B op x) = (term360 B op x).
Proof. exact (EQ_MP (@lem5750554 B op x) (@lem5750532 B op x)). Qed.
Lemma lem5750557 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5750558 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5750557 B P Q). Qed.
Lemma lem5750559 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term363 B y op x) = (term364 B y op x).
Proof. exact (@lem5750558 B (term184 B op y x) (term318 B y op x)). Qed.
Lemma lem5750560 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term365 B y op x z) = (term316 B y z op x).
Proof. exact (eq_refl (term365 B y op x z)). Qed.
Lemma lem5750561 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term366 B y op x) = (term318 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5750560 B y z op x)). Qed.
Lemma lem5750562 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750563 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term367 B y op x) = (term319 B y op x).
Proof. exact (MK_COMB (@lem5750562 B) (@lem5750561 B y op x)). Qed.
Lemma lem5750564 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term355 B op y x) = (term355 B op y x).
Proof. exact (eq_refl (term355 B op y x)). Qed.
Lemma lem5750565 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term363 B y op x) = (term357 B y op x).
Proof. exact (MK_COMB (@lem5750564 B op y x) (@lem5750563 B y op x)). Qed.
Lemma lem5750566 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750567 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term368 B y op x) = (term369 B y op x).
Proof. exact (MK_COMB (@lem5750566) (@lem5750565 B y op x)). Qed.
Lemma lem5750568 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term365 B y op x z) = (term316 B y z op x).
Proof. exact (eq_refl (term365 B y op x z)). Qed.
Lemma lem5750569 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term355 B op y x) = (term355 B op y x).
Proof. exact (eq_refl (term355 B op y x)). Qed.
Lemma lem5750570 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term370 B y op x z) = (term371 B y z op x).
Proof. exact (MK_COMB (@lem5750569 B op y x) (@lem5750568 B y z op x)). Qed.
Lemma lem5750571 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term372 B y op x) = (term373 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5750570 B y z op x)). Qed.
Lemma lem5750572 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750573 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term364 B y op x) = (term374 B y op x).
Proof. exact (MK_COMB (@lem5750572 B) (@lem5750571 B y op x)). Qed.
Lemma lem5750574 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term363 B y op x) = (term364 B y op x)) = ((term357 B y op x) = (term374 B y op x)).
Proof. exact (MK_COMB (@lem5750567 B y op x) (@lem5750573 B y op x)). Qed.
Lemma lem5750575 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term357 B y op x) = (term374 B y op x).
Proof. exact (EQ_MP (@lem5750574 B y op x) (@lem5750559 B y op x)). Qed.
Lemma lem5750576 {B : Type'} (op : type1400 B) (x : B) : (term359 B op x) = (term375 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750575 B y op x)). Qed.
Lemma lem5750577 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750578 {B : Type'} (op : type1400 B) (x : B) : (term360 B op x) = (term376 B op x).
Proof. exact (MK_COMB (@lem5750577 B) (@lem5750576 B op x)). Qed.
Lemma lem5750579 {B : Type'} (op : type1400 B) (x : B) : (term339 B op x) = (term376 B op x).
Proof. exact (TRANS (@lem5750555 B op x) (@lem5750578 B op x)). Qed.
Lemma lem5750580 {B : Type'} (op : type1400 B) : (term341 B op) = (term377 B op).
Proof. exact (fun_ext (fun x : B => @lem5750579 B op x)). Qed.
Lemma lem5750581 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750582 {B : Type'} (op : type1400 B) : (term342 B op) = (term378 B op).
Proof. exact (MK_COMB (@lem5750581 B) (@lem5750580 B op)). Qed.
Lemma lem5750583 {B : Type'} (op : type1400 B) : (term324 B op) = (term378 B op).
Proof. exact (TRANS (@lem5750528 B op) (@lem5750582 B op)). Qed.
Lemma lem5750584 {B : Type'} (op : type1400 B) : (term233 B op) = (term378 B op).
Proof. exact (TRANS (@lem5750501 B op) (@lem5750583 B op)). Qed.
Lemma lem5750585 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750586 {B : Type'} (op : type1400 B) : (term239 B op) = (term379 B op).
Proof. exact (MK_COMB (@lem5750585 B op) (@lem5750584 B op)). Qed.
Lemma lem5750588 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5750589 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5750588 B P Q). Qed.
Lemma lem5750590 {B : Type'} (op : type1400 B) : (term380 B op) = (term381 B op).
Proof. exact (@lem5750589 B (@monoidal B op) (term377 B op)). Qed.
Lemma lem5750591 {B : Type'} (op : type1400 B) (x : B) : (term382 B op x) = (term376 B op x).
Proof. exact (eq_refl (term382 B op x)). Qed.
Lemma lem5750592 {B : Type'} (op : type1400 B) : (term383 B op) = (term377 B op).
Proof. exact (fun_ext (fun x : B => @lem5750591 B op x)). Qed.
Lemma lem5750593 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750594 {B : Type'} (op : type1400 B) : (term384 B op) = (term378 B op).
Proof. exact (MK_COMB (@lem5750593 B) (@lem5750592 B op)). Qed.
Lemma lem5750595 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750596 {B : Type'} (op : type1400 B) : (term380 B op) = (term379 B op).
Proof. exact (MK_COMB (@lem5750595 B op) (@lem5750594 B op)). Qed.
Lemma lem5750597 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750598 {B : Type'} (op : type1400 B) : (term385 B op) = (term386 B op).
Proof. exact (MK_COMB (@lem5750597) (@lem5750596 B op)). Qed.
Lemma lem5750599 {B : Type'} (op : type1400 B) (x : B) : (term382 B op x) = (term376 B op x).
Proof. exact (eq_refl (term382 B op x)). Qed.
Lemma lem5750600 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750601 {B : Type'} (op : type1400 B) (x : B) : (term387 B op x) = (term388 B op x).
Proof. exact (MK_COMB (@lem5750600 B op) (@lem5750599 B op x)). Qed.
Lemma lem5750602 {B : Type'} (op : type1400 B) : (term389 B op) = (term390 B op).
Proof. exact (fun_ext (fun x : B => @lem5750601 B op x)). Qed.
Lemma lem5750603 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750604 {B : Type'} (op : type1400 B) : (term381 B op) = (term391 B op).
Proof. exact (MK_COMB (@lem5750603 B) (@lem5750602 B op)). Qed.
Lemma lem5750605 {B : Type'} (op : type1400 B) : ((term380 B op) = (term381 B op)) = ((term379 B op) = (term391 B op)).
Proof. exact (MK_COMB (@lem5750598 B op) (@lem5750604 B op)). Qed.
Lemma lem5750606 {B : Type'} (op : type1400 B) : (term379 B op) = (term391 B op).
Proof. exact (EQ_MP (@lem5750605 B op) (@lem5750590 B op)). Qed.
Lemma lem5750608 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5750609 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5750608 B P Q). Qed.
Lemma lem5750610 {B : Type'} (op : type1400 B) (x : B) : (term392 B op x) = (term393 B op x).
Proof. exact (@lem5750609 B (@monoidal B op) (term375 B op x)). Qed.
Lemma lem5750611 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term394 B op x y) = (term374 B y op x).
Proof. exact (eq_refl (term394 B op x y)). Qed.
Lemma lem5750612 {B : Type'} (op : type1400 B) (x : B) : (term395 B op x) = (term375 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750611 B y op x)). Qed.
Lemma lem5750613 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750614 {B : Type'} (op : type1400 B) (x : B) : (term396 B op x) = (term376 B op x).
Proof. exact (MK_COMB (@lem5750613 B) (@lem5750612 B op x)). Qed.
Lemma lem5750615 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750616 {B : Type'} (op : type1400 B) (x : B) : (term392 B op x) = (term388 B op x).
Proof. exact (MK_COMB (@lem5750615 B op) (@lem5750614 B op x)). Qed.
Lemma lem5750617 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750618 {B : Type'} (op : type1400 B) (x : B) : (term397 B op x) = (term398 B op x).
Proof. exact (MK_COMB (@lem5750617) (@lem5750616 B op x)). Qed.
Lemma lem5750619 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term394 B op x y) = (term374 B y op x).
Proof. exact (eq_refl (term394 B op x y)). Qed.
Lemma lem5750620 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750621 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term399 B op x y) = (term400 B y op x).
Proof. exact (MK_COMB (@lem5750620 B op) (@lem5750619 B y op x)). Qed.
Lemma lem5750622 {B : Type'} (op : type1400 B) (x : B) : (term401 B op x) = (term402 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750621 B y op x)). Qed.
Lemma lem5750623 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750624 {B : Type'} (op : type1400 B) (x : B) : (term393 B op x) = (term403 B op x).
Proof. exact (MK_COMB (@lem5750623 B) (@lem5750622 B op x)). Qed.
Lemma lem5750625 {B : Type'} (op : type1400 B) (x : B) : ((term392 B op x) = (term393 B op x)) = ((term388 B op x) = (term403 B op x)).
Proof. exact (MK_COMB (@lem5750618 B op x) (@lem5750624 B op x)). Qed.
Lemma lem5750626 {B : Type'} (op : type1400 B) (x : B) : (term388 B op x) = (term403 B op x).
Proof. exact (EQ_MP (@lem5750625 B op x) (@lem5750610 B op x)). Qed.
Lemma lem5750628 {A : Type'} (P : Prop) (Q : A -> Prop) : (term361 A P Q) = (term362 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem5750629 {B : Type'} (P : Prop) (Q : B -> Prop) : (term361 B P Q) = (term362 B P Q).
Proof. exact (@lem5750628 B P Q). Qed.
Lemma lem5750630 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term404 B y op x) = (term405 B y op x).
Proof. exact (@lem5750629 B (@monoidal B op) (term373 B y op x)). Qed.
Lemma lem5750631 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term406 B y op x z) = (term371 B y z op x).
Proof. exact (eq_refl (term406 B y op x z)). Qed.
Lemma lem5750632 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term407 B y op x) = (term373 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5750631 B y z op x)). Qed.
Lemma lem5750633 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750634 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term408 B y op x) = (term374 B y op x).
Proof. exact (MK_COMB (@lem5750633 B) (@lem5750632 B y op x)). Qed.
Lemma lem5750635 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750636 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term404 B y op x) = (term400 B y op x).
Proof. exact (MK_COMB (@lem5750635 B op) (@lem5750634 B y op x)). Qed.
Lemma lem5750637 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750638 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term409 B y op x) = (term410 B y op x).
Proof. exact (MK_COMB (@lem5750637) (@lem5750636 B y op x)). Qed.
Lemma lem5750639 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term406 B y op x z) = (term371 B y z op x).
Proof. exact (eq_refl (term406 B y op x z)). Qed.
Lemma lem5750640 {B : Type'} (op : type1400 B) : (term237 B op) = (term237 B op).
Proof. exact (eq_refl (term237 B op)). Qed.
Lemma lem5750641 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term411 B y op x z) = (term412 B y z op x).
Proof. exact (MK_COMB (@lem5750640 B op) (@lem5750639 B y z op x)). Qed.
Lemma lem5750642 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term413 B y op x) = (term414 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5750641 B y z op x)). Qed.
Lemma lem5750643 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750644 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term405 B y op x) = (term415 B y op x).
Proof. exact (MK_COMB (@lem5750643 B) (@lem5750642 B y op x)). Qed.
Lemma lem5750645 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term404 B y op x) = (term405 B y op x)) = ((term400 B y op x) = (term415 B y op x)).
Proof. exact (MK_COMB (@lem5750638 B y op x) (@lem5750644 B y op x)). Qed.
Lemma lem5750646 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term400 B y op x) = (term415 B y op x).
Proof. exact (EQ_MP (@lem5750645 B y op x) (@lem5750630 B y op x)). Qed.
Lemma lem5750647 {B : Type'} (op : type1400 B) (x : B) : (term402 B op x) = (term416 B op x).
Proof. exact (fun_ext (fun y : B => @lem5750646 B y op x)). Qed.
Lemma lem5750648 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750649 {B : Type'} (op : type1400 B) (x : B) : (term403 B op x) = (term417 B op x).
Proof. exact (MK_COMB (@lem5750648 B) (@lem5750647 B op x)). Qed.
Lemma lem5750650 {B : Type'} (op : type1400 B) (x : B) : (term388 B op x) = (term417 B op x).
Proof. exact (TRANS (@lem5750626 B op x) (@lem5750649 B op x)). Qed.
Lemma lem5750651 {B : Type'} (op : type1400 B) : (term390 B op) = (term418 B op).
Proof. exact (fun_ext (fun x : B => @lem5750650 B op x)). Qed.
Lemma lem5750652 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750653 {B : Type'} (op : type1400 B) : (term391 B op) = (term419 B op).
Proof. exact (MK_COMB (@lem5750652 B) (@lem5750651 B op)). Qed.
Lemma lem5750654 {B : Type'} (op : type1400 B) : (term379 B op) = (term419 B op).
Proof. exact (TRANS (@lem5750606 B op) (@lem5750653 B op)). Qed.
Lemma lem5750655 {B : Type'} (op : type1400 B) : (term239 B op) = (term419 B op).
Proof. exact (TRANS (@lem5750586 B op) (@lem5750654 B op)). Qed.
Lemma lem5750656 {B : Type'} : (term250 B) = (term420 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750655 B op)). Qed.
Lemma lem5750657 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750658 {B : Type'} : (term261 B) = (term421 B).
Proof. exact (MK_COMB (@lem5750657 B) (@lem5750656 B)). Qed.
Lemma lem5750660 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5750661 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5750660 (type1400 B) B P). Qed.
Lemma lem5750662 {B : Type'} : (term426 B) = (term427 B).
Proof. exact (@lem5750661 B (term428 B)). Qed.
Lemma lem5750663 {B : Type'} (op : type1400 B) : (term429 B op) = (term418 B op).
Proof. exact (eq_refl (term429 B op)). Qed.
Lemma lem5750664 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5750665 {B : Type'} (op : type1400 B) (x : B) : (term430 B op x) = (term431 B op x).
Proof. exact (MK_COMB (@lem5750663 B op) (@lem5750664 B x)). Qed.
Lemma lem5750666 {B : Type'} (op : type1400 B) (x : B) : (term431 B op x) = (term417 B op x).
Proof. exact (eq_refl (term431 B op x)). Qed.
Lemma lem5750667 {B : Type'} (op : type1400 B) (x : B) : (term430 B op x) = (term417 B op x).
Proof. exact (TRANS (@lem5750665 B op x) (@lem5750666 B op x)). Qed.
Lemma lem5750668 {B : Type'} (op : type1400 B) : (term432 B op) = (term418 B op).
Proof. exact (fun_ext (fun x : B => @lem5750667 B op x)). Qed.
Lemma lem5750669 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750670 {B : Type'} (op : type1400 B) : (term433 B op) = (term419 B op).
Proof. exact (MK_COMB (@lem5750669 B) (@lem5750668 B op)). Qed.
Lemma lem5750671 {B : Type'} : (term434 B) = (term420 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750670 B op)). Qed.
Lemma lem5750672 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750673 {B : Type'} : (term426 B) = (term421 B).
Proof. exact (MK_COMB (@lem5750672 B) (@lem5750671 B)). Qed.
Lemma lem5750674 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750675 {B : Type'} : (term435 B) = (term436 B).
Proof. exact (MK_COMB (@lem5750674) (@lem5750673 B)). Qed.
Lemma lem5750676 {B : Type'} (op : type1400 B) : (term429 B op) = (term418 B op).
Proof. exact (eq_refl (term429 B op)). Qed.
Lemma lem5750677 {B : Type'} (x : type402 B) (op : type1400 B) : (x op) = (x op).
Proof. exact (eq_refl (x op)). Qed.
Lemma lem5750678 {B : Type'} (x : type402 B) (op : type1400 B) : (term437 B x op) = (term438 B x op).
Proof. exact (MK_COMB (@lem5750676 B op) (@lem5750677 B x op)). Qed.
Lemma lem5750679 {B : Type'} (x : type402 B) (op : type1400 B) : (term438 B x op) = (term439 B x op).
Proof. exact (eq_refl (term438 B x op)). Qed.
Lemma lem5750680 {B : Type'} (x : type402 B) (op : type1400 B) : (term437 B x op) = (term439 B x op).
Proof. exact (TRANS (@lem5750678 B x op) (@lem5750679 B x op)). Qed.
Lemma lem5750681 {B : Type'} (x : type402 B) : (term440 B x) = (term441 B x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750680 B x op)). Qed.
Lemma lem5750682 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750683 {B : Type'} (x : type402 B) : (term442 B x) = (term443 B x).
Proof. exact (MK_COMB (@lem5750682 B) (@lem5750681 B x)). Qed.
Lemma lem5750684 {B : Type'} : (term444 B) = (term445 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5750683 B x)). Qed.
Lemma lem5750685 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750686 {B : Type'} : (term427 B) = (term446 B).
Proof. exact (MK_COMB (@lem5750685 B) (@lem5750684 B)). Qed.
Lemma lem5750687 {B : Type'} : ((term426 B) = (term427 B)) = ((term421 B) = (term446 B)).
Proof. exact (MK_COMB (@lem5750675 B) (@lem5750686 B)). Qed.
Lemma lem5750688 {B : Type'} : (term421 B) = (term446 B).
Proof. exact (EQ_MP (@lem5750687 B) (@lem5750662 B)). Qed.
Lemma lem5750690 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5750691 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5750690 (type1400 B) B P). Qed.
Lemma lem5750692 {B : Type'} (x : type402 B) : (term447 B x) = (term448 B x).
Proof. exact (@lem5750691 B (term449 B x)). Qed.
Lemma lem5750693 {B : Type'} (x : type402 B) (op : type1400 B) : (term450 B x op) = (term451 B x op).
Proof. exact (eq_refl (term450 B x op)). Qed.
Lemma lem5750694 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5750695 {B : Type'} (x : type402 B) (op : type1400 B) (y : B) : (term452 B x op y) = (term453 B x op y).
Proof. exact (MK_COMB (@lem5750693 B x op) (@lem5750694 B y)). Qed.
Lemma lem5750696 {B : Type'} (y : B) (x : type402 B) (op : type1400 B) : (term453 B x op y) = (term454 B y x op).
Proof. exact (eq_refl (term453 B x op y)). Qed.
Lemma lem5750697 {B : Type'} (y : B) (x : type402 B) (op : type1400 B) : (term452 B x op y) = (term454 B y x op).
Proof. exact (TRANS (@lem5750695 B x op y) (@lem5750696 B y x op)). Qed.
Lemma lem5750698 {B : Type'} (x : type402 B) (op : type1400 B) : (term455 B x op) = (term451 B x op).
Proof. exact (fun_ext (fun y : B => @lem5750697 B y x op)). Qed.
Lemma lem5750699 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750700 {B : Type'} (x : type402 B) (op : type1400 B) : (term456 B x op) = (term439 B x op).
Proof. exact (MK_COMB (@lem5750699 B) (@lem5750698 B x op)). Qed.
Lemma lem5750701 {B : Type'} (x : type402 B) : (term457 B x) = (term441 B x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750700 B x op)). Qed.
Lemma lem5750702 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750703 {B : Type'} (x : type402 B) : (term447 B x) = (term443 B x).
Proof. exact (MK_COMB (@lem5750702 B) (@lem5750701 B x)). Qed.
Lemma lem5750704 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750705 {B : Type'} (x : type402 B) : (term458 B x) = (term459 B x).
Proof. exact (MK_COMB (@lem5750704) (@lem5750703 B x)). Qed.
Lemma lem5750706 {B : Type'} (x : type402 B) (op : type1400 B) : (term450 B x op) = (term451 B x op).
Proof. exact (eq_refl (term450 B x op)). Qed.
Lemma lem5750707 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (y op).
Proof. exact (eq_refl (y op)). Qed.
Lemma lem5750708 {B : Type'} (x : type402 B) (y : type402 B) (op : type1400 B) : (term460 B x y op) = (term461 B x y op).
Proof. exact (MK_COMB (@lem5750706 B x op) (@lem5750707 B y op)). Qed.
Lemma lem5750709 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term461 B x y op) = (term462 B y x op).
Proof. exact (eq_refl (term461 B x y op)). Qed.
Lemma lem5750710 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term460 B x y op) = (term462 B y x op).
Proof. exact (TRANS (@lem5750708 B x y op) (@lem5750709 B y x op)). Qed.
Lemma lem5750711 {B : Type'} (y : type402 B) (x : type402 B) : (term463 B x y) = (term464 B y x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750710 B y x op)). Qed.
Lemma lem5750712 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750713 {B : Type'} (y : type402 B) (x : type402 B) : (term465 B x y) = (term466 B y x).
Proof. exact (MK_COMB (@lem5750712 B) (@lem5750711 B y x)). Qed.
Lemma lem5750714 {B : Type'} (x : type402 B) : (term467 B x) = (term468 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5750713 B y x)). Qed.
Lemma lem5750715 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750716 {B : Type'} (x : type402 B) : (term448 B x) = (term469 B x).
Proof. exact (MK_COMB (@lem5750715 B) (@lem5750714 B x)). Qed.
Lemma lem5750717 {B : Type'} (x : type402 B) : ((term447 B x) = (term448 B x)) = ((term443 B x) = (term469 B x)).
Proof. exact (MK_COMB (@lem5750705 B x) (@lem5750716 B x)). Qed.
Lemma lem5750718 {B : Type'} (x : type402 B) : (term443 B x) = (term469 B x).
Proof. exact (EQ_MP (@lem5750717 B x) (@lem5750692 B x)). Qed.
Lemma lem5750720 {A B : Type'} (P : type1413 A B) : (term422 A B P) = (term423 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem5750721 {B : Type'} (P : type401 B) : (term424 B P) = (term425 B P).
Proof. exact (@lem5750720 (type1400 B) B P). Qed.
Lemma lem5750722 {B : Type'} (y : type402 B) (x : type402 B) : (term470 B y x) = (term471 B y x).
Proof. exact (@lem5750721 B (term472 B y x)). Qed.
Lemma lem5750723 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term473 B y x op) = (term474 B y x op).
Proof. exact (eq_refl (term473 B y x op)). Qed.
Lemma lem5750724 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5750725 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) (z : B) : (term475 B y x op z) = (term476 B y x op z).
Proof. exact (MK_COMB (@lem5750723 B y x op) (@lem5750724 B z)). Qed.
Lemma lem5750726 {B : Type'} (y : type402 B) (z : B) (x : type402 B) (op : type1400 B) : (term476 B y x op z) = (term477 B y z x op).
Proof. exact (eq_refl (term476 B y x op z)). Qed.
Lemma lem5750727 {B : Type'} (y : type402 B) (z : B) (x : type402 B) (op : type1400 B) : (term475 B y x op z) = (term477 B y z x op).
Proof. exact (TRANS (@lem5750725 B y x op z) (@lem5750726 B y z x op)). Qed.
Lemma lem5750728 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term478 B y x op) = (term474 B y x op).
Proof. exact (fun_ext (fun z : B => @lem5750727 B y z x op)). Qed.
Lemma lem5750729 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem5750730 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term479 B y x op) = (term462 B y x op).
Proof. exact (MK_COMB (@lem5750729 B) (@lem5750728 B y x op)). Qed.
Lemma lem5750731 {B : Type'} (y : type402 B) (x : type402 B) : (term480 B y x) = (term464 B y x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750730 B y x op)). Qed.
Lemma lem5750732 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750733 {B : Type'} (y : type402 B) (x : type402 B) : (term470 B y x) = (term466 B y x).
Proof. exact (MK_COMB (@lem5750732 B) (@lem5750731 B y x)). Qed.
Lemma lem5750734 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750735 {B : Type'} (y : type402 B) (x : type402 B) : (term481 B y x) = (term482 B y x).
Proof. exact (MK_COMB (@lem5750734) (@lem5750733 B y x)). Qed.
Lemma lem5750736 {B : Type'} (y : type402 B) (x : type402 B) (op : type1400 B) : (term473 B y x op) = (term474 B y x op).
Proof. exact (eq_refl (term473 B y x op)). Qed.
Lemma lem5750737 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (z op).
Proof. exact (eq_refl (z op)). Qed.
Lemma lem5750738 {B : Type'} (y : type402 B) (x : type402 B) (z : type402 B) (op : type1400 B) : (term483 B y x z op) = (term484 B y x z op).
Proof. exact (MK_COMB (@lem5750736 B y x op) (@lem5750737 B z op)). Qed.
Lemma lem5750739 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term484 B y x z op) = (term485 B y z x op).
Proof. exact (eq_refl (term484 B y x z op)). Qed.
Lemma lem5750740 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) (op : type1400 B) : (term483 B y x z op) = (term485 B y z x op).
Proof. exact (TRANS (@lem5750738 B y x z op) (@lem5750739 B y z x op)). Qed.
Lemma lem5750741 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term486 B y x z) = (term487 B y z x).
Proof. exact (fun_ext (fun op : type1400 B => @lem5750740 B y z x op)). Qed.
Lemma lem5750742 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5750743 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term488 B y x z) = (term489 B y z x).
Proof. exact (MK_COMB (@lem5750742 B) (@lem5750741 B y z x)). Qed.
Lemma lem5750744 {B : Type'} (y : type402 B) (x : type402 B) : (term490 B y x) = (term491 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5750743 B y z x)). Qed.
Lemma lem5750745 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750746 {B : Type'} (y : type402 B) (x : type402 B) : (term471 B y x) = (term492 B y x).
Proof. exact (MK_COMB (@lem5750745 B) (@lem5750744 B y x)). Qed.
Lemma lem5750747 {B : Type'} (y : type402 B) (x : type402 B) : ((term470 B y x) = (term471 B y x)) = ((term466 B y x) = (term492 B y x)).
Proof. exact (MK_COMB (@lem5750735 B y x) (@lem5750746 B y x)). Qed.
Lemma lem5750748 {B : Type'} (y : type402 B) (x : type402 B) : (term466 B y x) = (term492 B y x).
Proof. exact (EQ_MP (@lem5750747 B y x) (@lem5750722 B y x)). Qed.
Lemma lem5750749 {B : Type'} (x : type402 B) : (term468 B x) = (term493 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5750748 B y x)). Qed.
Lemma lem5750750 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750751 {B : Type'} (x : type402 B) : (term469 B x) = (term494 B x).
Proof. exact (MK_COMB (@lem5750750 B) (@lem5750749 B x)). Qed.
Lemma lem5750752 {B : Type'} (x : type402 B) : (term443 B x) = (term494 B x).
Proof. exact (TRANS (@lem5750718 B x) (@lem5750751 B x)). Qed.
Lemma lem5750753 {B : Type'} : (term445 B) = (term495 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5750752 B x)). Qed.
Lemma lem5750754 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750755 {B : Type'} : (term446 B) = (term496 B).
Proof. exact (MK_COMB (@lem5750754 B) (@lem5750753 B)). Qed.
Lemma lem5750756 {B : Type'} : (term421 B) = (term496 B).
Proof. exact (TRANS (@lem5750688 B) (@lem5750755 B)). Qed.
Lemma lem5750757 {B : Type'} : (term261 B) = (term496 B).
Proof. exact (TRANS (@lem5750658 B) (@lem5750756 B)). Qed.
Lemma lem5750758 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750759 {B : Type'} : (term263 B) = (term497 B).
Proof. exact (MK_COMB (@lem5750758) (@lem5750757 B)). Qed.
Lemma lem5750760 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750761 {B : Type'} : (term267 B) = (term498 B).
Proof. exact (MK_COMB (@lem5750759 B) (@lem5750760 B)). Qed.
Lemma lem5750763 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5750764 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5750763 (type402 B) P Q). Qed.
Lemma lem5750765 {B : Type'} : (term503 B) = (term504 B).
Proof. exact (@lem5750764 B (term495 B) (term266 B)). Qed.
Lemma lem5750766 {B : Type'} (x : type402 B) : (term505 B x) = (term494 B x).
Proof. exact (eq_refl (term505 B x)). Qed.
Lemma lem5750767 {B : Type'} : (term506 B) = (term495 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5750766 B x)). Qed.
Lemma lem5750768 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750769 {B : Type'} : (term507 B) = (term496 B).
Proof. exact (MK_COMB (@lem5750768 B) (@lem5750767 B)). Qed.
Lemma lem5750770 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750771 {B : Type'} : (term508 B) = (term497 B).
Proof. exact (MK_COMB (@lem5750770) (@lem5750769 B)). Qed.
Lemma lem5750772 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750773 {B : Type'} : (term503 B) = (term498 B).
Proof. exact (MK_COMB (@lem5750771 B) (@lem5750772 B)). Qed.
Lemma lem5750774 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750775 {B : Type'} : (term509 B) = (term510 B).
Proof. exact (MK_COMB (@lem5750774) (@lem5750773 B)). Qed.
Lemma lem5750776 {B : Type'} (x : type402 B) : (term505 B x) = (term494 B x).
Proof. exact (eq_refl (term505 B x)). Qed.
Lemma lem5750777 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750778 {B : Type'} (x : type402 B) : (term511 B x) = (term512 B x).
Proof. exact (MK_COMB (@lem5750777) (@lem5750776 B x)). Qed.
Lemma lem5750779 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750780 {B : Type'} (x : type402 B) : (term513 B x) = (term514 B x).
Proof. exact (MK_COMB (@lem5750778 B x) (@lem5750779 B)). Qed.
Lemma lem5750781 {B : Type'} : (term515 B) = (term516 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5750780 B x)). Qed.
Lemma lem5750782 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750783 {B : Type'} : (term504 B) = (term517 B).
Proof. exact (MK_COMB (@lem5750782 B) (@lem5750781 B)). Qed.
Lemma lem5750784 {B : Type'} : ((term503 B) = (term504 B)) = ((term498 B) = (term517 B)).
Proof. exact (MK_COMB (@lem5750775 B) (@lem5750783 B)). Qed.
Lemma lem5750785 {B : Type'} : (term498 B) = (term517 B).
Proof. exact (EQ_MP (@lem5750784 B) (@lem5750765 B)). Qed.
Lemma lem5750787 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5750788 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5750787 (type402 B) P Q). Qed.
Lemma lem5750789 {B : Type'} (x : type402 B) : (term518 B x) = (term519 B x).
Proof. exact (@lem5750788 B (term493 B x) (term266 B)). Qed.
Lemma lem5750790 {B : Type'} (y : type402 B) (x : type402 B) : (term520 B x y) = (term492 B y x).
Proof. exact (eq_refl (term520 B x y)). Qed.
Lemma lem5750791 {B : Type'} (x : type402 B) : (term521 B x) = (term493 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5750790 B y x)). Qed.
Lemma lem5750792 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750793 {B : Type'} (x : type402 B) : (term522 B x) = (term494 B x).
Proof. exact (MK_COMB (@lem5750792 B) (@lem5750791 B x)). Qed.
Lemma lem5750794 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750795 {B : Type'} (x : type402 B) : (term523 B x) = (term512 B x).
Proof. exact (MK_COMB (@lem5750794) (@lem5750793 B x)). Qed.
Lemma lem5750796 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750797 {B : Type'} (x : type402 B) : (term518 B x) = (term514 B x).
Proof. exact (MK_COMB (@lem5750795 B x) (@lem5750796 B)). Qed.
Lemma lem5750798 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750799 {B : Type'} (x : type402 B) : (term524 B x) = (term525 B x).
Proof. exact (MK_COMB (@lem5750798) (@lem5750797 B x)). Qed.
Lemma lem5750800 {B : Type'} (y : type402 B) (x : type402 B) : (term520 B x y) = (term492 B y x).
Proof. exact (eq_refl (term520 B x y)). Qed.
Lemma lem5750801 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750802 {B : Type'} (y : type402 B) (x : type402 B) : (term526 B x y) = (term527 B y x).
Proof. exact (MK_COMB (@lem5750801) (@lem5750800 B y x)). Qed.
Lemma lem5750803 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750804 {B : Type'} (y : type402 B) (x : type402 B) : (term528 B x y) = (term529 B y x).
Proof. exact (MK_COMB (@lem5750802 B y x) (@lem5750803 B)). Qed.
Lemma lem5750805 {B : Type'} (x : type402 B) : (term530 B x) = (term531 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5750804 B y x)). Qed.
Lemma lem5750806 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750807 {B : Type'} (x : type402 B) : (term519 B x) = (term532 B x).
Proof. exact (MK_COMB (@lem5750806 B) (@lem5750805 B x)). Qed.
Lemma lem5750808 {B : Type'} (x : type402 B) : ((term518 B x) = (term519 B x)) = ((term514 B x) = (term532 B x)).
Proof. exact (MK_COMB (@lem5750799 B x) (@lem5750807 B x)). Qed.
Lemma lem5750809 {B : Type'} (x : type402 B) : (term514 B x) = (term532 B x).
Proof. exact (EQ_MP (@lem5750808 B x) (@lem5750789 B x)). Qed.
Lemma lem5750811 {A : Type'} (P : A -> Prop) (Q : Prop) : (term499 A P Q) = (term500 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem5750812 {B : Type'} (P : type82 B) (Q : Prop) : (term501 B P Q) = (term502 B P Q).
Proof. exact (@lem5750811 (type402 B) P Q). Qed.
Lemma lem5750813 {B : Type'} (y : type402 B) (x : type402 B) : (term533 B y x) = (term534 B y x).
Proof. exact (@lem5750812 B (term491 B y x) (term266 B)). Qed.
Lemma lem5750814 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term535 B y x z) = (term489 B y z x).
Proof. exact (eq_refl (term535 B y x z)). Qed.
Lemma lem5750815 {B : Type'} (y : type402 B) (x : type402 B) : (term536 B y x) = (term491 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5750814 B y z x)). Qed.
Lemma lem5750816 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750817 {B : Type'} (y : type402 B) (x : type402 B) : (term537 B y x) = (term492 B y x).
Proof. exact (MK_COMB (@lem5750816 B) (@lem5750815 B y x)). Qed.
Lemma lem5750818 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750819 {B : Type'} (y : type402 B) (x : type402 B) : (term538 B y x) = (term527 B y x).
Proof. exact (MK_COMB (@lem5750818) (@lem5750817 B y x)). Qed.
Lemma lem5750820 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750821 {B : Type'} (y : type402 B) (x : type402 B) : (term533 B y x) = (term529 B y x).
Proof. exact (MK_COMB (@lem5750819 B y x) (@lem5750820 B)). Qed.
Lemma lem5750822 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5750823 {B : Type'} (y : type402 B) (x : type402 B) : (term539 B y x) = (term540 B y x).
Proof. exact (MK_COMB (@lem5750822) (@lem5750821 B y x)). Qed.
Lemma lem5750824 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term535 B y x z) = (term489 B y z x).
Proof. exact (eq_refl (term535 B y x z)). Qed.
Lemma lem5750825 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5750826 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term541 B y x z) = (term542 B y z x).
Proof. exact (MK_COMB (@lem5750825) (@lem5750824 B y z x)). Qed.
Lemma lem5750827 {B : Type'} : (term266 B) = (term266 B).
Proof. exact (eq_refl (term266 B)). Qed.
Lemma lem5750828 {B : Type'} (y : type402 B) (z : type402 B) (x : type402 B) : (term543 B y x z) = (term544 B y z x).
Proof. exact (MK_COMB (@lem5750826 B y z x) (@lem5750827 B)). Qed.
Lemma lem5750829 {B : Type'} (y : type402 B) (x : type402 B) : (term545 B y x) = (term546 B y x).
Proof. exact (fun_ext (fun z : type402 B => @lem5750828 B y z x)). Qed.
Lemma lem5750830 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750831 {B : Type'} (y : type402 B) (x : type402 B) : (term534 B y x) = (term547 B y x).
Proof. exact (MK_COMB (@lem5750830 B) (@lem5750829 B y x)). Qed.
Lemma lem5750832 {B : Type'} (y : type402 B) (x : type402 B) : ((term533 B y x) = (term534 B y x)) = ((term529 B y x) = (term547 B y x)).
Proof. exact (MK_COMB (@lem5750823 B y x) (@lem5750831 B y x)). Qed.
Lemma lem5750833 {B : Type'} (y : type402 B) (x : type402 B) : (term529 B y x) = (term547 B y x).
Proof. exact (EQ_MP (@lem5750832 B y x) (@lem5750813 B y x)). Qed.
Lemma lem5750834 {B : Type'} (x : type402 B) : (term531 B x) = (term548 B x).
Proof. exact (fun_ext (fun y : type402 B => @lem5750833 B y x)). Qed.
Lemma lem5750835 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750836 {B : Type'} (x : type402 B) : (term532 B x) = (term549 B x).
Proof. exact (MK_COMB (@lem5750835 B) (@lem5750834 B x)). Qed.
Lemma lem5750837 {B : Type'} (x : type402 B) : (term514 B x) = (term549 B x).
Proof. exact (TRANS (@lem5750809 B x) (@lem5750836 B x)). Qed.
Lemma lem5750838 {B : Type'} : (term516 B) = (term550 B).
Proof. exact (fun_ext (fun x : type402 B => @lem5750837 B x)). Qed.
Lemma lem5750839 {B : Type'} : (@ex ((B -> B -> B) -> B)) = (@ex ((B -> B -> B) -> B)).
Proof. exact (eq_refl (@ex ((B -> B -> B) -> B))). Qed.
Lemma lem5750840 {B : Type'} : (term517 B) = (term551 B).
Proof. exact (MK_COMB (@lem5750839 B) (@lem5750838 B)). Qed.
Lemma lem5750841 {B : Type'} : (term498 B) = (term551 B).
Proof. exact (TRANS (@lem5750785 B) (@lem5750840 B)). Qed.
Lemma lem5750842 {B : Type'} : (term267 B) = (term551 B).
Proof. exact (TRANS (@lem5750761 B) (@lem5750841 B)). Qed.
Lemma lem5750843 {B : Type'} : (term245 B) = (term551 B).
Proof. exact (TRANS (@lem5750292 B) (@lem5750842 B)). Qed.
Lemma lem5750844 {B : Type'} : (term57 B) = (term551 B).
Proof. exact (TRANS (@lem5750265 B) (@lem5750843 B)). Qed.
Lemma lem5750845 {B : Type'} (h1 : term57 B) : term551 B.
Proof. exact (EQ_MP (@lem5750844 B) (@lem5749755 B h1)). Qed.
Lemma lem5750846 {B : Type'} (x' : type402 B) (h1 : term549 B x') : term549 B x'.
Proof. exact (h1). Qed.
Lemma lem5750847 {B : Type'} (y : type402 B) (x' : type402 B) (h1 : term547 B y x') : term547 B y x'.
Proof. exact (h1). Qed.
Lemma lem5750848 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term544 B y z x'.
Proof. exact (h1). Qed.
Lemma lem5750992 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5750993 {B : Type'} (f : type403 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> Prop) f x).
Proof. exact (@lem5750992 (type1400 B) Prop f x). Qed.
Lemma lem5750995 {B : Type'} (op : type1400 B) : (@monoidal B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5750993 B (@monoidal B) op). Qed.
Lemma lem5751471 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5751472 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751473 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5751480 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751481 {A B : Type'} (f : type749 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5751480 (type1400 B) (type546 A B) f x). Qed.
Lemma lem5751482 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (_72433 op) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op).
Proof. exact (@lem5751481 A B _72433 op). Qed.
Lemma lem5751483 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5751484 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (_72433 op f) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op f).
Proof. exact (MK_COMB (@lem5751482 A B _72433 op) (@lem5751483 A B f)). Qed.
Lemma lem5751486 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751487 {A B : Type'} (f : type546 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5751486 (A -> B) (type1411 A B) f x). Qed.
Lemma lem5751488 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op f) = (term1371 A B _72433 op f).
Proof. exact (@lem5751487 A B (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op) f). Qed.
Lemma lem5751490 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (_72433 op f) = (term1371 A B _72433 op f).
Proof. exact (TRANS (@lem5751484 A B _72433 op f) (@lem5751488 A B _72433 op f)). Qed.
Lemma lem5751499 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751500 {A B : Type'} (f : type748 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5751499 (type1400 B) (type527 A B) f x). Qed.
Lemma lem5751501 {A B : Type'} (op : type1400 B) : (@support A B op) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op).
Proof. exact (@lem5751500 A B (@support A B) op). Qed.
Lemma lem5751502 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5751503 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f).
Proof. exact (MK_COMB (@lem5751501 A B op) (@lem5751502 A B f)). Qed.
Lemma lem5751505 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751506 {A B : Type'} (f : type527 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5751505 (A -> B) (type672 A) f x). Qed.
Lemma lem5751507 {A B : Type'} (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f) = (term1372 A B op f).
Proof. exact (@lem5751506 A B (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op) f). Qed.
Lemma lem5751508 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (term1372 A B op f).
Proof. exact (TRANS (@lem5751503 A B op f) (@lem5751507 A B op f)). Qed.
Lemma lem5751509 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5751510 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1373 A B op f s).
Proof. exact (MK_COMB (@lem5751508 A B op f) (@lem5751509 A s)). Qed.
Lemma lem5751512 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751513 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5751512 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5751514 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1373 A B op f s) = (term1374 A B op f s).
Proof. exact (@lem5751513 A (term1372 A B op f) s). Qed.
Lemma lem5751516 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1374 A B op f s).
Proof. exact (TRANS (@lem5751510 A B op f s) (@lem5751514 A B op f s)). Qed.
Lemma lem5751521 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751522 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751521 (type1400 B) B f x). Qed.
Lemma lem5751524 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5751522 B (@neutral B) op). Qed.
Lemma lem5751525 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1188 A B _72433 op f) = (term1375 A B _72433 op f).
Proof. exact (MK_COMB (@lem5751473 A B) (@lem5751490 A B _72433 op f)). Qed.
Lemma lem5751526 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1189 A B _72433 op f s) = (term1376 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5751525 A B _72433 op f) (@lem5751516 A B op f s)). Qed.
Lemma lem5751527 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72433 f s op) = (term1377 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751526 A B _72433 op f s) (@lem5751524 B op)). Qed.
Lemma lem5751529 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751530 {A B : Type'} (f : type429 A B) (x : type1411 A B) : (f x) = (@I ((A -> B -> B) -> (A -> Prop) -> B -> B) f x).
Proof. exact (@lem5751529 (type1411 A B) (type677 A B) f x). Qed.
Lemma lem5751531 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1375 A B _72433 op f) = (term1378 A B _72433 op f).
Proof. exact (@lem5751530 A B (@ITSET B A) (term1371 A B _72433 op f)). Qed.
Lemma lem5751532 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1374 A B op f s) = (term1374 A B op f s).
Proof. exact (eq_refl (term1374 A B op f s)). Qed.
Lemma lem5751533 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72433 op f s) = (term1379 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5751531 A B _72433 op f) (@lem5751532 A B op f s)). Qed.
Lemma lem5751535 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751536 {A B : Type'} (f : type677 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> B) f x).
Proof. exact (@lem5751535 (A -> Prop) (B -> B) f x). Qed.
Lemma lem5751537 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1379 A B _72433 op f s) = (term1380 A B _72433 op f s).
Proof. exact (@lem5751536 A B (term1378 A B _72433 op f) (term1374 A B op f s)). Qed.
Lemma lem5751538 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72433 op f s) = (term1380 A B _72433 op f s).
Proof. exact (TRANS (@lem5751533 A B _72433 op f s) (@lem5751537 A B _72433 op f s)). Qed.
Lemma lem5751539 {B : Type'} (op : type1400 B) : (@I ((B -> B -> B) -> B) (@neutral B) op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751540 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72433 f s op) = (term1381 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751538 A B _72433 op f s) (@lem5751539 B op)). Qed.
Lemma lem5751542 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751543 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751542 B B f x). Qed.
Lemma lem5751544 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1381 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (@lem5751543 B (term1380 A B _72433 op f s) (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751545 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (TRANS (@lem5751540 A B _72433 f s op) (@lem5751544 A B _72433 f s op)). Qed.
Lemma lem5751546 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (TRANS (@lem5751527 A B _72433 f s op) (@lem5751545 A B _72433 f s op)). Qed.
Lemma lem5751547 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751552 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751553 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751552 (type1400 B) B f x). Qed.
Lemma lem5751555 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5751553 B (@neutral B) op). Qed.
Lemma lem5751556 {A B : Type'} : (@ITSET B A) = (@ITSET B A).
Proof. exact (eq_refl (@ITSET B A)). Qed.
Lemma lem5751563 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751564 {A B : Type'} (f : type749 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5751563 (type1400 B) (type546 A B) f x). Qed.
Lemma lem5751565 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : (_72433 op) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op).
Proof. exact (@lem5751564 A B _72433 op). Qed.
Lemma lem5751566 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5751567 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (_72433 op f) = (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op f).
Proof. exact (MK_COMB (@lem5751565 A B _72433 op) (@lem5751566 A B f)). Qed.
Lemma lem5751569 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751570 {A B : Type'} (f : type546 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B -> B) f x).
Proof. exact (@lem5751569 (A -> B) (type1411 A B) f x). Qed.
Lemma lem5751571 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op f) = (term1371 A B _72433 op f).
Proof. exact (@lem5751570 A B (@I ((B -> B -> B) -> (A -> B) -> A -> B -> B) _72433 op) f). Qed.
Lemma lem5751573 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (_72433 op f) = (term1371 A B _72433 op f).
Proof. exact (TRANS (@lem5751567 A B _72433 op f) (@lem5751571 A B _72433 op f)). Qed.
Lemma lem5751582 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751583 {A B : Type'} (f : type748 A B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5751582 (type1400 B) (type527 A B) f x). Qed.
Lemma lem5751584 {A B : Type'} (op : type1400 B) : (@support A B op) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op).
Proof. exact (@lem5751583 A B (@support A B) op). Qed.
Lemma lem5751585 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem5751586 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f).
Proof. exact (MK_COMB (@lem5751584 A B op) (@lem5751585 A B f)). Qed.
Lemma lem5751588 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751589 {A B : Type'} (f : type527 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5751588 (A -> B) (type672 A) f x). Qed.
Lemma lem5751590 {A B : Type'} (op : type1400 B) (f : A -> B) : (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op f) = (term1372 A B op f).
Proof. exact (@lem5751589 A B (@I ((B -> B -> B) -> (A -> B) -> (A -> Prop) -> A -> Prop) (@support A B) op) f). Qed.
Lemma lem5751591 {A B : Type'} (op : type1400 B) (f : A -> B) : (@support A B op f) = (term1372 A B op f).
Proof. exact (TRANS (@lem5751586 A B op f) (@lem5751590 A B op f)). Qed.
Lemma lem5751592 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem5751593 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1373 A B op f s).
Proof. exact (MK_COMB (@lem5751591 A B op f) (@lem5751592 A s)). Qed.
Lemma lem5751595 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751596 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem5751595 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem5751597 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1373 A B op f s) = (term1374 A B op f s).
Proof. exact (@lem5751596 A (term1372 A B op f) s). Qed.
Lemma lem5751599 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (@support A B op f s) = (term1374 A B op f s).
Proof. exact (TRANS (@lem5751593 A B op f s) (@lem5751597 A B op f s)). Qed.
Lemma lem5751604 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751605 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751604 (type1400 B) B f x). Qed.
Lemma lem5751607 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5751605 B (@neutral B) op). Qed.
Lemma lem5751608 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1188 A B _72433 op f) = (term1375 A B _72433 op f).
Proof. exact (MK_COMB (@lem5751556 A B) (@lem5751573 A B _72433 op f)). Qed.
Lemma lem5751609 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1189 A B _72433 op f s) = (term1376 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5751608 A B _72433 op f) (@lem5751599 A B op f s)). Qed.
Lemma lem5751610 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72433 f s op) = (term1377 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751609 A B _72433 op f s) (@lem5751607 B op)). Qed.
Lemma lem5751612 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751613 {A B : Type'} (f : type429 A B) (x : type1411 A B) : (f x) = (@I ((A -> B -> B) -> (A -> Prop) -> B -> B) f x).
Proof. exact (@lem5751612 (type1411 A B) (type677 A B) f x). Qed.
Lemma lem5751614 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) : (term1375 A B _72433 op f) = (term1378 A B _72433 op f).
Proof. exact (@lem5751613 A B (@ITSET B A) (term1371 A B _72433 op f)). Qed.
Lemma lem5751615 {A B : Type'} (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1374 A B op f s) = (term1374 A B op f s).
Proof. exact (eq_refl (term1374 A B op f s)). Qed.
Lemma lem5751616 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72433 op f s) = (term1379 A B _72433 op f s).
Proof. exact (MK_COMB (@lem5751614 A B _72433 op f) (@lem5751615 A B op f s)). Qed.
Lemma lem5751618 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751619 {A B : Type'} (f : type677 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> B) f x).
Proof. exact (@lem5751618 (A -> Prop) (B -> B) f x). Qed.
Lemma lem5751620 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1379 A B _72433 op f s) = (term1380 A B _72433 op f s).
Proof. exact (@lem5751619 A B (term1378 A B _72433 op f) (term1374 A B op f s)). Qed.
Lemma lem5751621 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) (f : A -> B) (s : A -> Prop) : (term1376 A B _72433 op f s) = (term1380 A B _72433 op f s).
Proof. exact (TRANS (@lem5751616 A B _72433 op f s) (@lem5751620 A B _72433 op f s)). Qed.
Lemma lem5751622 {B : Type'} (op : type1400 B) : (@I ((B -> B -> B) -> B) (@neutral B) op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751623 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72433 f s op) = (term1381 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751621 A B _72433 op f s) (@lem5751622 B op)). Qed.
Lemma lem5751625 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751626 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751625 B B f x). Qed.
Lemma lem5751627 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1381 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (@lem5751626 B (term1380 A B _72433 op f s) (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751628 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1377 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (TRANS (@lem5751623 A B _72433 f s op) (@lem5751627 A B _72433 f s op)). Qed.
Lemma lem5751629 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1190 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (TRANS (@lem5751610 A B _72433 f s op) (@lem5751628 A B _72433 f s op)). Qed.
Lemma lem5751630 {B : Type'} (op : type1400 B) : (term552 B op) = (term553 B op).
Proof. exact (MK_COMB (@lem5751547 B op) (@lem5751555 B op)). Qed.
Lemma lem5751631 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1438 A B _72433 f s op) = (term1520 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751630 B op) (@lem5751629 A B _72433 f s op)). Qed.
Lemma lem5751633 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751634 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751633 B (B -> B) f x). Qed.
Lemma lem5751635 {B : Type'} (op : type1400 B) : (term553 B op) = (term555 B op).
Proof. exact (@lem5751634 B op (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751636 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1382 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (eq_refl (term1382 A B _72433 f s op)). Qed.
Lemma lem5751637 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1520 A B _72433 f s op) = (term1521 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751635 B op) (@lem5751636 A B _72433 f s op)). Qed.
Lemma lem5751639 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751640 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751639 B B f x). Qed.
Lemma lem5751641 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1521 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (@lem5751640 B (term555 B op) (term1382 A B _72433 f s op)). Qed.
Lemma lem5751642 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1520 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (TRANS (@lem5751637 A B _72433 f s op) (@lem5751641 A B _72433 f s op)). Qed.
Lemma lem5751643 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1438 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (TRANS (@lem5751631 A B _72433 f s op) (@lem5751642 A B _72433 f s op)). Qed.
Lemma lem5751644 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1191 A B _72433 f s op) = (term1383 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751472 B) (@lem5751546 A B _72433 f s op)). Qed.
Lemma lem5751645 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : ((term1190 A B _72433 f s op) = (term1438 A B _72433 f s op)) = ((term1382 A B _72433 f s op) = (term1522 A B _72433 f s op)).
Proof. exact (MK_COMB (@lem5751644 A B _72433 f s op) (@lem5751643 A B _72433 f s op)). Qed.
Lemma lem5751646 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1439 A B _72433 f s op) = (term1523 A B _72433 f s op).
Proof. exact (MK_COMB (@lem5751471) (@lem5751645 A B _72433 f s op)). Qed.
Lemma lem5751648 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751649 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751654 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751655 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751654 (type1400 B) B f x). Qed.
Lemma lem5751657 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5751655 B (@neutral B) op). Qed.
Lemma lem5751658 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5751659 {B : Type'} (op : type1400 B) : (term552 B op) = (term553 B op).
Proof. exact (MK_COMB (@lem5751649 B op) (@lem5751657 B op)). Qed.
Lemma lem5751660 {B : Type'} (op : type1400 B) (x : B) : (term112 B op x) = (term554 B op x).
Proof. exact (MK_COMB (@lem5751659 B op) (@lem5751658 B x)). Qed.
Lemma lem5751662 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751663 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751662 B (B -> B) f x). Qed.
Lemma lem5751664 {B : Type'} (op : type1400 B) : (term553 B op) = (term555 B op).
Proof. exact (@lem5751663 B op (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751665 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5751666 {B : Type'} (op : type1400 B) (x : B) : (term554 B op x) = (term556 B op x).
Proof. exact (MK_COMB (@lem5751664 B op) (@lem5751665 B x)). Qed.
Lemma lem5751668 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751669 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751668 B B f x). Qed.
Lemma lem5751670 {B : Type'} (op : type1400 B) (x : B) : (term556 B op x) = (term557 B op x).
Proof. exact (@lem5751669 B (term555 B op) x). Qed.
Lemma lem5751671 {B : Type'} (op : type1400 B) (x : B) : (term554 B op x) = (term557 B op x).
Proof. exact (TRANS (@lem5751666 B op x) (@lem5751670 B op x)). Qed.
Lemma lem5751672 {B : Type'} (op : type1400 B) (x : B) : (term112 B op x) = (term557 B op x).
Proof. exact (TRANS (@lem5751660 B op x) (@lem5751671 B op x)). Qed.
Lemma lem5751673 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5751674 {B : Type'} (op : type1400 B) (x : B) : (term558 B op x) = (term559 B op x).
Proof. exact (MK_COMB (@lem5751648 B) (@lem5751672 B op x)). Qed.
Lemma lem5751675 {B : Type'} (op : type1400 B) (x : B) : ((term112 B op x) = x) = ((term557 B op x) = x).
Proof. exact (MK_COMB (@lem5751674 B op x) (@lem5751673 B x)). Qed.
Lemma lem5751676 {B : Type'} (op : type1400 B) : (term113 B op) = (term560 B op).
Proof. exact (fun_ext (fun x : B => @lem5751675 B op x)). Qed.
Lemma lem5751677 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5751678 {B : Type'} (op : type1400 B) : (term114 B op) = (term561 B op).
Proof. exact (MK_COMB (@lem5751677 B) (@lem5751676 B op)). Qed.
Lemma lem5751679 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751688 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751689 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751688 B (B -> B) f x). Qed.
Lemma lem5751690 {B : Type'} (op : type1400 B) (y : B) : (op y) = (@I (B -> B -> B) op y).
Proof. exact (@lem5751689 B op y). Qed.
Lemma lem5751691 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5751692 {B : Type'} (op : type1400 B) (y : B) (z : B) : (op y z) = (@I (B -> B -> B) op y z).
Proof. exact (MK_COMB (@lem5751690 B op y) (@lem5751691 B z)). Qed.
Lemma lem5751694 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751695 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751694 B B f x). Qed.
Lemma lem5751696 {B : Type'} (op : type1400 B) (y : B) (z : B) : (@I (B -> B -> B) op y z) = (term562 B op y z).
Proof. exact (@lem5751695 B (@I (B -> B -> B) op y) z). Qed.
Lemma lem5751698 {B : Type'} (op : type1400 B) (y : B) (z : B) : (op y z) = (term562 B op y z).
Proof. exact (TRANS (@lem5751692 B op y z) (@lem5751696 B op y z)). Qed.
Lemma lem5751699 {B : Type'} (op : type1400 B) (x : B) : (op x) = (op x).
Proof. exact (eq_refl (op x)). Qed.
Lemma lem5751700 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term115 B x op y z) = (term563 B x op y z).
Proof. exact (MK_COMB (@lem5751699 B op x) (@lem5751698 B op y z)). Qed.
Lemma lem5751702 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751703 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751702 B (B -> B) f x). Qed.
Lemma lem5751704 {B : Type'} (op : type1400 B) (x : B) : (op x) = (@I (B -> B -> B) op x).
Proof. exact (@lem5751703 B op x). Qed.
Lemma lem5751705 {B : Type'} (op : type1400 B) (y : B) (z : B) : (term562 B op y z) = (term562 B op y z).
Proof. exact (eq_refl (term562 B op y z)). Qed.
Lemma lem5751706 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term563 B x op y z) = (term564 B x op y z).
Proof. exact (MK_COMB (@lem5751704 B op x) (@lem5751705 B op y z)). Qed.
Lemma lem5751708 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751709 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751708 B B f x). Qed.
Lemma lem5751710 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term564 B x op y z) = (term565 B x op y z).
Proof. exact (@lem5751709 B (@I (B -> B -> B) op x) (term562 B op y z)). Qed.
Lemma lem5751711 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term563 B x op y z) = (term565 B x op y z).
Proof. exact (TRANS (@lem5751706 B x op y z) (@lem5751710 B x op y z)). Qed.
Lemma lem5751712 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term115 B x op y z) = (term565 B x op y z).
Proof. exact (TRANS (@lem5751700 B x op y z) (@lem5751711 B x op y z)). Qed.
Lemma lem5751713 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751720 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751721 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751720 B (B -> B) f x). Qed.
Lemma lem5751722 {B : Type'} (op : type1400 B) (x : B) : (op x) = (@I (B -> B -> B) op x).
Proof. exact (@lem5751721 B op x). Qed.
Lemma lem5751723 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5751724 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (@I (B -> B -> B) op x y).
Proof. exact (MK_COMB (@lem5751722 B op x) (@lem5751723 B y)). Qed.
Lemma lem5751726 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751727 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751726 B B f x). Qed.
Lemma lem5751728 {B : Type'} (op : type1400 B) (x : B) (y : B) : (@I (B -> B -> B) op x y) = (term562 B op x y).
Proof. exact (@lem5751727 B (@I (B -> B -> B) op x) y). Qed.
Lemma lem5751730 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (term562 B op x y).
Proof. exact (TRANS (@lem5751724 B op x y) (@lem5751728 B op x y)). Qed.
Lemma lem5751731 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5751732 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term566 B op x y) = (term567 B op x y).
Proof. exact (MK_COMB (@lem5751713 B op) (@lem5751730 B op x y)). Qed.
Lemma lem5751733 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term116 B op x y z) = (term568 B op x y z).
Proof. exact (MK_COMB (@lem5751732 B op x y) (@lem5751731 B z)). Qed.
Lemma lem5751735 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751736 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751735 B (B -> B) f x). Qed.
Lemma lem5751737 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term567 B op x y) = (term569 B op x y).
Proof. exact (@lem5751736 B op (term562 B op x y)). Qed.
Lemma lem5751738 {B : Type'} (z : B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem5751739 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term568 B op x y z) = (term570 B op x y z).
Proof. exact (MK_COMB (@lem5751737 B op x y) (@lem5751738 B z)). Qed.
Lemma lem5751741 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751742 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751741 B B f x). Qed.
Lemma lem5751743 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term570 B op x y z) = (term571 B op x y z).
Proof. exact (@lem5751742 B (term569 B op x y) z). Qed.
Lemma lem5751744 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term568 B op x y z) = (term571 B op x y z).
Proof. exact (TRANS (@lem5751739 B op x y z) (@lem5751743 B op x y z)). Qed.
Lemma lem5751745 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term116 B op x y z) = (term571 B op x y z).
Proof. exact (TRANS (@lem5751733 B op x y z) (@lem5751744 B op x y z)). Qed.
Lemma lem5751746 {B : Type'} (x : B) (op : type1400 B) (y : B) (z : B) : (term572 B x op y z) = (term573 B x op y z).
Proof. exact (MK_COMB (@lem5751679 B) (@lem5751712 B x op y z)). Qed.
Lemma lem5751747 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : ((term115 B x op y z) = (term116 B op x y z)) = ((term565 B x op y z) = (term571 B op x y z)).
Proof. exact (MK_COMB (@lem5751746 B x op y z) (@lem5751745 B op x y z)). Qed.
Lemma lem5751748 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term117 B op x y) = (term574 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5751747 B op x y z)). Qed.
Lemma lem5751749 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5751750 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term118 B op x y) = (term575 B op x y).
Proof. exact (MK_COMB (@lem5751749 B) (@lem5751748 B op x y)). Qed.
Lemma lem5751751 {B : Type'} (op : type1400 B) (x : B) : (term119 B op x) = (term576 B op x).
Proof. exact (fun_ext (fun y : B => @lem5751750 B op x y)). Qed.
Lemma lem5751752 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5751753 {B : Type'} (op : type1400 B) (x : B) : (term120 B op x) = (term577 B op x).
Proof. exact (MK_COMB (@lem5751752 B) (@lem5751751 B op x)). Qed.
Lemma lem5751754 {B : Type'} (op : type1400 B) : (term121 B op) = (term578 B op).
Proof. exact (fun_ext (fun x : B => @lem5751753 B op x)). Qed.
Lemma lem5751755 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5751756 {B : Type'} (op : type1400 B) : (term122 B op) = (term579 B op).
Proof. exact (MK_COMB (@lem5751755 B) (@lem5751754 B op)). Qed.
Lemma lem5751757 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5751758 {B : Type'} (op : type1400 B) : (term123 B op) = (term580 B op).
Proof. exact (MK_COMB (@lem5751757) (@lem5751756 B op)). Qed.
Lemma lem5751759 {B : Type'} (op : type1400 B) : (term124 B op) = (term581 B op).
Proof. exact (MK_COMB (@lem5751758 B op) (@lem5751678 B op)). Qed.
Lemma lem5751760 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751767 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751768 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751767 B (B -> B) f x). Qed.
Lemma lem5751769 {B : Type'} (op : type1400 B) (x : B) : (op x) = (@I (B -> B -> B) op x).
Proof. exact (@lem5751768 B op x). Qed.
Lemma lem5751770 {B : Type'} (y : B) : y = y.
Proof. exact (eq_refl y). Qed.
Lemma lem5751771 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (@I (B -> B -> B) op x y).
Proof. exact (MK_COMB (@lem5751769 B op x) (@lem5751770 B y)). Qed.
Lemma lem5751773 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751774 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751773 B B f x). Qed.
Lemma lem5751775 {B : Type'} (op : type1400 B) (x : B) (y : B) : (@I (B -> B -> B) op x y) = (term562 B op x y).
Proof. exact (@lem5751774 B (@I (B -> B -> B) op x) y). Qed.
Lemma lem5751777 {B : Type'} (op : type1400 B) (x : B) (y : B) : (op x y) = (term562 B op x y).
Proof. exact (TRANS (@lem5751771 B op x y) (@lem5751775 B op x y)). Qed.
Lemma lem5751784 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751785 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751784 B (B -> B) f x). Qed.
Lemma lem5751786 {B : Type'} (op : type1400 B) (y : B) : (op y) = (@I (B -> B -> B) op y).
Proof. exact (@lem5751785 B op y). Qed.
Lemma lem5751787 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem5751788 {B : Type'} (op : type1400 B) (y : B) (x : B) : (op y x) = (@I (B -> B -> B) op y x).
Proof. exact (MK_COMB (@lem5751786 B op y) (@lem5751787 B x)). Qed.
Lemma lem5751790 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751791 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751790 B B f x). Qed.
Lemma lem5751792 {B : Type'} (op : type1400 B) (y : B) (x : B) : (@I (B -> B -> B) op y x) = (term562 B op y x).
Proof. exact (@lem5751791 B (@I (B -> B -> B) op y) x). Qed.
Lemma lem5751794 {B : Type'} (op : type1400 B) (y : B) (x : B) : (op y x) = (term562 B op y x).
Proof. exact (TRANS (@lem5751788 B op y x) (@lem5751792 B op y x)). Qed.
Lemma lem5751795 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term582 B op x y) = (term583 B op x y).
Proof. exact (MK_COMB (@lem5751760 B) (@lem5751777 B op x y)). Qed.
Lemma lem5751796 {B : Type'} (op : type1400 B) (y : B) (x : B) : ((op x y) = (op y x)) = ((term562 B op x y) = (term562 B op y x)).
Proof. exact (MK_COMB (@lem5751795 B op x y) (@lem5751794 B op y x)). Qed.
Lemma lem5751797 {B : Type'} (op : type1400 B) (x : B) : (term125 B op x) = (term584 B op x).
Proof. exact (fun_ext (fun y : B => @lem5751796 B op y x)). Qed.
Lemma lem5751798 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5751799 {B : Type'} (op : type1400 B) (x : B) : (term126 B op x) = (term585 B op x).
Proof. exact (MK_COMB (@lem5751798 B) (@lem5751797 B op x)). Qed.
Lemma lem5751800 {B : Type'} (op : type1400 B) : (term127 B op) = (term586 B op).
Proof. exact (fun_ext (fun x : B => @lem5751799 B op x)). Qed.
Lemma lem5751801 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5751802 {B : Type'} (op : type1400 B) : (term128 B op) = (term587 B op).
Proof. exact (MK_COMB (@lem5751801 B) (@lem5751800 B op)). Qed.
Lemma lem5751803 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5751804 {B : Type'} (op : type1400 B) : (term129 B op) = (term588 B op).
Proof. exact (MK_COMB (@lem5751803) (@lem5751802 B op)). Qed.
Lemma lem5751805 {B : Type'} (op : type1400 B) : (term130 B op) = (term589 B op).
Proof. exact (MK_COMB (@lem5751804 B op) (@lem5751759 B op)). Qed.
Lemma lem5751806 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5751811 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751812 {B : Type'} (f : type403 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> Prop) f x).
Proof. exact (@lem5751811 (type1400 B) Prop f x). Qed.
Lemma lem5751814 {B : Type'} (op : type1400 B) : (@monoidal B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5751812 B (@monoidal B) op). Qed.
Lemma lem5751815 {B : Type'} (op : type1400 B) : (term590 B op) = (term591 B op).
Proof. exact (MK_COMB (@lem5751806) (@lem5751814 B op)). Qed.
Lemma lem5751816 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5751817 {B : Type'} (op : type1400 B) : (term235 B op) = (term592 B op).
Proof. exact (MK_COMB (@lem5751816) (@lem5751815 B op)). Qed.
Lemma lem5751818 {B : Type'} (op : type1400 B) : (term236 B op) = (term593 B op).
Proof. exact (MK_COMB (@lem5751817 B op) (@lem5751805 B op)). Qed.
Lemma lem5751819 {B : Type'} : (term251 B) = (term594 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5751818 B op)). Qed.
Lemma lem5751820 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5751821 {B : Type'} : (term266 B) = (term595 B).
Proof. exact (MK_COMB (@lem5751820 B) (@lem5751819 B)). Qed.
Lemma lem5751822 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5751823 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751824 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751829 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751830 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751829 (type1400 B) B f x). Qed.
Lemma lem5751832 {B : Type'} (op : type1400 B) : (@neutral B op) = (@I ((B -> B -> B) -> B) (@neutral B) op).
Proof. exact (@lem5751830 B (@neutral B) op). Qed.
Lemma lem5751837 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751838 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751837 (type1400 B) B f x). Qed.
Lemma lem5751840 {B : Type'} (x' : type402 B) (op : type1400 B) : (x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (@lem5751838 B x' op). Qed.
Lemma lem5751841 {B : Type'} (op : type1400 B) : (term552 B op) = (term553 B op).
Proof. exact (MK_COMB (@lem5751824 B op) (@lem5751832 B op)). Qed.
Lemma lem5751842 {B : Type'} (x' : type402 B) (op : type1400 B) : (term596 B x' op) = (term597 B x' op).
Proof. exact (MK_COMB (@lem5751841 B op) (@lem5751840 B x' op)). Qed.
Lemma lem5751844 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751845 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751844 B (B -> B) f x). Qed.
Lemma lem5751846 {B : Type'} (op : type1400 B) : (term553 B op) = (term555 B op).
Proof. exact (@lem5751845 B op (@I ((B -> B -> B) -> B) (@neutral B) op)). Qed.
Lemma lem5751847 {B : Type'} (x' : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5751848 {B : Type'} (x' : type402 B) (op : type1400 B) : (term597 B x' op) = (term598 B x' op).
Proof. exact (MK_COMB (@lem5751846 B op) (@lem5751847 B x' op)). Qed.
Lemma lem5751850 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751851 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751850 B B f x). Qed.
Lemma lem5751852 {B : Type'} (x' : type402 B) (op : type1400 B) : (term598 B x' op) = (term599 B x' op).
Proof. exact (@lem5751851 B (term555 B op) (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5751853 {B : Type'} (x' : type402 B) (op : type1400 B) : (term597 B x' op) = (term599 B x' op).
Proof. exact (TRANS (@lem5751848 B x' op) (@lem5751852 B x' op)). Qed.
Lemma lem5751854 {B : Type'} (x' : type402 B) (op : type1400 B) : (term596 B x' op) = (term599 B x' op).
Proof. exact (TRANS (@lem5751842 B x' op) (@lem5751853 B x' op)). Qed.
Lemma lem5751859 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751860 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751859 (type1400 B) B f x). Qed.
Lemma lem5751862 {B : Type'} (x' : type402 B) (op : type1400 B) : (x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (@lem5751860 B x' op). Qed.
Lemma lem5751863 {B : Type'} (x' : type402 B) (op : type1400 B) : (term600 B x' op) = (term601 B x' op).
Proof. exact (MK_COMB (@lem5751823 B) (@lem5751854 B x' op)). Qed.
Lemma lem5751864 {B : Type'} (x' : type402 B) (op : type1400 B) : ((term596 B x' op) = (x' op)) = ((term599 B x' op) = (@I ((B -> B -> B) -> B) x' op)).
Proof. exact (MK_COMB (@lem5751863 B x' op) (@lem5751862 B x' op)). Qed.
Lemma lem5751865 {B : Type'} (x' : type402 B) (op : type1400 B) : (term602 B x' op) = (term603 B x' op).
Proof. exact (MK_COMB (@lem5751822) (@lem5751864 B x' op)). Qed.
Lemma lem5751866 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5751867 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751868 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751873 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751874 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751873 (type1400 B) B f x). Qed.
Lemma lem5751876 {B : Type'} (x' : type402 B) (op : type1400 B) : (x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (@lem5751874 B x' op). Qed.
Lemma lem5751877 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751882 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751883 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751882 (type1400 B) B f x). Qed.
Lemma lem5751885 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5751883 B y op). Qed.
Lemma lem5751890 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751891 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751890 (type1400 B) B f x). Qed.
Lemma lem5751893 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (@lem5751891 B z op). Qed.
Lemma lem5751894 {B : Type'} (y : type402 B) (op : type1400 B) : (term604 B y op) = (term605 B y op).
Proof. exact (MK_COMB (@lem5751877 B op) (@lem5751885 B y op)). Qed.
Lemma lem5751895 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term606 B y z op) = (term607 B y z op).
Proof. exact (MK_COMB (@lem5751894 B y op) (@lem5751893 B z op)). Qed.
Lemma lem5751897 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751898 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751897 B (B -> B) f x). Qed.
Lemma lem5751899 {B : Type'} (y : type402 B) (op : type1400 B) : (term605 B y op) = (term608 B y op).
Proof. exact (@lem5751898 B op (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5751900 {B : Type'} (z : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5751901 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term607 B y z op) = (term609 B y z op).
Proof. exact (MK_COMB (@lem5751899 B y op) (@lem5751900 B z op)). Qed.
Lemma lem5751903 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751904 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751903 B B f x). Qed.
Lemma lem5751905 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term609 B y z op) = (term610 B y z op).
Proof. exact (@lem5751904 B (term608 B y op) (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5751906 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term607 B y z op) = (term610 B y z op).
Proof. exact (TRANS (@lem5751901 B y z op) (@lem5751905 B y z op)). Qed.
Lemma lem5751907 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term606 B y z op) = (term610 B y z op).
Proof. exact (TRANS (@lem5751895 B y z op) (@lem5751906 B y z op)). Qed.
Lemma lem5751908 {B : Type'} (x' : type402 B) (op : type1400 B) : (term604 B x' op) = (term605 B x' op).
Proof. exact (MK_COMB (@lem5751868 B op) (@lem5751876 B x' op)). Qed.
Lemma lem5751909 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term611 B x' y z op) = (term612 B x' y z op).
Proof. exact (MK_COMB (@lem5751908 B x' op) (@lem5751907 B y z op)). Qed.
Lemma lem5751911 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751912 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751911 B (B -> B) f x). Qed.
Lemma lem5751913 {B : Type'} (x' : type402 B) (op : type1400 B) : (term605 B x' op) = (term608 B x' op).
Proof. exact (@lem5751912 B op (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5751914 {B : Type'} (y : type402 B) (z : type402 B) (op : type1400 B) : (term610 B y z op) = (term610 B y z op).
Proof. exact (eq_refl (term610 B y z op)). Qed.
Lemma lem5751915 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term612 B x' y z op) = (term613 B x' y z op).
Proof. exact (MK_COMB (@lem5751913 B x' op) (@lem5751914 B y z op)). Qed.
Lemma lem5751917 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751918 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751917 B B f x). Qed.
Lemma lem5751919 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term613 B x' y z op) = (term614 B x' y z op).
Proof. exact (@lem5751918 B (term608 B x' op) (term610 B y z op)). Qed.
Lemma lem5751920 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term612 B x' y z op) = (term614 B x' y z op).
Proof. exact (TRANS (@lem5751915 B x' y z op) (@lem5751919 B x' y z op)). Qed.
Lemma lem5751921 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term611 B x' y z op) = (term614 B x' y z op).
Proof. exact (TRANS (@lem5751909 B x' y z op) (@lem5751920 B x' y z op)). Qed.
Lemma lem5751922 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751923 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751928 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751929 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751928 (type1400 B) B f x). Qed.
Lemma lem5751931 {B : Type'} (x' : type402 B) (op : type1400 B) : (x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (@lem5751929 B x' op). Qed.
Lemma lem5751936 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751937 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751936 (type1400 B) B f x). Qed.
Lemma lem5751939 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5751937 B y op). Qed.
Lemma lem5751940 {B : Type'} (x' : type402 B) (op : type1400 B) : (term604 B x' op) = (term605 B x' op).
Proof. exact (MK_COMB (@lem5751923 B op) (@lem5751931 B x' op)). Qed.
Lemma lem5751941 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x' y op) = (term607 B x' y op).
Proof. exact (MK_COMB (@lem5751940 B x' op) (@lem5751939 B y op)). Qed.
Lemma lem5751943 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751944 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751943 B (B -> B) f x). Qed.
Lemma lem5751945 {B : Type'} (x' : type402 B) (op : type1400 B) : (term605 B x' op) = (term608 B x' op).
Proof. exact (@lem5751944 B op (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5751946 {B : Type'} (y : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5751947 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x' y op) = (term609 B x' y op).
Proof. exact (MK_COMB (@lem5751945 B x' op) (@lem5751946 B y op)). Qed.
Lemma lem5751949 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751950 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751949 B B f x). Qed.
Lemma lem5751951 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term609 B x' y op) = (term610 B x' y op).
Proof. exact (@lem5751950 B (term608 B x' op) (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5751952 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x' y op) = (term610 B x' y op).
Proof. exact (TRANS (@lem5751947 B x' y op) (@lem5751951 B x' y op)). Qed.
Lemma lem5751953 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x' y op) = (term610 B x' y op).
Proof. exact (TRANS (@lem5751941 B x' y op) (@lem5751952 B x' y op)). Qed.
Lemma lem5751958 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751959 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751958 (type1400 B) B f x). Qed.
Lemma lem5751961 {B : Type'} (z : type402 B) (op : type1400 B) : (z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (@lem5751959 B z op). Qed.
Lemma lem5751962 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term615 B x' y op) = (term616 B x' y op).
Proof. exact (MK_COMB (@lem5751922 B op) (@lem5751953 B x' y op)). Qed.
Lemma lem5751963 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term617 B x' y z op) = (term618 B x' y z op).
Proof. exact (MK_COMB (@lem5751962 B x' y op) (@lem5751961 B z op)). Qed.
Lemma lem5751965 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751966 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5751965 B (B -> B) f x). Qed.
Lemma lem5751967 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term616 B x' y op) = (term619 B x' y op).
Proof. exact (@lem5751966 B op (term610 B x' y op)). Qed.
Lemma lem5751968 {B : Type'} (z : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) z op) = (@I ((B -> B -> B) -> B) z op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5751969 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term618 B x' y z op) = (term620 B x' y z op).
Proof. exact (MK_COMB (@lem5751967 B x' y op) (@lem5751968 B z op)). Qed.
Lemma lem5751971 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751972 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5751971 B B f x). Qed.
Lemma lem5751973 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term620 B x' y z op) = (term621 B x' y z op).
Proof. exact (@lem5751972 B (term619 B x' y op) (@I ((B -> B -> B) -> B) z op)). Qed.
Lemma lem5751974 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term618 B x' y z op) = (term621 B x' y z op).
Proof. exact (TRANS (@lem5751969 B x' y z op) (@lem5751973 B x' y z op)). Qed.
Lemma lem5751975 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term617 B x' y z op) = (term621 B x' y z op).
Proof. exact (TRANS (@lem5751963 B x' y z op) (@lem5751974 B x' y z op)). Qed.
Lemma lem5751976 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term622 B x' y z op) = (term623 B x' y z op).
Proof. exact (MK_COMB (@lem5751867 B) (@lem5751921 B x' y z op)). Qed.
Lemma lem5751977 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : ((term611 B x' y z op) = (term617 B x' y z op)) = ((term614 B x' y z op) = (term621 B x' y z op)).
Proof. exact (MK_COMB (@lem5751976 B x' y z op) (@lem5751975 B x' y z op)). Qed.
Lemma lem5751978 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term624 B x' y z op) = (term625 B x' y z op).
Proof. exact (MK_COMB (@lem5751866) (@lem5751977 B x' y z op)). Qed.
Lemma lem5751979 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5751980 {B : Type'} (x' : type402 B) (y : type402 B) (z : type402 B) (op : type1400 B) : (term626 B x' y z op) = (term627 B x' y z op).
Proof. exact (MK_COMB (@lem5751979) (@lem5751978 B x' y z op)). Qed.
Lemma lem5751981 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (op : type1400 B) : (term628 B y z x' op) = (term629 B y z x' op).
Proof. exact (MK_COMB (@lem5751980 B x' y z op) (@lem5751865 B x' op)). Qed.
Lemma lem5751982 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem5751983 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem5751984 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5751989 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751990 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751989 (type1400 B) B f x). Qed.
Lemma lem5751992 {B : Type'} (x' : type402 B) (op : type1400 B) : (x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (@lem5751990 B x' op). Qed.
Lemma lem5751997 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5751998 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5751997 (type1400 B) B f x). Qed.
Lemma lem5752000 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5751998 B y op). Qed.
Lemma lem5752001 {B : Type'} (x' : type402 B) (op : type1400 B) : (term604 B x' op) = (term605 B x' op).
Proof. exact (MK_COMB (@lem5751984 B op) (@lem5751992 B x' op)). Qed.
Lemma lem5752002 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x' y op) = (term607 B x' y op).
Proof. exact (MK_COMB (@lem5752001 B x' op) (@lem5752000 B y op)). Qed.
Lemma lem5752004 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752005 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5752004 B (B -> B) f x). Qed.
Lemma lem5752006 {B : Type'} (x' : type402 B) (op : type1400 B) : (term605 B x' op) = (term608 B x' op).
Proof. exact (@lem5752005 B op (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5752007 {B : Type'} (y : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5752008 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x' y op) = (term609 B x' y op).
Proof. exact (MK_COMB (@lem5752006 B x' op) (@lem5752007 B y op)). Qed.
Lemma lem5752010 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752011 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5752010 B B f x). Qed.
Lemma lem5752012 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term609 B x' y op) = (term610 B x' y op).
Proof. exact (@lem5752011 B (term608 B x' op) (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5752013 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term607 B x' y op) = (term610 B x' y op).
Proof. exact (TRANS (@lem5752008 B x' y op) (@lem5752012 B x' y op)). Qed.
Lemma lem5752014 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term606 B x' y op) = (term610 B x' y op).
Proof. exact (TRANS (@lem5752002 B x' y op) (@lem5752013 B x' y op)). Qed.
Lemma lem5752015 {B : Type'} (op : type1400 B) : op = op.
Proof. exact (eq_refl op). Qed.
Lemma lem5752020 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752021 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5752020 (type1400 B) B f x). Qed.
Lemma lem5752023 {B : Type'} (y : type402 B) (op : type1400 B) : (y op) = (@I ((B -> B -> B) -> B) y op).
Proof. exact (@lem5752021 B y op). Qed.
Lemma lem5752028 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752029 {B : Type'} (f : type402 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> B) f x).
Proof. exact (@lem5752028 (type1400 B) B f x). Qed.
Lemma lem5752031 {B : Type'} (x' : type402 B) (op : type1400 B) : (x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (@lem5752029 B x' op). Qed.
Lemma lem5752032 {B : Type'} (y : type402 B) (op : type1400 B) : (term604 B y op) = (term605 B y op).
Proof. exact (MK_COMB (@lem5752015 B op) (@lem5752023 B y op)). Qed.
Lemma lem5752033 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term606 B y x' op) = (term607 B y x' op).
Proof. exact (MK_COMB (@lem5752032 B y op) (@lem5752031 B x' op)). Qed.
Lemma lem5752035 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752036 {B : Type'} (f : type1400 B) (x : B) : (f x) = (@I (B -> B -> B) f x).
Proof. exact (@lem5752035 B (B -> B) f x). Qed.
Lemma lem5752037 {B : Type'} (y : type402 B) (op : type1400 B) : (term605 B y op) = (term608 B y op).
Proof. exact (@lem5752036 B op (@I ((B -> B -> B) -> B) y op)). Qed.
Lemma lem5752038 {B : Type'} (x' : type402 B) (op : type1400 B) : (@I ((B -> B -> B) -> B) x' op) = (@I ((B -> B -> B) -> B) x' op).
Proof. exact (eq_refl (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5752039 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term607 B y x' op) = (term609 B y x' op).
Proof. exact (MK_COMB (@lem5752037 B y op) (@lem5752038 B x' op)). Qed.
Lemma lem5752041 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752042 {B : Type'} (f : B -> B) (x : B) : (f x) = (@I (B -> B) f x).
Proof. exact (@lem5752041 B B f x). Qed.
Lemma lem5752043 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term609 B y x' op) = (term610 B y x' op).
Proof. exact (@lem5752042 B (term608 B y op) (@I ((B -> B -> B) -> B) x' op)). Qed.
Lemma lem5752044 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term607 B y x' op) = (term610 B y x' op).
Proof. exact (TRANS (@lem5752039 B y x' op) (@lem5752043 B y x' op)). Qed.
Lemma lem5752045 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term606 B y x' op) = (term610 B y x' op).
Proof. exact (TRANS (@lem5752033 B y x' op) (@lem5752044 B y x' op)). Qed.
Lemma lem5752046 {B : Type'} (x' : type402 B) (y : type402 B) (op : type1400 B) : (term630 B x' y op) = (term631 B x' y op).
Proof. exact (MK_COMB (@lem5751983 B) (@lem5752014 B x' y op)). Qed.
Lemma lem5752047 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : ((term606 B x' y op) = (term606 B y x' op)) = ((term610 B x' y op) = (term610 B y x' op)).
Proof. exact (MK_COMB (@lem5752046 B x' y op) (@lem5752045 B y x' op)). Qed.
Lemma lem5752048 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term632 B y x' op) = (term633 B y x' op).
Proof. exact (MK_COMB (@lem5751982) (@lem5752047 B y x' op)). Qed.
Lemma lem5752049 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5752050 {B : Type'} (y : type402 B) (x' : type402 B) (op : type1400 B) : (term634 B y x' op) = (term635 B y x' op).
Proof. exact (MK_COMB (@lem5752049) (@lem5752048 B y x' op)). Qed.
Lemma lem5752051 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (op : type1400 B) : (term636 B y z x' op) = (term637 B y z x' op).
Proof. exact (MK_COMB (@lem5752050 B y x' op) (@lem5751981 B y z x' op)). Qed.
Lemma lem5752056 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem5752057 {B : Type'} (f : type403 B) (x : type1400 B) : (f x) = (@I ((B -> B -> B) -> Prop) f x).
Proof. exact (@lem5752056 (type1400 B) Prop f x). Qed.
Lemma lem5752059 {B : Type'} (op : type1400 B) : (@monoidal B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5752057 B (@monoidal B) op). Qed.
Lemma lem5752060 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem5752061 {B : Type'} (op : type1400 B) : (term237 B op) = (term638 B op).
Proof. exact (MK_COMB (@lem5752060) (@lem5752059 B op)). Qed.
Lemma lem5752062 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (op : type1400 B) : (term485 B y z x' op) = (term639 B y z x' op).
Proof. exact (MK_COMB (@lem5752061 B op) (@lem5752051 B y z x' op)). Qed.
Lemma lem5752063 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) : (term487 B y z x') = (term640 B y z x').
Proof. exact (fun_ext (fun op : type1400 B => @lem5752062 B y z x' op)). Qed.
Lemma lem5752064 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5752065 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) : (term489 B y z x') = (term641 B y z x').
Proof. exact (MK_COMB (@lem5752064 B) (@lem5752063 B y z x')). Qed.
Lemma lem5752066 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752067 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) : (term542 B y z x') = (term642 B y z x').
Proof. exact (MK_COMB (@lem5752066) (@lem5752065 B y z x')). Qed.
Lemma lem5752068 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) : (term544 B y z x') = (term643 B y z x').
Proof. exact (MK_COMB (@lem5752067 B y z x') (@lem5751821 B)). Qed.
Lemma lem5752069 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term643 B y z x'.
Proof. exact (EQ_MP (@lem5752068 B y z x') (@lem5750848 B y z x' h1)). Qed.
Lemma lem5752070 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term595 B.
Proof. exact (proj2 (@lem5752069 B y z x' h1)). Qed.
Lemma lem5752153 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem5752154 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term21 B P Q) = (term22 B P Q).
Proof. exact (@lem5752153 B P Q). Qed.
Lemma lem5752155 {B : Type'} (op : type1400 B) : (term656 B op) = (term657 B op).
Proof. exact (@lem5752154 B (term578 B op) (term560 B op)). Qed.
Lemma lem5752156 {B : Type'} (op : type1400 B) (x : B) : (term658 B op x) = (term577 B op x).
Proof. exact (eq_refl (term658 B op x)). Qed.
Lemma lem5752157 {B : Type'} (op : type1400 B) : (term659 B op) = (term578 B op).
Proof. exact (fun_ext (fun x : B => @lem5752156 B op x)). Qed.
Lemma lem5752158 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752159 {B : Type'} (op : type1400 B) : (term660 B op) = (term579 B op).
Proof. exact (MK_COMB (@lem5752158 B) (@lem5752157 B op)). Qed.
Lemma lem5752160 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752161 {B : Type'} (op : type1400 B) : (term661 B op) = (term580 B op).
Proof. exact (MK_COMB (@lem5752160) (@lem5752159 B op)). Qed.
Lemma lem5752162 {B : Type'} (op : type1400 B) (x : B) : (term662 B op x) = ((term557 B op x) = x).
Proof. exact (eq_refl (term662 B op x)). Qed.
Lemma lem5752163 {B : Type'} (op : type1400 B) : (term663 B op) = (term560 B op).
Proof. exact (fun_ext (fun x : B => @lem5752162 B op x)). Qed.
Lemma lem5752164 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752165 {B : Type'} (op : type1400 B) : (term664 B op) = (term561 B op).
Proof. exact (MK_COMB (@lem5752164 B) (@lem5752163 B op)). Qed.
Lemma lem5752166 {B : Type'} (op : type1400 B) : (term656 B op) = (term581 B op).
Proof. exact (MK_COMB (@lem5752161 B op) (@lem5752165 B op)). Qed.
Lemma lem5752167 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752168 {B : Type'} (op : type1400 B) : (term665 B op) = (term666 B op).
Proof. exact (MK_COMB (@lem5752167) (@lem5752166 B op)). Qed.
Lemma lem5752169 {B : Type'} (op : type1400 B) (x : B) : (term658 B op x) = (term577 B op x).
Proof. exact (eq_refl (term658 B op x)). Qed.
Lemma lem5752170 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752171 {B : Type'} (op : type1400 B) (x : B) : (term667 B op x) = (term668 B op x).
Proof. exact (MK_COMB (@lem5752170) (@lem5752169 B op x)). Qed.
Lemma lem5752172 {B : Type'} (op : type1400 B) (x : B) : (term662 B op x) = ((term557 B op x) = x).
Proof. exact (eq_refl (term662 B op x)). Qed.
Lemma lem5752173 {B : Type'} (op : type1400 B) (x : B) : (term669 B op x) = (term670 B op x).
Proof. exact (MK_COMB (@lem5752171 B op x) (@lem5752172 B op x)). Qed.
Lemma lem5752174 {B : Type'} (op : type1400 B) : (term671 B op) = (term672 B op).
Proof. exact (fun_ext (fun x : B => @lem5752173 B op x)). Qed.
Lemma lem5752175 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752176 {B : Type'} (op : type1400 B) : (term657 B op) = (term673 B op).
Proof. exact (MK_COMB (@lem5752175 B) (@lem5752174 B op)). Qed.
Lemma lem5752177 {B : Type'} (op : type1400 B) : ((term656 B op) = (term657 B op)) = ((term581 B op) = (term673 B op)).
Proof. exact (MK_COMB (@lem5752168 B op) (@lem5752176 B op)). Qed.
Lemma lem5752178 {B : Type'} (op : type1400 B) : (term581 B op) = (term673 B op).
Proof. exact (EQ_MP (@lem5752177 B op) (@lem5752155 B op)). Qed.
Lemma lem5752180 {A : Type'} (P : A -> Prop) (Q : Prop) : (term674 A P Q) = (term675 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem5752181 {B : Type'} (P : B -> Prop) (Q : Prop) : (term674 B P Q) = (term675 B P Q).
Proof. exact (@lem5752180 B P Q). Qed.
Lemma lem5752182 {B : Type'} (op : type1400 B) (x : B) : (term676 B op x) = (term677 B op x).
Proof. exact (@lem5752181 B (term576 B op x) ((term557 B op x) = x)). Qed.
Lemma lem5752183 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term678 B op x y) = (term575 B op x y).
Proof. exact (eq_refl (term678 B op x y)). Qed.
Lemma lem5752184 {B : Type'} (op : type1400 B) (x : B) : (term679 B op x) = (term576 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752183 B op x y)). Qed.
Lemma lem5752185 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752186 {B : Type'} (op : type1400 B) (x : B) : (term680 B op x) = (term577 B op x).
Proof. exact (MK_COMB (@lem5752185 B) (@lem5752184 B op x)). Qed.
Lemma lem5752187 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752188 {B : Type'} (op : type1400 B) (x : B) : (term681 B op x) = (term668 B op x).
Proof. exact (MK_COMB (@lem5752187) (@lem5752186 B op x)). Qed.
Lemma lem5752189 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5752190 {B : Type'} (op : type1400 B) (x : B) : (term676 B op x) = (term670 B op x).
Proof. exact (MK_COMB (@lem5752188 B op x) (@lem5752189 B op x)). Qed.
Lemma lem5752191 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752192 {B : Type'} (op : type1400 B) (x : B) : (term682 B op x) = (term683 B op x).
Proof. exact (MK_COMB (@lem5752191) (@lem5752190 B op x)). Qed.
Lemma lem5752193 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term678 B op x y) = (term575 B op x y).
Proof. exact (eq_refl (term678 B op x y)). Qed.
Lemma lem5752194 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752195 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term684 B op x y) = (term685 B op x y).
Proof. exact (MK_COMB (@lem5752194) (@lem5752193 B op x y)). Qed.
Lemma lem5752196 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5752197 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term686 B y op x) = (term687 B y op x).
Proof. exact (MK_COMB (@lem5752195 B op x y) (@lem5752196 B op x)). Qed.
Lemma lem5752198 {B : Type'} (op : type1400 B) (x : B) : (term688 B op x) = (term689 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752197 B y op x)). Qed.
Lemma lem5752199 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752200 {B : Type'} (op : type1400 B) (x : B) : (term677 B op x) = (term690 B op x).
Proof. exact (MK_COMB (@lem5752199 B) (@lem5752198 B op x)). Qed.
Lemma lem5752201 {B : Type'} (op : type1400 B) (x : B) : ((term676 B op x) = (term677 B op x)) = ((term670 B op x) = (term690 B op x)).
Proof. exact (MK_COMB (@lem5752192 B op x) (@lem5752200 B op x)). Qed.
Lemma lem5752202 {B : Type'} (op : type1400 B) (x : B) : (term670 B op x) = (term690 B op x).
Proof. exact (EQ_MP (@lem5752201 B op x) (@lem5752182 B op x)). Qed.
Lemma lem5752204 {A : Type'} (P : A -> Prop) (Q : Prop) : (term674 A P Q) = (term675 A P Q).
Proof. exact (EQ_MP (@lem19025 A P Q) (@lem19024 A P Q)). Qed.
Lemma lem5752205 {B : Type'} (P : B -> Prop) (Q : Prop) : (term674 B P Q) = (term675 B P Q).
Proof. exact (@lem5752204 B P Q). Qed.
Lemma lem5752206 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term691 B y op x) = (term692 B y op x).
Proof. exact (@lem5752205 B (term574 B op x y) ((term557 B op x) = x)). Qed.
Lemma lem5752207 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term693 B op x y z) = ((term565 B x op y z) = (term571 B op x y z)).
Proof. exact (eq_refl (term693 B op x y z)). Qed.
Lemma lem5752208 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term694 B op x y) = (term574 B op x y).
Proof. exact (fun_ext (fun z : B => @lem5752207 B op x y z)). Qed.
Lemma lem5752209 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752210 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term695 B op x y) = (term575 B op x y).
Proof. exact (MK_COMB (@lem5752209 B) (@lem5752208 B op x y)). Qed.
Lemma lem5752211 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752212 {B : Type'} (op : type1400 B) (x : B) (y : B) : (term696 B op x y) = (term685 B op x y).
Proof. exact (MK_COMB (@lem5752211) (@lem5752210 B op x y)). Qed.
Lemma lem5752213 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5752214 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term691 B y op x) = (term687 B y op x).
Proof. exact (MK_COMB (@lem5752212 B op x y) (@lem5752213 B op x)). Qed.
Lemma lem5752215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752216 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term697 B y op x) = (term698 B y op x).
Proof. exact (MK_COMB (@lem5752215) (@lem5752214 B y op x)). Qed.
Lemma lem5752217 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term693 B op x y z) = ((term565 B x op y z) = (term571 B op x y z)).
Proof. exact (eq_refl (term693 B op x y z)). Qed.
Lemma lem5752218 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752219 {B : Type'} (op : type1400 B) (x : B) (y : B) (z : B) : (term699 B op x y z) = (term700 B op x y z).
Proof. exact (MK_COMB (@lem5752218) (@lem5752217 B op x y z)). Qed.
Lemma lem5752220 {B : Type'} (op : type1400 B) (x : B) : ((term557 B op x) = x) = ((term557 B op x) = x).
Proof. exact (eq_refl ((term557 B op x) = x)). Qed.
Lemma lem5752221 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term701 B y z op x) = (term702 B y z op x).
Proof. exact (MK_COMB (@lem5752219 B op x y z) (@lem5752220 B op x)). Qed.
Lemma lem5752222 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term703 B y op x) = (term704 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5752221 B y z op x)). Qed.
Lemma lem5752223 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752224 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term692 B y op x) = (term705 B y op x).
Proof. exact (MK_COMB (@lem5752223 B) (@lem5752222 B y op x)). Qed.
Lemma lem5752225 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term691 B y op x) = (term692 B y op x)) = ((term687 B y op x) = (term705 B y op x)).
Proof. exact (MK_COMB (@lem5752216 B y op x) (@lem5752224 B y op x)). Qed.
Lemma lem5752226 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term687 B y op x) = (term705 B y op x).
Proof. exact (EQ_MP (@lem5752225 B y op x) (@lem5752206 B y op x)). Qed.
Lemma lem5752227 {B : Type'} (op : type1400 B) (x : B) : (term689 B op x) = (term706 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752226 B y op x)). Qed.
Lemma lem5752228 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752229 {B : Type'} (op : type1400 B) (x : B) : (term690 B op x) = (term707 B op x).
Proof. exact (MK_COMB (@lem5752228 B) (@lem5752227 B op x)). Qed.
Lemma lem5752230 {B : Type'} (op : type1400 B) (x : B) : (term670 B op x) = (term707 B op x).
Proof. exact (TRANS (@lem5752202 B op x) (@lem5752229 B op x)). Qed.
Lemma lem5752231 {B : Type'} (op : type1400 B) : (term672 B op) = (term708 B op).
Proof. exact (fun_ext (fun x : B => @lem5752230 B op x)). Qed.
Lemma lem5752232 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752233 {B : Type'} (op : type1400 B) : (term673 B op) = (term709 B op).
Proof. exact (MK_COMB (@lem5752232 B) (@lem5752231 B op)). Qed.
Lemma lem5752234 {B : Type'} (op : type1400 B) : (term581 B op) = (term709 B op).
Proof. exact (TRANS (@lem5752178 B op) (@lem5752233 B op)). Qed.
Lemma lem5752235 {B : Type'} (op : type1400 B) : (term588 B op) = (term588 B op).
Proof. exact (eq_refl (term588 B op)). Qed.
Lemma lem5752236 {B : Type'} (op : type1400 B) : (term589 B op) = (term710 B op).
Proof. exact (MK_COMB (@lem5752235 B op) (@lem5752234 B op)). Qed.
Lemma lem5752238 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem5752239 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term21 B P Q) = (term22 B P Q).
Proof. exact (@lem5752238 B P Q). Qed.
Lemma lem5752240 {B : Type'} (op : type1400 B) : (term711 B op) = (term712 B op).
Proof. exact (@lem5752239 B (term586 B op) (term708 B op)). Qed.
Lemma lem5752241 {B : Type'} (op : type1400 B) (x : B) : (term713 B op x) = (term585 B op x).
Proof. exact (eq_refl (term713 B op x)). Qed.
Lemma lem5752242 {B : Type'} (op : type1400 B) : (term714 B op) = (term586 B op).
Proof. exact (fun_ext (fun x : B => @lem5752241 B op x)). Qed.
Lemma lem5752243 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752244 {B : Type'} (op : type1400 B) : (term715 B op) = (term587 B op).
Proof. exact (MK_COMB (@lem5752243 B) (@lem5752242 B op)). Qed.
Lemma lem5752245 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752246 {B : Type'} (op : type1400 B) : (term716 B op) = (term588 B op).
Proof. exact (MK_COMB (@lem5752245) (@lem5752244 B op)). Qed.
Lemma lem5752247 {B : Type'} (op : type1400 B) (x : B) : (term717 B op x) = (term707 B op x).
Proof. exact (eq_refl (term717 B op x)). Qed.
Lemma lem5752248 {B : Type'} (op : type1400 B) : (term718 B op) = (term708 B op).
Proof. exact (fun_ext (fun x : B => @lem5752247 B op x)). Qed.
Lemma lem5752249 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752250 {B : Type'} (op : type1400 B) : (term719 B op) = (term709 B op).
Proof. exact (MK_COMB (@lem5752249 B) (@lem5752248 B op)). Qed.
Lemma lem5752251 {B : Type'} (op : type1400 B) : (term711 B op) = (term710 B op).
Proof. exact (MK_COMB (@lem5752246 B op) (@lem5752250 B op)). Qed.
Lemma lem5752252 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752253 {B : Type'} (op : type1400 B) : (term720 B op) = (term721 B op).
Proof. exact (MK_COMB (@lem5752252) (@lem5752251 B op)). Qed.
Lemma lem5752254 {B : Type'} (op : type1400 B) (x : B) : (term713 B op x) = (term585 B op x).
Proof. exact (eq_refl (term713 B op x)). Qed.
Lemma lem5752255 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752256 {B : Type'} (op : type1400 B) (x : B) : (term722 B op x) = (term723 B op x).
Proof. exact (MK_COMB (@lem5752255) (@lem5752254 B op x)). Qed.
Lemma lem5752257 {B : Type'} (op : type1400 B) (x : B) : (term717 B op x) = (term707 B op x).
Proof. exact (eq_refl (term717 B op x)). Qed.
Lemma lem5752258 {B : Type'} (op : type1400 B) (x : B) : (term724 B op x) = (term725 B op x).
Proof. exact (MK_COMB (@lem5752256 B op x) (@lem5752257 B op x)). Qed.
Lemma lem5752259 {B : Type'} (op : type1400 B) : (term726 B op) = (term727 B op).
Proof. exact (fun_ext (fun x : B => @lem5752258 B op x)). Qed.
Lemma lem5752260 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752261 {B : Type'} (op : type1400 B) : (term712 B op) = (term728 B op).
Proof. exact (MK_COMB (@lem5752260 B) (@lem5752259 B op)). Qed.
Lemma lem5752262 {B : Type'} (op : type1400 B) : ((term711 B op) = (term712 B op)) = ((term710 B op) = (term728 B op)).
Proof. exact (MK_COMB (@lem5752253 B op) (@lem5752261 B op)). Qed.
Lemma lem5752263 {B : Type'} (op : type1400 B) : (term710 B op) = (term728 B op).
Proof. exact (EQ_MP (@lem5752262 B op) (@lem5752240 B op)). Qed.
Lemma lem5752265 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term21 A P Q) = (term22 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem5752266 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term21 B P Q) = (term22 B P Q).
Proof. exact (@lem5752265 B P Q). Qed.
Lemma lem5752267 {B : Type'} (op : type1400 B) (x : B) : (term729 B op x) = (term730 B op x).
Proof. exact (@lem5752266 B (term584 B op x) (term706 B op x)). Qed.
Lemma lem5752268 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term731 B op x y) = ((term562 B op x y) = (term562 B op y x)).
Proof. exact (eq_refl (term731 B op x y)). Qed.
Lemma lem5752269 {B : Type'} (op : type1400 B) (x : B) : (term732 B op x) = (term584 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752268 B op y x)). Qed.
Lemma lem5752270 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752271 {B : Type'} (op : type1400 B) (x : B) : (term733 B op x) = (term585 B op x).
Proof. exact (MK_COMB (@lem5752270 B) (@lem5752269 B op x)). Qed.
Lemma lem5752272 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752273 {B : Type'} (op : type1400 B) (x : B) : (term734 B op x) = (term723 B op x).
Proof. exact (MK_COMB (@lem5752272) (@lem5752271 B op x)). Qed.
Lemma lem5752274 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term735 B op x y) = (term705 B y op x).
Proof. exact (eq_refl (term735 B op x y)). Qed.
Lemma lem5752275 {B : Type'} (op : type1400 B) (x : B) : (term736 B op x) = (term706 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752274 B y op x)). Qed.
Lemma lem5752276 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752277 {B : Type'} (op : type1400 B) (x : B) : (term737 B op x) = (term707 B op x).
Proof. exact (MK_COMB (@lem5752276 B) (@lem5752275 B op x)). Qed.
Lemma lem5752278 {B : Type'} (op : type1400 B) (x : B) : (term729 B op x) = (term725 B op x).
Proof. exact (MK_COMB (@lem5752273 B op x) (@lem5752277 B op x)). Qed.
Lemma lem5752279 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752280 {B : Type'} (op : type1400 B) (x : B) : (term738 B op x) = (term739 B op x).
Proof. exact (MK_COMB (@lem5752279) (@lem5752278 B op x)). Qed.
Lemma lem5752281 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term731 B op x y) = ((term562 B op x y) = (term562 B op y x)).
Proof. exact (eq_refl (term731 B op x y)). Qed.
Lemma lem5752282 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5752283 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term740 B op x y) = (term741 B op y x).
Proof. exact (MK_COMB (@lem5752282) (@lem5752281 B op y x)). Qed.
Lemma lem5752284 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term735 B op x y) = (term705 B y op x).
Proof. exact (eq_refl (term735 B op x y)). Qed.
Lemma lem5752285 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term742 B op x y) = (term743 B y op x).
Proof. exact (MK_COMB (@lem5752283 B op y x) (@lem5752284 B y op x)). Qed.
Lemma lem5752286 {B : Type'} (op : type1400 B) (x : B) : (term744 B op x) = (term745 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752285 B y op x)). Qed.
Lemma lem5752287 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752288 {B : Type'} (op : type1400 B) (x : B) : (term730 B op x) = (term746 B op x).
Proof. exact (MK_COMB (@lem5752287 B) (@lem5752286 B op x)). Qed.
Lemma lem5752289 {B : Type'} (op : type1400 B) (x : B) : ((term729 B op x) = (term730 B op x)) = ((term725 B op x) = (term746 B op x)).
Proof. exact (MK_COMB (@lem5752280 B op x) (@lem5752288 B op x)). Qed.
Lemma lem5752290 {B : Type'} (op : type1400 B) (x : B) : (term725 B op x) = (term746 B op x).
Proof. exact (EQ_MP (@lem5752289 B op x) (@lem5752267 B op x)). Qed.
Lemma lem5752292 {A : Type'} (P : Prop) (Q : A -> Prop) : (term747 A P Q) = (term748 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem5752293 {B : Type'} (P : Prop) (Q : B -> Prop) : (term747 B P Q) = (term748 B P Q).
Proof. exact (@lem5752292 B P Q). Qed.
Lemma lem5752294 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term749 B y op x) = (term750 B y op x).
Proof. exact (@lem5752293 B ((term562 B op x y) = (term562 B op y x)) (term704 B y op x)). Qed.
Lemma lem5752295 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term751 B y op x z) = (term702 B y z op x).
Proof. exact (eq_refl (term751 B y op x z)). Qed.
Lemma lem5752296 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term752 B y op x) = (term704 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5752295 B y z op x)). Qed.
Lemma lem5752297 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752298 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term753 B y op x) = (term705 B y op x).
Proof. exact (MK_COMB (@lem5752297 B) (@lem5752296 B y op x)). Qed.
Lemma lem5752299 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term741 B op y x) = (term741 B op y x).
Proof. exact (eq_refl (term741 B op y x)). Qed.
Lemma lem5752300 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term749 B y op x) = (term743 B y op x).
Proof. exact (MK_COMB (@lem5752299 B op y x) (@lem5752298 B y op x)). Qed.
Lemma lem5752301 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752302 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term754 B y op x) = (term755 B y op x).
Proof. exact (MK_COMB (@lem5752301) (@lem5752300 B y op x)). Qed.
Lemma lem5752303 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term751 B y op x z) = (term702 B y z op x).
Proof. exact (eq_refl (term751 B y op x z)). Qed.
Lemma lem5752304 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term741 B op y x) = (term741 B op y x).
Proof. exact (eq_refl (term741 B op y x)). Qed.
Lemma lem5752305 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term756 B y op x z) = (term757 B y z op x).
Proof. exact (MK_COMB (@lem5752304 B op y x) (@lem5752303 B y z op x)). Qed.
Lemma lem5752306 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term758 B y op x) = (term759 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5752305 B y z op x)). Qed.
Lemma lem5752307 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752308 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term750 B y op x) = (term760 B y op x).
Proof. exact (MK_COMB (@lem5752307 B) (@lem5752306 B y op x)). Qed.
Lemma lem5752309 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term749 B y op x) = (term750 B y op x)) = ((term743 B y op x) = (term760 B y op x)).
Proof. exact (MK_COMB (@lem5752302 B y op x) (@lem5752308 B y op x)). Qed.
Lemma lem5752310 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term743 B y op x) = (term760 B y op x).
Proof. exact (EQ_MP (@lem5752309 B y op x) (@lem5752294 B y op x)). Qed.
Lemma lem5752311 {B : Type'} (op : type1400 B) (x : B) : (term745 B op x) = (term761 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752310 B y op x)). Qed.
Lemma lem5752312 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752313 {B : Type'} (op : type1400 B) (x : B) : (term746 B op x) = (term762 B op x).
Proof. exact (MK_COMB (@lem5752312 B) (@lem5752311 B op x)). Qed.
Lemma lem5752314 {B : Type'} (op : type1400 B) (x : B) : (term725 B op x) = (term762 B op x).
Proof. exact (TRANS (@lem5752290 B op x) (@lem5752313 B op x)). Qed.
Lemma lem5752315 {B : Type'} (op : type1400 B) : (term727 B op) = (term763 B op).
Proof. exact (fun_ext (fun x : B => @lem5752314 B op x)). Qed.
Lemma lem5752316 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752317 {B : Type'} (op : type1400 B) : (term728 B op) = (term764 B op).
Proof. exact (MK_COMB (@lem5752316 B) (@lem5752315 B op)). Qed.
Lemma lem5752318 {B : Type'} (op : type1400 B) : (term710 B op) = (term764 B op).
Proof. exact (TRANS (@lem5752263 B op) (@lem5752317 B op)). Qed.
Lemma lem5752319 {B : Type'} (op : type1400 B) : (term589 B op) = (term764 B op).
Proof. exact (TRANS (@lem5752236 B op) (@lem5752318 B op)). Qed.
Lemma lem5752320 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752321 {B : Type'} (op : type1400 B) : (term593 B op) = (term765 B op).
Proof. exact (MK_COMB (@lem5752320 B op) (@lem5752319 B op)). Qed.
Lemma lem5752323 {A : Type'} (P : Prop) (Q : A -> Prop) : (term766 A P Q) = (term767 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5752324 {B : Type'} (P : Prop) (Q : B -> Prop) : (term766 B P Q) = (term767 B P Q).
Proof. exact (@lem5752323 B P Q). Qed.
Lemma lem5752325 {B : Type'} (op : type1400 B) : (term768 B op) = (term769 B op).
Proof. exact (@lem5752324 B (term591 B op) (term763 B op)). Qed.
Lemma lem5752326 {B : Type'} (op : type1400 B) (x : B) : (term770 B op x) = (term762 B op x).
Proof. exact (eq_refl (term770 B op x)). Qed.
Lemma lem5752327 {B : Type'} (op : type1400 B) : (term771 B op) = (term763 B op).
Proof. exact (fun_ext (fun x : B => @lem5752326 B op x)). Qed.
Lemma lem5752328 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752329 {B : Type'} (op : type1400 B) : (term772 B op) = (term764 B op).
Proof. exact (MK_COMB (@lem5752328 B) (@lem5752327 B op)). Qed.
Lemma lem5752330 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752331 {B : Type'} (op : type1400 B) : (term768 B op) = (term765 B op).
Proof. exact (MK_COMB (@lem5752330 B op) (@lem5752329 B op)). Qed.
Lemma lem5752332 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752333 {B : Type'} (op : type1400 B) : (term773 B op) = (term774 B op).
Proof. exact (MK_COMB (@lem5752332) (@lem5752331 B op)). Qed.
Lemma lem5752334 {B : Type'} (op : type1400 B) (x : B) : (term770 B op x) = (term762 B op x).
Proof. exact (eq_refl (term770 B op x)). Qed.
Lemma lem5752335 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752336 {B : Type'} (op : type1400 B) (x : B) : (term775 B op x) = (term776 B op x).
Proof. exact (MK_COMB (@lem5752335 B op) (@lem5752334 B op x)). Qed.
Lemma lem5752337 {B : Type'} (op : type1400 B) : (term777 B op) = (term778 B op).
Proof. exact (fun_ext (fun x : B => @lem5752336 B op x)). Qed.
Lemma lem5752338 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752339 {B : Type'} (op : type1400 B) : (term769 B op) = (term779 B op).
Proof. exact (MK_COMB (@lem5752338 B) (@lem5752337 B op)). Qed.
Lemma lem5752340 {B : Type'} (op : type1400 B) : ((term768 B op) = (term769 B op)) = ((term765 B op) = (term779 B op)).
Proof. exact (MK_COMB (@lem5752333 B op) (@lem5752339 B op)). Qed.
Lemma lem5752341 {B : Type'} (op : type1400 B) : (term765 B op) = (term779 B op).
Proof. exact (EQ_MP (@lem5752340 B op) (@lem5752325 B op)). Qed.
Lemma lem5752343 {A : Type'} (P : Prop) (Q : A -> Prop) : (term766 A P Q) = (term767 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5752344 {B : Type'} (P : Prop) (Q : B -> Prop) : (term766 B P Q) = (term767 B P Q).
Proof. exact (@lem5752343 B P Q). Qed.
Lemma lem5752345 {B : Type'} (op : type1400 B) (x : B) : (term780 B op x) = (term781 B op x).
Proof. exact (@lem5752344 B (term591 B op) (term761 B op x)). Qed.
Lemma lem5752346 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term782 B op x y) = (term760 B y op x).
Proof. exact (eq_refl (term782 B op x y)). Qed.
Lemma lem5752347 {B : Type'} (op : type1400 B) (x : B) : (term783 B op x) = (term761 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752346 B y op x)). Qed.
Lemma lem5752348 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752349 {B : Type'} (op : type1400 B) (x : B) : (term784 B op x) = (term762 B op x).
Proof. exact (MK_COMB (@lem5752348 B) (@lem5752347 B op x)). Qed.
Lemma lem5752350 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752351 {B : Type'} (op : type1400 B) (x : B) : (term780 B op x) = (term776 B op x).
Proof. exact (MK_COMB (@lem5752350 B op) (@lem5752349 B op x)). Qed.
Lemma lem5752352 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752353 {B : Type'} (op : type1400 B) (x : B) : (term785 B op x) = (term786 B op x).
Proof. exact (MK_COMB (@lem5752352) (@lem5752351 B op x)). Qed.
Lemma lem5752354 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term782 B op x y) = (term760 B y op x).
Proof. exact (eq_refl (term782 B op x y)). Qed.
Lemma lem5752355 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752356 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term787 B op x y) = (term788 B y op x).
Proof. exact (MK_COMB (@lem5752355 B op) (@lem5752354 B y op x)). Qed.
Lemma lem5752357 {B : Type'} (op : type1400 B) (x : B) : (term789 B op x) = (term790 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752356 B y op x)). Qed.
Lemma lem5752358 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752359 {B : Type'} (op : type1400 B) (x : B) : (term781 B op x) = (term791 B op x).
Proof. exact (MK_COMB (@lem5752358 B) (@lem5752357 B op x)). Qed.
Lemma lem5752360 {B : Type'} (op : type1400 B) (x : B) : ((term780 B op x) = (term781 B op x)) = ((term776 B op x) = (term791 B op x)).
Proof. exact (MK_COMB (@lem5752353 B op x) (@lem5752359 B op x)). Qed.
Lemma lem5752361 {B : Type'} (op : type1400 B) (x : B) : (term776 B op x) = (term791 B op x).
Proof. exact (EQ_MP (@lem5752360 B op x) (@lem5752345 B op x)). Qed.
Lemma lem5752363 {A : Type'} (P : Prop) (Q : A -> Prop) : (term766 A P Q) = (term767 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem5752364 {B : Type'} (P : Prop) (Q : B -> Prop) : (term766 B P Q) = (term767 B P Q).
Proof. exact (@lem5752363 B P Q). Qed.
Lemma lem5752365 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term792 B y op x) = (term793 B y op x).
Proof. exact (@lem5752364 B (term591 B op) (term759 B y op x)). Qed.
Lemma lem5752366 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term794 B y op x z) = (term757 B y z op x).
Proof. exact (eq_refl (term794 B y op x z)). Qed.
Lemma lem5752367 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term795 B y op x) = (term759 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5752366 B y z op x)). Qed.
Lemma lem5752368 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752369 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term796 B y op x) = (term760 B y op x).
Proof. exact (MK_COMB (@lem5752368 B) (@lem5752367 B y op x)). Qed.
Lemma lem5752370 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752371 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term792 B y op x) = (term788 B y op x).
Proof. exact (MK_COMB (@lem5752370 B op) (@lem5752369 B y op x)). Qed.
Lemma lem5752372 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752373 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term797 B y op x) = (term798 B y op x).
Proof. exact (MK_COMB (@lem5752372) (@lem5752371 B y op x)). Qed.
Lemma lem5752374 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term794 B y op x z) = (term757 B y z op x).
Proof. exact (eq_refl (term794 B y op x z)). Qed.
Lemma lem5752375 {B : Type'} (op : type1400 B) : (term592 B op) = (term592 B op).
Proof. exact (eq_refl (term592 B op)). Qed.
Lemma lem5752376 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term799 B y op x z) = (term800 B y z op x).
Proof. exact (MK_COMB (@lem5752375 B op) (@lem5752374 B y z op x)). Qed.
Lemma lem5752377 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term801 B y op x) = (term802 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5752376 B y z op x)). Qed.
Lemma lem5752378 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752379 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term793 B y op x) = (term803 B y op x).
Proof. exact (MK_COMB (@lem5752378 B) (@lem5752377 B y op x)). Qed.
Lemma lem5752380 {B : Type'} (y : B) (op : type1400 B) (x : B) : ((term792 B y op x) = (term793 B y op x)) = ((term788 B y op x) = (term803 B y op x)).
Proof. exact (MK_COMB (@lem5752373 B y op x) (@lem5752379 B y op x)). Qed.
Lemma lem5752381 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term788 B y op x) = (term803 B y op x).
Proof. exact (EQ_MP (@lem5752380 B y op x) (@lem5752365 B y op x)). Qed.
Lemma lem5752382 {B : Type'} (op : type1400 B) (x : B) : (term790 B op x) = (term804 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752381 B y op x)). Qed.
Lemma lem5752383 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752384 {B : Type'} (op : type1400 B) (x : B) : (term791 B op x) = (term805 B op x).
Proof. exact (MK_COMB (@lem5752383 B) (@lem5752382 B op x)). Qed.
Lemma lem5752385 {B : Type'} (op : type1400 B) (x : B) : (term776 B op x) = (term805 B op x).
Proof. exact (TRANS (@lem5752361 B op x) (@lem5752384 B op x)). Qed.
Lemma lem5752386 {B : Type'} (op : type1400 B) : (term778 B op) = (term806 B op).
Proof. exact (fun_ext (fun x : B => @lem5752385 B op x)). Qed.
Lemma lem5752387 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752388 {B : Type'} (op : type1400 B) : (term779 B op) = (term807 B op).
Proof. exact (MK_COMB (@lem5752387 B) (@lem5752386 B op)). Qed.
Lemma lem5752389 {B : Type'} (op : type1400 B) : (term765 B op) = (term807 B op).
Proof. exact (TRANS (@lem5752341 B op) (@lem5752388 B op)). Qed.
Lemma lem5752390 {B : Type'} (op : type1400 B) : (term593 B op) = (term807 B op).
Proof. exact (TRANS (@lem5752321 B op) (@lem5752389 B op)). Qed.
Lemma lem5752391 {B : Type'} : (term594 B) = (term808 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5752390 B op)). Qed.
Lemma lem5752392 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5752393 {B : Type'} : (term595 B) = (term809 B).
Proof. exact (MK_COMB (@lem5752392 B) (@lem5752391 B)). Qed.
Lemma lem5752407 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term800 B y z op x) = (term810 B y z op x).
Proof. exact (@lem19490 ((term562 B op x y) = (term562 B op y x)) (term591 B op) (term702 B y z op x)). Qed.
Lemma lem5752414 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term811 B y z op x) = (term812 B y z op x).
Proof. exact (@lem19490 ((term565 B x op y z) = (term571 B op x y z)) (term591 B op) ((term557 B op x) = x)). Qed.
Lemma lem5752417 {B : Type'} (op : type1400 B) (y : B) (x : B) : (term813 B op y x) = (term813 B op y x).
Proof. exact (eq_refl (term813 B op y x)). Qed.
Lemma lem5752418 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term810 B y z op x) = (term814 B y z op x).
Proof. exact (MK_COMB (@lem5752417 B op y x) (@lem5752414 B y z op x)). Qed.
Lemma lem5752420 {B : Type'} (y : B) (z : B) (op : type1400 B) (x : B) : (term800 B y z op x) = (term814 B y z op x).
Proof. exact (TRANS (@lem5752407 B y z op x) (@lem5752418 B y z op x)). Qed.
Lemma lem5752421 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term802 B y op x) = (term815 B y op x).
Proof. exact (fun_ext (fun z : B => @lem5752420 B y z op x)). Qed.
Lemma lem5752422 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752423 {B : Type'} (y : B) (op : type1400 B) (x : B) : (term803 B y op x) = (term816 B y op x).
Proof. exact (MK_COMB (@lem5752422 B) (@lem5752421 B y op x)). Qed.
Lemma lem5752424 {B : Type'} (op : type1400 B) (x : B) : (term804 B op x) = (term817 B op x).
Proof. exact (fun_ext (fun y : B => @lem5752423 B y op x)). Qed.
Lemma lem5752425 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752426 {B : Type'} (op : type1400 B) (x : B) : (term805 B op x) = (term818 B op x).
Proof. exact (MK_COMB (@lem5752425 B) (@lem5752424 B op x)). Qed.
Lemma lem5752427 {B : Type'} (op : type1400 B) : (term806 B op) = (term819 B op).
Proof. exact (fun_ext (fun x : B => @lem5752426 B op x)). Qed.
Lemma lem5752428 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem5752429 {B : Type'} (op : type1400 B) : (term807 B op) = (term820 B op).
Proof. exact (MK_COMB (@lem5752428 B) (@lem5752427 B op)). Qed.
Lemma lem5752430 {B : Type'} : (term808 B) = (term821 B).
Proof. exact (fun_ext (fun op : type1400 B => @lem5752429 B op)). Qed.
Lemma lem5752431 {B : Type'} : (@all (B -> B -> B)) = (@all (B -> B -> B)).
Proof. exact (eq_refl (@all (B -> B -> B))). Qed.
Lemma lem5752432 {B : Type'} : (term809 B) = (term822 B).
Proof. exact (MK_COMB (@lem5752431 B) (@lem5752430 B)). Qed.
Lemma lem5752433 {B : Type'} : (term595 B) = (term822 B).
Proof. exact (TRANS (@lem5752393 B) (@lem5752432 B)). Qed.
Lemma lem5752434 {B : Type'} (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term822 B.
Proof. exact (EQ_MP (@lem5752433 B) (@lem5752070 B y z x' h1)). Qed.
Lemma lem5752503 {B : Type'} (_72443 : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term823 B _72443.
Proof. exact (@lem5752434 B y z x' h1 _72443). Qed.
Lemma lem5752504 {B : Type'} (_72443 : type1400 B) : (term823 B _72443) = (term820 B _72443).
Proof. exact (eq_refl (term823 B _72443)). Qed.
Lemma lem5752505 {B : Type'} (_72443 : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term820 B _72443.
Proof. exact (EQ_MP (@lem5752504 B _72443) (@lem5752503 B _72443 y z x' h1)). Qed.
Lemma lem5752506 {B : Type'} (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term824 B _72443 _72444.
Proof. exact (@lem5752505 B _72443 y z x' h1 _72444). Qed.
Lemma lem5752507 {B : Type'} (_72443 : type1400 B) (_72444 : B) : (term824 B _72443 _72444) = (term818 B _72443 _72444).
Proof. exact (eq_refl (term824 B _72443 _72444)). Qed.
Lemma lem5752508 {B : Type'} (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term818 B _72443 _72444.
Proof. exact (EQ_MP (@lem5752507 B _72443 _72444) (@lem5752506 B _72443 _72444 y z x' h1)). Qed.
Lemma lem5752509 {B : Type'} (_72443 : type1400 B) (_72444 : B) (_72445 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term825 B _72443 _72444 _72445.
Proof. exact (@lem5752508 B _72443 _72444 y z x' h1 _72445). Qed.
Lemma lem5752510 {B : Type'} (_72445 : B) (_72443 : type1400 B) (_72444 : B) : (term825 B _72443 _72444 _72445) = (term816 B _72445 _72443 _72444).
Proof. exact (eq_refl (term825 B _72443 _72444 _72445)). Qed.
Lemma lem5752511 {B : Type'} (_72445 : B) (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term816 B _72445 _72443 _72444.
Proof. exact (EQ_MP (@lem5752510 B _72445 _72443 _72444) (@lem5752509 B _72443 _72444 _72445 y z x' h1)). Qed.
Lemma lem5752512 {B : Type'} (_72445 : B) (_72443 : type1400 B) (_72444 : B) (_72446 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term826 B _72445 _72443 _72444 _72446.
Proof. exact (@lem5752511 B _72445 _72443 _72444 y z x' h1 _72446). Qed.
Lemma lem5752513 {B : Type'} (_72445 : B) (_72446 : B) (_72443 : type1400 B) (_72444 : B) : (term826 B _72445 _72443 _72444 _72446) = (term814 B _72445 _72446 _72443 _72444).
Proof. exact (eq_refl (term826 B _72445 _72443 _72444 _72446)). Qed.
Lemma lem5752514 {B : Type'} (_72445 : B) (_72446 : B) (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term814 B _72445 _72446 _72443 _72444.
Proof. exact (EQ_MP (@lem5752513 B _72445 _72446 _72443 _72444) (@lem5752512 B _72445 _72443 _72444 _72446 y z x' h1)). Qed.
Lemma lem5752527 {B : Type'} (_72445 : B) (_72446 : B) (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term812 B _72445 _72446 _72443 _72444.
Proof. exact (proj2 (@lem5752514 B _72445 _72446 _72443 _72444 y z x' h1)). Qed.
Lemma lem5752546 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1439 A B _72433 f s op) : term1523 A B _72433 f s op.
Proof. exact (EQ_MP (@lem5751646 A B _72433 f s op) (@lem5750149 A B _72433 f s op h1)). Qed.
Lemma lem5752598 {B : Type'} (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term1524 B _72443 _72444.
Proof. exact (proj2 (@lem5752527 B (@el B) (@el B) _72443 _72444 y z x' h1)). Qed.
Lemma lem5752848 {B : Type'} (x : B) (y : B) (z : B) : term834 B x y z.
Proof. exact (@lem21385 B x y z). Qed.
Lemma lem5752886 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5750995 B op) (@lem5749822 B op h1)). Qed.
Lemma lem5752887 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term835 B op.
Proof. exact (fun h0 : term591 B op => @lem5752886 B op h1). Qed.
Lemma lem5752889 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5752890 {B : Type'} (op : type1400 B) : (term835 B op) = (@I ((B -> B -> B) -> Prop) (@monoidal B) op).
Proof. exact (@lem5752889 (@I ((B -> B -> B) -> Prop) (@monoidal B) op)). Qed.
Lemma lem5752891 {B : Type'} (op : type1400 B) (h1 : @monoidal B op) : @I ((B -> B -> B) -> Prop) (@monoidal B) op.
Proof. exact (EQ_MP (@lem5752890 B op) (@lem5752887 B op h1)). Qed.
Lemma lem5752897 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5752898 {B : Type'} (_72444 : B) (_72443 : type1400 B) : (term1524 B _72443 _72444) = (term1525 B _72444 _72443).
Proof. exact (@lem5752897 ((term557 B _72443 _72444) = _72444) (term591 B _72443)). Qed.
Lemma lem5752906 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5752907 {B : Type'} (_72444 : B) (_72443 : type1400 B) : (term1526 B _72443 _72444) = (term1527 B _72444 _72443).
Proof. exact (MK_COMB (@lem5752906) (@lem5752898 B _72444 _72443)). Qed.
Lemma lem5752915 {B : Type'} (_72444 : B) (_72443 : type1400 B) : (term1525 B _72444 _72443) = (term1525 B _72444 _72443).
Proof. exact (eq_refl (term1525 B _72444 _72443)). Qed.
Lemma lem5752916 {B : Type'} (_72444 : B) (_72443 : type1400 B) : ((term1524 B _72443 _72444) = (term1525 B _72444 _72443)) = ((term1525 B _72444 _72443) = (term1525 B _72444 _72443)).
Proof. exact (MK_COMB (@lem5752907 B _72444 _72443) (@lem5752915 B _72444 _72443)). Qed.
Lemma lem5752918 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5752919 (x : Prop) : (x = x) = True.
Proof. exact (@lem5752918 Prop x). Qed.
Lemma lem5752920 {B : Type'} (_72444 : B) (_72443 : type1400 B) : ((term1525 B _72444 _72443) = (term1525 B _72444 _72443)) = True.
Proof. exact (@lem5752919 (term1525 B _72444 _72443)). Qed.
Lemma lem5752921 {B : Type'} (_72444 : B) (_72443 : type1400 B) : ((term1524 B _72443 _72444) = (term1525 B _72444 _72443)) = True.
Proof. exact (TRANS (@lem5752916 B _72444 _72443) (@lem5752920 B _72444 _72443)). Qed.
Lemma lem5752922 {B : Type'} (_72444 : B) (_72443 : type1400 B) : True = ((term1524 B _72443 _72444) = (term1525 B _72444 _72443)).
Proof. exact (SYM (@lem5752921 B _72444 _72443)). Qed.
Lemma lem5752923 {B : Type'} (_72444 : B) (_72443 : type1400 B) : (term1524 B _72443 _72444) = (term1525 B _72444 _72443).
Proof. exact (EQ_MP (@lem5752922 B _72444 _72443) (@lem0)). Qed.
Lemma lem5752924 {B : Type'} (_72444 : B) (_72443 : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term1525 B _72444 _72443.
Proof. exact (EQ_MP (@lem5752923 B _72444 _72443) (@lem5752598 B _72443 _72444 y z x' h1)). Qed.
Lemma lem5752926 (b : Prop) (a : Prop) : (a \/ b) = (term840 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5752927 {B : Type'} (_72443 : type1400 B) (_72444 : B) : (term1525 B _72444 _72443) = (term1528 B _72443 _72444).
Proof. exact (@lem5752926 (term591 B _72443) ((term557 B _72443 _72444) = _72444)). Qed.
Lemma lem5752929 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5752930 {B : Type'} (_72443 : type1400 B) : (term843 B _72443) = (@I ((B -> B -> B) -> Prop) (@monoidal B) _72443).
Proof. exact (@lem5752929 (@I ((B -> B -> B) -> Prop) (@monoidal B) _72443)). Qed.
Lemma lem5752931 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5752932 {B : Type'} (_72443 : type1400 B) : (term844 B _72443) = (term845 B _72443).
Proof. exact (MK_COMB (@lem5752931) (@lem5752930 B _72443)). Qed.
Lemma lem5752933 {B : Type'} (_72443 : type1400 B) (_72444 : B) : ((term557 B _72443 _72444) = _72444) = ((term557 B _72443 _72444) = _72444).
Proof. exact (eq_refl ((term557 B _72443 _72444) = _72444)). Qed.
Lemma lem5752934 {B : Type'} (_72443 : type1400 B) (_72444 : B) : (term1528 B _72443 _72444) = (term1529 B _72443 _72444).
Proof. exact (MK_COMB (@lem5752932 B _72443) (@lem5752933 B _72443 _72444)). Qed.
Lemma lem5752935 {B : Type'} (_72443 : type1400 B) (_72444 : B) : (term1525 B _72444 _72443) = (term1529 B _72443 _72444).
Proof. exact (TRANS (@lem5752927 B _72443 _72444) (@lem5752934 B _72443 _72444)). Qed.
Lemma lem5752938 {B : Type'} (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term1529 B _72443 _72444.
Proof. exact (EQ_MP (@lem5752935 B _72443 _72444) (@lem5752924 B _72444 _72443 y z x' h1)). Qed.
Lemma lem5752939 {B : Type'} (_72443 : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term1529 B _72443 _72444.
Proof. exact (@lem5752938 B _72443 _72444 y z x' h1). Qed.
Lemma lem5752940 {B : Type'} (op : type1400 B) (_72444 : B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : term544 B y z x') : term1529 B op _72444.
Proof. exact (@lem5752939 B op _72444 y z x' h1). Qed.
Lemma lem5752943 {B : Type'} (_72444 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term557 B op _72444) = _72444.
Proof. exact (@lem5752940 B op _72444 y z x' h2 (@lem5752891 B op h1)). Qed.
Lemma lem5752944 {B : Type'} (_72444 : B) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term557 B op _72444) = _72444.
Proof. exact (@lem5752943 B _72444 op y z x' h1 h2). Qed.
Lemma lem5752945 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term1522 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (@lem5752944 B (term1382 A B _72433 f s op) op y z x' h1 h2). Qed.
Lemma lem5752946 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : term1530 A B _72433 f s op.
Proof. exact (fun h0 : term1531 A B _72433 f s op => @lem5752945 A B _72433 f s op y z x' h1 h2). Qed.
Lemma lem5752948 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5752949 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1530 A B _72433 f s op) = ((term1522 A B _72433 f s op) = (term1382 A B _72433 f s op)).
Proof. exact (@lem5752948 ((term1522 A B _72433 f s op) = (term1382 A B _72433 f s op))). Qed.
Lemma lem5752950 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term1522 A B _72433 f s op) = (term1382 A B _72433 f s op).
Proof. exact (EQ_MP (@lem5752949 A B _72433 f s op) (@lem5752946 A B _72433 f s op y z x' h1 h2)). Qed.
Lemma lem5752952 {B : Type'} (x : B) : x = x.
Proof. exact (@lem21386 B x). Qed.
Lemma lem5752953 {B : Type'} (x : B) : x = x.
Proof. exact (@lem5752952 B x). Qed.
Lemma lem5752954 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1522 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (@lem5752953 B (term1522 A B _72433 f s op)). Qed.
Lemma lem5752955 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1532 A B _72433 f s op.
Proof. exact (fun h0 : term1533 A B _72433 f s op => @lem5752954 A B _72433 f s op). Qed.
Lemma lem5752957 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5752958 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1532 A B _72433 f s op) = ((term1522 A B _72433 f s op) = (term1522 A B _72433 f s op)).
Proof. exact (@lem5752957 ((term1522 A B _72433 f s op) = (term1522 A B _72433 f s op))). Qed.
Lemma lem5752959 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1522 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (EQ_MP (@lem5752958 A B _72433 f s op) (@lem5752955 A B _72433 f s op)). Qed.
Lemma lem5752977 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem5752978 {B : Type'} (y : B) (x : B) (z : B) : (term889 B x y z) = (term890 B y x z).
Proof. exact (@lem5752977 (y = z) (term135 B x z)). Qed.
Lemma lem5752988 {B : Type'} (x : B) (y : B) : (term865 B x y) = (term865 B x y).
Proof. exact (eq_refl (term865 B x y)). Qed.
Lemma lem5752989 {B : Type'} (y : B) (x : B) (z : B) : (term834 B x y z) = (term891 B y x z).
Proof. exact (MK_COMB (@lem5752988 B x y) (@lem5752978 B y x z)). Qed.
Lemma lem5752993 (q : Prop) (p : Prop) (r : Prop) : (term867 p q r) = (term867 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem5752994 {B : Type'} (y : B) (x : B) (z : B) : (term891 B y x z) = (term892 B y x z).
Proof. exact (@lem5752993 (y = z) (term135 B x y) (term135 B x z)). Qed.
Lemma lem5753016 {B : Type'} (y : B) (x : B) (z : B) : (term834 B x y z) = (term892 B y x z).
Proof. exact (TRANS (@lem5752989 B y x z) (@lem5752994 B y x z)). Qed.
Lemma lem5753017 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem5753018 {B : Type'} (y : B) (x : B) (z : B) : (term893 B x y z) = (term894 B y x z).
Proof. exact (MK_COMB (@lem5753017) (@lem5753016 B y x z)). Qed.
Lemma lem5753040 {B : Type'} (y : B) (x : B) (z : B) : (term892 B y x z) = (term892 B y x z).
Proof. exact (eq_refl (term892 B y x z)). Qed.
Lemma lem5753041 {B : Type'} (y : B) (x : B) (z : B) : ((term834 B x y z) = (term892 B y x z)) = ((term892 B y x z) = (term892 B y x z)).
Proof. exact (MK_COMB (@lem5753018 B y x z) (@lem5753040 B y x z)). Qed.
Lemma lem5753043 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem5753044 (x : Prop) : (x = x) = True.
Proof. exact (@lem5753043 Prop x). Qed.
Lemma lem5753045 {B : Type'} (y : B) (x : B) (z : B) : ((term892 B y x z) = (term892 B y x z)) = True.
Proof. exact (@lem5753044 (term892 B y x z)). Qed.
Lemma lem5753046 {B : Type'} (y : B) (x : B) (z : B) : ((term834 B x y z) = (term892 B y x z)) = True.
Proof. exact (TRANS (@lem5753041 B y x z) (@lem5753045 B y x z)). Qed.
Lemma lem5753047 {B : Type'} (y : B) (x : B) (z : B) : True = ((term834 B x y z) = (term892 B y x z)).
Proof. exact (SYM (@lem5753046 B y x z)). Qed.
Lemma lem5753048 {B : Type'} (y : B) (x : B) (z : B) : (term834 B x y z) = (term892 B y x z).
Proof. exact (EQ_MP (@lem5753047 B y x z) (@lem0)). Qed.
Lemma lem5753049 {B : Type'} (y : B) (x : B) (z : B) : term892 B y x z.
Proof. exact (EQ_MP (@lem5753048 B y x z) (@lem5752848 B x y z)). Qed.
Lemma lem5753051 (b : Prop) (a : Prop) : (a \/ b) = (term840 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem5753052 {B : Type'} (x : B) (y : B) (z : B) : (term892 B y x z) = (term895 B x y z).
Proof. exact (@lem5753051 (term896 B y x z) (y = z)). Qed.
Lemma lem5753054 (a : Prop) (b : Prop) : (term873 a b) = (term874 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem5753055 {B : Type'} (y : B) (x : B) (z : B) : (term897 B y x z) = (term898 B y x z).
Proof. exact (@lem5753054 (term135 B x y) (term135 B x z)). Qed.
Lemma lem5753057 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5753058 {B : Type'} (x : B) (y : B) : (term877 B x y) = (x = y).
Proof. exact (@lem5753057 (x = y)). Qed.
Lemma lem5753059 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem5753060 {B : Type'} (x : B) (y : B) : (term878 B x y) = (term879 B x y).
Proof. exact (MK_COMB (@lem5753059) (@lem5753058 B x y)). Qed.
Lemma lem5753062 (a : Prop) : (term842 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem5753063 {B : Type'} (x : B) (z : B) : (term877 B x z) = (x = z).
Proof. exact (@lem5753062 (x = z)). Qed.
Lemma lem5753064 {B : Type'} (y : B) (x : B) (z : B) : (term898 B y x z) = (term899 B y x z).
Proof. exact (MK_COMB (@lem5753060 B x y) (@lem5753063 B x z)). Qed.
Lemma lem5753065 {B : Type'} (y : B) (x : B) (z : B) : (term897 B y x z) = (term899 B y x z).
Proof. exact (TRANS (@lem5753055 B y x z) (@lem5753064 B y x z)). Qed.
Lemma lem5753066 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem5753067 {B : Type'} (y : B) (x : B) (z : B) : (term900 B y x z) = (term901 B y x z).
Proof. exact (MK_COMB (@lem5753066) (@lem5753065 B y x z)). Qed.
Lemma lem5753068 {B : Type'} (y : B) (z : B) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem5753069 {B : Type'} (x : B) (y : B) (z : B) : (term895 B x y z) = (term902 B x y z).
Proof. exact (MK_COMB (@lem5753067 B y x z) (@lem5753068 B y z)). Qed.
Lemma lem5753070 {B : Type'} (x : B) (y : B) (z : B) : (term892 B y x z) = (term902 B x y z).
Proof. exact (TRANS (@lem5753052 B x y z) (@lem5753069 B x y z)). Qed.
Lemma lem5753072 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : term1534 A B _72433 f s op.
Proof. exact (conj (@lem5752950 A B _72433 f s op y z x' h1 h2) (@lem5752959 A B _72433 f s op)). Qed.
Lemma lem5753074 {B : Type'} (x : B) (y : B) (z : B) : term902 B x y z.
Proof. exact (EQ_MP (@lem5753070 B x y z) (@lem5753049 B y x z)). Qed.
Lemma lem5753075 {B : Type'} (x : B) (y : B) (z : B) : term902 B x y z.
Proof. exact (@lem5753074 B x y z). Qed.
Lemma lem5753076 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1535 A B _72433 f s op.
Proof. exact (@lem5753075 B (term1522 A B _72433 f s op) (term1382 A B _72433 f s op) (term1522 A B _72433 f s op)). Qed.
Lemma lem5753079 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term1382 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (@lem5753076 A B _72433 f s op (@lem5753072 A B _72433 f s op y z x' h1 h2)). Qed.
Lemma lem5753080 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term1382 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (@lem5753079 A B _72433 f s op y z x' h1 h2). Qed.
Lemma lem5753081 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : term1536 A B _72433 f s op.
Proof. exact (fun h0 : term1523 A B _72433 f s op => @lem5753080 A B _72433 f s op y z x' h1 h2). Qed.
Lemma lem5753083 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5753084 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1536 A B _72433 f s op) = ((term1382 A B _72433 f s op) = (term1522 A B _72433 f s op)).
Proof. exact (@lem5753083 ((term1382 A B _72433 f s op) = (term1522 A B _72433 f s op))). Qed.
Lemma lem5753085 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term544 B y z x') : (term1382 A B _72433 f s op) = (term1522 A B _72433 f s op).
Proof. exact (EQ_MP (@lem5753084 A B _72433 f s op) (@lem5753081 A B _72433 f s op y z x' h1 h2)). Qed.
Lemma lem5753088 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem5753090 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1523 A B _72433 f s op) = (term1537 A B _72433 f s op).
Proof. exact (@lem5753088 ((term1382 A B _72433 f s op) = (term1522 A B _72433 f s op))). Qed.
Lemma lem5753093 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term1439 A B _72433 f s op) : term1537 A B _72433 f s op.
Proof. exact (EQ_MP (@lem5753090 A B _72433 f s op) (@lem5752546 A B _72433 f s op h1)). Qed.
Lemma lem5753096 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term1439 A B _72433 f s op) (h3 : term544 B y z x') : False.
Proof. exact (@lem5753093 A B _72433 f s op h2 (@lem5753085 A B _72433 f s op y z x' h1 h3)). Qed.
Lemma lem5753097 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term1439 A B _72433 f s op) (h3 : term544 B y z x') : term911.
Proof. exact (fun h0 : ~ False => @lem5753096 A B _72433 f s op y z x' h1 h2 h3). Qed.
Lemma lem5753099 (p : Prop) : (term836 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem5753100 : term911 = False.
Proof. exact (@lem5753099 False). Qed.
Lemma lem5753101 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (y : type402 B) (z : type402 B) (x' : type402 B) (h1 : @monoidal B op) (h2 : term1439 A B _72433 f s op) (h3 : term544 B y z x') : False.
Proof. exact (EQ_MP (@lem5753100) (@lem5753097 A B _72433 f s op y z x' h1 h2 h3)). Qed.
Lemma lem5753102 {A B : Type'} (y : type402 B) (x' : type402 B) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term547 B y x') (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : False.
Proof. exact (ex_elim (@lem5750847 B y x' h1) (fun z : type402 B => fun h0 : term546 B y x' z => @lem5753101 A B _72433 f s op y z x' h2 h3 h0)). Qed.
Lemma lem5753103 {A B : Type'} (x' : type402 B) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term549 B x') (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : False.
Proof. exact (ex_elim (@lem5750846 B x' h1) (fun y : type402 B => fun h0 : term548 B x' y => @lem5753102 A B y x' _72433 f s op h0 h2 h3)). Qed.
Lemma lem5753104 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : False.
Proof. exact (ex_elim (@lem5750845 B h1) (fun x' : type402 B => fun h0 : term550 B x' => @lem5753103 A B x' _72433 f s op h0 h2 h3)). Qed.
Lemma lem5753105 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : (term1439 A B _72433 f s op) = False.
Proof. exact (prop_ext (fun h4 : term1439 A B _72433 f s op => @lem5753104 A B _72433 f s op h1 h2 h3) (fun h4 : False => @lem5750149 A B _72433 f s op h3)). Qed.
Lemma lem5753106 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : False.
Proof. exact (EQ_MP (@lem5753105 A B _72433 f s op h1 h2 h3) (@lem5750149 A B _72433 f s op h3)). Qed.
Lemma lem5753107 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : (@monoidal B op) = False.
Proof. exact (prop_ext (fun h4 : @monoidal B op => @lem5753106 A B _72433 f s op h1 h2 h3) (fun h4 : False => @lem5749822 B op h2)). Qed.
Lemma lem5753108 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : term57 B) (h2 : @monoidal B op) (h3 : term1439 A B _72433 f s op) : False.
Proof. exact (EQ_MP (@lem5753107 A B _72433 f s op h1 h2 h3) (@lem5749822 B op h2)). Qed.
Lemma lem5753109 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) (h2 : term1439 A B _72433 f s op) : term62 B.
Proof. exact (fun h0 : term57 B => @lem5753108 A B _72433 f s op h0 h1 h2). Qed.
Lemma lem5753110 {B : Type'} : (term62 B) = (term63 B).
Proof. exact (@lem69 (term57 B)). Qed.
Lemma lem5753111 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) (h2 : term1439 A B _72433 f s op) : term63 B.
Proof. exact (EQ_MP (@lem5753110 B) (@lem5753109 A B _72433 f s op h1 h2)). Qed.
Lemma lem5753112 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1441 A B _72433 f s op.
Proof. exact (fun h0 : term1439 A B _72433 f s op => @lem5753111 A B _72433 f s op h1 h0). Qed.
Lemma lem5753113 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1442 A B x _72433 f s op.
Proof. exact (fun h0 : term1034 A x s => @lem5753112 A B _72433 f s op h1). Qed.
Lemma lem5753114 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1443 A B x _72433 f s op.
Proof. exact (fun h0 : (f x) = (@neutral B op) => @lem5753113 A B x _72433 f s op h1). Qed.
Lemma lem5753115 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1444 A B x _72433 f s op.
Proof. exact (fun h0 : term916 A B op f s => @lem5753114 A B x _72433 f s op h1). Qed.
Lemma lem5753116 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1503 A B x _72433 f s op.
Proof. exact (fun h0 : term1352 A B _72433 f op => @lem5753115 A B x _72433 f s op h1). Qed.
Lemma lem5753117 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1504 A B x _72433 f s op.
Proof. exact (fun h0 : (term1216 A B _72433 f op) = (@neutral B op) => @lem5753116 A B x _72433 f s op h1). Qed.
Lemma lem5753118 {A B : Type'} (x : A) (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1505 A B x _72433 f s op.
Proof. exact (fun h0 : @monoidal B op => @lem5753117 A B x _72433 f s op h0). Qed.
Lemma lem5753123 {A B : Type'} (_72433 : type749 A B) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1507 A B _72433 f s op.
Proof. exact (fun x : A => @lem5753118 A B x _72433 f s op). Qed.
Lemma lem5753128 {A B : Type'} (_72433 : type749 A B) (s : A -> Prop) (op : type1400 B) : term1509 A B _72433 s op.
Proof. exact (fun f : A -> B => @lem5753123 A B _72433 f s op). Qed.
Lemma lem5753133 {A B : Type'} (_72433 : type749 A B) (op : type1400 B) : term1511 A B _72433 op.
Proof. exact (fun s : A -> Prop => @lem5753128 A B _72433 s op). Qed.
Lemma lem5753138 {A B : Type'} (_72433 : type749 A B) : term1513 A B _72433.
Proof. exact (fun op : type1400 B => @lem5753133 A B _72433 op). Qed.
Lemma lem5753139 {A B : Type'} (_72434 : type749 A B) (_72433 : type749 A B) : term1514 A B _72434 _72433.
Proof. exact (fun h0 : term1294 A B _72433 _72434 => @lem5753138 A B _72433). Qed.
Lemma lem5753144 {A B : Type'} (_72434 : type749 A B) : term1516 A B _72434.
Proof. exact (fun _72433 : type749 A B => @lem5753139 A B _72434 _72433). Qed.
Lemma lem5753145 {A B : Type'} (_72434 : type749 A B) : term1517 A B _72434.
Proof. exact (fun h0 : term1332 A B _72434 => @lem5753144 A B _72434). Qed.
Lemma lem5753150 {A B : Type'} : term1519 A B.
Proof. exact (fun _72434 : type749 A B => @lem5753145 A B _72434). Qed.
Lemma lem5753151 {A B : Type'} : term1425 A B.
Proof. exact (EQ_MP (@lem5749745 A B) (@lem5753150 A B)). Qed.
Lemma lem5753152 {A B : Type'} (op : type1400 B) : term1538 A B op.
Proof. exact (@lem5753151 A B op). Qed.
Lemma lem5753153 {A B : Type'} (op : type1400 B) : (term1538 A B op) = (term1421 A B op).
Proof. exact (eq_refl (term1538 A B op)). Qed.
Lemma lem5753154 {A B : Type'} (op : type1400 B) : term1421 A B op.
Proof. exact (EQ_MP (@lem5753153 A B op) (@lem5753152 A B op)). Qed.
Lemma lem5753155 {A B : Type'} (op : type1400 B) (s : A -> Prop) : term1539 A B op s.
Proof. exact (@lem5753154 A B op s). Qed.
Lemma lem5753156 {A B : Type'} (s : A -> Prop) (op : type1400 B) : (term1539 A B op s) = (term1417 A B s op).
Proof. exact (eq_refl (term1539 A B op s)). Qed.
Lemma lem5753157 {A B : Type'} (s : A -> Prop) (op : type1400 B) : term1417 A B s op.
Proof. exact (EQ_MP (@lem5753156 A B s op) (@lem5753155 A B op s)). Qed.
Lemma lem5753158 {A B : Type'} (s : A -> Prop) (op : type1400 B) (f : A -> B) : term1540 A B s op f.
Proof. exact (@lem5753157 A B s op f). Qed.
Lemma lem5753159 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1540 A B s op f) = (term1413 A B f s op).
Proof. exact (eq_refl (term1540 A B s op f)). Qed.
Lemma lem5753160 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1413 A B f s op.
Proof. exact (EQ_MP (@lem5753159 A B f s op) (@lem5753158 A B s op f)). Qed.
Lemma lem5753161 {A B : Type'} (f : A -> B) (s : A -> Prop) (op : type1400 B) (x : A) : term1541 A B f s op x.
Proof. exact (@lem5753160 A B f s op x). Qed.
Lemma lem5753162 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : (term1541 A B f s op x) = (term1393 A B x f s op).
Proof. exact (eq_refl (term1541 A B f s op x)). Qed.
Lemma lem5753163 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1393 A B x f s op.
Proof. exact (EQ_MP (@lem5753162 A B x f s op) (@lem5753161 A B f s op x)). Qed.
Lemma lem5753165 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) : term1393 A B x f s op.
Proof. exact (@lem5748349 A B x f s op (@lem5753163 A B x f s op)). Qed.
Lemma lem5753166 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (op : type1400 B) (h1 : @monoidal B op) : term1408 A B x f s op.
Proof. exact (@lem5753165 A B x f s op (@lem5738169 B op h1)). Qed.
Lemma lem5753167 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) (h2 : (term915 A B f op) = (@neutral B op)) : term1406 A B x f s op.
Proof. exact (@lem5753166 A B x f s op h1 (@lem5742560 A B f op h2)). Qed.
Lemma lem5753168 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term1404 A B x f s op.
Proof. exact (@lem5753167 A B x s f op h2 h3 (@lem5742559 A B f op h1)). Qed.
Lemma lem5753169 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : term1402 A B x f s op.
Proof. exact (@lem5753168 A B x s f op h1 h3 h4 (@lem5742561 A B op f s h2)). Qed.
Lemma lem5753170 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : term1400 A B x f s op.
Proof. exact (@lem5753169 A B x s f op h1 h2 h3 h5 (@lem5738132 A B f x op h4)). Qed.
Lemma lem5753171 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1034 A x s) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) : term1398 A B f s op.
Proof. exact (@lem5753170 A B s x f op h1 h2 h3 h5 h6 (@lem5743694 A x s h4)). Qed.
Lemma lem5753172 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1392 A B f s op) (h5 : term1034 A x s) (h6 : (f x) = (@neutral B op)) (h7 : (term915 A B f op) = (@neutral B op)) : term62 B.
Proof. exact (@lem5753171 A B s x f op h1 h2 h3 h5 h6 h7 (@lem5748330 A B f s op h4)). Qed.
Lemma lem5753173 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1392 A B f s op) (h5 : term1034 A x s) (h6 : (f x) = (@neutral B op)) (h7 : (term915 A B f op) = (@neutral B op)) : False.
Proof. exact (@lem5753172 A B s x f op h1 h2 h3 h4 h5 h6 h7 (@lem5748331 B)). Qed.
Lemma lem5753174 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1392 A B f s op) (h5 : term1034 A x s) (h6 : (f x) = (@neutral B op)) (h7 : (term915 A B f op) = (@neutral B op)) : (term1392 A B f s op) = False.
Proof. exact (prop_ext (fun h8 : term1392 A B f s op => @lem5753173 A B s x f op h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem5748330 A B f s op h4)). Qed.
Lemma lem5753175 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1392 A B f s op) (h5 : term1034 A x s) (h6 : (f x) = (@neutral B op)) (h7 : (term915 A B f op) = (@neutral B op)) : False.
Proof. exact (EQ_MP (@lem5753174 A B s x f op h1 h2 h3 h4 h5 h6 h7) (@lem5748330 A B f s op h4)). Qed.
Lemma lem5753176 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1034 A x s) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) : term1391 A B f s op.
Proof. exact (fun h0 : term1392 A B f s op => @lem5753175 A B s x f op h1 h2 h3 h0 h4 h5 h6). Qed.
Lemma lem5753178 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1034 A x s) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) : (term963 A B f s op) = (term1032 A B f s op).
Proof. exact (EQ_MP (@lem5748329 A B f s op) (@lem5753176 A B s x f op h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem5753179 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1034 A x s) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) : (term1034 A x s) = ((term963 A B f s op) = (term1032 A B f s op)).
Proof. exact (prop_ext (fun h7 : term1034 A x s => @lem5753178 A B s x f op h1 h2 h3 h4 h5 h6) (fun h7 : (term963 A B f s op) = (term1032 A B f s op) => @lem5743694 A x s h4)). Qed.
Lemma lem5753180 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : term1034 A x s) (h5 : (f x) = (@neutral B op)) (h6 : (term915 A B f op) = (@neutral B op)) : (term963 A B f s op) = (term1032 A B f s op).
Proof. exact (EQ_MP (@lem5753179 A B s x f op h1 h2 h3 h4 h5 h6) (@lem5743694 A x s h4)). Qed.
Lemma lem5753181 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : term1106 A B x f s op.
Proof. exact (fun h0 : term1034 A x s => @lem5753180 A B s x f op h1 h2 h3 h0 h4 h5). Qed.
Lemma lem5753182 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) (h6 : @IN A x s) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (EQ_MP (@lem5743714 A B f s op) (@lem5748324 A B f op x s h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem5753183 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) (h6 : @IN A x s) : (@IN A x s) = ((term963 A B f s op) = (term963 A B f s op)).
Proof. exact (prop_ext (fun h7 : @IN A x s => @lem5753182 A B f op x s h1 h2 h3 h4 h5 h6) (fun h7 : (term963 A B f s op) = (term963 A B f s op) => @lem5743677 A x s h6)). Qed.
Lemma lem5753184 {A B : Type'} (f : A -> B) (op : type1400 B) (x : A) (s : A -> Prop) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) (h6 : @IN A x s) : (term963 A B f s op) = (term963 A B f s op).
Proof. exact (EQ_MP (@lem5753183 A B f op x s h1 h2 h3 h4 h5 h6) (@lem5743677 A x s h6)). Qed.
Lemma lem5753185 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : term1029 A B x f s op.
Proof. exact (fun h0 : @IN A x s => @lem5753184 A B f op x s h1 h2 h3 h4 h5 h0). Qed.
Lemma lem5753186 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : term1112 A B x f s op.
Proof. exact (conj (@lem5753185 A B s x f op h1 h2 h3 h4 h5) (@lem5753181 A B s x f op h1 h2 h3 h4 h5)). Qed.
Lemma lem5753187 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : (term963 A B f s op) = (term1036 A B x f s op).
Proof. exact (EQ_MP (@lem5743676 A B x f s op) (@lem5753186 A B s x f op h1 h2 h3 h4 h5)). Qed.
Lemma lem5753188 {A B : Type'} (s : A -> Prop) (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (f x) = (@neutral B op)) (h5 : (term915 A B f op) = (@neutral B op)) : (term956 A B x f s op) = (term973 A B x f s op).
Proof. exact (EQ_MP (@lem5743367 A B s f x op h4) (@lem5753187 A B s x f op h1 h2 h3 h4 h5)). Qed.
Lemma lem5753189 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : (term956 A B x f s op) = (term973 A B x f s op).
Proof. exact (or_elim (@lem5738131 A B f x op) (fun h0 : (f x) = (@neutral B op) => @lem5753188 A B s x f op h1 h2 h3 h0 h4) (fun h0 : term2 A B f x op => @lem5743658 A B s f x op h1 h2 h0)). Qed.
Lemma lem5753190 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : (term980 A B x f s op) = (term973 A B x f s op).
Proof. exact (EQ_MP (@lem5743056 A B x op f s h2) (@lem5753189 A B x s f op h1 h2 h3 h4)). Qed.
Lemma lem5753191 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : (term959 A B x f s op) = (term973 A B x f s op).
Proof. exact (EQ_MP (@lem5742902 A B x f s op) (@lem5753190 A B x s f op h1 h2 h3 h4)). Qed.
Lemma lem5753192 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : (term947 A B op x s f) = (term972 A B x op s f).
Proof. exact (EQ_MP (@lem5742887 A B x op f s h2) (@lem5753191 A B x s f op h1 h2 h3 h4)). Qed.
Lemma lem5753193 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : (term916 A B op f s) = ((term947 A B op x s f) = (term972 A B x op s f)).
Proof. exact (prop_ext (fun h5 : term916 A B op f s => @lem5753192 A B x s f op h1 h2 h3 h4) (fun h5 : (term947 A B op x s f) = (term972 A B x op s f) => @lem5742561 A B op f s h2)). Qed.
Lemma lem5753194 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : term916 A B op f s) (h3 : @monoidal B op) (h4 : (term915 A B f op) = (@neutral B op)) : (term947 A B op x s f) = (term972 A B x op s f).
Proof. exact (EQ_MP (@lem5753193 A B x s f op h1 h2 h3 h4) (@lem5742561 A B op f s h2)). Qed.
Lemma lem5753195 {A B : Type'} (x : A) (s : A -> Prop) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term1542 A B x op s f.
Proof. exact (fun h0 : term916 A B op f s => @lem5753194 A B x s f op h1 h0 h2 h3). Qed.
Lemma lem5753200 {A B : Type'} (x : A) (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term1543 A B x op f.
Proof. exact (fun s : A -> Prop => @lem5753195 A B x s f op h1 h2 h3). Qed.
Lemma lem5753205 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term36 A B op f.
Proof. exact (fun x : A => @lem5753200 A B x f op h1 h2 h3). Qed.
Lemma lem5753206 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term46 A B op f.
Proof. exact (conj (@lem5742708 A B f op h3) (@lem5753205 A B f op h1 h2 h3)). Qed.
Lemma lem5753207 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term53 A B f op) : term914 A B f op.
Proof. exact (proj2 (@lem5742558 A B f op h1)). Qed.
Lemma lem5753208 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term53 A B f op) : (term915 A B f op) = (@neutral B op).
Proof. exact (proj1 (@lem5742558 A B f op h1)). Qed.
Lemma lem5753209 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : (term914 A B f op) = (term46 A B op f).
Proof. exact (prop_ext (fun h4 : term914 A B f op => @lem5753206 A B f op h1 h2 h3) (fun h4 : term46 A B op f => @lem5742559 A B f op h1)). Qed.
Lemma lem5753210 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term46 A B op f.
Proof. exact (EQ_MP (@lem5753209 A B f op h1 h2 h3) (@lem5742559 A B f op h1)). Qed.
Lemma lem5753211 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : ((term915 A B f op) = (@neutral B op)) = (term46 A B op f).
Proof. exact (prop_ext (fun h4 : (term915 A B f op) = (@neutral B op) => @lem5753210 A B f op h1 h2 h3) (fun h4 : term46 A B op f => @lem5742560 A B f op h3)). Qed.
Lemma lem5753212 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : term914 A B f op) (h2 : @monoidal B op) (h3 : (term915 A B f op) = (@neutral B op)) : term46 A B op f.
Proof. exact (EQ_MP (@lem5753211 A B f op h1 h2 h3) (@lem5742560 A B f op h3)). Qed.
Lemma lem5753213 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) (h2 : term53 A B f op) (h3 : (term915 A B f op) = (@neutral B op)) : (term914 A B f op) = (term46 A B op f).
Proof. exact (prop_ext (fun h4 : term914 A B f op => @lem5753212 A B f op h4 h1 h3) (fun h4 : term46 A B op f => @lem5753207 A B f op h2)). Qed.
Lemma lem5753214 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) (h2 : term53 A B f op) (h3 : (term915 A B f op) = (@neutral B op)) : term46 A B op f.
Proof. exact (EQ_MP (@lem5753213 A B f op h1 h2 h3) (@lem5753207 A B f op h2)). Qed.
Lemma lem5753215 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) (h2 : term53 A B f op) : ((term915 A B f op) = (@neutral B op)) = (term46 A B op f).
Proof. exact (prop_ext (fun h3 : (term915 A B f op) = (@neutral B op) => @lem5753214 A B f op h1 h2 h3) (fun h3 : term46 A B op f => @lem5753208 A B f op h2)). Qed.
Lemma lem5753216 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) (h2 : term53 A B f op) : term46 A B op f.
Proof. exact (EQ_MP (@lem5753215 A B f op h1 h2) (@lem5753208 A B f op h2)). Qed.
Lemma lem5753217 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term1544 A B op f.
Proof. exact (fun h0 : term53 A B f op => @lem5753216 A B f op h1 h0). Qed.
Lemma lem5753218 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term1545 A B op f.
Proof. exact (conj (@lem5742557 A B f op h1) (@lem5753217 A B f op h1)). Qed.
Lemma lem5753219 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term1546 A B op f.
Proof. exact (@lem5738200 A B op f (@lem5753218 A B f op h1)). Qed.
Lemma lem5753220 {A B : Type'} (f : A -> B) (op : type1400 B) (h1 : @monoidal B op) : term46 A B op f.
Proof. exact (@lem5753219 A B f op h1 (@lem5738162 A B f op)). Qed.
Lemma lem5753225 {A B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term49 A B op.
Proof. exact (fun f : A -> B => @lem5753220 A B f op h1). Qed.
Lemma lem5753226 {A B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term40 A B op.
Proof. exact (EQ_MP (@lem5738197 A B op) (@lem5753225 A B op h1)). Qed.
Lemma lem5753227 {A B : Type'} (op : type1400 B) (h1 : @monoidal B op) : (@monoidal B op) = (term40 A B op).
Proof. exact (prop_ext (fun h2 : @monoidal B op => @lem5753226 A B op h1) (fun h2 : term40 A B op => @lem5738169 B op h1)). Qed.
Lemma lem5753228 {A B : Type'} (op : type1400 B) (h1 : @monoidal B op) : term40 A B op.
Proof. exact (EQ_MP (@lem5753227 A B op h1) (@lem5738169 B op h1)). Qed.
Lemma lem5753229 {A B : Type'} (op : type1400 B) : term1547 A B op.
Proof. exact (fun h0 : @monoidal B op => @lem5753228 A B op h0). Qed.
Lemma lem5753234 {A B : Type'} : term1548 A B.
Proof. exact (fun op : type1400 B => @lem5753229 A B op). Qed.
