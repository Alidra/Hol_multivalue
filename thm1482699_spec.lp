require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem1482699 (x : El real) (a : El real) (b : El real) (y : El real) (c : El real) (r : El real) : Prf (∧ (= (real_ge (real_add a (real_add (real_min x y) b)) r) (∧ (real_ge (real_add a (real_add x b)) r) (real_ge (real_add a (real_add y b)) r))) (∧ (= (real_ge (real_add a (real_add b (real_min x y))) r) (∧ (real_ge (real_add a (real_add b x)) r) (real_ge (real_add a (real_add b y)) r))) (∧ (= (real_ge (real_add a (real_add b (real_add (real_min x y) c))) r) (∧ (real_ge (real_add a (real_add b (real_add x c))) r) (real_ge (real_add a (real_add b (real_add y c))) r))) (∧ (= (real_gt (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_abs x)) r) (∧ (real_gt (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x) r) (real_gt (real_mul (real_of_num (NUMERAL (BIT1 _0))) x) r))) (∧ (= (real_gt (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_abs x)) a) r) (∧ (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x)) r) (real_gt (real_add a (real_mul (real_of_num (NUMERAL (BIT1 _0))) x)) r))) (∧ (= (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_abs x))) r) (∧ (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x)) r) (real_gt (real_add a (real_mul (real_of_num (NUMERAL (BIT1 _0))) x)) r))) (∧ (= (real_gt (real_add a (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_abs x)) b)) r) (∧ (real_gt (real_add a (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x) b)) r) (real_gt (real_add a (real_add (real_mul (real_of_num (NUMERAL (BIT1 _0))) x) b)) r))) (∧ (= (real_gt (real_add a (real_add b (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_abs x)))) r) (∧ (real_gt (real_add a (real_add b (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x))) r) (real_gt (real_add a (real_add b (real_mul (real_of_num (NUMERAL (BIT1 _0))) x))) r))) (∧ (= (real_gt (real_add a (real_add b (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_abs x)) c))) r) (∧ (real_gt (real_add a (real_add b (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x) c))) r) (real_gt (real_add a (real_add b (real_add (real_mul (real_of_num (NUMERAL (BIT1 _0))) x) c))) r))) (∧ (= (real_gt (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_max x y)) r) (∧ (real_gt (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x) r) (real_gt (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) y) r))) (∧ (= (real_gt (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_max x y)) a) r) (∧ (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x)) r) (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) y)) r))) (∧ (= (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_max x y))) r) (∧ (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x)) r) (real_gt (real_add a (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) y)) r))) (∧ (= (real_gt (real_add a (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_max x y)) b)) r) (∧ (real_gt (real_add a (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x) b)) r) (real_gt (real_add a (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) y) b)) r))) (∧ (= (real_gt (real_add a (real_add b (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_max x y)))) r) (∧ (real_gt (real_add a (real_add b (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x))) r) (real_gt (real_add a (real_add b (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) y))) r))) (∧ (= (real_gt (real_add a (real_add b (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) (real_max x y)) c))) r) (∧ (real_gt (real_add a (real_add b (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) x) c))) r) (real_gt (real_add a (real_add b (real_add (real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0)))) y) c))) r))) (∧ (= (real_gt (real_min x y) r) (∧ (real_gt x r) (real_gt y r))) (∧ (= (real_gt (real_add (real_min x y) a) r) (∧ (real_gt (real_add a x) r) (real_gt (real_add a y) r))) (∧ (= (real_gt (real_add a (real_min x y)) r) (∧ (real_gt (real_add a x) r) (real_gt (real_add a y) r))) (∧ (= (real_gt (real_add a (real_add (real_min x y) b)) r) (∧ (real_gt (real_add a (real_add x b)) r) (real_gt (real_add a (real_add y b)) r))) (∧ (= (real_gt (real_add a (real_add b (real_min x y))) r) (∧ (real_gt (real_add a (real_add b x)) r) (real_gt (real_add a (real_add b y)) r))) (= (real_gt (real_add a (real_add b (real_add (real_min x y) c))) r) (∧ (real_gt (real_add a (real_add b (real_add x c))) r) (real_gt (real_add a (real_add b (real_add y c))) r)))))))))))))))))))))));
