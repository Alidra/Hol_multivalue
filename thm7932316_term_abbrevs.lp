require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term0 a0 a1 ≔ (∀ (λ y0 : El (fun a0 a1), (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El num, (⇒ (∧ (∀ (λ y3 : El a0, (∀ (λ y4 : El a0, (⇒ (∧ ((@IN a0) y3 y1) (∧ ((@IN a0) y4 y1) (= (y0 y3) (y0 y4)))) (= y3 y4)))))) ((@HAS_SIZE a0) y1 y2)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) y0 y1) y2))))))));
symbol term4 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) ≔ (∀ (λ y0 : El num, (⇒ (∧ (∀ (λ y1 : El a0, (∀ (λ y2 : El a0, (⇒ (∧ ((@IN a0) y1 x1) (∧ ((@IN a0) y2 x1) (= (x0 y1) (x0 y2)))) (= y1 y2)))))) ((@HAS_SIZE a0) x1 y0)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 x1) y0))));
symbol term6 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) (x2: El num) ≔ (⇒ (∧ (∀ (λ y0 : El a0, (∀ (λ y1 : El a0, (⇒ (∧ ((@IN a0) y0 x1) (∧ ((@IN a0) y1 x1) (= (x0 y0) (x0 y1)))) (= y0 y1)))))) ((@HAS_SIZE a0) x1 x2)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 x1) x2));
symbol term10 a0 a1 ≔ (⇒ (∀ (λ y0 : El (fun a0 a1), (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El num, (⇒ (∧ (∀ (λ y3 : El a0, (∀ (λ y4 : El a0, (⇒ (∧ ((@IN a0) y3 y1) (∧ ((@IN a0) y4 y1) (= (y0 y3) (y0 y4)))) (= y3 y4)))))) ((@HAS_SIZE a0) y1 y2)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) y0 y1) y2)))))))) (∀ (λ y0 : El (fun a0 a1), (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El num, (⇒ (∧ (∀ (λ y3 : El a0, (∀ (λ y4 : El a0, (⇒ (∧ ((@IN a0) y3 y1) (∧ ((@IN a0) y4 y1) (= (y0 y3) (y0 y4)))) (= y3 y4)))))) ((@HAS_SIZE a0) y1 y2)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) y0 y1) y2)))))))));
symbol term1 a0 a1 (x0: El (fun a0 a1)) ≔ ((λ y0 : El (fun a0 a1), (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El num, (⇒ (∧ (∀ (λ y3 : El a0, (∀ (λ y4 : El a0, (⇒ (∧ ((@IN a0) y3 y1) (∧ ((@IN a0) y4 y1) (= (y0 y3) (y0 y4)))) (= y3 y4)))))) ((@HAS_SIZE a0) y1 y2)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) y0 y1) y2))))))) x0);
symbol term5 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) (x2: El num) ≔ ((λ y0 : El num, (⇒ (∧ (∀ (λ y1 : El a0, (∀ (λ y2 : El a0, (⇒ (∧ ((@IN a0) y1 x1) (∧ ((@IN a0) y2 x1) (= (x0 y1) (x0 y2)))) (= y1 y2)))))) ((@HAS_SIZE a0) x1 y0)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 x1) y0))) x2);
symbol term3 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) ≔ ((λ y0 : El (fun a0 bool), (∀ (λ y1 : El num, (⇒ (∧ (∀ (λ y2 : El a0, (∀ (λ y3 : El a0, (⇒ (∧ ((@IN a0) y2 y0) (∧ ((@IN a0) y3 y0) (= (x0 y2) (x0 y3)))) (= y2 y3)))))) ((@HAS_SIZE a0) y0 y1)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 y0) y1))))) x1);
symbol term8 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) (x2: El num) ≔ ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 x1) x2);
symbol term9 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) (x2: El num) ≔ (⇒ (∀ (λ y0 : El (fun a0 a1), (∀ (λ y1 : El (fun a0 bool), (∀ (λ y2 : El num, (⇒ (∧ (∀ (λ y3 : El a0, (∀ (λ y4 : El a0, (⇒ (∧ ((@IN a0) y3 y1) (∧ ((@IN a0) y4 y1) (= (y0 y3) (y0 y4)))) (= y3 y4)))))) ((@HAS_SIZE a0) y1 y2)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) y0 y1) y2)))))))) ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 x1) x2));
symbol term2 a0 a1 (x0: El (fun a0 a1)) ≔ (∀ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El num, (⇒ (∧ (∀ (λ y2 : El a0, (∀ (λ y3 : El a0, (⇒ (∧ ((@IN a0) y2 y0) (∧ ((@IN a0) y3 y0) (= (x0 y2) (x0 y3)))) (= y2 y3)))))) ((@HAS_SIZE a0) y0 y1)) ((@HAS_SIZE a1) ((@IMAGE a0 a1) x0 y0) y1))))));
symbol term7 a0 a1 (x0: El (fun a0 a1)) (x1: El (fun a0 bool)) (x2: El num) ≔ (∧ (∀ (λ y0 : El a0, (∀ (λ y1 : El a0, (⇒ (∧ ((@IN a0) y0 x1) (∧ ((@IN a0) y1 x1) (= (x0 y0) (x0 y1)))) (= y0 y1)))))) ((@HAS_SIZE a0) x1 x2));
