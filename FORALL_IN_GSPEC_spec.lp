require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem3435744 [_88905 _88961 _88962 _89029 _89030 _89031 _89106 _89107 _89108 _89109 _89110] (Q : El (fun _89106 bool)) : Prf (∧ (∀ (λ P : El (fun _88905 bool), (∀ (λ f : El (fun _88905 _89106), (= (∀ (λ z : El _89106, (⇒ ((@IN _89106) z ((@GSPEC _89106) (λ GEN_PVAR_39 : El _89106, (∃ (λ x : El _88905, ((@SETSPEC _89106) GEN_PVAR_39 (P x) (f x))))))) (Q z)))) (∀ (λ x : El _88905, (⇒ (P x) (Q (f x)))))))))) (∧ (∀ (λ P : El (fun _88962 (fun _88961 bool)), (∀ (λ f : El (fun _88962 (fun _88961 _89106)), (= (∀ (λ z : El _89106, (⇒ ((@IN _89106) z ((@GSPEC _89106) (λ GEN_PVAR_40 : El _89106, (∃ (λ x : El _88962, (∃ (λ y : El _88961, ((@SETSPEC _89106) GEN_PVAR_40 (P x y) (f x y))))))))) (Q z)))) (∀ (λ x : El _88962, (∀ (λ y : El _88961, (⇒ (P x y) (Q (f x y)))))))))))) (∧ (∀ (λ P : El (fun _89031 (fun _89030 (fun _89029 bool))), (∀ (λ f : El (fun _89031 (fun _89030 (fun _89029 _89106))), (= (∀ (λ z : El _89106, (⇒ ((@IN _89106) z ((@GSPEC _89106) (λ GEN_PVAR_41 : El _89106, (∃ (λ w : El _89031, (∃ (λ x : El _89030, (∃ (λ y : El _89029, ((@SETSPEC _89106) GEN_PVAR_41 (P w x y) (f w x y))))))))))) (Q z)))) (∀ (λ w : El _89031, (∀ (λ x : El _89030, (∀ (λ y : El _89029, (⇒ (P w x y) (Q (f w x y)))))))))))))) (∀ (λ P : El (fun _89110 (fun _89109 (fun _89108 (fun _89107 bool)))), (∀ (λ f : El (fun _89110 (fun _89109 (fun _89108 (fun _89107 _89106)))), (= (∀ (λ z : El _89106, (⇒ ((@IN _89106) z ((@GSPEC _89106) (λ GEN_PVAR_42 : El _89106, (∃ (λ v : El _89110, (∃ (λ w : El _89109, (∃ (λ x : El _89108, (∃ (λ y : El _89107, ((@SETSPEC _89106) GEN_PVAR_42 (P v w x y) (f v w x y))))))))))))) (Q z)))) (∀ (λ v : El _89110, (∀ (λ w : El _89109, (∀ (λ x : El _89108, (∀ (λ y : El _89107, (⇒ (P v w x y) (Q (f v w x y)))))))))))))))))));
