Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term21 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : type1470 a0 a1) := False \/ (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x0) /\ (@IN a0 y1 (x1 y0))) -> x2 y0 y1).
Definition term33 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := fun y0 : a1 -> Prop => forall y1 : type1470 a0 a1, (~ ((@cartesian_product a0 a1 y0 y1) = (@EMPTY (a1 -> a0)))) -> (forall y2 : a1, forall y3 : a0, ((@IN a1 y2 y0) /\ (@IN a0 y3 (y1 y2))) -> x0 y2 y3) = (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 y0 y1)) /\ (@IN a1 y3 y0)) -> x0 y3 (y2 y3)).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : type1470 a0 a1) := ((@cartesian_product a0 a1 x0 x1) = (@EMPTY (a1 -> a0))) \/ (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x0) /\ (@IN a0 y1 (x1 y0))) -> x2 y0 y1).
Definition term31 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term39 (a0 : Type') (a1 : Type') := forall y0 : type1470 a0 a1, forall y1 : a1 -> Prop, forall y2 : type1470 a0 a1, (~ ((@cartesian_product a0 a1 y1 y2) = (@EMPTY (a1 -> a0)))) -> (forall y3 : a1, forall y4 : a0, ((@IN a1 y3 y1) /\ (@IN a0 y4 (y2 y3))) -> y0 y3 y4) = (forall y3 : a1 -> a0, forall y4 : a1, ((@IN (a1 -> a0) y3 (@cartesian_product a0 a1 y1 y2)) /\ (@IN a1 y4 y1)) -> y0 y4 (y3 y4)).
Definition term37 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, x0.
Definition term32 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : type1470 a0 a1, x0.
Definition term27 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := fun y0 : type1470 a0 a1 => (~ ((@cartesian_product a0 a1 x0 y0) = (@EMPTY (a1 -> a0)))) -> (forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x0) /\ (@IN a0 y2 (y0 y1))) -> x1 y1 y2) = (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x0 y0)) /\ (@IN a1 y2 x0)) -> x1 y2 (y1 y2)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) = y0) -> (y0 -> ((forall y2 : a1, forall y3 : a0, ((@IN a1 y2 x1) /\ (@IN a0 y3 (x0 y2))) -> x2 y2 y3) = (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y3 x1)) -> x2 y3 (y2 y3))) = y1) -> ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> (forall y2 : a1, forall y3 : a0, ((@IN a1 y2 x1) /\ (@IN a0 y3 (x0 y2))) -> x2 y2 y3) = (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y3 x1)) -> x2 y3 (y2 y3))) = (y0 -> y1)) x3.
Definition term17 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : Prop) := ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) = (~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0))))) -> ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> ((forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) -> x0 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x2)) /\ (@IN a1 y1 x1)) -> x0 y1 (y0 y1))) = x3) -> ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) -> x0 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x2)) /\ (@IN a1 y1 x1)) -> x0 y1 (y0 y1))) = ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> x3).
Definition term16 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : Prop) (x4 : Prop) := ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) = x3) -> (x3 -> ((forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x0 y0))) -> x2 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y1 x1)) -> x2 y1 (y0 y1))) = x4) -> ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x0 y0))) -> x2 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y1 x1)) -> x2 y1 (y0 y1))) = (x3 -> x4).
Definition term23 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := (~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> ((forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x0 y0))) -> x2 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y1 x1)) -> x2 y1 (y0 y1))) = True.
Definition term7 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term3 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := forall y0 : type1470 a0 a1, (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x0 y0)) /\ (@IN a1 y2 x0)) -> x1 y2 (y1 y2)) = (((@cartesian_product a0 a1 x0 y0) = (@EMPTY (a1 -> a0))) \/ (forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x0) /\ (@IN a0 y2 (y0 y1))) -> x1 y1 y2)).
Definition term28 (a0 : Type') (a1 : Type') := fun y0 : type1470 a0 a1 => True.
Definition term38 (a0 : Type') (a1 : Type') := fun y0 : type1470 a0 a1 => forall y1 : a1 -> Prop, forall y2 : type1470 a0 a1, (~ ((@cartesian_product a0 a1 y1 y2) = (@EMPTY (a1 -> a0)))) -> (forall y3 : a1, forall y4 : a0, ((@IN a1 y3 y1) /\ (@IN a0 y4 (y2 y3))) -> y0 y3 y4) = (forall y3 : a1 -> a0, forall y4 : a1, ((@IN (a1 -> a0) y3 (@cartesian_product a0 a1 y1 y2)) /\ (@IN a1 y4 y1)) -> y0 y4 (y3 y4)).
Definition term29 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := forall y0 : type1470 a0 a1, (~ ((@cartesian_product a0 a1 x0 y0) = (@EMPTY (a1 -> a0)))) -> (forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x0) /\ (@IN a0 y2 (y0 y1))) -> x1 y1 y2) = (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x0 y0)) /\ (@IN a1 y2 x0)) -> x1 y2 (y1 y2)).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := (~ ((@cartesian_product a0 a1 x0 x1) = (@EMPTY (a1 -> a0)))) -> True.
Definition term11 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := ~ ((@cartesian_product a0 a1 x0 x1) = (@EMPTY (a1 -> a0))).
Definition term25 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := (~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x0 y0))) -> x2 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y1 x1)) -> x2 y1 (y0 y1)).
Definition term14 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : Prop) := forall y0 : Prop, ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) = x3) -> (x3 -> ((forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x1) /\ (@IN a0 y2 (x0 y1))) -> x2 y1 y2) = (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y2 x1)) -> x2 y2 (y1 y2))) = y0) -> ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> (forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x1) /\ (@IN a0 y2 (x0 y1))) -> x2 y1 y2) = (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y2 x1)) -> x2 y2 (y1 y2))) = (x3 -> y0).
Definition term8 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term34 (a0 : Type') := fun y0 : a0 -> Prop => True.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : type1470 a0 a1) := @eq Prop (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x0) /\ (@IN a0 y1 (x1 y0))) -> x2 y0 y1).
Definition term10 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := forall y0 : Prop, forall y1 : Prop, ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) = y0) -> (y0 -> ((forall y2 : a1, forall y3 : a0, ((@IN a1 y2 x1) /\ (@IN a0 y3 (x0 y2))) -> x2 y2 y3) = (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y3 x1)) -> x2 y3 (y2 y3))) = y1) -> ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> (forall y2 : a1, forall y3 : a0, ((@IN a1 y2 x1) /\ (@IN a0 y3 (x0 y2))) -> x2 y2 y3) = (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y3 x1)) -> x2 y3 (y2 y3))) = (y0 -> y1).
Definition term9 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term35 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := forall y0 : a1 -> Prop, forall y1 : type1470 a0 a1, (~ ((@cartesian_product a0 a1 y0 y1) = (@EMPTY (a1 -> a0)))) -> (forall y2 : a1, forall y3 : a0, ((@IN a1 y2 y0) /\ (@IN a0 y3 (y1 y2))) -> x0 y2 y3) = (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 y0 y1)) /\ (@IN a1 y3 y0)) -> x0 y3 (y2 y3)).
Definition term1 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := forall y0 : a1 -> Prop, forall y1 : type1470 a0 a1, (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 y0 y1)) /\ (@IN a1 y3 y0)) -> x0 y3 (y2 y3)) = (((@cartesian_product a0 a1 y0 y1) = (@EMPTY (a1 -> a0))) \/ (forall y2 : a1, forall y3 : a0, ((@IN a1 y2 y0) /\ (@IN a0 y3 (y1 y2))) -> x0 y2 y3)).
Definition term19 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := (~ ((@cartesian_product a0 a1 x0 x1) = (@EMPTY (a1 -> a0)))) -> ((@cartesian_product a0 a1 x0 x1) = (@EMPTY (a1 -> a0))) = False.
Definition term15 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : Prop) (x4 : Prop) := (fun y0 : Prop => ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) = x3) -> (x3 -> ((forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x1) /\ (@IN a0 y2 (x0 y1))) -> x2 y1 y2) = (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y2 x1)) -> x2 y2 (y1 y2))) = y0) -> ((~ ((@cartesian_product a0 a1 x1 x0) = (@EMPTY (a1 -> a0)))) -> (forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x1) /\ (@IN a0 y2 (x0 y1))) -> x2 y1 y2) = (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y2 x1)) -> x2 y2 (y1 y2))) = (x3 -> y0)) x4.
Definition term18 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) (x3 : Prop) := ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> ((forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) -> x0 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x2)) /\ (@IN a1 y1 x1)) -> x0 y1 (y0 y1))) = x3) -> ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) -> x0 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x2)) /\ (@IN a1 y1 x1)) -> x0 y1 (y0 y1))) = ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> x3).
Definition term20 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := or ((@cartesian_product a0 a1 x0 x1) = (@EMPTY (a1 -> a0))).
Definition term12 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : type1470 a0 a1) := forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x0) /\ (@IN a0 y1 (x1 y0))) -> x2 y0 y1.
Definition term0 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := (fun y0 : type1470 a0 a1 => forall y1 : a1 -> Prop, forall y2 : type1470 a0 a1, (forall y3 : a1 -> a0, forall y4 : a1, ((@IN (a1 -> a0) y3 (@cartesian_product a0 a1 y1 y2)) /\ (@IN a1 y4 y1)) -> y0 y4 (y3 y4)) = (((@cartesian_product a0 a1 y1 y2) = (@EMPTY (a1 -> a0))) \/ (forall y3 : a1, forall y4 : a0, ((@IN a1 y3 y1) /\ (@IN a0 y4 (y2 y3))) -> y0 y3 y4))) x0.
Definition term24 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> ((forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) -> x0 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x2)) /\ (@IN a1 y1 x1)) -> x0 y1 (y0 y1))) = True) -> ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> (forall y0 : a1, forall y1 : a0, ((@IN a1 y0 x1) /\ (@IN a0 y1 (x2 y0))) -> x0 y0 y1) = (forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x2)) /\ (@IN a1 y1 x1)) -> x0 y1 (y0 y1))) = ((~ ((@cartesian_product a0 a1 x1 x2) = (@EMPTY (a1 -> a0)))) -> True).
Definition term2 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : type1470 a0 a1, (forall y2 : a1 -> a0, forall y3 : a1, ((@IN (a1 -> a0) y2 (@cartesian_product a0 a1 y0 y1)) /\ (@IN a1 y3 y0)) -> x0 y3 (y2 y3)) = (((@cartesian_product a0 a1 y0 y1) = (@EMPTY (a1 -> a0))) \/ (forall y2 : a1, forall y3 : a0, ((@IN a1 y2 y0) /\ (@IN a0 y3 (y1 y2))) -> x0 y2 y3))) x1.
Definition term4 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) (x2 : type1470 a0 a1) := (fun y0 : type1470 a0 a1 => (forall y1 : a1 -> a0, forall y2 : a1, ((@IN (a1 -> a0) y1 (@cartesian_product a0 a1 x0 y0)) /\ (@IN a1 y2 x0)) -> x1 y2 (y1 y2)) = (((@cartesian_product a0 a1 x0 y0) = (@EMPTY (a1 -> a0))) \/ (forall y1 : a1, forall y2 : a0, ((@IN a1 y1 x0) /\ (@IN a0 y2 (y0 y1))) -> x1 y1 y2))) x2.
Definition term5 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1 -> Prop) (x2 : type1470 a0 a1) := forall y0 : a1 -> a0, forall y1 : a1, ((@IN (a1 -> a0) y0 (@cartesian_product a0 a1 x1 x0)) /\ (@IN a1 y1 x1)) -> x2 y1 (y0 y1).
Definition term36 (a0 : Type') := forall y0 : a0 -> Prop, True.
Definition term30 (a0 : Type') (a1 : Type') := forall y0 : type1470 a0 a1, True.
