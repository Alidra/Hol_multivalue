Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import admissible_term_abbrevs.
Lemma lem8093126 {_143449 _143452 _143456 _143457 _143462 : Type'} : (@admissible _143449 _143452 _143456 _143457 _143462) = (term0 _143449 _143452 _143456 _143457 _143462).
Proof. exact (@admissible_def _143449 _143452 _143456 _143457 _143462). Qed.
Lemma lem8093127 {_143449 _143456 : Type'} (_107289 : type1470 _143449 _143456) : _107289 = _107289.
Proof. exact (eq_refl _107289). Qed.
Lemma lem8093128 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289) = (term1 _143449 _143452 _143456 _143457 _143462 _107289).
Proof. exact (MK_COMB (@lem8093126 _143449 _143452 _143456 _143457 _143462) (@lem8093127 _143449 _143456 _107289)). Qed.
Lemma lem8093129 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : (term1 _143449 _143452 _143456 _143457 _143462 _107289) = (term2 _143449 _143452 _143456 _143457 _143462 _107289).
Proof. exact (eq_refl (term1 _143449 _143452 _143456 _143457 _143462 _107289)). Qed.
Lemma lem8093130 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289) = (term2 _143449 _143452 _143456 _143457 _143462 _107289).
Proof. exact (TRANS (@lem8093128 _143449 _143452 _143456 _143457 _143462 _107289) (@lem8093129 _143449 _143452 _143456 _143457 _143462 _107289)). Qed.
Lemma lem8093131 {_143452 _143456 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) : _107290 = _107290.
Proof. exact (eq_refl _107290). Qed.
Lemma lem8093132 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) (_107290 : type800 _143452 _143456 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290) = (term3 _143449 _143452 _143456 _143457 _143462 _107289 _107290).
Proof. exact (MK_COMB (@lem8093130 _143449 _143452 _143456 _143457 _143462 _107289) (@lem8093131 _143452 _143456 _143462 _107290)). Qed.
Lemma lem8093133 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) : (term3 _143449 _143452 _143456 _143457 _143462 _107289 _107290) = (term4 _143449 _143452 _143456 _143457 _143462 _107290 _107289).
Proof. exact (eq_refl (term3 _143449 _143452 _143456 _143457 _143462 _107289 _107290)). Qed.
Lemma lem8093134 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290) = (term4 _143449 _143452 _143456 _143457 _143462 _107290 _107289).
Proof. exact (TRANS (@lem8093132 _143449 _143452 _143456 _143457 _143462 _107289 _107290) (@lem8093133 _143449 _143452 _143456 _143457 _143462 _107290 _107289)). Qed.
Lemma lem8093135 {_143449 _143462 : Type'} (_107291 : _143462 -> _143449) : _107291 = _107291.
Proof. exact (eq_refl _107291). Qed.
Lemma lem8093136 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290 _107291) = (term5 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291).
Proof. exact (MK_COMB (@lem8093134 _143449 _143452 _143456 _143457 _143462 _107290 _107289) (@lem8093135 _143449 _143462 _107291)). Qed.
Lemma lem8093137 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : (term5 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291) = (term6 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291).
Proof. exact (eq_refl (term5 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291)). Qed.
Lemma lem8093138 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290 _107291) = (term6 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291).
Proof. exact (TRANS (@lem8093136 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291) (@lem8093137 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291)). Qed.
Lemma lem8093139 {_143452 _143456 _143457 _143462 : Type'} (_107292 : type801 _143452 _143456 _143457 _143462) : _107292 = _107292.
Proof. exact (eq_refl _107292). Qed.
Lemma lem8093140 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) (_107292 : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290 _107291 _107292) = (term7 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292).
Proof. exact (MK_COMB (@lem8093138 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291) (@lem8093139 _143452 _143456 _143457 _143462 _107292)). Qed.
Lemma lem8093141 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) (_107292 : type801 _143452 _143456 _143457 _143462) : (term7 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292) = (term8 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292).
Proof. exact (eq_refl (term7 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292)). Qed.
Lemma lem8093142 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) (_107292 : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290 _107291 _107292) = (term8 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292).
Proof. exact (TRANS (@lem8093140 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292) (@lem8093141 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292)). Qed.
Lemma lem8093143 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : term9 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291.
Proof. exact (fun _107292 : type801 _143452 _143456 _143457 _143462 => @lem8093142 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292). Qed.
Lemma lem8093144 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) : term10 _143449 _143452 _143456 _143457 _143462 _107290 _107289.
Proof. exact (fun _107291 : _143462 -> _143449 => @lem8093143 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291). Qed.
Lemma lem8093145 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : term11 _143449 _143452 _143456 _143457 _143462 _107289.
Proof. exact (fun _107290 : type800 _143452 _143456 _143462 => @lem8093144 _143449 _143452 _143456 _143457 _143462 _107290 _107289). Qed.
Lemma lem8093146 {_143449 _143452 _143456 _143457 _143462 : Type'} : term12 _143449 _143452 _143456 _143457 _143462.
Proof. exact (fun _107289 : type1470 _143449 _143456 => @lem8093145 _143449 _143452 _143456 _143457 _143462 _107289). Qed.
Lemma lem8093147 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : term13 _143449 _143452 _143456 _143457 _143462 _107289.
Proof. exact (@lem8093146 _143449 _143452 _143456 _143457 _143462 _107289). Qed.
Lemma lem8093148 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : (term13 _143449 _143452 _143456 _143457 _143462 _107289) = (term11 _143449 _143452 _143456 _143457 _143462 _107289).
Proof. exact (eq_refl (term13 _143449 _143452 _143456 _143457 _143462 _107289)). Qed.
Lemma lem8093149 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) : term11 _143449 _143452 _143456 _143457 _143462 _107289.
Proof. exact (EQ_MP (@lem8093148 _143449 _143452 _143456 _143457 _143462 _107289) (@lem8093147 _143449 _143452 _143456 _143457 _143462 _107289)). Qed.
Lemma lem8093150 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107289 : type1470 _143449 _143456) (_107290 : type800 _143452 _143456 _143462) : term14 _143449 _143452 _143456 _143457 _143462 _107289 _107290.
Proof. exact (@lem8093149 _143449 _143452 _143456 _143457 _143462 _107289 _107290). Qed.
Lemma lem8093151 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) : (term14 _143449 _143452 _143456 _143457 _143462 _107289 _107290) = (term10 _143449 _143452 _143456 _143457 _143462 _107290 _107289).
Proof. exact (eq_refl (term14 _143449 _143452 _143456 _143457 _143462 _107289 _107290)). Qed.
Lemma lem8093152 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) : term10 _143449 _143452 _143456 _143457 _143462 _107290 _107289.
Proof. exact (EQ_MP (@lem8093151 _143449 _143452 _143456 _143457 _143462 _107290 _107289) (@lem8093150 _143449 _143452 _143456 _143457 _143462 _107289 _107290)). Qed.
Lemma lem8093153 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : term15 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291.
Proof. exact (@lem8093152 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291). Qed.
Lemma lem8093154 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : (term15 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291) = (term9 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291).
Proof. exact (eq_refl (term15 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291)). Qed.
Lemma lem8093155 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) : term9 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291.
Proof. exact (EQ_MP (@lem8093154 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291) (@lem8093153 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291)). Qed.
Lemma lem8093156 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) (_107292 : type801 _143452 _143456 _143457 _143462) : term16 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292.
Proof. exact (@lem8093155 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292). Qed.
Lemma lem8093157 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) (_107292 : type801 _143452 _143456 _143457 _143462) : (term16 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292) = ((@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290 _107291 _107292) = (term8 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292)).
Proof. exact (eq_refl (term16 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292)). Qed.
Lemma lem8093158 {_143449 _143452 _143456 _143457 _143462 : Type'} (_107290 : type800 _143452 _143456 _143462) (_107289 : type1470 _143449 _143456) (_107291 : _143462 -> _143449) (_107292 : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 _107289 _107290 _107291 _107292) = (term8 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292).
Proof. exact (EQ_MP (@lem8093157 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292) (@lem8093156 _143449 _143452 _143456 _143457 _143462 _107290 _107289 _107291 _107292)). Qed.
Lemma lem8093227 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term8 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (@lem8093158 _143449 _143452 _143456 _143457 _143462 p lt2 s t). Qed.
Lemma lem8093228 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term9 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (fun t : type801 _143452 _143456 _143457 _143462 => @lem8093227 _143449 _143452 _143456 _143457 _143462 p lt2 s t). Qed.
Lemma lem8093229 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term10 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (fun s : _143462 -> _143449 => @lem8093228 _143449 _143452 _143456 _143457 _143462 p lt2 s). Qed.
Lemma lem8093230 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term17 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (fun lt2 : type1470 _143449 _143456 => @lem8093229 _143449 _143452 _143456 _143457 _143462 p lt2). Qed.
Lemma lem8093231 {_143449 _143452 _143456 _143457 _143462 : Type'} : term18 _143449 _143452 _143456 _143457 _143462.
Proof. exact (fun p : type800 _143452 _143456 _143462 => @lem8093230 _143449 _143452 _143456 _143457 _143462 p). Qed.
