require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol axiom_0 [A B] : Prf (∀ (λ t : El (fun A B), (= (λ x : El A, (t x)) t)));
symbol axiom_1 [A] : Prf (∀ (λ P : El (fun A bool), (∀ (λ x : El A, (⇒ (P x) (P ((@ε A) P)))))));
symbol axiom_2 (a : El 1) : Prf (= (one_ABS (one_REP a)) a);
symbol axiom_3 (r : El bool) : Prf (= ((λ b : El bool, b) r) (= (one_REP (one_ABS r)) r));
symbol axiom_4 [A B] (a : El (prod A B)) : Prf (= ((@ABS_prod A B) ((@REP_prod A B) a)) a);
symbol axiom_5 [A B] (r : El (fun A (fun B bool))) : Prf (= ((λ x : El (fun A (fun B bool)), (∃ (λ a : El A, (∃ (λ b : El B, (= x ((@mk_pair A B) a b))))))) r) (= ((@REP_prod A B) ((@ABS_prod A B) r)) r));
symbol axiom_6 : Prf (∃ (λ f : El (fun ind ind), (∧ ((@ONE_ONE ind ind) f) (¬ ((@ONTO ind ind) f)))));
symbol axiom_7 (a : El num) : Prf (= (mk_num (dest_num a)) a);
symbol axiom_8 (r : El ind) : Prf (= (NUM_REP r) (= (dest_num (mk_num r)) r));
symbol axiom_9 [A] (a : El (recspace A)) : Prf (= ((@_mk_rec A) ((@_dest_rec A) a)) a);
symbol axiom_10 [A] (r : El (fun num (fun A bool))) : Prf (= ((@ZRECSPACE A) r) (= ((@_dest_rec A) ((@_mk_rec A) r)) r));
symbol axiom_11 [A B] (a : El (Sum A B)) : Prf (= ((@_mk_sum A B) ((@_dest_sum A B) a)) a);
symbol axiom_12 [A B] (r : El (recspace (prod A B))) : Prf (= ((λ a : El (recspace (prod A B)), (∀ (λ sum' : El (fun (recspace (prod A B)) bool), (⇒ (∀ (λ a' : El (recspace (prod A B)), (⇒ (∨ (∃ (λ a'' : El A, (= a' ((λ a''' : El A, ((@CONSTR (prod A B)) (NUMERAL _0) ((@̦‚ A B) a''' ((@ε B) (λ v : El B, T))) (λ n : El num, (@BOTTOM (prod A B))))) a'')))) (∃ (λ a'' : El B, (= a' ((λ a''' : El B, ((@CONSTR (prod A B)) (SUC (NUMERAL _0)) ((@̦‚ A B) ((@ε A) (λ v : El A, T)) a''') (λ n : El num, (@BOTTOM (prod A B))))) a''))))) (sum' a')))) (sum' a))))) r) (= ((@_dest_sum A B) ((@_mk_sum A B) r)) r));
symbol axiom_13 [A] (a : El (option A)) : Prf (= ((@_mk_option A) ((@_dest_option A) a)) a);
symbol axiom_14 [A] (r : El (recspace A)) : Prf (= ((λ a : El (recspace A), (∀ (λ option' : El (fun (recspace A) bool), (⇒ (∀ (λ a' : El (recspace A), (⇒ (∨ (= a' ((@CONSTR A) (NUMERAL _0) ((@ε A) (λ v : El A, T)) (λ n : El num, (@BOTTOM A)))) (∃ (λ a'' : El A, (= a' ((λ a''' : El A, ((@CONSTR A) (SUC (NUMERAL _0)) a''' (λ n : El num, (@BOTTOM A)))) a''))))) (option' a')))) (option' a))))) r) (= ((@_dest_option A) ((@_mk_option A) r)) r));
symbol axiom_15 [A] (a : El (list A)) : Prf (= ((@_mk_list A) ((@_dest_list A) a)) a);
symbol axiom_16 [A] (r : El (recspace A)) : Prf (= ((λ a : El (recspace A), (∀ (λ list' : El (fun (recspace A) bool), (⇒ (∀ (λ a' : El (recspace A), (⇒ (∨ (= a' ((@CONSTR A) (NUMERAL _0) ((@ε A) (λ v : El A, T)) (λ n : El num, (@BOTTOM A)))) (∃ (λ a0 : El A, (∃ (λ a1 : El (recspace A), (∧ (= a' ((λ a0' : El A, (λ a1' : El (recspace A), ((@CONSTR A) (SUC (NUMERAL _0)) a0' ((@FCONS (recspace A)) a1' (λ n : El num, (@BOTTOM A)))))) a0 a1)) (list' a1))))))) (list' a')))) (list' a))))) r) (= ((@_dest_list A) ((@_mk_list A) r)) r));
symbol axiom_17 (a : El char) : Prf (= (_mk_char (_dest_char a)) a);
symbol axiom_18 (r : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool))))))))) : Prf (= ((λ a : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))), (∀ (λ char' : El (fun (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) bool), (⇒ (∀ (λ a' : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))), (⇒ (∃ (λ a0 : El bool, (∃ (λ a1 : El bool, (∃ (λ a2 : El bool, (∃ (λ a3 : El bool, (∃ (λ a4 : El bool, (∃ (λ a5 : El bool, (∃ (λ a6 : El bool, (∃ (λ a7 : El bool, (= a' ((λ a0' : El bool, (λ a1' : El bool, (λ a2' : El bool, (λ a3' : El bool, (λ a4' : El bool, (λ a5' : El bool, (λ a6' : El bool, (λ a7' : El bool, ((@CONSTR (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) (NUMERAL _0) ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool))))))) a0' ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))) a1' ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool bool))))) a2' ((@̦‚ bool (prod bool (prod bool (prod bool bool)))) a3' ((@̦‚ bool (prod bool (prod bool bool))) a4' ((@̦‚ bool (prod bool bool)) a5' ((@̦‚ bool bool) a6' a7'))))))) (λ n : El num, (@BOTTOM (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))))))))))))) a0 a1 a2 a3 a4 a5 a6 a7)))))))))))))))))) (char' a')))) (char' a))))) r) (= (_dest_char (_mk_char r)) r));
symbol axiom_19 (a : El nadd) : Prf (= (mk_nadd (dest_nadd a)) a);
symbol axiom_20 (r : El (fun num num)) : Prf (= (is_nadd r) (= (dest_nadd (mk_nadd r)) r));
symbol axiom_21 (a : El hreal) : Prf (= (mk_hreal (dest_hreal a)) a);
symbol axiom_22 (r : El (fun nadd bool)) : Prf (= ((λ s : El (fun nadd bool), (∃ (λ x : El nadd, (= s (nadd_eq x))))) r) (= (dest_hreal (mk_hreal r)) r));
symbol axiom_23 (a : El real) : Prf (= (mk_real (dest_real a)) a);
symbol axiom_24 (r : El (fun (prod hreal hreal) bool)) : Prf (= ((λ s : El (fun (prod hreal hreal) bool), (∃ (λ x : El (prod hreal hreal), (= s (treal_eq x))))) r) (= (dest_real (mk_real r)) r));
symbol axiom_25 (a : El int) : Prf (= (int_of_real (real_of_int a)) a);
symbol axiom_26 (r : El real) : Prf (= ((λ x : El real, (integer x)) r) (= (real_of_int (int_of_real r)) r));
symbol axiom_27 [A] (a : El (finite_image A)) : Prf (= ((@finite_index A) ((@dest_finite_image A) a)) a);
symbol axiom_28 [A] (r : El num) : Prf (= ((λ x : El num, ((@IN num) x (… (NUMERAL (BIT1 _0)) ((@dimindex A) (@UNIV A))))) r) (= ((@dest_finite_image A) ((@finite_index A) r)) r));
symbol axiom_29 [A B] (a : El (cart A B)) : Prf (= ((@mk_cart A B) ((@dest_cart A B) a)) a);
symbol axiom_30 [A B] (r : El (fun (finite_image B) A)) : Prf (= ((λ f : El (fun (finite_image B) A), T) r) (= ((@dest_cart A B) ((@mk_cart A B) r)) r));
symbol axiom_31 [A B] (a : El (finite_sum A B)) : Prf (= ((@mk_finite_sum A B) ((@dest_finite_sum A B) a)) a);
symbol axiom_32 [A B] (r : El num) : Prf (= ((λ x : El num, ((@IN num) x (… (NUMERAL (BIT1 _0)) (+ ((@dimindex A) (@UNIV A)) ((@dimindex B) (@UNIV B)))))) r) (= ((@dest_finite_sum A B) ((@mk_finite_sum A B) r)) r));
symbol axiom_33 [A B] (a : El (finite_diff A B)) : Prf (= ((@mk_finite_diff A B) ((@dest_finite_diff A B) a)) a);
symbol axiom_34 [A B] (r : El num) : Prf (= ((λ x : El num, ((@IN num) x (… (NUMERAL (BIT1 _0)) ((@COND num) (< ((@dimindex B) (@UNIV B)) ((@dimindex A) (@UNIV A))) (- ((@dimindex A) (@UNIV A)) ((@dimindex B) (@UNIV B))) (NUMERAL (BIT1 _0)))))) r) (= ((@dest_finite_diff A B) ((@mk_finite_diff A B) r)) r));
symbol axiom_35 [A B] (a : El (finite_prod A B)) : Prf (= ((@mk_finite_prod A B) ((@dest_finite_prod A B) a)) a);
symbol axiom_36 [A B] (r : El num) : Prf (= ((λ x : El num, ((@IN num) x (… (NUMERAL (BIT1 _0)) (* ((@dimindex A) (@UNIV A)) ((@dimindex B) (@UNIV B)))))) r) (= ((@dest_finite_prod A B) ((@mk_finite_prod A B) r)) r));
symbol axiom_37 [A] (a : El (tybit0 A)) : Prf (= ((@_mk_tybit0 A) ((@_dest_tybit0 A) a)) a);
symbol axiom_38 [A] (r : El (recspace (finite_sum A A))) : Prf (= ((λ a : El (recspace (finite_sum A A)), (∀ (λ tybit0' : El (fun (recspace (finite_sum A A)) bool), (⇒ (∀ (λ a' : El (recspace (finite_sum A A)), (⇒ (∃ (λ a'' : El (finite_sum A A), (= a' ((λ a''' : El (finite_sum A A), ((@CONSTR (finite_sum A A)) (NUMERAL _0) a''' (λ n : El num, (@BOTTOM (finite_sum A A))))) a'')))) (tybit0' a')))) (tybit0' a))))) r) (= ((@_dest_tybit0 A) ((@_mk_tybit0 A) r)) r));
symbol axiom_39 [A] (a : El (tybit1 A)) : Prf (= ((@_mk_tybit1 A) ((@_dest_tybit1 A) a)) a);
symbol axiom_40 [A] (r : El (recspace (finite_sum (finite_sum A A) 1))) : Prf (= ((λ a : El (recspace (finite_sum (finite_sum A A) 1)), (∀ (λ tybit1' : El (fun (recspace (finite_sum (finite_sum A A) 1)) bool), (⇒ (∀ (λ a' : El (recspace (finite_sum (finite_sum A A) 1)), (⇒ (∃ (λ a'' : El (finite_sum (finite_sum A A) 1), (= a' ((λ a''' : El (finite_sum (finite_sum A A) 1), ((@CONSTR (finite_sum (finite_sum A A) 1)) (NUMERAL _0) a''' (λ n : El num, (@BOTTOM (finite_sum (finite_sum A A) 1))))) a'')))) (tybit1' a')))) (tybit1' a))))) r) (= ((@_dest_tybit1 A) ((@_mk_tybit1 A) r)) r));
