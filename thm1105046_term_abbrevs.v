Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))).
Definition term31 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) (x2 : list a1) (x3 : list a2) := @cons a0 (x1 x0 (@hd a2 x3)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a2 x3)).
Definition term44 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) := forall y0 : type1475 a0 a1 a2, forall y1 : list a1, forall y2 : list a2, (@MAP2 a0 a1 a2 y0 (@cons a1 x0 y1) y2) = (@cons a0 (y0 x0 (@hd a2 y2)) (@MAP2 a0 a1 a2 y0 y1 (@tl a2 y2))).
Definition term43 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) := forall y0 : type1475 a0 a1 a2, forall y1 : list a1, forall y2 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y3 : type1286 a0 a1 a2 => forall y4 : type1673, (forall y5 : type1475 a0 a1 a2, forall y6 : list a2, (y3 y4 y5 (@nil a1) y6) = (@nil a0)) /\ (forall y5 : a1, forall y6 : type1475 a0 a1 a2, forall y7 : list a1, forall y8 : list a2, (y3 y4 y6 (@cons a1 y5 y7) y8) = (@cons a0 (y6 y5 (@hd a2 y8)) (y3 y4 y6 y7 (@tl a2 y8))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@cons a1 x0 y1) y2) = (@cons a0 (y0 x0 (@hd a2 y2)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y3 : type1286 a0 a1 a2 => forall y4 : type1673, (forall y5 : type1475 a0 a1 a2, forall y6 : list a2, (y3 y4 y5 (@nil a1) y6) = (@nil a0)) /\ (forall y5 : a1, forall y6 : type1475 a0 a1 a2, forall y7 : list a1, forall y8 : list a2, (y3 y4 y6 (@cons a1 y5 y7) y8) = (@cons a0 (y6 y5 (@hd a2 y8)) (y3 y4 y6 y7 (@tl a2 y8))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 y1 (@tl a2 y2))).
Definition term40 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) := forall y0 : list a1, forall y1 : list a2, (@MAP2 a0 a1 a2 x1 (@cons a1 x0 y0) y1) = (@cons a0 (x1 x0 (@hd a2 y1)) (@MAP2 a0 a1 a2 x1 y0 (@tl a2 y1))).
Definition term39 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) := forall y0 : list a1, forall y1 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a1 x0 y0) y1) = (@cons a0 (x1 x0 (@hd a2 y1)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 y0 (@tl a2 y1))).
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) := fun y0 : list a2 => (@MAP2 a0 a1 a2 x0 (@nil a1) y0) = (@nil a0).
Definition term11 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) := fun y0 : list a2 => (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y1 : type1286 a0 a1 a2 => forall y2 : type1673, (forall y3 : type1475 a0 a1 a2, forall y4 : list a2, (y1 y2 y3 (@nil a1) y4) = (@nil a0)) /\ (forall y3 : a1, forall y4 : type1475 a0 a1 a2, forall y5 : list a1, forall y6 : list a2, (y1 y2 y4 (@cons a1 y3 y5) y6) = (@cons a0 (y4 y3 (@hd a2 y6)) (y1 y2 y4 y5 (@tl a2 y6))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a1) y0) = (@nil a0).
Definition term22 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a1) := @MAP2 a0 a1 a2 x0 (@cons a1 x1 x2).
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) := forall y0 : list a2, (@MAP2 a0 a1 a2 x0 (@nil a1) y0) = (@nil a0).
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) := forall y0 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y1 : type1286 a0 a1 a2 => forall y2 : type1673, (forall y3 : type1475 a0 a1 a2, forall y4 : list a2, (y1 y2 y3 (@nil a1) y4) = (@nil a0)) /\ (forall y3 : a1, forall y4 : type1475 a0 a1 a2, forall y5 : list a1, forall y6 : list a2, (y1 y2 y4 (@cons a1 y3 y5) y6) = (@cons a0 (y4 y3 (@hd a2 y6)) (y1 y2 y4 y5 (@tl a2 y6))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a1) y0) = (@nil a0).
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5)))))).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1673, (forall y1 : type1475 a0 a1 a2, forall y2 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y3 : type1286 a0 a1 a2 => forall y4 : type1673, (forall y5 : type1475 a0 a1 a2, forall y6 : list a2, (y3 y4 y5 (@nil a1) y6) = (@nil a0)) /\ (forall y5 : a1, forall y6 : type1475 a0 a1 a2, forall y7 : list a1, forall y8 : list a2, (y3 y4 y6 (@cons a1 y5 y7) y8) = (@cons a0 (y6 y5 (@hd a2 y8)) (y3 y4 y6 y7 (@tl a2 y8))))) y0 y1 (@nil a1) y2) = (@nil a0)) /\ (forall y1 : a1, forall y2 : type1475 a0 a1 a2, forall y3 : list a1, forall y4 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y5 : type1286 a0 a1 a2 => forall y6 : type1673, (forall y7 : type1475 a0 a1 a2, forall y8 : list a2, (y5 y6 y7 (@nil a1) y8) = (@nil a0)) /\ (forall y7 : a1, forall y8 : type1475 a0 a1 a2, forall y9 : list a1, forall y10 : list a2, (y5 y6 y8 (@cons a1 y7 y9) y10) = (@cons a0 (y8 y7 (@hd a2 y10)) (y5 y6 y8 y9 (@tl a2 y10))))) y0 y2 (@cons a1 y1 y3) y4) = (@cons a0 (y2 y1 (@hd a2 y4)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y5 : type1286 a0 a1 a2 => forall y6 : type1673, (forall y7 : type1475 a0 a1 a2, forall y8 : list a2, (y5 y6 y7 (@nil a1) y8) = (@nil a0)) /\ (forall y7 : a1, forall y8 : type1475 a0 a1 a2, forall y9 : list a1, forall y10 : list a2, (y5 y6 y8 (@cons a1 y7 y9) y10) = (@cons a0 (y8 y7 (@hd a2 y10)) (y5 y6 y8 y9 (@tl a2 y10))))) y0 y2 y3 (@tl a2 y4)))).
Definition term32 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) (x2 : list a1) (x3 : list a2) := @cons a0 (x1 x0 (@hd a2 x3)) (@MAP2 a0 a1 a2 x1 x2 (@tl a2 x3)).
Definition term42 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) := fun y0 : type1475 a0 a1 a2 => forall y1 : list a1, forall y2 : list a2, (@MAP2 a0 a1 a2 y0 (@cons a1 x0 y1) y2) = (@cons a0 (y0 x0 (@hd a2 y2)) (@MAP2 a0 a1 a2 y0 y1 (@tl a2 y2))).
Definition term41 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) := fun y0 : type1475 a0 a1 a2 => forall y1 : list a1, forall y2 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y3 : type1286 a0 a1 a2 => forall y4 : type1673, (forall y5 : type1475 a0 a1 a2, forall y6 : list a2, (y3 y4 y5 (@nil a1) y6) = (@nil a0)) /\ (forall y5 : a1, forall y6 : type1475 a0 a1 a2, forall y7 : list a1, forall y8 : list a2, (y3 y4 y6 (@cons a1 y5 y7) y8) = (@cons a0 (y6 y5 (@hd a2 y8)) (y3 y4 y6 y7 (@tl a2 y8))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@cons a1 x0 y1) y2) = (@cons a0 (y0 x0 (@hd a2 y2)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y3 : type1286 a0 a1 a2 => forall y4 : type1673, (forall y5 : type1475 a0 a1 a2, forall y6 : list a2, (y3 y4 y5 (@nil a1) y6) = (@nil a0)) /\ (forall y5 : a1, forall y6 : type1475 a0 a1 a2, forall y7 : list a1, forall y8 : list a2, (y3 y4 y6 (@cons a1 y5 y7) y8) = (@cons a0 (y6 y5 (@hd a2 y8)) (y3 y4 y6 y7 (@tl a2 y8))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 y1 (@tl a2 y2))).
Definition term30 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a2) := @cons a0 (x0 x1 (@hd a2 x2)).
Definition term24 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a1) (x3 : list a2) := @MAP2 a0 a1 a2 x0 (@cons a1 x1 x2) x3.
Definition term36 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) (x2 : list a1) := forall y0 : list a2, (@MAP2 a0 a1 a2 x1 (@cons a1 x0 x2) y0) = (@cons a0 (x1 x0 (@hd a2 y0)) (@MAP2 a0 a1 a2 x1 x2 (@tl a2 y0))).
Definition term35 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) (x2 : list a1) := forall y0 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y1 : type1286 a0 a1 a2 => forall y2 : type1673, (forall y3 : type1475 a0 a1 a2, forall y4 : list a2, (y1 y2 y3 (@nil a1) y4) = (@nil a0)) /\ (forall y3 : a1, forall y4 : type1475 a0 a1 a2, forall y5 : list a1, forall y6 : list a2, (y1 y2 y4 (@cons a1 y3 y5) y6) = (@cons a0 (y4 y3 (@hd a2 y6)) (y1 y2 y4 y5 (@tl a2 y6))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a1 x0 x2) y0) = (@cons a0 (x1 x0 (@hd a2 y0)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y1 : type1286 a0 a1 a2 => forall y2 : type1673, (forall y3 : type1475 a0 a1 a2, forall y4 : list a2, (y1 y2 y3 (@nil a1) y4) = (@nil a0)) /\ (forall y3 : a1, forall y4 : type1475 a0 a1 a2, forall y5 : list a1, forall y6 : list a2, (y1 y2 y4 (@cons a1 y3 y5) y6) = (@cons a0 (y4 y3 (@hd a2 y6)) (y1 y2 y4 y5 (@tl a2 y6))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a2 y0))).
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : type1475 a0 a1 a2 => forall y1 : list a2, (@MAP2 a0 a1 a2 y0 (@nil a1) y1) = (@nil a0).
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : type1475 a0 a1 a2 => forall y1 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a1) y1) = (@nil a0).
Definition term34 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) (x2 : list a1) := fun y0 : list a2 => (@MAP2 a0 a1 a2 x1 (@cons a1 x0 x2) y0) = (@cons a0 (x1 x0 (@hd a2 y0)) (@MAP2 a0 a1 a2 x1 x2 (@tl a2 y0))).
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') := and (forall y0 : type1475 a0 a1 a2, forall y1 : list a2, (@MAP2 a0 a1 a2 y0 (@nil a1) y1) = (@nil a0)).
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') := and (forall y0 : type1475 a0 a1 a2, forall y1 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a1) y1) = (@nil a0)).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a1).
Definition term46 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : a1 => forall y1 : type1475 a0 a1 a2, forall y2 : list a1, forall y3 : list a2, (@MAP2 a0 a1 a2 y1 (@cons a1 y0 y2) y3) = (@cons a0 (y1 y0 (@hd a2 y3)) (@MAP2 a0 a1 a2 y1 y2 (@tl a2 y3))).
Definition term45 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : a1 => forall y1 : type1475 a0 a1 a2, forall y2 : list a1, forall y3 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y4 : type1286 a0 a1 a2 => forall y5 : type1673, (forall y6 : type1475 a0 a1 a2, forall y7 : list a2, (y4 y5 y6 (@nil a1) y7) = (@nil a0)) /\ (forall y6 : a1, forall y7 : type1475 a0 a1 a2, forall y8 : list a1, forall y9 : list a2, (y4 y5 y7 (@cons a1 y6 y8) y9) = (@cons a0 (y7 y6 (@hd a2 y9)) (y4 y5 y7 y8 (@tl a2 y9))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 (@cons a1 y0 y2) y3) = (@cons a0 (y1 y0 (@hd a2 y3)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y4 : type1286 a0 a1 a2 => forall y5 : type1673, (forall y6 : type1475 a0 a1 a2, forall y7 : list a2, (y4 y5 y6 (@nil a1) y7) = (@nil a0)) /\ (forall y6 : a1, forall y7 : type1475 a0 a1 a2, forall y8 : list a1, forall y9 : list a2, (y4 y5 y7 (@cons a1 y6 y8) y9) = (@cons a0 (y7 y6 (@hd a2 y9)) (y4 y5 y7 y8 (@tl a2 y9))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 y2 (@tl a2 y3))).
Definition term18 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1475 a0 a1 a2, forall y1 : list a2, (@MAP2 a0 a1 a2 y0 (@nil a1) y1) = (@nil a0).
Definition term17 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1475 a0 a1 a2, forall y1 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a1) y1) = (@nil a0).
Definition term26 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a1) (x3 : list a2) := @eq (list a0) (@MAP2 a0 a1 a2 x0 (@cons a1 x1 x2) x3).
Definition term28 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : list a1) (x2 : list a2) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 x1 (@tl a2 x2).
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : list a2) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a1) x1.
Definition term21 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@cons a1 x1 x2).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') := (fun y0 : type1673 => (forall y1 : type1475 a0 a1 a2, forall y2 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y3 : type1286 a0 a1 a2 => forall y4 : type1673, (forall y5 : type1475 a0 a1 a2, forall y6 : list a2, (y3 y4 y5 (@nil a1) y6) = (@nil a0)) /\ (forall y5 : a1, forall y6 : type1475 a0 a1 a2, forall y7 : list a1, forall y8 : list a2, (y3 y4 y6 (@cons a1 y5 y7) y8) = (@cons a0 (y6 y5 (@hd a2 y8)) (y3 y4 y6 y7 (@tl a2 y8))))) y0 y1 (@nil a1) y2) = (@nil a0)) /\ (forall y1 : a1, forall y2 : type1475 a0 a1 a2, forall y3 : list a1, forall y4 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y5 : type1286 a0 a1 a2 => forall y6 : type1673, (forall y7 : type1475 a0 a1 a2, forall y8 : list a2, (y5 y6 y7 (@nil a1) y8) = (@nil a0)) /\ (forall y7 : a1, forall y8 : type1475 a0 a1 a2, forall y9 : list a1, forall y10 : list a2, (y5 y6 y8 (@cons a1 y7 y9) y10) = (@cons a0 (y8 y7 (@hd a2 y10)) (y5 y6 y8 y9 (@tl a2 y10))))) y0 y2 (@cons a1 y1 y3) y4) = (@cons a0 (y2 y1 (@hd a2 y4)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y5 : type1286 a0 a1 a2 => forall y6 : type1673, (forall y7 : type1475 a0 a1 a2, forall y8 : list a2, (y5 y6 y7 (@nil a1) y8) = (@nil a0)) /\ (forall y7 : a1, forall y8 : type1475 a0 a1 a2, forall y9 : list a1, forall y10 : list a2, (y5 y6 y8 (@cons a1 y7 y9) y10) = (@cons a0 (y8 y7 (@hd a2 y10)) (y5 y6 y8 y9 (@tl a2 y10))))) y0 y2 y3 (@tl a2 y4))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))).
Definition term48 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : a1, forall y1 : type1475 a0 a1 a2, forall y2 : list a1, forall y3 : list a2, (@MAP2 a0 a1 a2 y1 (@cons a1 y0 y2) y3) = (@cons a0 (y1 y0 (@hd a2 y3)) (@MAP2 a0 a1 a2 y1 y2 (@tl a2 y3))).
Definition term47 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : a1, forall y1 : type1475 a0 a1 a2, forall y2 : list a1, forall y3 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y4 : type1286 a0 a1 a2 => forall y5 : type1673, (forall y6 : type1475 a0 a1 a2, forall y7 : list a2, (y4 y5 y6 (@nil a1) y7) = (@nil a0)) /\ (forall y6 : a1, forall y7 : type1475 a0 a1 a2, forall y8 : list a1, forall y9 : list a2, (y4 y5 y7 (@cons a1 y6 y8) y9) = (@cons a0 (y7 y6 (@hd a2 y9)) (y4 y5 y7 y8 (@tl a2 y9))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 (@cons a1 y0 y2) y3) = (@cons a0 (y1 y0 (@hd a2 y3)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y4 : type1286 a0 a1 a2 => forall y5 : type1673, (forall y6 : type1475 a0 a1 a2, forall y7 : list a2, (y4 y5 y6 (@nil a1) y7) = (@nil a0)) /\ (forall y6 : a1, forall y7 : type1475 a0 a1 a2, forall y8 : list a1, forall y9 : list a2, (y4 y5 y7 (@cons a1 y6 y8) y9) = (@cons a0 (y7 y6 (@hd a2 y9)) (y4 y5 y7 y8 (@tl a2 y9))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 y2 (@tl a2 y3))).
Definition term29 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : list a1) (x2 : list a2) := @MAP2 a0 a1 a2 x0 x1 (@tl a2 x2).
Definition term23 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a1) (x3 : list a2) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@cons a1 x1 x2) x3.
Definition term49 (a0 : Type') (a1 : Type') (a2 : Type') := (forall y0 : type1475 a0 a1 a2, forall y1 : list a2, (@MAP2 a0 a1 a2 y0 (@nil a1) y1) = (@nil a0)) /\ (forall y0 : a1, forall y1 : type1475 a0 a1 a2, forall y2 : list a1, forall y3 : list a2, (@MAP2 a0 a1 a2 y1 (@cons a1 y0 y2) y3) = (@cons a0 (y1 y0 (@hd a2 y3)) (@MAP2 a0 a1 a2 y1 y2 (@tl a2 y3)))).
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') := (forall y0 : type1475 a0 a1 a2, forall y1 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a1) y1) = (@nil a0)) /\ (forall y0 : a1, forall y1 : type1475 a0 a1 a2, forall y2 : list a1, forall y3 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y4 : type1286 a0 a1 a2 => forall y5 : type1673, (forall y6 : type1475 a0 a1 a2, forall y7 : list a2, (y4 y5 y6 (@nil a1) y7) = (@nil a0)) /\ (forall y6 : a1, forall y7 : type1475 a0 a1 a2, forall y8 : list a1, forall y9 : list a2, (y4 y5 y7 (@cons a1 y6 y8) y9) = (@cons a0 (y7 y6 (@hd a2 y9)) (y4 y5 y7 y8 (@tl a2 y9))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 (@cons a1 y0 y2) y3) = (@cons a0 (y1 y0 (@hd a2 y3)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y4 : type1286 a0 a1 a2 => forall y5 : type1673, (forall y6 : type1475 a0 a1 a2, forall y7 : list a2, (y4 y5 y6 (@nil a1) y7) = (@nil a0)) /\ (forall y6 : a1, forall y7 : type1475 a0 a1 a2, forall y8 : list a1, forall y9 : list a2, (y4 y5 y7 (@cons a1 y6 y8) y9) = (@cons a0 (y7 y6 (@hd a2 y9)) (y4 y5 y7 y8 (@tl a2 y9))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 y2 (@tl a2 y3)))).
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : list a2) := @eq (list a0) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a1) x1).
Definition term3 := @pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0))))))))).
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : list a2) := @eq (list a0) (@MAP2 a0 a1 a2 x0 (@nil a1) x1).
Definition term33 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) (x2 : list a1) := fun y0 : list a2 => (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y1 : type1286 a0 a1 a2 => forall y2 : type1673, (forall y3 : type1475 a0 a1 a2, forall y4 : list a2, (y1 y2 y3 (@nil a1) y4) = (@nil a0)) /\ (forall y3 : a1, forall y4 : type1475 a0 a1 a2, forall y5 : list a1, forall y6 : list a2, (y1 y2 y4 (@cons a1 y3 y5) y6) = (@cons a0 (y4 y3 (@hd a2 y6)) (y1 y2 y4 y5 (@tl a2 y6))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a1 x0 x2) y0) = (@cons a0 (x1 x0 (@hd a2 y0)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y1 : type1286 a0 a1 a2 => forall y2 : type1673, (forall y3 : type1475 a0 a1 a2, forall y4 : list a2, (y1 y2 y3 (@nil a1) y4) = (@nil a0)) /\ (forall y3 : a1, forall y4 : type1475 a0 a1 a2, forall y5 : list a1, forall y6 : list a2, (y1 y2 y4 (@cons a1 y3 y5) y6) = (@cons a0 (y4 y3 (@hd a2 y6)) (y1 y2 y4 y5 (@tl a2 y6))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a2 y0))).
Definition term27 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : list a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 x1.
Definition term38 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) := fun y0 : list a1 => forall y1 : list a2, (@MAP2 a0 a1 a2 x1 (@cons a1 x0 y0) y1) = (@cons a0 (x1 x0 (@hd a2 y1)) (@MAP2 a0 a1 a2 x1 y0 (@tl a2 y1))).
Definition term37 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a1) (x1 : type1475 a0 a1 a2) := fun y0 : list a1 => forall y1 : list a2, (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a1 x0 y0) y1) = (@cons a0 (x1 x0 (@hd a2 y1)) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y2 : type1286 a0 a1 a2 => forall y3 : type1673, (forall y4 : type1475 a0 a1 a2, forall y5 : list a2, (y2 y3 y4 (@nil a1) y5) = (@nil a0)) /\ (forall y4 : a1, forall y5 : type1475 a0 a1 a2, forall y6 : list a1, forall y7 : list a2, (y2 y3 y5 (@cons a1 y4 y6) y7) = (@cons a0 (y5 y4 (@hd a2 y7)) (y2 y3 y5 y6 (@tl a2 y7))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 y0 (@tl a2 y1))).
Definition term25 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) (x1 : a1) (x2 : list a1) (x3 : list a2) := @eq (list a0) (@ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@cons a1 x1 x2) x3).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1475 a0 a1 a2) := @ε ((prod nat (prod nat (prod nat nat))) -> (a1 -> a2 -> a0) -> (list a1) -> (list a2) -> list a0) (fun y0 : type1286 a0 a1 a2 => forall y1 : type1673, (forall y2 : type1475 a0 a1 a2, forall y3 : list a2, (y0 y1 y2 (@nil a1) y3) = (@nil a0)) /\ (forall y2 : a1, forall y3 : type1475 a0 a1 a2, forall y4 : list a1, forall y5 : list a2, (y0 y1 y3 (@cons a1 y2 y4) y5) = (@cons a0 (y3 y2 (@hd a2 y5)) (y0 y1 y3 y4 (@tl a2 y5))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0.
