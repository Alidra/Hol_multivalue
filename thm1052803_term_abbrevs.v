Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term8 (x0 : nat) (x1 : nat) := @eq nat (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y0 : type1272 => forall y1 : type1671, forall y2 : nat, forall y3 : nat, ((NUMFST (NUMPAIR y2 y3)) = y2) /\ ((y0 y1 (NUMPAIR y2 y3)) = y3)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR x0 x1)).
Definition term12 (x0 : nat) (x1 : nat) := ((NUMFST (NUMPAIR x0 x1)) = x0) /\ ((NUMSND (NUMPAIR x0 x1)) = x1).
Definition term6 (x0 : nat) (x1 : nat) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y0 : type1272 => forall y1 : type1671, forall y2 : nat, forall y3 : nat, ((NUMFST (NUMPAIR y2 y3)) = y2) /\ ((y0 y1 (NUMPAIR y2 y3)) = y3)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR x0 x1).
Definition term16 (x0 : nat) := forall y0 : nat, ((NUMFST (NUMPAIR x0 y0)) = x0) /\ ((NUMSND (NUMPAIR x0 y0)) = y0).
Definition term15 (x0 : nat) := forall y0 : nat, ((NUMFST (NUMPAIR x0 y0)) = x0) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y1 : type1272 => forall y2 : type1671, forall y3 : nat, forall y4 : nat, ((NUMFST (NUMPAIR y3 y4)) = y3) /\ ((y1 y2 (NUMPAIR y3 y4)) = y4)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR x0 y0)) = y0).
Definition term11 (x0 : nat) (x1 : nat) := ((NUMFST (NUMPAIR x0 x1)) = x0) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y0 : type1272 => forall y1 : type1671, forall y2 : nat, forall y3 : nat, ((NUMFST (NUMPAIR y2 y3)) = y2) /\ ((y0 y1 (NUMPAIR y2 y3)) = y3)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR x0 x1)) = x1).
Definition term7 (x0 : nat) (x1 : nat) := NUMSND (NUMPAIR x0 x1).
Definition term10 (x0 : nat) (x1 : nat) := and ((NUMFST (NUMPAIR x1 x0)) = x1).
Definition term18 := fun y0 : nat => forall y1 : nat, ((NUMFST (NUMPAIR y0 y1)) = y0) /\ ((NUMSND (NUMPAIR y0 y1)) = y1).
Definition term17 := fun y0 : nat => forall y1 : nat, ((NUMFST (NUMPAIR y0 y1)) = y0) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y2 : type1272 => forall y3 : type1671, forall y4 : nat, forall y5 : nat, ((NUMFST (NUMPAIR y4 y5)) = y4) /\ ((y2 y3 (NUMPAIR y4 y5)) = y5)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR y0 y1)) = y1).
Definition term1 := forall y0 : type1671, forall y1 : nat, forall y2 : nat, ((NUMFST (NUMPAIR y1 y2)) = y1) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y3 : type1272 => forall y4 : type1671, forall y5 : nat, forall y6 : nat, ((NUMFST (NUMPAIR y5 y6)) = y5) /\ ((y3 y4 (NUMPAIR y5 y6)) = y6)) y0 (NUMPAIR y1 y2)) = y2).
Definition term0 := (fun y0 : type1272 => forall y1 : type1671, forall y2 : nat, forall y3 : nat, ((NUMFST (NUMPAIR y2 y3)) = y2) /\ ((y0 y1 (NUMPAIR y2 y3)) = y3)) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y0 : type1272 => forall y1 : type1671, forall y2 : nat, forall y3 : nat, ((NUMFST (NUMPAIR y2 y3)) = y2) /\ ((y0 y1 (NUMPAIR y2 y3)) = y3))).
Definition term19 := forall y0 : nat, forall y1 : nat, ((NUMFST (NUMPAIR y0 y1)) = y0) /\ ((NUMSND (NUMPAIR y0 y1)) = y1).
Definition term4 := forall y0 : nat, forall y1 : nat, ((NUMFST (NUMPAIR y0 y1)) = y0) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y2 : type1272 => forall y3 : type1671, forall y4 : nat, forall y5 : nat, ((NUMFST (NUMPAIR y4 y5)) = y4) /\ ((y2 y3 (NUMPAIR y4 y5)) = y5)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR y0 y1)) = y1).
Definition term3 := @pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))))))).
Definition term2 := (fun y0 : type1671 => forall y1 : nat, forall y2 : nat, ((NUMFST (NUMPAIR y1 y2)) = y1) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y3 : type1272 => forall y4 : type1671, forall y5 : nat, forall y6 : nat, ((NUMFST (NUMPAIR y5 y6)) = y5) /\ ((y3 y4 (NUMPAIR y5 y6)) = y6)) y0 (NUMPAIR y1 y2)) = y2)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))).
Definition term13 (x0 : nat) := fun y0 : nat => ((NUMFST (NUMPAIR x0 y0)) = x0) /\ ((@ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y1 : type1272 => forall y2 : type1671, forall y3 : nat, forall y4 : nat, ((NUMFST (NUMPAIR y3 y4)) = y3) /\ ((y1 y2 (NUMPAIR y3 y4)) = y4)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))) (NUMPAIR x0 y0)) = y0).
Definition term9 (x0 : nat) (x1 : nat) := @eq nat (NUMSND (NUMPAIR x0 x1)).
Definition term5 := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat nat))))) -> nat -> nat) (fun y0 : type1272 => forall y1 : type1671, forall y2 : nat, forall y3 : nat, ((NUMFST (NUMPAIR y2 y3)) = y2) /\ ((y0 y1 (NUMPAIR y2 y3)) = y3)) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))).
Definition term14 (x0 : nat) := fun y0 : nat => ((NUMFST (NUMPAIR x0 y0)) = x0) /\ ((NUMSND (NUMPAIR x0 y0)) = y0).
