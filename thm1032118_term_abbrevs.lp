require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term4 (x0: El num) (x1: El num) (x2: El num) (x3: El num) (x4: El num) ≔ (∧ (= (EXP (* x3 x1) x4) (* (EXP x3 x4) (EXP x1 x4))) (∧ (= (EXP (EXP x3 x0) x4) (EXP x3 (* x0 x4))) (∧ (= (EXP x3 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (* x3 (+ x1 x2)) (+ (* x3 x1) (* x3 x2))) (= (EXP x3 (SUC x4)) (* x3 (EXP x3 x4))))))));
symbol term2 (x0: El num) (x1: El num) (x2: El num) (x3: El num) (x4: El num) ≔ (∧ (= (* (EXP x3 x4) x3) (EXP x3 (SUC x4))) (∧ (= (* x3 x3) (EXP x3 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (EXP (* x3 x1) x4) (* (EXP x3 x4) (EXP x1 x4))) (∧ (= (EXP (EXP x3 x0) x4) (EXP x3 (* x0 x4))) (∧ (= (EXP x3 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (* x3 (+ x1 x2)) (+ (* x3 x1) (* x3 x2))) (= (EXP x3 (SUC x4)) (* x3 (EXP x3 x4))))))))));
symbol term10 (x0: El num) (x1: El num) (x2: El num) ≔ (+ (* x1 x0) (* x1 x2));
symbol term7 (x0: El num) (x1: El num) (x2: El num) (x3: El num) ≔ (∧ (= (EXP x2 (NUMERAL (BIT1 _0))) x2) (∧ (= (* x2 (+ x0 x1)) (+ (* x2 x0) (* x2 x1))) (= (EXP x2 (SUC x3)) (* x2 (EXP x2 x3)))));
symbol term1 (x0: El num) (x1: El num) (x2: El num) (x3: El num) (x4: El num) ≔ (∧ (= (* x3 (EXP x3 x4)) (EXP x3 (SUC x4))) (∧ (= (* (EXP x3 x4) x3) (EXP x3 (SUC x4))) (∧ (= (* x3 x3) (EXP x3 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (EXP (* x3 x1) x4) (* (EXP x3 x4) (EXP x1 x4))) (∧ (= (EXP (EXP x3 x0) x4) (EXP x3 (* x0 x4))) (∧ (= (EXP x3 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (* x3 (+ x1 x2)) (+ (* x3 x1) (* x3 x2))) (= (EXP x3 (SUC x4)) (* x3 (EXP x3 x4)))))))))));
symbol term8 (x0: El num) (x1: El num) (x2: El num) (x3: El num) ≔ (∧ (= (* x2 (+ x0 x1)) (+ (* x2 x0) (* x2 x1))) (= (EXP x2 (SUC x3)) (* x2 (EXP x2 x3))));
symbol term5 (x0: El num) (x1: El num) (x2: El num) (x3: El num) (x4: El num) ≔ (∧ (= (EXP (EXP x3 x0) x4) (EXP x3 (* x0 x4))) (∧ (= (EXP x3 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (* x3 (+ x1 x2)) (+ (* x3 x1) (* x3 x2))) (= (EXP x3 (SUC x4)) (* x3 (EXP x3 x4)))))));
symbol term3 (x0: El num) (x1: El num) (x2: El num) (x3: El num) (x4: El num) ≔ (∧ (= (* x3 x3) (EXP x3 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (EXP (* x3 x1) x4) (* (EXP x3 x4) (EXP x1 x4))) (∧ (= (EXP (EXP x3 x0) x4) (EXP x3 (* x0 x4))) (∧ (= (EXP x3 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (* x3 (+ x1 x2)) (+ (* x3 x1) (* x3 x2))) (= (EXP x3 (SUC x4)) (* x3 (EXP x3 x4)))))))));
symbol term6 (x0: El num) (x1: El num) (x2: El num) (x3: El num) ≔ (∧ (= (EXP x2 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x2 (NUMERAL (BIT1 _0))) x2) (∧ (= (* x2 (+ x0 x1)) (+ (* x2 x0) (* x2 x1))) (= (EXP x2 (SUC x3)) (* x2 (EXP x2 x3))))));
symbol term0 (x0: El num) (x1: El num) (x2: El num) (x3: El num) (x4: El num) ≔ (∧ (= (* (EXP x3 x0) (EXP x3 x4)) (EXP x3 (+ x0 x4))) (∧ (= (* x3 (EXP x3 x4)) (EXP x3 (SUC x4))) (∧ (= (* (EXP x3 x4) x3) (EXP x3 (SUC x4))) (∧ (= (* x3 x3) (EXP x3 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (EXP (* x3 x1) x4) (* (EXP x3 x4) (EXP x1 x4))) (∧ (= (EXP (EXP x3 x0) x4) (EXP x3 (* x0 x4))) (∧ (= (EXP x3 (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∧ (= (EXP x3 (NUMERAL (BIT1 _0))) x3) (∧ (= (* x3 (+ x1 x2)) (+ (* x3 x1) (* x3 x2))) (= (EXP x3 (SUC x4)) (* x3 (EXP x3 x4))))))))))));
symbol term9 (x0: El num) (x1: El num) (x2: El num) ≔ (* x0 (+ x1 x2));
