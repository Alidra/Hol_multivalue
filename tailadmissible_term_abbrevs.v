Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1402 a0, forall y1 : a2 -> a0, forall y2 : type560 a0 a1 a2, forall y3 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 y0 y2 y1 y3) = (exists y4 : type560 a0 a1 a2, exists y5 : type557 a0 a1 a2, exists y6 : type558 a0 a1 a2, (forall y7 : a0 -> a1, forall y8 : a2, forall y9 : a0, ((y4 y7 y8) /\ (y0 y9 (y5 y7 y8))) -> y0 y9 (y1 y8)) /\ ((forall y7 : a0 -> a1, forall y8 : a0 -> a1, forall y9 : a2, (forall y10 : a0, (y0 y10 (y1 y9)) -> (y7 y10) = (y8 y10)) -> ((y4 y7 y9) = (y4 y8 y9)) /\ (((y5 y7 y9) = (y5 y8 y9)) /\ ((y6 y7 y9) = (y6 y8 y9)))) /\ (forall y7 : a0 -> a1, forall y8 : a2, (y2 y7 y8) -> (y3 y7 y8) = (@COND a1 (y4 y7 y8) (y7 (y5 y7 y8)) (y6 y7 y8))))).
Definition term18 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := forall y0 : a2 -> a0, forall y1 : type560 a0 a1 a2, forall y2 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 y1 y0 y2) = (exists y3 : type560 a0 a1 a2, exists y4 : type557 a0 a1 a2, exists y5 : type558 a0 a1 a2, (forall y6 : a0 -> a1, forall y7 : a2, forall y8 : a0, ((y3 y6 y7) /\ (x0 y8 (y4 y6 y7))) -> x0 y8 (y0 y7)) /\ ((forall y6 : a0 -> a1, forall y7 : a0 -> a1, forall y8 : a2, (forall y9 : a0, (x0 y9 (y0 y8)) -> (y6 y9) = (y7 y9)) -> ((y3 y6 y8) = (y3 y7 y8)) /\ (((y4 y6 y8) = (y4 y7 y8)) /\ ((y5 y6 y8) = (y5 y7 y8)))) /\ (forall y6 : a0 -> a1, forall y7 : a2, (y1 y6 y7) -> (y2 y6 y7) = (@COND a1 (y3 y6 y7) (y6 (y4 y6 y7)) (y5 y6 y7))))).
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type1402 a0, forall y1 : type560 a0 a1 a2, forall y2 : a2 -> a0, forall y3 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 y0 y1 y2 y3) = (exists y4 : type560 a0 a1 a2, exists y5 : type557 a0 a1 a2, exists y6 : type558 a0 a1 a2, (forall y7 : a0 -> a1, forall y8 : a2, forall y9 : a0, ((y4 y7 y8) /\ (y0 y9 (y5 y7 y8))) -> y0 y9 (y2 y8)) /\ ((forall y7 : a0 -> a1, forall y8 : a0 -> a1, forall y9 : a2, (forall y10 : a0, (y0 y10 (y2 y9)) -> (y7 y10) = (y8 y10)) -> ((y4 y7 y9) = (y4 y8 y9)) /\ (((y5 y7 y9) = (y5 y8 y9)) /\ ((y6 y7 y9) = (y6 y8 y9)))) /\ (forall y7 : a0 -> a1, forall y8 : a2, (y1 y7 y8) -> (y3 y7 y8) = (@COND a1 (y4 y7 y8) (y7 (y5 y7 y8)) (y6 y7 y8))))).
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := (fun y0 : type1402 a0 => forall y1 : type560 a0 a1 a2, forall y2 : a2 -> a0, forall y3 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 y0 y1 y2 y3) = (exists y4 : type560 a0 a1 a2, exists y5 : type557 a0 a1 a2, exists y6 : type558 a0 a1 a2, (forall y7 : a0 -> a1, forall y8 : a2, forall y9 : a0, ((y4 y7 y8) /\ (y0 y9 (y5 y7 y8))) -> y0 y9 (y2 y8)) /\ ((forall y7 : a0 -> a1, forall y8 : a0 -> a1, forall y9 : a2, (forall y10 : a0, (y0 y10 (y2 y9)) -> (y7 y10) = (y8 y10)) -> ((y4 y7 y9) = (y4 y8 y9)) /\ (((y5 y7 y9) = (y5 y8 y9)) /\ ((y6 y7 y9) = (y6 y8 y9)))) /\ (forall y7 : a0 -> a1, forall y8 : a2, (y1 y7 y8) -> (y3 y7 y8) = (@COND a1 (y4 y7 y8) (y7 (y5 y7 y8)) (y6 y7 y8)))))) x0.
Definition term11 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := forall y0 : type560 a0 a1 a2, forall y1 : a2 -> a0, forall y2 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 y0 y1 y2) = (exists y3 : type560 a0 a1 a2, exists y4 : type557 a0 a1 a2, exists y5 : type558 a0 a1 a2, (forall y6 : a0 -> a1, forall y7 : a2, forall y8 : a0, ((y3 y6 y7) /\ (x0 y8 (y4 y6 y7))) -> x0 y8 (y1 y7)) /\ ((forall y6 : a0 -> a1, forall y7 : a0 -> a1, forall y8 : a2, (forall y9 : a0, (x0 y9 (y1 y8)) -> (y6 y9) = (y7 y9)) -> ((y3 y6 y8) = (y3 y7 y8)) /\ (((y4 y6 y8) = (y4 y7 y8)) /\ ((y5 y6 y8) = (y5 y7 y8)))) /\ (forall y6 : a0 -> a1, forall y7 : a2, (y0 y6 y7) -> (y2 y6 y7) = (@COND a1 (y3 y6 y7) (y6 (y4 y6 y7)) (y5 y6 y7))))).
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type560 a0 a1 a2) (x3 : type558 a0 a1 a2) := exists y0 : type560 a0 a1 a2, exists y1 : type557 a0 a1 a2, exists y2 : type558 a0 a1 a2, (forall y3 : a0 -> a1, forall y4 : a2, forall y5 : a0, ((y0 y3 y4) /\ (x0 y5 (y1 y3 y4))) -> x0 y5 (x1 y4)) /\ ((forall y3 : a0 -> a1, forall y4 : a0 -> a1, forall y5 : a2, (forall y6 : a0, (x0 y6 (x1 y5)) -> (y3 y6) = (y4 y6)) -> ((y0 y3 y5) = (y0 y4 y5)) /\ (((y1 y3 y5) = (y1 y4 y5)) /\ ((y2 y3 y5) = (y2 y4 y5)))) /\ (forall y3 : a0 -> a1, forall y4 : a2, (x2 y3 y4) -> (x3 y3 y4) = (@COND a1 (y0 y3 y4) (y3 (y1 y3 y4)) (y2 y3 y4)))).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := fun y0 : type560 a0 a1 a2 => fun y1 : a2 -> a0 => fun y2 : type558 a0 a1 a2 => exists y3 : type560 a0 a1 a2, exists y4 : type557 a0 a1 a2, exists y5 : type558 a0 a1 a2, (forall y6 : a0 -> a1, forall y7 : a2, forall y8 : a0, ((y3 y6 y7) /\ (x0 y8 (y4 y6 y7))) -> x0 y8 (y1 y7)) /\ ((forall y6 : a0 -> a1, forall y7 : a0 -> a1, forall y8 : a2, (forall y9 : a0, (x0 y9 (y1 y8)) -> (y6 y9) = (y7 y9)) -> ((y3 y6 y8) = (y3 y7 y8)) /\ (((y4 y6 y8) = (y4 y7 y8)) /\ ((y5 y6 y8) = (y5 y7 y8)))) /\ (forall y6 : a0 -> a1, forall y7 : a2, (y0 y6 y7) -> (y2 y6 y7) = (@COND a1 (y3 y6 y7) (y6 (y4 y6 y7)) (y5 y6 y7)))).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := (fun y0 : type1402 a0 => fun y1 : type560 a0 a1 a2 => fun y2 : a2 -> a0 => fun y3 : type558 a0 a1 a2 => exists y4 : type560 a0 a1 a2, exists y5 : type557 a0 a1 a2, exists y6 : type558 a0 a1 a2, (forall y7 : a0 -> a1, forall y8 : a2, forall y9 : a0, ((y4 y7 y8) /\ (y0 y9 (y5 y7 y8))) -> y0 y9 (y2 y8)) /\ ((forall y7 : a0 -> a1, forall y8 : a0 -> a1, forall y9 : a2, (forall y10 : a0, (y0 y10 (y2 y9)) -> (y7 y10) = (y8 y10)) -> ((y4 y7 y9) = (y4 y8 y9)) /\ (((y5 y7 y9) = (y5 y8 y9)) /\ ((y6 y7 y9) = (y6 y8 y9)))) /\ (forall y7 : a0 -> a1, forall y8 : a2, (y1 y7 y8) -> (y3 y7 y8) = (@COND a1 (y4 y7 y8) (y7 (y5 y7 y8)) (y6 y7 y8))))) x0.
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := (fun y0 : a2 -> a0 => forall y1 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 x1 y0 y1) = (exists y2 : type560 a0 a1 a2, exists y3 : type557 a0 a1 a2, exists y4 : type558 a0 a1 a2, (forall y5 : a0 -> a1, forall y6 : a2, forall y7 : a0, ((y2 y5 y6) /\ (x0 y7 (y3 y5 y6))) -> x0 y7 (y0 y6)) /\ ((forall y5 : a0 -> a1, forall y6 : a0 -> a1, forall y7 : a2, (forall y8 : a0, (x0 y8 (y0 y7)) -> (y5 y8) = (y6 y8)) -> ((y2 y5 y7) = (y2 y6 y7)) /\ (((y3 y5 y7) = (y3 y6 y7)) /\ ((y4 y5 y7) = (y4 y6 y7)))) /\ (forall y5 : a0 -> a1, forall y6 : a2, (x1 y5 y6) -> (y1 y5 y6) = (@COND a1 (y2 y5 y6) (y5 (y3 y5 y6)) (y4 y5 y6)))))) x2.
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := (fun y0 : a2 -> a0 => fun y1 : type558 a0 a1 a2 => exists y2 : type560 a0 a1 a2, exists y3 : type557 a0 a1 a2, exists y4 : type558 a0 a1 a2, (forall y5 : a0 -> a1, forall y6 : a2, forall y7 : a0, ((y2 y5 y6) /\ (x0 y7 (y3 y5 y6))) -> x0 y7 (y0 y6)) /\ ((forall y5 : a0 -> a1, forall y6 : a0 -> a1, forall y7 : a2, (forall y8 : a0, (x0 y8 (y0 y7)) -> (y5 y8) = (y6 y8)) -> ((y2 y5 y7) = (y2 y6 y7)) /\ (((y3 y5 y7) = (y3 y6 y7)) /\ ((y4 y5 y7) = (y4 y6 y7)))) /\ (forall y5 : a0 -> a1, forall y6 : a2, (x1 y5 y6) -> (y1 y5 y6) = (@COND a1 (y2 y5 y6) (y5 (y3 y5 y6)) (y4 y5 y6))))) x2.
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := (fun y0 : type560 a0 a1 a2 => fun y1 : a2 -> a0 => fun y2 : type558 a0 a1 a2 => exists y3 : type560 a0 a1 a2, exists y4 : type557 a0 a1 a2, exists y5 : type558 a0 a1 a2, (forall y6 : a0 -> a1, forall y7 : a2, forall y8 : a0, ((y3 y6 y7) /\ (x0 y8 (y4 y6 y7))) -> x0 y8 (y1 y7)) /\ ((forall y6 : a0 -> a1, forall y7 : a0 -> a1, forall y8 : a2, (forall y9 : a0, (x0 y9 (y1 y8)) -> (y6 y9) = (y7 y9)) -> ((y3 y6 y8) = (y3 y7 y8)) /\ (((y4 y6 y8) = (y4 y7 y8)) /\ ((y5 y6 y8) = (y5 y7 y8)))) /\ (forall y6 : a0 -> a1, forall y7 : a2, (y0 y6 y7) -> (y2 y6 y7) = (@COND a1 (y3 y6 y7) (y6 (y4 y6 y7)) (y5 y6 y7))))) x1.
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type560 a0 a1 a2) (x3 : type558 a0 a1 a2) := (fun y0 : type558 a0 a1 a2 => exists y1 : type560 a0 a1 a2, exists y2 : type557 a0 a1 a2, exists y3 : type558 a0 a1 a2, (forall y4 : a0 -> a1, forall y5 : a2, forall y6 : a0, ((y1 y4 y5) /\ (x0 y6 (y2 y4 y5))) -> x0 y6 (x1 y5)) /\ ((forall y4 : a0 -> a1, forall y5 : a0 -> a1, forall y6 : a2, (forall y7 : a0, (x0 y7 (x1 y6)) -> (y4 y7) = (y5 y7)) -> ((y1 y4 y6) = (y1 y5 y6)) /\ (((y2 y4 y6) = (y2 y5 y6)) /\ ((y3 y4 y6) = (y3 y5 y6)))) /\ (forall y4 : a0 -> a1, forall y5 : a2, (x2 y4 y5) -> (y0 y4 y5) = (@COND a1 (y1 y4 y5) (y4 (y2 y4 y5)) (y3 y4 y5))))) x3.
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := (fun y0 : type560 a0 a1 a2 => forall y1 : a2 -> a0, forall y2 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 y0 y1 y2) = (exists y3 : type560 a0 a1 a2, exists y4 : type557 a0 a1 a2, exists y5 : type558 a0 a1 a2, (forall y6 : a0 -> a1, forall y7 : a2, forall y8 : a0, ((y3 y6 y7) /\ (x0 y8 (y4 y6 y7))) -> x0 y8 (y1 y7)) /\ ((forall y6 : a0 -> a1, forall y7 : a0 -> a1, forall y8 : a2, (forall y9 : a0, (x0 y9 (y1 y8)) -> (y6 y9) = (y7 y9)) -> ((y3 y6 y8) = (y3 y7 y8)) /\ (((y4 y6 y8) = (y4 y7 y8)) /\ ((y5 y6 y8) = (y5 y7 y8)))) /\ (forall y6 : a0 -> a1, forall y7 : a2, (y0 y6 y7) -> (y2 y6 y7) = (@COND a1 (y3 y6 y7) (y6 (y4 y6 y7)) (y5 y6 y7)))))) x1.
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := forall y0 : a2 -> a0, forall y1 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 x1 y0 y1) = (exists y2 : type560 a0 a1 a2, exists y3 : type557 a0 a1 a2, exists y4 : type558 a0 a1 a2, (forall y5 : a0 -> a1, forall y6 : a2, forall y7 : a0, ((y2 y5 y6) /\ (x0 y7 (y3 y5 y6))) -> x0 y7 (y0 y6)) /\ ((forall y5 : a0 -> a1, forall y6 : a0 -> a1, forall y7 : a2, (forall y8 : a0, (x0 y8 (y0 y7)) -> (y5 y8) = (y6 y8)) -> ((y2 y5 y7) = (y2 y6 y7)) /\ (((y3 y5 y7) = (y3 y6 y7)) /\ ((y4 y5 y7) = (y4 y6 y7)))) /\ (forall y5 : a0 -> a1, forall y6 : a2, (x1 y5 y6) -> (y1 y5 y6) = (@COND a1 (y2 y5 y6) (y5 (y3 y5 y6)) (y4 y5 y6))))).
Definition term17 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) := forall y0 : type560 a0 a1 a2, forall y1 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 y0 x1 y1) = (exists y2 : type560 a0 a1 a2, exists y3 : type557 a0 a1 a2, exists y4 : type558 a0 a1 a2, (forall y5 : a0 -> a1, forall y6 : a2, forall y7 : a0, ((y2 y5 y6) /\ (x0 y7 (y3 y5 y6))) -> x0 y7 (x1 y6)) /\ ((forall y5 : a0 -> a1, forall y6 : a0 -> a1, forall y7 : a2, (forall y8 : a0, (x0 y8 (x1 y7)) -> (y5 y8) = (y6 y8)) -> ((y2 y5 y7) = (y2 y6 y7)) /\ (((y3 y5 y7) = (y3 y6 y7)) /\ ((y4 y5 y7) = (y4 y6 y7)))) /\ (forall y5 : a0 -> a1, forall y6 : a2, (y0 y5 y6) -> (y1 y5 y6) = (@COND a1 (y2 y5 y6) (y5 (y3 y5 y6)) (y4 y5 y6))))).
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type560 a0 a1 a2) := forall y0 : type558 a0 a1 a2, (@tailadmissible a0 a1 a2 x0 x2 x1 y0) = (exists y1 : type560 a0 a1 a2, exists y2 : type557 a0 a1 a2, exists y3 : type558 a0 a1 a2, (forall y4 : a0 -> a1, forall y5 : a2, forall y6 : a0, ((y1 y4 y5) /\ (x0 y6 (y2 y4 y5))) -> x0 y6 (x1 y5)) /\ ((forall y4 : a0 -> a1, forall y5 : a0 -> a1, forall y6 : a2, (forall y7 : a0, (x0 y7 (x1 y6)) -> (y4 y7) = (y5 y7)) -> ((y1 y4 y6) = (y1 y5 y6)) /\ (((y2 y4 y6) = (y2 y5 y6)) /\ ((y3 y4 y6) = (y3 y5 y6)))) /\ (forall y4 : a0 -> a1, forall y5 : a2, (x2 y4 y5) -> (y0 y4 y5) = (@COND a1 (y1 y4 y5) (y4 (y2 y4 y5)) (y3 y4 y5))))).
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := fun y0 : a2 -> a0 => fun y1 : type558 a0 a1 a2 => exists y2 : type560 a0 a1 a2, exists y3 : type557 a0 a1 a2, exists y4 : type558 a0 a1 a2, (forall y5 : a0 -> a1, forall y6 : a2, forall y7 : a0, ((y2 y5 y6) /\ (x0 y7 (y3 y5 y6))) -> x0 y7 (y0 y6)) /\ ((forall y5 : a0 -> a1, forall y6 : a0 -> a1, forall y7 : a2, (forall y8 : a0, (x0 y8 (y0 y7)) -> (y5 y8) = (y6 y8)) -> ((y2 y5 y7) = (y2 y6 y7)) /\ (((y3 y5 y7) = (y3 y6 y7)) /\ ((y4 y5 y7) = (y4 y6 y7)))) /\ (forall y5 : a0 -> a1, forall y6 : a2, (x1 y5 y6) -> (y1 y5 y6) = (@COND a1 (y2 y5 y6) (y5 (y3 y5 y6)) (y4 y5 y6)))).
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type560 a0 a1 a2) (x3 : type558 a0 a1 a2) := (fun y0 : type558 a0 a1 a2 => (@tailadmissible a0 a1 a2 x0 x2 x1 y0) = (exists y1 : type560 a0 a1 a2, exists y2 : type557 a0 a1 a2, exists y3 : type558 a0 a1 a2, (forall y4 : a0 -> a1, forall y5 : a2, forall y6 : a0, ((y1 y4 y5) /\ (x0 y6 (y2 y4 y5))) -> x0 y6 (x1 y5)) /\ ((forall y4 : a0 -> a1, forall y5 : a0 -> a1, forall y6 : a2, (forall y7 : a0, (x0 y7 (x1 y6)) -> (y4 y7) = (y5 y7)) -> ((y1 y4 y6) = (y1 y5 y6)) /\ (((y2 y4 y6) = (y2 y5 y6)) /\ ((y3 y4 y6) = (y3 y5 y6)))) /\ (forall y4 : a0 -> a1, forall y5 : a2, (x2 y4 y5) -> (y0 y4 y5) = (@COND a1 (y1 y4 y5) (y4 (y2 y4 y5)) (y3 y4 y5)))))) x3.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : type1402 a0 => fun y1 : type560 a0 a1 a2 => fun y2 : a2 -> a0 => fun y3 : type558 a0 a1 a2 => exists y4 : type560 a0 a1 a2, exists y5 : type557 a0 a1 a2, exists y6 : type558 a0 a1 a2, (forall y7 : a0 -> a1, forall y8 : a2, forall y9 : a0, ((y4 y7 y8) /\ (y0 y9 (y5 y7 y8))) -> y0 y9 (y2 y8)) /\ ((forall y7 : a0 -> a1, forall y8 : a0 -> a1, forall y9 : a2, (forall y10 : a0, (y0 y10 (y2 y9)) -> (y7 y10) = (y8 y10)) -> ((y4 y7 y9) = (y4 y8 y9)) /\ (((y5 y7 y9) = (y5 y8 y9)) /\ ((y6 y7 y9) = (y6 y8 y9)))) /\ (forall y7 : a0 -> a1, forall y8 : a2, (y1 y7 y8) -> (y3 y7 y8) = (@COND a1 (y4 y7 y8) (y7 (y5 y7 y8)) (y6 y7 y8)))).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type560 a0 a1 a2) := fun y0 : type558 a0 a1 a2 => exists y1 : type560 a0 a1 a2, exists y2 : type557 a0 a1 a2, exists y3 : type558 a0 a1 a2, (forall y4 : a0 -> a1, forall y5 : a2, forall y6 : a0, ((y1 y4 y5) /\ (x0 y6 (y2 y4 y5))) -> x0 y6 (x1 y5)) /\ ((forall y4 : a0 -> a1, forall y5 : a0 -> a1, forall y6 : a2, (forall y7 : a0, (x0 y7 (x1 y6)) -> (y4 y7) = (y5 y7)) -> ((y1 y4 y6) = (y1 y5 y6)) /\ (((y2 y4 y6) = (y2 y5 y6)) /\ ((y3 y4 y6) = (y3 y5 y6)))) /\ (forall y4 : a0 -> a1, forall y5 : a2, (x2 y4 y5) -> (y0 y4 y5) = (@COND a1 (y1 y4 y5) (y4 (y2 y4 y5)) (y3 y4 y5)))).
