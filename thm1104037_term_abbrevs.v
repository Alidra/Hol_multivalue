Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term51 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : list a0, forall y3 : list a1, (@ALL2 a0 a1 y1 (@cons a0 y0 y2) y3) = (@COND Prop (y3 = (@nil a1)) False ((y1 y0 (@hd a1 y3)) /\ (@ALL2 a0 a1 y1 y2 (@tl a1 y3)))).
Definition term50 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : list a0, forall y3 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y4 : type1285 a0 a1 => forall y5 : type1673, (forall y6 : type1413 a0 a1, forall y7 : list a1, (y4 y5 y6 (@nil a0) y7) = (y7 = (@nil a1))) /\ (forall y6 : a0, forall y7 : type1413 a0 a1, forall y8 : list a0, forall y9 : list a1, (y4 y5 y7 (@cons a0 y6 y8) y9) = (@COND Prop (y9 = (@nil a1)) False ((y7 y6 (@hd a1 y9)) /\ (y4 y5 y7 y8 (@tl a1 y9)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 (@cons a0 y0 y2) y3) = (@COND Prop (y3 = (@nil a1)) False ((y1 y0 (@hd a1 y3)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y4 : type1285 a0 a1 => forall y5 : type1673, (forall y6 : type1413 a0 a1, forall y7 : list a1, (y4 y5 y6 (@nil a0) y7) = (y7 = (@nil a1))) /\ (forall y6 : a0, forall y7 : type1413 a0 a1, forall y8 : list a0, forall y9 : list a1, (y4 y5 y7 (@cons a0 y6 y8) y9) = (@COND Prop (y9 = (@nil a1)) False ((y7 y6 (@hd a1 y9)) /\ (y4 y5 y7 y8 (@tl a1 y9)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 y2 (@tl a1 y3)))).
Definition term10 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : list a1) := @eq Prop (@ALL2 a0 a1 x0 (@nil a0) x1).
Definition term27 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : list a0) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 x1.
Definition term25 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a0) (x3 : list a1) := @eq Prop (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@cons a0 x1 x2) x3).
Definition term39 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) := forall y0 : list a1, (@ALL2 a0 a1 x1 (@cons a0 x0 x2) y0) = (@COND Prop (y0 = (@nil a1)) False ((x1 x0 (@hd a1 y0)) /\ (@ALL2 a0 a1 x1 x2 (@tl a1 y0)))).
Definition term38 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) := forall y0 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y1 : type1285 a0 a1 => forall y2 : type1673, (forall y3 : type1413 a0 a1, forall y4 : list a1, (y1 y2 y3 (@nil a0) y4) = (y4 = (@nil a1))) /\ (forall y3 : a0, forall y4 : type1413 a0 a1, forall y5 : list a0, forall y6 : list a1, (y1 y2 y4 (@cons a0 y3 y5) y6) = (@COND Prop (y6 = (@nil a1)) False ((y4 y3 (@hd a1 y6)) /\ (y1 y2 y4 y5 (@tl a1 y6)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a0 x0 x2) y0) = (@COND Prop (y0 = (@nil a1)) False ((x1 x0 (@hd a1 y0)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y1 : type1285 a0 a1 => forall y2 : type1673, (forall y3 : type1413 a0 a1, forall y4 : list a1, (y1 y2 y3 (@nil a0) y4) = (y4 = (@nil a1))) /\ (forall y3 : a0, forall y4 : type1413 a0 a1, forall y5 : list a0, forall y6 : list a1, (y1 y2 y4 (@cons a0 y3 y5) y6) = (@COND Prop (y6 = (@nil a1)) False ((y4 y3 (@hd a1 y6)) /\ (y1 y2 y4 y5 (@tl a1 y6)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a1 y0)))).
Definition term26 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a0) (x3 : list a1) := @eq Prop (@ALL2 a0 a1 x0 (@cons a0 x1 x2) x3).
Definition term37 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) := fun y0 : list a1 => (@ALL2 a0 a1 x1 (@cons a0 x0 x2) y0) = (@COND Prop (y0 = (@nil a1)) False ((x1 x0 (@hd a1 y0)) /\ (@ALL2 a0 a1 x1 x2 (@tl a1 y0)))).
Definition term5 (a0 : Type') (a1 : Type') := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))).
Definition term47 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : type1413 a0 a1, forall y1 : list a0, forall y2 : list a1, (@ALL2 a0 a1 y0 (@cons a0 x0 y1) y2) = (@COND Prop (y2 = (@nil a1)) False ((y0 x0 (@hd a1 y2)) /\ (@ALL2 a0 a1 y0 y1 (@tl a1 y2)))).
Definition term46 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : type1413 a0 a1, forall y1 : list a0, forall y2 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y3 : type1285 a0 a1 => forall y4 : type1673, (forall y5 : type1413 a0 a1, forall y6 : list a1, (y3 y4 y5 (@nil a0) y6) = (y6 = (@nil a1))) /\ (forall y5 : a0, forall y6 : type1413 a0 a1, forall y7 : list a0, forall y8 : list a1, (y3 y4 y6 (@cons a0 y5 y7) y8) = (@COND Prop (y8 = (@nil a1)) False ((y6 y5 (@hd a1 y8)) /\ (y3 y4 y6 y7 (@tl a1 y8)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@cons a0 x0 y1) y2) = (@COND Prop (y2 = (@nil a1)) False ((y0 x0 (@hd a1 y2)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y3 : type1285 a0 a1 => forall y4 : type1673, (forall y5 : type1413 a0 a1, forall y6 : list a1, (y3 y4 y5 (@nil a0) y6) = (y6 = (@nil a1))) /\ (forall y5 : a0, forall y6 : type1413 a0 a1, forall y7 : list a0, forall y8 : list a1, (y3 y4 y6 (@cons a0 y5 y7) y8) = (@COND Prop (y8 = (@nil a1)) False ((y6 y5 (@hd a1 y8)) /\ (y3 y4 y6 y7 (@tl a1 y8)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 y1 (@tl a1 y2)))).
Definition term43 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) := forall y0 : list a0, forall y1 : list a1, (@ALL2 a0 a1 x1 (@cons a0 x0 y0) y1) = (@COND Prop (y1 = (@nil a1)) False ((x1 x0 (@hd a1 y1)) /\ (@ALL2 a0 a1 x1 y0 (@tl a1 y1)))).
Definition term42 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) := forall y0 : list a0, forall y1 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a0 x0 y0) y1) = (@COND Prop (y1 = (@nil a1)) False ((x1 x0 (@hd a1 y1)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 y0 (@tl a1 y1)))).
Definition term14 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : list a1, (@ALL2 a0 a1 x0 (@nil a0) y0) = (y0 = (@nil a1)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := forall y0 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y1 : type1285 a0 a1 => forall y2 : type1673, (forall y3 : type1413 a0 a1, forall y4 : list a1, (y1 y2 y3 (@nil a0) y4) = (y4 = (@nil a1))) /\ (forall y3 : a0, forall y4 : type1413 a0 a1, forall y5 : list a0, forall y6 : list a1, (y1 y2 y4 (@cons a0 y3 y5) y6) = (@COND Prop (y6 = (@nil a1)) False ((y4 y3 (@hd a1 y6)) /\ (y1 y2 y4 y5 (@tl a1 y6)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a0) y0) = (y0 = (@nil a1)).
Definition term0 (a0 : Type') (a1 : Type') := (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5))))))).
Definition term49 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : type1413 a0 a1, forall y2 : list a0, forall y3 : list a1, (@ALL2 a0 a1 y1 (@cons a0 y0 y2) y3) = (@COND Prop (y3 = (@nil a1)) False ((y1 y0 (@hd a1 y3)) /\ (@ALL2 a0 a1 y1 y2 (@tl a1 y3)))).
Definition term48 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : type1413 a0 a1, forall y2 : list a0, forall y3 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y4 : type1285 a0 a1 => forall y5 : type1673, (forall y6 : type1413 a0 a1, forall y7 : list a1, (y4 y5 y6 (@nil a0) y7) = (y7 = (@nil a1))) /\ (forall y6 : a0, forall y7 : type1413 a0 a1, forall y8 : list a0, forall y9 : list a1, (y4 y5 y7 (@cons a0 y6 y8) y9) = (@COND Prop (y9 = (@nil a1)) False ((y7 y6 (@hd a1 y9)) /\ (y4 y5 y7 y8 (@tl a1 y9)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 (@cons a0 y0 y2) y3) = (@COND Prop (y3 = (@nil a1)) False ((y1 y0 (@hd a1 y3)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y4 : type1285 a0 a1 => forall y5 : type1673, (forall y6 : type1413 a0 a1, forall y7 : list a1, (y4 y5 y6 (@nil a0) y7) = (y7 = (@nil a1))) /\ (forall y6 : a0, forall y7 : type1413 a0 a1, forall y8 : list a0, forall y9 : list a1, (y4 y5 y7 (@cons a0 y6 y8) y9) = (@COND Prop (y9 = (@nil a1)) False ((y7 y6 (@hd a1 y9)) /\ (y4 y5 y7 y8 (@tl a1 y9)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 y2 (@tl a1 y3)))).
Definition term1 (a0 : Type') (a1 : Type') := forall y0 : type1673, (forall y1 : type1413 a0 a1, forall y2 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y3 : type1285 a0 a1 => forall y4 : type1673, (forall y5 : type1413 a0 a1, forall y6 : list a1, (y3 y4 y5 (@nil a0) y6) = (y6 = (@nil a1))) /\ (forall y5 : a0, forall y6 : type1413 a0 a1, forall y7 : list a0, forall y8 : list a1, (y3 y4 y6 (@cons a0 y5 y7) y8) = (@COND Prop (y8 = (@nil a1)) False ((y6 y5 (@hd a1 y8)) /\ (y3 y4 y6 y7 (@tl a1 y8)))))) y0 y1 (@nil a0) y2) = (y2 = (@nil a1))) /\ (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : list a0, forall y4 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y5 : type1285 a0 a1 => forall y6 : type1673, (forall y7 : type1413 a0 a1, forall y8 : list a1, (y5 y6 y7 (@nil a0) y8) = (y8 = (@nil a1))) /\ (forall y7 : a0, forall y8 : type1413 a0 a1, forall y9 : list a0, forall y10 : list a1, (y5 y6 y8 (@cons a0 y7 y9) y10) = (@COND Prop (y10 = (@nil a1)) False ((y8 y7 (@hd a1 y10)) /\ (y5 y6 y8 y9 (@tl a1 y10)))))) y0 y2 (@cons a0 y1 y3) y4) = (@COND Prop (y4 = (@nil a1)) False ((y2 y1 (@hd a1 y4)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y5 : type1285 a0 a1 => forall y6 : type1673, (forall y7 : type1413 a0 a1, forall y8 : list a1, (y5 y6 y7 (@nil a0) y8) = (y8 = (@nil a1))) /\ (forall y7 : a0, forall y8 : type1413 a0 a1, forall y9 : list a0, forall y10 : list a1, (y5 y6 y8 (@cons a0 y7 y9) y10) = (@COND Prop (y10 = (@nil a1)) False ((y8 y7 (@hd a1 y10)) /\ (y5 y6 y8 y9 (@tl a1 y10)))))) y0 y2 y3 (@tl a1 y4))))).
Definition term6 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0.
Definition term7 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a0).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) (x3 : list a1) := @COND Prop (x3 = (@nil a1)) False ((x1 x0 (@hd a1 x3)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a1 x3))).
Definition term52 (a0 : Type') (a1 : Type') := (forall y0 : type1413 a0 a1, forall y1 : list a1, (@ALL2 a0 a1 y0 (@nil a0) y1) = (y1 = (@nil a1))) /\ (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : list a0, forall y3 : list a1, (@ALL2 a0 a1 y1 (@cons a0 y0 y2) y3) = (@COND Prop (y3 = (@nil a1)) False ((y1 y0 (@hd a1 y3)) /\ (@ALL2 a0 a1 y1 y2 (@tl a1 y3))))).
Definition term4 (a0 : Type') (a1 : Type') := (forall y0 : type1413 a0 a1, forall y1 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a0) y1) = (y1 = (@nil a1))) /\ (forall y0 : a0, forall y1 : type1413 a0 a1, forall y2 : list a0, forall y3 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y4 : type1285 a0 a1 => forall y5 : type1673, (forall y6 : type1413 a0 a1, forall y7 : list a1, (y4 y5 y6 (@nil a0) y7) = (y7 = (@nil a1))) /\ (forall y6 : a0, forall y7 : type1413 a0 a1, forall y8 : list a0, forall y9 : list a1, (y4 y5 y7 (@cons a0 y6 y8) y9) = (@COND Prop (y9 = (@nil a1)) False ((y7 y6 (@hd a1 y9)) /\ (y4 y5 y7 y8 (@tl a1 y9)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 (@cons a0 y0 y2) y3) = (@COND Prop (y3 = (@nil a1)) False ((y1 y0 (@hd a1 y3)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y4 : type1285 a0 a1 => forall y5 : type1673, (forall y6 : type1413 a0 a1, forall y7 : list a1, (y4 y5 y6 (@nil a0) y7) = (y7 = (@nil a1))) /\ (forall y6 : a0, forall y7 : type1413 a0 a1, forall y8 : list a0, forall y9 : list a1, (y4 y5 y7 (@cons a0 y6 y8) y9) = (@COND Prop (y9 = (@nil a1)) False ((y7 y6 (@hd a1 y9)) /\ (y4 y5 y7 y8 (@tl a1 y9)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y1 y2 (@tl a1 y3))))).
Definition term31 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) (x3 : list a1) := (x1 x0 (@hd a1 x3)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a1 x3)).
Definition term30 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a1) := and (x0 x1 (@hd a1 x2)).
Definition term35 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) (x3 : list a1) := @COND Prop (x3 = (@nil a1)) False ((x1 x0 (@hd a1 x3)) /\ (@ALL2 a0 a1 x1 x2 (@tl a1 x3))).
Definition term32 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) (x3 : list a1) := (x1 x0 (@hd a1 x3)) /\ (@ALL2 a0 a1 x1 x2 (@tl a1 x3)).
Definition term20 (a0 : Type') (a1 : Type') := and (forall y0 : type1413 a0 a1, forall y1 : list a1, (@ALL2 a0 a1 y0 (@nil a0) y1) = (y1 = (@nil a1))).
Definition term19 (a0 : Type') (a1 : Type') := and (forall y0 : type1413 a0 a1, forall y1 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a0) y1) = (y1 = (@nil a1))).
Definition term41 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) := fun y0 : list a0 => forall y1 : list a1, (@ALL2 a0 a1 x1 (@cons a0 x0 y0) y1) = (@COND Prop (y1 = (@nil a1)) False ((x1 x0 (@hd a1 y1)) /\ (@ALL2 a0 a1 x1 y0 (@tl a1 y1)))).
Definition term40 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) := fun y0 : list a0 => forall y1 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a0 x0 y0) y1) = (@COND Prop (y1 = (@nil a1)) False ((x1 x0 (@hd a1 y1)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 y0 (@tl a1 y1)))).
Definition term23 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a0) (x3 : list a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@cons a0 x1 x2) x3.
Definition term28 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : list a0) (x2 : list a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 x1 (@tl a1 x2).
Definition term8 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : list a1) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a0) x1.
Definition term29 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : list a0) (x2 : list a1) := @ALL2 a0 a1 x0 x1 (@tl a1 x2).
Definition term2 (a0 : Type') (a1 : Type') := (fun y0 : type1673 => (forall y1 : type1413 a0 a1, forall y2 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y3 : type1285 a0 a1 => forall y4 : type1673, (forall y5 : type1413 a0 a1, forall y6 : list a1, (y3 y4 y5 (@nil a0) y6) = (y6 = (@nil a1))) /\ (forall y5 : a0, forall y6 : type1413 a0 a1, forall y7 : list a0, forall y8 : list a1, (y3 y4 y6 (@cons a0 y5 y7) y8) = (@COND Prop (y8 = (@nil a1)) False ((y6 y5 (@hd a1 y8)) /\ (y3 y4 y6 y7 (@tl a1 y8)))))) y0 y1 (@nil a0) y2) = (y2 = (@nil a1))) /\ (forall y1 : a0, forall y2 : type1413 a0 a1, forall y3 : list a0, forall y4 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y5 : type1285 a0 a1 => forall y6 : type1673, (forall y7 : type1413 a0 a1, forall y8 : list a1, (y5 y6 y7 (@nil a0) y8) = (y8 = (@nil a1))) /\ (forall y7 : a0, forall y8 : type1413 a0 a1, forall y9 : list a0, forall y10 : list a1, (y5 y6 y8 (@cons a0 y7 y9) y10) = (@COND Prop (y10 = (@nil a1)) False ((y8 y7 (@hd a1 y10)) /\ (y5 y6 y8 y9 (@tl a1 y10)))))) y0 y2 (@cons a0 y1 y3) y4) = (@COND Prop (y4 = (@nil a1)) False ((y2 y1 (@hd a1 y4)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y5 : type1285 a0 a1 => forall y6 : type1673, (forall y7 : type1413 a0 a1, forall y8 : list a1, (y5 y6 y7 (@nil a0) y8) = (y8 = (@nil a1))) /\ (forall y7 : a0, forall y8 : type1413 a0 a1, forall y9 : list a0, forall y10 : list a1, (y5 y6 y8 (@cons a0 y7 y9) y10) = (@COND Prop (y10 = (@nil a1)) False ((y8 y7 (@hd a1 y10)) /\ (y5 y6 y8 y9 (@tl a1 y10)))))) y0 y2 y3 (@tl a1 y4)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))).
Definition term18 (a0 : Type') (a1 : Type') := forall y0 : type1413 a0 a1, forall y1 : list a1, (@ALL2 a0 a1 y0 (@nil a0) y1) = (y1 = (@nil a1)).
Definition term17 (a0 : Type') (a1 : Type') := forall y0 : type1413 a0 a1, forall y1 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a0) y1) = (y1 = (@nil a1)).
Definition term45 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : type1413 a0 a1 => forall y1 : list a0, forall y2 : list a1, (@ALL2 a0 a1 y0 (@cons a0 x0 y1) y2) = (@COND Prop (y2 = (@nil a1)) False ((y0 x0 (@hd a1 y2)) /\ (@ALL2 a0 a1 y0 y1 (@tl a1 y2)))).
Definition term44 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : type1413 a0 a1 => forall y1 : list a0, forall y2 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y3 : type1285 a0 a1 => forall y4 : type1673, (forall y5 : type1413 a0 a1, forall y6 : list a1, (y3 y4 y5 (@nil a0) y6) = (y6 = (@nil a1))) /\ (forall y5 : a0, forall y6 : type1413 a0 a1, forall y7 : list a0, forall y8 : list a1, (y3 y4 y6 (@cons a0 y5 y7) y8) = (@COND Prop (y8 = (@nil a1)) False ((y6 y5 (@hd a1 y8)) /\ (y3 y4 y6 y7 (@tl a1 y8)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@cons a0 x0 y1) y2) = (@COND Prop (y2 = (@nil a1)) False ((y0 x0 (@hd a1 y2)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y3 : type1285 a0 a1 => forall y4 : type1673, (forall y5 : type1413 a0 a1, forall y6 : list a1, (y3 y4 y5 (@nil a0) y6) = (y6 = (@nil a1))) /\ (forall y5 : a0, forall y6 : type1413 a0 a1, forall y7 : list a0, forall y8 : list a1, (y3 y4 y6 (@cons a0 y5 y7) y8) = (@COND Prop (y8 = (@nil a1)) False ((y6 y5 (@hd a1 y8)) /\ (y3 y4 y6 y7 (@tl a1 y8)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 y1 (@tl a1 y2)))).
Definition term16 (a0 : Type') (a1 : Type') := fun y0 : type1413 a0 a1 => forall y1 : list a1, (@ALL2 a0 a1 y0 (@nil a0) y1) = (y1 = (@nil a1)).
Definition term15 (a0 : Type') (a1 : Type') := fun y0 : type1413 a0 a1 => forall y1 : list a1, (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y2 : type1285 a0 a1 => forall y3 : type1673, (forall y4 : type1413 a0 a1, forall y5 : list a1, (y2 y3 y4 (@nil a0) y5) = (y5 = (@nil a1))) /\ (forall y4 : a0, forall y5 : type1413 a0 a1, forall y6 : list a0, forall y7 : list a1, (y2 y3 y5 (@cons a0 y4 y6) y7) = (@COND Prop (y7 = (@nil a1)) False ((y5 y4 (@hd a1 y7)) /\ (y2 y3 y5 y6 (@tl a1 y7)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) y0 (@nil a0) y1) = (y1 = (@nil a1)).
Definition term3 := @pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0))))))))).
Definition term9 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : list a1) := @eq Prop (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a0) x1).
Definition term33 (a0 : Type') (x0 : list a0) := @COND Prop (x0 = (@nil a0)) False.
Definition term12 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := fun y0 : list a1 => (@ALL2 a0 a1 x0 (@nil a0) y0) = (y0 = (@nil a1)).
Definition term11 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) := fun y0 : list a1 => (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y1 : type1285 a0 a1 => forall y2 : type1673, (forall y3 : type1413 a0 a1, forall y4 : list a1, (y1 y2 y3 (@nil a0) y4) = (y4 = (@nil a1))) /\ (forall y3 : a0, forall y4 : type1413 a0 a1, forall y5 : list a0, forall y6 : list a1, (y1 y2 y4 (@cons a0 y3 y5) y6) = (@COND Prop (y6 = (@nil a1)) False ((y4 y3 (@hd a1 y6)) /\ (y1 y2 y4 y5 (@tl a1 y6)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@nil a0) y0) = (y0 = (@nil a1)).
Definition term21 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a0) := @ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y0 : type1285 a0 a1 => forall y1 : type1673, (forall y2 : type1413 a0 a1, forall y3 : list a1, (y0 y1 y2 (@nil a0) y3) = (y3 = (@nil a1))) /\ (forall y2 : a0, forall y3 : type1413 a0 a1, forall y4 : list a0, forall y5 : list a1, (y0 y1 y3 (@cons a0 y2 y4) y5) = (@COND Prop (y5 = (@nil a1)) False ((y3 y2 (@hd a1 y5)) /\ (y0 y1 y3 y4 (@tl a1 y5)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x0 (@cons a0 x1 x2).
Definition term22 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a0) := @ALL2 a0 a1 x0 (@cons a0 x1 x2).
Definition term36 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type1413 a0 a1) (x2 : list a0) := fun y0 : list a1 => (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y1 : type1285 a0 a1 => forall y2 : type1673, (forall y3 : type1413 a0 a1, forall y4 : list a1, (y1 y2 y3 (@nil a0) y4) = (y4 = (@nil a1))) /\ (forall y3 : a0, forall y4 : type1413 a0 a1, forall y5 : list a0, forall y6 : list a1, (y1 y2 y4 (@cons a0 y3 y5) y6) = (@COND Prop (y6 = (@nil a1)) False ((y4 y3 (@hd a1 y6)) /\ (y1 y2 y4 y5 (@tl a1 y6)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 (@cons a0 x0 x2) y0) = (@COND Prop (y0 = (@nil a1)) False ((x1 x0 (@hd a1 y0)) /\ (@ε ((prod nat (prod nat (prod nat nat))) -> (a0 -> a1 -> Prop) -> (list a0) -> (list a1) -> Prop) (fun y1 : type1285 a0 a1 => forall y2 : type1673, (forall y3 : type1413 a0 a1, forall y4 : list a1, (y1 y2 y3 (@nil a0) y4) = (y4 = (@nil a1))) /\ (forall y3 : a0, forall y4 : type1413 a0 a1, forall y5 : list a0, forall y6 : list a1, (y1 y2 y4 (@cons a0 y3 y5) y6) = (@COND Prop (y6 = (@nil a1)) False ((y4 y3 (@hd a1 y6)) /\ (y1 y2 y4 y5 (@tl a1 y6)))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 0)))))))))) x1 x2 (@tl a1 y0)))).
Definition term24 (a0 : Type') (a1 : Type') (x0 : type1413 a0 a1) (x1 : a0) (x2 : list a0) (x3 : list a1) := @ALL2 a0 a1 x0 (@cons a0 x1 x2) x3.
