require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term2 (x0: El bool) ≔ (λ y0 : El num, ((@COND num) x0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y0)) (* (NUMERAL (BIT0 (BIT1 _0))) y0)));
symbol term5 (x0: El bool) ≔ (∀ (λ y0 : El num, (= (NUMSUM x0 y0) ((@COND num) x0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y0)) (* (NUMERAL (BIT0 (BIT1 _0))) y0)))));
symbol term0 ≔ (λ y0 : El bool, (λ y1 : El num, ((@COND num) y0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y1)) (* (NUMERAL (BIT0 (BIT1 _0))) y1))));
symbol term4 (x0: El bool) (x1: El num) ≔ ((@COND num) x0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) x1)) (* (NUMERAL (BIT0 (BIT1 _0))) x1));
symbol term1 (x0: El bool) ≔ ((λ y0 : El bool, (λ y1 : El num, ((@COND num) y0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y1)) (* (NUMERAL (BIT0 (BIT1 _0))) y1)))) x0);
symbol term6 ≔ (∀ (λ y0 : El bool, (∀ (λ y1 : El num, (= (NUMSUM y0 y1) ((@COND num) y0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y1)) (* (NUMERAL (BIT0 (BIT1 _0))) y1)))))));
symbol term3 (x0: El bool) (x1: El num) ≔ ((λ y0 : El num, ((@COND num) x0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y0)) (* (NUMERAL (BIT0 (BIT1 _0))) y0))) x1);
symbol term8 (x0: El bool) (x1: El num) ≔ ((λ y0 : El num, (= (NUMSUM x0 y0) ((@COND num) x0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y0)) (* (NUMERAL (BIT0 (BIT1 _0))) y0)))) x1);
symbol term7 (x0: El bool) ≔ ((λ y0 : El bool, (∀ (λ y1 : El num, (= (NUMSUM y0 y1) ((@COND num) y0 (SUC (* (NUMERAL (BIT0 (BIT1 _0))) y1)) (* (NUMERAL (BIT0 (BIT1 _0))) y1)))))) x0);
