Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import SUPERADMISSIBLE_COND_term_abbrevs.
Require Import AND_FORALL_THM_spec.
Require Import BOOL_CASES_AX_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import IMP_CONJ_spec.
Require Import LEFT_IMP_EXISTS_THM_spec.
Require Import MONO_FORALL_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import RIGHT_IMP_FORALL_THM_spec.
Require Import admissible_spec.
Require Import superadmissible_spec.
Require Import tailadmissible_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm12653_spec.
Require Import thm129_spec.
Require Import thm137_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17500_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm1820_spec.
Require Import thm1821_spec.
Require Import thm1822_spec.
Require Import thm1823_spec.
Require Import thm1832_spec.
Require Import thm18392_spec.
Require Import thm1842_spec.
Require Import thm1843_spec.
Require Import thm1844_spec.
Require Import thm1845_spec.
Require Import thm1855_spec.
Require Import thm1856_spec.
Require Import thm1857_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18958_spec.
Require Import thm18959_spec.
Require Import thm18964_spec.
Require Import thm18965_spec.
Require Import thm18970_spec.
Require Import thm18971_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21735_spec.
Require Import thm21736_spec.
Require Import thm21750_spec.
Require Import thm21761_spec.
Require Import thm7_spec.
Require Import thm7059_spec.
Require Import thm892_spec.
Lemma lem8248081 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term0 A P Q) : term0 A P Q.
Proof. exact (h1). Qed.
Lemma lem8248082 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term1 A P Q) : term1 A P Q.
Proof. exact (h1). Qed.
Lemma lem8248083 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term1 A P Q) (h2 : term0 A P Q) : term2 A P Q.
Proof. exact (@lem8248081 A P Q h2 (@lem8248082 A P Q h1)). Qed.
Lemma lem8248084 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term1 A P Q) : term3 A P Q.
Proof. exact (fun h0 : term0 A P Q => @lem8248083 A P Q h1 h0). Qed.
Lemma lem8248085 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term0 A P Q) : term0 A P Q.
Proof. exact (h1). Qed.
Lemma lem8248086 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term1 A P Q) (h2 : term0 A P Q) : term2 A P Q.
Proof. exact (@lem8248084 A P Q h1 (@lem8248085 A P Q h2)). Qed.
Lemma lem8248087 {A : Type'} (P : A -> Prop) (Q : A -> Prop) (h1 : term0 A P Q) : term0 A P Q.
Proof. exact (fun h0 : term1 A P Q => @lem8248086 A P Q h0 h1). Qed.
Lemma lem8248088 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term4 A P Q.
Proof. exact (fun h0 : term0 A P Q => @lem8248087 A P Q h0). Qed.
Lemma lem8248090 {A : Type'} (P : A -> Prop) : term5 A P.
Proof. exact (@lem5146 A P). Qed.
Lemma lem8248091 {A : Type'} (P : A -> Prop) : (term5 A P) = (term6 A P).
Proof. exact (eq_refl (term5 A P)). Qed.
Lemma lem8248092 {A : Type'} (P : A -> Prop) : term6 A P.
Proof. exact (EQ_MP (@lem8248091 A P) (@lem8248090 A P)). Qed.
Lemma lem8248093 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term7 A P Q.
Proof. exact (@lem8248092 A P Q). Qed.
Lemma lem8248094 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term7 A P Q) = ((term8 A P Q) = (term9 A P Q)).
Proof. exact (eq_refl (term7 A P Q)). Qed.
Lemma lem8248096 (t1 : Prop) : term10 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8248097 (t1 : Prop) : (term10 t1) = (term11 t1).
Proof. exact (eq_refl (term10 t1)). Qed.
Lemma lem8248098 (t1 : Prop) : term11 t1.
Proof. exact (EQ_MP (@lem8248097 t1) (@lem8248096 t1)). Qed.
Lemma lem8248099 (t1 : Prop) (t2 : Prop) : term12 t1 t2.
Proof. exact (@lem8248098 t1 t2). Qed.
Lemma lem8248100 (t1 : Prop) (t2 : Prop) : (term12 t1 t2) = (term13 t1 t2).
Proof. exact (eq_refl (term12 t1 t2)). Qed.
Lemma lem8248101 (t1 : Prop) (t2 : Prop) : term13 t1 t2.
Proof. exact (EQ_MP (@lem8248100 t1 t2) (@lem8248099 t1 t2)). Qed.
Lemma lem8248102 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term14 t1 t2 t3.
Proof. exact (@lem8248101 t1 t2 t3). Qed.
Lemma lem8248103 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term14 t1 t2 t3) = ((term15 t1 t2 t3) = (term16 t1 t2 t3)).
Proof. exact (eq_refl (term14 t1 t2 t3)). Qed.
Lemma lem8248104 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term15 t1 t2 t3) = (term16 t1 t2 t3).
Proof. exact (EQ_MP (@lem8248103 t1 t2 t3) (@lem8248102 t1 t2 t3)). Qed.
Lemma lem8248105 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term16 t1 t2 t3) = (term15 t1 t2 t3).
Proof. exact (SYM (@lem8248104 t1 t2 t3)). Qed.
Lemma lem8248106 (A : Prop) (C : Prop) (B : Prop) (D : Prop) (h1 : term17 A C B D) : term17 A C B D.
Proof. exact (h1). Qed.
Lemma lem8248107 (A : Prop) (B : Prop) (C : Prop) (D : Prop) (h1 : term18 A B C D) : term18 A B C D.
Proof. exact (h1). Qed.
Lemma lem8248108 (A : Prop) (C : Prop) (B : Prop) (D : Prop) (h1 : term18 A B C D) (h2 : term17 A C B D) : term19 A C B D.
Proof. exact (@lem8248106 A C B D h2 (@lem8248107 A B C D h1)). Qed.
Lemma lem8248109 (A : Prop) (B : Prop) (C : Prop) (D : Prop) (h1 : term18 A B C D) : term20 A C B D.
Proof. exact (fun h0 : term17 A C B D => @lem8248108 A C B D h1 h0). Qed.
Lemma lem8248110 (A : Prop) (C : Prop) (B : Prop) (D : Prop) (h1 : term17 A C B D) : term17 A C B D.
Proof. exact (h1). Qed.
Lemma lem8248111 (A : Prop) (C : Prop) (B : Prop) (D : Prop) (h1 : term18 A B C D) (h2 : term17 A C B D) : term19 A C B D.
Proof. exact (@lem8248109 A B C D h1 (@lem8248110 A C B D h2)). Qed.
Lemma lem8248112 (A : Prop) (C : Prop) (B : Prop) (D : Prop) (h1 : term17 A C B D) : term17 A C B D.
Proof. exact (fun h0 : term18 A B C D => @lem8248111 A C B D h0 h1). Qed.
Lemma lem8248113 (A : Prop) (C : Prop) (B : Prop) (D : Prop) : term21 A C B D.
Proof. exact (fun h0 : term17 A C B D => @lem8248112 A C B D h0). Qed.
Lemma lem8248143 (a1 : Prop) : term22 a1.
Proof. exact (@lem9851 a1). Qed.
Lemma lem8248144 (a1 : Prop) : (term22 a1) = (term23 a1).
Proof. exact (eq_refl (term22 a1)). Qed.
Lemma lem8248145 (a1 : Prop) : term23 a1.
Proof. exact (EQ_MP (@lem8248144 a1) (@lem8248143 a1)). Qed.
Lemma lem8248146 (a1 : Prop) (h1 : a1 = True) : a1 = True.
Proof. exact (h1). Qed.
Lemma lem8248147 (a1 : Prop) (h1 : a1 = False) : a1 = False.
Proof. exact (h1). Qed.
Lemma lem8248176 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term24 a2 b1 b2 c1 c2 x) = (term24 a2 b1 b2 c1 c2 x).
Proof. exact (eq_refl (term24 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248177 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = True) : (term25 a2 b1 b2 c1 c2 x a1) = (term26 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248176 a2 b1 b2 c1 c2 x) (@lem8248146 a1 h1)). Qed.
Lemma lem8248178 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term26 a2 b1 b2 c1 c2 x) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl (term26 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248179 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) : (term29 a2 b1 b2 c1 c2 x a1) = (term29 a2 b1 b2 c1 c2 x a1).
Proof. exact (eq_refl (term29 a2 b1 b2 c1 c2 x a1)). Qed.
Lemma lem8248180 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term25 a2 b1 b2 c1 c2 x a1) = (term26 a2 b1 b2 c1 c2 x)) = ((term25 a2 b1 b2 c1 c2 x a1) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248179 a2 b1 b2 c1 c2 x a1) (@lem8248178 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248181 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term25 a2 b1 b2 c1 c2 x a1) = ((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl (term25 a2 b1 b2 c1 c2 x a1)). Qed.
Lemma lem8248182 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248183 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term29 a2 b1 b2 c1 c2 x a1) = (term32 a1 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248182) (@lem8248181 a1 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248184 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x))). Qed.
Lemma lem8248185 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term25 a2 b1 b2 c1 c2 x a1) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x))) = (((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248183 a1 a2 b1 b2 c1 c2 x) (@lem8248184 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248186 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term25 a2 b1 b2 c1 c2 x a1) = (term26 a2 b1 b2 c1 c2 x)) = (((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x))).
Proof. exact (TRANS (@lem8248180 a1 a2 b1 b2 c1 c2 x) (@lem8248185 a1 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248187 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = True) : ((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)).
Proof. exact (EQ_MP (@lem8248186 a1 a2 b1 b2 c1 c2 x) (@lem8248177 a2 b1 b2 c1 c2 x a1 h1)). Qed.
Lemma lem8248188 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = True) : ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)) = ((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248187 a2 b1 b2 c1 c2 x a1 h1)). Qed.
Lemma lem8248189 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term24 a2 b1 b2 c1 c2 x) = (term24 a2 b1 b2 c1 c2 x).
Proof. exact (eq_refl (term24 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248190 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = False) : (term25 a2 b1 b2 c1 c2 x a1) = (term33 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248189 a2 b1 b2 c1 c2 x) (@lem8248147 a1 h1)). Qed.
Lemma lem8248191 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term33 a2 b1 b2 c1 c2 x) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl (term33 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248192 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) : (term29 a2 b1 b2 c1 c2 x a1) = (term29 a2 b1 b2 c1 c2 x a1).
Proof. exact (eq_refl (term29 a2 b1 b2 c1 c2 x a1)). Qed.
Lemma lem8248193 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term25 a2 b1 b2 c1 c2 x a1) = (term33 a2 b1 b2 c1 c2 x)) = ((term25 a2 b1 b2 c1 c2 x a1) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248192 a2 b1 b2 c1 c2 x a1) (@lem8248191 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248194 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term25 a2 b1 b2 c1 c2 x a1) = ((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl (term25 a2 b1 b2 c1 c2 x a1)). Qed.
Lemma lem8248195 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248196 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term29 a2 b1 b2 c1 c2 x a1) = (term32 a1 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248195) (@lem8248194 a1 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248197 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x))). Qed.
Lemma lem8248198 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term25 a2 b1 b2 c1 c2 x a1) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x))) = (((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248196 a1 a2 b1 b2 c1 c2 x) (@lem8248197 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248199 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term25 a2 b1 b2 c1 c2 x a1) = (term33 a2 b1 b2 c1 c2 x)) = (((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x))).
Proof. exact (TRANS (@lem8248193 a1 a2 b1 b2 c1 c2 x) (@lem8248198 a1 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248200 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = False) : ((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)) = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)).
Proof. exact (EQ_MP (@lem8248199 a1 a2 b1 b2 c1 c2 x) (@lem8248190 a2 b1 b2 c1 c2 x a1 h1)). Qed.
Lemma lem8248201 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = False) : ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)) = ((term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248200 a2 b1 b2 c1 c2 x a1 h1)). Qed.
Lemma lem8248207 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248208 (b1 : Prop) (c1 : Prop) : (term36 b1 c1) = (b1 /\ c1).
Proof. exact (@lem8248207 (b1 /\ c1)). Qed.
Lemma lem8248211 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248212 (b1 : Prop) (c1 : Prop) : (term37 b1 c1) = (term38 b1 c1).
Proof. exact (MK_COMB (@lem8248211) (@lem8248208 b1 c1)). Qed.
Lemma lem8248219 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term39 a2 b2 c2 x) = (term39 a2 b2 c2 x).
Proof. exact (eq_refl (term39 a2 b2 c2 x)). Qed.
Lemma lem8248220 (b1 : Prop) (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term27 b1 c1 a2 b2 c2 x) = (term40 b1 c1 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248212 b1 c1) (@lem8248219 a2 b2 c2 x)). Qed.
Lemma lem8248223 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248224 (b1 : Prop) (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term41 b1 c1 a2 b2 c2 x) = (term42 b1 c1 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248223) (@lem8248220 b1 c1 a2 b2 c2 x)). Qed.
Lemma lem8248230 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248231 (a2 : Prop) : (True /\ a2) = a2.
Proof. exact (@lem8248230 a2). Qed.
Lemma lem8248232 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248233 (a2 : Prop) : (term43 a2) = (and a2).
Proof. exact (MK_COMB (@lem8248232) (@lem8248231 a2)). Qed.
Lemma lem8248240 (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term44 b1 b2 c1 c2) = (term44 b1 b2 c1 c2).
Proof. exact (eq_refl (term44 b1 b2 c1 c2)). Qed.
Lemma lem8248241 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term45 a2 b1 b2 c1 c2) = (term46 a2 b1 b2 c1 c2).
Proof. exact (MK_COMB (@lem8248233 a2) (@lem8248240 b1 b2 c1 c2)). Qed.
Lemma lem8248244 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248245 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term47 a2 b1 b2 c1 c2) = (term48 a2 b1 b2 c1 c2).
Proof. exact (MK_COMB (@lem8248244) (@lem8248241 a2 b1 b2 c1 c2)). Qed.
Lemma lem8248246 (x : Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8248247 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term28 a2 b1 b2 c1 c2 x) = (term49 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248245 a2 b1 b2 c1 c2) (@lem8248246 x)). Qed.
Lemma lem8248250 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)) = ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)).
Proof. exact (MK_COMB (@lem8248224 b1 c1 a2 b2 c2 x) (@lem8248247 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248253 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248250 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248254 (b1 : Prop) : term22 b1.
Proof. exact (@lem9851 b1). Qed.
Lemma lem8248255 (b1 : Prop) : (term22 b1) = (term23 b1).
Proof. exact (eq_refl (term22 b1)). Qed.
Lemma lem8248256 (b1 : Prop) : term23 b1.
Proof. exact (EQ_MP (@lem8248255 b1) (@lem8248254 b1)). Qed.
Lemma lem8248257 (b1 : Prop) (h1 : b1 = True) : b1 = True.
Proof. exact (h1). Qed.
Lemma lem8248258 (b1 : Prop) (h1 : b1 = False) : b1 = False.
Proof. exact (h1). Qed.
Lemma lem8248283 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term50 a2 b2 c1 c2 x) = (term50 a2 b2 c1 c2 x).
Proof. exact (eq_refl (term50 a2 b2 c1 c2 x)). Qed.
Lemma lem8248284 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = True) : (term51 a2 b2 c1 c2 x b1) = (term52 a2 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248283 a2 b2 c1 c2 x) (@lem8248257 b1 h1)). Qed.
Lemma lem8248285 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term52 a2 b2 c1 c2 x) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)).
Proof. exact (eq_refl (term52 a2 b2 c1 c2 x)). Qed.
Lemma lem8248286 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) : (term55 a2 b2 c1 c2 x b1) = (term55 a2 b2 c1 c2 x b1).
Proof. exact (eq_refl (term55 a2 b2 c1 c2 x b1)). Qed.
Lemma lem8248287 (b1 : Prop) (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term51 a2 b2 c1 c2 x b1) = (term52 a2 b2 c1 c2 x)) = ((term51 a2 b2 c1 c2 x b1) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248286 a2 b2 c1 c2 x b1) (@lem8248285 a2 b2 c1 c2 x)). Qed.
Lemma lem8248288 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term51 a2 b2 c1 c2 x b1) = ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl (term51 a2 b2 c1 c2 x b1)). Qed.
Lemma lem8248289 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248290 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term55 a2 b2 c1 c2 x b1) = (term56 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248289) (@lem8248288 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248291 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)).
Proof. exact (eq_refl ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x))). Qed.
Lemma lem8248292 (b1 : Prop) (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term51 a2 b2 c1 c2 x b1) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x))) = (((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248290 a2 b1 b2 c1 c2 x) (@lem8248291 a2 b2 c1 c2 x)). Qed.
Lemma lem8248293 (b1 : Prop) (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term51 a2 b2 c1 c2 x b1) = (term52 a2 b2 c1 c2 x)) = (((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x))).
Proof. exact (TRANS (@lem8248287 b1 a2 b2 c1 c2 x) (@lem8248292 b1 a2 b2 c1 c2 x)). Qed.
Lemma lem8248294 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = True) : ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)).
Proof. exact (EQ_MP (@lem8248293 b1 a2 b2 c1 c2 x) (@lem8248284 a2 b2 c1 c2 x b1 h1)). Qed.
Lemma lem8248295 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = True) : ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)) = ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248294 a2 b2 c1 c2 x b1 h1)). Qed.
Lemma lem8248296 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term50 a2 b2 c1 c2 x) = (term50 a2 b2 c1 c2 x).
Proof. exact (eq_refl (term50 a2 b2 c1 c2 x)). Qed.
Lemma lem8248297 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = False) : (term51 a2 b2 c1 c2 x b1) = (term57 a2 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248296 a2 b2 c1 c2 x) (@lem8248258 b1 h1)). Qed.
Lemma lem8248298 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term57 a2 b2 c1 c2 x) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)).
Proof. exact (eq_refl (term57 a2 b2 c1 c2 x)). Qed.
Lemma lem8248299 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) : (term55 a2 b2 c1 c2 x b1) = (term55 a2 b2 c1 c2 x b1).
Proof. exact (eq_refl (term55 a2 b2 c1 c2 x b1)). Qed.
Lemma lem8248300 (b1 : Prop) (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term51 a2 b2 c1 c2 x b1) = (term57 a2 b2 c1 c2 x)) = ((term51 a2 b2 c1 c2 x b1) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248299 a2 b2 c1 c2 x b1) (@lem8248298 a2 b2 c1 c2 x)). Qed.
Lemma lem8248301 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term51 a2 b2 c1 c2 x b1) = ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)).
Proof. exact (eq_refl (term51 a2 b2 c1 c2 x b1)). Qed.
Lemma lem8248302 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248303 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term55 a2 b2 c1 c2 x b1) = (term56 a2 b1 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248302) (@lem8248301 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248304 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)).
Proof. exact (eq_refl ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x))). Qed.
Lemma lem8248305 (b1 : Prop) (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term51 a2 b2 c1 c2 x b1) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x))) = (((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x))).
Proof. exact (MK_COMB (@lem8248303 a2 b1 b2 c1 c2 x) (@lem8248304 a2 b2 c1 c2 x)). Qed.
Lemma lem8248306 (b1 : Prop) (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term51 a2 b2 c1 c2 x b1) = (term57 a2 b2 c1 c2 x)) = (((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x))).
Proof. exact (TRANS (@lem8248300 b1 a2 b2 c1 c2 x) (@lem8248305 b1 a2 b2 c1 c2 x)). Qed.
Lemma lem8248307 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = False) : ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)) = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)).
Proof. exact (EQ_MP (@lem8248306 b1 a2 b2 c1 c2 x) (@lem8248297 a2 b2 c1 c2 x b1 h1)). Qed.
Lemma lem8248308 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = False) : ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)) = ((term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248307 a2 b2 c1 c2 x b1 h1)). Qed.
Lemma lem8248314 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248315 (c1 : Prop) : (True /\ c1) = c1.
Proof. exact (@lem8248314 c1). Qed.
Lemma lem8248316 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248317 (c1 : Prop) : (term60 c1) = (imp c1).
Proof. exact (MK_COMB (@lem8248316) (@lem8248315 c1)). Qed.
Lemma lem8248324 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term39 a2 b2 c2 x) = (term39 a2 b2 c2 x).
Proof. exact (eq_refl (term39 a2 b2 c2 x)). Qed.
Lemma lem8248325 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term53 c1 a2 b2 c2 x) = (term61 c1 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248317 c1) (@lem8248324 a2 b2 c2 x)). Qed.
Lemma lem8248328 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248329 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term62 c1 a2 b2 c2 x) = (term63 c1 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248328) (@lem8248325 c1 a2 b2 c2 x)). Qed.
Lemma lem8248337 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248338 (b2 : Prop) : (True /\ b2) = b2.
Proof. exact (@lem8248337 b2). Qed.
Lemma lem8248339 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248340 (b2 : Prop) : (term43 b2) = (and b2).
Proof. exact (MK_COMB (@lem8248339) (@lem8248338 b2)). Qed.
Lemma lem8248343 (c1 : Prop) (c2 : Prop) : (c1 /\ c2) = (c1 /\ c2).
Proof. exact (eq_refl (c1 /\ c2)). Qed.
Lemma lem8248344 (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term64 b2 c1 c2) = (term65 b2 c1 c2).
Proof. exact (MK_COMB (@lem8248340 b2) (@lem8248343 c1 c2)). Qed.
Lemma lem8248347 (a2 : Prop) : (and a2) = (and a2).
Proof. exact (eq_refl (and a2)). Qed.
Lemma lem8248348 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term66 a2 b2 c1 c2) = (term67 a2 b2 c1 c2).
Proof. exact (MK_COMB (@lem8248347 a2) (@lem8248344 b2 c1 c2)). Qed.
Lemma lem8248351 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248352 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term68 a2 b2 c1 c2) = (term69 a2 b2 c1 c2).
Proof. exact (MK_COMB (@lem8248351) (@lem8248348 a2 b2 c1 c2)). Qed.
Lemma lem8248353 (x : Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8248354 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term54 a2 b2 c1 c2 x) = (term70 a2 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248352 a2 b2 c1 c2) (@lem8248353 x)). Qed.
Lemma lem8248357 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)) = ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)).
Proof. exact (MK_COMB (@lem8248329 c1 a2 b2 c2 x) (@lem8248354 a2 b2 c1 c2 x)). Qed.
Lemma lem8248360 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248357 a2 b2 c1 c2 x)). Qed.
Lemma lem8248361 (c1 : Prop) : term22 c1.
Proof. exact (@lem9851 c1). Qed.
Lemma lem8248362 (c1 : Prop) : (term22 c1) = (term23 c1).
Proof. exact (eq_refl (term22 c1)). Qed.
Lemma lem8248363 (c1 : Prop) : term23 c1.
Proof. exact (EQ_MP (@lem8248362 c1) (@lem8248361 c1)). Qed.
Lemma lem8248364 (c1 : Prop) (h1 : c1 = True) : c1 = True.
Proof. exact (h1). Qed.
Lemma lem8248365 (c1 : Prop) (h1 : c1 = False) : c1 = False.
Proof. exact (h1). Qed.
Lemma lem8248386 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term71 a2 b2 c2 x) = (term71 a2 b2 c2 x).
Proof. exact (eq_refl (term71 a2 b2 c2 x)). Qed.
Lemma lem8248387 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = True) : (term72 a2 b2 c2 x c1) = (term73 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248386 a2 b2 c2 x) (@lem8248364 c1 h1)). Qed.
Lemma lem8248388 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term73 a2 b2 c2 x) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)).
Proof. exact (eq_refl (term73 a2 b2 c2 x)). Qed.
Lemma lem8248389 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) : (term76 a2 b2 c2 x c1) = (term76 a2 b2 c2 x c1).
Proof. exact (eq_refl (term76 a2 b2 c2 x c1)). Qed.
Lemma lem8248390 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term72 a2 b2 c2 x c1) = (term73 a2 b2 c2 x)) = ((term72 a2 b2 c2 x c1) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x))).
Proof. exact (MK_COMB (@lem8248389 a2 b2 c2 x c1) (@lem8248388 a2 b2 c2 x)). Qed.
Lemma lem8248391 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term72 a2 b2 c2 x c1) = ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)).
Proof. exact (eq_refl (term72 a2 b2 c2 x c1)). Qed.
Lemma lem8248392 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248393 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term76 a2 b2 c2 x c1) = (term77 a2 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248392) (@lem8248391 a2 b2 c1 c2 x)). Qed.
Lemma lem8248394 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)).
Proof. exact (eq_refl ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x))). Qed.
Lemma lem8248395 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term72 a2 b2 c2 x c1) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x))) = (((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x))).
Proof. exact (MK_COMB (@lem8248393 a2 b2 c1 c2 x) (@lem8248394 a2 b2 c2 x)). Qed.
Lemma lem8248396 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term72 a2 b2 c2 x c1) = (term73 a2 b2 c2 x)) = (((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x))).
Proof. exact (TRANS (@lem8248390 c1 a2 b2 c2 x) (@lem8248395 c1 a2 b2 c2 x)). Qed.
Lemma lem8248397 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = True) : ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)).
Proof. exact (EQ_MP (@lem8248396 c1 a2 b2 c2 x) (@lem8248387 a2 b2 c2 x c1 h1)). Qed.
Lemma lem8248398 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = True) : ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)) = ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248397 a2 b2 c2 x c1 h1)). Qed.
Lemma lem8248399 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term71 a2 b2 c2 x) = (term71 a2 b2 c2 x).
Proof. exact (eq_refl (term71 a2 b2 c2 x)). Qed.
Lemma lem8248400 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = False) : (term72 a2 b2 c2 x c1) = (term78 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248399 a2 b2 c2 x) (@lem8248365 c1 h1)). Qed.
Lemma lem8248401 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term78 a2 b2 c2 x) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)).
Proof. exact (eq_refl (term78 a2 b2 c2 x)). Qed.
Lemma lem8248402 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) : (term76 a2 b2 c2 x c1) = (term76 a2 b2 c2 x c1).
Proof. exact (eq_refl (term76 a2 b2 c2 x c1)). Qed.
Lemma lem8248403 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term72 a2 b2 c2 x c1) = (term78 a2 b2 c2 x)) = ((term72 a2 b2 c2 x c1) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x))).
Proof. exact (MK_COMB (@lem8248402 a2 b2 c2 x c1) (@lem8248401 a2 b2 c2 x)). Qed.
Lemma lem8248404 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term72 a2 b2 c2 x c1) = ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)).
Proof. exact (eq_refl (term72 a2 b2 c2 x c1)). Qed.
Lemma lem8248405 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248406 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term76 a2 b2 c2 x c1) = (term77 a2 b2 c1 c2 x).
Proof. exact (MK_COMB (@lem8248405) (@lem8248404 a2 b2 c1 c2 x)). Qed.
Lemma lem8248407 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)).
Proof. exact (eq_refl ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x))). Qed.
Lemma lem8248408 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term72 a2 b2 c2 x c1) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x))) = (((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x))).
Proof. exact (MK_COMB (@lem8248406 a2 b2 c1 c2 x) (@lem8248407 a2 b2 c2 x)). Qed.
Lemma lem8248409 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term72 a2 b2 c2 x c1) = (term78 a2 b2 c2 x)) = (((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x))).
Proof. exact (TRANS (@lem8248403 c1 a2 b2 c2 x) (@lem8248408 c1 a2 b2 c2 x)). Qed.
Lemma lem8248410 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = False) : ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)) = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)).
Proof. exact (EQ_MP (@lem8248409 c1 a2 b2 c2 x) (@lem8248400 a2 b2 c2 x c1 h1)). Qed.
Lemma lem8248411 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = False) : ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)) = ((term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248410 a2 b2 c2 x c1 h1)). Qed.
Lemma lem8248415 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8248416 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term74 a2 b2 c2 x) = (term39 a2 b2 c2 x).
Proof. exact (@lem8248415 (term39 a2 b2 c2 x)). Qed.
Lemma lem8248423 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248424 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term81 a2 b2 c2 x) = (term82 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248423) (@lem8248416 a2 b2 c2 x)). Qed.
Lemma lem8248432 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248433 (c2 : Prop) : (True /\ c2) = c2.
Proof. exact (@lem8248432 c2). Qed.
Lemma lem8248434 (b2 : Prop) : (and b2) = (and b2).
Proof. exact (eq_refl (and b2)). Qed.
Lemma lem8248435 (b2 : Prop) (c2 : Prop) : (term83 b2 c2) = (b2 /\ c2).
Proof. exact (MK_COMB (@lem8248434 b2) (@lem8248433 c2)). Qed.
Lemma lem8248438 (a2 : Prop) : (and a2) = (and a2).
Proof. exact (eq_refl (and a2)). Qed.
Lemma lem8248439 (a2 : Prop) (b2 : Prop) (c2 : Prop) : (term84 a2 b2 c2) = (term65 a2 b2 c2).
Proof. exact (MK_COMB (@lem8248438 a2) (@lem8248435 b2 c2)). Qed.
Lemma lem8248442 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248443 (a2 : Prop) (b2 : Prop) (c2 : Prop) : (term85 a2 b2 c2) = (term86 a2 b2 c2).
Proof. exact (MK_COMB (@lem8248442) (@lem8248439 a2 b2 c2)). Qed.
Lemma lem8248444 (x : Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8248445 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term75 a2 b2 c2 x) = (term39 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248443 a2 b2 c2) (@lem8248444 x)). Qed.
Lemma lem8248448 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)) = ((term39 a2 b2 c2 x) = (term39 a2 b2 c2 x)).
Proof. exact (MK_COMB (@lem8248424 a2 b2 c2 x) (@lem8248445 a2 b2 c2 x)). Qed.
Lemma lem8248450 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8248451 (x : Prop) : (x = x) = True.
Proof. exact (@lem8248450 Prop x). Qed.
Lemma lem8248452 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term39 a2 b2 c2 x) = (term39 a2 b2 c2 x)) = True.
Proof. exact (@lem8248451 (term39 a2 b2 c2 x)). Qed.
Lemma lem8248453 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)) = True.
Proof. exact (TRANS (@lem8248448 a2 b2 c2 x) (@lem8248452 a2 b2 c2 x)). Qed.
Lemma lem8248454 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : True = ((term74 a2 b2 c2 x) = (term75 a2 b2 c2 x)).
Proof. exact (SYM (@lem8248453 a2 b2 c2 x)). Qed.
Lemma lem8248455 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term74 a2 b2 c2 x) = (term75 a2 b2 c2 x).
Proof. exact (EQ_MP (@lem8248454 a2 b2 c2 x) (@lem0)). Qed.
Lemma lem8248459 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8248460 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term79 a2 b2 c2 x) = True.
Proof. exact (@lem8248459 (term39 a2 b2 c2 x)). Qed.
Lemma lem8248461 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248462 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term87 a2 b2 c2 x) = (@eq Prop True).
Proof. exact (MK_COMB (@lem8248461) (@lem8248460 a2 b2 c2 x)). Qed.
Lemma lem8248470 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248471 (c2 : Prop) : (False /\ c2) = False.
Proof. exact (@lem8248470 c2). Qed.
Lemma lem8248472 (b2 : Prop) : (and b2) = (and b2).
Proof. exact (eq_refl (and b2)). Qed.
Lemma lem8248473 (c2 : Prop) (b2 : Prop) : (term88 b2 c2) = (b2 /\ False).
Proof. exact (MK_COMB (@lem8248472 b2) (@lem8248471 c2)). Qed.
Lemma lem8248475 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem8248476 (b2 : Prop) : (b2 /\ False) = False.
Proof. exact (@lem8248475 b2). Qed.
Lemma lem8248477 (b2 : Prop) (c2 : Prop) : (term88 b2 c2) = False.
Proof. exact (TRANS (@lem8248473 c2 b2) (@lem8248476 b2)). Qed.
Lemma lem8248478 (a2 : Prop) : (and a2) = (and a2).
Proof. exact (eq_refl (and a2)). Qed.
Lemma lem8248479 (b2 : Prop) (c2 : Prop) (a2 : Prop) : (term89 a2 b2 c2) = (a2 /\ False).
Proof. exact (MK_COMB (@lem8248478 a2) (@lem8248477 b2 c2)). Qed.
Lemma lem8248481 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem8248482 (a2 : Prop) : (a2 /\ False) = False.
Proof. exact (@lem8248481 a2). Qed.
Lemma lem8248483 (a2 : Prop) (b2 : Prop) (c2 : Prop) : (term89 a2 b2 c2) = False.
Proof. exact (TRANS (@lem8248479 b2 c2 a2) (@lem8248482 a2)). Qed.
Lemma lem8248484 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248485 (a2 : Prop) (b2 : Prop) (c2 : Prop) : (term90 a2 b2 c2) = (imp False).
Proof. exact (MK_COMB (@lem8248484) (@lem8248483 a2 b2 c2)). Qed.
Lemma lem8248486 (x : Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8248487 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term80 a2 b2 c2 x) = (False -> x).
Proof. exact (MK_COMB (@lem8248485 a2 b2 c2) (@lem8248486 x)). Qed.
Lemma lem8248489 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8248490 (x : Prop) : (False -> x) = True.
Proof. exact (@lem8248489 x). Qed.
Lemma lem8248491 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term80 a2 b2 c2 x) = True.
Proof. exact (TRANS (@lem8248487 a2 b2 c2 x) (@lem8248490 x)). Qed.
Lemma lem8248492 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)) = (True = True).
Proof. exact (MK_COMB (@lem8248462 a2 b2 c2 x) (@lem8248491 a2 b2 c2 x)). Qed.
Lemma lem8248494 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem8248495 : (True = True) = True.
Proof. exact (@lem8248494 True). Qed.
Lemma lem8248496 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)) = True.
Proof. exact (TRANS (@lem8248492 a2 b2 c2 x) (@lem8248495)). Qed.
Lemma lem8248497 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : True = ((term79 a2 b2 c2 x) = (term80 a2 b2 c2 x)).
Proof. exact (SYM (@lem8248496 a2 b2 c2 x)). Qed.
Lemma lem8248498 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term79 a2 b2 c2 x) = (term80 a2 b2 c2 x).
Proof. exact (EQ_MP (@lem8248497 a2 b2 c2 x) (@lem0)). Qed.
Lemma lem8248499 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = False) : (term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248411 a2 b2 c2 x c1 h1) (@lem8248498 a2 b2 c2 x)). Qed.
Lemma lem8248500 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) (c1 : Prop) (h1 : c1 = True) : (term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248398 a2 b2 c2 x c1 h1) (@lem8248455 a2 b2 c2 x)). Qed.
Lemma lem8248502 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term61 c1 a2 b2 c2 x) = (term70 a2 b2 c1 c2 x).
Proof. exact (or_elim (@lem8248363 c1) (fun h0 : c1 = True => @lem8248500 a2 b2 c2 x c1 h0) (fun h0 : c1 = False => @lem8248499 a2 b2 c2 x c1 h0)). Qed.
Lemma lem8248503 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term53 c1 a2 b2 c2 x) = (term54 a2 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248360 a2 b2 c1 c2 x) (@lem8248502 a2 b2 c1 c2 x)). Qed.
Lemma lem8248509 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248510 (c1 : Prop) : (False /\ c1) = False.
Proof. exact (@lem8248509 c1). Qed.
Lemma lem8248511 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248512 (c1 : Prop) : (term91 c1) = (imp False).
Proof. exact (MK_COMB (@lem8248511) (@lem8248510 c1)). Qed.
Lemma lem8248519 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term39 a2 b2 c2 x) = (term39 a2 b2 c2 x).
Proof. exact (eq_refl (term39 a2 b2 c2 x)). Qed.
Lemma lem8248520 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term58 c1 a2 b2 c2 x) = (term79 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248512 c1) (@lem8248519 a2 b2 c2 x)). Qed.
Lemma lem8248522 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8248523 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term79 a2 b2 c2 x) = True.
Proof. exact (@lem8248522 (term39 a2 b2 c2 x)). Qed.
Lemma lem8248524 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term58 c1 a2 b2 c2 x) = True.
Proof. exact (TRANS (@lem8248520 c1 a2 b2 c2 x) (@lem8248523 a2 b2 c2 x)). Qed.
Lemma lem8248525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248526 (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term92 c1 a2 b2 c2 x) = (@eq Prop True).
Proof. exact (MK_COMB (@lem8248525) (@lem8248524 c1 a2 b2 c2 x)). Qed.
Lemma lem8248534 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248535 (b2 : Prop) : (False /\ b2) = False.
Proof. exact (@lem8248534 b2). Qed.
Lemma lem8248536 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248537 (b2 : Prop) : (term93 b2) = (and False).
Proof. exact (MK_COMB (@lem8248536) (@lem8248535 b2)). Qed.
Lemma lem8248540 (c1 : Prop) (c2 : Prop) : (c1 /\ c2) = (c1 /\ c2).
Proof. exact (eq_refl (c1 /\ c2)). Qed.
Lemma lem8248541 (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term94 b2 c1 c2) = (term95 c1 c2).
Proof. exact (MK_COMB (@lem8248537 b2) (@lem8248540 c1 c2)). Qed.
Lemma lem8248543 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248544 (c1 : Prop) (c2 : Prop) : (term95 c1 c2) = False.
Proof. exact (@lem8248543 (c1 /\ c2)). Qed.
Lemma lem8248545 (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term94 b2 c1 c2) = False.
Proof. exact (TRANS (@lem8248541 b2 c1 c2) (@lem8248544 c1 c2)). Qed.
Lemma lem8248546 (a2 : Prop) : (and a2) = (and a2).
Proof. exact (eq_refl (and a2)). Qed.
Lemma lem8248547 (b2 : Prop) (c1 : Prop) (c2 : Prop) (a2 : Prop) : (term96 a2 b2 c1 c2) = (a2 /\ False).
Proof. exact (MK_COMB (@lem8248546 a2) (@lem8248545 b2 c1 c2)). Qed.
Lemma lem8248549 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem8248550 (a2 : Prop) : (a2 /\ False) = False.
Proof. exact (@lem8248549 a2). Qed.
Lemma lem8248551 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term96 a2 b2 c1 c2) = False.
Proof. exact (TRANS (@lem8248547 b2 c1 c2 a2) (@lem8248550 a2)). Qed.
Lemma lem8248552 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248553 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term97 a2 b2 c1 c2) = (imp False).
Proof. exact (MK_COMB (@lem8248552) (@lem8248551 a2 b2 c1 c2)). Qed.
Lemma lem8248554 (x : Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8248555 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term59 a2 b2 c1 c2 x) = (False -> x).
Proof. exact (MK_COMB (@lem8248553 a2 b2 c1 c2) (@lem8248554 x)). Qed.
Lemma lem8248557 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8248558 (x : Prop) : (False -> x) = True.
Proof. exact (@lem8248557 x). Qed.
Lemma lem8248559 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term59 a2 b2 c1 c2 x) = True.
Proof. exact (TRANS (@lem8248555 a2 b2 c1 c2 x) (@lem8248558 x)). Qed.
Lemma lem8248560 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)) = (True = True).
Proof. exact (MK_COMB (@lem8248526 c1 a2 b2 c2 x) (@lem8248559 a2 b2 c1 c2 x)). Qed.
Lemma lem8248562 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem8248563 : (True = True) = True.
Proof. exact (@lem8248562 True). Qed.
Lemma lem8248564 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)) = True.
Proof. exact (TRANS (@lem8248560 a2 b2 c1 c2 x) (@lem8248563)). Qed.
Lemma lem8248565 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : True = ((term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248564 a2 b2 c1 c2 x)). Qed.
Lemma lem8248566 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term58 c1 a2 b2 c2 x) = (term59 a2 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248565 a2 b2 c1 c2 x) (@lem0)). Qed.
Lemma lem8248567 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = False) : (term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248308 a2 b2 c1 c2 x b1 h1) (@lem8248566 a2 b2 c1 c2 x)). Qed.
Lemma lem8248568 (a2 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (b1 : Prop) (h1 : b1 = True) : (term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248295 a2 b2 c1 c2 x b1 h1) (@lem8248503 a2 b2 c1 c2 x)). Qed.
Lemma lem8248570 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term40 b1 c1 a2 b2 c2 x) = (term49 a2 b1 b2 c1 c2 x).
Proof. exact (or_elim (@lem8248256 b1) (fun h0 : b1 = True => @lem8248568 a2 b2 c1 c2 x b1 h0) (fun h0 : b1 = False => @lem8248567 a2 b2 c1 c2 x b1 h0)). Qed.
Lemma lem8248571 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term27 b1 c1 a2 b2 c2 x) = (term28 a2 b1 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248253 a2 b1 b2 c1 c2 x) (@lem8248570 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248577 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248578 (b1 : Prop) (c1 : Prop) : (term95 b1 c1) = False.
Proof. exact (@lem8248577 (b1 /\ c1)). Qed.
Lemma lem8248579 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248580 (b1 : Prop) (c1 : Prop) : (term98 b1 c1) = (imp False).
Proof. exact (MK_COMB (@lem8248579) (@lem8248578 b1 c1)). Qed.
Lemma lem8248587 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term39 a2 b2 c2 x) = (term39 a2 b2 c2 x).
Proof. exact (eq_refl (term39 a2 b2 c2 x)). Qed.
Lemma lem8248588 (b1 : Prop) (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term34 b1 c1 a2 b2 c2 x) = (term79 a2 b2 c2 x).
Proof. exact (MK_COMB (@lem8248580 b1 c1) (@lem8248587 a2 b2 c2 x)). Qed.
Lemma lem8248590 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8248591 (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term79 a2 b2 c2 x) = True.
Proof. exact (@lem8248590 (term39 a2 b2 c2 x)). Qed.
Lemma lem8248592 (b1 : Prop) (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term34 b1 c1 a2 b2 c2 x) = True.
Proof. exact (TRANS (@lem8248588 b1 c1 a2 b2 c2 x) (@lem8248591 a2 b2 c2 x)). Qed.
Lemma lem8248593 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248594 (b1 : Prop) (c1 : Prop) (a2 : Prop) (b2 : Prop) (c2 : Prop) (x : Prop) : (term99 b1 c1 a2 b2 c2 x) = (@eq Prop True).
Proof. exact (MK_COMB (@lem8248593) (@lem8248592 b1 c1 a2 b2 c2 x)). Qed.
Lemma lem8248600 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248601 (a2 : Prop) : (False /\ a2) = False.
Proof. exact (@lem8248600 a2). Qed.
Lemma lem8248602 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248603 (a2 : Prop) : (term93 a2) = (and False).
Proof. exact (MK_COMB (@lem8248602) (@lem8248601 a2)). Qed.
Lemma lem8248610 (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term44 b1 b2 c1 c2) = (term44 b1 b2 c1 c2).
Proof. exact (eq_refl (term44 b1 b2 c1 c2)). Qed.
Lemma lem8248611 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term100 a2 b1 b2 c1 c2) = (term101 b1 b2 c1 c2).
Proof. exact (MK_COMB (@lem8248603 a2) (@lem8248610 b1 b2 c1 c2)). Qed.
Lemma lem8248613 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8248614 (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term101 b1 b2 c1 c2) = False.
Proof. exact (@lem8248613 (term44 b1 b2 c1 c2)). Qed.
Lemma lem8248615 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term100 a2 b1 b2 c1 c2) = False.
Proof. exact (TRANS (@lem8248611 a2 b1 b2 c1 c2) (@lem8248614 b1 b2 c1 c2)). Qed.
Lemma lem8248616 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248617 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) : (term102 a2 b1 b2 c1 c2) = (imp False).
Proof. exact (MK_COMB (@lem8248616) (@lem8248615 a2 b1 b2 c1 c2)). Qed.
Lemma lem8248618 (x : Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8248619 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term35 a2 b1 b2 c1 c2 x) = (False -> x).
Proof. exact (MK_COMB (@lem8248617 a2 b1 b2 c1 c2) (@lem8248618 x)). Qed.
Lemma lem8248621 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8248622 (x : Prop) : (False -> x) = True.
Proof. exact (@lem8248621 x). Qed.
Lemma lem8248623 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term35 a2 b1 b2 c1 c2 x) = True.
Proof. exact (TRANS (@lem8248619 a2 b1 b2 c1 c2 x) (@lem8248622 x)). Qed.
Lemma lem8248624 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)) = (True = True).
Proof. exact (MK_COMB (@lem8248594 b1 c1 a2 b2 c2 x) (@lem8248623 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248626 (t : Prop) : (True = t) = t.
Proof. exact (proj1 (@lem1855 t)). Qed.
Lemma lem8248627 : (True = True) = True.
Proof. exact (@lem8248626 True). Qed.
Lemma lem8248628 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)) = True.
Proof. exact (TRANS (@lem8248624 a2 b1 b2 c1 c2 x) (@lem8248627)). Qed.
Lemma lem8248629 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : True = ((term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x)).
Proof. exact (SYM (@lem8248628 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248630 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term34 b1 c1 a2 b2 c2 x) = (term35 a2 b1 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248629 a2 b1 b2 c1 c2 x) (@lem0)). Qed.
Lemma lem8248631 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = False) : (term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248201 a2 b1 b2 c1 c2 x a1 h1) (@lem8248630 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248632 (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) (a1 : Prop) (h1 : a1 = True) : (term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x).
Proof. exact (EQ_MP (@lem8248188 a2 b1 b2 c1 c2 x a1 h1) (@lem8248571 a2 b1 b2 c1 c2 x)). Qed.
Lemma lem8248636 {A : Type'} (P : Prop) : term103 A P.
Proof. exact (@lem6418 A P). Qed.
Lemma lem8248637 {A : Type'} (P : Prop) : (term103 A P) = (term104 A P).
Proof. exact (eq_refl (term103 A P)). Qed.
Lemma lem8248638 {A : Type'} (P : Prop) : term104 A P.
Proof. exact (EQ_MP (@lem8248637 A P) (@lem8248636 A P)). Qed.
Lemma lem8248639 {A : Type'} (P : Prop) (Q : A -> Prop) : term105 A P Q.
Proof. exact (@lem8248638 A P Q). Qed.
Lemma lem8248640 {A : Type'} (P : Prop) (Q : A -> Prop) : (term105 A P Q) = ((term106 A P Q) = (term107 A P Q)).
Proof. exact (eq_refl (term105 A P Q)). Qed.
Lemma lem8248642 {A : Type'} (P : A -> Prop) : term108 A P.
Proof. exact (@lem6644 A P). Qed.
Lemma lem8248643 {A : Type'} (P : A -> Prop) : (term108 A P) = (term109 A P).
Proof. exact (eq_refl (term108 A P)). Qed.
Lemma lem8248644 {A : Type'} (P : A -> Prop) : term109 A P.
Proof. exact (EQ_MP (@lem8248643 A P) (@lem8248642 A P)). Qed.
Lemma lem8248645 {A : Type'} (P : A -> Prop) (Q : Prop) : term110 A P Q.
Proof. exact (@lem8248644 A P Q). Qed.
Lemma lem8248646 {A : Type'} (P : A -> Prop) (Q : Prop) : (term110 A P Q) = ((term111 A P Q) = (term112 A P Q)).
Proof. exact (eq_refl (term110 A P Q)). Qed.
Lemma lem8248648 {A B P : Type'} (lt2 : type1402 A) : term113 A B P lt2.
Proof. exact (@lem8094644 A B P lt2). Qed.
Lemma lem8248649 {A B P : Type'} (lt2 : type1402 A) : (term113 A B P lt2) = (term114 A B P lt2).
Proof. exact (eq_refl (term113 A B P lt2)). Qed.
Lemma lem8248650 {A B P : Type'} (lt2 : type1402 A) : term114 A B P lt2.
Proof. exact (EQ_MP (@lem8248649 A B P lt2) (@lem8248648 A B P lt2)). Qed.
Lemma lem8248651 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term115 A B P lt2 s.
Proof. exact (@lem8248650 A B P lt2 s). Qed.
Lemma lem8248652 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term115 A B P lt2 s) = (term116 A B P lt2 s).
Proof. exact (eq_refl (term115 A B P lt2 s)). Qed.
Lemma lem8248653 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term116 A B P lt2 s.
Proof. exact (EQ_MP (@lem8248652 A B P lt2 s) (@lem8248651 A B P lt2 s)). Qed.
Lemma lem8248654 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : term117 A B P lt2 s p.
Proof. exact (@lem8248653 A B P lt2 s p). Qed.
Lemma lem8248655 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term117 A B P lt2 s p) = (term118 A B P lt2 s p).
Proof. exact (eq_refl (term117 A B P lt2 s p)). Qed.
Lemma lem8248656 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : term118 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8248655 A B P lt2 s p) (@lem8248654 A B P lt2 s p)). Qed.
Lemma lem8248657 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : term119 A B P lt2 s p t.
Proof. exact (@lem8248656 A B P lt2 s p t). Qed.
Lemma lem8248658 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (term119 A B P lt2 s p t) = ((@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t)).
Proof. exact (eq_refl (term119 A B P lt2 s p t)). Qed.
Lemma lem8248660 (t1 : Prop) : term10 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8248661 (t1 : Prop) : (term10 t1) = (term11 t1).
Proof. exact (eq_refl (term10 t1)). Qed.
Lemma lem8248662 (t1 : Prop) : term11 t1.
Proof. exact (EQ_MP (@lem8248661 t1) (@lem8248660 t1)). Qed.
Lemma lem8248663 (t1 : Prop) (t2 : Prop) : term12 t1 t2.
Proof. exact (@lem8248662 t1 t2). Qed.
Lemma lem8248664 (t1 : Prop) (t2 : Prop) : (term12 t1 t2) = (term13 t1 t2).
Proof. exact (eq_refl (term12 t1 t2)). Qed.
Lemma lem8248665 (t1 : Prop) (t2 : Prop) : term13 t1 t2.
Proof. exact (EQ_MP (@lem8248664 t1 t2) (@lem8248663 t1 t2)). Qed.
Lemma lem8248666 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term14 t1 t2 t3.
Proof. exact (@lem8248665 t1 t2 t3). Qed.
Lemma lem8248667 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term14 t1 t2 t3) = ((term15 t1 t2 t3) = (term16 t1 t2 t3)).
Proof. exact (eq_refl (term14 t1 t2 t3)). Qed.
Lemma lem8248668 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term15 t1 t2 t3) = (term16 t1 t2 t3).
Proof. exact (EQ_MP (@lem8248667 t1 t2 t3) (@lem8248666 t1 t2 t3)). Qed.
Lemma lem8248669 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term16 t1 t2 t3) = (term15 t1 t2 t3).
Proof. exact (SYM (@lem8248668 t1 t2 t3)). Qed.
Lemma lem8248670 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term121 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (@lem8093231 _143449 _143452 _143456 _143457 _143462 p). Qed.
Lemma lem8248671 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : (term121 _143449 _143452 _143456 _143457 _143462 p) = (term122 _143449 _143452 _143456 _143457 _143462 p).
Proof. exact (eq_refl (term121 _143449 _143452 _143456 _143457 _143462 p)). Qed.
Lemma lem8248672 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) : term122 _143449 _143452 _143456 _143457 _143462 p.
Proof. exact (EQ_MP (@lem8248671 _143449 _143452 _143456 _143457 _143462 p) (@lem8248670 _143449 _143452 _143456 _143457 _143462 p)). Qed.
Lemma lem8248673 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term123 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (@lem8248672 _143449 _143452 _143456 _143457 _143462 p lt2). Qed.
Lemma lem8248674 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : (term123 _143449 _143452 _143456 _143457 _143462 p lt2) = (term124 _143449 _143452 _143456 _143457 _143462 p lt2).
Proof. exact (eq_refl (term123 _143449 _143452 _143456 _143457 _143462 p lt2)). Qed.
Lemma lem8248675 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) : term124 _143449 _143452 _143456 _143457 _143462 p lt2.
Proof. exact (EQ_MP (@lem8248674 _143449 _143452 _143456 _143457 _143462 p lt2) (@lem8248673 _143449 _143452 _143456 _143457 _143462 p lt2)). Qed.
Lemma lem8248676 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term125 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (@lem8248675 _143449 _143452 _143456 _143457 _143462 p lt2 s). Qed.
Lemma lem8248677 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : (term125 _143449 _143452 _143456 _143457 _143462 p lt2 s) = (term126 _143449 _143452 _143456 _143457 _143462 p lt2 s).
Proof. exact (eq_refl (term125 _143449 _143452 _143456 _143457 _143462 p lt2 s)). Qed.
Lemma lem8248678 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) : term126 _143449 _143452 _143456 _143457 _143462 p lt2 s.
Proof. exact (EQ_MP (@lem8248677 _143449 _143452 _143456 _143457 _143462 p lt2 s) (@lem8248676 _143449 _143452 _143456 _143457 _143462 p lt2 s)). Qed.
Lemma lem8248679 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : term127 _143449 _143452 _143456 _143457 _143462 p lt2 s t.
Proof. exact (@lem8248678 _143449 _143452 _143456 _143457 _143462 p lt2 s t). Qed.
Lemma lem8248680 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (term127 _143449 _143452 _143456 _143457 _143462 p lt2 s t) = ((@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term128 _143449 _143452 _143456 _143457 _143462 p lt2 s t)).
Proof. exact (eq_refl (term127 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8248682 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) : term129 _143606 _143608 _143614 lt2.
Proof. exact (@lem8096071 _143606 _143608 _143614 lt2). Qed.
Lemma lem8248683 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) : (term129 _143606 _143608 _143614 lt2) = (term130 _143606 _143608 _143614 lt2).
Proof. exact (eq_refl (term129 _143606 _143608 _143614 lt2)). Qed.
Lemma lem8248684 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) : term130 _143606 _143608 _143614 lt2.
Proof. exact (EQ_MP (@lem8248683 _143606 _143608 _143614 lt2) (@lem8248682 _143606 _143608 _143614 lt2)). Qed.
Lemma lem8248685 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) : term131 _143606 _143608 _143614 lt2 p.
Proof. exact (@lem8248684 _143606 _143608 _143614 lt2 p). Qed.
Lemma lem8248686 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) : (term131 _143606 _143608 _143614 lt2 p) = (term132 _143606 _143608 _143614 lt2 p).
Proof. exact (eq_refl (term131 _143606 _143608 _143614 lt2 p)). Qed.
Lemma lem8248687 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) : term132 _143606 _143608 _143614 lt2 p.
Proof. exact (EQ_MP (@lem8248686 _143606 _143608 _143614 lt2 p) (@lem8248685 _143606 _143608 _143614 lt2 p)). Qed.
Lemma lem8248688 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) : term133 _143606 _143608 _143614 lt2 p s.
Proof. exact (@lem8248687 _143606 _143608 _143614 lt2 p s). Qed.
Lemma lem8248689 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) : (term133 _143606 _143608 _143614 lt2 p s) = (term134 _143606 _143608 _143614 lt2 p s).
Proof. exact (eq_refl (term133 _143606 _143608 _143614 lt2 p s)). Qed.
Lemma lem8248690 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) : term134 _143606 _143608 _143614 lt2 p s.
Proof. exact (EQ_MP (@lem8248689 _143606 _143608 _143614 lt2 p s) (@lem8248688 _143606 _143608 _143614 lt2 p s)). Qed.
Lemma lem8248691 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : term135 _143606 _143608 _143614 lt2 p s t.
Proof. exact (@lem8248690 _143606 _143608 _143614 lt2 p s t). Qed.
Lemma lem8248692 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : (term135 _143606 _143608 _143614 lt2 p s t) = ((@superadmissible _143606 _143608 _143614 lt2 p s t) = (term136 _143606 _143608 _143614 lt2 p s t)).
Proof. exact (eq_refl (term135 _143606 _143608 _143614 lt2 p s t)). Qed.
Lemma lem8248723 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term128 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8248680 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8248679 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8248724 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (t : type560 A B P) : (@admissible A B A Prop P lt2 p s t) = (term137 A B P p lt2 s t).
Proof. exact (@lem8248723 A B A Prop P p lt2 s t). Qed.
Lemma lem8248725 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (@admissible A B A Prop P lt2 p s P') = (term137 A B P p lt2 s P').
Proof. exact (@lem8248724 A B P p lt2 s P'). Qed.
Lemma lem8248754 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248755 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term138 A B P lt2 p s P') = (term139 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8248754) (@lem8248725 A B P p lt2 s P')). Qed.
Lemma lem8248759 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : (@superadmissible _143606 _143608 _143614 lt2 p s t) = (term136 _143606 _143608 _143614 lt2 p s t).
Proof. exact (EQ_MP (@lem8248692 _143606 _143608 _143614 lt2 p s t) (@lem8248691 _143606 _143608 _143614 lt2 p s t)). Qed.
Lemma lem8248760 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (t : type558 A B P) : (@superadmissible A B P lt2 p s t) = (term136 A B P lt2 p s t).
Proof. exact (@lem8248759 A B P lt2 p s t). Qed.
Lemma lem8248761 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) : (term140 A B P lt2 p P' s h) = (term141 A B P lt2 p P' s h).
Proof. exact (@lem8248760 A B P lt2 (term142 A B P p P') s h). Qed.
Lemma lem8248765 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term128 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8248680 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8248679 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8248766 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (t : type560 A B P) : (@admissible A B A Prop P lt2 p s t) = (term137 A B P p lt2 s t).
Proof. exact (@lem8248765 A B A Prop P p lt2 s t). Qed.
Lemma lem8248767 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term143 A B P lt2 s p P') = (term144 A B P lt2 s p P').
Proof. exact (@lem8248766 A B P (term145 A B P) lt2 s (term142 A B P p P')). Qed.
Lemma lem8248785 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248786 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8248785 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8248787 {A B P : Type'} (f : A -> B) : (term148 A B P f) = (term149 A B P f).
Proof. exact (@lem8248786 A B P (term145 A B P) f). Qed.
Lemma lem8248788 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8248789 {A B P : Type'} : (term151 A B P) = (term145 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8248788 A B P f)). Qed.
Lemma lem8248790 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8248791 {A B P : Type'} (f : A -> B) : (term148 A B P f) = (term149 A B P f).
Proof. exact (MK_COMB (@lem8248789 A B P) (@lem8248790 A B f)). Qed.
Lemma lem8248792 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8248793 {A B P : Type'} (f : A -> B) : (term152 A B P f) = (term153 A B P f).
Proof. exact (MK_COMB (@lem8248792 P) (@lem8248791 A B P f)). Qed.
Lemma lem8248794 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8248795 {A B P : Type'} (f : A -> B) : ((term148 A B P f) = (term149 A B P f)) = ((term149 A B P f) = (term150 P)).
Proof. exact (MK_COMB (@lem8248793 A B P f) (@lem8248794 A B P f)). Qed.
Lemma lem8248796 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (EQ_MP (@lem8248795 A B P f) (@lem8248787 A B P f)). Qed.
Lemma lem8248797 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248798 {A B P : Type'} (f : A -> B) (a : P) : (term154 A B P f a) = (term155 P a).
Proof. exact (MK_COMB (@lem8248796 A B P f) (@lem8248797 P a)). Qed.
Lemma lem8248800 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248801 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8248800 P Prop f y). Qed.
Lemma lem8248802 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (@lem8248801 P (term150 P) a). Qed.
Lemma lem8248803 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8248804 {P : Type'} : (term158 P) = (term150 P).
Proof. exact (fun_ext (fun a : P => @lem8248803 P a)). Qed.
Lemma lem8248805 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248806 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (MK_COMB (@lem8248804 P) (@lem8248805 P a)). Qed.
Lemma lem8248807 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248808 {P : Type'} (a : P) : (term159 P a) = (term160 P a).
Proof. exact (MK_COMB (@lem8248807) (@lem8248806 P a)). Qed.
Lemma lem8248809 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8248810 {P : Type'} (a : P) : ((term157 P a) = (term155 P a)) = ((term155 P a) = True).
Proof. exact (MK_COMB (@lem8248808 P a) (@lem8248809 P a)). Qed.
Lemma lem8248811 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (EQ_MP (@lem8248810 P a) (@lem8248802 P a)). Qed.
Lemma lem8248812 {A B P : Type'} (f : A -> B) (a : P) : (term154 A B P f a) = True.
Proof. exact (TRANS (@lem8248798 A B P f a) (@lem8248811 P a)). Qed.
Lemma lem8248813 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248814 {A B P : Type'} (f : A -> B) (a : P) : (term161 A B P f a) = (and True).
Proof. exact (MK_COMB (@lem8248813) (@lem8248812 A B P f a)). Qed.
Lemma lem8248818 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248819 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8248818 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8248820 {A B P : Type'} (g : A -> B) : (term148 A B P g) = (term149 A B P g).
Proof. exact (@lem8248819 A B P (term145 A B P) g). Qed.
Lemma lem8248821 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8248822 {A B P : Type'} : (term151 A B P) = (term145 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8248821 A B P f)). Qed.
Lemma lem8248823 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8248824 {A B P : Type'} (g : A -> B) : (term148 A B P g) = (term149 A B P g).
Proof. exact (MK_COMB (@lem8248822 A B P) (@lem8248823 A B g)). Qed.
Lemma lem8248825 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8248826 {A B P : Type'} (g : A -> B) : (term152 A B P g) = (term153 A B P g).
Proof. exact (MK_COMB (@lem8248825 P) (@lem8248824 A B P g)). Qed.
Lemma lem8248827 {A B P : Type'} (g : A -> B) : (term149 A B P g) = (term150 P).
Proof. exact (eq_refl (term149 A B P g)). Qed.
Lemma lem8248828 {A B P : Type'} (g : A -> B) : ((term148 A B P g) = (term149 A B P g)) = ((term149 A B P g) = (term150 P)).
Proof. exact (MK_COMB (@lem8248826 A B P g) (@lem8248827 A B P g)). Qed.
Lemma lem8248829 {A B P : Type'} (g : A -> B) : (term149 A B P g) = (term150 P).
Proof. exact (EQ_MP (@lem8248828 A B P g) (@lem8248820 A B P g)). Qed.
Lemma lem8248830 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248831 {A B P : Type'} (g : A -> B) (a : P) : (term154 A B P g a) = (term155 P a).
Proof. exact (MK_COMB (@lem8248829 A B P g) (@lem8248830 P a)). Qed.
Lemma lem8248833 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248834 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8248833 P Prop f y). Qed.
Lemma lem8248835 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (@lem8248834 P (term150 P) a). Qed.
Lemma lem8248836 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8248837 {P : Type'} : (term158 P) = (term150 P).
Proof. exact (fun_ext (fun a : P => @lem8248836 P a)). Qed.
Lemma lem8248838 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248839 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (MK_COMB (@lem8248837 P) (@lem8248838 P a)). Qed.
Lemma lem8248840 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248841 {P : Type'} (a : P) : (term159 P a) = (term160 P a).
Proof. exact (MK_COMB (@lem8248840) (@lem8248839 P a)). Qed.
Lemma lem8248842 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8248843 {P : Type'} (a : P) : ((term157 P a) = (term155 P a)) = ((term155 P a) = True).
Proof. exact (MK_COMB (@lem8248841 P a) (@lem8248842 P a)). Qed.
Lemma lem8248844 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (EQ_MP (@lem8248843 P a) (@lem8248835 P a)). Qed.
Lemma lem8248845 {A B P : Type'} (g : A -> B) (a : P) : (term154 A B P g a) = True.
Proof. exact (TRANS (@lem8248831 A B P g a) (@lem8248844 P a)). Qed.
Lemma lem8248846 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248847 {A B P : Type'} (g : A -> B) (a : P) : (term161 A B P g a) = (and True).
Proof. exact (MK_COMB (@lem8248846) (@lem8248845 A B P g a)). Qed.
Lemma lem8248856 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (eq_refl (term162 A B P lt2 s a f g)). Qed.
Lemma lem8248857 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term163 A B P lt2 s a f g) = (term164 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8248847 A B P g a) (@lem8248856 A B P lt2 s a f g)). Qed.
Lemma lem8248859 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248860 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term164 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (@lem8248859 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8248869 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term163 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8248857 A B P lt2 s a f g) (@lem8248860 A B P lt2 s a f g)). Qed.
Lemma lem8248870 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term165 A B P lt2 s a f g) = (term164 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8248814 A B P f a) (@lem8248869 A B P lt2 s a f g)). Qed.
Lemma lem8248872 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8248873 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term164 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (@lem8248872 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8248882 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term165 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8248870 A B P lt2 s a f g) (@lem8248873 A B P lt2 s a f g)). Qed.
Lemma lem8248883 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248884 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term166 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8248883) (@lem8248882 A B P lt2 s a f g)). Qed.
Lemma lem8248888 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248889 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8248888 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8248890 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term168 A B P p P' f) = (term169 A B P p P' f).
Proof. exact (@lem8248889 A B P (term142 A B P p P') f). Qed.
Lemma lem8248891 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (eq_refl (term169 A B P p P' f)). Qed.
Lemma lem8248892 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term171 A B P p P') = (term142 A B P p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8248891 A B P p P' f)). Qed.
Lemma lem8248893 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8248894 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term168 A B P p P' f) = (term169 A B P p P' f).
Proof. exact (MK_COMB (@lem8248892 A B P p P') (@lem8248893 A B f)). Qed.
Lemma lem8248895 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8248896 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term172 A B P p P' f) = (term173 A B P p P' f).
Proof. exact (MK_COMB (@lem8248895 P) (@lem8248894 A B P p P' f)). Qed.
Lemma lem8248897 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (eq_refl (term169 A B P p P' f)). Qed.
Lemma lem8248898 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : ((term168 A B P p P' f) = (term169 A B P p P' f)) = ((term169 A B P p P' f) = (term170 A B P p P' f)).
Proof. exact (MK_COMB (@lem8248896 A B P p P' f) (@lem8248897 A B P p P' f)). Qed.
Lemma lem8248899 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (EQ_MP (@lem8248898 A B P p P' f) (@lem8248890 A B P p P' f)). Qed.
Lemma lem8248902 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248903 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term174 A B P p P' f a) = (term175 A B P p P' f a).
Proof. exact (MK_COMB (@lem8248899 A B P p P' f) (@lem8248902 P a)). Qed.
Lemma lem8248905 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248906 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8248905 P Prop f y). Qed.
Lemma lem8248907 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term176 A B P p P' f a) = (term175 A B P p P' f a).
Proof. exact (@lem8248906 P (term170 A B P p P' f) a). Qed.
Lemma lem8248908 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (x : P) : (term175 A B P p P' f x) = (term177 A B P p P' f x).
Proof. exact (eq_refl (term175 A B P p P' f x)). Qed.
Lemma lem8248909 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term178 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (fun_ext (fun x : P => @lem8248908 A B P p P' f x)). Qed.
Lemma lem8248910 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248911 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term176 A B P p P' f a) = (term175 A B P p P' f a).
Proof. exact (MK_COMB (@lem8248909 A B P p P' f) (@lem8248910 P a)). Qed.
Lemma lem8248912 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248913 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term179 A B P p P' f a) = (term180 A B P p P' f a).
Proof. exact (MK_COMB (@lem8248912) (@lem8248911 A B P p P' f a)). Qed.
Lemma lem8248914 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term175 A B P p P' f a) = (term177 A B P p P' f a).
Proof. exact (eq_refl (term175 A B P p P' f a)). Qed.
Lemma lem8248915 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : ((term176 A B P p P' f a) = (term175 A B P p P' f a)) = ((term175 A B P p P' f a) = (term177 A B P p P' f a)).
Proof. exact (MK_COMB (@lem8248913 A B P p P' f a) (@lem8248914 A B P p P' f a)). Qed.
Lemma lem8248916 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term175 A B P p P' f a) = (term177 A B P p P' f a).
Proof. exact (EQ_MP (@lem8248915 A B P p P' f a) (@lem8248907 A B P p P' f a)). Qed.
Lemma lem8248919 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term174 A B P p P' f a) = (term177 A B P p P' f a).
Proof. exact (TRANS (@lem8248903 A B P p P' f a) (@lem8248916 A B P p P' f a)). Qed.
Lemma lem8248920 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248921 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term181 A B P p P' f a) = (term182 A B P p P' f a).
Proof. exact (MK_COMB (@lem8248920) (@lem8248919 A B P p P' f a)). Qed.
Lemma lem8248923 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248924 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8248923 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8248925 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term168 A B P p P' g) = (term169 A B P p P' g).
Proof. exact (@lem8248924 A B P (term142 A B P p P') g). Qed.
Lemma lem8248926 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (eq_refl (term169 A B P p P' f)). Qed.
Lemma lem8248927 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term171 A B P p P') = (term142 A B P p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8248926 A B P p P' f)). Qed.
Lemma lem8248928 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8248929 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term168 A B P p P' g) = (term169 A B P p P' g).
Proof. exact (MK_COMB (@lem8248927 A B P p P') (@lem8248928 A B g)). Qed.
Lemma lem8248930 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8248931 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term172 A B P p P' g) = (term173 A B P p P' g).
Proof. exact (MK_COMB (@lem8248930 P) (@lem8248929 A B P p P' g)). Qed.
Lemma lem8248932 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term169 A B P p P' g) = (term170 A B P p P' g).
Proof. exact (eq_refl (term169 A B P p P' g)). Qed.
Lemma lem8248933 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : ((term168 A B P p P' g) = (term169 A B P p P' g)) = ((term169 A B P p P' g) = (term170 A B P p P' g)).
Proof. exact (MK_COMB (@lem8248931 A B P p P' g) (@lem8248932 A B P p P' g)). Qed.
Lemma lem8248934 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term169 A B P p P' g) = (term170 A B P p P' g).
Proof. exact (EQ_MP (@lem8248933 A B P p P' g) (@lem8248925 A B P p P' g)). Qed.
Lemma lem8248937 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248938 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term174 A B P p P' g a) = (term175 A B P p P' g a).
Proof. exact (MK_COMB (@lem8248934 A B P p P' g) (@lem8248937 P a)). Qed.
Lemma lem8248940 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8248941 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8248940 P Prop f y). Qed.
Lemma lem8248942 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term176 A B P p P' g a) = (term175 A B P p P' g a).
Proof. exact (@lem8248941 P (term170 A B P p P' g) a). Qed.
Lemma lem8248943 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (x : P) : (term175 A B P p P' g x) = (term177 A B P p P' g x).
Proof. exact (eq_refl (term175 A B P p P' g x)). Qed.
Lemma lem8248944 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term178 A B P p P' g) = (term170 A B P p P' g).
Proof. exact (fun_ext (fun x : P => @lem8248943 A B P p P' g x)). Qed.
Lemma lem8248945 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8248946 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term176 A B P p P' g a) = (term175 A B P p P' g a).
Proof. exact (MK_COMB (@lem8248944 A B P p P' g) (@lem8248945 P a)). Qed.
Lemma lem8248947 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8248948 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term179 A B P p P' g a) = (term180 A B P p P' g a).
Proof. exact (MK_COMB (@lem8248947) (@lem8248946 A B P p P' g a)). Qed.
Lemma lem8248949 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term175 A B P p P' g a) = (term177 A B P p P' g a).
Proof. exact (eq_refl (term175 A B P p P' g a)). Qed.
Lemma lem8248950 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term176 A B P p P' g a) = (term175 A B P p P' g a)) = ((term175 A B P p P' g a) = (term177 A B P p P' g a)).
Proof. exact (MK_COMB (@lem8248948 A B P p P' g a) (@lem8248949 A B P p P' g a)). Qed.
Lemma lem8248951 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term175 A B P p P' g a) = (term177 A B P p P' g a).
Proof. exact (EQ_MP (@lem8248950 A B P p P' g a) (@lem8248942 A B P p P' g a)). Qed.
Lemma lem8248954 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term174 A B P p P' g a) = (term177 A B P p P' g a).
Proof. exact (TRANS (@lem8248938 A B P p P' g a) (@lem8248951 A B P p P' g a)). Qed.
Lemma lem8248955 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term174 A B P p P' f a) = (term174 A B P p P' g a)) = ((term177 A B P p P' f a) = (term177 A B P p P' g a)).
Proof. exact (MK_COMB (@lem8248921 A B P p P' f a) (@lem8248954 A B P p P' g a)). Qed.
Lemma lem8248958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term183 A B P lt2 s f p P' g a) = (term184 A B P lt2 s f p P' g a).
Proof. exact (MK_COMB (@lem8248884 A B P lt2 s a f g) (@lem8248955 A B P f p P' g a)). Qed.
Lemma lem8248961 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term185 A B P lt2 s f p P' g) = (term186 A B P lt2 s f p P' g).
Proof. exact (fun_ext (fun a : P => @lem8248958 A B P lt2 s f p P' g a)). Qed.
Lemma lem8248962 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8248963 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term187 A B P lt2 s f p P' g) = (term188 A B P lt2 s f p P' g).
Proof. exact (MK_COMB (@lem8248962 P) (@lem8248961 A B P lt2 s f p P' g)). Qed.
Lemma lem8248968 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term189 A B P lt2 s f p P') = (term190 A B P lt2 s f p P').
Proof. exact (fun_ext (fun g : A -> B => @lem8248963 A B P lt2 s f p P' g)). Qed.
Lemma lem8248969 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8248970 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term191 A B P lt2 s f p P') = (term192 A B P lt2 s f p P').
Proof. exact (MK_COMB (@lem8248969 A B) (@lem8248968 A B P lt2 s f p P')). Qed.
Lemma lem8248975 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term193 A B P lt2 s p P') = (term194 A B P lt2 s p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8248970 A B P lt2 s f p P')). Qed.
Lemma lem8248976 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8248977 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term144 A B P lt2 s p P') = (term195 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8248976 A B) (@lem8248975 A B P lt2 s p P')). Qed.
Lemma lem8248982 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term143 A B P lt2 s p P') = (term195 A B P lt2 s p P').
Proof. exact (TRANS (@lem8248767 A B P lt2 s p P') (@lem8248977 A B P lt2 s p P')). Qed.
Lemma lem8248983 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8248984 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term196 A B P lt2 s p P') = (term197 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8248983) (@lem8248982 A B P lt2 s p P')). Qed.
Lemma lem8248987 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) : (term198 A B P lt2 p P' s h) = (term198 A B P lt2 p P' s h).
Proof. exact (eq_refl (term198 A B P lt2 p P' s h)). Qed.
Lemma lem8248988 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) : (term141 A B P lt2 p P' s h) = (term199 A B P lt2 p P' s h).
Proof. exact (MK_COMB (@lem8248984 A B P lt2 s p P') (@lem8248987 A B P lt2 p P' s h)). Qed.
Lemma lem8248991 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) : (term140 A B P lt2 p P' s h) = (term199 A B P lt2 p P' s h).
Proof. exact (TRANS (@lem8248761 A B P lt2 p P' s h) (@lem8248988 A B P lt2 p P' s h)). Qed.
Lemma lem8248992 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8248993 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) : (term200 A B P lt2 p P' s h) = (term201 A B P lt2 p P' s h).
Proof. exact (MK_COMB (@lem8248992) (@lem8248991 A B P lt2 p P' s h)). Qed.
Lemma lem8248995 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : (@superadmissible _143606 _143608 _143614 lt2 p s t) = (term136 _143606 _143608 _143614 lt2 p s t).
Proof. exact (EQ_MP (@lem8248692 _143606 _143608 _143614 lt2 p s t) (@lem8248691 _143606 _143608 _143614 lt2 p s t)). Qed.
Lemma lem8248996 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (t : type558 A B P) : (@superadmissible A B P lt2 p s t) = (term136 A B P lt2 p s t).
Proof. exact (@lem8248995 A B P lt2 p s t). Qed.
Lemma lem8248997 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term202 A B P lt2 p P' s k) = (term203 A B P lt2 p P' s k).
Proof. exact (@lem8248996 A B P lt2 (term204 A B P p P') s k). Qed.
Lemma lem8249001 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term128 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8248680 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8248679 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8249002 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (t : type560 A B P) : (@admissible A B A Prop P lt2 p s t) = (term137 A B P p lt2 s t).
Proof. exact (@lem8249001 A B A Prop P p lt2 s t). Qed.
Lemma lem8249003 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term205 A B P lt2 s p P') = (term206 A B P lt2 s p P').
Proof. exact (@lem8249002 A B P (term145 A B P) lt2 s (term204 A B P p P')). Qed.
Lemma lem8249021 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249022 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8249021 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8249023 {A B P : Type'} (f : A -> B) : (term148 A B P f) = (term149 A B P f).
Proof. exact (@lem8249022 A B P (term145 A B P) f). Qed.
Lemma lem8249024 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8249025 {A B P : Type'} : (term151 A B P) = (term145 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8249024 A B P f)). Qed.
Lemma lem8249026 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8249027 {A B P : Type'} (f : A -> B) : (term148 A B P f) = (term149 A B P f).
Proof. exact (MK_COMB (@lem8249025 A B P) (@lem8249026 A B f)). Qed.
Lemma lem8249028 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8249029 {A B P : Type'} (f : A -> B) : (term152 A B P f) = (term153 A B P f).
Proof. exact (MK_COMB (@lem8249028 P) (@lem8249027 A B P f)). Qed.
Lemma lem8249030 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8249031 {A B P : Type'} (f : A -> B) : ((term148 A B P f) = (term149 A B P f)) = ((term149 A B P f) = (term150 P)).
Proof. exact (MK_COMB (@lem8249029 A B P f) (@lem8249030 A B P f)). Qed.
Lemma lem8249032 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (EQ_MP (@lem8249031 A B P f) (@lem8249023 A B P f)). Qed.
Lemma lem8249033 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249034 {A B P : Type'} (f : A -> B) (a : P) : (term154 A B P f a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249032 A B P f) (@lem8249033 P a)). Qed.
Lemma lem8249036 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249037 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8249036 P Prop f y). Qed.
Lemma lem8249038 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (@lem8249037 P (term150 P) a). Qed.
Lemma lem8249039 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249040 {P : Type'} : (term158 P) = (term150 P).
Proof. exact (fun_ext (fun a : P => @lem8249039 P a)). Qed.
Lemma lem8249041 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249042 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249040 P) (@lem8249041 P a)). Qed.
Lemma lem8249043 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249044 {P : Type'} (a : P) : (term159 P a) = (term160 P a).
Proof. exact (MK_COMB (@lem8249043) (@lem8249042 P a)). Qed.
Lemma lem8249045 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249046 {P : Type'} (a : P) : ((term157 P a) = (term155 P a)) = ((term155 P a) = True).
Proof. exact (MK_COMB (@lem8249044 P a) (@lem8249045 P a)). Qed.
Lemma lem8249047 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (EQ_MP (@lem8249046 P a) (@lem8249038 P a)). Qed.
Lemma lem8249048 {A B P : Type'} (f : A -> B) (a : P) : (term154 A B P f a) = True.
Proof. exact (TRANS (@lem8249034 A B P f a) (@lem8249047 P a)). Qed.
Lemma lem8249049 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8249050 {A B P : Type'} (f : A -> B) (a : P) : (term161 A B P f a) = (and True).
Proof. exact (MK_COMB (@lem8249049) (@lem8249048 A B P f a)). Qed.
Lemma lem8249054 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249055 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8249054 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8249056 {A B P : Type'} (g : A -> B) : (term148 A B P g) = (term149 A B P g).
Proof. exact (@lem8249055 A B P (term145 A B P) g). Qed.
Lemma lem8249057 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8249058 {A B P : Type'} : (term151 A B P) = (term145 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8249057 A B P f)). Qed.
Lemma lem8249059 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8249060 {A B P : Type'} (g : A -> B) : (term148 A B P g) = (term149 A B P g).
Proof. exact (MK_COMB (@lem8249058 A B P) (@lem8249059 A B g)). Qed.
Lemma lem8249061 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8249062 {A B P : Type'} (g : A -> B) : (term152 A B P g) = (term153 A B P g).
Proof. exact (MK_COMB (@lem8249061 P) (@lem8249060 A B P g)). Qed.
Lemma lem8249063 {A B P : Type'} (g : A -> B) : (term149 A B P g) = (term150 P).
Proof. exact (eq_refl (term149 A B P g)). Qed.
Lemma lem8249064 {A B P : Type'} (g : A -> B) : ((term148 A B P g) = (term149 A B P g)) = ((term149 A B P g) = (term150 P)).
Proof. exact (MK_COMB (@lem8249062 A B P g) (@lem8249063 A B P g)). Qed.
Lemma lem8249065 {A B P : Type'} (g : A -> B) : (term149 A B P g) = (term150 P).
Proof. exact (EQ_MP (@lem8249064 A B P g) (@lem8249056 A B P g)). Qed.
Lemma lem8249066 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249067 {A B P : Type'} (g : A -> B) (a : P) : (term154 A B P g a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249065 A B P g) (@lem8249066 P a)). Qed.
Lemma lem8249069 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249070 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8249069 P Prop f y). Qed.
Lemma lem8249071 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (@lem8249070 P (term150 P) a). Qed.
Lemma lem8249072 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249073 {P : Type'} : (term158 P) = (term150 P).
Proof. exact (fun_ext (fun a : P => @lem8249072 P a)). Qed.
Lemma lem8249074 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249075 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249073 P) (@lem8249074 P a)). Qed.
Lemma lem8249076 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249077 {P : Type'} (a : P) : (term159 P a) = (term160 P a).
Proof. exact (MK_COMB (@lem8249076) (@lem8249075 P a)). Qed.
Lemma lem8249078 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249079 {P : Type'} (a : P) : ((term157 P a) = (term155 P a)) = ((term155 P a) = True).
Proof. exact (MK_COMB (@lem8249077 P a) (@lem8249078 P a)). Qed.
Lemma lem8249080 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (EQ_MP (@lem8249079 P a) (@lem8249071 P a)). Qed.
Lemma lem8249081 {A B P : Type'} (g : A -> B) (a : P) : (term154 A B P g a) = True.
Proof. exact (TRANS (@lem8249067 A B P g a) (@lem8249080 P a)). Qed.
Lemma lem8249082 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8249083 {A B P : Type'} (g : A -> B) (a : P) : (term161 A B P g a) = (and True).
Proof. exact (MK_COMB (@lem8249082) (@lem8249081 A B P g a)). Qed.
Lemma lem8249092 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (eq_refl (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249093 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term163 A B P lt2 s a f g) = (term164 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249083 A B P g a) (@lem8249092 A B P lt2 s a f g)). Qed.
Lemma lem8249095 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8249096 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term164 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (@lem8249095 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249105 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term163 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8249093 A B P lt2 s a f g) (@lem8249096 A B P lt2 s a f g)). Qed.
Lemma lem8249106 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term165 A B P lt2 s a f g) = (term164 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249050 A B P f a) (@lem8249105 A B P lt2 s a f g)). Qed.
Lemma lem8249108 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8249109 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term164 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (@lem8249108 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249118 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term165 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8249106 A B P lt2 s a f g) (@lem8249109 A B P lt2 s a f g)). Qed.
Lemma lem8249119 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249120 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term166 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249119) (@lem8249118 A B P lt2 s a f g)). Qed.
Lemma lem8249124 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249125 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8249124 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8249126 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term207 A B P p P' f) = (term208 A B P p P' f).
Proof. exact (@lem8249125 A B P (term204 A B P p P') f). Qed.
Lemma lem8249127 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (eq_refl (term208 A B P p P' f)). Qed.
Lemma lem8249128 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term210 A B P p P') = (term204 A B P p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8249127 A B P p P' f)). Qed.
Lemma lem8249129 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8249130 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term207 A B P p P' f) = (term208 A B P p P' f).
Proof. exact (MK_COMB (@lem8249128 A B P p P') (@lem8249129 A B f)). Qed.
Lemma lem8249131 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8249132 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term211 A B P p P' f) = (term212 A B P p P' f).
Proof. exact (MK_COMB (@lem8249131 P) (@lem8249130 A B P p P' f)). Qed.
Lemma lem8249133 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (eq_refl (term208 A B P p P' f)). Qed.
Lemma lem8249134 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : ((term207 A B P p P' f) = (term208 A B P p P' f)) = ((term208 A B P p P' f) = (term209 A B P p P' f)).
Proof. exact (MK_COMB (@lem8249132 A B P p P' f) (@lem8249133 A B P p P' f)). Qed.
Lemma lem8249135 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (EQ_MP (@lem8249134 A B P p P' f) (@lem8249126 A B P p P' f)). Qed.
Lemma lem8249138 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249139 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term213 A B P p P' f a) = (term214 A B P p P' f a).
Proof. exact (MK_COMB (@lem8249135 A B P p P' f) (@lem8249138 P a)). Qed.
Lemma lem8249141 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249142 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8249141 P Prop f y). Qed.
Lemma lem8249143 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term215 A B P p P' f a) = (term214 A B P p P' f a).
Proof. exact (@lem8249142 P (term209 A B P p P' f) a). Qed.
Lemma lem8249144 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (x : P) : (term214 A B P p P' f x) = (term216 A B P p P' f x).
Proof. exact (eq_refl (term214 A B P p P' f x)). Qed.
Lemma lem8249145 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term217 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (fun_ext (fun x : P => @lem8249144 A B P p P' f x)). Qed.
Lemma lem8249146 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249147 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term215 A B P p P' f a) = (term214 A B P p P' f a).
Proof. exact (MK_COMB (@lem8249145 A B P p P' f) (@lem8249146 P a)). Qed.
Lemma lem8249148 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249149 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term218 A B P p P' f a) = (term219 A B P p P' f a).
Proof. exact (MK_COMB (@lem8249148) (@lem8249147 A B P p P' f a)). Qed.
Lemma lem8249150 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term214 A B P p P' f a) = (term216 A B P p P' f a).
Proof. exact (eq_refl (term214 A B P p P' f a)). Qed.
Lemma lem8249151 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : ((term215 A B P p P' f a) = (term214 A B P p P' f a)) = ((term214 A B P p P' f a) = (term216 A B P p P' f a)).
Proof. exact (MK_COMB (@lem8249149 A B P p P' f a) (@lem8249150 A B P p P' f a)). Qed.
Lemma lem8249152 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term214 A B P p P' f a) = (term216 A B P p P' f a).
Proof. exact (EQ_MP (@lem8249151 A B P p P' f a) (@lem8249143 A B P p P' f a)). Qed.
Lemma lem8249155 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term213 A B P p P' f a) = (term216 A B P p P' f a).
Proof. exact (TRANS (@lem8249139 A B P p P' f a) (@lem8249152 A B P p P' f a)). Qed.
Lemma lem8249156 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249157 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term220 A B P p P' f a) = (term221 A B P p P' f a).
Proof. exact (MK_COMB (@lem8249156) (@lem8249155 A B P p P' f a)). Qed.
Lemma lem8249159 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249160 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8249159 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8249161 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term207 A B P p P' g) = (term208 A B P p P' g).
Proof. exact (@lem8249160 A B P (term204 A B P p P') g). Qed.
Lemma lem8249162 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (eq_refl (term208 A B P p P' f)). Qed.
Lemma lem8249163 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term210 A B P p P') = (term204 A B P p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8249162 A B P p P' f)). Qed.
Lemma lem8249164 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8249165 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term207 A B P p P' g) = (term208 A B P p P' g).
Proof. exact (MK_COMB (@lem8249163 A B P p P') (@lem8249164 A B g)). Qed.
Lemma lem8249166 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8249167 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term211 A B P p P' g) = (term212 A B P p P' g).
Proof. exact (MK_COMB (@lem8249166 P) (@lem8249165 A B P p P' g)). Qed.
Lemma lem8249168 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term208 A B P p P' g) = (term209 A B P p P' g).
Proof. exact (eq_refl (term208 A B P p P' g)). Qed.
Lemma lem8249169 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : ((term207 A B P p P' g) = (term208 A B P p P' g)) = ((term208 A B P p P' g) = (term209 A B P p P' g)).
Proof. exact (MK_COMB (@lem8249167 A B P p P' g) (@lem8249168 A B P p P' g)). Qed.
Lemma lem8249170 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term208 A B P p P' g) = (term209 A B P p P' g).
Proof. exact (EQ_MP (@lem8249169 A B P p P' g) (@lem8249161 A B P p P' g)). Qed.
Lemma lem8249173 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249174 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term213 A B P p P' g a) = (term214 A B P p P' g a).
Proof. exact (MK_COMB (@lem8249170 A B P p P' g) (@lem8249173 P a)). Qed.
Lemma lem8249176 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249177 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8249176 P Prop f y). Qed.
Lemma lem8249178 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term215 A B P p P' g a) = (term214 A B P p P' g a).
Proof. exact (@lem8249177 P (term209 A B P p P' g) a). Qed.
Lemma lem8249179 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (x : P) : (term214 A B P p P' g x) = (term216 A B P p P' g x).
Proof. exact (eq_refl (term214 A B P p P' g x)). Qed.
Lemma lem8249180 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term217 A B P p P' g) = (term209 A B P p P' g).
Proof. exact (fun_ext (fun x : P => @lem8249179 A B P p P' g x)). Qed.
Lemma lem8249181 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249182 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term215 A B P p P' g a) = (term214 A B P p P' g a).
Proof. exact (MK_COMB (@lem8249180 A B P p P' g) (@lem8249181 P a)). Qed.
Lemma lem8249183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249184 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term218 A B P p P' g a) = (term219 A B P p P' g a).
Proof. exact (MK_COMB (@lem8249183) (@lem8249182 A B P p P' g a)). Qed.
Lemma lem8249185 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term214 A B P p P' g a) = (term216 A B P p P' g a).
Proof. exact (eq_refl (term214 A B P p P' g a)). Qed.
Lemma lem8249186 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term215 A B P p P' g a) = (term214 A B P p P' g a)) = ((term214 A B P p P' g a) = (term216 A B P p P' g a)).
Proof. exact (MK_COMB (@lem8249184 A B P p P' g a) (@lem8249185 A B P p P' g a)). Qed.
Lemma lem8249187 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term214 A B P p P' g a) = (term216 A B P p P' g a).
Proof. exact (EQ_MP (@lem8249186 A B P p P' g a) (@lem8249178 A B P p P' g a)). Qed.
Lemma lem8249190 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term213 A B P p P' g a) = (term216 A B P p P' g a).
Proof. exact (TRANS (@lem8249174 A B P p P' g a) (@lem8249187 A B P p P' g a)). Qed.
Lemma lem8249191 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term213 A B P p P' f a) = (term213 A B P p P' g a)) = ((term216 A B P p P' f a) = (term216 A B P p P' g a)).
Proof. exact (MK_COMB (@lem8249157 A B P p P' f a) (@lem8249190 A B P p P' g a)). Qed.
Lemma lem8249194 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term222 A B P lt2 s f p P' g a) = (term223 A B P lt2 s f p P' g a).
Proof. exact (MK_COMB (@lem8249120 A B P lt2 s a f g) (@lem8249191 A B P f p P' g a)). Qed.
Lemma lem8249197 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term224 A B P lt2 s f p P' g) = (term225 A B P lt2 s f p P' g).
Proof. exact (fun_ext (fun a : P => @lem8249194 A B P lt2 s f p P' g a)). Qed.
Lemma lem8249198 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8249199 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term226 A B P lt2 s f p P' g) = (term227 A B P lt2 s f p P' g).
Proof. exact (MK_COMB (@lem8249198 P) (@lem8249197 A B P lt2 s f p P' g)). Qed.
Lemma lem8249204 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term228 A B P lt2 s f p P') = (term229 A B P lt2 s f p P').
Proof. exact (fun_ext (fun g : A -> B => @lem8249199 A B P lt2 s f p P' g)). Qed.
Lemma lem8249205 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249206 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term230 A B P lt2 s f p P') = (term231 A B P lt2 s f p P').
Proof. exact (MK_COMB (@lem8249205 A B) (@lem8249204 A B P lt2 s f p P')). Qed.
Lemma lem8249211 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term232 A B P lt2 s p P') = (term233 A B P lt2 s p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8249206 A B P lt2 s f p P')). Qed.
Lemma lem8249212 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249213 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term206 A B P lt2 s p P') = (term234 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249212 A B) (@lem8249211 A B P lt2 s p P')). Qed.
Lemma lem8249218 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term205 A B P lt2 s p P') = (term234 A B P lt2 s p P').
Proof. exact (TRANS (@lem8249003 A B P lt2 s p P') (@lem8249213 A B P lt2 s p P')). Qed.
Lemma lem8249219 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249220 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term235 A B P lt2 s p P') = (term236 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249219) (@lem8249218 A B P lt2 s p P')). Qed.
Lemma lem8249223 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term237 A B P lt2 p P' s k) = (term237 A B P lt2 p P' s k).
Proof. exact (eq_refl (term237 A B P lt2 p P' s k)). Qed.
Lemma lem8249224 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term203 A B P lt2 p P' s k) = (term238 A B P lt2 p P' s k).
Proof. exact (MK_COMB (@lem8249220 A B P lt2 s p P') (@lem8249223 A B P lt2 p P' s k)). Qed.
Lemma lem8249227 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term202 A B P lt2 p P' s k) = (term238 A B P lt2 p P' s k).
Proof. exact (TRANS (@lem8248997 A B P lt2 p P' s k) (@lem8249224 A B P lt2 p P' s k)). Qed.
Lemma lem8249228 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term239 A B P h lt2 p P' s k) = (term240 A B P h lt2 p P' s k).
Proof. exact (MK_COMB (@lem8248993 A B P lt2 p P' s h) (@lem8249227 A B P lt2 p P' s k)). Qed.
Lemma lem8249231 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term241 A B P h lt2 p P' s k) = (term242 A B P h lt2 p P' s k).
Proof. exact (MK_COMB (@lem8248755 A B P p lt2 s P') (@lem8249228 A B P h lt2 p P' s k)). Qed.
Lemma lem8249234 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249235 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) : (term243 A B P h lt2 p P' s k) = (term244 A B P h lt2 p P' s k).
Proof. exact (MK_COMB (@lem8249234) (@lem8249231 A B P h lt2 p P' s k)). Qed.
Lemma lem8249237 {_143606 _143608 _143614 : Type'} (lt2 : type1402 _143606) (p : type560 _143606 _143608 _143614) (s : _143614 -> _143606) (t : type558 _143606 _143608 _143614) : (@superadmissible _143606 _143608 _143614 lt2 p s t) = (term136 _143606 _143608 _143614 lt2 p s t).
Proof. exact (EQ_MP (@lem8248692 _143606 _143608 _143614 lt2 p s t) (@lem8248691 _143606 _143608 _143614 lt2 p s t)). Qed.
Lemma lem8249238 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (t : type558 A B P) : (@superadmissible A B P lt2 p s t) = (term136 A B P lt2 p s t).
Proof. exact (@lem8249237 A B P lt2 p s t). Qed.
Lemma lem8249239 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term245 A B P lt2 p s P' h k) = (term246 A B P lt2 p s P' h k).
Proof. exact (@lem8249238 A B P lt2 p s (term247 A B P P' h k)). Qed.
Lemma lem8249243 {_143449 _143452 _143456 _143457 _143462 : Type'} (p : type800 _143452 _143456 _143462) (lt2 : type1470 _143449 _143456) (s : _143462 -> _143449) (t : type801 _143452 _143456 _143457 _143462) : (@admissible _143449 _143452 _143456 _143457 _143462 lt2 p s t) = (term128 _143449 _143452 _143456 _143457 _143462 p lt2 s t).
Proof. exact (EQ_MP (@lem8248680 _143449 _143452 _143456 _143457 _143462 p lt2 s t) (@lem8248679 _143449 _143452 _143456 _143457 _143462 p lt2 s t)). Qed.
Lemma lem8249244 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (t : type560 A B P) : (@admissible A B A Prop P lt2 p s t) = (term137 A B P p lt2 s t).
Proof. exact (@lem8249243 A B A Prop P p lt2 s t). Qed.
Lemma lem8249245 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term248 A B P lt2 s p) = (term249 A B P lt2 s p).
Proof. exact (@lem8249244 A B P (term145 A B P) lt2 s p). Qed.
Lemma lem8249263 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249264 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8249263 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8249265 {A B P : Type'} (f : A -> B) : (term148 A B P f) = (term149 A B P f).
Proof. exact (@lem8249264 A B P (term145 A B P) f). Qed.
Lemma lem8249266 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8249267 {A B P : Type'} : (term151 A B P) = (term145 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8249266 A B P f)). Qed.
Lemma lem8249268 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8249269 {A B P : Type'} (f : A -> B) : (term148 A B P f) = (term149 A B P f).
Proof. exact (MK_COMB (@lem8249267 A B P) (@lem8249268 A B f)). Qed.
Lemma lem8249270 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8249271 {A B P : Type'} (f : A -> B) : (term152 A B P f) = (term153 A B P f).
Proof. exact (MK_COMB (@lem8249270 P) (@lem8249269 A B P f)). Qed.
Lemma lem8249272 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8249273 {A B P : Type'} (f : A -> B) : ((term148 A B P f) = (term149 A B P f)) = ((term149 A B P f) = (term150 P)).
Proof. exact (MK_COMB (@lem8249271 A B P f) (@lem8249272 A B P f)). Qed.
Lemma lem8249274 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (EQ_MP (@lem8249273 A B P f) (@lem8249265 A B P f)). Qed.
Lemma lem8249275 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249276 {A B P : Type'} (f : A -> B) (a : P) : (term154 A B P f a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249274 A B P f) (@lem8249275 P a)). Qed.
Lemma lem8249278 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249279 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8249278 P Prop f y). Qed.
Lemma lem8249280 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (@lem8249279 P (term150 P) a). Qed.
Lemma lem8249281 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249282 {P : Type'} : (term158 P) = (term150 P).
Proof. exact (fun_ext (fun a : P => @lem8249281 P a)). Qed.
Lemma lem8249283 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249284 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249282 P) (@lem8249283 P a)). Qed.
Lemma lem8249285 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249286 {P : Type'} (a : P) : (term159 P a) = (term160 P a).
Proof. exact (MK_COMB (@lem8249285) (@lem8249284 P a)). Qed.
Lemma lem8249287 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249288 {P : Type'} (a : P) : ((term157 P a) = (term155 P a)) = ((term155 P a) = True).
Proof. exact (MK_COMB (@lem8249286 P a) (@lem8249287 P a)). Qed.
Lemma lem8249289 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (EQ_MP (@lem8249288 P a) (@lem8249280 P a)). Qed.
Lemma lem8249290 {A B P : Type'} (f : A -> B) (a : P) : (term154 A B P f a) = True.
Proof. exact (TRANS (@lem8249276 A B P f a) (@lem8249289 P a)). Qed.
Lemma lem8249291 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8249292 {A B P : Type'} (f : A -> B) (a : P) : (term161 A B P f a) = (and True).
Proof. exact (MK_COMB (@lem8249291) (@lem8249290 A B P f a)). Qed.
Lemma lem8249296 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249297 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8249296 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8249298 {A B P : Type'} (g : A -> B) : (term148 A B P g) = (term149 A B P g).
Proof. exact (@lem8249297 A B P (term145 A B P) g). Qed.
Lemma lem8249299 {A B P : Type'} (f : A -> B) : (term149 A B P f) = (term150 P).
Proof. exact (eq_refl (term149 A B P f)). Qed.
Lemma lem8249300 {A B P : Type'} : (term151 A B P) = (term145 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8249299 A B P f)). Qed.
Lemma lem8249301 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8249302 {A B P : Type'} (g : A -> B) : (term148 A B P g) = (term149 A B P g).
Proof. exact (MK_COMB (@lem8249300 A B P) (@lem8249301 A B g)). Qed.
Lemma lem8249303 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8249304 {A B P : Type'} (g : A -> B) : (term152 A B P g) = (term153 A B P g).
Proof. exact (MK_COMB (@lem8249303 P) (@lem8249302 A B P g)). Qed.
Lemma lem8249305 {A B P : Type'} (g : A -> B) : (term149 A B P g) = (term150 P).
Proof. exact (eq_refl (term149 A B P g)). Qed.
Lemma lem8249306 {A B P : Type'} (g : A -> B) : ((term148 A B P g) = (term149 A B P g)) = ((term149 A B P g) = (term150 P)).
Proof. exact (MK_COMB (@lem8249304 A B P g) (@lem8249305 A B P g)). Qed.
Lemma lem8249307 {A B P : Type'} (g : A -> B) : (term149 A B P g) = (term150 P).
Proof. exact (EQ_MP (@lem8249306 A B P g) (@lem8249298 A B P g)). Qed.
Lemma lem8249308 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249309 {A B P : Type'} (g : A -> B) (a : P) : (term154 A B P g a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249307 A B P g) (@lem8249308 P a)). Qed.
Lemma lem8249311 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8249312 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8249311 P Prop f y). Qed.
Lemma lem8249313 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (@lem8249312 P (term150 P) a). Qed.
Lemma lem8249314 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249315 {P : Type'} : (term158 P) = (term150 P).
Proof. exact (fun_ext (fun a : P => @lem8249314 P a)). Qed.
Lemma lem8249316 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8249317 {P : Type'} (a : P) : (term157 P a) = (term155 P a).
Proof. exact (MK_COMB (@lem8249315 P) (@lem8249316 P a)). Qed.
Lemma lem8249318 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8249319 {P : Type'} (a : P) : (term159 P a) = (term160 P a).
Proof. exact (MK_COMB (@lem8249318) (@lem8249317 P a)). Qed.
Lemma lem8249320 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (eq_refl (term155 P a)). Qed.
Lemma lem8249321 {P : Type'} (a : P) : ((term157 P a) = (term155 P a)) = ((term155 P a) = True).
Proof. exact (MK_COMB (@lem8249319 P a) (@lem8249320 P a)). Qed.
Lemma lem8249322 {P : Type'} (a : P) : (term155 P a) = True.
Proof. exact (EQ_MP (@lem8249321 P a) (@lem8249313 P a)). Qed.
Lemma lem8249323 {A B P : Type'} (g : A -> B) (a : P) : (term154 A B P g a) = True.
Proof. exact (TRANS (@lem8249309 A B P g a) (@lem8249322 P a)). Qed.
Lemma lem8249324 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8249325 {A B P : Type'} (g : A -> B) (a : P) : (term161 A B P g a) = (and True).
Proof. exact (MK_COMB (@lem8249324) (@lem8249323 A B P g a)). Qed.
Lemma lem8249334 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (eq_refl (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249335 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term163 A B P lt2 s a f g) = (term164 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249325 A B P g a) (@lem8249334 A B P lt2 s a f g)). Qed.
Lemma lem8249337 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8249338 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term164 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (@lem8249337 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249347 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term163 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8249335 A B P lt2 s a f g) (@lem8249338 A B P lt2 s a f g)). Qed.
Lemma lem8249348 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term165 A B P lt2 s a f g) = (term164 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249292 A B P f a) (@lem8249347 A B P lt2 s a f g)). Qed.
Lemma lem8249350 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8249351 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term164 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (@lem8249350 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249360 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term165 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8249348 A B P lt2 s a f g) (@lem8249351 A B P lt2 s a f g)). Qed.
Lemma lem8249361 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249362 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term166 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249361) (@lem8249360 A B P lt2 s a f g)). Qed.
Lemma lem8249365 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8249366 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term250 A B P lt2 s f p g a) = (term251 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8249362 A B P lt2 s a f g) (@lem8249365 A B P f p g a)). Qed.
Lemma lem8249369 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term252 A B P lt2 s f p g) = (term253 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8249366 A B P lt2 s f p g a)). Qed.
Lemma lem8249370 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8249371 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term254 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8249370 P) (@lem8249369 A B P lt2 s f p g)). Qed.
Lemma lem8249376 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term256 A B P lt2 s f p) = (term257 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8249371 A B P lt2 s f p g)). Qed.
Lemma lem8249377 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249378 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term258 A B P lt2 s f p) = (term259 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8249377 A B) (@lem8249376 A B P lt2 s f p)). Qed.
Lemma lem8249383 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term260 A B P lt2 s p) = (term261 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8249378 A B P lt2 s f p)). Qed.
Lemma lem8249384 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249385 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term249 A B P lt2 s p) = (term262 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8249384 A B) (@lem8249383 A B P lt2 s p)). Qed.
Lemma lem8249390 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term248 A B P lt2 s p) = (term262 A B P lt2 s p).
Proof. exact (TRANS (@lem8249245 A B P lt2 s p) (@lem8249385 A B P lt2 s p)). Qed.
Lemma lem8249391 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249392 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term263 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8249391) (@lem8249390 A B P lt2 s p)). Qed.
Lemma lem8249393 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term265 A B P lt2 p s P' h k) = (term265 A B P lt2 p s P' h k).
Proof. exact (eq_refl (term265 A B P lt2 p s P' h k)). Qed.
Lemma lem8249394 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term246 A B P lt2 p s P' h k) = (term266 A B P lt2 p s P' h k).
Proof. exact (MK_COMB (@lem8249392 A B P lt2 s p) (@lem8249393 A B P lt2 p s P' h k)). Qed.
Lemma lem8249397 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term245 A B P lt2 p s P' h k) = (term266 A B P lt2 p s P' h k).
Proof. exact (TRANS (@lem8249239 A B P lt2 p s P' h k) (@lem8249394 A B P lt2 p s P' h k)). Qed.
Lemma lem8249398 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term267 A B P lt2 p s P' h k) = (term268 A B P lt2 p s P' h k).
Proof. exact (MK_COMB (@lem8249235 A B P h lt2 p P' s k) (@lem8249397 A B P lt2 p s P' h k)). Qed.
Lemma lem8249401 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) : (term269 A B P lt2 p s P' h) = (term270 A B P lt2 p s P' h).
Proof. exact (fun_ext (fun k : type558 A B P => @lem8249398 A B P lt2 p s P' h k)). Qed.
Lemma lem8249402 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8249403 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) : (term271 A B P lt2 p s P' h) = (term272 A B P lt2 p s P' h).
Proof. exact (MK_COMB (@lem8249402 A B P) (@lem8249401 A B P lt2 p s P' h)). Qed.
Lemma lem8249408 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) : (term273 A B P lt2 p s P') = (term274 A B P lt2 p s P').
Proof. exact (fun_ext (fun h : type558 A B P => @lem8249403 A B P lt2 p s P' h)). Qed.
Lemma lem8249409 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8249410 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) : (term275 A B P lt2 p s P') = (term276 A B P lt2 p s P').
Proof. exact (MK_COMB (@lem8249409 A B P) (@lem8249408 A B P lt2 p s P')). Qed.
Lemma lem8249415 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) : (term277 A B P lt2 p P') = (term278 A B P lt2 p P').
Proof. exact (fun_ext (fun s : P -> A => @lem8249410 A B P lt2 p s P')). Qed.
Lemma lem8249416 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8249417 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) : (term279 A B P lt2 p P') = (term280 A B P lt2 p P').
Proof. exact (MK_COMB (@lem8249416 A P) (@lem8249415 A B P lt2 p P')). Qed.
Lemma lem8249422 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) : (term281 A B P lt2 p) = (term282 A B P lt2 p).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8249417 A B P lt2 p P')). Qed.
Lemma lem8249423 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8249424 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) : (term283 A B P lt2 p) = (term284 A B P lt2 p).
Proof. exact (MK_COMB (@lem8249423 A B P) (@lem8249422 A B P lt2 p)). Qed.
Lemma lem8249429 {A B P : Type'} (lt2 : type1402 A) : (term285 A B P lt2) = (term286 A B P lt2).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8249424 A B P lt2 p)). Qed.
Lemma lem8249430 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8249431 {A B P : Type'} (lt2 : type1402 A) : (term287 A B P lt2) = (term288 A B P lt2).
Proof. exact (MK_COMB (@lem8249430 A B P) (@lem8249429 A B P lt2)). Qed.
Lemma lem8249436 {A B P : Type'} : (term289 A B P) = (term290 A B P).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8249431 A B P lt2)). Qed.
Lemma lem8249437 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8249438 {A B P : Type'} : (term291 A B P) = (term292 A B P).
Proof. exact (MK_COMB (@lem8249437 A) (@lem8249436 A B P)). Qed.
Lemma lem8249443 {A B P : Type'} : (term292 A B P) = (term291 A B P).
Proof. exact (SYM (@lem8249438 A B P)). Qed.
Lemma lem8249444 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term242 A B P h lt2 p P' s k) : term242 A B P h lt2 p P' s k.
Proof. exact (h1). Qed.
Lemma lem8249445 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term240 A B P h lt2 p P' s k) : term240 A B P h lt2 p P' s k.
Proof. exact (h1). Qed.
Lemma lem8249446 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term137 A B P p lt2 s P'.
Proof. exact (h1). Qed.
Lemma lem8249447 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term240 A B P h lt2 p P' s k) : term240 A B P h lt2 p P' s k.
Proof. exact (h1). Qed.
Lemma lem8249448 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term262 A B P lt2 s p.
Proof. exact (h1). Qed.
Lemma lem8249449 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term238 A B P lt2 p P' s k) : term238 A B P lt2 p P' s k.
Proof. exact (h1). Qed.
Lemma lem8249450 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) (h1 : term199 A B P lt2 p P' s h) : term199 A B P lt2 p P' s h.
Proof. exact (h1). Qed.
Lemma lem8249452 (p : Prop) (q : Prop) (r : Prop) : term293 p q r.
Proof. exact (@lem137 p q r (@lem129 p q r)). Qed.
Lemma lem8249453 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : term294 A B P lt2 p s P' h k.
Proof. exact (@lem8249452 (term234 A B P lt2 s p P') (term237 A B P lt2 p P' s k) (term295 A B P lt2 p s P' h k)). Qed.
Lemma lem8249455 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8249456 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term234 A B P lt2 s p P') = (term297 A B P lt2 s p P').
Proof. exact (@lem8249455 (term234 A B P lt2 s p P')). Qed.
Lemma lem8249457 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term297 A B P lt2 s p P') = (term234 A B P lt2 s p P').
Proof. exact (SYM (@lem8249456 A B P lt2 s p P')). Qed.
Lemma lem8249458 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term298 A B P lt2 s p P') : term298 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8249461 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term299 A B P lt2 s p P') : term299 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8249462 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term300 A B P lt2 s p P'.
Proof. exact (fun h0 : term299 A B P lt2 s p P' => @lem8249461 A B P lt2 s p P' h0). Qed.
Lemma lem8249463 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term300 A B P lt2 s p P') : term300 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8249464 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term299 A B P lt2 s p P') : term299 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8249465 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term299 A B P lt2 s p P') (h2 : term300 A B P lt2 s p P') : term299 A B P lt2 s p P'.
Proof. exact (@lem8249463 A B P lt2 s p P' h2 (@lem8249464 A B P lt2 s p P' h1)). Qed.
Lemma lem8249466 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term299 A B P lt2 s p P') : term301 A B P lt2 s p P'.
Proof. exact (fun h0 : term300 A B P lt2 s p P' => @lem8249465 A B P lt2 s p P' h1 h0). Qed.
Lemma lem8249467 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term300 A B P lt2 s p P') : term300 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8249468 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term299 A B P lt2 s p P') (h2 : term300 A B P lt2 s p P') : term299 A B P lt2 s p P'.
Proof. exact (@lem8249466 A B P lt2 s p P' h1 (@lem8249467 A B P lt2 s p P' h2)). Qed.
Lemma lem8249469 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term300 A B P lt2 s p P') : term300 A B P lt2 s p P'.
Proof. exact (fun h0 : term299 A B P lt2 s p P' => @lem8249468 A B P lt2 s p P' h0 h1). Qed.
Lemma lem8249470 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term302 A B P lt2 s p P'.
Proof. exact (fun h0 : term300 A B P lt2 s p P' => @lem8249469 A B P lt2 s p P' h0). Qed.
Lemma lem8249473 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term300 A B P lt2 s p P'.
Proof. exact (@lem8249470 A B P lt2 s p P' (@lem8249462 A B P lt2 s p P')). Qed.
Lemma lem8249474 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term300 A B P lt2 s p P'.
Proof. exact (@lem8249473 A B P lt2 s p P'). Qed.
Lemma lem8249540 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8249541 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term297 A B P lt2 s p P') = (term303 A B P lt2 s p P').
Proof. exact (@lem8249540 (term298 A B P lt2 s p P')). Qed.
Lemma lem8249543 (t : Prop) : (term304 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8249544 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term303 A B P lt2 s p P') = (term234 A B P lt2 s p P').
Proof. exact (@lem8249543 (term234 A B P lt2 s p P')). Qed.
Lemma lem8249549 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term297 A B P lt2 s p P') = (term234 A B P lt2 s p P').
Proof. exact (TRANS (@lem8249541 A B P lt2 s p P') (@lem8249544 A B P lt2 s p P')). Qed.
Lemma lem8249570 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (eq_refl (term264 A B P lt2 s p)). Qed.
Lemma lem8249571 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term305 A B P lt2 s p P') = (term306 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249570 A B P lt2 s p) (@lem8249549 A B P lt2 s p P')). Qed.
Lemma lem8249574 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (eq_refl (term307 A B P p lt2 s P')). Qed.
Lemma lem8249575 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term299 A B P lt2 s p P') = (term308 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249574 A B P p lt2 s P') (@lem8249571 A B P lt2 s p P')). Qed.
Lemma lem8249578 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term309 A B P s p P') = (term310 A B P s p P').
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8249575 A B P lt2 s p P')). Qed.
Lemma lem8249579 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8249580 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term311 A B P s p P') = (term312 A B P s p P').
Proof. exact (MK_COMB (@lem8249579 A) (@lem8249578 A B P s p P')). Qed.
Lemma lem8249585 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term313 A B P p P') = (term314 A B P p P').
Proof. exact (fun_ext (fun s : P -> A => @lem8249580 A B P s p P')). Qed.
Lemma lem8249586 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8249587 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term315 A B P p P') = (term316 A B P p P').
Proof. exact (MK_COMB (@lem8249586 A P) (@lem8249585 A B P p P')). Qed.
Lemma lem8249592 {A B P : Type'} (P' : type560 A B P) : (term317 A B P P') = (term318 A B P P').
Proof. exact (fun_ext (fun p : type560 A B P => @lem8249587 A B P p P')). Qed.
Lemma lem8249593 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8249594 {A B P : Type'} (P' : type560 A B P) : (term319 A B P P') = (term320 A B P P').
Proof. exact (MK_COMB (@lem8249593 A B P) (@lem8249592 A B P P')). Qed.
Lemma lem8249599 {A B P : Type'} : (term321 A B P) = (term322 A B P).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8249594 A B P P')). Qed.
Lemma lem8249600 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8249609 {A B P : Type'} : (term323 A B P) = (term324 A B P).
Proof. exact (MK_COMB (@lem8249600 A B P) (@lem8249599 A B P)). Qed.
Lemma lem8249626 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term216 A B P p P' f a) = (term216 A B P p P' g a)) = ((term216 A B P p P' f a) = (term216 A B P p P' g a)).
Proof. exact (eq_refl ((term216 A B P p P' f a) = (term216 A B P p P' g a))). Qed.
Lemma lem8249631 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8249632 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8249631 A B P lt2 s a f g z)). Qed.
Lemma lem8249633 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8249634 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249633 A) (@lem8249632 A B P lt2 s a f g)). Qed.
Lemma lem8249635 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249636 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249635) (@lem8249634 A B P lt2 s a f g)). Qed.
Lemma lem8249637 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term223 A B P lt2 s f p P' g a) = (term223 A B P lt2 s f p P' g a).
Proof. exact (MK_COMB (@lem8249636 A B P lt2 s a f g) (@lem8249626 A B P f p P' g a)). Qed.
Lemma lem8249638 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term225 A B P lt2 s f p P' g) = (term225 A B P lt2 s f p P' g).
Proof. exact (fun_ext (fun a : P => @lem8249637 A B P lt2 s f p P' g a)). Qed.
Lemma lem8249639 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8249640 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term227 A B P lt2 s f p P' g) = (term227 A B P lt2 s f p P' g).
Proof. exact (MK_COMB (@lem8249639 P) (@lem8249638 A B P lt2 s f p P' g)). Qed.
Lemma lem8249641 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term229 A B P lt2 s f p P') = (term229 A B P lt2 s f p P').
Proof. exact (fun_ext (fun g : A -> B => @lem8249640 A B P lt2 s f p P' g)). Qed.
Lemma lem8249642 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249643 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term231 A B P lt2 s f p P') = (term231 A B P lt2 s f p P').
Proof. exact (MK_COMB (@lem8249642 A B) (@lem8249641 A B P lt2 s f p P')). Qed.
Lemma lem8249644 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term233 A B P lt2 s p P') = (term233 A B P lt2 s p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8249643 A B P lt2 s f p P')). Qed.
Lemma lem8249645 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249646 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term234 A B P lt2 s p P') = (term234 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249645 A B) (@lem8249644 A B P lt2 s p P')). Qed.
Lemma lem8249651 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8249656 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8249657 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8249656 A B P lt2 s a f g z)). Qed.
Lemma lem8249658 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8249659 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249658 A) (@lem8249657 A B P lt2 s a f g)). Qed.
Lemma lem8249660 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249661 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249660) (@lem8249659 A B P lt2 s a f g)). Qed.
Lemma lem8249662 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term251 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8249661 A B P lt2 s a f g) (@lem8249651 A B P f p g a)). Qed.
Lemma lem8249663 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term253 A B P lt2 s f p g) = (term253 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8249662 A B P lt2 s f p g a)). Qed.
Lemma lem8249664 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8249665 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term255 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8249664 P) (@lem8249663 A B P lt2 s f p g)). Qed.
Lemma lem8249666 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term257 A B P lt2 s f p) = (term257 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8249665 A B P lt2 s f p g)). Qed.
Lemma lem8249667 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249668 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term259 A B P lt2 s f p) = (term259 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8249667 A B) (@lem8249666 A B P lt2 s f p)). Qed.
Lemma lem8249669 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term261 A B P lt2 s p) = (term261 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8249668 A B P lt2 s f p)). Qed.
Lemma lem8249670 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249671 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term262 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8249670 A B) (@lem8249669 A B P lt2 s p)). Qed.
Lemma lem8249672 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249673 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8249672) (@lem8249671 A B P lt2 s p)). Qed.
Lemma lem8249674 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term306 A B P lt2 s p P') = (term306 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249673 A B P lt2 s p) (@lem8249646 A B P lt2 s p P')). Qed.
Lemma lem8249679 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = ((P' f a) = (P' g a)).
Proof. exact (eq_refl ((P' f a) = (P' g a))). Qed.
Lemma lem8249684 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8249685 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8249684 A B P lt2 s a f g z)). Qed.
Lemma lem8249686 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8249687 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249686 A) (@lem8249685 A B P lt2 s a f g)). Qed.
Lemma lem8249690 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8249691 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term328 A B P p lt2 s a f g) = (term328 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8249690 A B P p g a) (@lem8249687 A B P lt2 s a f g)). Qed.
Lemma lem8249694 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8249695 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term329 A B P p lt2 s a f g) = (term329 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8249694 A B P p f a) (@lem8249691 A B P p lt2 s a f g)). Qed.
Lemma lem8249696 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249697 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term330 A B P p lt2 s a f g) = (term330 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8249696) (@lem8249695 A B P p lt2 s a f g)). Qed.
Lemma lem8249698 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term331 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8249697 A B P p lt2 s a f g) (@lem8249679 A B P f P' g a)). Qed.
Lemma lem8249699 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term332 A B P p lt2 s f P' g) = (term332 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8249698 A B P p lt2 s f P' g a)). Qed.
Lemma lem8249700 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8249701 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term333 A B P p lt2 s f P' g) = (term333 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8249700 P) (@lem8249699 A B P p lt2 s f P' g)). Qed.
Lemma lem8249702 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term334 A B P p lt2 s f P') = (term334 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8249701 A B P p lt2 s f P' g)). Qed.
Lemma lem8249703 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249704 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term335 A B P p lt2 s f P') = (term335 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8249703 A B) (@lem8249702 A B P p lt2 s f P')). Qed.
Lemma lem8249705 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term336 A B P p lt2 s P') = (term336 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8249704 A B P p lt2 s f P')). Qed.
Lemma lem8249706 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249707 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term137 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8249706 A B) (@lem8249705 A B P p lt2 s P')). Qed.
Lemma lem8249708 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8249709 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8249708) (@lem8249707 A B P p lt2 s P')). Qed.
Lemma lem8249710 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term308 A B P lt2 s p P') = (term308 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8249709 A B P p lt2 s P') (@lem8249674 A B P lt2 s p P')). Qed.
Lemma lem8249711 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term310 A B P s p P') = (term310 A B P s p P').
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8249710 A B P lt2 s p P')). Qed.
Lemma lem8249712 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8249713 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term312 A B P s p P') = (term312 A B P s p P').
Proof. exact (MK_COMB (@lem8249712 A) (@lem8249711 A B P s p P')). Qed.
Lemma lem8249714 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term314 A B P p P') = (term314 A B P p P').
Proof. exact (fun_ext (fun s : P -> A => @lem8249713 A B P s p P')). Qed.
Lemma lem8249715 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8249716 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term316 A B P p P') = (term316 A B P p P').
Proof. exact (MK_COMB (@lem8249715 A P) (@lem8249714 A B P p P')). Qed.
Lemma lem8249717 {A B P : Type'} (P' : type560 A B P) : (term318 A B P P') = (term318 A B P P').
Proof. exact (fun_ext (fun p : type560 A B P => @lem8249716 A B P p P')). Qed.
Lemma lem8249718 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8249719 {A B P : Type'} (P' : type560 A B P) : (term320 A B P P') = (term320 A B P P').
Proof. exact (MK_COMB (@lem8249718 A B P) (@lem8249717 A B P P')). Qed.
Lemma lem8249720 {A B P : Type'} : (term322 A B P) = (term322 A B P).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8249719 A B P P')). Qed.
Lemma lem8249721 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8249722 {A B P : Type'} : (term324 A B P) = (term324 A B P).
Proof. exact (MK_COMB (@lem8249721 A B P) (@lem8249720 A B P)). Qed.
Lemma lem8249845 {A B P : Type'} : (term323 A B P) = (term324 A B P).
Proof. exact (TRANS (@lem8249609 A B P) (@lem8249722 A B P)). Qed.
Lemma lem8249846 {A B P : Type'} : (term324 A B P) = (term323 A B P).
Proof. exact (SYM (@lem8249845 A B P)). Qed.
Lemma lem8249847 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term137 A B P p lt2 s P'.
Proof. exact (h1). Qed.
Lemma lem8249848 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term262 A B P lt2 s p.
Proof. exact (h1). Qed.
Lemma lem8249849 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term162 A B P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8249851 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8249852 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term216 A B P p P' f a) = (term216 A B P p P' g a)) = (term337 A B P f p P' g a).
Proof. exact (@lem8249851 ((term216 A B P p P' f a) = (term216 A B P p P' g a))). Qed.
Lemma lem8249853 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term337 A B P f p P' g a) = ((term216 A B P p P' f a) = (term216 A B P p P' g a)).
Proof. exact (SYM (@lem8249852 A B P f p P' g a)). Qed.
Lemma lem8249854 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term338 A B P f p P' g a) : term338 A B P f p P' g a.
Proof. exact (h1). Qed.
Lemma lem8249863 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term339 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8249864 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8249865 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term345 A B P lt2 s a f g).
Proof. exact (@lem8249864 A (term326 A B P lt2 s a f g)). Qed.
Lemma lem8249866 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8249867 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8249868 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term339 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8249867) (@lem8249866 A B P lt2 s a f g z)). Qed.
Lemma lem8249869 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8249868 A B P lt2 s a f g z) (@lem8249863 A B P lt2 s a f g z)). Qed.
Lemma lem8249870 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term348 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8249869 A B P lt2 s a f g z)). Qed.
Lemma lem8249871 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8249872 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term345 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8249871 A) (@lem8249870 A B P lt2 s a f g)). Qed.
Lemma lem8249873 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8249865 A B P lt2 s a f g) (@lem8249872 A B P lt2 s a f g)). Qed.
Lemma lem8249875 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8249876 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term352 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8249875 A B P p g a) (@lem8249873 A B P lt2 s a f g)). Qed.
Lemma lem8249877 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term354 A B P p lt2 s a f g) = (term352 A B P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term162 A B P lt2 s a f g)). Qed.
Lemma lem8249878 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term354 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8249877 A B P p lt2 s a f g) (@lem8249876 A B P p lt2 s a f g)). Qed.
Lemma lem8249880 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8249881 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term355 A B P p lt2 s a f g) = (term356 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8249880 A B P p f a) (@lem8249878 A B P p lt2 s a f g)). Qed.
Lemma lem8249882 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term357 A B P p lt2 s a f g) = (term355 A B P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term328 A B P p lt2 s a f g)). Qed.
Lemma lem8249883 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term357 A B P p lt2 s a f g) = (term356 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8249882 A B P p lt2 s a f g) (@lem8249881 A B P p lt2 s a f g)). Qed.
Lemma lem8249898 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = (term358 A B P f P' g a).
Proof. exact (@lem17784 (P' f a) (P' g a)). Qed.
Lemma lem8249899 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8249900 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term359 A B P p lt2 s a f g) = (term360 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8249899) (@lem8249883 A B P p lt2 s a f g)). Qed.
Lemma lem8249901 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term361 A B P p lt2 s f P' g a) = (term362 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8249900 A B P p lt2 s a f g) (@lem8249898 A B P f P' g a)). Qed.
Lemma lem8249902 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term361 A B P p lt2 s f P' g a).
Proof. exact (@lem17265 (term329 A B P p lt2 s a f g) ((P' f a) = (P' g a))). Qed.
Lemma lem8249903 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term362 A B P p lt2 s f P' g a).
Proof. exact (TRANS (@lem8249902 A B P p lt2 s f P' g a) (@lem8249901 A B P p lt2 s f P' g a)). Qed.
Lemma lem8249904 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term332 A B P p lt2 s f P' g) = (term363 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8249903 A B P p lt2 s f P' g a)). Qed.
Lemma lem8249905 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8249906 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term333 A B P p lt2 s f P' g) = (term364 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8249905 P) (@lem8249904 A B P p lt2 s f P' g)). Qed.
Lemma lem8249907 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term334 A B P p lt2 s f P') = (term365 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8249906 A B P p lt2 s f P' g)). Qed.
Lemma lem8249908 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249909 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term335 A B P p lt2 s f P') = (term366 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8249908 A B) (@lem8249907 A B P p lt2 s f P')). Qed.
Lemma lem8249910 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term336 A B P p lt2 s P') = (term367 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8249909 A B P p lt2 s f P')). Qed.
Lemma lem8249911 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8249912 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term368 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8249911 A B) (@lem8249910 A B P p lt2 s P')). Qed.
Lemma lem8250019 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8250020 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (@lem8250019 A P Q). Qed.
Lemma lem8250021 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term371 A B P p lt2 s a f g) = (term372 A B P p lt2 s a f g).
Proof. exact (@lem8250020 A (term373 A B P p g a) (term349 A B P lt2 s a f g)). Qed.
Lemma lem8250022 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8250023 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term375 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250022 A B P lt2 s a f g z)). Qed.
Lemma lem8250024 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250025 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term376 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250024 A) (@lem8250023 A B P lt2 s a f g)). Qed.
Lemma lem8250026 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8250027 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term371 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250026 A B P p g a) (@lem8250025 A B P lt2 s a f g)). Qed.
Lemma lem8250028 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250029 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term377 A B P p lt2 s a f g) = (term378 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250028) (@lem8250027 A B P p lt2 s a f g)). Qed.
Lemma lem8250030 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8250031 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8250032 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term379 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8250031 A B P p g a) (@lem8250030 A B P lt2 s a f g z)). Qed.
Lemma lem8250033 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term381 A B P p lt2 s a f g) = (term382 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250032 A B P p lt2 s a f g z)). Qed.
Lemma lem8250034 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250035 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term372 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250034 A) (@lem8250033 A B P p lt2 s a f g)). Qed.
Lemma lem8250036 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : ((term371 A B P p lt2 s a f g) = (term372 A B P p lt2 s a f g)) = ((term353 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8250029 A B P p lt2 s a f g) (@lem8250035 A B P p lt2 s a f g)). Qed.
Lemma lem8250037 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term353 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8250036 A B P p lt2 s a f g) (@lem8250021 A B P p lt2 s a f g)). Qed.
Lemma lem8250038 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8250039 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term356 A B P p lt2 s a f g) = (term384 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250038 A B P p f a) (@lem8250037 A B P p lt2 s a f g)). Qed.
Lemma lem8250041 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8250042 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (@lem8250041 A P Q). Qed.
Lemma lem8250043 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term385 A B P p lt2 s a f g) = (term386 A B P p lt2 s a f g).
Proof. exact (@lem8250042 A (term373 A B P p f a) (term382 A B P p lt2 s a f g)). Qed.
Lemma lem8250044 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term387 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term387 A B P p lt2 s a f g z)). Qed.
Lemma lem8250045 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term388 A B P p lt2 s a f g) = (term382 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250044 A B P p lt2 s a f g z)). Qed.
Lemma lem8250046 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250047 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term389 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250046 A) (@lem8250045 A B P p lt2 s a f g)). Qed.
Lemma lem8250048 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8250049 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term385 A B P p lt2 s a f g) = (term384 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250048 A B P p f a) (@lem8250047 A B P p lt2 s a f g)). Qed.
Lemma lem8250050 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250051 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term390 A B P p lt2 s a f g) = (term391 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250050) (@lem8250049 A B P p lt2 s a f g)). Qed.
Lemma lem8250052 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term387 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term387 A B P p lt2 s a f g z)). Qed.
Lemma lem8250053 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8250054 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term392 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8250053 A B P p f a) (@lem8250052 A B P p lt2 s a f g z)). Qed.
Lemma lem8250055 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term394 A B P p lt2 s a f g) = (term395 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250054 A B P p lt2 s a f g z)). Qed.
Lemma lem8250056 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250057 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term386 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250056 A) (@lem8250055 A B P p lt2 s a f g)). Qed.
Lemma lem8250058 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : ((term385 A B P p lt2 s a f g) = (term386 A B P p lt2 s a f g)) = ((term384 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8250051 A B P p lt2 s a f g) (@lem8250057 A B P p lt2 s a f g)). Qed.
Lemma lem8250059 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term384 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8250058 A B P p lt2 s a f g) (@lem8250043 A B P p lt2 s a f g)). Qed.
Lemma lem8250060 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term356 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8250039 A B P p lt2 s a f g) (@lem8250059 A B P p lt2 s a f g)). Qed.
Lemma lem8250061 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250062 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term360 A B P p lt2 s a f g) = (term397 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250061) (@lem8250060 A B P p lt2 s a f g)). Qed.
Lemma lem8250063 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8250064 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term362 A B P p lt2 s f P' g a) = (term398 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8250062 A B P p lt2 s a f g) (@lem8250063 A B P f P' g a)). Qed.
Lemma lem8250066 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8250067 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (@lem8250066 A P Q). Qed.
Lemma lem8250068 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term401 A B P p lt2 s f P' g a) = (term402 A B P p lt2 s f P' g a).
Proof. exact (@lem8250067 A (term395 A B P p lt2 s a f g) (term358 A B P f P' g a)). Qed.
Lemma lem8250069 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term403 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term403 A B P p lt2 s a f g z)). Qed.
Lemma lem8250070 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term404 A B P p lt2 s a f g) = (term395 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250069 A B P p lt2 s a f g z)). Qed.
Lemma lem8250071 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250072 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term405 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250071 A) (@lem8250070 A B P p lt2 s a f g)). Qed.
Lemma lem8250073 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250074 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term406 A B P p lt2 s a f g) = (term397 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8250073) (@lem8250072 A B P p lt2 s a f g)). Qed.
Lemma lem8250075 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8250076 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term401 A B P p lt2 s f P' g a) = (term398 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8250074 A B P p lt2 s a f g) (@lem8250075 A B P f P' g a)). Qed.
Lemma lem8250077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250078 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term407 A B P p lt2 s f P' g a) = (term408 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8250077) (@lem8250076 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250079 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term403 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term403 A B P p lt2 s a f g z)). Qed.
Lemma lem8250080 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250081 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term409 A B P p lt2 s a f g z) = (term410 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8250080) (@lem8250079 A B P p lt2 s a f g z)). Qed.
Lemma lem8250082 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8250083 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term411 A B P p lt2 s z f P' g a) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (MK_COMB (@lem8250081 A B P p lt2 s a f g z) (@lem8250082 A B P f P' g a)). Qed.
Lemma lem8250084 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term413 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (fun_ext (fun z : A => @lem8250083 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8250085 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250086 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term402 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8250085 A) (@lem8250084 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250087 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((term401 A B P p lt2 s f P' g a) = (term402 A B P p lt2 s f P' g a)) = ((term398 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a)).
Proof. exact (MK_COMB (@lem8250078 A B P p lt2 s f P' g a) (@lem8250086 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250088 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term398 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (EQ_MP (@lem8250087 A B P p lt2 s f P' g a) (@lem8250068 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250089 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term362 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (TRANS (@lem8250064 A B P p lt2 s f P' g a) (@lem8250088 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250090 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term363 A B P p lt2 s f P' g) = (term416 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8250089 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250091 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250092 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term364 A B P p lt2 s f P' g) = (term417 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8250091 P) (@lem8250090 A B P p lt2 s f P' g)). Qed.
Lemma lem8250094 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8250095 {A P : Type'} (P' : type1470 A P) : (term420 A P P') = (term421 A P P').
Proof. exact (@lem8250094 P A P'). Qed.
Lemma lem8250096 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term422 A B P p lt2 s f P' g) = (term423 A B P p lt2 s f P' g).
Proof. exact (@lem8250095 A P (term424 A B P p lt2 s f P' g)). Qed.
Lemma lem8250097 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term425 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term425 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250098 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8250099 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (z : A) : (term426 A B P p lt2 s f P' g a z) = (term427 A B P p lt2 s f P' g a z).
Proof. exact (MK_COMB (@lem8250097 A B P p lt2 s f P' g a) (@lem8250098 A z)). Qed.
Lemma lem8250100 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term427 A B P p lt2 s f P' g a z) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (eq_refl (term427 A B P p lt2 s f P' g a z)). Qed.
Lemma lem8250101 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term426 A B P p lt2 s f P' g a z) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (TRANS (@lem8250099 A B P p lt2 s f P' g a z) (@lem8250100 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8250102 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term428 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (fun_ext (fun z : A => @lem8250101 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8250103 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250104 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term429 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8250103 A) (@lem8250102 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250105 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term430 A B P p lt2 s f P' g) = (term416 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8250104 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250106 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250107 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term422 A B P p lt2 s f P' g) = (term417 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8250106 P) (@lem8250105 A B P p lt2 s f P' g)). Qed.
Lemma lem8250108 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250109 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term431 A B P p lt2 s f P' g) = (term432 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8250108) (@lem8250107 A B P p lt2 s f P' g)). Qed.
Lemma lem8250110 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term425 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term425 A B P p lt2 s f P' g a)). Qed.
Lemma lem8250111 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8250112 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term433 A B P p lt2 s f P' g z a) = (term434 A B P p lt2 s f P' g z a).
Proof. exact (MK_COMB (@lem8250110 A B P p lt2 s f P' g a) (@lem8250111 A P z a)). Qed.
Lemma lem8250113 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term434 A B P p lt2 s f P' g z a) = (term435 A B P p lt2 s z f P' g a).
Proof. exact (eq_refl (term434 A B P p lt2 s f P' g z a)). Qed.
Lemma lem8250114 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term433 A B P p lt2 s f P' g z a) = (term435 A B P p lt2 s z f P' g a).
Proof. exact (TRANS (@lem8250112 A B P p lt2 s f P' g z a) (@lem8250113 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8250115 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term436 A B P p lt2 s f P' g z) = (term437 A B P p lt2 s z f P' g).
Proof. exact (fun_ext (fun a : P => @lem8250114 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8250116 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250117 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term438 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (MK_COMB (@lem8250116 P) (@lem8250115 A B P p lt2 s z f P' g)). Qed.
Lemma lem8250118 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term440 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun z : P -> A => @lem8250117 A B P p lt2 s z f P' g)). Qed.
Lemma lem8250119 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8250120 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term423 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8250119 A P) (@lem8250118 A B P p lt2 s f P' g)). Qed.
Lemma lem8250121 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : ((term422 A B P p lt2 s f P' g) = (term423 A B P p lt2 s f P' g)) = ((term417 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g)).
Proof. exact (MK_COMB (@lem8250109 A B P p lt2 s f P' g) (@lem8250120 A B P p lt2 s f P' g)). Qed.
Lemma lem8250122 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term417 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (EQ_MP (@lem8250121 A B P p lt2 s f P' g) (@lem8250096 A B P p lt2 s f P' g)). Qed.
Lemma lem8250123 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term364 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (TRANS (@lem8250092 A B P p lt2 s f P' g) (@lem8250122 A B P p lt2 s f P' g)). Qed.
Lemma lem8250124 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term365 A B P p lt2 s f P') = (term443 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8250123 A B P p lt2 s f P' g)). Qed.
Lemma lem8250125 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250126 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term366 A B P p lt2 s f P') = (term444 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8250125 A B) (@lem8250124 A B P p lt2 s f P')). Qed.
Lemma lem8250128 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8250129 {A B P : Type'} (P' : type537 A B P) : (term445 A B P P') = (term446 A B P P').
Proof. exact (@lem8250128 (A -> B) (P -> A) P'). Qed.
Lemma lem8250130 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term447 A B P p lt2 s f P') = (term448 A B P p lt2 s f P').
Proof. exact (@lem8250129 A B P (term449 A B P p lt2 s f P')). Qed.
Lemma lem8250131 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term450 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term450 A B P p lt2 s f P' g)). Qed.
Lemma lem8250132 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8250133 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (z : P -> A) : (term451 A B P p lt2 s f P' g z) = (term452 A B P p lt2 s f P' g z).
Proof. exact (MK_COMB (@lem8250131 A B P p lt2 s f P' g) (@lem8250132 A P z)). Qed.
Lemma lem8250134 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term452 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (eq_refl (term452 A B P p lt2 s f P' g z)). Qed.
Lemma lem8250135 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term451 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (TRANS (@lem8250133 A B P p lt2 s f P' g z) (@lem8250134 A B P p lt2 s z f P' g)). Qed.
Lemma lem8250136 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term453 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun z : P -> A => @lem8250135 A B P p lt2 s z f P' g)). Qed.
Lemma lem8250137 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8250138 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term454 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8250137 A P) (@lem8250136 A B P p lt2 s f P' g)). Qed.
Lemma lem8250139 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term455 A B P p lt2 s f P') = (term443 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8250138 A B P p lt2 s f P' g)). Qed.
Lemma lem8250140 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250141 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term447 A B P p lt2 s f P') = (term444 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8250140 A B) (@lem8250139 A B P p lt2 s f P')). Qed.
Lemma lem8250142 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250143 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term456 A B P p lt2 s f P') = (term457 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8250142) (@lem8250141 A B P p lt2 s f P')). Qed.
Lemma lem8250144 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term450 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term450 A B P p lt2 s f P' g)). Qed.
Lemma lem8250145 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8250146 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (z : type557 A B P) (g : A -> B) : (term458 A B P p lt2 s f P' z g) = (term459 A B P p lt2 s f P' z g).
Proof. exact (MK_COMB (@lem8250144 A B P p lt2 s f P' g) (@lem8250145 A B P z g)). Qed.
Lemma lem8250147 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term459 A B P p lt2 s f P' z g) = (term460 A B P p lt2 s z f P' g).
Proof. exact (eq_refl (term459 A B P p lt2 s f P' z g)). Qed.
Lemma lem8250148 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term458 A B P p lt2 s f P' z g) = (term460 A B P p lt2 s z f P' g).
Proof. exact (TRANS (@lem8250146 A B P p lt2 s f P' z g) (@lem8250147 A B P p lt2 s z f P' g)). Qed.
Lemma lem8250149 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term461 A B P p lt2 s f P' z) = (term462 A B P p lt2 s z f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8250148 A B P p lt2 s z f P' g)). Qed.
Lemma lem8250150 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250151 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term463 A B P p lt2 s f P' z) = (term464 A B P p lt2 s z f P').
Proof. exact (MK_COMB (@lem8250150 A B) (@lem8250149 A B P p lt2 s z f P')). Qed.
Lemma lem8250152 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term465 A B P p lt2 s f P') = (term466 A B P p lt2 s f P').
Proof. exact (fun_ext (fun z : type557 A B P => @lem8250151 A B P p lt2 s z f P')). Qed.
Lemma lem8250153 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8250154 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term448 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8250153 A B P) (@lem8250152 A B P p lt2 s f P')). Qed.
Lemma lem8250155 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : ((term447 A B P p lt2 s f P') = (term448 A B P p lt2 s f P')) = ((term444 A B P p lt2 s f P') = (term467 A B P p lt2 s f P')).
Proof. exact (MK_COMB (@lem8250143 A B P p lt2 s f P') (@lem8250154 A B P p lt2 s f P')). Qed.
Lemma lem8250156 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term444 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (EQ_MP (@lem8250155 A B P p lt2 s f P') (@lem8250130 A B P p lt2 s f P')). Qed.
Lemma lem8250157 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term366 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (TRANS (@lem8250126 A B P p lt2 s f P') (@lem8250156 A B P p lt2 s f P')). Qed.
Lemma lem8250158 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term367 A B P p lt2 s P') = (term468 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8250157 A B P p lt2 s f P')). Qed.
Lemma lem8250159 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250160 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term368 A B P p lt2 s P') = (term469 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8250159 A B) (@lem8250158 A B P p lt2 s P')). Qed.
Lemma lem8250162 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8250163 {A B P : Type'} (P' : type495 A B P) : (term470 A B P P') = (term471 A B P P').
Proof. exact (@lem8250162 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8250164 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term472 A B P p lt2 s P') = (term473 A B P p lt2 s P').
Proof. exact (@lem8250163 A B P (term474 A B P p lt2 s P')). Qed.
Lemma lem8250165 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term475 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (eq_refl (term475 A B P p lt2 s P' f)). Qed.
Lemma lem8250166 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8250167 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (z : type557 A B P) : (term476 A B P p lt2 s P' f z) = (term477 A B P p lt2 s f P' z).
Proof. exact (MK_COMB (@lem8250165 A B P p lt2 s f P') (@lem8250166 A B P z)). Qed.
Lemma lem8250168 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term477 A B P p lt2 s f P' z) = (term464 A B P p lt2 s z f P').
Proof. exact (eq_refl (term477 A B P p lt2 s f P' z)). Qed.
Lemma lem8250169 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term476 A B P p lt2 s P' f z) = (term464 A B P p lt2 s z f P').
Proof. exact (TRANS (@lem8250167 A B P p lt2 s f P' z) (@lem8250168 A B P p lt2 s z f P')). Qed.
Lemma lem8250170 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term478 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (fun_ext (fun z : type557 A B P => @lem8250169 A B P p lt2 s z f P')). Qed.
Lemma lem8250171 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8250172 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term479 A B P p lt2 s P' f) = (term467 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8250171 A B P) (@lem8250170 A B P p lt2 s f P')). Qed.
Lemma lem8250173 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term480 A B P p lt2 s P') = (term468 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8250172 A B P p lt2 s f P')). Qed.
Lemma lem8250174 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250175 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term472 A B P p lt2 s P') = (term469 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8250174 A B) (@lem8250173 A B P p lt2 s P')). Qed.
Lemma lem8250176 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250177 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term481 A B P p lt2 s P') = (term482 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8250176) (@lem8250175 A B P p lt2 s P')). Qed.
Lemma lem8250178 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term475 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (eq_refl (term475 A B P p lt2 s P' f)). Qed.
Lemma lem8250179 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8250180 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (z : type518 A B P) (f : A -> B) : (term483 A B P p lt2 s P' z f) = (term484 A B P p lt2 s P' z f).
Proof. exact (MK_COMB (@lem8250178 A B P p lt2 s f P') (@lem8250179 A B P z f)). Qed.
Lemma lem8250181 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term484 A B P p lt2 s P' z f) = (term485 A B P p lt2 s z f P').
Proof. exact (eq_refl (term484 A B P p lt2 s P' z f)). Qed.
Lemma lem8250182 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term483 A B P p lt2 s P' z f) = (term485 A B P p lt2 s z f P').
Proof. exact (TRANS (@lem8250180 A B P p lt2 s P' z f) (@lem8250181 A B P p lt2 s z f P')). Qed.
Lemma lem8250183 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P' : type560 A B P) : (term486 A B P p lt2 s P' z) = (term487 A B P p lt2 s z P').
Proof. exact (fun_ext (fun f : A -> B => @lem8250182 A B P p lt2 s z f P')). Qed.
Lemma lem8250184 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250185 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P' : type560 A B P) : (term488 A B P p lt2 s P' z) = (term489 A B P p lt2 s z P').
Proof. exact (MK_COMB (@lem8250184 A B) (@lem8250183 A B P p lt2 s z P')). Qed.
Lemma lem8250186 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term490 A B P p lt2 s P') = (term491 A B P p lt2 s P').
Proof. exact (fun_ext (fun z : type518 A B P => @lem8250185 A B P p lt2 s z P')). Qed.
Lemma lem8250187 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8250188 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term473 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8250187 A B P) (@lem8250186 A B P p lt2 s P')). Qed.
Lemma lem8250189 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : ((term472 A B P p lt2 s P') = (term473 A B P p lt2 s P')) = ((term469 A B P p lt2 s P') = (term492 A B P p lt2 s P')).
Proof. exact (MK_COMB (@lem8250177 A B P p lt2 s P') (@lem8250188 A B P p lt2 s P')). Qed.
Lemma lem8250190 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term469 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (EQ_MP (@lem8250189 A B P p lt2 s P') (@lem8250164 A B P p lt2 s P')). Qed.
Lemma lem8250192 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term368 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (TRANS (@lem8250160 A B P p lt2 s P') (@lem8250190 A B P p lt2 s P')). Qed.
Lemma lem8250193 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (TRANS (@lem8249912 A B P p lt2 s P') (@lem8250192 A B P p lt2 s P')). Qed.
Lemma lem8250194 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term492 A B P p lt2 s P'.
Proof. exact (EQ_MP (@lem8250193 A B P p lt2 s P') (@lem8249847 A B P p lt2 s P' h1)). Qed.
Lemma lem8250201 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term339 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8250202 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8250203 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term345 A B P lt2 s a f g).
Proof. exact (@lem8250202 A (term326 A B P lt2 s a f g)). Qed.
Lemma lem8250204 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8250205 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250206 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term339 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8250205) (@lem8250204 A B P lt2 s a f g z)). Qed.
Lemma lem8250207 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8250206 A B P lt2 s a f g z) (@lem8250201 A B P lt2 s a f g z)). Qed.
Lemma lem8250208 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term348 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250207 A B P lt2 s a f g z)). Qed.
Lemma lem8250209 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250210 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term345 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250209 A) (@lem8250208 A B P lt2 s a f g)). Qed.
Lemma lem8250211 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8250203 A B P lt2 s a f g) (@lem8250210 A B P lt2 s a f g)). Qed.
Lemma lem8250226 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = (term358 A B P f p g a).
Proof. exact (@lem17784 (p f a) (p g a)). Qed.
Lemma lem8250227 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250228 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term493 A B P lt2 s a f g) = (term494 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250227) (@lem8250211 A B P lt2 s a f g)). Qed.
Lemma lem8250229 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term495 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8250228 A B P lt2 s a f g) (@lem8250226 A B P f p g a)). Qed.
Lemma lem8250230 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term495 A B P lt2 s f p g a).
Proof. exact (@lem17265 (term162 A B P lt2 s a f g) ((p f a) = (p g a))). Qed.
Lemma lem8250231 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (TRANS (@lem8250230 A B P lt2 s f p g a) (@lem8250229 A B P lt2 s f p g a)). Qed.
Lemma lem8250232 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term253 A B P lt2 s f p g) = (term497 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8250231 A B P lt2 s f p g a)). Qed.
Lemma lem8250233 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250234 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term255 A B P lt2 s f p g) = (term498 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8250233 P) (@lem8250232 A B P lt2 s f p g)). Qed.
Lemma lem8250235 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term257 A B P lt2 s f p) = (term499 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8250234 A B P lt2 s f p g)). Qed.
Lemma lem8250236 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250237 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term259 A B P lt2 s f p) = (term500 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8250236 A B) (@lem8250235 A B P lt2 s f p)). Qed.
Lemma lem8250238 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term261 A B P lt2 s p) = (term501 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8250237 A B P lt2 s f p)). Qed.
Lemma lem8250239 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250240 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term502 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8250239 A B) (@lem8250238 A B P lt2 s p)). Qed.
Lemma lem8250347 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8250348 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (@lem8250347 A P Q). Qed.
Lemma lem8250349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term503 A B P lt2 s f p g a) = (term504 A B P lt2 s f p g a).
Proof. exact (@lem8250348 A (term349 A B P lt2 s a f g) (term358 A B P f p g a)). Qed.
Lemma lem8250350 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8250351 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term375 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250350 A B P lt2 s a f g z)). Qed.
Lemma lem8250352 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250353 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term376 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250352 A) (@lem8250351 A B P lt2 s a f g)). Qed.
Lemma lem8250354 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250355 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term505 A B P lt2 s a f g) = (term494 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250354) (@lem8250353 A B P lt2 s a f g)). Qed.
Lemma lem8250356 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term358 A B P f p g a).
Proof. exact (eq_refl (term358 A B P f p g a)). Qed.
Lemma lem8250357 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term503 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8250355 A B P lt2 s a f g) (@lem8250356 A B P f p g a)). Qed.
Lemma lem8250358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250359 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term506 A B P lt2 s f p g a) = (term507 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8250358) (@lem8250357 A B P lt2 s f p g a)). Qed.
Lemma lem8250360 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8250361 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250362 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term508 A B P lt2 s a f g z) = (term509 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8250361) (@lem8250360 A B P lt2 s a f g z)). Qed.
Lemma lem8250363 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term358 A B P f p g a).
Proof. exact (eq_refl (term358 A B P f p g a)). Qed.
Lemma lem8250364 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term510 A B P lt2 s z f p g a) = (term511 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8250362 A B P lt2 s a f g z) (@lem8250363 A B P f p g a)). Qed.
Lemma lem8250365 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term512 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8250364 A B P lt2 s z f p g a)). Qed.
Lemma lem8250366 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250367 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term504 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8250366 A) (@lem8250365 A B P lt2 s f p g a)). Qed.
Lemma lem8250368 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((term503 A B P lt2 s f p g a) = (term504 A B P lt2 s f p g a)) = ((term496 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a)).
Proof. exact (MK_COMB (@lem8250359 A B P lt2 s f p g a) (@lem8250367 A B P lt2 s f p g a)). Qed.
Lemma lem8250369 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term496 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (EQ_MP (@lem8250368 A B P lt2 s f p g a) (@lem8250349 A B P lt2 s f p g a)). Qed.
Lemma lem8250370 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term497 A B P lt2 s f p g) = (term515 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8250369 A B P lt2 s f p g a)). Qed.
Lemma lem8250371 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250372 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term498 A B P lt2 s f p g) = (term516 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8250371 P) (@lem8250370 A B P lt2 s f p g)). Qed.
Lemma lem8250374 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8250375 {A P : Type'} (P' : type1470 A P) : (term420 A P P') = (term421 A P P').
Proof. exact (@lem8250374 P A P'). Qed.
Lemma lem8250376 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term517 A B P lt2 s f p g) = (term518 A B P lt2 s f p g).
Proof. exact (@lem8250375 A P (term519 A B P lt2 s f p g)). Qed.
Lemma lem8250377 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term520 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (eq_refl (term520 A B P lt2 s f p g a)). Qed.
Lemma lem8250378 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8250379 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (z : A) : (term521 A B P lt2 s f p g a z) = (term522 A B P lt2 s f p g a z).
Proof. exact (MK_COMB (@lem8250377 A B P lt2 s f p g a) (@lem8250378 A z)). Qed.
Lemma lem8250380 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term522 A B P lt2 s f p g a z) = (term511 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term522 A B P lt2 s f p g a z)). Qed.
Lemma lem8250381 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term521 A B P lt2 s f p g a z) = (term511 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8250379 A B P lt2 s f p g a z) (@lem8250380 A B P lt2 s z f p g a)). Qed.
Lemma lem8250382 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term523 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8250381 A B P lt2 s z f p g a)). Qed.
Lemma lem8250383 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8250384 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term524 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8250383 A) (@lem8250382 A B P lt2 s f p g a)). Qed.
Lemma lem8250385 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term525 A B P lt2 s f p g) = (term515 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8250384 A B P lt2 s f p g a)). Qed.
Lemma lem8250386 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250387 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term517 A B P lt2 s f p g) = (term516 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8250386 P) (@lem8250385 A B P lt2 s f p g)). Qed.
Lemma lem8250388 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250389 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term526 A B P lt2 s f p g) = (term527 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8250388) (@lem8250387 A B P lt2 s f p g)). Qed.
Lemma lem8250390 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term520 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (eq_refl (term520 A B P lt2 s f p g a)). Qed.
Lemma lem8250391 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8250392 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term528 A B P lt2 s f p g z a) = (term529 A B P lt2 s f p g z a).
Proof. exact (MK_COMB (@lem8250390 A B P lt2 s f p g a) (@lem8250391 A P z a)). Qed.
Lemma lem8250393 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term529 A B P lt2 s f p g z a) = (term530 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term529 A B P lt2 s f p g z a)). Qed.
Lemma lem8250394 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term528 A B P lt2 s f p g z a) = (term530 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8250392 A B P lt2 s f p g z a) (@lem8250393 A B P lt2 s z f p g a)). Qed.
Lemma lem8250395 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term531 A B P lt2 s f p g z) = (term532 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8250394 A B P lt2 s z f p g a)). Qed.
Lemma lem8250396 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8250397 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term533 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8250396 P) (@lem8250395 A B P lt2 s z f p g)). Qed.
Lemma lem8250398 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term535 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8250397 A B P lt2 s z f p g)). Qed.
Lemma lem8250399 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8250400 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term518 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8250399 A P) (@lem8250398 A B P lt2 s f p g)). Qed.
Lemma lem8250401 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : ((term517 A B P lt2 s f p g) = (term518 A B P lt2 s f p g)) = ((term516 A B P lt2 s f p g) = (term537 A B P lt2 s f p g)).
Proof. exact (MK_COMB (@lem8250389 A B P lt2 s f p g) (@lem8250400 A B P lt2 s f p g)). Qed.
Lemma lem8250402 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term516 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (EQ_MP (@lem8250401 A B P lt2 s f p g) (@lem8250376 A B P lt2 s f p g)). Qed.
Lemma lem8250403 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term498 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (TRANS (@lem8250372 A B P lt2 s f p g) (@lem8250402 A B P lt2 s f p g)). Qed.
Lemma lem8250404 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term499 A B P lt2 s f p) = (term538 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8250403 A B P lt2 s f p g)). Qed.
Lemma lem8250405 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250406 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term500 A B P lt2 s f p) = (term539 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8250405 A B) (@lem8250404 A B P lt2 s f p)). Qed.
Lemma lem8250408 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8250409 {A B P : Type'} (P' : type537 A B P) : (term445 A B P P') = (term446 A B P P').
Proof. exact (@lem8250408 (A -> B) (P -> A) P'). Qed.
Lemma lem8250410 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term540 A B P lt2 s f p) = (term541 A B P lt2 s f p).
Proof. exact (@lem8250409 A B P (term542 A B P lt2 s f p)). Qed.
Lemma lem8250411 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term543 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (eq_refl (term543 A B P lt2 s f p g)). Qed.
Lemma lem8250412 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8250413 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) : (term544 A B P lt2 s f p g z) = (term545 A B P lt2 s f p g z).
Proof. exact (MK_COMB (@lem8250411 A B P lt2 s f p g) (@lem8250412 A P z)). Qed.
Lemma lem8250414 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term545 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (eq_refl (term545 A B P lt2 s f p g z)). Qed.
Lemma lem8250415 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term544 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8250413 A B P lt2 s f p g z) (@lem8250414 A B P lt2 s z f p g)). Qed.
Lemma lem8250416 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term546 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8250415 A B P lt2 s z f p g)). Qed.
Lemma lem8250417 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8250418 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term547 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8250417 A P) (@lem8250416 A B P lt2 s f p g)). Qed.
Lemma lem8250419 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term548 A B P lt2 s f p) = (term538 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8250418 A B P lt2 s f p g)). Qed.
Lemma lem8250420 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250421 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term540 A B P lt2 s f p) = (term539 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8250420 A B) (@lem8250419 A B P lt2 s f p)). Qed.
Lemma lem8250422 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250423 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term549 A B P lt2 s f p) = (term550 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8250422) (@lem8250421 A B P lt2 s f p)). Qed.
Lemma lem8250424 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term543 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (eq_refl (term543 A B P lt2 s f p g)). Qed.
Lemma lem8250425 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8250426 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) (g : A -> B) : (term551 A B P lt2 s f p z g) = (term552 A B P lt2 s f p z g).
Proof. exact (MK_COMB (@lem8250424 A B P lt2 s f p g) (@lem8250425 A B P z g)). Qed.
Lemma lem8250427 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term552 A B P lt2 s f p z g) = (term553 A B P lt2 s z f p g).
Proof. exact (eq_refl (term552 A B P lt2 s f p z g)). Qed.
Lemma lem8250428 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term551 A B P lt2 s f p z g) = (term553 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8250426 A B P lt2 s f p z g) (@lem8250427 A B P lt2 s z f p g)). Qed.
Lemma lem8250429 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term554 A B P lt2 s f p z) = (term555 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8250428 A B P lt2 s z f p g)). Qed.
Lemma lem8250430 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250431 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term556 A B P lt2 s f p z) = (term557 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8250430 A B) (@lem8250429 A B P lt2 s z f p)). Qed.
Lemma lem8250432 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term558 A B P lt2 s f p) = (term559 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8250431 A B P lt2 s z f p)). Qed.
Lemma lem8250433 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8250434 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term541 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8250433 A B P) (@lem8250432 A B P lt2 s f p)). Qed.
Lemma lem8250435 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : ((term540 A B P lt2 s f p) = (term541 A B P lt2 s f p)) = ((term539 A B P lt2 s f p) = (term560 A B P lt2 s f p)).
Proof. exact (MK_COMB (@lem8250423 A B P lt2 s f p) (@lem8250434 A B P lt2 s f p)). Qed.
Lemma lem8250436 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term539 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (EQ_MP (@lem8250435 A B P lt2 s f p) (@lem8250410 A B P lt2 s f p)). Qed.
Lemma lem8250437 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term500 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (TRANS (@lem8250406 A B P lt2 s f p) (@lem8250436 A B P lt2 s f p)). Qed.
Lemma lem8250438 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term501 A B P lt2 s p) = (term561 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8250437 A B P lt2 s f p)). Qed.
Lemma lem8250439 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250440 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term502 A B P lt2 s p) = (term562 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8250439 A B) (@lem8250438 A B P lt2 s p)). Qed.
Lemma lem8250442 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8250443 {A B P : Type'} (P' : type495 A B P) : (term470 A B P P') = (term471 A B P P').
Proof. exact (@lem8250442 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8250444 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term563 A B P lt2 s p) = (term564 A B P lt2 s p).
Proof. exact (@lem8250443 A B P (term565 A B P lt2 s p)). Qed.
Lemma lem8250445 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term566 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (eq_refl (term566 A B P lt2 s p f)). Qed.
Lemma lem8250446 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8250447 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) : (term567 A B P lt2 s p f z) = (term568 A B P lt2 s f p z).
Proof. exact (MK_COMB (@lem8250445 A B P lt2 s f p) (@lem8250446 A B P z)). Qed.
Lemma lem8250448 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term568 A B P lt2 s f p z) = (term557 A B P lt2 s z f p).
Proof. exact (eq_refl (term568 A B P lt2 s f p z)). Qed.
Lemma lem8250449 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term567 A B P lt2 s p f z) = (term557 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8250447 A B P lt2 s f p z) (@lem8250448 A B P lt2 s z f p)). Qed.
Lemma lem8250450 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term569 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8250449 A B P lt2 s z f p)). Qed.
Lemma lem8250451 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8250452 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term570 A B P lt2 s p f) = (term560 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8250451 A B P) (@lem8250450 A B P lt2 s f p)). Qed.
Lemma lem8250453 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term571 A B P lt2 s p) = (term561 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8250452 A B P lt2 s f p)). Qed.
Lemma lem8250454 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250455 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term563 A B P lt2 s p) = (term562 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8250454 A B) (@lem8250453 A B P lt2 s p)). Qed.
Lemma lem8250456 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8250457 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term572 A B P lt2 s p) = (term573 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8250456) (@lem8250455 A B P lt2 s p)). Qed.
Lemma lem8250458 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term566 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (eq_refl (term566 A B P lt2 s p f)). Qed.
Lemma lem8250459 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8250460 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z : type518 A B P) (f : A -> B) : (term574 A B P lt2 s p z f) = (term575 A B P lt2 s p z f).
Proof. exact (MK_COMB (@lem8250458 A B P lt2 s f p) (@lem8250459 A B P z f)). Qed.
Lemma lem8250461 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term575 A B P lt2 s p z f) = (term576 A B P lt2 s z f p).
Proof. exact (eq_refl (term575 A B P lt2 s p z f)). Qed.
Lemma lem8250462 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term574 A B P lt2 s p z f) = (term576 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8250460 A B P lt2 s p z f) (@lem8250461 A B P lt2 s z f p)). Qed.
Lemma lem8250463 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term577 A B P lt2 s p z) = (term578 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8250462 A B P lt2 s z f p)). Qed.
Lemma lem8250464 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8250465 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term579 A B P lt2 s p z) = (term580 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8250464 A B) (@lem8250463 A B P lt2 s z p)). Qed.
Lemma lem8250466 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term581 A B P lt2 s p) = (term582 A B P lt2 s p).
Proof. exact (fun_ext (fun z : type518 A B P => @lem8250465 A B P lt2 s z p)). Qed.
Lemma lem8250467 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8250468 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term564 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8250467 A B P) (@lem8250466 A B P lt2 s p)). Qed.
Lemma lem8250469 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : ((term563 A B P lt2 s p) = (term564 A B P lt2 s p)) = ((term562 A B P lt2 s p) = (term583 A B P lt2 s p)).
Proof. exact (MK_COMB (@lem8250457 A B P lt2 s p) (@lem8250468 A B P lt2 s p)). Qed.
Lemma lem8250470 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term562 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (EQ_MP (@lem8250469 A B P lt2 s p) (@lem8250444 A B P lt2 s p)). Qed.
Lemma lem8250472 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term502 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (TRANS (@lem8250440 A B P lt2 s p) (@lem8250470 A B P lt2 s p)). Qed.
Lemma lem8250473 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (TRANS (@lem8250240 A B P lt2 s p) (@lem8250472 A B P lt2 s p)). Qed.
Lemma lem8250474 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term583 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8250473 A B P lt2 s p) (@lem8249848 A B P lt2 s p h1)). Qed.
Lemma lem8250481 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term584 A B P lt2 s a f g z).
Proof. exact (@lem17265 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8250482 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term585 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250481 A B P lt2 s a f g z)). Qed.
Lemma lem8250483 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8250536 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term586 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250483 A) (@lem8250482 A B P lt2 s a f g)). Qed.
Lemma lem8250537 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term586 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8250536 A B P lt2 s a f g) (@lem8249849 A B P lt2 s a f g h1)). Qed.
Lemma lem8250543 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term587 A B P P' f a) = (P' f a).
Proof. exact (@lem16933 (P' f a)). Qed.
Lemma lem8250545 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8250546 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term588 A B P p P' f a) = (term589 A B P p P' f a).
Proof. exact (MK_COMB (@lem8250545 A B P p f a) (@lem8250543 A B P P' f a)). Qed.
Lemma lem8250547 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term590 A B P p P' f a) = (term588 A B P p P' f a).
Proof. exact (@lem17045 (p f a) (term373 A B P P' f a)). Qed.
Lemma lem8250548 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term590 A B P p P' f a) = (term589 A B P p P' f a).
Proof. exact (TRANS (@lem8250547 A B P p P' f a) (@lem8250546 A B P p P' f a)). Qed.
Lemma lem8250557 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term587 A B P P' g a) = (P' g a).
Proof. exact (@lem16933 (P' g a)). Qed.
Lemma lem8250559 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8250560 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term588 A B P p P' g a) = (term589 A B P p P' g a).
Proof. exact (MK_COMB (@lem8250559 A B P p g a) (@lem8250557 A B P P' g a)). Qed.
Lemma lem8250561 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term590 A B P p P' g a) = (term588 A B P p P' g a).
Proof. exact (@lem17045 (p g a) (term373 A B P P' g a)). Qed.
Lemma lem8250562 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term590 A B P p P' g a) = (term589 A B P p P' g a).
Proof. exact (TRANS (@lem8250561 A B P p P' g a) (@lem8250560 A B P p P' g a)). Qed.
Lemma lem8250565 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term216 A B P p P' g a) = (term216 A B P p P' g a).
Proof. exact (eq_refl (term216 A B P p P' g a)). Qed.
Lemma lem8250566 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8250567 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term591 A B P p P' f a) = (term592 A B P p P' f a).
Proof. exact (MK_COMB (@lem8250566) (@lem8250548 A B P p P' f a)). Qed.
Lemma lem8250568 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term593 A B P f p P' g a) = (term594 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250567 A B P p P' f a) (@lem8250565 A B P p P' g a)). Qed.
Lemma lem8250570 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term595 A B P p P' f a) = (term595 A B P p P' f a).
Proof. exact (eq_refl (term595 A B P p P' f a)). Qed.
Lemma lem8250571 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term596 A B P f p P' g a) = (term597 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250570 A B P p P' f a) (@lem8250562 A B P p P' g a)). Qed.
Lemma lem8250572 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250573 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term598 A B P f p P' g a) = (term599 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250572) (@lem8250571 A B P f p P' g a)). Qed.
Lemma lem8250574 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term600 A B P f p P' g a) = (term601 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250573 A B P f p P' g a) (@lem8250568 A B P f p P' g a)). Qed.
Lemma lem8250575 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term338 A B P f p P' g a) = (term600 A B P f p P' g a).
Proof. exact (@lem17646 (term216 A B P p P' f a) (term216 A B P p P' g a)). Qed.
Lemma lem8250580 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term338 A B P f p P' g a) = (term601 A B P f p P' g a).
Proof. exact (TRANS (@lem8250575 A B P f p P' g a) (@lem8250574 A B P f p P' g a)). Qed.
Lemma lem8250581 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term338 A B P f p P' g a) : term601 A B P f p P' g a.
Proof. exact (EQ_MP (@lem8250580 A B P f p P' g a) (@lem8249854 A B P f p P' g a h1)). Qed.
Lemma lem8250582 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term580 A B P lt2 s z p.
Proof. exact (h1). Qed.
Lemma lem8250583 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term489 A B P p lt2 s z' P'.
Proof. exact (h1). Qed.
Lemma lem8250584 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8250589 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250590 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8250589 A B f x). Qed.
Lemma lem8250592 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8250590 A B f z). Qed.
Lemma lem8250597 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250598 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8250597 A B f x). Qed.
Lemma lem8250600 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8250598 A B g z). Qed.
Lemma lem8250601 {A B : Type'} (f : A -> B) (z : A) : (term602 A B f z) = (term603 A B f z).
Proof. exact (MK_COMB (@lem8250584 B) (@lem8250592 A B f z)). Qed.
Lemma lem8250602 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8250601 A B f z) (@lem8250600 A B g z)). Qed.
Lemma lem8250603 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250610 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250611 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8250610 P A f x). Qed.
Lemma lem8250613 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8250611 A P s a). Qed.
Lemma lem8250614 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem8250615 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term341 A P lt2 z s a) = (term604 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8250614 A lt2 z) (@lem8250613 A P s a)). Qed.
Lemma lem8250617 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250618 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8250617 A (A -> Prop) f x). Qed.
Lemma lem8250619 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem8250618 A lt2 z). Qed.
Lemma lem8250620 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8250621 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term604 A P lt2 z s a) = (term605 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8250619 A lt2 z) (@lem8250620 A P s a)). Qed.
Lemma lem8250623 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250624 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8250623 A Prop f x). Qed.
Lemma lem8250625 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term605 A P lt2 z s a) = (term606 A P lt2 z s a).
Proof. exact (@lem8250624 A (@I (A -> A -> Prop) lt2 z) (@I (P -> A) s a)). Qed.
Lemma lem8250626 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term604 A P lt2 z s a) = (term606 A P lt2 z s a).
Proof. exact (TRANS (@lem8250621 A P lt2 z s a) (@lem8250625 A P lt2 z s a)). Qed.
Lemma lem8250627 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term341 A P lt2 z s a) = (term606 A P lt2 z s a).
Proof. exact (TRANS (@lem8250615 A P lt2 z s a) (@lem8250626 A P lt2 z s a)). Qed.
Lemma lem8250628 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term607 A P lt2 z s a) = (term608 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8250603) (@lem8250627 A P lt2 z s a)). Qed.
Lemma lem8250629 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250630 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term609 A P lt2 z s a) = (term610 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8250629) (@lem8250628 A P lt2 z s a)). Qed.
Lemma lem8250631 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term584 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8250630 A P lt2 z s a) (@lem8250602 A B f g z)). Qed.
Lemma lem8250632 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term585 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8250631 A B P lt2 s a f g z)). Qed.
Lemma lem8250633 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8250634 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term586 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8250633 A) (@lem8250632 A B P lt2 s a f g)). Qed.
Lemma lem8250635 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8250634 A B P lt2 s a f g) (@lem8250537 A B P lt2 s a f g h1)). Qed.
Lemma lem8250636 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250643 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250644 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250643 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250645 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8250644 A B P P' g). Qed.
Lemma lem8250646 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250647 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8250645 A B P P' g) (@lem8250646 P a)). Qed.
Lemma lem8250649 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250650 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250649 P Prop f x). Qed.
Lemma lem8250651 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8250650 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8250653 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8250647 A B P P' g a) (@lem8250651 A B P P' g a)). Qed.
Lemma lem8250654 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P' g a) = (term615 A B P P' g a).
Proof. exact (MK_COMB (@lem8250636) (@lem8250653 A B P P' g a)). Qed.
Lemma lem8250661 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250662 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250661 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250663 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8250662 A B P p g). Qed.
Lemma lem8250664 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250665 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8250663 A B P p g) (@lem8250664 P a)). Qed.
Lemma lem8250667 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250668 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250667 P Prop f x). Qed.
Lemma lem8250669 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8250668 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8250671 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8250665 A B P p g a) (@lem8250669 A B P p g a)). Qed.
Lemma lem8250672 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8250673 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term616 A B P p g a).
Proof. exact (MK_COMB (@lem8250672) (@lem8250671 A B P p g a)). Qed.
Lemma lem8250674 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term216 A B P p P' g a) = (term617 A B P p P' g a).
Proof. exact (MK_COMB (@lem8250673 A B P p g a) (@lem8250654 A B P P' g a)). Qed.
Lemma lem8250681 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250682 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250681 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250683 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8250682 A B P P' f). Qed.
Lemma lem8250684 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250685 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8250683 A B P P' f) (@lem8250684 P a)). Qed.
Lemma lem8250687 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250688 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250687 P Prop f x). Qed.
Lemma lem8250689 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8250688 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8250691 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8250685 A B P P' f a) (@lem8250689 A B P P' f a)). Qed.
Lemma lem8250692 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250699 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250700 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250699 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250701 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8250700 A B P p f). Qed.
Lemma lem8250702 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250703 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8250701 A B P p f) (@lem8250702 P a)). Qed.
Lemma lem8250705 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250706 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250705 P Prop f x). Qed.
Lemma lem8250707 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8250706 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8250709 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8250703 A B P p f a) (@lem8250707 A B P p f a)). Qed.
Lemma lem8250710 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term373 A B P p f a) = (term615 A B P p f a).
Proof. exact (MK_COMB (@lem8250692) (@lem8250709 A B P p f a)). Qed.
Lemma lem8250711 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250712 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term618 A B P p f a).
Proof. exact (MK_COMB (@lem8250711) (@lem8250710 A B P p f a)). Qed.
Lemma lem8250713 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term589 A B P p P' f a) = (term619 A B P p P' f a).
Proof. exact (MK_COMB (@lem8250712 A B P p f a) (@lem8250691 A B P P' f a)). Qed.
Lemma lem8250714 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8250715 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term592 A B P p P' f a) = (term620 A B P p P' f a).
Proof. exact (MK_COMB (@lem8250714) (@lem8250713 A B P p P' f a)). Qed.
Lemma lem8250716 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term594 A B P f p P' g a) = (term621 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250715 A B P p P' f a) (@lem8250674 A B P p P' g a)). Qed.
Lemma lem8250723 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250724 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250723 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250725 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8250724 A B P P' g). Qed.
Lemma lem8250726 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250727 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8250725 A B P P' g) (@lem8250726 P a)). Qed.
Lemma lem8250729 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250730 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250729 P Prop f x). Qed.
Lemma lem8250731 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8250730 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8250733 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8250727 A B P P' g a) (@lem8250731 A B P P' g a)). Qed.
Lemma lem8250734 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250741 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250742 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250741 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250743 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8250742 A B P p g). Qed.
Lemma lem8250744 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250745 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8250743 A B P p g) (@lem8250744 P a)). Qed.
Lemma lem8250747 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250748 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250747 P Prop f x). Qed.
Lemma lem8250749 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8250748 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8250751 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8250745 A B P p g a) (@lem8250749 A B P p g a)). Qed.
Lemma lem8250752 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term373 A B P p g a) = (term615 A B P p g a).
Proof. exact (MK_COMB (@lem8250734) (@lem8250751 A B P p g a)). Qed.
Lemma lem8250753 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250754 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term618 A B P p g a).
Proof. exact (MK_COMB (@lem8250753) (@lem8250752 A B P p g a)). Qed.
Lemma lem8250755 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term589 A B P p P' g a) = (term619 A B P p P' g a).
Proof. exact (MK_COMB (@lem8250754 A B P p g a) (@lem8250733 A B P P' g a)). Qed.
Lemma lem8250756 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250763 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250764 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250763 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250765 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8250764 A B P P' f). Qed.
Lemma lem8250766 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250767 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8250765 A B P P' f) (@lem8250766 P a)). Qed.
Lemma lem8250769 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250770 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250769 P Prop f x). Qed.
Lemma lem8250771 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8250770 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8250773 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8250767 A B P P' f a) (@lem8250771 A B P P' f a)). Qed.
Lemma lem8250774 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (MK_COMB (@lem8250756) (@lem8250773 A B P P' f a)). Qed.
Lemma lem8250781 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250782 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250781 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250783 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8250782 A B P p f). Qed.
Lemma lem8250784 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250785 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8250783 A B P p f) (@lem8250784 P a)). Qed.
Lemma lem8250787 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250788 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250787 P Prop f x). Qed.
Lemma lem8250789 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8250788 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8250791 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8250785 A B P p f a) (@lem8250789 A B P p f a)). Qed.
Lemma lem8250792 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8250793 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term616 A B P p f a).
Proof. exact (MK_COMB (@lem8250792) (@lem8250791 A B P p f a)). Qed.
Lemma lem8250794 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term216 A B P p P' f a) = (term617 A B P p P' f a).
Proof. exact (MK_COMB (@lem8250793 A B P p f a) (@lem8250774 A B P P' f a)). Qed.
Lemma lem8250795 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8250796 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term595 A B P p P' f a) = (term622 A B P p P' f a).
Proof. exact (MK_COMB (@lem8250795) (@lem8250794 A B P p P' f a)). Qed.
Lemma lem8250797 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term597 A B P f p P' g a) = (term623 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250796 A B P p P' f a) (@lem8250755 A B P p P' g a)). Qed.
Lemma lem8250798 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250799 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term599 A B P f p P' g a) = (term624 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250798) (@lem8250797 A B P f p P' g a)). Qed.
Lemma lem8250800 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term601 A B P f p P' g a) = (term625 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8250799 A B P f p P' g a) (@lem8250716 A B P f p P' g a)). Qed.
Lemma lem8250801 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term338 A B P f p P' g a) : term625 A B P f p P' g a.
Proof. exact (EQ_MP (@lem8250800 A B P f p P' g a) (@lem8250581 A B P f p P' g a h1)). Qed.
Lemma lem8250808 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250809 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250808 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250810 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8250809 A B P p g). Qed.
Lemma lem8250811 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250812 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8250810 A B P p g) (@lem8250811 P a)). Qed.
Lemma lem8250814 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250815 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250814 P Prop f x). Qed.
Lemma lem8250816 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8250815 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8250818 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8250812 A B P p g a) (@lem8250816 A B P p g a)). Qed.
Lemma lem8250819 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250826 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250827 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250826 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250828 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8250827 A B P p f). Qed.
Lemma lem8250829 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250830 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8250828 A B P p f) (@lem8250829 P a)). Qed.
Lemma lem8250832 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250833 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250832 P Prop f x). Qed.
Lemma lem8250834 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8250833 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8250836 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8250830 A B P p f a) (@lem8250834 A B P p f a)). Qed.
Lemma lem8250837 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term373 A B P p f a) = (term615 A B P p f a).
Proof. exact (MK_COMB (@lem8250819) (@lem8250836 A B P p f a)). Qed.
Lemma lem8250838 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250839 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term618 A B P p f a).
Proof. exact (MK_COMB (@lem8250838) (@lem8250837 A B P p f a)). Qed.
Lemma lem8250840 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term626 A B P f p g a) = (term627 A B P f p g a).
Proof. exact (MK_COMB (@lem8250839 A B P p f a) (@lem8250818 A B P p g a)). Qed.
Lemma lem8250841 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250848 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250849 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250848 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250850 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8250849 A B P p g). Qed.
Lemma lem8250851 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250852 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8250850 A B P p g) (@lem8250851 P a)). Qed.
Lemma lem8250854 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250855 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250854 P Prop f x). Qed.
Lemma lem8250856 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8250855 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8250858 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8250852 A B P p g a) (@lem8250856 A B P p g a)). Qed.
Lemma lem8250859 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term373 A B P p g a) = (term615 A B P p g a).
Proof. exact (MK_COMB (@lem8250841) (@lem8250858 A B P p g a)). Qed.
Lemma lem8250866 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250867 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8250866 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8250868 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8250867 A B P p f). Qed.
Lemma lem8250869 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250870 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8250868 A B P p f) (@lem8250869 P a)). Qed.
Lemma lem8250872 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250873 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8250872 P Prop f x). Qed.
Lemma lem8250874 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8250873 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8250876 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8250870 A B P p f a) (@lem8250874 A B P p f a)). Qed.
Lemma lem8250877 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8250878 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term628 A B P p f a) = (term629 A B P p f a).
Proof. exact (MK_COMB (@lem8250877) (@lem8250876 A B P p f a)). Qed.
Lemma lem8250879 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term630 A B P f p g a) = (term631 A B P f p g a).
Proof. exact (MK_COMB (@lem8250878 A B P p f a) (@lem8250859 A B P p g a)). Qed.
Lemma lem8250880 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8250881 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term632 A B P f p g a) = (term633 A B P f p g a).
Proof. exact (MK_COMB (@lem8250880) (@lem8250879 A B P f p g a)). Qed.
Lemma lem8250882 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term634 A B P f p g a).
Proof. exact (MK_COMB (@lem8250881 A B P f p g a) (@lem8250840 A B P f p g a)). Qed.
Lemma lem8250883 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8250884 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8250885 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8250894 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250895 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8250894 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8250896 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8250895 A B P z f). Qed.
Lemma lem8250897 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8250898 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8250896 A B P z f) (@lem8250897 A B g)). Qed.
Lemma lem8250900 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250901 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8250900 (A -> B) (P -> A) f x). Qed.
Lemma lem8250902 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term635 A B P z f g).
Proof. exact (@lem8250901 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8250903 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term635 A B P z f g).
Proof. exact (TRANS (@lem8250898 A B P z f g) (@lem8250902 A B P z f g)). Qed.
Lemma lem8250904 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250905 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term636 A B P z f g a).
Proof. exact (MK_COMB (@lem8250903 A B P z f g) (@lem8250904 P a)). Qed.
Lemma lem8250907 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250908 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8250907 P A f x). Qed.
Lemma lem8250909 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z f g a) = (term637 A B P z f g a).
Proof. exact (@lem8250908 A P (term635 A B P z f g) a). Qed.
Lemma lem8250911 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term637 A B P z f g a).
Proof. exact (TRANS (@lem8250905 A B P z f g a) (@lem8250909 A B P z f g a)). Qed.
Lemma lem8250912 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z f g a) = (term639 A B P z f g a).
Proof. exact (MK_COMB (@lem8250885 A B f) (@lem8250911 A B P z f g a)). Qed.
Lemma lem8250914 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250915 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8250914 A B f x). Qed.
Lemma lem8250916 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term639 A B P z f g a) = (term640 A B P z f g a).
Proof. exact (@lem8250915 A B f (term637 A B P z f g a)). Qed.
Lemma lem8250917 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z f g a) = (term640 A B P z f g a).
Proof. exact (TRANS (@lem8250912 A B P z f g a) (@lem8250916 A B P z f g a)). Qed.
Lemma lem8250918 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8250927 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250928 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8250927 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8250929 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8250928 A B P z f). Qed.
Lemma lem8250930 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8250931 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8250929 A B P z f) (@lem8250930 A B g)). Qed.
Lemma lem8250933 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250934 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8250933 (A -> B) (P -> A) f x). Qed.
Lemma lem8250935 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term635 A B P z f g).
Proof. exact (@lem8250934 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8250936 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term635 A B P z f g).
Proof. exact (TRANS (@lem8250931 A B P z f g) (@lem8250935 A B P z f g)). Qed.
Lemma lem8250937 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250938 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term636 A B P z f g a).
Proof. exact (MK_COMB (@lem8250936 A B P z f g) (@lem8250937 P a)). Qed.
Lemma lem8250940 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250941 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8250940 P A f x). Qed.
Lemma lem8250942 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z f g a) = (term637 A B P z f g a).
Proof. exact (@lem8250941 A P (term635 A B P z f g) a). Qed.
Lemma lem8250944 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term637 A B P z f g a).
Proof. exact (TRANS (@lem8250938 A B P z f g a) (@lem8250942 A B P z f g a)). Qed.
Lemma lem8250945 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z f g a) = (term642 A B P z f g a).
Proof. exact (MK_COMB (@lem8250918 A B g) (@lem8250944 A B P z f g a)). Qed.
Lemma lem8250947 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250948 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8250947 A B f x). Qed.
Lemma lem8250949 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term642 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8250948 A B g (term637 A B P z f g a)). Qed.
Lemma lem8250950 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (TRANS (@lem8250945 A B P z f g a) (@lem8250949 A B P z f g a)). Qed.
Lemma lem8250951 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term644 A B P z f g a) = (term645 A B P z f g a).
Proof. exact (MK_COMB (@lem8250884 B) (@lem8250917 A B P z f g a)). Qed.
Lemma lem8250952 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : ((term638 A B P z f g a) = (term641 A B P z f g a)) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (MK_COMB (@lem8250951 A B P z f g a) (@lem8250950 A B P z f g a)). Qed.
Lemma lem8250953 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term646 A B P z f g a) = (term647 A B P z f g a).
Proof. exact (MK_COMB (@lem8250883) (@lem8250952 A B P z f g a)). Qed.
Lemma lem8250954 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8250963 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250964 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8250963 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8250965 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8250964 A B P z f). Qed.
Lemma lem8250966 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8250967 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8250965 A B P z f) (@lem8250966 A B g)). Qed.
Lemma lem8250969 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250970 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8250969 (A -> B) (P -> A) f x). Qed.
Lemma lem8250971 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term635 A B P z f g).
Proof. exact (@lem8250970 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8250972 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term635 A B P z f g).
Proof. exact (TRANS (@lem8250967 A B P z f g) (@lem8250971 A B P z f g)). Qed.
Lemma lem8250973 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8250974 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term636 A B P z f g a).
Proof. exact (MK_COMB (@lem8250972 A B P z f g) (@lem8250973 P a)). Qed.
Lemma lem8250976 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250977 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8250976 P A f x). Qed.
Lemma lem8250978 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z f g a) = (term637 A B P z f g a).
Proof. exact (@lem8250977 A P (term635 A B P z f g) a). Qed.
Lemma lem8250980 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term637 A B P z f g a).
Proof. exact (TRANS (@lem8250974 A B P z f g a) (@lem8250978 A B P z f g a)). Qed.
Lemma lem8250985 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250986 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8250985 P A f x). Qed.
Lemma lem8250988 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8250986 A P s a). Qed.
Lemma lem8250989 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term648 A B P lt2 z f g a) = (term649 A B P lt2 z f g a).
Proof. exact (MK_COMB (@lem8250954 A lt2) (@lem8250980 A B P z f g a)). Qed.
Lemma lem8250990 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z f g s a) = (term651 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8250989 A B P lt2 z f g a) (@lem8250988 A P s a)). Qed.
Lemma lem8250992 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250993 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8250992 A (A -> Prop) f x). Qed.
Lemma lem8250994 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term649 A B P lt2 z f g a) = (term652 A B P lt2 z f g a).
Proof. exact (@lem8250993 A lt2 (term637 A B P z f g a)). Qed.
Lemma lem8250995 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8250996 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z f g s a) = (term653 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8250994 A B P lt2 z f g a) (@lem8250995 A P s a)). Qed.
Lemma lem8250998 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8250999 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8250998 A Prop f x). Qed.
Lemma lem8251000 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term653 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8250999 A (term652 A B P lt2 z f g a) (@I (P -> A) s a)). Qed.
Lemma lem8251001 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8250996 A B P lt2 z f g s a) (@lem8251000 A B P lt2 z f g s a)). Qed.
Lemma lem8251002 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8250990 A B P lt2 z f g s a) (@lem8251001 A B P lt2 z f g s a)). Qed.
Lemma lem8251003 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251004 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term655 A B P lt2 z f g s a) = (term656 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8251003) (@lem8251002 A B P lt2 z f g s a)). Qed.
Lemma lem8251005 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term657 A B P lt2 s z f g a) = (term658 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8251004 A B P lt2 z f g s a) (@lem8250953 A B P z f g a)). Qed.
Lemma lem8251006 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251007 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term659 A B P lt2 s z f g a) = (term660 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8251006) (@lem8251005 A B P lt2 s z f g a)). Qed.
Lemma lem8251008 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term661 A B P lt2 s z f p g a) = (term662 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251007 A B P lt2 s z f g a) (@lem8250882 A B P f p g a)). Qed.
Lemma lem8251009 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term663 A B P lt2 s z f p g) = (term664 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8251008 A B P lt2 s z f p g a)). Qed.
Lemma lem8251010 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251011 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term665 A B P lt2 s z f p g) = (term666 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8251010 P) (@lem8251009 A B P lt2 s z f p g)). Qed.
Lemma lem8251012 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term667 A B P lt2 s z f p) = (term668 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8251011 A B P lt2 s z f p g)). Qed.
Lemma lem8251013 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251014 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term576 A B P lt2 s z f p) = (term669 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8251013 A B) (@lem8251012 A B P lt2 s z f p)). Qed.
Lemma lem8251015 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term578 A B P lt2 s z p) = (term670 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8251014 A B P lt2 s z f p)). Qed.
Lemma lem8251016 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251017 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term580 A B P lt2 s z p) = (term671 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8251016 A B) (@lem8251015 A B P lt2 s z p)). Qed.
Lemma lem8251018 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term671 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8251017 A B P lt2 s z p) (@lem8250582 A B P lt2 s z p h1)). Qed.
Lemma lem8251025 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251026 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8251025 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8251027 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8251026 A B P P' g). Qed.
Lemma lem8251028 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251029 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8251027 A B P P' g) (@lem8251028 P a)). Qed.
Lemma lem8251031 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251032 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8251031 P Prop f x). Qed.
Lemma lem8251033 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8251032 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8251035 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8251029 A B P P' g a) (@lem8251033 A B P P' g a)). Qed.
Lemma lem8251036 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8251043 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251044 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8251043 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8251045 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8251044 A B P P' f). Qed.
Lemma lem8251046 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251047 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8251045 A B P P' f) (@lem8251046 P a)). Qed.
Lemma lem8251049 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251050 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8251049 P Prop f x). Qed.
Lemma lem8251051 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8251050 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8251053 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8251047 A B P P' f a) (@lem8251051 A B P P' f a)). Qed.
Lemma lem8251054 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (MK_COMB (@lem8251036) (@lem8251053 A B P P' f a)). Qed.
Lemma lem8251055 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251056 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term351 A B P P' f a) = (term618 A B P P' f a).
Proof. exact (MK_COMB (@lem8251055) (@lem8251054 A B P P' f a)). Qed.
Lemma lem8251057 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term626 A B P f P' g a) = (term627 A B P f P' g a).
Proof. exact (MK_COMB (@lem8251056 A B P P' f a) (@lem8251035 A B P P' g a)). Qed.
Lemma lem8251058 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8251065 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251066 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8251065 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8251067 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8251066 A B P P' g). Qed.
Lemma lem8251068 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251069 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8251067 A B P P' g) (@lem8251068 P a)). Qed.
Lemma lem8251071 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251072 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8251071 P Prop f x). Qed.
Lemma lem8251073 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8251072 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8251075 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8251069 A B P P' g a) (@lem8251073 A B P P' g a)). Qed.
Lemma lem8251076 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P' g a) = (term615 A B P P' g a).
Proof. exact (MK_COMB (@lem8251058) (@lem8251075 A B P P' g a)). Qed.
Lemma lem8251083 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251084 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8251083 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8251085 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8251084 A B P P' f). Qed.
Lemma lem8251086 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251087 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8251085 A B P P' f) (@lem8251086 P a)). Qed.
Lemma lem8251089 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251090 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8251089 P Prop f x). Qed.
Lemma lem8251091 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8251090 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8251093 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8251087 A B P P' f a) (@lem8251091 A B P P' f a)). Qed.
Lemma lem8251094 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251095 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term628 A B P P' f a) = (term629 A B P P' f a).
Proof. exact (MK_COMB (@lem8251094) (@lem8251093 A B P P' f a)). Qed.
Lemma lem8251096 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term630 A B P f P' g a) = (term631 A B P f P' g a).
Proof. exact (MK_COMB (@lem8251095 A B P P' f a) (@lem8251076 A B P P' g a)). Qed.
Lemma lem8251097 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251098 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term632 A B P f P' g a) = (term633 A B P f P' g a).
Proof. exact (MK_COMB (@lem8251097) (@lem8251096 A B P f P' g a)). Qed.
Lemma lem8251099 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term634 A B P f P' g a).
Proof. exact (MK_COMB (@lem8251098 A B P f P' g a) (@lem8251057 A B P f P' g a)). Qed.
Lemma lem8251100 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8251101 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8251102 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8251111 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251112 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8251111 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8251113 {A B P : Type'} (z' : type518 A B P) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f).
Proof. exact (@lem8251112 A B P z' f). Qed.
Lemma lem8251114 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8251115 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f g).
Proof. exact (MK_COMB (@lem8251113 A B P z' f) (@lem8251114 A B g)). Qed.
Lemma lem8251117 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251118 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8251117 (A -> B) (P -> A) f x). Qed.
Lemma lem8251119 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z' f g) = (term635 A B P z' f g).
Proof. exact (@lem8251118 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z' f) g). Qed.
Lemma lem8251120 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (term635 A B P z' f g).
Proof. exact (TRANS (@lem8251115 A B P z' f g) (@lem8251119 A B P z' f g)). Qed.
Lemma lem8251121 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251122 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term636 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251120 A B P z' f g) (@lem8251121 P a)). Qed.
Lemma lem8251124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251125 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8251124 P A f x). Qed.
Lemma lem8251126 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z' f g a) = (term637 A B P z' f g a).
Proof. exact (@lem8251125 A P (term635 A B P z' f g) a). Qed.
Lemma lem8251128 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term637 A B P z' f g a).
Proof. exact (TRANS (@lem8251122 A B P z' f g a) (@lem8251126 A B P z' f g a)). Qed.
Lemma lem8251129 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z' f g a) = (term639 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251102 A B f) (@lem8251128 A B P z' f g a)). Qed.
Lemma lem8251131 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8251131 A B f x). Qed.
Lemma lem8251133 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term639 A B P z' f g a) = (term640 A B P z' f g a).
Proof. exact (@lem8251132 A B f (term637 A B P z' f g a)). Qed.
Lemma lem8251134 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z' f g a) = (term640 A B P z' f g a).
Proof. exact (TRANS (@lem8251129 A B P z' f g a) (@lem8251133 A B P z' f g a)). Qed.
Lemma lem8251135 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8251144 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251145 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8251144 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8251146 {A B P : Type'} (z' : type518 A B P) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f).
Proof. exact (@lem8251145 A B P z' f). Qed.
Lemma lem8251147 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8251148 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f g).
Proof. exact (MK_COMB (@lem8251146 A B P z' f) (@lem8251147 A B g)). Qed.
Lemma lem8251150 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251151 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8251150 (A -> B) (P -> A) f x). Qed.
Lemma lem8251152 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z' f g) = (term635 A B P z' f g).
Proof. exact (@lem8251151 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z' f) g). Qed.
Lemma lem8251153 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (term635 A B P z' f g).
Proof. exact (TRANS (@lem8251148 A B P z' f g) (@lem8251152 A B P z' f g)). Qed.
Lemma lem8251154 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251155 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term636 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251153 A B P z' f g) (@lem8251154 P a)). Qed.
Lemma lem8251157 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251158 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8251157 P A f x). Qed.
Lemma lem8251159 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z' f g a) = (term637 A B P z' f g a).
Proof. exact (@lem8251158 A P (term635 A B P z' f g) a). Qed.
Lemma lem8251161 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term637 A B P z' f g a).
Proof. exact (TRANS (@lem8251155 A B P z' f g a) (@lem8251159 A B P z' f g a)). Qed.
Lemma lem8251162 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z' f g a) = (term642 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251135 A B g) (@lem8251161 A B P z' f g a)). Qed.
Lemma lem8251164 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251165 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8251164 A B f x). Qed.
Lemma lem8251166 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term642 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (@lem8251165 A B g (term637 A B P z' f g a)). Qed.
Lemma lem8251167 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (TRANS (@lem8251162 A B P z' f g a) (@lem8251166 A B P z' f g a)). Qed.
Lemma lem8251168 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term644 A B P z' f g a) = (term645 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251101 B) (@lem8251134 A B P z' f g a)). Qed.
Lemma lem8251169 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : ((term638 A B P z' f g a) = (term641 A B P z' f g a)) = ((term640 A B P z' f g a) = (term643 A B P z' f g a)).
Proof. exact (MK_COMB (@lem8251168 A B P z' f g a) (@lem8251167 A B P z' f g a)). Qed.
Lemma lem8251170 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term646 A B P z' f g a) = (term647 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251100) (@lem8251169 A B P z' f g a)). Qed.
Lemma lem8251171 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8251180 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251181 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8251180 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8251182 {A B P : Type'} (z' : type518 A B P) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f).
Proof. exact (@lem8251181 A B P z' f). Qed.
Lemma lem8251183 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8251184 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f g).
Proof. exact (MK_COMB (@lem8251182 A B P z' f) (@lem8251183 A B g)). Qed.
Lemma lem8251186 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251187 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8251186 (A -> B) (P -> A) f x). Qed.
Lemma lem8251188 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z' f g) = (term635 A B P z' f g).
Proof. exact (@lem8251187 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z' f) g). Qed.
Lemma lem8251189 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (term635 A B P z' f g).
Proof. exact (TRANS (@lem8251184 A B P z' f g) (@lem8251188 A B P z' f g)). Qed.
Lemma lem8251190 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251191 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term636 A B P z' f g a).
Proof. exact (MK_COMB (@lem8251189 A B P z' f g) (@lem8251190 P a)). Qed.
Lemma lem8251193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251194 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8251193 P A f x). Qed.
Lemma lem8251195 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z' f g a) = (term637 A B P z' f g a).
Proof. exact (@lem8251194 A P (term635 A B P z' f g) a). Qed.
Lemma lem8251197 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term637 A B P z' f g a).
Proof. exact (TRANS (@lem8251191 A B P z' f g a) (@lem8251195 A B P z' f g a)). Qed.
Lemma lem8251202 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251203 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8251202 P A f x). Qed.
Lemma lem8251205 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8251203 A P s a). Qed.
Lemma lem8251206 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term648 A B P lt2 z' f g a) = (term649 A B P lt2 z' f g a).
Proof. exact (MK_COMB (@lem8251171 A lt2) (@lem8251197 A B P z' f g a)). Qed.
Lemma lem8251207 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z' f g s a) = (term651 A B P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8251206 A B P lt2 z' f g a) (@lem8251205 A P s a)). Qed.
Lemma lem8251209 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251210 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8251209 A (A -> Prop) f x). Qed.
Lemma lem8251211 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term649 A B P lt2 z' f g a) = (term652 A B P lt2 z' f g a).
Proof. exact (@lem8251210 A lt2 (term637 A B P z' f g a)). Qed.
Lemma lem8251212 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8251213 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z' f g s a) = (term653 A B P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8251211 A B P lt2 z' f g a) (@lem8251212 A P s a)). Qed.
Lemma lem8251215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251216 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8251215 A Prop f x). Qed.
Lemma lem8251217 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term653 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (@lem8251216 A (term652 A B P lt2 z' f g a) (@I (P -> A) s a)). Qed.
Lemma lem8251218 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (TRANS (@lem8251213 A B P lt2 z' f g s a) (@lem8251217 A B P lt2 z' f g s a)). Qed.
Lemma lem8251219 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (TRANS (@lem8251207 A B P lt2 z' f g s a) (@lem8251218 A B P lt2 z' f g s a)). Qed.
Lemma lem8251220 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251221 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term655 A B P lt2 z' f g s a) = (term656 A B P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8251220) (@lem8251219 A B P lt2 z' f g s a)). Qed.
Lemma lem8251222 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term657 A B P lt2 s z' f g a) = (term658 A B P lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8251221 A B P lt2 z' f g s a) (@lem8251170 A B P z' f g a)). Qed.
Lemma lem8251223 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8251230 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251231 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8251230 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8251232 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8251231 A B P p g). Qed.
Lemma lem8251233 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251234 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8251232 A B P p g) (@lem8251233 P a)). Qed.
Lemma lem8251236 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251237 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8251236 P Prop f x). Qed.
Lemma lem8251238 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8251237 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8251240 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8251234 A B P p g a) (@lem8251238 A B P p g a)). Qed.
Lemma lem8251241 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term373 A B P p g a) = (term615 A B P p g a).
Proof. exact (MK_COMB (@lem8251223) (@lem8251240 A B P p g a)). Qed.
Lemma lem8251242 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251243 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term618 A B P p g a).
Proof. exact (MK_COMB (@lem8251242) (@lem8251241 A B P p g a)). Qed.
Lemma lem8251244 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term672 A B P p lt2 s z' f g a) = (term673 A B P p lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8251243 A B P p g a) (@lem8251222 A B P lt2 s z' f g a)). Qed.
Lemma lem8251245 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8251252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251253 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8251252 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8251254 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8251253 A B P p f). Qed.
Lemma lem8251255 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8251256 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8251254 A B P p f) (@lem8251255 P a)). Qed.
Lemma lem8251258 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8251259 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8251258 P Prop f x). Qed.
Lemma lem8251260 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8251259 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8251262 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8251256 A B P p f a) (@lem8251260 A B P p f a)). Qed.
Lemma lem8251263 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term373 A B P p f a) = (term615 A B P p f a).
Proof. exact (MK_COMB (@lem8251245) (@lem8251262 A B P p f a)). Qed.
Lemma lem8251264 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251265 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term618 A B P p f a).
Proof. exact (MK_COMB (@lem8251264) (@lem8251263 A B P p f a)). Qed.
Lemma lem8251266 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term674 A B P p lt2 s z' f g a) = (term675 A B P p lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8251265 A B P p f a) (@lem8251244 A B P p lt2 s z' f g a)). Qed.
Lemma lem8251267 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251268 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term676 A B P p lt2 s z' f g a) = (term677 A B P p lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8251267) (@lem8251266 A B P p lt2 s z' f g a)). Qed.
Lemma lem8251269 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term678 A B P p lt2 s z' f P' g a) = (term679 A B P p lt2 s z' f P' g a).
Proof. exact (MK_COMB (@lem8251268 A B P p lt2 s z' f g a) (@lem8251099 A B P f P' g a)). Qed.
Lemma lem8251270 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term680 A B P p lt2 s z' f P' g) = (term681 A B P p lt2 s z' f P' g).
Proof. exact (fun_ext (fun a : P => @lem8251269 A B P p lt2 s z' f P' g a)). Qed.
Lemma lem8251271 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251272 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term682 A B P p lt2 s z' f P' g) = (term683 A B P p lt2 s z' f P' g).
Proof. exact (MK_COMB (@lem8251271 P) (@lem8251270 A B P p lt2 s z' f P' g)). Qed.
Lemma lem8251273 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term684 A B P p lt2 s z' f P') = (term685 A B P p lt2 s z' f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8251272 A B P p lt2 s z' f P' g)). Qed.
Lemma lem8251274 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251275 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term485 A B P p lt2 s z' f P') = (term686 A B P p lt2 s z' f P').
Proof. exact (MK_COMB (@lem8251274 A B) (@lem8251273 A B P p lt2 s z' f P')). Qed.
Lemma lem8251276 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) : (term487 A B P p lt2 s z' P') = (term687 A B P p lt2 s z' P').
Proof. exact (fun_ext (fun f : A -> B => @lem8251275 A B P p lt2 s z' f P')). Qed.
Lemma lem8251277 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251278 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) : (term489 A B P p lt2 s z' P') = (term688 A B P p lt2 s z' P').
Proof. exact (MK_COMB (@lem8251277 A B) (@lem8251276 A B P p lt2 s z' P')). Qed.
Lemma lem8251279 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term688 A B P p lt2 s z' P'.
Proof. exact (EQ_MP (@lem8251278 A B P p lt2 s z' P') (@lem8250583 A B P p lt2 s z' P' h1)). Qed.
Lemma lem8251280 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term623 A B P f p P' g a.
Proof. exact (h1). Qed.
Lemma lem8251281 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term621 A B P f p P' g a.
Proof. exact (h1). Qed.
Lemma lem8251282 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term619 A B P p P' g a.
Proof. exact (proj2 (@lem8251280 A B P f p P' g a h1)). Qed.
Lemma lem8251283 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term617 A B P p P' f a.
Proof. exact (proj1 (@lem8251280 A B P f p P' g a h1)). Qed.
Lemma lem8251288 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term617 A B P p P' g a.
Proof. exact (proj2 (@lem8251281 A B P f p P' g a h1)). Qed.
Lemma lem8251289 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term619 A B P p P' f a.
Proof. exact (proj1 (@lem8251281 A B P f p P' g a h1)). Qed.
Lemma lem8251301 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8251302 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8251301 A B P lt2 s a f g z)). Qed.
Lemma lem8251303 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8251305 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8251303 A) (@lem8251302 A B P lt2 s a f g)). Qed.
Lemma lem8251306 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8251305 A B P lt2 s a f g) (@lem8250635 A B P lt2 s a f g h1)). Qed.
Lemma lem8251333 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251340 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251347 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8251348 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251348) (@lem8251347 A B P lt2 s z f p g a)). Qed.
Lemma lem8251350 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251349 A B P lt2 s z f p g a) (@lem8251340 A B P lt2 s z f p g a)). Qed.
Lemma lem8251352 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8251333 A B P lt2 s z f p g a) (@lem8251350 A B P lt2 s z f p g a)). Qed.
Lemma lem8251353 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8251352 A B P lt2 s z f p g a)). Qed.
Lemma lem8251354 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251355 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8251354 P) (@lem8251353 A B P lt2 s z f p g)). Qed.
Lemma lem8251356 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8251355 A B P lt2 s z f p g)). Qed.
Lemma lem8251357 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251358 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8251357 A B) (@lem8251356 A B P lt2 s z f p)). Qed.
Lemma lem8251359 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8251358 A B P lt2 s z f p)). Qed.
Lemma lem8251360 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251362 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8251360 A B) (@lem8251359 A B P lt2 s z p)). Qed.
Lemma lem8251363 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8251362 A B P lt2 s z p) (@lem8251018 A B P lt2 s z p h1)). Qed.
Lemma lem8251456 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8251464 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8251465 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8251464 A B P lt2 s a f g z)). Qed.
Lemma lem8251466 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8251468 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8251466 A) (@lem8251465 A B P lt2 s a f g)). Qed.
Lemma lem8251469 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8251468 A B P lt2 s a f g) (@lem8250635 A B P lt2 s a f g h1)). Qed.
Lemma lem8251496 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251503 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251510 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8251511 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251512 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251511) (@lem8251510 A B P lt2 s z f p g a)). Qed.
Lemma lem8251513 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251512 A B P lt2 s z f p g a) (@lem8251503 A B P lt2 s z f p g a)). Qed.
Lemma lem8251515 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8251496 A B P lt2 s z f p g a) (@lem8251513 A B P lt2 s z f p g a)). Qed.
Lemma lem8251516 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8251515 A B P lt2 s z f p g a)). Qed.
Lemma lem8251517 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251518 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8251517 P) (@lem8251516 A B P lt2 s z f p g)). Qed.
Lemma lem8251519 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8251518 A B P lt2 s z f p g)). Qed.
Lemma lem8251520 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251521 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8251520 A B) (@lem8251519 A B P lt2 s z f p)). Qed.
Lemma lem8251522 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8251521 A B P lt2 s z f p)). Qed.
Lemma lem8251523 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251525 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8251523 A B) (@lem8251522 A B P lt2 s z p)). Qed.
Lemma lem8251526 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8251525 A B P lt2 s z p) (@lem8251018 A B P lt2 s z p h1)). Qed.
Lemma lem8251544 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term634 A B P f P' g a) = (term634 A B P f P' g a).
Proof. exact (eq_refl (term634 A B P f P' g a)). Qed.
Lemma lem8251561 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term673 A B P p lt2 s z' f g a) = (term703 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term654 A B P lt2 z' f g s a) (term615 A B P p g a) (term647 A B P z' f g a)). Qed.
Lemma lem8251564 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term618 A B P p f a) = (term618 A B P p f a).
Proof. exact (eq_refl (term618 A B P p f a)). Qed.
Lemma lem8251565 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term704 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8251564 A B P p f a) (@lem8251561 A B P lt2 s p z' f g a)). Qed.
Lemma lem8251572 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term704 A B P lt2 s p z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term706 A B P p lt2 z' f g s a) (term615 A B P p f a) (term707 A B P p z' f g a)). Qed.
Lemma lem8251573 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (TRANS (@lem8251565 A B P lt2 s p z' f g a) (@lem8251572 A B P lt2 s p z' f g a)). Qed.
Lemma lem8251574 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251575 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term677 A B P p lt2 s z' f g a) = (term708 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8251574) (@lem8251573 A B P lt2 s p z' f g a)). Qed.
Lemma lem8251576 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term709 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8251575 A B P lt2 s p z' f g a) (@lem8251544 A B P f P' g a)). Qed.
Lemma lem8251577 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term710 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19490 (term631 A B P f P' g a) (term705 A B P lt2 s p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8251584 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term711 A B P lt2 s p z' f P' g a) = (term712 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8251591 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term715 A B P lt2 s p z' f P' g a) = (term716 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term631 A B P f P' g a)). Qed.
Lemma lem8251592 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251593 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term717 A B P lt2 s p z' f P' g a) = (term718 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8251592) (@lem8251591 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251594 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term710 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8251593 A B P lt2 s p z' f P' g a) (@lem8251584 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251595 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8251577 A B P lt2 s p z' f P' g a) (@lem8251594 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251596 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8251576 A B P lt2 s p z' f P' g a) (@lem8251595 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251597 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term681 A B P p lt2 s z' f P' g) = (term720 A B P lt2 s p z' f P' g).
Proof. exact (fun_ext (fun a : P => @lem8251596 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251598 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251599 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term683 A B P p lt2 s z' f P' g) = (term721 A B P lt2 s p z' f P' g).
Proof. exact (MK_COMB (@lem8251598 P) (@lem8251597 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8251600 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term685 A B P p lt2 s z' f P') = (term722 A B P lt2 s p z' f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8251599 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8251601 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251602 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term686 A B P p lt2 s z' f P') = (term723 A B P lt2 s p z' f P').
Proof. exact (MK_COMB (@lem8251601 A B) (@lem8251600 A B P lt2 s p z' f P')). Qed.
Lemma lem8251603 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term687 A B P p lt2 s z' P') = (term724 A B P lt2 s p z' P').
Proof. exact (fun_ext (fun f : A -> B => @lem8251602 A B P lt2 s p z' f P')). Qed.
Lemma lem8251604 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251606 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term688 A B P p lt2 s z' P') = (term725 A B P lt2 s p z' P').
Proof. exact (MK_COMB (@lem8251604 A B) (@lem8251603 A B P lt2 s p z' P')). Qed.
Lemma lem8251607 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term725 A B P lt2 s p z' P'.
Proof. exact (EQ_MP (@lem8251606 A B P lt2 s p z' P') (@lem8251279 A B P p lt2 s z' P' h1)). Qed.
Lemma lem8251619 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term614 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8251627 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8251628 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8251627 A B P lt2 s a f g z)). Qed.
Lemma lem8251629 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8251631 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8251629 A) (@lem8251628 A B P lt2 s a f g)). Qed.
Lemma lem8251632 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8251631 A B P lt2 s a f g) (@lem8250635 A B P lt2 s a f g h1)). Qed.
Lemma lem8251659 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251666 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251673 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8251674 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251675 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251674) (@lem8251673 A B P lt2 s z f p g a)). Qed.
Lemma lem8251676 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251675 A B P lt2 s z f p g a) (@lem8251666 A B P lt2 s z f p g a)). Qed.
Lemma lem8251678 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8251659 A B P lt2 s z f p g a) (@lem8251676 A B P lt2 s z f p g a)). Qed.
Lemma lem8251679 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8251678 A B P lt2 s z f p g a)). Qed.
Lemma lem8251680 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251681 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8251680 P) (@lem8251679 A B P lt2 s z f p g)). Qed.
Lemma lem8251682 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8251681 A B P lt2 s z f p g)). Qed.
Lemma lem8251683 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251684 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8251683 A B) (@lem8251682 A B P lt2 s z f p)). Qed.
Lemma lem8251685 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8251684 A B P lt2 s z f p)). Qed.
Lemma lem8251686 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251688 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8251686 A B) (@lem8251685 A B P lt2 s z p)). Qed.
Lemma lem8251689 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8251688 A B P lt2 s z p) (@lem8251018 A B P lt2 s z p h1)). Qed.
Lemma lem8251782 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8251790 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8251791 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8251790 A B P lt2 s a f g z)). Qed.
Lemma lem8251792 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8251794 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8251792 A) (@lem8251791 A B P lt2 s a f g)). Qed.
Lemma lem8251795 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8251794 A B P lt2 s a f g) (@lem8250635 A B P lt2 s a f g h1)). Qed.
Lemma lem8251822 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251829 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8251836 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8251837 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251838 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251837) (@lem8251836 A B P lt2 s z f p g a)). Qed.
Lemma lem8251839 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8251838 A B P lt2 s z f p g a) (@lem8251829 A B P lt2 s z f p g a)). Qed.
Lemma lem8251841 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8251822 A B P lt2 s z f p g a) (@lem8251839 A B P lt2 s z f p g a)). Qed.
Lemma lem8251842 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8251841 A B P lt2 s z f p g a)). Qed.
Lemma lem8251843 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251844 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8251843 P) (@lem8251842 A B P lt2 s z f p g)). Qed.
Lemma lem8251845 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8251844 A B P lt2 s z f p g)). Qed.
Lemma lem8251846 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251847 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8251846 A B) (@lem8251845 A B P lt2 s z f p)). Qed.
Lemma lem8251848 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8251847 A B P lt2 s z f p)). Qed.
Lemma lem8251849 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251851 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8251849 A B) (@lem8251848 A B P lt2 s z p)). Qed.
Lemma lem8251852 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8251851 A B P lt2 s z p) (@lem8251018 A B P lt2 s z p h1)). Qed.
Lemma lem8251870 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term634 A B P f P' g a) = (term634 A B P f P' g a).
Proof. exact (eq_refl (term634 A B P f P' g a)). Qed.
Lemma lem8251887 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term673 A B P p lt2 s z' f g a) = (term703 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term654 A B P lt2 z' f g s a) (term615 A B P p g a) (term647 A B P z' f g a)). Qed.
Lemma lem8251890 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term618 A B P p f a) = (term618 A B P p f a).
Proof. exact (eq_refl (term618 A B P p f a)). Qed.
Lemma lem8251891 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term704 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8251890 A B P p f a) (@lem8251887 A B P lt2 s p z' f g a)). Qed.
Lemma lem8251898 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term704 A B P lt2 s p z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term706 A B P p lt2 z' f g s a) (term615 A B P p f a) (term707 A B P p z' f g a)). Qed.
Lemma lem8251899 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (TRANS (@lem8251891 A B P lt2 s p z' f g a) (@lem8251898 A B P lt2 s p z' f g a)). Qed.
Lemma lem8251900 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8251901 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term677 A B P p lt2 s z' f g a) = (term708 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8251900) (@lem8251899 A B P lt2 s p z' f g a)). Qed.
Lemma lem8251902 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term709 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8251901 A B P lt2 s p z' f g a) (@lem8251870 A B P f P' g a)). Qed.
Lemma lem8251903 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term710 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19490 (term631 A B P f P' g a) (term705 A B P lt2 s p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8251910 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term711 A B P lt2 s p z' f P' g a) = (term712 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8251917 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term715 A B P lt2 s p z' f P' g a) = (term716 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term631 A B P f P' g a)). Qed.
Lemma lem8251918 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8251919 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term717 A B P lt2 s p z' f P' g a) = (term718 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8251918) (@lem8251917 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251920 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term710 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8251919 A B P lt2 s p z' f P' g a) (@lem8251910 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8251903 A B P lt2 s p z' f P' g a) (@lem8251920 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251922 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8251902 A B P lt2 s p z' f P' g a) (@lem8251921 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251923 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term681 A B P p lt2 s z' f P' g) = (term720 A B P lt2 s p z' f P' g).
Proof. exact (fun_ext (fun a : P => @lem8251922 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8251924 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8251925 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term683 A B P p lt2 s z' f P' g) = (term721 A B P lt2 s p z' f P' g).
Proof. exact (MK_COMB (@lem8251924 P) (@lem8251923 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8251926 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term685 A B P p lt2 s z' f P') = (term722 A B P lt2 s p z' f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8251925 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8251927 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251928 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term686 A B P p lt2 s z' f P') = (term723 A B P lt2 s p z' f P').
Proof. exact (MK_COMB (@lem8251927 A B) (@lem8251926 A B P lt2 s p z' f P')). Qed.
Lemma lem8251929 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term687 A B P p lt2 s z' P') = (term724 A B P lt2 s p z' P').
Proof. exact (fun_ext (fun f : A -> B => @lem8251928 A B P lt2 s p z' f P')). Qed.
Lemma lem8251930 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8251932 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term688 A B P p lt2 s z' P') = (term725 A B P lt2 s p z' P').
Proof. exact (MK_COMB (@lem8251930 A B) (@lem8251929 A B P lt2 s p z' P')). Qed.
Lemma lem8251933 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term725 A B P lt2 s p z' P'.
Proof. exact (EQ_MP (@lem8251932 A B P lt2 s p z' P') (@lem8251279 A B P p lt2 s z' P' h1)). Qed.
Lemma lem8251945 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term614 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8251946 {A B P : Type'} (_109925 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _109925.
Proof. exact (@lem8251306 A B P lt2 s a f g h1 _109925). Qed.
Lemma lem8251947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109925 : A) : (term726 A B P lt2 s a f g _109925) = (term611 A B P lt2 s a f g _109925).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _109925)). Qed.
Lemma lem8251949 {A B P : Type'} (_109926 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _109926.
Proof. exact (@lem8251363 A B P lt2 s z p h1 _109926). Qed.
Lemma lem8251950 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109926 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _109926) = (term700 A B P lt2 s z _109926 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _109926)). Qed.
Lemma lem8251951 {A B P : Type'} (_109926 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _109926 p.
Proof. exact (EQ_MP (@lem8251950 A B P lt2 s z _109926 p) (@lem8251949 A B P _109926 lt2 s z p h1)). Qed.
Lemma lem8251952 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _109926 p _109927.
Proof. exact (@lem8251951 A B P _109926 lt2 s z p h1 _109927). Qed.
Lemma lem8251953 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) : (term728 A B P lt2 s z _109926 p _109927) = (term698 A B P lt2 s z _109926 p _109927).
Proof. exact (eq_refl (term728 A B P lt2 s z _109926 p _109927)). Qed.
Lemma lem8251954 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _109926 p _109927.
Proof. exact (EQ_MP (@lem8251953 A B P lt2 s z _109926 p _109927) (@lem8251952 A B P _109926 _109927 lt2 s z p h1)). Qed.
Lemma lem8251955 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _109926 p _109927 _109928.
Proof. exact (@lem8251954 A B P _109926 _109927 lt2 s z p h1 _109928). Qed.
Lemma lem8251956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term729 A B P lt2 s z _109926 p _109927 _109928) = (term696 A B P lt2 s z _109926 p _109927 _109928).
Proof. exact (eq_refl (term729 A B P lt2 s z _109926 p _109927 _109928)). Qed.
Lemma lem8251957 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _109926 p _109927 _109928.
Proof. exact (EQ_MP (@lem8251956 A B P lt2 s z _109926 p _109927 _109928) (@lem8251955 A B P _109926 _109927 _109928 lt2 s z p h1)). Qed.
Lemma lem8251967 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _109932.
Proof. exact (@lem8251469 A B P lt2 s a f g h1 _109932). Qed.
Lemma lem8251968 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109932 : A) : (term726 A B P lt2 s a f g _109932) = (term611 A B P lt2 s a f g _109932).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _109932)). Qed.
Lemma lem8251970 {A B P : Type'} (_109933 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _109933.
Proof. exact (@lem8251526 A B P lt2 s z p h1 _109933). Qed.
Lemma lem8251971 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109933 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _109933) = (term700 A B P lt2 s z _109933 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _109933)). Qed.
Lemma lem8251972 {A B P : Type'} (_109933 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _109933 p.
Proof. exact (EQ_MP (@lem8251971 A B P lt2 s z _109933 p) (@lem8251970 A B P _109933 lt2 s z p h1)). Qed.
Lemma lem8251973 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _109933 p _109934.
Proof. exact (@lem8251972 A B P _109933 lt2 s z p h1 _109934). Qed.
Lemma lem8251974 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) : (term728 A B P lt2 s z _109933 p _109934) = (term698 A B P lt2 s z _109933 p _109934).
Proof. exact (eq_refl (term728 A B P lt2 s z _109933 p _109934)). Qed.
Lemma lem8251975 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _109933 p _109934.
Proof. exact (EQ_MP (@lem8251974 A B P lt2 s z _109933 p _109934) (@lem8251973 A B P _109933 _109934 lt2 s z p h1)). Qed.
Lemma lem8251976 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _109933 p _109934 _109935.
Proof. exact (@lem8251975 A B P _109933 _109934 lt2 s z p h1 _109935). Qed.
Lemma lem8251977 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term729 A B P lt2 s z _109933 p _109934 _109935) = (term696 A B P lt2 s z _109933 p _109934 _109935).
Proof. exact (eq_refl (term729 A B P lt2 s z _109933 p _109934 _109935)). Qed.
Lemma lem8251978 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _109933 p _109934 _109935.
Proof. exact (EQ_MP (@lem8251977 A B P lt2 s z _109933 p _109934 _109935) (@lem8251976 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8251979 {A B P : Type'} (_109936 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term730 A B P lt2 s p z' P' _109936.
Proof. exact (@lem8251607 A B P p lt2 s z' P' h1 _109936). Qed.
Lemma lem8251980 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) : (term730 A B P lt2 s p z' P' _109936) = (term723 A B P lt2 s p z' _109936 P').
Proof. exact (eq_refl (term730 A B P lt2 s p z' P' _109936)). Qed.
Lemma lem8251981 {A B P : Type'} (_109936 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term723 A B P lt2 s p z' _109936 P'.
Proof. exact (EQ_MP (@lem8251980 A B P lt2 s p z' _109936 P') (@lem8251979 A B P _109936 p lt2 s z' P' h1)). Qed.
Lemma lem8251982 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term731 A B P lt2 s p z' _109936 P' _109937.
Proof. exact (@lem8251981 A B P _109936 p lt2 s z' P' h1 _109937). Qed.
Lemma lem8251983 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) : (term731 A B P lt2 s p z' _109936 P' _109937) = (term721 A B P lt2 s p z' _109936 P' _109937).
Proof. exact (eq_refl (term731 A B P lt2 s p z' _109936 P' _109937)). Qed.
Lemma lem8251984 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term721 A B P lt2 s p z' _109936 P' _109937.
Proof. exact (EQ_MP (@lem8251983 A B P lt2 s p z' _109936 P' _109937) (@lem8251982 A B P _109936 _109937 p lt2 s z' P' h1)). Qed.
Lemma lem8251985 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term732 A B P lt2 s p z' _109936 P' _109937 _109938.
Proof. exact (@lem8251984 A B P _109936 _109937 p lt2 s z' P' h1 _109938). Qed.
Lemma lem8251986 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term732 A B P lt2 s p z' _109936 P' _109937 _109938) = (term719 A B P lt2 s p z' _109936 P' _109937 _109938).
Proof. exact (eq_refl (term732 A B P lt2 s p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8251987 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term719 A B P lt2 s p z' _109936 P' _109937 _109938.
Proof. exact (EQ_MP (@lem8251986 A B P lt2 s p z' _109936 P' _109937 _109938) (@lem8251985 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8251988 {A B P : Type'} (_109939 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _109939.
Proof. exact (@lem8251632 A B P lt2 s a f g h1 _109939). Qed.
Lemma lem8251989 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109939 : A) : (term726 A B P lt2 s a f g _109939) = (term611 A B P lt2 s a f g _109939).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _109939)). Qed.
Lemma lem8251991 {A B P : Type'} (_109940 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _109940.
Proof. exact (@lem8251689 A B P lt2 s z p h1 _109940). Qed.
Lemma lem8251992 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _109940) = (term700 A B P lt2 s z _109940 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _109940)). Qed.
Lemma lem8251993 {A B P : Type'} (_109940 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _109940 p.
Proof. exact (EQ_MP (@lem8251992 A B P lt2 s z _109940 p) (@lem8251991 A B P _109940 lt2 s z p h1)). Qed.
Lemma lem8251994 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _109940 p _109941.
Proof. exact (@lem8251993 A B P _109940 lt2 s z p h1 _109941). Qed.
Lemma lem8251995 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) : (term728 A B P lt2 s z _109940 p _109941) = (term698 A B P lt2 s z _109940 p _109941).
Proof. exact (eq_refl (term728 A B P lt2 s z _109940 p _109941)). Qed.
Lemma lem8251996 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _109940 p _109941.
Proof. exact (EQ_MP (@lem8251995 A B P lt2 s z _109940 p _109941) (@lem8251994 A B P _109940 _109941 lt2 s z p h1)). Qed.
Lemma lem8251997 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _109940 p _109941 _109942.
Proof. exact (@lem8251996 A B P _109940 _109941 lt2 s z p h1 _109942). Qed.
Lemma lem8251998 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term729 A B P lt2 s z _109940 p _109941 _109942) = (term696 A B P lt2 s z _109940 p _109941 _109942).
Proof. exact (eq_refl (term729 A B P lt2 s z _109940 p _109941 _109942)). Qed.
Lemma lem8251999 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _109940 p _109941 _109942.
Proof. exact (EQ_MP (@lem8251998 A B P lt2 s z _109940 p _109941 _109942) (@lem8251997 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8252009 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _109946.
Proof. exact (@lem8251795 A B P lt2 s a f g h1 _109946). Qed.
Lemma lem8252010 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109946 : A) : (term726 A B P lt2 s a f g _109946) = (term611 A B P lt2 s a f g _109946).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _109946)). Qed.
Lemma lem8252012 {A B P : Type'} (_109947 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _109947.
Proof. exact (@lem8251852 A B P lt2 s z p h1 _109947). Qed.
Lemma lem8252013 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _109947) = (term700 A B P lt2 s z _109947 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _109947)). Qed.
Lemma lem8252014 {A B P : Type'} (_109947 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _109947 p.
Proof. exact (EQ_MP (@lem8252013 A B P lt2 s z _109947 p) (@lem8252012 A B P _109947 lt2 s z p h1)). Qed.
Lemma lem8252015 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _109947 p _109948.
Proof. exact (@lem8252014 A B P _109947 lt2 s z p h1 _109948). Qed.
Lemma lem8252016 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) : (term728 A B P lt2 s z _109947 p _109948) = (term698 A B P lt2 s z _109947 p _109948).
Proof. exact (eq_refl (term728 A B P lt2 s z _109947 p _109948)). Qed.
Lemma lem8252017 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _109947 p _109948.
Proof. exact (EQ_MP (@lem8252016 A B P lt2 s z _109947 p _109948) (@lem8252015 A B P _109947 _109948 lt2 s z p h1)). Qed.
Lemma lem8252018 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _109947 p _109948 _109949.
Proof. exact (@lem8252017 A B P _109947 _109948 lt2 s z p h1 _109949). Qed.
Lemma lem8252019 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term729 A B P lt2 s z _109947 p _109948 _109949) = (term696 A B P lt2 s z _109947 p _109948 _109949).
Proof. exact (eq_refl (term729 A B P lt2 s z _109947 p _109948 _109949)). Qed.
Lemma lem8252020 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _109947 p _109948 _109949.
Proof. exact (EQ_MP (@lem8252019 A B P lt2 s z _109947 p _109948 _109949) (@lem8252018 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8252021 {A B P : Type'} (_109950 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term730 A B P lt2 s p z' P' _109950.
Proof. exact (@lem8251933 A B P p lt2 s z' P' h1 _109950). Qed.
Lemma lem8252022 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) : (term730 A B P lt2 s p z' P' _109950) = (term723 A B P lt2 s p z' _109950 P').
Proof. exact (eq_refl (term730 A B P lt2 s p z' P' _109950)). Qed.
Lemma lem8252023 {A B P : Type'} (_109950 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term723 A B P lt2 s p z' _109950 P'.
Proof. exact (EQ_MP (@lem8252022 A B P lt2 s p z' _109950 P') (@lem8252021 A B P _109950 p lt2 s z' P' h1)). Qed.
Lemma lem8252024 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term731 A B P lt2 s p z' _109950 P' _109951.
Proof. exact (@lem8252023 A B P _109950 p lt2 s z' P' h1 _109951). Qed.
Lemma lem8252025 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) : (term731 A B P lt2 s p z' _109950 P' _109951) = (term721 A B P lt2 s p z' _109950 P' _109951).
Proof. exact (eq_refl (term731 A B P lt2 s p z' _109950 P' _109951)). Qed.
Lemma lem8252026 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term721 A B P lt2 s p z' _109950 P' _109951.
Proof. exact (EQ_MP (@lem8252025 A B P lt2 s p z' _109950 P' _109951) (@lem8252024 A B P _109950 _109951 p lt2 s z' P' h1)). Qed.
Lemma lem8252027 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term732 A B P lt2 s p z' _109950 P' _109951 _109952.
Proof. exact (@lem8252026 A B P _109950 _109951 p lt2 s z' P' h1 _109952). Qed.
Lemma lem8252028 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term732 A B P lt2 s p z' _109950 P' _109951 _109952) = (term719 A B P lt2 s p z' _109950 P' _109951 _109952).
Proof. exact (eq_refl (term732 A B P lt2 s p z' _109950 P' _109951 _109952)). Qed.
Lemma lem8252029 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term719 A B P lt2 s p z' _109950 P' _109951 _109952.
Proof. exact (EQ_MP (@lem8252028 A B P lt2 s p z' _109950 P' _109951 _109952) (@lem8252027 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8252036 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term691 A B P lt2 s z _109926 p _109927 _109928.
Proof. exact (proj2 (@lem8251957 A B P _109926 _109927 _109928 lt2 s z p h1)). Qed.
Lemma lem8252043 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term716 A B P lt2 s p z' _109936 P' _109937 _109938.
Proof. exact (proj1 (@lem8251987 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8252046 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term733 A B P p z' _109936 P' _109937 _109938.
Proof. exact (proj2 (@lem8252043 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8252047 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term734 A B P p lt2 z' s _109936 P' _109937 _109938.
Proof. exact (proj1 (@lem8252043 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8252048 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term691 A B P lt2 s z _109933 p _109934 _109935.
Proof. exact (proj2 (@lem8251978 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8252061 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term693 A B P lt2 s z _109940 p _109941 _109942.
Proof. exact (proj1 (@lem8251999 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8252066 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term712 A B P lt2 s p z' _109950 P' _109951 _109952.
Proof. exact (proj2 (@lem8252029 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8252068 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term735 A B P p z' _109950 P' _109951 _109952.
Proof. exact (proj2 (@lem8252066 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8252069 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term736 A B P p lt2 z' s _109950 P' _109951 _109952.
Proof. exact (proj1 (@lem8252066 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8252073 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term693 A B P lt2 s z _109947 p _109948 _109949.
Proof. exact (proj1 (@lem8252020 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8252083 {A B P : Type'} (_109925 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _109925.
Proof. exact (EQ_MP (@lem8251947 A B P lt2 s a f g _109925) (@lem8251946 A B P _109925 lt2 s a f g h1)). Qed.
Lemma lem8252089 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8252187 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term737 A B P lt2 z s _109926 p _109927 _109928.
Proof. exact (proj1 (@lem8252036 A B P _109926 _109927 _109928 lt2 s z p h1)). Qed.
Lemma lem8252197 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term738 A B P z _109926 p _109927 _109928.
Proof. exact (proj2 (@lem8252036 A B P _109926 _109927 _109928 lt2 s z p h1)). Qed.
Lemma lem8252223 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _109932.
Proof. exact (EQ_MP (@lem8251968 A B P lt2 s a f g _109932) (@lem8251967 A B P _109932 lt2 s a f g h1)). Qed.
Lemma lem8252227 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term615 A B P P' f a.
Proof. exact (proj2 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8252229 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term614 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8252281 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term734 A B P p lt2 z' s _109936 P' _109937 _109938) = (term739 A B P p lt2 z' s _109936 P' _109937 _109938).
Proof. exact (@lem8248669 (term615 A B P p _109936 _109938) (term706 A B P p lt2 z' _109936 _109937 s _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8252288 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term740 A B P p lt2 z' s _109936 P' _109937 _109938) = (term741 A B P p lt2 z' s _109936 P' _109937 _109938).
Proof. exact (@lem8248669 (term615 A B P p _109937 _109938) (term654 A B P lt2 z' _109936 _109937 s _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8252289 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term618 A B P p _109936 _109938) = (term618 A B P p _109936 _109938).
Proof. exact (eq_refl (term618 A B P p _109936 _109938)). Qed.
Lemma lem8252292 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term739 A B P p lt2 z' s _109936 P' _109937 _109938) = (term742 A B P p lt2 z' s _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8252289 A B P p _109936 _109938) (@lem8252288 A B P p lt2 z' s _109936 P' _109937 _109938)). Qed.
Lemma lem8252294 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term734 A B P p lt2 z' s _109936 P' _109937 _109938) = (term742 A B P p lt2 z' s _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8252281 A B P p lt2 z' s _109936 P' _109937 _109938) (@lem8252292 A B P p lt2 z' s _109936 P' _109937 _109938)). Qed.
Lemma lem8252295 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term742 A B P p lt2 z' s _109936 P' _109937 _109938.
Proof. exact (EQ_MP (@lem8252294 A B P p lt2 z' s _109936 P' _109937 _109938) (@lem8252047 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8252303 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term733 A B P p z' _109936 P' _109937 _109938) = (term743 A B P p z' _109936 P' _109937 _109938).
Proof. exact (@lem8248669 (term615 A B P p _109936 _109938) (term707 A B P p z' _109936 _109937 _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8252310 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term744 A B P p z' _109936 P' _109937 _109938) = (term745 A B P p z' _109936 P' _109937 _109938).
Proof. exact (@lem8248669 (term615 A B P p _109937 _109938) (term647 A B P z' _109936 _109937 _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8252311 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term618 A B P p _109936 _109938) = (term618 A B P p _109936 _109938).
Proof. exact (eq_refl (term618 A B P p _109936 _109938)). Qed.
Lemma lem8252314 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term743 A B P p z' _109936 P' _109937 _109938) = (term746 A B P p z' _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8252311 A B P p _109936 _109938) (@lem8252310 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8252316 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term733 A B P p z' _109936 P' _109937 _109938) = (term746 A B P p z' _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8252303 A B P p z' _109936 P' _109937 _109938) (@lem8252314 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8252317 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term746 A B P p z' _109936 P' _109937 _109938.
Proof. exact (EQ_MP (@lem8252316 A B P p z' _109936 P' _109937 _109938) (@lem8252046 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8252327 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term737 A B P lt2 z s _109933 p _109934 _109935.
Proof. exact (proj1 (@lem8252048 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8252337 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term738 A B P z _109933 p _109934 _109935.
Proof. exact (proj2 (@lem8252048 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8252363 {A B P : Type'} (_109939 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _109939.
Proof. exact (EQ_MP (@lem8251989 A B P lt2 s a f g _109939) (@lem8251988 A B P _109939 lt2 s a f g h1)). Qed.
Lemma lem8252369 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8252487 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term747 A B P lt2 z s _109940 p _109941 _109942.
Proof. exact (proj1 (@lem8252061 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8252497 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term748 A B P z _109940 p _109941 _109942.
Proof. exact (proj2 (@lem8252061 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8252503 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _109946.
Proof. exact (EQ_MP (@lem8252010 A B P lt2 s a f g _109946) (@lem8252009 A B P _109946 lt2 s a f g h1)). Qed.
Lemma lem8252507 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term615 A B P P' g a.
Proof. exact (proj2 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8252509 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term614 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8252517 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term736 A B P p lt2 z' s _109950 P' _109951 _109952) = (term749 A B P p lt2 z' s _109950 P' _109951 _109952).
Proof. exact (@lem8248669 (term615 A B P p _109950 _109952) (term706 A B P p lt2 z' _109950 _109951 s _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8252524 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term750 A B P p lt2 z' s _109950 P' _109951 _109952) = (term751 A B P p lt2 z' s _109950 P' _109951 _109952).
Proof. exact (@lem8248669 (term615 A B P p _109951 _109952) (term654 A B P lt2 z' _109950 _109951 s _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8252525 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P p _109950 _109952) = (term618 A B P p _109950 _109952).
Proof. exact (eq_refl (term618 A B P p _109950 _109952)). Qed.
Lemma lem8252528 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term749 A B P p lt2 z' s _109950 P' _109951 _109952) = (term752 A B P p lt2 z' s _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8252525 A B P p _109950 _109952) (@lem8252524 A B P p lt2 z' s _109950 P' _109951 _109952)). Qed.
Lemma lem8252530 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term736 A B P p lt2 z' s _109950 P' _109951 _109952) = (term752 A B P p lt2 z' s _109950 P' _109951 _109952).
Proof. exact (TRANS (@lem8252517 A B P p lt2 z' s _109950 P' _109951 _109952) (@lem8252528 A B P p lt2 z' s _109950 P' _109951 _109952)). Qed.
Lemma lem8252531 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term752 A B P p lt2 z' s _109950 P' _109951 _109952.
Proof. exact (EQ_MP (@lem8252530 A B P p lt2 z' s _109950 P' _109951 _109952) (@lem8252069 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8252539 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term735 A B P p z' _109950 P' _109951 _109952) = (term753 A B P p z' _109950 P' _109951 _109952).
Proof. exact (@lem8248669 (term615 A B P p _109950 _109952) (term707 A B P p z' _109950 _109951 _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8252546 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term754 A B P p z' _109950 P' _109951 _109952) = (term755 A B P p z' _109950 P' _109951 _109952).
Proof. exact (@lem8248669 (term615 A B P p _109951 _109952) (term647 A B P z' _109950 _109951 _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8252547 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P p _109950 _109952) = (term618 A B P p _109950 _109952).
Proof. exact (eq_refl (term618 A B P p _109950 _109952)). Qed.
Lemma lem8252550 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term753 A B P p z' _109950 P' _109951 _109952) = (term756 A B P p z' _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8252547 A B P p _109950 _109952) (@lem8252546 A B P p z' _109950 P' _109951 _109952)). Qed.
Lemma lem8252552 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term735 A B P p z' _109950 P' _109951 _109952) = (term756 A B P p z' _109950 P' _109951 _109952).
Proof. exact (TRANS (@lem8252539 A B P p z' _109950 P' _109951 _109952) (@lem8252550 A B P p z' _109950 P' _109951 _109952)). Qed.
Lemma lem8252553 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term756 A B P p z' _109950 P' _109951 _109952.
Proof. exact (EQ_MP (@lem8252552 A B P p z' _109950 P' _109951 _109952) (@lem8252068 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8252627 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term747 A B P lt2 z s _109947 p _109948 _109949.
Proof. exact (proj1 (@lem8252073 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8252637 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term748 A B P z _109947 p _109948 _109949.
Proof. exact (proj2 (@lem8252073 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8252789 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8252790 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8252789 A B P f p P' g a h1). Qed.
Lemma lem8252792 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8252793 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8252792 (term614 A B P p f a)). Qed.
Lemma lem8252794 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8252793 A B P p f a) (@lem8252790 A B P f p P' g a h1)). Qed.
Lemma lem8252797 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8252798 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term759 A B P p g a.
Proof. exact (fun h0 : term614 A B P p g a => @lem8252797 A B P p g a h1). Qed.
Lemma lem8252800 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8252801 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term759 A B P p g a) = (term615 A B P p g a).
Proof. exact (@lem8252800 (term614 A B P p g a)). Qed.
Lemma lem8252802 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (EQ_MP (@lem8252801 A B P p g a) (@lem8252798 A B P p g a h1)). Qed.
Lemma lem8252804 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8252805 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (s : P -> A) (_109928 : P) : (term737 A B P lt2 z s _109926 p _109927 _109928) = (term762 A B P p lt2 z _109926 _109927 s _109928).
Proof. exact (@lem8252804 (term627 A B P _109926 p _109927 _109928) (term654 A B P lt2 z _109926 _109927 s _109928)). Qed.
Lemma lem8252807 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8252808 {A B P : Type'} (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term765 A B P _109926 p _109927 _109928) = (term766 A B P _109926 p _109927 _109928).
Proof. exact (@lem8252807 (term615 A B P p _109926 _109928) (term614 A B P p _109927 _109928)). Qed.
Lemma lem8252810 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8252811 {A B P : Type'} (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term767 A B P p _109926 _109928) = (term614 A B P p _109926 _109928).
Proof. exact (@lem8252810 (term614 A B P p _109926 _109928)). Qed.
Lemma lem8252812 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8252813 {A B P : Type'} (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term768 A B P p _109926 _109928) = (term616 A B P p _109926 _109928).
Proof. exact (MK_COMB (@lem8252812) (@lem8252811 A B P p _109926 _109928)). Qed.
Lemma lem8252814 {A B P : Type'} (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term615 A B P p _109927 _109928) = (term615 A B P p _109927 _109928).
Proof. exact (eq_refl (term615 A B P p _109927 _109928)). Qed.
Lemma lem8252815 {A B P : Type'} (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term766 A B P _109926 p _109927 _109928) = (term769 A B P _109926 p _109927 _109928).
Proof. exact (MK_COMB (@lem8252813 A B P p _109926 _109928) (@lem8252814 A B P p _109927 _109928)). Qed.
Lemma lem8252816 {A B P : Type'} (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term765 A B P _109926 p _109927 _109928) = (term769 A B P _109926 p _109927 _109928).
Proof. exact (TRANS (@lem8252808 A B P _109926 p _109927 _109928) (@lem8252815 A B P _109926 p _109927 _109928)). Qed.
Lemma lem8252817 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8252818 {A B P : Type'} (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term770 A B P _109926 p _109927 _109928) = (term771 A B P _109926 p _109927 _109928).
Proof. exact (MK_COMB (@lem8252817) (@lem8252816 A B P _109926 p _109927 _109928)). Qed.
Lemma lem8252819 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (s : P -> A) (_109928 : P) : (term654 A B P lt2 z _109926 _109927 s _109928) = (term654 A B P lt2 z _109926 _109927 s _109928).
Proof. exact (eq_refl (term654 A B P lt2 z _109926 _109927 s _109928)). Qed.
Lemma lem8252820 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (s : P -> A) (_109928 : P) : (term762 A B P p lt2 z _109926 _109927 s _109928) = (term772 A B P p lt2 z _109926 _109927 s _109928).
Proof. exact (MK_COMB (@lem8252818 A B P _109926 p _109927 _109928) (@lem8252819 A B P lt2 z _109926 _109927 s _109928)). Qed.
Lemma lem8252821 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (s : P -> A) (_109928 : P) : (term737 A B P lt2 z s _109926 p _109927 _109928) = (term772 A B P p lt2 z _109926 _109927 s _109928).
Proof. exact (TRANS (@lem8252805 A B P p lt2 z _109926 _109927 s _109928) (@lem8252820 A B P p lt2 z _109926 _109927 s _109928)). Qed.
Lemma lem8252823 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) (h2 : term623 A B P f p P' g a) : term769 A B P f p g a.
Proof. exact (conj (@lem8252794 A B P f p P' g a h2) (@lem8252802 A B P p g a h1)). Qed.
Lemma lem8252825 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _109926 _109927 s _109928.
Proof. exact (EQ_MP (@lem8252821 A B P p lt2 z _109926 _109927 s _109928) (@lem8252187 A B P _109926 _109927 _109928 lt2 s z p h1)). Qed.
Lemma lem8252826 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _109926 _109927 s _109928.
Proof. exact (@lem8252825 A B P _109926 _109927 _109928 lt2 s z p h1). Qed.
Lemma lem8252827 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z f g s a.
Proof. exact (@lem8252826 A B P f g a lt2 s z p h1). Qed.
Lemma lem8252830 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8252827 A B P f g a lt2 s z p h1 (@lem8252823 A B P f p P' g a h2 h3)). Qed.
Lemma lem8252831 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8252830 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8252833 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8252834 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8252833 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8252835 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8252834 A B P lt2 z f g s a) (@lem8252831 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8252841 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8252842 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109925) = (term775 A B P f g lt2 _109925 s a).
Proof. exact (@lem8252841 ((@I (A -> B) f _109925) = (@I (A -> B) g _109925)) (term608 A P lt2 _109925 s a)). Qed.
Lemma lem8252850 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8252851 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _109925) = (term777 A B P f g lt2 _109925 s a).
Proof. exact (MK_COMB (@lem8252850) (@lem8252842 A B P f g lt2 _109925 s a)). Qed.
Lemma lem8252859 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _109925 s a) = (term775 A B P f g lt2 _109925 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _109925 s a)). Qed.
Lemma lem8252860 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109925) = (term775 A B P f g lt2 _109925 s a)) = ((term775 A B P f g lt2 _109925 s a) = (term775 A B P f g lt2 _109925 s a)).
Proof. exact (MK_COMB (@lem8252851 A B P f g lt2 _109925 s a) (@lem8252859 A B P f g lt2 _109925 s a)). Qed.
Lemma lem8252862 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8252863 (x : Prop) : (x = x) = True.
Proof. exact (@lem8252862 Prop x). Qed.
Lemma lem8252864 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _109925 s a) = (term775 A B P f g lt2 _109925 s a)) = True.
Proof. exact (@lem8252863 (term775 A B P f g lt2 _109925 s a)). Qed.
Lemma lem8252865 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109925) = (term775 A B P f g lt2 _109925 s a)) = True.
Proof. exact (TRANS (@lem8252860 A B P f g lt2 _109925 s a) (@lem8252864 A B P f g lt2 _109925 s a)). Qed.
Lemma lem8252866 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _109925) = (term775 A B P f g lt2 _109925 s a)).
Proof. exact (SYM (@lem8252865 A B P f g lt2 _109925 s a)). Qed.
Lemma lem8252867 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109925) = (term775 A B P f g lt2 _109925 s a).
Proof. exact (EQ_MP (@lem8252866 A B P f g lt2 _109925 s a) (@lem0)). Qed.
Lemma lem8252868 {A B P : Type'} (_109925 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _109925 s a.
Proof. exact (EQ_MP (@lem8252867 A B P f g lt2 _109925 s a) (@lem8252083 A B P _109925 lt2 s a f g h1)). Qed.
Lemma lem8252870 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8252871 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109925 : A) : (term775 A B P f g lt2 _109925 s a) = (term778 A B P lt2 s a f g _109925).
Proof. exact (@lem8252870 (term608 A P lt2 _109925 s a) ((@I (A -> B) f _109925) = (@I (A -> B) g _109925))). Qed.
Lemma lem8252873 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8252874 {A P : Type'} (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : (term779 A P lt2 _109925 s a) = (term606 A P lt2 _109925 s a).
Proof. exact (@lem8252873 (term606 A P lt2 _109925 s a)). Qed.
Lemma lem8252875 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8252876 {A P : Type'} (lt2 : type1402 A) (_109925 : A) (s : P -> A) (a : P) : (term780 A P lt2 _109925 s a) = (term781 A P lt2 _109925 s a).
Proof. exact (MK_COMB (@lem8252875) (@lem8252874 A P lt2 _109925 s a)). Qed.
Lemma lem8252877 {A B : Type'} (f : A -> B) (g : A -> B) (_109925 : A) : ((@I (A -> B) f _109925) = (@I (A -> B) g _109925)) = ((@I (A -> B) f _109925) = (@I (A -> B) g _109925)).
Proof. exact (eq_refl ((@I (A -> B) f _109925) = (@I (A -> B) g _109925))). Qed.
Lemma lem8252878 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109925 : A) : (term778 A B P lt2 s a f g _109925) = (term782 A B P lt2 s a f g _109925).
Proof. exact (MK_COMB (@lem8252876 A P lt2 _109925 s a) (@lem8252877 A B f g _109925)). Qed.
Lemma lem8252879 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109925 : A) : (term775 A B P f g lt2 _109925 s a) = (term782 A B P lt2 s a f g _109925).
Proof. exact (TRANS (@lem8252871 A B P lt2 s a f g _109925) (@lem8252878 A B P lt2 s a f g _109925)). Qed.
Lemma lem8252882 {A B P : Type'} (_109925 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109925.
Proof. exact (EQ_MP (@lem8252879 A B P lt2 s a f g _109925) (@lem8252868 A B P _109925 lt2 s a f g h1)). Qed.
Lemma lem8252883 {A B P : Type'} (_109925 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109925.
Proof. exact (@lem8252882 A B P _109925 lt2 s a f g h1). Qed.
Lemma lem8252884 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8252883 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8252887 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8252884 A B P z lt2 s a f g h1 (@lem8252835 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8252888 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8252887 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8252890 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8252891 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8252890 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8252892 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8252891 A B P z f g a) (@lem8252888 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8252894 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8252895 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8252894 A B P f p P' g a h1). Qed.
Lemma lem8252897 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8252898 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8252897 (term614 A B P p f a)). Qed.
Lemma lem8252899 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8252898 A B P p f a) (@lem8252895 A B P f p P' g a h1)). Qed.
Lemma lem8252917 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8252918 {A B P : Type'} (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term627 A B P _109926 p _109927 _109928) = (term631 A B P _109927 p _109926 _109928).
Proof. exact (@lem8252917 (term614 A B P p _109927 _109928) (term615 A B P p _109926 _109928)). Qed.
Lemma lem8252924 {A B P : Type'} (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) : (term785 A B P z _109926 _109927 _109928) = (term785 A B P z _109926 _109927 _109928).
Proof. exact (eq_refl (term785 A B P z _109926 _109927 _109928)). Qed.
Lemma lem8252925 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term738 A B P z _109926 p _109927 _109928) = (term786 A B P z _109927 p _109926 _109928).
Proof. exact (MK_COMB (@lem8252924 A B P z _109926 _109927 _109928) (@lem8252918 A B P _109927 p _109926 _109928)). Qed.
Lemma lem8252929 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8252930 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term786 A B P z _109927 p _109926 _109928) = (term787 A B P z _109927 p _109926 _109928).
Proof. exact (@lem8252929 (term614 A B P p _109927 _109928) (term647 A B P z _109926 _109927 _109928) (term615 A B P p _109926 _109928)). Qed.
Lemma lem8252948 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term738 A B P z _109926 p _109927 _109928) = (term787 A B P z _109927 p _109926 _109928).
Proof. exact (TRANS (@lem8252925 A B P z _109927 p _109926 _109928) (@lem8252930 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252949 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8252950 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term788 A B P z _109926 p _109927 _109928) = (term789 A B P z _109927 p _109926 _109928).
Proof. exact (MK_COMB (@lem8252949) (@lem8252948 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252968 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term787 A B P z _109927 p _109926 _109928) = (term787 A B P z _109927 p _109926 _109928).
Proof. exact (eq_refl (term787 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252969 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : ((term738 A B P z _109926 p _109927 _109928) = (term787 A B P z _109927 p _109926 _109928)) = ((term787 A B P z _109927 p _109926 _109928) = (term787 A B P z _109927 p _109926 _109928)).
Proof. exact (MK_COMB (@lem8252950 A B P z _109927 p _109926 _109928) (@lem8252968 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252971 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8252972 (x : Prop) : (x = x) = True.
Proof. exact (@lem8252971 Prop x). Qed.
Lemma lem8252973 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : ((term787 A B P z _109927 p _109926 _109928) = (term787 A B P z _109927 p _109926 _109928)) = True.
Proof. exact (@lem8252972 (term787 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252974 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : ((term738 A B P z _109926 p _109927 _109928) = (term787 A B P z _109927 p _109926 _109928)) = True.
Proof. exact (TRANS (@lem8252969 A B P z _109927 p _109926 _109928) (@lem8252973 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252975 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : True = ((term738 A B P z _109926 p _109927 _109928) = (term787 A B P z _109927 p _109926 _109928)).
Proof. exact (SYM (@lem8252974 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252976 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term738 A B P z _109926 p _109927 _109928) = (term787 A B P z _109927 p _109926 _109928).
Proof. exact (EQ_MP (@lem8252975 A B P z _109927 p _109926 _109928) (@lem0)). Qed.
Lemma lem8252977 {A B P : Type'} (_109927 : A -> B) (_109926 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term787 A B P z _109927 p _109926 _109928.
Proof. exact (EQ_MP (@lem8252976 A B P z _109927 p _109926 _109928) (@lem8252197 A B P _109926 _109927 _109928 lt2 s z p h1)). Qed.
Lemma lem8252979 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8252980 {A B P : Type'} (z : type518 A B P) (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term787 A B P z _109927 p _109926 _109928) = (term790 A B P z _109926 p _109927 _109928).
Proof. exact (@lem8252979 (term791 A B P z _109927 p _109926 _109928) (term614 A B P p _109927 _109928)). Qed.
Lemma lem8252982 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8252983 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term792 A B P z _109927 p _109926 _109928) = (term793 A B P z _109927 p _109926 _109928).
Proof. exact (@lem8252982 (term647 A B P z _109926 _109927 _109928) (term615 A B P p _109926 _109928)). Qed.
Lemma lem8252985 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8252986 {A B P : Type'} (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) : (term794 A B P z _109926 _109927 _109928) = ((term640 A B P z _109926 _109927 _109928) = (term643 A B P z _109926 _109927 _109928)).
Proof. exact (@lem8252985 ((term640 A B P z _109926 _109927 _109928) = (term643 A B P z _109926 _109927 _109928))). Qed.
Lemma lem8252987 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8252988 {A B P : Type'} (z : type518 A B P) (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) : (term795 A B P z _109926 _109927 _109928) = (term796 A B P z _109926 _109927 _109928).
Proof. exact (MK_COMB (@lem8252987) (@lem8252986 A B P z _109926 _109927 _109928)). Qed.
Lemma lem8252990 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8252991 {A B P : Type'} (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term767 A B P p _109926 _109928) = (term614 A B P p _109926 _109928).
Proof. exact (@lem8252990 (term614 A B P p _109926 _109928)). Qed.
Lemma lem8252992 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term793 A B P z _109927 p _109926 _109928) = (term797 A B P z _109927 p _109926 _109928).
Proof. exact (MK_COMB (@lem8252988 A B P z _109926 _109927 _109928) (@lem8252991 A B P p _109926 _109928)). Qed.
Lemma lem8252993 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term792 A B P z _109927 p _109926 _109928) = (term797 A B P z _109927 p _109926 _109928).
Proof. exact (TRANS (@lem8252983 A B P z _109927 p _109926 _109928) (@lem8252992 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252994 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8252995 {A B P : Type'} (z : type518 A B P) (_109927 : A -> B) (p : type560 A B P) (_109926 : A -> B) (_109928 : P) : (term798 A B P z _109927 p _109926 _109928) = (term799 A B P z _109927 p _109926 _109928).
Proof. exact (MK_COMB (@lem8252994) (@lem8252993 A B P z _109927 p _109926 _109928)). Qed.
Lemma lem8252996 {A B P : Type'} (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term614 A B P p _109927 _109928) = (term614 A B P p _109927 _109928).
Proof. exact (eq_refl (term614 A B P p _109927 _109928)). Qed.
Lemma lem8252997 {A B P : Type'} (z : type518 A B P) (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term790 A B P z _109926 p _109927 _109928) = (term800 A B P z _109926 p _109927 _109928).
Proof. exact (MK_COMB (@lem8252995 A B P z _109927 p _109926 _109928) (@lem8252996 A B P p _109927 _109928)). Qed.
Lemma lem8252998 {A B P : Type'} (z : type518 A B P) (_109926 : A -> B) (p : type560 A B P) (_109927 : A -> B) (_109928 : P) : (term787 A B P z _109927 p _109926 _109928) = (term800 A B P z _109926 p _109927 _109928).
Proof. exact (TRANS (@lem8252980 A B P z _109926 p _109927 _109928) (@lem8252997 A B P z _109926 p _109927 _109928)). Qed.
Lemma lem8253000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term797 A B P z g p f a.
Proof. exact (conj (@lem8252892 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8252899 A B P f p P' g a h4)). Qed.
Lemma lem8253002 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _109926 p _109927 _109928.
Proof. exact (EQ_MP (@lem8252998 A B P z _109926 p _109927 _109928) (@lem8252977 A B P _109927 _109926 _109928 lt2 s z p h1)). Qed.
Lemma lem8253003 {A B P : Type'} (_109926 : A -> B) (_109927 : A -> B) (_109928 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _109926 p _109927 _109928.
Proof. exact (@lem8253002 A B P _109926 _109927 _109928 lt2 s z p h1). Qed.
Lemma lem8253004 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z f p g a.
Proof. exact (@lem8253003 A B P f g a lt2 s z p h1). Qed.
Lemma lem8253007 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (@lem8253004 A B P f g a lt2 s z p h2 (@lem8253000 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8253008 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term623 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8253007 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8253010 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253011 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8253010 (term614 A B P p g a)). Qed.
Lemma lem8253012 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term623 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8253011 A B P p g a) (@lem8253008 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8253015 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8253017 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term615 A B P p g a) = (term801 A B P p g a).
Proof. exact (@lem8253015 (term614 A B P p g a)). Qed.
Lemma lem8253020 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term801 A B P p g a.
Proof. exact (EQ_MP (@lem8253017 A B P p g a) (@lem8252089 A B P p g a h1)). Qed.
Lemma lem8253023 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : False.
Proof. exact (@lem8253020 A B P p g a h3 (@lem8253012 A B P lt2 s z f p P' g a h1 h2 h4)). Qed.
Lemma lem8253024 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8253023 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8253026 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253027 : term802 = False.
Proof. exact (@lem8253026 False). Qed.
Lemma lem8253028 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8253027) (@lem8253024 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8253180 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8253181 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8253180 A B P f p P' g a h1). Qed.
Lemma lem8253183 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253184 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8253183 (term614 A B P p f a)). Qed.
Lemma lem8253185 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8253184 A B P p f a) (@lem8253181 A B P f p P' g a h1)). Qed.
Lemma lem8253187 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8253188 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8253187 A B P f p P' g a h1). Qed.
Lemma lem8253190 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253191 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8253190 (term614 A B P p f a)). Qed.
Lemma lem8253192 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8253191 A B P p f a) (@lem8253188 A B P f p P' g a h1)). Qed.
Lemma lem8253195 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8253196 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term759 A B P p g a.
Proof. exact (fun h0 : term614 A B P p g a => @lem8253195 A B P p g a h1). Qed.
Lemma lem8253198 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8253199 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term759 A B P p g a) = (term615 A B P p g a).
Proof. exact (@lem8253198 (term614 A B P p g a)). Qed.
Lemma lem8253200 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (EQ_MP (@lem8253199 A B P p g a) (@lem8253196 A B P p g a h1)). Qed.
Lemma lem8253202 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8253203 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (s : P -> A) (_109935 : P) : (term737 A B P lt2 z s _109933 p _109934 _109935) = (term762 A B P p lt2 z _109933 _109934 s _109935).
Proof. exact (@lem8253202 (term627 A B P _109933 p _109934 _109935) (term654 A B P lt2 z _109933 _109934 s _109935)). Qed.
Lemma lem8253205 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8253206 {A B P : Type'} (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term765 A B P _109933 p _109934 _109935) = (term766 A B P _109933 p _109934 _109935).
Proof. exact (@lem8253205 (term615 A B P p _109933 _109935) (term614 A B P p _109934 _109935)). Qed.
Lemma lem8253208 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253209 {A B P : Type'} (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term767 A B P p _109933 _109935) = (term614 A B P p _109933 _109935).
Proof. exact (@lem8253208 (term614 A B P p _109933 _109935)). Qed.
Lemma lem8253210 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8253211 {A B P : Type'} (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term768 A B P p _109933 _109935) = (term616 A B P p _109933 _109935).
Proof. exact (MK_COMB (@lem8253210) (@lem8253209 A B P p _109933 _109935)). Qed.
Lemma lem8253212 {A B P : Type'} (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term615 A B P p _109934 _109935) = (term615 A B P p _109934 _109935).
Proof. exact (eq_refl (term615 A B P p _109934 _109935)). Qed.
Lemma lem8253213 {A B P : Type'} (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term766 A B P _109933 p _109934 _109935) = (term769 A B P _109933 p _109934 _109935).
Proof. exact (MK_COMB (@lem8253211 A B P p _109933 _109935) (@lem8253212 A B P p _109934 _109935)). Qed.
Lemma lem8253214 {A B P : Type'} (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term765 A B P _109933 p _109934 _109935) = (term769 A B P _109933 p _109934 _109935).
Proof. exact (TRANS (@lem8253206 A B P _109933 p _109934 _109935) (@lem8253213 A B P _109933 p _109934 _109935)). Qed.
Lemma lem8253215 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8253216 {A B P : Type'} (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term770 A B P _109933 p _109934 _109935) = (term771 A B P _109933 p _109934 _109935).
Proof. exact (MK_COMB (@lem8253215) (@lem8253214 A B P _109933 p _109934 _109935)). Qed.
Lemma lem8253217 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (s : P -> A) (_109935 : P) : (term654 A B P lt2 z _109933 _109934 s _109935) = (term654 A B P lt2 z _109933 _109934 s _109935).
Proof. exact (eq_refl (term654 A B P lt2 z _109933 _109934 s _109935)). Qed.
Lemma lem8253218 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (s : P -> A) (_109935 : P) : (term762 A B P p lt2 z _109933 _109934 s _109935) = (term772 A B P p lt2 z _109933 _109934 s _109935).
Proof. exact (MK_COMB (@lem8253216 A B P _109933 p _109934 _109935) (@lem8253217 A B P lt2 z _109933 _109934 s _109935)). Qed.
Lemma lem8253219 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (s : P -> A) (_109935 : P) : (term737 A B P lt2 z s _109933 p _109934 _109935) = (term772 A B P p lt2 z _109933 _109934 s _109935).
Proof. exact (TRANS (@lem8253203 A B P p lt2 z _109933 _109934 s _109935) (@lem8253218 A B P p lt2 z _109933 _109934 s _109935)). Qed.
Lemma lem8253221 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) (h2 : term623 A B P f p P' g a) : term769 A B P f p g a.
Proof. exact (conj (@lem8253192 A B P f p P' g a h2) (@lem8253200 A B P p g a h1)). Qed.
Lemma lem8253223 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _109933 _109934 s _109935.
Proof. exact (EQ_MP (@lem8253219 A B P p lt2 z _109933 _109934 s _109935) (@lem8252327 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8253224 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _109933 _109934 s _109935.
Proof. exact (@lem8253223 A B P _109933 _109934 _109935 lt2 s z p h1). Qed.
Lemma lem8253225 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z f g s a.
Proof. exact (@lem8253224 A B P f g a lt2 s z p h1). Qed.
Lemma lem8253228 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8253225 A B P f g a lt2 s z p h1 (@lem8253221 A B P f p P' g a h2 h3)). Qed.
Lemma lem8253229 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8253228 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8253231 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253232 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8253231 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8253233 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8253232 A B P lt2 z f g s a) (@lem8253229 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8253239 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8253240 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109932) = (term775 A B P f g lt2 _109932 s a).
Proof. exact (@lem8253239 ((@I (A -> B) f _109932) = (@I (A -> B) g _109932)) (term608 A P lt2 _109932 s a)). Qed.
Lemma lem8253248 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8253249 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _109932) = (term777 A B P f g lt2 _109932 s a).
Proof. exact (MK_COMB (@lem8253248) (@lem8253240 A B P f g lt2 _109932 s a)). Qed.
Lemma lem8253257 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _109932 s a) = (term775 A B P f g lt2 _109932 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _109932 s a)). Qed.
Lemma lem8253258 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109932) = (term775 A B P f g lt2 _109932 s a)) = ((term775 A B P f g lt2 _109932 s a) = (term775 A B P f g lt2 _109932 s a)).
Proof. exact (MK_COMB (@lem8253249 A B P f g lt2 _109932 s a) (@lem8253257 A B P f g lt2 _109932 s a)). Qed.
Lemma lem8253260 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8253261 (x : Prop) : (x = x) = True.
Proof. exact (@lem8253260 Prop x). Qed.
Lemma lem8253262 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _109932 s a) = (term775 A B P f g lt2 _109932 s a)) = True.
Proof. exact (@lem8253261 (term775 A B P f g lt2 _109932 s a)). Qed.
Lemma lem8253263 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109932) = (term775 A B P f g lt2 _109932 s a)) = True.
Proof. exact (TRANS (@lem8253258 A B P f g lt2 _109932 s a) (@lem8253262 A B P f g lt2 _109932 s a)). Qed.
Lemma lem8253264 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _109932) = (term775 A B P f g lt2 _109932 s a)).
Proof. exact (SYM (@lem8253263 A B P f g lt2 _109932 s a)). Qed.
Lemma lem8253265 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109932) = (term775 A B P f g lt2 _109932 s a).
Proof. exact (EQ_MP (@lem8253264 A B P f g lt2 _109932 s a) (@lem0)). Qed.
Lemma lem8253266 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _109932 s a.
Proof. exact (EQ_MP (@lem8253265 A B P f g lt2 _109932 s a) (@lem8252223 A B P _109932 lt2 s a f g h1)). Qed.
Lemma lem8253268 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8253269 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109932 : A) : (term775 A B P f g lt2 _109932 s a) = (term778 A B P lt2 s a f g _109932).
Proof. exact (@lem8253268 (term608 A P lt2 _109932 s a) ((@I (A -> B) f _109932) = (@I (A -> B) g _109932))). Qed.
Lemma lem8253271 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253272 {A P : Type'} (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : (term779 A P lt2 _109932 s a) = (term606 A P lt2 _109932 s a).
Proof. exact (@lem8253271 (term606 A P lt2 _109932 s a)). Qed.
Lemma lem8253273 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8253274 {A P : Type'} (lt2 : type1402 A) (_109932 : A) (s : P -> A) (a : P) : (term780 A P lt2 _109932 s a) = (term781 A P lt2 _109932 s a).
Proof. exact (MK_COMB (@lem8253273) (@lem8253272 A P lt2 _109932 s a)). Qed.
Lemma lem8253275 {A B : Type'} (f : A -> B) (g : A -> B) (_109932 : A) : ((@I (A -> B) f _109932) = (@I (A -> B) g _109932)) = ((@I (A -> B) f _109932) = (@I (A -> B) g _109932)).
Proof. exact (eq_refl ((@I (A -> B) f _109932) = (@I (A -> B) g _109932))). Qed.
Lemma lem8253276 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109932 : A) : (term778 A B P lt2 s a f g _109932) = (term782 A B P lt2 s a f g _109932).
Proof. exact (MK_COMB (@lem8253274 A P lt2 _109932 s a) (@lem8253275 A B f g _109932)). Qed.
Lemma lem8253277 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109932 : A) : (term775 A B P f g lt2 _109932 s a) = (term782 A B P lt2 s a f g _109932).
Proof. exact (TRANS (@lem8253269 A B P lt2 s a f g _109932) (@lem8253276 A B P lt2 s a f g _109932)). Qed.
Lemma lem8253280 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109932.
Proof. exact (EQ_MP (@lem8253277 A B P lt2 s a f g _109932) (@lem8253266 A B P _109932 lt2 s a f g h1)). Qed.
Lemma lem8253281 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109932.
Proof. exact (@lem8253280 A B P _109932 lt2 s a f g h1). Qed.
Lemma lem8253282 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8253281 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8253285 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8253282 A B P z lt2 s a f g h1 (@lem8253233 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8253286 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8253285 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8253288 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253289 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8253288 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8253290 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8253289 A B P z f g a) (@lem8253286 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8253292 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8253293 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8253292 A B P f p P' g a h1). Qed.
Lemma lem8253295 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253296 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8253295 (term614 A B P p f a)). Qed.
Lemma lem8253297 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8253296 A B P p f a) (@lem8253293 A B P f p P' g a h1)). Qed.
Lemma lem8253315 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8253316 {A B P : Type'} (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term627 A B P _109933 p _109934 _109935) = (term631 A B P _109934 p _109933 _109935).
Proof. exact (@lem8253315 (term614 A B P p _109934 _109935) (term615 A B P p _109933 _109935)). Qed.
Lemma lem8253322 {A B P : Type'} (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) : (term785 A B P z _109933 _109934 _109935) = (term785 A B P z _109933 _109934 _109935).
Proof. exact (eq_refl (term785 A B P z _109933 _109934 _109935)). Qed.
Lemma lem8253323 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term738 A B P z _109933 p _109934 _109935) = (term786 A B P z _109934 p _109933 _109935).
Proof. exact (MK_COMB (@lem8253322 A B P z _109933 _109934 _109935) (@lem8253316 A B P _109934 p _109933 _109935)). Qed.
Lemma lem8253327 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253328 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term786 A B P z _109934 p _109933 _109935) = (term787 A B P z _109934 p _109933 _109935).
Proof. exact (@lem8253327 (term614 A B P p _109934 _109935) (term647 A B P z _109933 _109934 _109935) (term615 A B P p _109933 _109935)). Qed.
Lemma lem8253346 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term738 A B P z _109933 p _109934 _109935) = (term787 A B P z _109934 p _109933 _109935).
Proof. exact (TRANS (@lem8253323 A B P z _109934 p _109933 _109935) (@lem8253328 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253347 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8253348 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term788 A B P z _109933 p _109934 _109935) = (term789 A B P z _109934 p _109933 _109935).
Proof. exact (MK_COMB (@lem8253347) (@lem8253346 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253366 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term787 A B P z _109934 p _109933 _109935) = (term787 A B P z _109934 p _109933 _109935).
Proof. exact (eq_refl (term787 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253367 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : ((term738 A B P z _109933 p _109934 _109935) = (term787 A B P z _109934 p _109933 _109935)) = ((term787 A B P z _109934 p _109933 _109935) = (term787 A B P z _109934 p _109933 _109935)).
Proof. exact (MK_COMB (@lem8253348 A B P z _109934 p _109933 _109935) (@lem8253366 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253369 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8253370 (x : Prop) : (x = x) = True.
Proof. exact (@lem8253369 Prop x). Qed.
Lemma lem8253371 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : ((term787 A B P z _109934 p _109933 _109935) = (term787 A B P z _109934 p _109933 _109935)) = True.
Proof. exact (@lem8253370 (term787 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253372 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : ((term738 A B P z _109933 p _109934 _109935) = (term787 A B P z _109934 p _109933 _109935)) = True.
Proof. exact (TRANS (@lem8253367 A B P z _109934 p _109933 _109935) (@lem8253371 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253373 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : True = ((term738 A B P z _109933 p _109934 _109935) = (term787 A B P z _109934 p _109933 _109935)).
Proof. exact (SYM (@lem8253372 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253374 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term738 A B P z _109933 p _109934 _109935) = (term787 A B P z _109934 p _109933 _109935).
Proof. exact (EQ_MP (@lem8253373 A B P z _109934 p _109933 _109935) (@lem0)). Qed.
Lemma lem8253375 {A B P : Type'} (_109934 : A -> B) (_109933 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term787 A B P z _109934 p _109933 _109935.
Proof. exact (EQ_MP (@lem8253374 A B P z _109934 p _109933 _109935) (@lem8252337 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8253377 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8253378 {A B P : Type'} (z : type518 A B P) (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term787 A B P z _109934 p _109933 _109935) = (term790 A B P z _109933 p _109934 _109935).
Proof. exact (@lem8253377 (term791 A B P z _109934 p _109933 _109935) (term614 A B P p _109934 _109935)). Qed.
Lemma lem8253380 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8253381 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term792 A B P z _109934 p _109933 _109935) = (term793 A B P z _109934 p _109933 _109935).
Proof. exact (@lem8253380 (term647 A B P z _109933 _109934 _109935) (term615 A B P p _109933 _109935)). Qed.
Lemma lem8253383 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253384 {A B P : Type'} (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) : (term794 A B P z _109933 _109934 _109935) = ((term640 A B P z _109933 _109934 _109935) = (term643 A B P z _109933 _109934 _109935)).
Proof. exact (@lem8253383 ((term640 A B P z _109933 _109934 _109935) = (term643 A B P z _109933 _109934 _109935))). Qed.
Lemma lem8253385 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8253386 {A B P : Type'} (z : type518 A B P) (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) : (term795 A B P z _109933 _109934 _109935) = (term796 A B P z _109933 _109934 _109935).
Proof. exact (MK_COMB (@lem8253385) (@lem8253384 A B P z _109933 _109934 _109935)). Qed.
Lemma lem8253388 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253389 {A B P : Type'} (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term767 A B P p _109933 _109935) = (term614 A B P p _109933 _109935).
Proof. exact (@lem8253388 (term614 A B P p _109933 _109935)). Qed.
Lemma lem8253390 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term793 A B P z _109934 p _109933 _109935) = (term797 A B P z _109934 p _109933 _109935).
Proof. exact (MK_COMB (@lem8253386 A B P z _109933 _109934 _109935) (@lem8253389 A B P p _109933 _109935)). Qed.
Lemma lem8253391 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term792 A B P z _109934 p _109933 _109935) = (term797 A B P z _109934 p _109933 _109935).
Proof. exact (TRANS (@lem8253381 A B P z _109934 p _109933 _109935) (@lem8253390 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253392 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8253393 {A B P : Type'} (z : type518 A B P) (_109934 : A -> B) (p : type560 A B P) (_109933 : A -> B) (_109935 : P) : (term798 A B P z _109934 p _109933 _109935) = (term799 A B P z _109934 p _109933 _109935).
Proof. exact (MK_COMB (@lem8253392) (@lem8253391 A B P z _109934 p _109933 _109935)). Qed.
Lemma lem8253394 {A B P : Type'} (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term614 A B P p _109934 _109935) = (term614 A B P p _109934 _109935).
Proof. exact (eq_refl (term614 A B P p _109934 _109935)). Qed.
Lemma lem8253395 {A B P : Type'} (z : type518 A B P) (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term790 A B P z _109933 p _109934 _109935) = (term800 A B P z _109933 p _109934 _109935).
Proof. exact (MK_COMB (@lem8253393 A B P z _109934 p _109933 _109935) (@lem8253394 A B P p _109934 _109935)). Qed.
Lemma lem8253396 {A B P : Type'} (z : type518 A B P) (_109933 : A -> B) (p : type560 A B P) (_109934 : A -> B) (_109935 : P) : (term787 A B P z _109934 p _109933 _109935) = (term800 A B P z _109933 p _109934 _109935).
Proof. exact (TRANS (@lem8253378 A B P z _109933 p _109934 _109935) (@lem8253395 A B P z _109933 p _109934 _109935)). Qed.
Lemma lem8253398 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term797 A B P z g p f a.
Proof. exact (conj (@lem8253290 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8253297 A B P f p P' g a h4)). Qed.
Lemma lem8253400 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _109933 p _109934 _109935.
Proof. exact (EQ_MP (@lem8253396 A B P z _109933 p _109934 _109935) (@lem8253375 A B P _109934 _109933 _109935 lt2 s z p h1)). Qed.
Lemma lem8253401 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _109933 p _109934 _109935.
Proof. exact (@lem8253400 A B P _109933 _109934 _109935 lt2 s z p h1). Qed.
Lemma lem8253402 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z f p g a.
Proof. exact (@lem8253401 A B P f g a lt2 s z p h1). Qed.
Lemma lem8253405 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (@lem8253402 A B P f g a lt2 s z p h2 (@lem8253398 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8253406 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term623 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8253405 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8253408 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253409 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8253408 (term614 A B P p g a)). Qed.
Lemma lem8253410 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term623 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8253409 A B P p g a) (@lem8253406 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8253412 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8253413 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8253412 A B P f p P' g a h1). Qed.
Lemma lem8253415 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253416 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8253415 (term614 A B P p f a)). Qed.
Lemma lem8253417 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8253416 A B P p f a) (@lem8253413 A B P f p P' g a h1)). Qed.
Lemma lem8253419 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8253420 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8253419 A B P f p P' g a h1). Qed.
Lemma lem8253422 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253423 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8253422 (term614 A B P p f a)). Qed.
Lemma lem8253424 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8253423 A B P p f a) (@lem8253420 A B P f p P' g a h1)). Qed.
Lemma lem8253427 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8253428 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term759 A B P p g a.
Proof. exact (fun h0 : term614 A B P p g a => @lem8253427 A B P p g a h1). Qed.
Lemma lem8253430 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8253431 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term759 A B P p g a) = (term615 A B P p g a).
Proof. exact (@lem8253430 (term614 A B P p g a)). Qed.
Lemma lem8253432 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (EQ_MP (@lem8253431 A B P p g a) (@lem8253428 A B P p g a h1)). Qed.
Lemma lem8253433 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) (h2 : term623 A B P f p P' g a) : term769 A B P f p g a.
Proof. exact (conj (@lem8253424 A B P f p P' g a h2) (@lem8253432 A B P p g a h1)). Qed.
Lemma lem8253435 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _109933 _109934 s _109935.
Proof. exact (EQ_MP (@lem8253219 A B P p lt2 z _109933 _109934 s _109935) (@lem8252327 A B P _109933 _109934 _109935 lt2 s z p h1)). Qed.
Lemma lem8253436 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _109933 _109934 s _109935.
Proof. exact (@lem8253435 A B P _109933 _109934 _109935 lt2 s z p h1). Qed.
Lemma lem8253437 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z f g s a.
Proof. exact (@lem8253436 A B P f g a lt2 s z p h1). Qed.
Lemma lem8253440 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8253437 A B P f g a lt2 s z p h1 (@lem8253433 A B P f p P' g a h2 h3)). Qed.
Lemma lem8253441 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8253440 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8253443 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253444 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8253443 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8253445 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term623 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8253444 A B P lt2 z f g s a) (@lem8253441 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8253447 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109932.
Proof. exact (EQ_MP (@lem8253277 A B P lt2 s a f g _109932) (@lem8253266 A B P _109932 lt2 s a f g h1)). Qed.
Lemma lem8253448 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109932.
Proof. exact (@lem8253447 A B P _109932 lt2 s a f g h1). Qed.
Lemma lem8253449 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8253448 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8253452 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8253449 A B P z lt2 s a f g h1 (@lem8253445 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8253453 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8253452 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8253455 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253456 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8253455 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8253457 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8253456 A B P z f g a) (@lem8253453 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8253459 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8251283 A B P f p P' g a h1)). Qed.
Lemma lem8253460 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8253459 A B P f p P' g a h1). Qed.
Lemma lem8253462 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253463 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8253462 (term614 A B P p f a)). Qed.
Lemma lem8253464 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8253463 A B P p f a) (@lem8253460 A B P f p P' g a h1)). Qed.
Lemma lem8253465 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term797 A B P z g p f a.
Proof. exact (conj (@lem8253457 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8253464 A B P f p P' g a h4)). Qed.
Lemma lem8253467 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _109933 p _109934 _109935.
Proof. exact (EQ_MP (@lem8253396 A B P z _109933 p _109934 _109935) (@lem8253375 A B P _109934 _109933 _109935 lt2 s z p h1)). Qed.
Lemma lem8253468 {A B P : Type'} (_109933 : A -> B) (_109934 : A -> B) (_109935 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _109933 p _109934 _109935.
Proof. exact (@lem8253467 A B P _109933 _109934 _109935 lt2 s z p h1). Qed.
Lemma lem8253469 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z f p g a.
Proof. exact (@lem8253468 A B P f g a lt2 s z p h1). Qed.
Lemma lem8253472 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (@lem8253469 A B P f g a lt2 s z p h2 (@lem8253465 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8253473 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term623 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8253472 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8253475 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253476 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8253475 (term614 A B P p g a)). Qed.
Lemma lem8253477 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term623 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8253476 A B P p g a) (@lem8253473 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8253480 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term615 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8253481 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term759 A B P P' f a.
Proof. exact (fun h0 : term614 A B P P' f a => @lem8253480 A B P P' f a h1). Qed.
Lemma lem8253483 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8253484 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term759 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (@lem8253483 (term614 A B P P' f a)). Qed.
Lemma lem8253485 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term615 A B P P' f a.
Proof. exact (EQ_MP (@lem8253484 A B P P' f a) (@lem8253481 A B P P' f a h1)). Qed.
Lemma lem8253487 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term614 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8253488 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term757 A B P P' g a.
Proof. exact (fun h0 : term615 A B P P' g a => @lem8253487 A B P P' g a h1). Qed.
Lemma lem8253490 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253491 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term757 A B P P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8253490 (term614 A B P P' g a)). Qed.
Lemma lem8253492 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term614 A B P P' g a.
Proof. exact (EQ_MP (@lem8253491 A B P P' g a) (@lem8253488 A B P P' g a h1)). Qed.
Lemma lem8253508 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253509 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term741 A B P p lt2 z' s _109936 P' _109937 _109938) = (term803 A B P lt2 z' s p _109936 P' _109937 _109938).
Proof. exact (@lem8253508 (term654 A B P lt2 z' _109936 _109937 s _109938) (term615 A B P p _109937 _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8253523 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253524 {A B P : Type'} (_109936 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term804 A B P p _109936 P' _109937 _109938) = (term805 A B P _109936 p P' _109937 _109938).
Proof. exact (@lem8253523 (term614 A B P P' _109936 _109938) (term615 A B P p _109937 _109938) (term615 A B P P' _109937 _109938)). Qed.
Lemma lem8253538 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8253539 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term806 A B P p P' _109937 _109938) = (term806 A B P P' p _109937 _109938).
Proof. exact (@lem8253538 (term615 A B P P' _109937 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8253545 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8253546 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term805 A B P _109936 p P' _109937 _109938) = (term807 A B P _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253545 A B P P' _109936 _109938) (@lem8253539 A B P P' p _109937 _109938)). Qed.
Lemma lem8253557 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term804 A B P p _109936 P' _109937 _109938) = (term807 A B P _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8253524 A B P _109936 p P' _109937 _109938) (@lem8253546 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253558 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term808 A B P lt2 z' _109936 _109937 s _109938) = (term808 A B P lt2 z' _109936 _109937 s _109938).
Proof. exact (eq_refl (term808 A B P lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253559 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term803 A B P lt2 z' s p _109936 P' _109937 _109938) = (term809 A B P lt2 z' s _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253558 A B P lt2 z' _109936 _109937 s _109938) (@lem8253557 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253570 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term741 A B P p lt2 z' s _109936 P' _109937 _109938) = (term809 A B P lt2 z' s _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8253509 A B P lt2 z' s p _109936 P' _109937 _109938) (@lem8253559 A B P lt2 z' s _109936 P' p _109937 _109938)). Qed.
Lemma lem8253571 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term618 A B P p _109936 _109938) = (term618 A B P p _109936 _109938).
Proof. exact (eq_refl (term618 A B P p _109936 _109938)). Qed.
Lemma lem8253572 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term742 A B P p lt2 z' s _109936 P' _109937 _109938) = (term810 A B P lt2 z' s _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253571 A B P p _109936 _109938) (@lem8253570 A B P lt2 z' s _109936 P' p _109937 _109938)). Qed.
Lemma lem8253576 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253577 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term810 A B P lt2 z' s _109936 P' p _109937 _109938) = (term811 A B P lt2 z' s _109936 P' p _109937 _109938).
Proof. exact (@lem8253576 (term654 A B P lt2 z' _109936 _109937 s _109938) (term615 A B P p _109936 _109938) (term807 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253591 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253592 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term812 A B P _109936 P' p _109937 _109938) = (term813 A B P _109936 P' p _109937 _109938).
Proof. exact (@lem8253591 (term614 A B P P' _109936 _109938) (term615 A B P p _109936 _109938) (term806 A B P P' p _109937 _109938)). Qed.
Lemma lem8253606 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253607 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term814 A B P _109936 P' p _109937 _109938) = (term815 A B P P' _109936 p _109937 _109938).
Proof. exact (@lem8253606 (term615 A B P P' _109937 _109938) (term615 A B P p _109936 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8253623 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8253624 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term813 A B P _109936 P' p _109937 _109938) = (term816 A B P P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8253623 A B P P' _109936 _109938) (@lem8253607 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253635 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term812 A B P _109936 P' p _109937 _109938) = (term816 A B P P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253592 A B P _109936 P' p _109937 _109938) (@lem8253624 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253636 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term808 A B P lt2 z' _109936 _109937 s _109938) = (term808 A B P lt2 z' _109936 _109937 s _109938).
Proof. exact (eq_refl (term808 A B P lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253637 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term811 A B P lt2 z' s _109936 P' p _109937 _109938) = (term817 A B P lt2 z' s P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8253636 A B P lt2 z' _109936 _109937 s _109938) (@lem8253635 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253648 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term810 A B P lt2 z' s _109936 P' p _109937 _109938) = (term817 A B P lt2 z' s P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253577 A B P lt2 z' s _109936 P' p _109937 _109938) (@lem8253637 A B P lt2 z' s P' _109936 p _109937 _109938)). Qed.
Lemma lem8253649 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term742 A B P p lt2 z' s _109936 P' _109937 _109938) = (term817 A B P lt2 z' s P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253572 A B P lt2 z' s _109936 P' p _109937 _109938) (@lem8253648 A B P lt2 z' s P' _109936 p _109937 _109938)). Qed.
Lemma lem8253650 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8253651 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term818 A B P p lt2 z' s _109936 P' _109937 _109938) = (term819 A B P lt2 z' s P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8253650) (@lem8253649 A B P lt2 z' s P' _109936 p _109937 _109938)). Qed.
Lemma lem8253675 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253676 {A B P : Type'} (_109936 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term804 A B P p _109936 P' _109937 _109938) = (term805 A B P _109936 p P' _109937 _109938).
Proof. exact (@lem8253675 (term614 A B P P' _109936 _109938) (term615 A B P p _109937 _109938) (term615 A B P P' _109937 _109938)). Qed.
Lemma lem8253690 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8253691 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term806 A B P p P' _109937 _109938) = (term806 A B P P' p _109937 _109938).
Proof. exact (@lem8253690 (term615 A B P P' _109937 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8253697 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8253698 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term805 A B P _109936 p P' _109937 _109938) = (term807 A B P _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253697 A B P P' _109936 _109938) (@lem8253691 A B P P' p _109937 _109938)). Qed.
Lemma lem8253709 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term804 A B P p _109936 P' _109937 _109938) = (term807 A B P _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8253676 A B P _109936 p P' _109937 _109938) (@lem8253698 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253710 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term618 A B P p _109936 _109938) = (term618 A B P p _109936 _109938).
Proof. exact (eq_refl (term618 A B P p _109936 _109938)). Qed.
Lemma lem8253711 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term820 A B P p _109936 P' _109937 _109938) = (term812 A B P _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253710 A B P p _109936 _109938) (@lem8253709 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253715 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253716 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term812 A B P _109936 P' p _109937 _109938) = (term813 A B P _109936 P' p _109937 _109938).
Proof. exact (@lem8253715 (term614 A B P P' _109936 _109938) (term615 A B P p _109936 _109938) (term806 A B P P' p _109937 _109938)). Qed.
Lemma lem8253730 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253731 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term814 A B P _109936 P' p _109937 _109938) = (term815 A B P P' _109936 p _109937 _109938).
Proof. exact (@lem8253730 (term615 A B P P' _109937 _109938) (term615 A B P p _109936 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8253747 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8253748 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term813 A B P _109936 P' p _109937 _109938) = (term816 A B P P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8253747 A B P P' _109936 _109938) (@lem8253731 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253759 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term812 A B P _109936 P' p _109937 _109938) = (term816 A B P P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253716 A B P _109936 P' p _109937 _109938) (@lem8253748 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253760 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term820 A B P p _109936 P' _109937 _109938) = (term816 A B P P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253711 A B P _109936 P' p _109937 _109938) (@lem8253759 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253761 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term808 A B P lt2 z' _109936 _109937 s _109938) = (term808 A B P lt2 z' _109936 _109937 s _109938).
Proof. exact (eq_refl (term808 A B P lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253762 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term821 A B P lt2 z' s p _109936 P' _109937 _109938) = (term817 A B P lt2 z' s P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8253761 A B P lt2 z' _109936 _109937 s _109938) (@lem8253760 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8253773 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : ((term742 A B P p lt2 z' s _109936 P' _109937 _109938) = (term821 A B P lt2 z' s p _109936 P' _109937 _109938)) = ((term817 A B P lt2 z' s P' _109936 p _109937 _109938) = (term817 A B P lt2 z' s P' _109936 p _109937 _109938)).
Proof. exact (MK_COMB (@lem8253651 A B P lt2 z' s P' _109936 p _109937 _109938) (@lem8253762 A B P lt2 z' s P' _109936 p _109937 _109938)). Qed.
Lemma lem8253775 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8253776 (x : Prop) : (x = x) = True.
Proof. exact (@lem8253775 Prop x). Qed.
Lemma lem8253777 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : ((term817 A B P lt2 z' s P' _109936 p _109937 _109938) = (term817 A B P lt2 z' s P' _109936 p _109937 _109938)) = True.
Proof. exact (@lem8253776 (term817 A B P lt2 z' s P' _109936 p _109937 _109938)). Qed.
Lemma lem8253778 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : ((term742 A B P p lt2 z' s _109936 P' _109937 _109938) = (term821 A B P lt2 z' s p _109936 P' _109937 _109938)) = True.
Proof. exact (TRANS (@lem8253773 A B P lt2 z' s P' _109936 p _109937 _109938) (@lem8253777 A B P lt2 z' s P' _109936 p _109937 _109938)). Qed.
Lemma lem8253779 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : True = ((term742 A B P p lt2 z' s _109936 P' _109937 _109938) = (term821 A B P lt2 z' s p _109936 P' _109937 _109938)).
Proof. exact (SYM (@lem8253778 A B P lt2 z' s p _109936 P' _109937 _109938)). Qed.
Lemma lem8253780 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term742 A B P p lt2 z' s _109936 P' _109937 _109938) = (term821 A B P lt2 z' s p _109936 P' _109937 _109938).
Proof. exact (EQ_MP (@lem8253779 A B P lt2 z' s p _109936 P' _109937 _109938) (@lem0)). Qed.
Lemma lem8253781 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term821 A B P lt2 z' s p _109936 P' _109937 _109938.
Proof. exact (EQ_MP (@lem8253780 A B P lt2 z' s p _109936 P' _109937 _109938) (@lem8252295 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8253783 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8253784 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term821 A B P lt2 z' s p _109936 P' _109937 _109938) = (term822 A B P p P' lt2 z' _109936 _109937 s _109938).
Proof. exact (@lem8253783 (term820 A B P p _109936 P' _109937 _109938) (term654 A B P lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253786 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8253787 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term823 A B P p _109936 P' _109937 _109938) = (term824 A B P p _109936 P' _109937 _109938).
Proof. exact (@lem8253786 (term615 A B P p _109936 _109938) (term804 A B P p _109936 P' _109937 _109938)). Qed.
Lemma lem8253789 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253790 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term767 A B P p _109936 _109938) = (term614 A B P p _109936 _109938).
Proof. exact (@lem8253789 (term614 A B P p _109936 _109938)). Qed.
Lemma lem8253791 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8253792 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term768 A B P p _109936 _109938) = (term616 A B P p _109936 _109938).
Proof. exact (MK_COMB (@lem8253791) (@lem8253790 A B P p _109936 _109938)). Qed.
Lemma lem8253794 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8253795 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term825 A B P p _109936 P' _109937 _109938) = (term826 A B P p _109936 P' _109937 _109938).
Proof. exact (@lem8253794 (term615 A B P p _109937 _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8253797 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253798 {A B P : Type'} (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term767 A B P p _109937 _109938) = (term614 A B P p _109937 _109938).
Proof. exact (@lem8253797 (term614 A B P p _109937 _109938)). Qed.
Lemma lem8253799 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8253800 {A B P : Type'} (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term768 A B P p _109937 _109938) = (term616 A B P p _109937 _109938).
Proof. exact (MK_COMB (@lem8253799) (@lem8253798 A B P p _109937 _109938)). Qed.
Lemma lem8253802 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8253803 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term827 A B P _109936 P' _109937 _109938) = (term828 A B P _109936 P' _109937 _109938).
Proof. exact (@lem8253802 (term614 A B P P' _109936 _109938) (term615 A B P P' _109937 _109938)). Qed.
Lemma lem8253805 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8253806 {A B P : Type'} (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term767 A B P P' _109937 _109938) = (term614 A B P P' _109937 _109938).
Proof. exact (@lem8253805 (term614 A B P P' _109937 _109938)). Qed.
Lemma lem8253807 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term829 A B P P' _109936 _109938) = (term829 A B P P' _109936 _109938).
Proof. exact (eq_refl (term829 A B P P' _109936 _109938)). Qed.
Lemma lem8253808 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term828 A B P _109936 P' _109937 _109938) = (term830 A B P _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8253807 A B P P' _109936 _109938) (@lem8253806 A B P P' _109937 _109938)). Qed.
Lemma lem8253809 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term827 A B P _109936 P' _109937 _109938) = (term830 A B P _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8253803 A B P _109936 P' _109937 _109938) (@lem8253808 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8253810 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term826 A B P p _109936 P' _109937 _109938) = (term831 A B P p _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8253800 A B P p _109937 _109938) (@lem8253809 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8253811 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term825 A B P p _109936 P' _109937 _109938) = (term831 A B P p _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8253795 A B P p _109936 P' _109937 _109938) (@lem8253810 A B P p _109936 P' _109937 _109938)). Qed.
Lemma lem8253812 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term824 A B P p _109936 P' _109937 _109938) = (term832 A B P p _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8253792 A B P p _109936 _109938) (@lem8253811 A B P p _109936 P' _109937 _109938)). Qed.
Lemma lem8253813 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term823 A B P p _109936 P' _109937 _109938) = (term832 A B P p _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8253787 A B P p _109936 P' _109937 _109938) (@lem8253812 A B P p _109936 P' _109937 _109938)). Qed.
Lemma lem8253814 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8253815 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term833 A B P p _109936 P' _109937 _109938) = (term834 A B P p _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8253814) (@lem8253813 A B P p _109936 P' _109937 _109938)). Qed.
Lemma lem8253816 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term654 A B P lt2 z' _109936 _109937 s _109938) = (term654 A B P lt2 z' _109936 _109937 s _109938).
Proof. exact (eq_refl (term654 A B P lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253817 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term822 A B P p P' lt2 z' _109936 _109937 s _109938) = (term835 A B P p P' lt2 z' _109936 _109937 s _109938).
Proof. exact (MK_COMB (@lem8253815 A B P p _109936 P' _109937 _109938) (@lem8253816 A B P lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253818 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (s : P -> A) (_109938 : P) : (term821 A B P lt2 z' s p _109936 P' _109937 _109938) = (term835 A B P p P' lt2 z' _109936 _109937 s _109938).
Proof. exact (TRANS (@lem8253784 A B P p P' lt2 z' _109936 _109937 s _109938) (@lem8253817 A B P p P' lt2 z' _109936 _109937 s _109938)). Qed.
Lemma lem8253820 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' f a) (h2 : term614 A B P P' g a) : term830 A B P f P' g a.
Proof. exact (conj (@lem8253485 A B P P' f a h1) (@lem8253492 A B P P' g a h2)). Qed.
Lemma lem8253821 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P P' f a) (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : term831 A B P p f P' g a.
Proof. exact (conj (@lem8253477 A B P lt2 s z f p P' g a h1 h2 h4) (@lem8253820 A B P f P' g a h3 h5)). Qed.
Lemma lem8253822 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P P' f a) (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : term832 A B P p f P' g a.
Proof. exact (conj (@lem8253417 A B P f p P' g a h4) (@lem8253821 A B P lt2 s z f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8253824 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term835 A B P p P' lt2 z' _109936 _109937 s _109938.
Proof. exact (EQ_MP (@lem8253818 A B P p P' lt2 z' _109936 _109937 s _109938) (@lem8253781 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8253825 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term835 A B P p P' lt2 z' _109936 _109937 s _109938.
Proof. exact (@lem8253824 A B P _109936 _109937 _109938 p lt2 s z' P' h1). Qed.
Lemma lem8253826 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term835 A B P p P' lt2 z' f g s a.
Proof. exact (@lem8253825 A B P f g a p lt2 s z' P' h1). Qed.
Lemma lem8253829 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term654 A B P lt2 z' f g s a.
Proof. exact (@lem8253826 A B P f g a p lt2 s z' P' h3 (@lem8253822 A B P lt2 s z f p P' g a h1 h2 h4 h5 h6)). Qed.
Lemma lem8253830 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term773 A B P lt2 z' f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z' f g s a => @lem8253829 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6). Qed.
Lemma lem8253832 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253833 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (@lem8253832 (term654 A B P lt2 z' f g s a)). Qed.
Lemma lem8253834 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term654 A B P lt2 z' f g s a.
Proof. exact (EQ_MP (@lem8253833 A B P lt2 z' f g s a) (@lem8253830 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8253836 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109932.
Proof. exact (EQ_MP (@lem8253277 A B P lt2 s a f g _109932) (@lem8253266 A B P _109932 lt2 s a f g h1)). Qed.
Lemma lem8253837 {A B P : Type'} (_109932 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109932.
Proof. exact (@lem8253836 A B P _109932 lt2 s a f g h1). Qed.
Lemma lem8253838 {A B P : Type'} (z' : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z' f g a.
Proof. exact (@lem8253837 A B P (term637 A B P z' f g a) lt2 s a f g h1). Qed.
Lemma lem8253841 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (@lem8253838 A B P z' lt2 s a f g h1 (@lem8253834 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8253842 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term784 A B P z' f g a.
Proof. exact (fun h0 : term647 A B P z' f g a => @lem8253841 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6). Qed.
Lemma lem8253844 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253845 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z' f g a) = ((term640 A B P z' f g a) = (term643 A B P z' f g a)).
Proof. exact (@lem8253844 ((term640 A B P z' f g a) = (term643 A B P z' f g a))). Qed.
Lemma lem8253846 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (EQ_MP (@lem8253845 A B P z' f g a) (@lem8253842 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8253848 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term614 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8253849 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term757 A B P P' g a.
Proof. exact (fun h0 : term615 A B P P' g a => @lem8253848 A B P P' g a h1). Qed.
Lemma lem8253851 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8253852 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term757 A B P P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8253851 (term614 A B P P' g a)). Qed.
Lemma lem8253853 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term614 A B P P' g a) : term614 A B P P' g a.
Proof. exact (EQ_MP (@lem8253852 A B P P' g a) (@lem8253849 A B P P' g a h1)). Qed.
Lemma lem8253869 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253870 {A B P : Type'} (z' : type518 A B P) (p : type560 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term745 A B P p z' _109936 P' _109937 _109938) = (term836 A B P z' p _109936 P' _109937 _109938).
Proof. exact (@lem8253869 (term647 A B P z' _109936 _109937 _109938) (term615 A B P p _109937 _109938) (term631 A B P _109936 P' _109937 _109938)). Qed.
Lemma lem8253886 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253887 {A B P : Type'} (_109936 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term804 A B P p _109936 P' _109937 _109938) = (term805 A B P _109936 p P' _109937 _109938).
Proof. exact (@lem8253886 (term614 A B P P' _109936 _109938) (term615 A B P p _109937 _109938) (term615 A B P P' _109937 _109938)). Qed.
Lemma lem8253901 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8253902 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term806 A B P p P' _109937 _109938) = (term806 A B P P' p _109937 _109938).
Proof. exact (@lem8253901 (term615 A B P P' _109937 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8253908 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8253909 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term805 A B P _109936 p P' _109937 _109938) = (term807 A B P _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253908 A B P P' _109936 _109938) (@lem8253902 A B P P' p _109937 _109938)). Qed.
Lemma lem8253920 {A B P : Type'} (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term804 A B P p _109936 P' _109937 _109938) = (term807 A B P _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8253887 A B P _109936 p P' _109937 _109938) (@lem8253909 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253921 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) : (term785 A B P z' _109936 _109937 _109938) = (term785 A B P z' _109936 _109937 _109938).
Proof. exact (eq_refl (term785 A B P z' _109936 _109937 _109938)). Qed.
Lemma lem8253922 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term836 A B P z' p _109936 P' _109937 _109938) = (term837 A B P z' _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253921 A B P z' _109936 _109937 _109938) (@lem8253920 A B P _109936 P' p _109937 _109938)). Qed.
Lemma lem8253926 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253927 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term837 A B P z' _109936 P' p _109937 _109938) = (term838 A B P z' _109936 P' p _109937 _109938).
Proof. exact (@lem8253926 (term614 A B P P' _109936 _109938) (term647 A B P z' _109936 _109937 _109938) (term806 A B P P' p _109937 _109938)). Qed.
Lemma lem8253955 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term836 A B P z' p _109936 P' _109937 _109938) = (term838 A B P z' _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8253922 A B P z' _109936 P' p _109937 _109938) (@lem8253927 A B P z' _109936 P' p _109937 _109938)). Qed.
Lemma lem8253956 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term745 A B P p z' _109936 P' _109937 _109938) = (term838 A B P z' _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8253870 A B P z' p _109936 P' _109937 _109938) (@lem8253955 A B P z' _109936 P' p _109937 _109938)). Qed.
Lemma lem8253957 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term618 A B P p _109936 _109938) = (term618 A B P p _109936 _109938).
Proof. exact (eq_refl (term618 A B P p _109936 _109938)). Qed.
Lemma lem8253958 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term746 A B P p z' _109936 P' _109937 _109938) = (term839 A B P z' _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8253957 A B P p _109936 _109938) (@lem8253956 A B P z' _109936 P' p _109937 _109938)). Qed.
Lemma lem8253962 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253963 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term839 A B P z' _109936 P' p _109937 _109938) = (term840 A B P z' _109936 P' p _109937 _109938).
Proof. exact (@lem8253962 (term614 A B P P' _109936 _109938) (term615 A B P p _109936 _109938) (term841 A B P z' _109936 P' p _109937 _109938)). Qed.
Lemma lem8253977 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253978 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term842 A B P z' _109936 P' p _109937 _109938) = (term843 A B P z' _109936 P' p _109937 _109938).
Proof. exact (@lem8253977 (term647 A B P z' _109936 _109937 _109938) (term615 A B P p _109936 _109938) (term806 A B P P' p _109937 _109938)). Qed.
Lemma lem8253994 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8253995 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term814 A B P _109936 P' p _109937 _109938) = (term815 A B P P' _109936 p _109937 _109938).
Proof. exact (@lem8253994 (term615 A B P P' _109937 _109938) (term615 A B P p _109936 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8254011 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) : (term785 A B P z' _109936 _109937 _109938) = (term785 A B P z' _109936 _109937 _109938).
Proof. exact (eq_refl (term785 A B P z' _109936 _109937 _109938)). Qed.
Lemma lem8254012 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term843 A B P z' _109936 P' p _109937 _109938) = (term844 A B P z' P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8254011 A B P z' _109936 _109937 _109938) (@lem8253995 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8254023 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term842 A B P z' _109936 P' p _109937 _109938) = (term844 A B P z' P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253978 A B P z' _109936 P' p _109937 _109938) (@lem8254012 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254024 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8254025 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term840 A B P z' _109936 P' p _109937 _109938) = (term845 A B P z' P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8254024 A B P P' _109936 _109938) (@lem8254023 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254036 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term839 A B P z' _109936 P' p _109937 _109938) = (term845 A B P z' P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253963 A B P z' _109936 P' p _109937 _109938) (@lem8254025 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254037 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term746 A B P p z' _109936 P' _109937 _109938) = (term845 A B P z' P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8253958 A B P z' _109936 P' p _109937 _109938) (@lem8254036 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254038 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8254039 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term846 A B P p z' _109936 P' _109937 _109938) = (term847 A B P z' P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8254038) (@lem8254037 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254063 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8254064 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term848 A B P p z' _109936 P' _109937 _109938) = (term841 A B P z' _109936 p P' _109937 _109938).
Proof. exact (@lem8254063 (term647 A B P z' _109936 _109937 _109938) (term615 A B P p _109937 _109938) (term615 A B P P' _109937 _109938)). Qed.
Lemma lem8254080 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8254081 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term806 A B P p P' _109937 _109938) = (term806 A B P P' p _109937 _109938).
Proof. exact (@lem8254080 (term615 A B P P' _109937 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8254087 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) : (term785 A B P z' _109936 _109937 _109938) = (term785 A B P z' _109936 _109937 _109938).
Proof. exact (eq_refl (term785 A B P z' _109936 _109937 _109938)). Qed.
Lemma lem8254088 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term841 A B P z' _109936 p P' _109937 _109938) = (term841 A B P z' _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8254087 A B P z' _109936 _109937 _109938) (@lem8254081 A B P P' p _109937 _109938)). Qed.
Lemma lem8254099 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term848 A B P p z' _109936 P' _109937 _109938) = (term841 A B P z' _109936 P' p _109937 _109938).
Proof. exact (TRANS (@lem8254064 A B P z' _109936 p P' _109937 _109938) (@lem8254088 A B P z' _109936 P' p _109937 _109938)). Qed.
Lemma lem8254100 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term618 A B P p _109936 _109938) = (term618 A B P p _109936 _109938).
Proof. exact (eq_refl (term618 A B P p _109936 _109938)). Qed.
Lemma lem8254101 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term849 A B P p z' _109936 P' _109937 _109938) = (term842 A B P z' _109936 P' p _109937 _109938).
Proof. exact (MK_COMB (@lem8254100 A B P p _109936 _109938) (@lem8254099 A B P z' _109936 P' p _109937 _109938)). Qed.
Lemma lem8254105 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8254106 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term842 A B P z' _109936 P' p _109937 _109938) = (term843 A B P z' _109936 P' p _109937 _109938).
Proof. exact (@lem8254105 (term647 A B P z' _109936 _109937 _109938) (term615 A B P p _109936 _109938) (term806 A B P P' p _109937 _109938)). Qed.
Lemma lem8254122 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8254123 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term814 A B P _109936 P' p _109937 _109938) = (term815 A B P P' _109936 p _109937 _109938).
Proof. exact (@lem8254122 (term615 A B P P' _109937 _109938) (term615 A B P p _109936 _109938) (term615 A B P p _109937 _109938)). Qed.
Lemma lem8254139 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) : (term785 A B P z' _109936 _109937 _109938) = (term785 A B P z' _109936 _109937 _109938).
Proof. exact (eq_refl (term785 A B P z' _109936 _109937 _109938)). Qed.
Lemma lem8254140 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term843 A B P z' _109936 P' p _109937 _109938) = (term844 A B P z' P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8254139 A B P z' _109936 _109937 _109938) (@lem8254123 A B P P' _109936 p _109937 _109938)). Qed.
Lemma lem8254151 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term842 A B P z' _109936 P' p _109937 _109938) = (term844 A B P z' P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8254106 A B P z' _109936 P' p _109937 _109938) (@lem8254140 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254152 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term849 A B P p z' _109936 P' _109937 _109938) = (term844 A B P z' P' _109936 p _109937 _109938).
Proof. exact (TRANS (@lem8254101 A B P z' _109936 P' p _109937 _109938) (@lem8254151 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254153 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term629 A B P P' _109936 _109938) = (term629 A B P P' _109936 _109938).
Proof. exact (eq_refl (term629 A B P P' _109936 _109938)). Qed.
Lemma lem8254154 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term850 A B P p z' _109936 P' _109937 _109938) = (term845 A B P z' P' _109936 p _109937 _109938).
Proof. exact (MK_COMB (@lem8254153 A B P P' _109936 _109938) (@lem8254152 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254165 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : ((term746 A B P p z' _109936 P' _109937 _109938) = (term850 A B P p z' _109936 P' _109937 _109938)) = ((term845 A B P z' P' _109936 p _109937 _109938) = (term845 A B P z' P' _109936 p _109937 _109938)).
Proof. exact (MK_COMB (@lem8254039 A B P z' P' _109936 p _109937 _109938) (@lem8254154 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254167 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8254168 (x : Prop) : (x = x) = True.
Proof. exact (@lem8254167 Prop x). Qed.
Lemma lem8254169 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109936 : A -> B) (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : ((term845 A B P z' P' _109936 p _109937 _109938) = (term845 A B P z' P' _109936 p _109937 _109938)) = True.
Proof. exact (@lem8254168 (term845 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254170 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : ((term746 A B P p z' _109936 P' _109937 _109938) = (term850 A B P p z' _109936 P' _109937 _109938)) = True.
Proof. exact (TRANS (@lem8254165 A B P z' P' _109936 p _109937 _109938) (@lem8254169 A B P z' P' _109936 p _109937 _109938)). Qed.
Lemma lem8254171 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : True = ((term746 A B P p z' _109936 P' _109937 _109938) = (term850 A B P p z' _109936 P' _109937 _109938)).
Proof. exact (SYM (@lem8254170 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254172 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term746 A B P p z' _109936 P' _109937 _109938) = (term850 A B P p z' _109936 P' _109937 _109938).
Proof. exact (EQ_MP (@lem8254171 A B P p z' _109936 P' _109937 _109938) (@lem0)). Qed.
Lemma lem8254173 {A B P : Type'} (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term850 A B P p z' _109936 P' _109937 _109938.
Proof. exact (EQ_MP (@lem8254172 A B P p z' _109936 P' _109937 _109938) (@lem8252317 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8254175 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254176 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109937 : A -> B) (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term850 A B P p z' _109936 P' _109937 _109938) = (term851 A B P p z' _109937 P' _109936 _109938).
Proof. exact (@lem8254175 (term849 A B P p z' _109936 P' _109937 _109938) (term614 A B P P' _109936 _109938)). Qed.
Lemma lem8254178 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254179 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term852 A B P p z' _109936 P' _109937 _109938) = (term853 A B P p z' _109936 P' _109937 _109938).
Proof. exact (@lem8254178 (term615 A B P p _109936 _109938) (term848 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254181 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254182 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term767 A B P p _109936 _109938) = (term614 A B P p _109936 _109938).
Proof. exact (@lem8254181 (term614 A B P p _109936 _109938)). Qed.
Lemma lem8254183 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8254184 {A B P : Type'} (p : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term768 A B P p _109936 _109938) = (term616 A B P p _109936 _109938).
Proof. exact (MK_COMB (@lem8254183) (@lem8254182 A B P p _109936 _109938)). Qed.
Lemma lem8254186 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254187 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term854 A B P p z' _109936 P' _109937 _109938) = (term855 A B P p z' _109936 P' _109937 _109938).
Proof. exact (@lem8254186 (term615 A B P p _109937 _109938) (term856 A B P z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254189 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254190 {A B P : Type'} (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term767 A B P p _109937 _109938) = (term614 A B P p _109937 _109938).
Proof. exact (@lem8254189 (term614 A B P p _109937 _109938)). Qed.
Lemma lem8254191 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8254192 {A B P : Type'} (p : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term768 A B P p _109937 _109938) = (term616 A B P p _109937 _109938).
Proof. exact (MK_COMB (@lem8254191) (@lem8254190 A B P p _109937 _109938)). Qed.
Lemma lem8254194 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254195 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term857 A B P z' _109936 P' _109937 _109938) = (term858 A B P z' _109936 P' _109937 _109938).
Proof. exact (@lem8254194 (term647 A B P z' _109936 _109937 _109938) (term615 A B P P' _109937 _109938)). Qed.
Lemma lem8254197 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254198 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) : (term794 A B P z' _109936 _109937 _109938) = ((term640 A B P z' _109936 _109937 _109938) = (term643 A B P z' _109936 _109937 _109938)).
Proof. exact (@lem8254197 ((term640 A B P z' _109936 _109937 _109938) = (term643 A B P z' _109936 _109937 _109938))). Qed.
Lemma lem8254199 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8254200 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (_109937 : A -> B) (_109938 : P) : (term795 A B P z' _109936 _109937 _109938) = (term796 A B P z' _109936 _109937 _109938).
Proof. exact (MK_COMB (@lem8254199) (@lem8254198 A B P z' _109936 _109937 _109938)). Qed.
Lemma lem8254202 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254203 {A B P : Type'} (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term767 A B P P' _109937 _109938) = (term614 A B P P' _109937 _109938).
Proof. exact (@lem8254202 (term614 A B P P' _109937 _109938)). Qed.
Lemma lem8254204 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term858 A B P z' _109936 P' _109937 _109938) = (term859 A B P z' _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8254200 A B P z' _109936 _109937 _109938) (@lem8254203 A B P P' _109937 _109938)). Qed.
Lemma lem8254205 {A B P : Type'} (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term857 A B P z' _109936 P' _109937 _109938) = (term859 A B P z' _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8254195 A B P z' _109936 P' _109937 _109938) (@lem8254204 A B P z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254206 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term855 A B P p z' _109936 P' _109937 _109938) = (term860 A B P p z' _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8254192 A B P p _109937 _109938) (@lem8254205 A B P z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254207 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term854 A B P p z' _109936 P' _109937 _109938) = (term860 A B P p z' _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8254187 A B P p z' _109936 P' _109937 _109938) (@lem8254206 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254208 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term853 A B P p z' _109936 P' _109937 _109938) = (term861 A B P p z' _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8254184 A B P p _109936 _109938) (@lem8254207 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254209 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term852 A B P p z' _109936 P' _109937 _109938) = (term861 A B P p z' _109936 P' _109937 _109938).
Proof. exact (TRANS (@lem8254179 A B P p z' _109936 P' _109937 _109938) (@lem8254208 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254210 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254211 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109936 : A -> B) (P' : type560 A B P) (_109937 : A -> B) (_109938 : P) : (term862 A B P p z' _109936 P' _109937 _109938) = (term863 A B P p z' _109936 P' _109937 _109938).
Proof. exact (MK_COMB (@lem8254210) (@lem8254209 A B P p z' _109936 P' _109937 _109938)). Qed.
Lemma lem8254212 {A B P : Type'} (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term614 A B P P' _109936 _109938) = (term614 A B P P' _109936 _109938).
Proof. exact (eq_refl (term614 A B P P' _109936 _109938)). Qed.
Lemma lem8254213 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109937 : A -> B) (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term851 A B P p z' _109937 P' _109936 _109938) = (term864 A B P p z' _109937 P' _109936 _109938).
Proof. exact (MK_COMB (@lem8254211 A B P p z' _109936 P' _109937 _109938) (@lem8254212 A B P P' _109936 _109938)). Qed.
Lemma lem8254214 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109937 : A -> B) (P' : type560 A B P) (_109936 : A -> B) (_109938 : P) : (term850 A B P p z' _109936 P' _109937 _109938) = (term864 A B P p z' _109937 P' _109936 _109938).
Proof. exact (TRANS (@lem8254176 A B P p z' _109937 P' _109936 _109938) (@lem8254213 A B P p z' _109937 P' _109936 _109938)). Qed.
Lemma lem8254216 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term859 A B P z' f P' g a.
Proof. exact (conj (@lem8253846 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6) (@lem8253853 A B P P' g a h6)). Qed.
Lemma lem8254217 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term860 A B P p z' f P' g a.
Proof. exact (conj (@lem8253410 A B P lt2 s z f p P' g a h1 h2 h5) (@lem8254216 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8254218 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term861 A B P p z' f P' g a.
Proof. exact (conj (@lem8253185 A B P f p P' g a h5) (@lem8254217 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8254220 {A B P : Type'} (_109937 : A -> B) (_109936 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term864 A B P p z' _109937 P' _109936 _109938.
Proof. exact (EQ_MP (@lem8254214 A B P p z' _109937 P' _109936 _109938) (@lem8254173 A B P _109936 _109937 _109938 p lt2 s z' P' h1)). Qed.
Lemma lem8254221 {A B P : Type'} (_109937 : A -> B) (_109936 : A -> B) (_109938 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term864 A B P p z' _109937 P' _109936 _109938.
Proof. exact (@lem8254220 A B P _109937 _109936 _109938 p lt2 s z' P' h1). Qed.
Lemma lem8254222 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term864 A B P p z' g P' f a.
Proof. exact (@lem8254221 A B P g f a p lt2 s z' P' h1). Qed.
Lemma lem8254225 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term623 A B P f p P' g a) (h6 : term614 A B P P' g a) : term614 A B P P' f a.
Proof. exact (@lem8254222 A B P g f a p lt2 s z' P' h3 (@lem8254218 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8254226 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : term757 A B P P' f a.
Proof. exact (fun h0 : term615 A B P P' f a => @lem8254225 A B P z lt2 s z' f p P' g a h1 h2 h3 h0 h4 h5). Qed.
Lemma lem8254228 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254229 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8254228 (term614 A B P P' f a)). Qed.
Lemma lem8254230 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : term614 A B P P' f a.
Proof. exact (EQ_MP (@lem8254229 A B P P' f a) (@lem8254226 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8254233 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8254235 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term615 A B P P' f a) = (term801 A B P P' f a).
Proof. exact (@lem8254233 (term614 A B P P' f a)). Qed.
Lemma lem8254238 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term623 A B P f p P' g a) : term801 A B P P' f a.
Proof. exact (EQ_MP (@lem8254235 A B P P' f a) (@lem8252227 A B P f p P' g a h1)). Qed.
Lemma lem8254241 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : False.
Proof. exact (@lem8254238 A B P f p P' g a h4 (@lem8254230 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8254242 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8254241 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8254244 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254245 : term802 = False.
Proof. exact (@lem8254244 False). Qed.
Lemma lem8254246 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : False.
Proof. exact (EQ_MP (@lem8254245) (@lem8254242 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8254399 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8254400 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term759 A B P p f a.
Proof. exact (fun h0 : term614 A B P p f a => @lem8254399 A B P p f a h1). Qed.
Lemma lem8254402 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8254403 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term759 A B P p f a) = (term615 A B P p f a).
Proof. exact (@lem8254402 (term614 A B P p f a)). Qed.
Lemma lem8254404 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (EQ_MP (@lem8254403 A B P p f a) (@lem8254400 A B P p f a h1)). Qed.
Lemma lem8254406 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8254407 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8254406 A B P f p P' g a h1). Qed.
Lemma lem8254409 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254410 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8254409 (term614 A B P p g a)). Qed.
Lemma lem8254411 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8254410 A B P p g a) (@lem8254407 A B P f p P' g a h1)). Qed.
Lemma lem8254413 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254414 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109940 : A -> B) (_109941 : A -> B) (s : P -> A) (_109942 : P) : (term747 A B P lt2 z s _109940 p _109941 _109942) = (term865 A B P p lt2 z _109940 _109941 s _109942).
Proof. exact (@lem8254413 (term631 A B P _109940 p _109941 _109942) (term654 A B P lt2 z _109940 _109941 s _109942)). Qed.
Lemma lem8254416 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254417 {A B P : Type'} (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term827 A B P _109940 p _109941 _109942) = (term828 A B P _109940 p _109941 _109942).
Proof. exact (@lem8254416 (term614 A B P p _109940 _109942) (term615 A B P p _109941 _109942)). Qed.
Lemma lem8254419 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254420 {A B P : Type'} (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term767 A B P p _109941 _109942) = (term614 A B P p _109941 _109942).
Proof. exact (@lem8254419 (term614 A B P p _109941 _109942)). Qed.
Lemma lem8254421 {A B P : Type'} (p : type560 A B P) (_109940 : A -> B) (_109942 : P) : (term829 A B P p _109940 _109942) = (term829 A B P p _109940 _109942).
Proof. exact (eq_refl (term829 A B P p _109940 _109942)). Qed.
Lemma lem8254422 {A B P : Type'} (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term828 A B P _109940 p _109941 _109942) = (term830 A B P _109940 p _109941 _109942).
Proof. exact (MK_COMB (@lem8254421 A B P p _109940 _109942) (@lem8254420 A B P p _109941 _109942)). Qed.
Lemma lem8254423 {A B P : Type'} (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term827 A B P _109940 p _109941 _109942) = (term830 A B P _109940 p _109941 _109942).
Proof. exact (TRANS (@lem8254417 A B P _109940 p _109941 _109942) (@lem8254422 A B P _109940 p _109941 _109942)). Qed.
Lemma lem8254424 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254425 {A B P : Type'} (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term866 A B P _109940 p _109941 _109942) = (term867 A B P _109940 p _109941 _109942).
Proof. exact (MK_COMB (@lem8254424) (@lem8254423 A B P _109940 p _109941 _109942)). Qed.
Lemma lem8254426 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_109940 : A -> B) (_109941 : A -> B) (s : P -> A) (_109942 : P) : (term654 A B P lt2 z _109940 _109941 s _109942) = (term654 A B P lt2 z _109940 _109941 s _109942).
Proof. exact (eq_refl (term654 A B P lt2 z _109940 _109941 s _109942)). Qed.
Lemma lem8254427 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109940 : A -> B) (_109941 : A -> B) (s : P -> A) (_109942 : P) : (term865 A B P p lt2 z _109940 _109941 s _109942) = (term868 A B P p lt2 z _109940 _109941 s _109942).
Proof. exact (MK_COMB (@lem8254425 A B P _109940 p _109941 _109942) (@lem8254426 A B P lt2 z _109940 _109941 s _109942)). Qed.
Lemma lem8254428 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109940 : A -> B) (_109941 : A -> B) (s : P -> A) (_109942 : P) : (term747 A B P lt2 z s _109940 p _109941 _109942) = (term868 A B P p lt2 z _109940 _109941 s _109942).
Proof. exact (TRANS (@lem8254414 A B P p lt2 z _109940 _109941 s _109942) (@lem8254427 A B P p lt2 z _109940 _109941 s _109942)). Qed.
Lemma lem8254430 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p f a) (h2 : term621 A B P f p P' g a) : term830 A B P f p g a.
Proof. exact (conj (@lem8254404 A B P p f a h1) (@lem8254411 A B P f p P' g a h2)). Qed.
Lemma lem8254432 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _109940 _109941 s _109942.
Proof. exact (EQ_MP (@lem8254428 A B P p lt2 z _109940 _109941 s _109942) (@lem8252487 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8254433 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _109940 _109941 s _109942.
Proof. exact (@lem8254432 A B P _109940 _109941 _109942 lt2 s z p h1). Qed.
Lemma lem8254434 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z f g s a.
Proof. exact (@lem8254433 A B P f g a lt2 s z p h1). Qed.
Lemma lem8254437 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8254434 A B P f g a lt2 s z p h1 (@lem8254430 A B P f p P' g a h2 h3)). Qed.
Lemma lem8254438 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8254437 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8254440 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254441 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8254440 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8254442 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8254441 A B P lt2 z f g s a) (@lem8254438 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8254448 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8254449 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109939) = (term775 A B P f g lt2 _109939 s a).
Proof. exact (@lem8254448 ((@I (A -> B) f _109939) = (@I (A -> B) g _109939)) (term608 A P lt2 _109939 s a)). Qed.
Lemma lem8254457 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8254458 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _109939) = (term777 A B P f g lt2 _109939 s a).
Proof. exact (MK_COMB (@lem8254457) (@lem8254449 A B P f g lt2 _109939 s a)). Qed.
Lemma lem8254466 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _109939 s a) = (term775 A B P f g lt2 _109939 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _109939 s a)). Qed.
Lemma lem8254467 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109939) = (term775 A B P f g lt2 _109939 s a)) = ((term775 A B P f g lt2 _109939 s a) = (term775 A B P f g lt2 _109939 s a)).
Proof. exact (MK_COMB (@lem8254458 A B P f g lt2 _109939 s a) (@lem8254466 A B P f g lt2 _109939 s a)). Qed.
Lemma lem8254469 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8254470 (x : Prop) : (x = x) = True.
Proof. exact (@lem8254469 Prop x). Qed.
Lemma lem8254471 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _109939 s a) = (term775 A B P f g lt2 _109939 s a)) = True.
Proof. exact (@lem8254470 (term775 A B P f g lt2 _109939 s a)). Qed.
Lemma lem8254472 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109939) = (term775 A B P f g lt2 _109939 s a)) = True.
Proof. exact (TRANS (@lem8254467 A B P f g lt2 _109939 s a) (@lem8254471 A B P f g lt2 _109939 s a)). Qed.
Lemma lem8254473 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _109939) = (term775 A B P f g lt2 _109939 s a)).
Proof. exact (SYM (@lem8254472 A B P f g lt2 _109939 s a)). Qed.
Lemma lem8254474 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109939) = (term775 A B P f g lt2 _109939 s a).
Proof. exact (EQ_MP (@lem8254473 A B P f g lt2 _109939 s a) (@lem0)). Qed.
Lemma lem8254475 {A B P : Type'} (_109939 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _109939 s a.
Proof. exact (EQ_MP (@lem8254474 A B P f g lt2 _109939 s a) (@lem8252363 A B P _109939 lt2 s a f g h1)). Qed.
Lemma lem8254477 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254478 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109939 : A) : (term775 A B P f g lt2 _109939 s a) = (term778 A B P lt2 s a f g _109939).
Proof. exact (@lem8254477 (term608 A P lt2 _109939 s a) ((@I (A -> B) f _109939) = (@I (A -> B) g _109939))). Qed.
Lemma lem8254480 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254481 {A P : Type'} (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : (term779 A P lt2 _109939 s a) = (term606 A P lt2 _109939 s a).
Proof. exact (@lem8254480 (term606 A P lt2 _109939 s a)). Qed.
Lemma lem8254482 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254483 {A P : Type'} (lt2 : type1402 A) (_109939 : A) (s : P -> A) (a : P) : (term780 A P lt2 _109939 s a) = (term781 A P lt2 _109939 s a).
Proof. exact (MK_COMB (@lem8254482) (@lem8254481 A P lt2 _109939 s a)). Qed.
Lemma lem8254484 {A B : Type'} (f : A -> B) (g : A -> B) (_109939 : A) : ((@I (A -> B) f _109939) = (@I (A -> B) g _109939)) = ((@I (A -> B) f _109939) = (@I (A -> B) g _109939)).
Proof. exact (eq_refl ((@I (A -> B) f _109939) = (@I (A -> B) g _109939))). Qed.
Lemma lem8254485 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109939 : A) : (term778 A B P lt2 s a f g _109939) = (term782 A B P lt2 s a f g _109939).
Proof. exact (MK_COMB (@lem8254483 A P lt2 _109939 s a) (@lem8254484 A B f g _109939)). Qed.
Lemma lem8254486 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109939 : A) : (term775 A B P f g lt2 _109939 s a) = (term782 A B P lt2 s a f g _109939).
Proof. exact (TRANS (@lem8254478 A B P lt2 s a f g _109939) (@lem8254485 A B P lt2 s a f g _109939)). Qed.
Lemma lem8254489 {A B P : Type'} (_109939 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109939.
Proof. exact (EQ_MP (@lem8254486 A B P lt2 s a f g _109939) (@lem8254475 A B P _109939 lt2 s a f g h1)). Qed.
Lemma lem8254490 {A B P : Type'} (_109939 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109939.
Proof. exact (@lem8254489 A B P _109939 lt2 s a f g h1). Qed.
Lemma lem8254491 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8254490 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8254494 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8254491 A B P z lt2 s a f g h1 (@lem8254442 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8254495 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8254494 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8254497 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254498 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8254497 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8254499 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8254498 A B P z f g a) (@lem8254495 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8254501 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8254502 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8254501 A B P f p P' g a h1). Qed.
Lemma lem8254504 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254505 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8254504 (term614 A B P p g a)). Qed.
Lemma lem8254506 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8254505 A B P p g a) (@lem8254502 A B P f p P' g a h1)). Qed.
Lemma lem8254512 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8254513 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term748 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942).
Proof. exact (@lem8254512 (term614 A B P p _109940 _109942) (term647 A B P z _109940 _109941 _109942) (term615 A B P p _109941 _109942)). Qed.
Lemma lem8254531 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8254532 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term870 A B P z _109940 p _109941 _109942) = (term871 A B P z _109940 p _109941 _109942).
Proof. exact (MK_COMB (@lem8254531) (@lem8254513 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254550 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term869 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942).
Proof. exact (eq_refl (term869 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254551 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : ((term748 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942)) = ((term869 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942)).
Proof. exact (MK_COMB (@lem8254532 A B P z _109940 p _109941 _109942) (@lem8254550 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254553 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8254554 (x : Prop) : (x = x) = True.
Proof. exact (@lem8254553 Prop x). Qed.
Lemma lem8254555 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : ((term869 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942)) = True.
Proof. exact (@lem8254554 (term869 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254556 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : ((term748 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942)) = True.
Proof. exact (TRANS (@lem8254551 A B P z _109940 p _109941 _109942) (@lem8254555 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254557 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : True = ((term748 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942)).
Proof. exact (SYM (@lem8254556 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254558 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term748 A B P z _109940 p _109941 _109942) = (term869 A B P z _109940 p _109941 _109942).
Proof. exact (EQ_MP (@lem8254557 A B P z _109940 p _109941 _109942) (@lem0)). Qed.
Lemma lem8254559 {A B P : Type'} (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term869 A B P z _109940 p _109941 _109942.
Proof. exact (EQ_MP (@lem8254558 A B P z _109940 p _109941 _109942) (@lem8252497 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8254561 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254562 {A B P : Type'} (z : type518 A B P) (_109941 : A -> B) (p : type560 A B P) (_109940 : A -> B) (_109942 : P) : (term869 A B P z _109940 p _109941 _109942) = (term872 A B P z _109941 p _109940 _109942).
Proof. exact (@lem8254561 (term856 A B P z _109940 p _109941 _109942) (term614 A B P p _109940 _109942)). Qed.
Lemma lem8254564 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254565 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term857 A B P z _109940 p _109941 _109942) = (term858 A B P z _109940 p _109941 _109942).
Proof. exact (@lem8254564 (term647 A B P z _109940 _109941 _109942) (term615 A B P p _109941 _109942)). Qed.
Lemma lem8254567 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254568 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) : (term794 A B P z _109940 _109941 _109942) = ((term640 A B P z _109940 _109941 _109942) = (term643 A B P z _109940 _109941 _109942)).
Proof. exact (@lem8254567 ((term640 A B P z _109940 _109941 _109942) = (term643 A B P z _109940 _109941 _109942))). Qed.
Lemma lem8254569 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8254570 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (_109941 : A -> B) (_109942 : P) : (term795 A B P z _109940 _109941 _109942) = (term796 A B P z _109940 _109941 _109942).
Proof. exact (MK_COMB (@lem8254569) (@lem8254568 A B P z _109940 _109941 _109942)). Qed.
Lemma lem8254572 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254573 {A B P : Type'} (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term767 A B P p _109941 _109942) = (term614 A B P p _109941 _109942).
Proof. exact (@lem8254572 (term614 A B P p _109941 _109942)). Qed.
Lemma lem8254574 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term858 A B P z _109940 p _109941 _109942) = (term859 A B P z _109940 p _109941 _109942).
Proof. exact (MK_COMB (@lem8254570 A B P z _109940 _109941 _109942) (@lem8254573 A B P p _109941 _109942)). Qed.
Lemma lem8254575 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term857 A B P z _109940 p _109941 _109942) = (term859 A B P z _109940 p _109941 _109942).
Proof. exact (TRANS (@lem8254565 A B P z _109940 p _109941 _109942) (@lem8254574 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254576 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254577 {A B P : Type'} (z : type518 A B P) (_109940 : A -> B) (p : type560 A B P) (_109941 : A -> B) (_109942 : P) : (term873 A B P z _109940 p _109941 _109942) = (term874 A B P z _109940 p _109941 _109942).
Proof. exact (MK_COMB (@lem8254576) (@lem8254575 A B P z _109940 p _109941 _109942)). Qed.
Lemma lem8254578 {A B P : Type'} (p : type560 A B P) (_109940 : A -> B) (_109942 : P) : (term614 A B P p _109940 _109942) = (term614 A B P p _109940 _109942).
Proof. exact (eq_refl (term614 A B P p _109940 _109942)). Qed.
Lemma lem8254579 {A B P : Type'} (z : type518 A B P) (_109941 : A -> B) (p : type560 A B P) (_109940 : A -> B) (_109942 : P) : (term872 A B P z _109941 p _109940 _109942) = (term875 A B P z _109941 p _109940 _109942).
Proof. exact (MK_COMB (@lem8254577 A B P z _109940 p _109941 _109942) (@lem8254578 A B P p _109940 _109942)). Qed.
Lemma lem8254580 {A B P : Type'} (z : type518 A B P) (_109941 : A -> B) (p : type560 A B P) (_109940 : A -> B) (_109942 : P) : (term869 A B P z _109940 p _109941 _109942) = (term875 A B P z _109941 p _109940 _109942).
Proof. exact (TRANS (@lem8254562 A B P z _109941 p _109940 _109942) (@lem8254579 A B P z _109941 p _109940 _109942)). Qed.
Lemma lem8254582 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term859 A B P z f p g a.
Proof. exact (conj (@lem8254499 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8254506 A B P f p P' g a h4)). Qed.
Lemma lem8254584 {A B P : Type'} (_109941 : A -> B) (_109940 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _109941 p _109940 _109942.
Proof. exact (EQ_MP (@lem8254580 A B P z _109941 p _109940 _109942) (@lem8254559 A B P _109940 _109941 _109942 lt2 s z p h1)). Qed.
Lemma lem8254585 {A B P : Type'} (_109941 : A -> B) (_109940 : A -> B) (_109942 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _109941 p _109940 _109942.
Proof. exact (@lem8254584 A B P _109941 _109940 _109942 lt2 s z p h1). Qed.
Lemma lem8254586 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z g p f a.
Proof. exact (@lem8254585 A B P g f a lt2 s z p h1). Qed.
Lemma lem8254589 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (@lem8254586 A B P g f a lt2 s z p h2 (@lem8254582 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8254590 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term621 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8254589 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8254592 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254593 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8254592 (term614 A B P p f a)). Qed.
Lemma lem8254594 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term621 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8254593 A B P p f a) (@lem8254590 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8254597 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8254599 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term615 A B P p f a) = (term801 A B P p f a).
Proof. exact (@lem8254597 (term614 A B P p f a)). Qed.
Lemma lem8254602 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term801 A B P p f a.
Proof. exact (EQ_MP (@lem8254599 A B P p f a) (@lem8252369 A B P p f a h1)). Qed.
Lemma lem8254605 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : False.
Proof. exact (@lem8254602 A B P p f a h3 (@lem8254594 A B P lt2 s z f p P' g a h1 h2 h4)). Qed.
Lemma lem8254606 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8254605 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8254608 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254609 : term802 = False.
Proof. exact (@lem8254608 False). Qed.
Lemma lem8254610 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8254609) (@lem8254606 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8254763 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8254764 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term759 A B P p f a.
Proof. exact (fun h0 : term614 A B P p f a => @lem8254763 A B P p f a h1). Qed.
Lemma lem8254766 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8254767 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term759 A B P p f a) = (term615 A B P p f a).
Proof. exact (@lem8254766 (term614 A B P p f a)). Qed.
Lemma lem8254768 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (EQ_MP (@lem8254767 A B P p f a) (@lem8254764 A B P p f a h1)). Qed.
Lemma lem8254770 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8254771 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8254770 A B P f p P' g a h1). Qed.
Lemma lem8254773 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254774 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8254773 (term614 A B P p g a)). Qed.
Lemma lem8254775 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8254774 A B P p g a) (@lem8254771 A B P f p P' g a h1)). Qed.
Lemma lem8254777 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254778 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109947 : A -> B) (_109948 : A -> B) (s : P -> A) (_109949 : P) : (term747 A B P lt2 z s _109947 p _109948 _109949) = (term865 A B P p lt2 z _109947 _109948 s _109949).
Proof. exact (@lem8254777 (term631 A B P _109947 p _109948 _109949) (term654 A B P lt2 z _109947 _109948 s _109949)). Qed.
Lemma lem8254780 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254781 {A B P : Type'} (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term827 A B P _109947 p _109948 _109949) = (term828 A B P _109947 p _109948 _109949).
Proof. exact (@lem8254780 (term614 A B P p _109947 _109949) (term615 A B P p _109948 _109949)). Qed.
Lemma lem8254783 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254784 {A B P : Type'} (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term767 A B P p _109948 _109949) = (term614 A B P p _109948 _109949).
Proof. exact (@lem8254783 (term614 A B P p _109948 _109949)). Qed.
Lemma lem8254785 {A B P : Type'} (p : type560 A B P) (_109947 : A -> B) (_109949 : P) : (term829 A B P p _109947 _109949) = (term829 A B P p _109947 _109949).
Proof. exact (eq_refl (term829 A B P p _109947 _109949)). Qed.
Lemma lem8254786 {A B P : Type'} (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term828 A B P _109947 p _109948 _109949) = (term830 A B P _109947 p _109948 _109949).
Proof. exact (MK_COMB (@lem8254785 A B P p _109947 _109949) (@lem8254784 A B P p _109948 _109949)). Qed.
Lemma lem8254787 {A B P : Type'} (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term827 A B P _109947 p _109948 _109949) = (term830 A B P _109947 p _109948 _109949).
Proof. exact (TRANS (@lem8254781 A B P _109947 p _109948 _109949) (@lem8254786 A B P _109947 p _109948 _109949)). Qed.
Lemma lem8254788 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254789 {A B P : Type'} (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term866 A B P _109947 p _109948 _109949) = (term867 A B P _109947 p _109948 _109949).
Proof. exact (MK_COMB (@lem8254788) (@lem8254787 A B P _109947 p _109948 _109949)). Qed.
Lemma lem8254790 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_109947 : A -> B) (_109948 : A -> B) (s : P -> A) (_109949 : P) : (term654 A B P lt2 z _109947 _109948 s _109949) = (term654 A B P lt2 z _109947 _109948 s _109949).
Proof. exact (eq_refl (term654 A B P lt2 z _109947 _109948 s _109949)). Qed.
Lemma lem8254791 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109947 : A -> B) (_109948 : A -> B) (s : P -> A) (_109949 : P) : (term865 A B P p lt2 z _109947 _109948 s _109949) = (term868 A B P p lt2 z _109947 _109948 s _109949).
Proof. exact (MK_COMB (@lem8254789 A B P _109947 p _109948 _109949) (@lem8254790 A B P lt2 z _109947 _109948 s _109949)). Qed.
Lemma lem8254792 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_109947 : A -> B) (_109948 : A -> B) (s : P -> A) (_109949 : P) : (term747 A B P lt2 z s _109947 p _109948 _109949) = (term868 A B P p lt2 z _109947 _109948 s _109949).
Proof. exact (TRANS (@lem8254778 A B P p lt2 z _109947 _109948 s _109949) (@lem8254791 A B P p lt2 z _109947 _109948 s _109949)). Qed.
Lemma lem8254794 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p f a) (h2 : term621 A B P f p P' g a) : term830 A B P f p g a.
Proof. exact (conj (@lem8254768 A B P p f a h1) (@lem8254775 A B P f p P' g a h2)). Qed.
Lemma lem8254796 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _109947 _109948 s _109949.
Proof. exact (EQ_MP (@lem8254792 A B P p lt2 z _109947 _109948 s _109949) (@lem8252627 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8254797 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _109947 _109948 s _109949.
Proof. exact (@lem8254796 A B P _109947 _109948 _109949 lt2 s z p h1). Qed.
Lemma lem8254798 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z f g s a.
Proof. exact (@lem8254797 A B P f g a lt2 s z p h1). Qed.
Lemma lem8254801 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8254798 A B P f g a lt2 s z p h1 (@lem8254794 A B P f p P' g a h2 h3)). Qed.
Lemma lem8254802 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8254801 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8254804 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254805 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8254804 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8254806 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8254805 A B P lt2 z f g s a) (@lem8254802 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8254812 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8254813 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109946) = (term775 A B P f g lt2 _109946 s a).
Proof. exact (@lem8254812 ((@I (A -> B) f _109946) = (@I (A -> B) g _109946)) (term608 A P lt2 _109946 s a)). Qed.
Lemma lem8254821 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8254822 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _109946) = (term777 A B P f g lt2 _109946 s a).
Proof. exact (MK_COMB (@lem8254821) (@lem8254813 A B P f g lt2 _109946 s a)). Qed.
Lemma lem8254830 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _109946 s a) = (term775 A B P f g lt2 _109946 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _109946 s a)). Qed.
Lemma lem8254831 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109946) = (term775 A B P f g lt2 _109946 s a)) = ((term775 A B P f g lt2 _109946 s a) = (term775 A B P f g lt2 _109946 s a)).
Proof. exact (MK_COMB (@lem8254822 A B P f g lt2 _109946 s a) (@lem8254830 A B P f g lt2 _109946 s a)). Qed.
Lemma lem8254833 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8254834 (x : Prop) : (x = x) = True.
Proof. exact (@lem8254833 Prop x). Qed.
Lemma lem8254835 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _109946 s a) = (term775 A B P f g lt2 _109946 s a)) = True.
Proof. exact (@lem8254834 (term775 A B P f g lt2 _109946 s a)). Qed.
Lemma lem8254836 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _109946) = (term775 A B P f g lt2 _109946 s a)) = True.
Proof. exact (TRANS (@lem8254831 A B P f g lt2 _109946 s a) (@lem8254835 A B P f g lt2 _109946 s a)). Qed.
Lemma lem8254837 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _109946) = (term775 A B P f g lt2 _109946 s a)).
Proof. exact (SYM (@lem8254836 A B P f g lt2 _109946 s a)). Qed.
Lemma lem8254838 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _109946) = (term775 A B P f g lt2 _109946 s a).
Proof. exact (EQ_MP (@lem8254837 A B P f g lt2 _109946 s a) (@lem0)). Qed.
Lemma lem8254839 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _109946 s a.
Proof. exact (EQ_MP (@lem8254838 A B P f g lt2 _109946 s a) (@lem8252503 A B P _109946 lt2 s a f g h1)). Qed.
Lemma lem8254841 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254842 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109946 : A) : (term775 A B P f g lt2 _109946 s a) = (term778 A B P lt2 s a f g _109946).
Proof. exact (@lem8254841 (term608 A P lt2 _109946 s a) ((@I (A -> B) f _109946) = (@I (A -> B) g _109946))). Qed.
Lemma lem8254844 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254845 {A P : Type'} (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : (term779 A P lt2 _109946 s a) = (term606 A P lt2 _109946 s a).
Proof. exact (@lem8254844 (term606 A P lt2 _109946 s a)). Qed.
Lemma lem8254846 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254847 {A P : Type'} (lt2 : type1402 A) (_109946 : A) (s : P -> A) (a : P) : (term780 A P lt2 _109946 s a) = (term781 A P lt2 _109946 s a).
Proof. exact (MK_COMB (@lem8254846) (@lem8254845 A P lt2 _109946 s a)). Qed.
Lemma lem8254848 {A B : Type'} (f : A -> B) (g : A -> B) (_109946 : A) : ((@I (A -> B) f _109946) = (@I (A -> B) g _109946)) = ((@I (A -> B) f _109946) = (@I (A -> B) g _109946)).
Proof. exact (eq_refl ((@I (A -> B) f _109946) = (@I (A -> B) g _109946))). Qed.
Lemma lem8254849 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109946 : A) : (term778 A B P lt2 s a f g _109946) = (term782 A B P lt2 s a f g _109946).
Proof. exact (MK_COMB (@lem8254847 A P lt2 _109946 s a) (@lem8254848 A B f g _109946)). Qed.
Lemma lem8254850 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_109946 : A) : (term775 A B P f g lt2 _109946 s a) = (term782 A B P lt2 s a f g _109946).
Proof. exact (TRANS (@lem8254842 A B P lt2 s a f g _109946) (@lem8254849 A B P lt2 s a f g _109946)). Qed.
Lemma lem8254853 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109946.
Proof. exact (EQ_MP (@lem8254850 A B P lt2 s a f g _109946) (@lem8254839 A B P _109946 lt2 s a f g h1)). Qed.
Lemma lem8254854 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109946.
Proof. exact (@lem8254853 A B P _109946 lt2 s a f g h1). Qed.
Lemma lem8254855 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8254854 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8254858 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8254855 A B P z lt2 s a f g h1 (@lem8254806 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8254859 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8254858 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8254861 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254862 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8254861 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8254863 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8254862 A B P z f g a) (@lem8254859 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8254865 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8254866 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8254865 A B P f p P' g a h1). Qed.
Lemma lem8254868 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254869 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8254868 (term614 A B P p g a)). Qed.
Lemma lem8254870 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8254869 A B P p g a) (@lem8254866 A B P f p P' g a h1)). Qed.
Lemma lem8254876 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8254877 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term748 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949).
Proof. exact (@lem8254876 (term614 A B P p _109947 _109949) (term647 A B P z _109947 _109948 _109949) (term615 A B P p _109948 _109949)). Qed.
Lemma lem8254895 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8254896 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term870 A B P z _109947 p _109948 _109949) = (term871 A B P z _109947 p _109948 _109949).
Proof. exact (MK_COMB (@lem8254895) (@lem8254877 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254914 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term869 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949).
Proof. exact (eq_refl (term869 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254915 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : ((term748 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949)) = ((term869 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949)).
Proof. exact (MK_COMB (@lem8254896 A B P z _109947 p _109948 _109949) (@lem8254914 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254917 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8254918 (x : Prop) : (x = x) = True.
Proof. exact (@lem8254917 Prop x). Qed.
Lemma lem8254919 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : ((term869 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949)) = True.
Proof. exact (@lem8254918 (term869 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254920 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : ((term748 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949)) = True.
Proof. exact (TRANS (@lem8254915 A B P z _109947 p _109948 _109949) (@lem8254919 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254921 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : True = ((term748 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949)).
Proof. exact (SYM (@lem8254920 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254922 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term748 A B P z _109947 p _109948 _109949) = (term869 A B P z _109947 p _109948 _109949).
Proof. exact (EQ_MP (@lem8254921 A B P z _109947 p _109948 _109949) (@lem0)). Qed.
Lemma lem8254923 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term869 A B P z _109947 p _109948 _109949.
Proof. exact (EQ_MP (@lem8254922 A B P z _109947 p _109948 _109949) (@lem8252637 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8254925 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8254926 {A B P : Type'} (z : type518 A B P) (_109948 : A -> B) (p : type560 A B P) (_109947 : A -> B) (_109949 : P) : (term869 A B P z _109947 p _109948 _109949) = (term872 A B P z _109948 p _109947 _109949).
Proof. exact (@lem8254925 (term856 A B P z _109947 p _109948 _109949) (term614 A B P p _109947 _109949)). Qed.
Lemma lem8254928 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8254929 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term857 A B P z _109947 p _109948 _109949) = (term858 A B P z _109947 p _109948 _109949).
Proof. exact (@lem8254928 (term647 A B P z _109947 _109948 _109949) (term615 A B P p _109948 _109949)). Qed.
Lemma lem8254931 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254932 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) : (term794 A B P z _109947 _109948 _109949) = ((term640 A B P z _109947 _109948 _109949) = (term643 A B P z _109947 _109948 _109949)).
Proof. exact (@lem8254931 ((term640 A B P z _109947 _109948 _109949) = (term643 A B P z _109947 _109948 _109949))). Qed.
Lemma lem8254933 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8254934 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) : (term795 A B P z _109947 _109948 _109949) = (term796 A B P z _109947 _109948 _109949).
Proof. exact (MK_COMB (@lem8254933) (@lem8254932 A B P z _109947 _109948 _109949)). Qed.
Lemma lem8254936 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8254937 {A B P : Type'} (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term767 A B P p _109948 _109949) = (term614 A B P p _109948 _109949).
Proof. exact (@lem8254936 (term614 A B P p _109948 _109949)). Qed.
Lemma lem8254938 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term858 A B P z _109947 p _109948 _109949) = (term859 A B P z _109947 p _109948 _109949).
Proof. exact (MK_COMB (@lem8254934 A B P z _109947 _109948 _109949) (@lem8254937 A B P p _109948 _109949)). Qed.
Lemma lem8254939 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term857 A B P z _109947 p _109948 _109949) = (term859 A B P z _109947 p _109948 _109949).
Proof. exact (TRANS (@lem8254929 A B P z _109947 p _109948 _109949) (@lem8254938 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254940 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8254941 {A B P : Type'} (z : type518 A B P) (_109947 : A -> B) (p : type560 A B P) (_109948 : A -> B) (_109949 : P) : (term873 A B P z _109947 p _109948 _109949) = (term874 A B P z _109947 p _109948 _109949).
Proof. exact (MK_COMB (@lem8254940) (@lem8254939 A B P z _109947 p _109948 _109949)). Qed.
Lemma lem8254942 {A B P : Type'} (p : type560 A B P) (_109947 : A -> B) (_109949 : P) : (term614 A B P p _109947 _109949) = (term614 A B P p _109947 _109949).
Proof. exact (eq_refl (term614 A B P p _109947 _109949)). Qed.
Lemma lem8254943 {A B P : Type'} (z : type518 A B P) (_109948 : A -> B) (p : type560 A B P) (_109947 : A -> B) (_109949 : P) : (term872 A B P z _109948 p _109947 _109949) = (term875 A B P z _109948 p _109947 _109949).
Proof. exact (MK_COMB (@lem8254941 A B P z _109947 p _109948 _109949) (@lem8254942 A B P p _109947 _109949)). Qed.
Lemma lem8254944 {A B P : Type'} (z : type518 A B P) (_109948 : A -> B) (p : type560 A B P) (_109947 : A -> B) (_109949 : P) : (term869 A B P z _109947 p _109948 _109949) = (term875 A B P z _109948 p _109947 _109949).
Proof. exact (TRANS (@lem8254926 A B P z _109948 p _109947 _109949) (@lem8254943 A B P z _109948 p _109947 _109949)). Qed.
Lemma lem8254946 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term859 A B P z f p g a.
Proof. exact (conj (@lem8254863 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8254870 A B P f p P' g a h4)). Qed.
Lemma lem8254948 {A B P : Type'} (_109948 : A -> B) (_109947 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _109948 p _109947 _109949.
Proof. exact (EQ_MP (@lem8254944 A B P z _109948 p _109947 _109949) (@lem8254923 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8254949 {A B P : Type'} (_109948 : A -> B) (_109947 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _109948 p _109947 _109949.
Proof. exact (@lem8254948 A B P _109948 _109947 _109949 lt2 s z p h1). Qed.
Lemma lem8254950 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z g p f a.
Proof. exact (@lem8254949 A B P g f a lt2 s z p h1). Qed.
Lemma lem8254953 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (@lem8254950 A B P g f a lt2 s z p h2 (@lem8254946 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8254954 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term621 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8254953 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8254956 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254957 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8254956 (term614 A B P p f a)). Qed.
Lemma lem8254958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term621 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8254957 A B P p f a) (@lem8254954 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8254960 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8254961 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8254960 A B P f p P' g a h1). Qed.
Lemma lem8254963 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254964 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8254963 (term614 A B P p g a)). Qed.
Lemma lem8254965 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8254964 A B P p g a) (@lem8254961 A B P f p P' g a h1)). Qed.
Lemma lem8254968 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8254969 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term759 A B P p f a.
Proof. exact (fun h0 : term614 A B P p f a => @lem8254968 A B P p f a h1). Qed.
Lemma lem8254971 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8254972 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term759 A B P p f a) = (term615 A B P p f a).
Proof. exact (@lem8254971 (term614 A B P p f a)). Qed.
Lemma lem8254973 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (EQ_MP (@lem8254972 A B P p f a) (@lem8254969 A B P p f a h1)). Qed.
Lemma lem8254975 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8254976 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8254975 A B P f p P' g a h1). Qed.
Lemma lem8254978 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254979 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8254978 (term614 A B P p g a)). Qed.
Lemma lem8254980 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8254979 A B P p g a) (@lem8254976 A B P f p P' g a h1)). Qed.
Lemma lem8254981 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p f a) (h2 : term621 A B P f p P' g a) : term830 A B P f p g a.
Proof. exact (conj (@lem8254973 A B P p f a h1) (@lem8254980 A B P f p P' g a h2)). Qed.
Lemma lem8254983 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _109947 _109948 s _109949.
Proof. exact (EQ_MP (@lem8254792 A B P p lt2 z _109947 _109948 s _109949) (@lem8252627 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8254984 {A B P : Type'} (_109947 : A -> B) (_109948 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _109947 _109948 s _109949.
Proof. exact (@lem8254983 A B P _109947 _109948 _109949 lt2 s z p h1). Qed.
Lemma lem8254985 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z f g s a.
Proof. exact (@lem8254984 A B P f g a lt2 s z p h1). Qed.
Lemma lem8254988 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8254985 A B P f g a lt2 s z p h1 (@lem8254981 A B P f p P' g a h2 h3)). Qed.
Lemma lem8254989 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8254988 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8254991 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8254992 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8254991 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8254993 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term621 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8254992 A B P lt2 z f g s a) (@lem8254989 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8254995 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109946.
Proof. exact (EQ_MP (@lem8254850 A B P lt2 s a f g _109946) (@lem8254839 A B P _109946 lt2 s a f g h1)). Qed.
Lemma lem8254996 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109946.
Proof. exact (@lem8254995 A B P _109946 lt2 s a f g h1). Qed.
Lemma lem8254997 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8254996 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8255000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8254997 A B P z lt2 s a f g h1 (@lem8254993 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8255001 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8255000 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8255003 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255004 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8255003 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8255005 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8255004 A B P z f g a) (@lem8255001 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8255007 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8255008 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8255007 A B P f p P' g a h1). Qed.
Lemma lem8255010 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255011 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8255010 (term614 A B P p g a)). Qed.
Lemma lem8255012 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8255011 A B P p g a) (@lem8255008 A B P f p P' g a h1)). Qed.
Lemma lem8255013 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term859 A B P z f p g a.
Proof. exact (conj (@lem8255005 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8255012 A B P f p P' g a h4)). Qed.
Lemma lem8255015 {A B P : Type'} (_109948 : A -> B) (_109947 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _109948 p _109947 _109949.
Proof. exact (EQ_MP (@lem8254944 A B P z _109948 p _109947 _109949) (@lem8254923 A B P _109947 _109948 _109949 lt2 s z p h1)). Qed.
Lemma lem8255016 {A B P : Type'} (_109948 : A -> B) (_109947 : A -> B) (_109949 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _109948 p _109947 _109949.
Proof. exact (@lem8255015 A B P _109948 _109947 _109949 lt2 s z p h1). Qed.
Lemma lem8255017 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z g p f a.
Proof. exact (@lem8255016 A B P g f a lt2 s z p h1). Qed.
Lemma lem8255020 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (@lem8255017 A B P g f a lt2 s z p h2 (@lem8255013 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8255021 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term621 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8255020 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8255023 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255024 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8255023 (term614 A B P p f a)). Qed.
Lemma lem8255025 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term621 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8255024 A B P p f a) (@lem8255021 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8255027 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8251288 A B P f p P' g a h1)). Qed.
Lemma lem8255028 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8255027 A B P f p P' g a h1). Qed.
Lemma lem8255030 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255031 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8255030 (term614 A B P p g a)). Qed.
Lemma lem8255032 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8255031 A B P p g a) (@lem8255028 A B P f p P' g a h1)). Qed.
Lemma lem8255034 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term614 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8255035 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term757 A B P P' f a.
Proof. exact (fun h0 : term615 A B P P' f a => @lem8255034 A B P P' f a h1). Qed.
Lemma lem8255037 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255038 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8255037 (term614 A B P P' f a)). Qed.
Lemma lem8255039 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term614 A B P P' f a.
Proof. exact (EQ_MP (@lem8255038 A B P P' f a) (@lem8255035 A B P P' f a h1)). Qed.
Lemma lem8255042 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term615 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8255043 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term759 A B P P' g a.
Proof. exact (fun h0 : term614 A B P P' g a => @lem8255042 A B P P' g a h1). Qed.
Lemma lem8255045 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8255046 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term759 A B P P' g a) = (term615 A B P P' g a).
Proof. exact (@lem8255045 (term614 A B P P' g a)). Qed.
Lemma lem8255047 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term615 A B P P' g a.
Proof. exact (EQ_MP (@lem8255046 A B P P' g a) (@lem8255043 A B P P' g a h1)). Qed.
Lemma lem8255063 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255064 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term751 A B P p lt2 z' s _109950 P' _109951 _109952) = (term876 A B P lt2 z' s p _109950 P' _109951 _109952).
Proof. exact (@lem8255063 (term654 A B P lt2 z' _109950 _109951 s _109952) (term615 A B P p _109951 _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8255078 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255079 {A B P : Type'} (_109950 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term877 A B P p _109950 P' _109951 _109952) = (term878 A B P _109950 p P' _109951 _109952).
Proof. exact (@lem8255078 (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952) (term614 A B P P' _109951 _109952)). Qed.
Lemma lem8255093 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8255094 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term619 A B P p P' _109951 _109952) = (term879 A B P P' p _109951 _109952).
Proof. exact (@lem8255093 (term614 A B P P' _109951 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255100 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P P' _109950 _109952) = (term618 A B P P' _109950 _109952).
Proof. exact (eq_refl (term618 A B P P' _109950 _109952)). Qed.
Lemma lem8255101 {A B P : Type'} (_109950 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term878 A B P _109950 p P' _109951 _109952) = (term880 A B P _109950 P' p _109951 _109952).
Proof. exact (MK_COMB (@lem8255100 A B P P' _109950 _109952) (@lem8255094 A B P P' p _109951 _109952)). Qed.
Lemma lem8255105 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255106 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term880 A B P _109950 P' p _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255105 (term614 A B P P' _109951 _109952) (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255122 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term878 A B P _109950 p P' _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255101 A B P _109950 P' p _109951 _109952) (@lem8255106 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255123 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term877 A B P p _109950 P' _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255079 A B P _109950 p P' _109951 _109952) (@lem8255122 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255124 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term808 A B P lt2 z' _109950 _109951 s _109952) = (term808 A B P lt2 z' _109950 _109951 s _109952).
Proof. exact (eq_refl (term808 A B P lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255125 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term876 A B P lt2 z' s p _109950 P' _109951 _109952) = (term882 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255124 A B P lt2 z' _109950 _109951 s _109952) (@lem8255123 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255136 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term751 A B P p lt2 z' s _109950 P' _109951 _109952) = (term882 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255064 A B P lt2 z' s p _109950 P' _109951 _109952) (@lem8255125 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255137 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P p _109950 _109952) = (term618 A B P p _109950 _109952).
Proof. exact (eq_refl (term618 A B P p _109950 _109952)). Qed.
Lemma lem8255138 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term752 A B P p lt2 z' s _109950 P' _109951 _109952) = (term883 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255137 A B P p _109950 _109952) (@lem8255136 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255142 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255143 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term883 A B P lt2 z' s P' _109950 p _109951 _109952) = (term884 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (@lem8255142 (term654 A B P lt2 z' _109950 _109951 s _109952) (term615 A B P p _109950 _109952) (term881 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255157 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255158 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term885 A B P P' _109950 p _109951 _109952) = (term886 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255157 (term614 A B P P' _109951 _109952) (term615 A B P p _109950 _109952) (term887 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255172 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255173 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term888 A B P P' _109950 p _109951 _109952) = (term889 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255172 (term615 A B P P' _109950 _109952) (term615 A B P p _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255189 {A B P : Type'} (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term629 A B P P' _109951 _109952) = (term629 A B P P' _109951 _109952).
Proof. exact (eq_refl (term629 A B P P' _109951 _109952)). Qed.
Lemma lem8255190 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term886 A B P P' _109950 p _109951 _109952) = (term890 A B P P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255189 A B P P' _109951 _109952) (@lem8255173 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255201 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term885 A B P P' _109950 p _109951 _109952) = (term890 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255158 A B P P' _109950 p _109951 _109952) (@lem8255190 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255202 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term808 A B P lt2 z' _109950 _109951 s _109952) = (term808 A B P lt2 z' _109950 _109951 s _109952).
Proof. exact (eq_refl (term808 A B P lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255203 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term884 A B P lt2 z' s P' _109950 p _109951 _109952) = (term891 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255202 A B P lt2 z' _109950 _109951 s _109952) (@lem8255201 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255214 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term883 A B P lt2 z' s P' _109950 p _109951 _109952) = (term891 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255143 A B P lt2 z' s P' _109950 p _109951 _109952) (@lem8255203 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255215 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term752 A B P p lt2 z' s _109950 P' _109951 _109952) = (term891 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255138 A B P lt2 z' s P' _109950 p _109951 _109952) (@lem8255214 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255216 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8255217 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term892 A B P p lt2 z' s _109950 P' _109951 _109952) = (term893 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255216) (@lem8255215 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255241 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255242 {A B P : Type'} (_109950 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term877 A B P p _109950 P' _109951 _109952) = (term878 A B P _109950 p P' _109951 _109952).
Proof. exact (@lem8255241 (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952) (term614 A B P P' _109951 _109952)). Qed.
Lemma lem8255256 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8255257 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term619 A B P p P' _109951 _109952) = (term879 A B P P' p _109951 _109952).
Proof. exact (@lem8255256 (term614 A B P P' _109951 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255263 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P P' _109950 _109952) = (term618 A B P P' _109950 _109952).
Proof. exact (eq_refl (term618 A B P P' _109950 _109952)). Qed.
Lemma lem8255264 {A B P : Type'} (_109950 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term878 A B P _109950 p P' _109951 _109952) = (term880 A B P _109950 P' p _109951 _109952).
Proof. exact (MK_COMB (@lem8255263 A B P P' _109950 _109952) (@lem8255257 A B P P' p _109951 _109952)). Qed.
Lemma lem8255268 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255269 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term880 A B P _109950 P' p _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255268 (term614 A B P P' _109951 _109952) (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255285 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term878 A B P _109950 p P' _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255264 A B P _109950 P' p _109951 _109952) (@lem8255269 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255286 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term877 A B P p _109950 P' _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255242 A B P _109950 p P' _109951 _109952) (@lem8255285 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255287 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P p _109950 _109952) = (term618 A B P p _109950 _109952).
Proof. exact (eq_refl (term618 A B P p _109950 _109952)). Qed.
Lemma lem8255288 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term894 A B P p _109950 P' _109951 _109952) = (term885 A B P P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255287 A B P p _109950 _109952) (@lem8255286 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255292 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255293 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term885 A B P P' _109950 p _109951 _109952) = (term886 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255292 (term614 A B P P' _109951 _109952) (term615 A B P p _109950 _109952) (term887 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255307 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255308 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term888 A B P P' _109950 p _109951 _109952) = (term889 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255307 (term615 A B P P' _109950 _109952) (term615 A B P p _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255324 {A B P : Type'} (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term629 A B P P' _109951 _109952) = (term629 A B P P' _109951 _109952).
Proof. exact (eq_refl (term629 A B P P' _109951 _109952)). Qed.
Lemma lem8255325 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term886 A B P P' _109950 p _109951 _109952) = (term890 A B P P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255324 A B P P' _109951 _109952) (@lem8255308 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255336 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term885 A B P P' _109950 p _109951 _109952) = (term890 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255293 A B P P' _109950 p _109951 _109952) (@lem8255325 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255337 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term894 A B P p _109950 P' _109951 _109952) = (term890 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255288 A B P P' _109950 p _109951 _109952) (@lem8255336 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255338 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term808 A B P lt2 z' _109950 _109951 s _109952) = (term808 A B P lt2 z' _109950 _109951 s _109952).
Proof. exact (eq_refl (term808 A B P lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255339 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term895 A B P lt2 z' s p _109950 P' _109951 _109952) = (term891 A B P lt2 z' s P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255338 A B P lt2 z' _109950 _109951 s _109952) (@lem8255337 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255350 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : ((term752 A B P p lt2 z' s _109950 P' _109951 _109952) = (term895 A B P lt2 z' s p _109950 P' _109951 _109952)) = ((term891 A B P lt2 z' s P' _109950 p _109951 _109952) = (term891 A B P lt2 z' s P' _109950 p _109951 _109952)).
Proof. exact (MK_COMB (@lem8255217 A B P lt2 z' s P' _109950 p _109951 _109952) (@lem8255339 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255352 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8255353 (x : Prop) : (x = x) = True.
Proof. exact (@lem8255352 Prop x). Qed.
Lemma lem8255354 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : ((term891 A B P lt2 z' s P' _109950 p _109951 _109952) = (term891 A B P lt2 z' s P' _109950 p _109951 _109952)) = True.
Proof. exact (@lem8255353 (term891 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255355 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : ((term752 A B P p lt2 z' s _109950 P' _109951 _109952) = (term895 A B P lt2 z' s p _109950 P' _109951 _109952)) = True.
Proof. exact (TRANS (@lem8255350 A B P lt2 z' s P' _109950 p _109951 _109952) (@lem8255354 A B P lt2 z' s P' _109950 p _109951 _109952)). Qed.
Lemma lem8255356 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : True = ((term752 A B P p lt2 z' s _109950 P' _109951 _109952) = (term895 A B P lt2 z' s p _109950 P' _109951 _109952)).
Proof. exact (SYM (@lem8255355 A B P lt2 z' s p _109950 P' _109951 _109952)). Qed.
Lemma lem8255357 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term752 A B P p lt2 z' s _109950 P' _109951 _109952) = (term895 A B P lt2 z' s p _109950 P' _109951 _109952).
Proof. exact (EQ_MP (@lem8255356 A B P lt2 z' s p _109950 P' _109951 _109952) (@lem0)). Qed.
Lemma lem8255358 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term895 A B P lt2 z' s p _109950 P' _109951 _109952.
Proof. exact (EQ_MP (@lem8255357 A B P lt2 z' s p _109950 P' _109951 _109952) (@lem8252531 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8255360 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8255361 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term895 A B P lt2 z' s p _109950 P' _109951 _109952) = (term896 A B P p P' lt2 z' _109950 _109951 s _109952).
Proof. exact (@lem8255360 (term894 A B P p _109950 P' _109951 _109952) (term654 A B P lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255363 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8255364 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term897 A B P p _109950 P' _109951 _109952) = (term898 A B P p _109950 P' _109951 _109952).
Proof. exact (@lem8255363 (term615 A B P p _109950 _109952) (term877 A B P p _109950 P' _109951 _109952)). Qed.
Lemma lem8255366 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255367 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term767 A B P p _109950 _109952) = (term614 A B P p _109950 _109952).
Proof. exact (@lem8255366 (term614 A B P p _109950 _109952)). Qed.
Lemma lem8255368 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8255369 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term768 A B P p _109950 _109952) = (term616 A B P p _109950 _109952).
Proof. exact (MK_COMB (@lem8255368) (@lem8255367 A B P p _109950 _109952)). Qed.
Lemma lem8255371 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8255372 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term899 A B P p _109950 P' _109951 _109952) = (term900 A B P p _109950 P' _109951 _109952).
Proof. exact (@lem8255371 (term615 A B P p _109951 _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8255374 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255375 {A B P : Type'} (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term767 A B P p _109951 _109952) = (term614 A B P p _109951 _109952).
Proof. exact (@lem8255374 (term614 A B P p _109951 _109952)). Qed.
Lemma lem8255376 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8255377 {A B P : Type'} (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term768 A B P p _109951 _109952) = (term616 A B P p _109951 _109952).
Proof. exact (MK_COMB (@lem8255376) (@lem8255375 A B P p _109951 _109952)). Qed.
Lemma lem8255379 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8255380 {A B P : Type'} (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term765 A B P _109950 P' _109951 _109952) = (term766 A B P _109950 P' _109951 _109952).
Proof. exact (@lem8255379 (term615 A B P P' _109950 _109952) (term614 A B P P' _109951 _109952)). Qed.
Lemma lem8255382 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255383 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term767 A B P P' _109950 _109952) = (term614 A B P P' _109950 _109952).
Proof. exact (@lem8255382 (term614 A B P P' _109950 _109952)). Qed.
Lemma lem8255384 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8255385 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term768 A B P P' _109950 _109952) = (term616 A B P P' _109950 _109952).
Proof. exact (MK_COMB (@lem8255384) (@lem8255383 A B P P' _109950 _109952)). Qed.
Lemma lem8255386 {A B P : Type'} (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term615 A B P P' _109951 _109952) = (term615 A B P P' _109951 _109952).
Proof. exact (eq_refl (term615 A B P P' _109951 _109952)). Qed.
Lemma lem8255387 {A B P : Type'} (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term766 A B P _109950 P' _109951 _109952) = (term769 A B P _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8255385 A B P P' _109950 _109952) (@lem8255386 A B P P' _109951 _109952)). Qed.
Lemma lem8255388 {A B P : Type'} (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term765 A B P _109950 P' _109951 _109952) = (term769 A B P _109950 P' _109951 _109952).
Proof. exact (TRANS (@lem8255380 A B P _109950 P' _109951 _109952) (@lem8255387 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8255389 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term900 A B P p _109950 P' _109951 _109952) = (term901 A B P p _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8255377 A B P p _109951 _109952) (@lem8255388 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8255390 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term899 A B P p _109950 P' _109951 _109952) = (term901 A B P p _109950 P' _109951 _109952).
Proof. exact (TRANS (@lem8255372 A B P p _109950 P' _109951 _109952) (@lem8255389 A B P p _109950 P' _109951 _109952)). Qed.
Lemma lem8255391 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term898 A B P p _109950 P' _109951 _109952) = (term902 A B P p _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8255369 A B P p _109950 _109952) (@lem8255390 A B P p _109950 P' _109951 _109952)). Qed.
Lemma lem8255392 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term897 A B P p _109950 P' _109951 _109952) = (term902 A B P p _109950 P' _109951 _109952).
Proof. exact (TRANS (@lem8255364 A B P p _109950 P' _109951 _109952) (@lem8255391 A B P p _109950 P' _109951 _109952)). Qed.
Lemma lem8255393 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8255394 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term903 A B P p _109950 P' _109951 _109952) = (term904 A B P p _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8255393) (@lem8255392 A B P p _109950 P' _109951 _109952)). Qed.
Lemma lem8255395 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term654 A B P lt2 z' _109950 _109951 s _109952) = (term654 A B P lt2 z' _109950 _109951 s _109952).
Proof. exact (eq_refl (term654 A B P lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255396 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term896 A B P p P' lt2 z' _109950 _109951 s _109952) = (term905 A B P p P' lt2 z' _109950 _109951 s _109952).
Proof. exact (MK_COMB (@lem8255394 A B P p _109950 P' _109951 _109952) (@lem8255395 A B P lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255397 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (s : P -> A) (_109952 : P) : (term895 A B P lt2 z' s p _109950 P' _109951 _109952) = (term905 A B P p P' lt2 z' _109950 _109951 s _109952).
Proof. exact (TRANS (@lem8255361 A B P p P' lt2 z' _109950 _109951 s _109952) (@lem8255396 A B P p P' lt2 z' _109950 _109951 s _109952)). Qed.
Lemma lem8255399 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' g a) (h2 : term614 A B P P' f a) : term769 A B P f P' g a.
Proof. exact (conj (@lem8255039 A B P P' f a h2) (@lem8255047 A B P P' g a h1)). Qed.
Lemma lem8255400 {A B P : Type'} (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' g a) (h2 : term621 A B P f p P' g a) (h3 : term614 A B P P' f a) : term901 A B P p f P' g a.
Proof. exact (conj (@lem8255032 A B P f p P' g a h2) (@lem8255399 A B P g P' f a h1 h3)). Qed.
Lemma lem8255401 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P P' g a) (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : term902 A B P p f P' g a.
Proof. exact (conj (@lem8255025 A B P lt2 s z f p P' g a h1 h2 h4) (@lem8255400 A B P p g P' f a h3 h4 h5)). Qed.
Lemma lem8255403 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term905 A B P p P' lt2 z' _109950 _109951 s _109952.
Proof. exact (EQ_MP (@lem8255397 A B P p P' lt2 z' _109950 _109951 s _109952) (@lem8255358 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8255404 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term905 A B P p P' lt2 z' _109950 _109951 s _109952.
Proof. exact (@lem8255403 A B P _109950 _109951 _109952 p lt2 s z' P' h1). Qed.
Lemma lem8255405 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term905 A B P p P' lt2 z' f g s a.
Proof. exact (@lem8255404 A B P f g a p lt2 s z' P' h1). Qed.
Lemma lem8255408 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term654 A B P lt2 z' f g s a.
Proof. exact (@lem8255405 A B P f g a p lt2 s z' P' h3 (@lem8255401 A B P lt2 s z p g P' f a h1 h2 h4 h5 h6)). Qed.
Lemma lem8255409 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term773 A B P lt2 z' f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z' f g s a => @lem8255408 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6). Qed.
Lemma lem8255411 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255412 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (@lem8255411 (term654 A B P lt2 z' f g s a)). Qed.
Lemma lem8255413 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term654 A B P lt2 z' f g s a.
Proof. exact (EQ_MP (@lem8255412 A B P lt2 z' f g s a) (@lem8255409 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8255415 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109946.
Proof. exact (EQ_MP (@lem8254850 A B P lt2 s a f g _109946) (@lem8254839 A B P _109946 lt2 s a f g h1)). Qed.
Lemma lem8255416 {A B P : Type'} (_109946 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _109946.
Proof. exact (@lem8255415 A B P _109946 lt2 s a f g h1). Qed.
Lemma lem8255417 {A B P : Type'} (z' : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z' f g a.
Proof. exact (@lem8255416 A B P (term637 A B P z' f g a) lt2 s a f g h1). Qed.
Lemma lem8255420 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (@lem8255417 A B P z' lt2 s a f g h1 (@lem8255413 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8255421 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term784 A B P z' f g a.
Proof. exact (fun h0 : term647 A B P z' f g a => @lem8255420 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6). Qed.
Lemma lem8255423 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255424 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z' f g a) = ((term640 A B P z' f g a) = (term643 A B P z' f g a)).
Proof. exact (@lem8255423 ((term640 A B P z' f g a) = (term643 A B P z' f g a))). Qed.
Lemma lem8255425 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (EQ_MP (@lem8255424 A B P z' f g a) (@lem8255421 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8255427 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term614 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8255428 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term757 A B P P' f a.
Proof. exact (fun h0 : term615 A B P P' f a => @lem8255427 A B P P' f a h1). Qed.
Lemma lem8255430 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255431 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8255430 (term614 A B P P' f a)). Qed.
Lemma lem8255432 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term614 A B P P' f a) : term614 A B P P' f a.
Proof. exact (EQ_MP (@lem8255431 A B P P' f a) (@lem8255428 A B P P' f a h1)). Qed.
Lemma lem8255448 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255449 {A B P : Type'} (z' : type518 A B P) (p : type560 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term755 A B P p z' _109950 P' _109951 _109952) = (term906 A B P z' p _109950 P' _109951 _109952).
Proof. exact (@lem8255448 (term647 A B P z' _109950 _109951 _109952) (term615 A B P p _109951 _109952) (term627 A B P _109950 P' _109951 _109952)). Qed.
Lemma lem8255465 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255466 {A B P : Type'} (_109950 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term877 A B P p _109950 P' _109951 _109952) = (term878 A B P _109950 p P' _109951 _109952).
Proof. exact (@lem8255465 (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952) (term614 A B P P' _109951 _109952)). Qed.
Lemma lem8255480 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8255481 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term619 A B P p P' _109951 _109952) = (term879 A B P P' p _109951 _109952).
Proof. exact (@lem8255480 (term614 A B P P' _109951 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255487 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P P' _109950 _109952) = (term618 A B P P' _109950 _109952).
Proof. exact (eq_refl (term618 A B P P' _109950 _109952)). Qed.
Lemma lem8255488 {A B P : Type'} (_109950 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term878 A B P _109950 p P' _109951 _109952) = (term880 A B P _109950 P' p _109951 _109952).
Proof. exact (MK_COMB (@lem8255487 A B P P' _109950 _109952) (@lem8255481 A B P P' p _109951 _109952)). Qed.
Lemma lem8255492 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255493 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term880 A B P _109950 P' p _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255492 (term614 A B P P' _109951 _109952) (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255509 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term878 A B P _109950 p P' _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255488 A B P _109950 P' p _109951 _109952) (@lem8255493 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255510 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term877 A B P p _109950 P' _109951 _109952) = (term881 A B P P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255466 A B P _109950 p P' _109951 _109952) (@lem8255509 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255511 {A B P : Type'} (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) : (term785 A B P z' _109950 _109951 _109952) = (term785 A B P z' _109950 _109951 _109952).
Proof. exact (eq_refl (term785 A B P z' _109950 _109951 _109952)). Qed.
Lemma lem8255512 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term906 A B P z' p _109950 P' _109951 _109952) = (term907 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255511 A B P z' _109950 _109951 _109952) (@lem8255510 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255516 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255517 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term907 A B P z' P' _109950 p _109951 _109952) = (term908 A B P z' P' _109950 p _109951 _109952).
Proof. exact (@lem8255516 (term614 A B P P' _109951 _109952) (term647 A B P z' _109950 _109951 _109952) (term887 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255545 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term906 A B P z' p _109950 P' _109951 _109952) = (term908 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255512 A B P z' P' _109950 p _109951 _109952) (@lem8255517 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255546 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term755 A B P p z' _109950 P' _109951 _109952) = (term908 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255449 A B P z' p _109950 P' _109951 _109952) (@lem8255545 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255547 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P p _109950 _109952) = (term618 A B P p _109950 _109952).
Proof. exact (eq_refl (term618 A B P p _109950 _109952)). Qed.
Lemma lem8255548 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term756 A B P p z' _109950 P' _109951 _109952) = (term909 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255547 A B P p _109950 _109952) (@lem8255546 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255552 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255553 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term909 A B P z' P' _109950 p _109951 _109952) = (term910 A B P z' P' _109950 p _109951 _109952).
Proof. exact (@lem8255552 (term614 A B P P' _109951 _109952) (term615 A B P p _109950 _109952) (term911 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255567 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255568 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term912 A B P z' P' _109950 p _109951 _109952) = (term913 A B P z' P' _109950 p _109951 _109952).
Proof. exact (@lem8255567 (term647 A B P z' _109950 _109951 _109952) (term615 A B P p _109950 _109952) (term887 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255584 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255585 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term888 A B P P' _109950 p _109951 _109952) = (term889 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255584 (term615 A B P P' _109950 _109952) (term615 A B P p _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255601 {A B P : Type'} (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) : (term785 A B P z' _109950 _109951 _109952) = (term785 A B P z' _109950 _109951 _109952).
Proof. exact (eq_refl (term785 A B P z' _109950 _109951 _109952)). Qed.
Lemma lem8255602 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term913 A B P z' P' _109950 p _109951 _109952) = (term914 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255601 A B P z' _109950 _109951 _109952) (@lem8255585 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255613 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term912 A B P z' P' _109950 p _109951 _109952) = (term914 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255568 A B P z' P' _109950 p _109951 _109952) (@lem8255602 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255614 {A B P : Type'} (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term629 A B P P' _109951 _109952) = (term629 A B P P' _109951 _109952).
Proof. exact (eq_refl (term629 A B P P' _109951 _109952)). Qed.
Lemma lem8255615 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term910 A B P z' P' _109950 p _109951 _109952) = (term915 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255614 A B P P' _109951 _109952) (@lem8255613 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255626 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term909 A B P z' P' _109950 p _109951 _109952) = (term915 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255553 A B P z' P' _109950 p _109951 _109952) (@lem8255615 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255627 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term756 A B P p z' _109950 P' _109951 _109952) = (term915 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255548 A B P z' P' _109950 p _109951 _109952) (@lem8255626 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255628 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8255629 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term916 A B P p z' _109950 P' _109951 _109952) = (term917 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255628) (@lem8255627 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255653 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255654 {A B P : Type'} (z' : type518 A B P) (p : type560 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term918 A B P p z' _109951 P' _109950 _109952) = (term919 A B P z' p _109951 P' _109950 _109952).
Proof. exact (@lem8255653 (term647 A B P z' _109950 _109951 _109952) (term615 A B P p _109951 _109952) (term615 A B P P' _109950 _109952)). Qed.
Lemma lem8255670 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8255671 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term887 A B P p _109951 P' _109950 _109952) = (term887 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255670 (term615 A B P P' _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255677 {A B P : Type'} (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) : (term785 A B P z' _109950 _109951 _109952) = (term785 A B P z' _109950 _109951 _109952).
Proof. exact (eq_refl (term785 A B P z' _109950 _109951 _109952)). Qed.
Lemma lem8255678 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term919 A B P z' p _109951 P' _109950 _109952) = (term911 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255677 A B P z' _109950 _109951 _109952) (@lem8255671 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255689 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term918 A B P p z' _109951 P' _109950 _109952) = (term911 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255654 A B P z' p _109951 P' _109950 _109952) (@lem8255678 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255690 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term618 A B P p _109950 _109952) = (term618 A B P p _109950 _109952).
Proof. exact (eq_refl (term618 A B P p _109950 _109952)). Qed.
Lemma lem8255691 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term920 A B P p z' _109951 P' _109950 _109952) = (term912 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255690 A B P p _109950 _109952) (@lem8255689 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255695 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255696 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term912 A B P z' P' _109950 p _109951 _109952) = (term913 A B P z' P' _109950 p _109951 _109952).
Proof. exact (@lem8255695 (term647 A B P z' _109950 _109951 _109952) (term615 A B P p _109950 _109952) (term887 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255712 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8255713 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term888 A B P P' _109950 p _109951 _109952) = (term889 A B P P' _109950 p _109951 _109952).
Proof. exact (@lem8255712 (term615 A B P P' _109950 _109952) (term615 A B P p _109950 _109952) (term615 A B P p _109951 _109952)). Qed.
Lemma lem8255729 {A B P : Type'} (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) : (term785 A B P z' _109950 _109951 _109952) = (term785 A B P z' _109950 _109951 _109952).
Proof. exact (eq_refl (term785 A B P z' _109950 _109951 _109952)). Qed.
Lemma lem8255730 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term913 A B P z' P' _109950 p _109951 _109952) = (term914 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255729 A B P z' _109950 _109951 _109952) (@lem8255713 A B P P' _109950 p _109951 _109952)). Qed.
Lemma lem8255741 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term912 A B P z' P' _109950 p _109951 _109952) = (term914 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255696 A B P z' P' _109950 p _109951 _109952) (@lem8255730 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255742 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term920 A B P p z' _109951 P' _109950 _109952) = (term914 A B P z' P' _109950 p _109951 _109952).
Proof. exact (TRANS (@lem8255691 A B P z' P' _109950 p _109951 _109952) (@lem8255741 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255743 {A B P : Type'} (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term629 A B P P' _109951 _109952) = (term629 A B P P' _109951 _109952).
Proof. exact (eq_refl (term629 A B P P' _109951 _109952)). Qed.
Lemma lem8255744 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term921 A B P p z' _109951 P' _109950 _109952) = (term915 A B P z' P' _109950 p _109951 _109952).
Proof. exact (MK_COMB (@lem8255743 A B P P' _109951 _109952) (@lem8255742 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255755 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : ((term756 A B P p z' _109950 P' _109951 _109952) = (term921 A B P p z' _109951 P' _109950 _109952)) = ((term915 A B P z' P' _109950 p _109951 _109952) = (term915 A B P z' P' _109950 p _109951 _109952)).
Proof. exact (MK_COMB (@lem8255629 A B P z' P' _109950 p _109951 _109952) (@lem8255744 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255757 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8255758 (x : Prop) : (x = x) = True.
Proof. exact (@lem8255757 Prop x). Qed.
Lemma lem8255759 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_109950 : A -> B) (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : ((term915 A B P z' P' _109950 p _109951 _109952) = (term915 A B P z' P' _109950 p _109951 _109952)) = True.
Proof. exact (@lem8255758 (term915 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255760 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : ((term756 A B P p z' _109950 P' _109951 _109952) = (term921 A B P p z' _109951 P' _109950 _109952)) = True.
Proof. exact (TRANS (@lem8255755 A B P z' P' _109950 p _109951 _109952) (@lem8255759 A B P z' P' _109950 p _109951 _109952)). Qed.
Lemma lem8255761 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : True = ((term756 A B P p z' _109950 P' _109951 _109952) = (term921 A B P p z' _109951 P' _109950 _109952)).
Proof. exact (SYM (@lem8255760 A B P p z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255762 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term756 A B P p z' _109950 P' _109951 _109952) = (term921 A B P p z' _109951 P' _109950 _109952).
Proof. exact (EQ_MP (@lem8255761 A B P p z' _109951 P' _109950 _109952) (@lem0)). Qed.
Lemma lem8255763 {A B P : Type'} (_109951 : A -> B) (_109950 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term921 A B P p z' _109951 P' _109950 _109952.
Proof. exact (EQ_MP (@lem8255762 A B P p z' _109951 P' _109950 _109952) (@lem8252553 A B P _109950 _109951 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8255765 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8255766 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term921 A B P p z' _109951 P' _109950 _109952) = (term922 A B P p z' _109950 P' _109951 _109952).
Proof. exact (@lem8255765 (term920 A B P p z' _109951 P' _109950 _109952) (term614 A B P P' _109951 _109952)). Qed.
Lemma lem8255768 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8255769 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term923 A B P p z' _109951 P' _109950 _109952) = (term924 A B P p z' _109951 P' _109950 _109952).
Proof. exact (@lem8255768 (term615 A B P p _109950 _109952) (term918 A B P p z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255771 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255772 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term767 A B P p _109950 _109952) = (term614 A B P p _109950 _109952).
Proof. exact (@lem8255771 (term614 A B P p _109950 _109952)). Qed.
Lemma lem8255773 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8255774 {A B P : Type'} (p : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term768 A B P p _109950 _109952) = (term616 A B P p _109950 _109952).
Proof. exact (MK_COMB (@lem8255773) (@lem8255772 A B P p _109950 _109952)). Qed.
Lemma lem8255776 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8255777 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term925 A B P p z' _109951 P' _109950 _109952) = (term926 A B P p z' _109951 P' _109950 _109952).
Proof. exact (@lem8255776 (term615 A B P p _109951 _109952) (term791 A B P z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255779 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255780 {A B P : Type'} (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term767 A B P p _109951 _109952) = (term614 A B P p _109951 _109952).
Proof. exact (@lem8255779 (term614 A B P p _109951 _109952)). Qed.
Lemma lem8255781 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8255782 {A B P : Type'} (p : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term768 A B P p _109951 _109952) = (term616 A B P p _109951 _109952).
Proof. exact (MK_COMB (@lem8255781) (@lem8255780 A B P p _109951 _109952)). Qed.
Lemma lem8255784 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8255785 {A B P : Type'} (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term792 A B P z' _109951 P' _109950 _109952) = (term793 A B P z' _109951 P' _109950 _109952).
Proof. exact (@lem8255784 (term647 A B P z' _109950 _109951 _109952) (term615 A B P P' _109950 _109952)). Qed.
Lemma lem8255787 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255788 {A B P : Type'} (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) : (term794 A B P z' _109950 _109951 _109952) = ((term640 A B P z' _109950 _109951 _109952) = (term643 A B P z' _109950 _109951 _109952)).
Proof. exact (@lem8255787 ((term640 A B P z' _109950 _109951 _109952) = (term643 A B P z' _109950 _109951 _109952))). Qed.
Lemma lem8255789 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8255790 {A B P : Type'} (z' : type518 A B P) (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) : (term795 A B P z' _109950 _109951 _109952) = (term796 A B P z' _109950 _109951 _109952).
Proof. exact (MK_COMB (@lem8255789) (@lem8255788 A B P z' _109950 _109951 _109952)). Qed.
Lemma lem8255792 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8255793 {A B P : Type'} (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term767 A B P P' _109950 _109952) = (term614 A B P P' _109950 _109952).
Proof. exact (@lem8255792 (term614 A B P P' _109950 _109952)). Qed.
Lemma lem8255794 {A B P : Type'} (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term793 A B P z' _109951 P' _109950 _109952) = (term797 A B P z' _109951 P' _109950 _109952).
Proof. exact (MK_COMB (@lem8255790 A B P z' _109950 _109951 _109952) (@lem8255793 A B P P' _109950 _109952)). Qed.
Lemma lem8255795 {A B P : Type'} (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term792 A B P z' _109951 P' _109950 _109952) = (term797 A B P z' _109951 P' _109950 _109952).
Proof. exact (TRANS (@lem8255785 A B P z' _109951 P' _109950 _109952) (@lem8255794 A B P z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255796 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term926 A B P p z' _109951 P' _109950 _109952) = (term927 A B P p z' _109951 P' _109950 _109952).
Proof. exact (MK_COMB (@lem8255782 A B P p _109951 _109952) (@lem8255795 A B P z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255797 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term925 A B P p z' _109951 P' _109950 _109952) = (term927 A B P p z' _109951 P' _109950 _109952).
Proof. exact (TRANS (@lem8255777 A B P p z' _109951 P' _109950 _109952) (@lem8255796 A B P p z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255798 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term924 A B P p z' _109951 P' _109950 _109952) = (term928 A B P p z' _109951 P' _109950 _109952).
Proof. exact (MK_COMB (@lem8255774 A B P p _109950 _109952) (@lem8255797 A B P p z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255799 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term923 A B P p z' _109951 P' _109950 _109952) = (term928 A B P p z' _109951 P' _109950 _109952).
Proof. exact (TRANS (@lem8255769 A B P p z' _109951 P' _109950 _109952) (@lem8255798 A B P p z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255800 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8255801 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109951 : A -> B) (P' : type560 A B P) (_109950 : A -> B) (_109952 : P) : (term929 A B P p z' _109951 P' _109950 _109952) = (term930 A B P p z' _109951 P' _109950 _109952).
Proof. exact (MK_COMB (@lem8255800) (@lem8255799 A B P p z' _109951 P' _109950 _109952)). Qed.
Lemma lem8255802 {A B P : Type'} (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term614 A B P P' _109951 _109952) = (term614 A B P P' _109951 _109952).
Proof. exact (eq_refl (term614 A B P P' _109951 _109952)). Qed.
Lemma lem8255803 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term922 A B P p z' _109950 P' _109951 _109952) = (term931 A B P p z' _109950 P' _109951 _109952).
Proof. exact (MK_COMB (@lem8255801 A B P p z' _109951 P' _109950 _109952) (@lem8255802 A B P P' _109951 _109952)). Qed.
Lemma lem8255804 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_109950 : A -> B) (P' : type560 A B P) (_109951 : A -> B) (_109952 : P) : (term921 A B P p z' _109951 P' _109950 _109952) = (term931 A B P p z' _109950 P' _109951 _109952).
Proof. exact (TRANS (@lem8255766 A B P p z' _109950 P' _109951 _109952) (@lem8255803 A B P p z' _109950 P' _109951 _109952)). Qed.
Lemma lem8255806 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term797 A B P z' g P' f a.
Proof. exact (conj (@lem8255425 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6) (@lem8255432 A B P P' f a h6)). Qed.
Lemma lem8255807 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term927 A B P p z' g P' f a.
Proof. exact (conj (@lem8254965 A B P f p P' g a h5) (@lem8255806 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8255808 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term928 A B P p z' g P' f a.
Proof. exact (conj (@lem8254958 A B P lt2 s z f p P' g a h1 h2 h5) (@lem8255807 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8255810 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term931 A B P p z' _109950 P' _109951 _109952.
Proof. exact (EQ_MP (@lem8255804 A B P p z' _109950 P' _109951 _109952) (@lem8255763 A B P _109951 _109950 _109952 p lt2 s z' P' h1)). Qed.
Lemma lem8255811 {A B P : Type'} (_109950 : A -> B) (_109951 : A -> B) (_109952 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term931 A B P p z' _109950 P' _109951 _109952.
Proof. exact (@lem8255810 A B P _109950 _109951 _109952 p lt2 s z' P' h1). Qed.
Lemma lem8255812 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term931 A B P p z' f P' g a.
Proof. exact (@lem8255811 A B P f g a p lt2 s z' P' h1). Qed.
Lemma lem8255815 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term621 A B P f p P' g a) (h6 : term614 A B P P' f a) : term614 A B P P' g a.
Proof. exact (@lem8255812 A B P f g a p lt2 s z' P' h3 (@lem8255808 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8255816 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : term757 A B P P' g a.
Proof. exact (fun h0 : term615 A B P P' g a => @lem8255815 A B P z lt2 s z' p g P' f a h1 h2 h3 h0 h4 h5). Qed.
Lemma lem8255818 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255819 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term757 A B P P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8255818 (term614 A B P P' g a)). Qed.
Lemma lem8255820 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : term614 A B P P' g a.
Proof. exact (EQ_MP (@lem8255819 A B P P' g a) (@lem8255816 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5)). Qed.
Lemma lem8255823 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8255825 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term615 A B P P' g a) = (term801 A B P P' g a).
Proof. exact (@lem8255823 (term614 A B P P' g a)). Qed.
Lemma lem8255828 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term621 A B P f p P' g a) : term801 A B P P' g a.
Proof. exact (EQ_MP (@lem8255825 A B P P' g a) (@lem8252507 A B P f p P' g a h1)). Qed.
Lemma lem8255831 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : False.
Proof. exact (@lem8255828 A B P f p P' g a h4 (@lem8255820 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5)). Qed.
Lemma lem8255832 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : term802.
Proof. exact (fun h0 : ~ False => @lem8255831 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5). Qed.
Lemma lem8255834 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8255835 : term802 = False.
Proof. exact (@lem8255834 False). Qed.
Lemma lem8255836 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : False.
Proof. exact (EQ_MP (@lem8255835) (@lem8255832 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5)). Qed.
Lemma lem8255837 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : (term614 A B P P' f a) = False.
Proof. exact (prop_ext (fun h6 : term614 A B P P' f a => @lem8255836 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5) (fun h6 : False => @lem8252509 A B P P' f a h5)). Qed.
Lemma lem8255838 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : False.
Proof. exact (EQ_MP (@lem8255837 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5) (@lem8252509 A B P P' f a h5)). Qed.
Lemma lem8255839 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term615 A B P p f a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p f a => @lem8254610 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8252369 A B P p f a h3)). Qed.
Lemma lem8255840 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255839 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8252369 A B P p f a h3)). Qed.
Lemma lem8255841 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : (term614 A B P P' g a) = False.
Proof. exact (prop_ext (fun h6 : term614 A B P P' g a => @lem8254246 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8252229 A B P P' g a h5)). Qed.
Lemma lem8255842 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : False.
Proof. exact (EQ_MP (@lem8255841 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8252229 A B P P' g a h5)). Qed.
Lemma lem8255843 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term615 A B P p g a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p g a => @lem8253028 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8252089 A B P p g a h3)). Qed.
Lemma lem8255844 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255843 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8252089 A B P p g a h3)). Qed.
Lemma lem8255845 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : (term614 A B P P' f a) = False.
Proof. exact (prop_ext (fun h6 : term614 A B P P' f a => @lem8255838 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5) (fun h6 : False => @lem8251945 A B P P' f a h5)). Qed.
Lemma lem8255846 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : False.
Proof. exact (EQ_MP (@lem8255845 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5) (@lem8251945 A B P P' f a h5)). Qed.
Lemma lem8255847 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term615 A B P p f a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p f a => @lem8255840 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8251782 A B P p f a h3)). Qed.
Lemma lem8255848 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255847 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8251782 A B P p f a h3)). Qed.
Lemma lem8255849 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : (term614 A B P P' g a) = False.
Proof. exact (prop_ext (fun h6 : term614 A B P P' g a => @lem8255842 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8251619 A B P P' g a h5)). Qed.
Lemma lem8255850 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : False.
Proof. exact (EQ_MP (@lem8255849 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8251619 A B P P' g a h5)). Qed.
Lemma lem8255851 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term615 A B P p g a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p g a => @lem8255844 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8251456 A B P p g a h3)). Qed.
Lemma lem8255852 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255851 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8251456 A B P p g a h3)). Qed.
Lemma lem8255853 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : (term614 A B P P' f a) = False.
Proof. exact (prop_ext (fun h6 : term614 A B P P' f a => @lem8255846 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5) (fun h6 : False => @lem8251945 A B P P' f a h5)). Qed.
Lemma lem8255854 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (p : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) (h5 : term614 A B P P' f a) : False.
Proof. exact (EQ_MP (@lem8255853 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h5) (@lem8251945 A B P P' f a h5)). Qed.
Lemma lem8255855 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : (term615 A B P p f a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p f a => @lem8255848 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8251782 A B P p f a h3)). Qed.
Lemma lem8255856 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term621 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255855 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8251782 A B P p f a h3)). Qed.
Lemma lem8255857 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : (term614 A B P P' g a) = False.
Proof. exact (prop_ext (fun h6 : term614 A B P P' g a => @lem8255850 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8251619 A B P P' g a h5)). Qed.
Lemma lem8255858 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) (h5 : term614 A B P P' g a) : False.
Proof. exact (EQ_MP (@lem8255857 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8251619 A B P P' g a h5)). Qed.
Lemma lem8255859 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : (term615 A B P p g a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p g a => @lem8255852 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8251456 A B P p g a h3)). Qed.
Lemma lem8255860 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term623 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255859 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8251456 A B P p g a h3)). Qed.
Lemma lem8255861 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term621 A B P f p P' g a) : False.
Proof. exact (or_elim (@lem8251289 A B P f p P' g a h4) (fun h0 : term615 A B P p f a => @lem8255856 A B P lt2 s z f p P' g a h1 h2 h0 h4) (fun h0 : term614 A B P P' f a => @lem8255854 A B P z lt2 s z' p g P' f a h1 h2 h3 h4 h0)). Qed.
Lemma lem8255862 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term623 A B P f p P' g a) : False.
Proof. exact (or_elim (@lem8251282 A B P f p P' g a h4) (fun h0 : term615 A B P p g a => @lem8255860 A B P lt2 s z f p P' g a h1 h2 h0 h4) (fun h0 : term614 A B P P' g a => @lem8255858 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h0)). Qed.
Lemma lem8255863 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term338 A B P f p P' g a) : False.
Proof. exact (or_elim (@lem8250801 A B P f p P' g a h4) (fun h0 : term623 A B P f p P' g a => @lem8255862 A B P z lt2 s z' f p P' g a h1 h2 h3 h0) (fun h0 : term621 A B P f p P' g a => @lem8255861 A B P z lt2 s z' f p P' g a h1 h2 h3 h0)). Qed.
Lemma lem8255864 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term137 A B P p lt2 s P') (h3 : term580 A B P lt2 s z p) (h4 : term338 A B P f p P' g a) : False.
Proof. exact (ex_elim (@lem8250194 A B P p lt2 s P' h2) (fun z' : type518 A B P => fun h0 : term491 A B P p lt2 s P' z' => @lem8255863 A B P z lt2 s z' f p P' g a h1 h3 h0 h4)). Qed.
Lemma lem8255865 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') (h4 : term338 A B P f p P' g a) : False.
Proof. exact (ex_elim (@lem8250474 A B P lt2 s p h2) (fun z : type518 A B P => fun h0 : term582 A B P lt2 s p z => @lem8255864 A B P lt2 s z f p P' g a h1 h3 h0 h4)). Qed.
Lemma lem8255866 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') (h4 : term338 A B P f p P' g a) : (term338 A B P f p P' g a) = False.
Proof. exact (prop_ext (fun h5 : term338 A B P f p P' g a => @lem8255865 A B P lt2 s f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8249854 A B P f p P' g a h4)). Qed.
Lemma lem8255867 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') (h4 : term338 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8255866 A B P lt2 s f p P' g a h1 h2 h3 h4) (@lem8249854 A B P f p P' g a h4)). Qed.
Lemma lem8255868 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') : term337 A B P f p P' g a.
Proof. exact (fun h0 : term338 A B P f p P' g a => @lem8255867 A B P lt2 s f p P' g a h1 h2 h3 h0). Qed.
Lemma lem8255869 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') : (term216 A B P p P' f a) = (term216 A B P p P' g a).
Proof. exact (EQ_MP (@lem8249853 A B P f p P' g a) (@lem8255868 A B P a f g p lt2 s P' h1 h2 h3)). Qed.
Lemma lem8255870 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term223 A B P lt2 s f p P' g a.
Proof. exact (fun h0 : term162 A B P lt2 s a f g => @lem8255869 A B P a f g p lt2 s P' h0 h1 h2). Qed.
Lemma lem8255875 {A B P : Type'} (f : A -> B) (g : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term227 A B P lt2 s f p P' g.
Proof. exact (fun a : P => @lem8255870 A B P f g a p lt2 s P' h1 h2). Qed.
Lemma lem8255880 {A B P : Type'} (f : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term231 A B P lt2 s f p P'.
Proof. exact (fun g : A -> B => @lem8255875 A B P f g p lt2 s P' h1 h2). Qed.
Lemma lem8255885 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term234 A B P lt2 s p P'.
Proof. exact (fun f : A -> B => @lem8255880 A B P f p lt2 s P' h1 h2). Qed.
Lemma lem8255886 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term306 A B P lt2 s p P'.
Proof. exact (fun h0 : term262 A B P lt2 s p => @lem8255885 A B P p lt2 s P' h0 h1). Qed.
Lemma lem8255887 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term308 A B P lt2 s p P'.
Proof. exact (fun h0 : term137 A B P p lt2 s P' => @lem8255886 A B P p lt2 s P' h0). Qed.
Lemma lem8255892 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term312 A B P s p P'.
Proof. exact (fun lt2 : type1402 A => @lem8255887 A B P lt2 s p P'). Qed.
Lemma lem8255897 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : term316 A B P p P'.
Proof. exact (fun s : P -> A => @lem8255892 A B P s p P'). Qed.
Lemma lem8255902 {A B P : Type'} (P' : type560 A B P) : term320 A B P P'.
Proof. exact (fun p : type560 A B P => @lem8255897 A B P p P'). Qed.
Lemma lem8255907 {A B P : Type'} : term324 A B P.
Proof. exact (fun P' : type560 A B P => @lem8255902 A B P P'). Qed.
Lemma lem8255908 {A B P : Type'} : term323 A B P.
Proof. exact (EQ_MP (@lem8249846 A B P) (@lem8255907 A B P)). Qed.
Lemma lem8255909 {A B P : Type'} (P' : type560 A B P) : term932 A B P P'.
Proof. exact (@lem8255908 A B P P'). Qed.
Lemma lem8255910 {A B P : Type'} (P' : type560 A B P) : (term932 A B P P') = (term319 A B P P').
Proof. exact (eq_refl (term932 A B P P')). Qed.
Lemma lem8255911 {A B P : Type'} (P' : type560 A B P) : term319 A B P P'.
Proof. exact (EQ_MP (@lem8255910 A B P P') (@lem8255909 A B P P')). Qed.
Lemma lem8255912 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) : term933 A B P P' p.
Proof. exact (@lem8255911 A B P P' p). Qed.
Lemma lem8255913 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term933 A B P P' p) = (term315 A B P p P').
Proof. exact (eq_refl (term933 A B P P' p)). Qed.
Lemma lem8255914 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : term315 A B P p P'.
Proof. exact (EQ_MP (@lem8255913 A B P p P') (@lem8255912 A B P P' p)). Qed.
Lemma lem8255915 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (s : P -> A) : term934 A B P p P' s.
Proof. exact (@lem8255914 A B P p P' s). Qed.
Lemma lem8255916 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term934 A B P p P' s) = (term311 A B P s p P').
Proof. exact (eq_refl (term934 A B P p P' s)). Qed.
Lemma lem8255917 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term311 A B P s p P'.
Proof. exact (EQ_MP (@lem8255916 A B P s p P') (@lem8255915 A B P p P' s)). Qed.
Lemma lem8255918 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) : term935 A B P s p P' lt2.
Proof. exact (@lem8255917 A B P s p P' lt2). Qed.
Lemma lem8255919 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term935 A B P s p P' lt2) = (term299 A B P lt2 s p P').
Proof. exact (eq_refl (term935 A B P s p P' lt2)). Qed.
Lemma lem8255920 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term299 A B P lt2 s p P'.
Proof. exact (EQ_MP (@lem8255919 A B P lt2 s p P') (@lem8255918 A B P s p P' lt2)). Qed.
Lemma lem8255922 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term299 A B P lt2 s p P'.
Proof. exact (@lem8249474 A B P lt2 s p P' (@lem8255920 A B P lt2 s p P')). Qed.
Lemma lem8255923 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term305 A B P lt2 s p P'.
Proof. exact (@lem8255922 A B P lt2 s p P' (@lem8249446 A B P p lt2 s P' h1)). Qed.
Lemma lem8255924 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term297 A B P lt2 s p P'.
Proof. exact (@lem8255923 A B P p lt2 s P' h2 (@lem8249448 A B P lt2 s p h1)). Qed.
Lemma lem8255925 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term298 A B P lt2 s p P') : False.
Proof. exact (@lem8255924 A B P p lt2 s P' h1 h2 (@lem8249458 A B P lt2 s p P' h3)). Qed.
Lemma lem8255926 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term298 A B P lt2 s p P') : (term298 A B P lt2 s p P') = False.
Proof. exact (prop_ext (fun h4 : term298 A B P lt2 s p P' => @lem8255925 A B P lt2 s p P' h1 h2 h3) (fun h4 : False => @lem8249458 A B P lt2 s p P' h3)). Qed.
Lemma lem8255927 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term298 A B P lt2 s p P') : False.
Proof. exact (EQ_MP (@lem8255926 A B P lt2 s p P' h1 h2 h3) (@lem8249458 A B P lt2 s p P' h3)). Qed.
Lemma lem8255928 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term297 A B P lt2 s p P'.
Proof. exact (fun h0 : term298 A B P lt2 s p P' => @lem8255927 A B P lt2 s p P' h1 h2 h0). Qed.
Lemma lem8255929 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term234 A B P lt2 s p P'.
Proof. exact (EQ_MP (@lem8249457 A B P lt2 s p P') (@lem8255928 A B P p lt2 s P' h1 h2)). Qed.
Lemma lem8255930 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term237 A B P lt2 p P' s k) : term237 A B P lt2 p P' s k.
Proof. exact (h1). Qed.
Lemma lem8255931 (t1 : Prop) : term10 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8255932 (t1 : Prop) : (term10 t1) = (term11 t1).
Proof. exact (eq_refl (term10 t1)). Qed.
Lemma lem8255933 (t1 : Prop) : term11 t1.
Proof. exact (EQ_MP (@lem8255932 t1) (@lem8255931 t1)). Qed.
Lemma lem8255934 (t1 : Prop) (t2 : Prop) : term12 t1 t2.
Proof. exact (@lem8255933 t1 t2). Qed.
Lemma lem8255935 (t1 : Prop) (t2 : Prop) : (term12 t1 t2) = (term13 t1 t2).
Proof. exact (eq_refl (term12 t1 t2)). Qed.
Lemma lem8255936 (t1 : Prop) (t2 : Prop) : term13 t1 t2.
Proof. exact (EQ_MP (@lem8255935 t1 t2) (@lem8255934 t1 t2)). Qed.
Lemma lem8255937 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term14 t1 t2 t3.
Proof. exact (@lem8255936 t1 t2 t3). Qed.
Lemma lem8255938 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term14 t1 t2 t3) = ((term15 t1 t2 t3) = (term16 t1 t2 t3)).
Proof. exact (eq_refl (term14 t1 t2 t3)). Qed.
Lemma lem8255939 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term15 t1 t2 t3) = (term16 t1 t2 t3).
Proof. exact (EQ_MP (@lem8255938 t1 t2 t3) (@lem8255937 t1 t2 t3)). Qed.
Lemma lem8255940 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term16 t1 t2 t3) = (term15 t1 t2 t3).
Proof. exact (SYM (@lem8255939 t1 t2 t3)). Qed.
Lemma lem8255942 (p : Prop) (q : Prop) (r : Prop) : term293 p q r.
Proof. exact (@lem137 p q r (@lem129 p q r)). Qed.
Lemma lem8255943 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : term936 A B P lt2 p s P' h k.
Proof. exact (@lem8255942 (term195 A B P lt2 s p P') (term198 A B P lt2 p P' s h) (term265 A B P lt2 p s P' h k)). Qed.
Lemma lem8255945 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8255946 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term195 A B P lt2 s p P') = (term937 A B P lt2 s p P').
Proof. exact (@lem8255945 (term195 A B P lt2 s p P')). Qed.
Lemma lem8255947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term937 A B P lt2 s p P') = (term195 A B P lt2 s p P').
Proof. exact (SYM (@lem8255946 A B P lt2 s p P')). Qed.
Lemma lem8255948 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term938 A B P lt2 s p P') : term938 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8255951 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term939 A B P lt2 s p P') : term939 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8255952 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term940 A B P lt2 s p P'.
Proof. exact (fun h0 : term939 A B P lt2 s p P' => @lem8255951 A B P lt2 s p P' h0). Qed.
Lemma lem8255953 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term940 A B P lt2 s p P') : term940 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8255954 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term939 A B P lt2 s p P') : term939 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8255955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term939 A B P lt2 s p P') (h2 : term940 A B P lt2 s p P') : term939 A B P lt2 s p P'.
Proof. exact (@lem8255953 A B P lt2 s p P' h2 (@lem8255954 A B P lt2 s p P' h1)). Qed.
Lemma lem8255956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term939 A B P lt2 s p P') : term941 A B P lt2 s p P'.
Proof. exact (fun h0 : term940 A B P lt2 s p P' => @lem8255955 A B P lt2 s p P' h1 h0). Qed.
Lemma lem8255957 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term940 A B P lt2 s p P') : term940 A B P lt2 s p P'.
Proof. exact (h1). Qed.
Lemma lem8255958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term939 A B P lt2 s p P') (h2 : term940 A B P lt2 s p P') : term939 A B P lt2 s p P'.
Proof. exact (@lem8255956 A B P lt2 s p P' h1 (@lem8255957 A B P lt2 s p P' h2)). Qed.
Lemma lem8255959 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term940 A B P lt2 s p P') : term940 A B P lt2 s p P'.
Proof. exact (fun h0 : term939 A B P lt2 s p P' => @lem8255958 A B P lt2 s p P' h0 h1). Qed.
Lemma lem8255960 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term942 A B P lt2 s p P'.
Proof. exact (fun h0 : term940 A B P lt2 s p P' => @lem8255959 A B P lt2 s p P' h0). Qed.
Lemma lem8255963 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term940 A B P lt2 s p P'.
Proof. exact (@lem8255960 A B P lt2 s p P' (@lem8255952 A B P lt2 s p P')). Qed.
Lemma lem8255964 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term940 A B P lt2 s p P'.
Proof. exact (@lem8255963 A B P lt2 s p P'). Qed.
Lemma lem8256030 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8256031 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term937 A B P lt2 s p P') = (term943 A B P lt2 s p P').
Proof. exact (@lem8256030 (term938 A B P lt2 s p P')). Qed.
Lemma lem8256033 (t : Prop) : (term304 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8256034 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term943 A B P lt2 s p P') = (term195 A B P lt2 s p P').
Proof. exact (@lem8256033 (term195 A B P lt2 s p P')). Qed.
Lemma lem8256039 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term937 A B P lt2 s p P') = (term195 A B P lt2 s p P').
Proof. exact (TRANS (@lem8256031 A B P lt2 s p P') (@lem8256034 A B P lt2 s p P')). Qed.
Lemma lem8256060 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (eq_refl (term264 A B P lt2 s p)). Qed.
Lemma lem8256061 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term944 A B P lt2 s p P') = (term945 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8256060 A B P lt2 s p) (@lem8256039 A B P lt2 s p P')). Qed.
Lemma lem8256064 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (eq_refl (term307 A B P p lt2 s P')). Qed.
Lemma lem8256065 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term939 A B P lt2 s p P') = (term946 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8256064 A B P p lt2 s P') (@lem8256061 A B P lt2 s p P')). Qed.
Lemma lem8256068 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term947 A B P s p P') = (term948 A B P s p P').
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8256065 A B P lt2 s p P')). Qed.
Lemma lem8256069 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8256070 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term949 A B P s p P') = (term950 A B P s p P').
Proof. exact (MK_COMB (@lem8256069 A) (@lem8256068 A B P s p P')). Qed.
Lemma lem8256075 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term951 A B P p P') = (term952 A B P p P').
Proof. exact (fun_ext (fun s : P -> A => @lem8256070 A B P s p P')). Qed.
Lemma lem8256076 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8256077 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term953 A B P p P') = (term954 A B P p P').
Proof. exact (MK_COMB (@lem8256076 A P) (@lem8256075 A B P p P')). Qed.
Lemma lem8256082 {A B P : Type'} (P' : type560 A B P) : (term955 A B P P') = (term956 A B P P').
Proof. exact (fun_ext (fun p : type560 A B P => @lem8256077 A B P p P')). Qed.
Lemma lem8256083 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8256084 {A B P : Type'} (P' : type560 A B P) : (term957 A B P P') = (term958 A B P P').
Proof. exact (MK_COMB (@lem8256083 A B P) (@lem8256082 A B P P')). Qed.
Lemma lem8256089 {A B P : Type'} : (term959 A B P) = (term960 A B P).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8256084 A B P P')). Qed.
Lemma lem8256090 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8256099 {A B P : Type'} : (term961 A B P) = (term962 A B P).
Proof. exact (MK_COMB (@lem8256090 A B P) (@lem8256089 A B P)). Qed.
Lemma lem8256112 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term177 A B P p P' f a) = (term177 A B P p P' g a)) = ((term177 A B P p P' f a) = (term177 A B P p P' g a)).
Proof. exact (eq_refl ((term177 A B P p P' f a) = (term177 A B P p P' g a))). Qed.
Lemma lem8256117 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8256118 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256117 A B P lt2 s a f g z)). Qed.
Lemma lem8256119 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8256120 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256119 A) (@lem8256118 A B P lt2 s a f g)). Qed.
Lemma lem8256121 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8256122 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256121) (@lem8256120 A B P lt2 s a f g)). Qed.
Lemma lem8256123 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term184 A B P lt2 s f p P' g a) = (term184 A B P lt2 s f p P' g a).
Proof. exact (MK_COMB (@lem8256122 A B P lt2 s a f g) (@lem8256112 A B P f p P' g a)). Qed.
Lemma lem8256124 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term186 A B P lt2 s f p P' g) = (term186 A B P lt2 s f p P' g).
Proof. exact (fun_ext (fun a : P => @lem8256123 A B P lt2 s f p P' g a)). Qed.
Lemma lem8256125 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256126 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) : (term188 A B P lt2 s f p P' g) = (term188 A B P lt2 s f p P' g).
Proof. exact (MK_COMB (@lem8256125 P) (@lem8256124 A B P lt2 s f p P' g)). Qed.
Lemma lem8256127 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term190 A B P lt2 s f p P') = (term190 A B P lt2 s f p P').
Proof. exact (fun_ext (fun g : A -> B => @lem8256126 A B P lt2 s f p P' g)). Qed.
Lemma lem8256128 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256129 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) : (term192 A B P lt2 s f p P') = (term192 A B P lt2 s f p P').
Proof. exact (MK_COMB (@lem8256128 A B) (@lem8256127 A B P lt2 s f p P')). Qed.
Lemma lem8256130 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term194 A B P lt2 s p P') = (term194 A B P lt2 s p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8256129 A B P lt2 s f p P')). Qed.
Lemma lem8256131 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256132 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term195 A B P lt2 s p P') = (term195 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8256131 A B) (@lem8256130 A B P lt2 s p P')). Qed.
Lemma lem8256137 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8256142 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8256143 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256142 A B P lt2 s a f g z)). Qed.
Lemma lem8256144 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8256145 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256144 A) (@lem8256143 A B P lt2 s a f g)). Qed.
Lemma lem8256146 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8256147 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256146) (@lem8256145 A B P lt2 s a f g)). Qed.
Lemma lem8256148 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term251 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8256147 A B P lt2 s a f g) (@lem8256137 A B P f p g a)). Qed.
Lemma lem8256149 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term253 A B P lt2 s f p g) = (term253 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8256148 A B P lt2 s f p g a)). Qed.
Lemma lem8256150 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256151 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term255 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256150 P) (@lem8256149 A B P lt2 s f p g)). Qed.
Lemma lem8256152 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term257 A B P lt2 s f p) = (term257 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8256151 A B P lt2 s f p g)). Qed.
Lemma lem8256153 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256154 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term259 A B P lt2 s f p) = (term259 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256153 A B) (@lem8256152 A B P lt2 s f p)). Qed.
Lemma lem8256155 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term261 A B P lt2 s p) = (term261 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8256154 A B P lt2 s f p)). Qed.
Lemma lem8256156 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256157 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term262 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256156 A B) (@lem8256155 A B P lt2 s p)). Qed.
Lemma lem8256158 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8256159 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256158) (@lem8256157 A B P lt2 s p)). Qed.
Lemma lem8256160 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term945 A B P lt2 s p P') = (term945 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8256159 A B P lt2 s p) (@lem8256132 A B P lt2 s p P')). Qed.
Lemma lem8256165 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = ((P' f a) = (P' g a)).
Proof. exact (eq_refl ((P' f a) = (P' g a))). Qed.
Lemma lem8256170 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8256171 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256170 A B P lt2 s a f g z)). Qed.
Lemma lem8256172 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8256173 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256172 A) (@lem8256171 A B P lt2 s a f g)). Qed.
Lemma lem8256176 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8256177 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term328 A B P p lt2 s a f g) = (term328 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256176 A B P p g a) (@lem8256173 A B P lt2 s a f g)). Qed.
Lemma lem8256180 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8256181 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term329 A B P p lt2 s a f g) = (term329 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256180 A B P p f a) (@lem8256177 A B P p lt2 s a f g)). Qed.
Lemma lem8256182 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8256183 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term330 A B P p lt2 s a f g) = (term330 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256182) (@lem8256181 A B P p lt2 s a f g)). Qed.
Lemma lem8256184 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term331 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256183 A B P p lt2 s a f g) (@lem8256165 A B P f P' g a)). Qed.
Lemma lem8256185 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term332 A B P p lt2 s f P' g) = (term332 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8256184 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256186 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256187 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term333 A B P p lt2 s f P' g) = (term333 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256186 P) (@lem8256185 A B P p lt2 s f P' g)). Qed.
Lemma lem8256188 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term334 A B P p lt2 s f P') = (term334 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8256187 A B P p lt2 s f P' g)). Qed.
Lemma lem8256189 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256190 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term335 A B P p lt2 s f P') = (term335 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256189 A B) (@lem8256188 A B P p lt2 s f P')). Qed.
Lemma lem8256191 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term336 A B P p lt2 s P') = (term336 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8256190 A B P p lt2 s f P')). Qed.
Lemma lem8256192 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256193 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term137 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256192 A B) (@lem8256191 A B P p lt2 s P')). Qed.
Lemma lem8256194 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8256195 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256194) (@lem8256193 A B P p lt2 s P')). Qed.
Lemma lem8256196 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term946 A B P lt2 s p P') = (term946 A B P lt2 s p P').
Proof. exact (MK_COMB (@lem8256195 A B P p lt2 s P') (@lem8256160 A B P lt2 s p P')). Qed.
Lemma lem8256197 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term948 A B P s p P') = (term948 A B P s p P').
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8256196 A B P lt2 s p P')). Qed.
Lemma lem8256198 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8256199 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term950 A B P s p P') = (term950 A B P s p P').
Proof. exact (MK_COMB (@lem8256198 A) (@lem8256197 A B P s p P')). Qed.
Lemma lem8256200 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term952 A B P p P') = (term952 A B P p P').
Proof. exact (fun_ext (fun s : P -> A => @lem8256199 A B P s p P')). Qed.
Lemma lem8256201 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8256202 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term954 A B P p P') = (term954 A B P p P').
Proof. exact (MK_COMB (@lem8256201 A P) (@lem8256200 A B P p P')). Qed.
Lemma lem8256203 {A B P : Type'} (P' : type560 A B P) : (term956 A B P P') = (term956 A B P P').
Proof. exact (fun_ext (fun p : type560 A B P => @lem8256202 A B P p P')). Qed.
Lemma lem8256204 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8256205 {A B P : Type'} (P' : type560 A B P) : (term958 A B P P') = (term958 A B P P').
Proof. exact (MK_COMB (@lem8256204 A B P) (@lem8256203 A B P P')). Qed.
Lemma lem8256206 {A B P : Type'} : (term960 A B P) = (term960 A B P).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8256205 A B P P')). Qed.
Lemma lem8256207 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8256208 {A B P : Type'} : (term962 A B P) = (term962 A B P).
Proof. exact (MK_COMB (@lem8256207 A B P) (@lem8256206 A B P)). Qed.
Lemma lem8256331 {A B P : Type'} : (term961 A B P) = (term962 A B P).
Proof. exact (TRANS (@lem8256099 A B P) (@lem8256208 A B P)). Qed.
Lemma lem8256332 {A B P : Type'} : (term962 A B P) = (term961 A B P).
Proof. exact (SYM (@lem8256331 A B P)). Qed.
Lemma lem8256333 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term137 A B P p lt2 s P'.
Proof. exact (h1). Qed.
Lemma lem8256334 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term262 A B P lt2 s p.
Proof. exact (h1). Qed.
Lemma lem8256335 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term162 A B P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8256337 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8256338 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : ((term177 A B P p P' f a) = (term177 A B P p P' g a)) = (term963 A B P f p P' g a).
Proof. exact (@lem8256337 ((term177 A B P p P' f a) = (term177 A B P p P' g a))). Qed.
Lemma lem8256339 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term963 A B P f p P' g a) = ((term177 A B P p P' f a) = (term177 A B P p P' g a)).
Proof. exact (SYM (@lem8256338 A B P f p P' g a)). Qed.
Lemma lem8256340 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term964 A B P f p P' g a) : term964 A B P f p P' g a.
Proof. exact (h1). Qed.
Lemma lem8256349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term339 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8256350 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8256351 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term345 A B P lt2 s a f g).
Proof. exact (@lem8256350 A (term326 A B P lt2 s a f g)). Qed.
Lemma lem8256352 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8256353 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8256354 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term339 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8256353) (@lem8256352 A B P lt2 s a f g z)). Qed.
Lemma lem8256355 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8256354 A B P lt2 s a f g z) (@lem8256349 A B P lt2 s a f g z)). Qed.
Lemma lem8256356 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term348 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256355 A B P lt2 s a f g z)). Qed.
Lemma lem8256357 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256358 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term345 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256357 A) (@lem8256356 A B P lt2 s a f g)). Qed.
Lemma lem8256359 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8256351 A B P lt2 s a f g) (@lem8256358 A B P lt2 s a f g)). Qed.
Lemma lem8256361 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8256362 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term352 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256361 A B P p g a) (@lem8256359 A B P lt2 s a f g)). Qed.
Lemma lem8256363 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term354 A B P p lt2 s a f g) = (term352 A B P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term162 A B P lt2 s a f g)). Qed.
Lemma lem8256364 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term354 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8256363 A B P p lt2 s a f g) (@lem8256362 A B P p lt2 s a f g)). Qed.
Lemma lem8256366 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8256367 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term355 A B P p lt2 s a f g) = (term356 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256366 A B P p f a) (@lem8256364 A B P p lt2 s a f g)). Qed.
Lemma lem8256368 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term357 A B P p lt2 s a f g) = (term355 A B P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term328 A B P p lt2 s a f g)). Qed.
Lemma lem8256369 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term357 A B P p lt2 s a f g) = (term356 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8256368 A B P p lt2 s a f g) (@lem8256367 A B P p lt2 s a f g)). Qed.
Lemma lem8256384 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = (term358 A B P f P' g a).
Proof. exact (@lem17784 (P' f a) (P' g a)). Qed.
Lemma lem8256385 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256386 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term359 A B P p lt2 s a f g) = (term360 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256385) (@lem8256369 A B P p lt2 s a f g)). Qed.
Lemma lem8256387 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term361 A B P p lt2 s f P' g a) = (term362 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256386 A B P p lt2 s a f g) (@lem8256384 A B P f P' g a)). Qed.
Lemma lem8256388 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term361 A B P p lt2 s f P' g a).
Proof. exact (@lem17265 (term329 A B P p lt2 s a f g) ((P' f a) = (P' g a))). Qed.
Lemma lem8256389 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term362 A B P p lt2 s f P' g a).
Proof. exact (TRANS (@lem8256388 A B P p lt2 s f P' g a) (@lem8256387 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256390 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term332 A B P p lt2 s f P' g) = (term363 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8256389 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256391 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256392 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term333 A B P p lt2 s f P' g) = (term364 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256391 P) (@lem8256390 A B P p lt2 s f P' g)). Qed.
Lemma lem8256393 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term334 A B P p lt2 s f P') = (term365 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8256392 A B P p lt2 s f P' g)). Qed.
Lemma lem8256394 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256395 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term335 A B P p lt2 s f P') = (term366 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256394 A B) (@lem8256393 A B P p lt2 s f P')). Qed.
Lemma lem8256396 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term336 A B P p lt2 s P') = (term367 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8256395 A B P p lt2 s f P')). Qed.
Lemma lem8256397 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256398 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term368 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256397 A B) (@lem8256396 A B P p lt2 s P')). Qed.
Lemma lem8256505 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8256506 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (@lem8256505 A P Q). Qed.
Lemma lem8256507 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term371 A B P p lt2 s a f g) = (term372 A B P p lt2 s a f g).
Proof. exact (@lem8256506 A (term373 A B P p g a) (term349 A B P lt2 s a f g)). Qed.
Lemma lem8256508 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8256509 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term375 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256508 A B P lt2 s a f g z)). Qed.
Lemma lem8256510 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256511 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term376 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256510 A) (@lem8256509 A B P lt2 s a f g)). Qed.
Lemma lem8256512 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8256513 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term371 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256512 A B P p g a) (@lem8256511 A B P lt2 s a f g)). Qed.
Lemma lem8256514 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256515 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term377 A B P p lt2 s a f g) = (term378 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256514) (@lem8256513 A B P p lt2 s a f g)). Qed.
Lemma lem8256516 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8256517 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8256518 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term379 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8256517 A B P p g a) (@lem8256516 A B P lt2 s a f g z)). Qed.
Lemma lem8256519 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term381 A B P p lt2 s a f g) = (term382 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256518 A B P p lt2 s a f g z)). Qed.
Lemma lem8256520 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256521 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term372 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256520 A) (@lem8256519 A B P p lt2 s a f g)). Qed.
Lemma lem8256522 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : ((term371 A B P p lt2 s a f g) = (term372 A B P p lt2 s a f g)) = ((term353 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8256515 A B P p lt2 s a f g) (@lem8256521 A B P p lt2 s a f g)). Qed.
Lemma lem8256523 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term353 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8256522 A B P p lt2 s a f g) (@lem8256507 A B P p lt2 s a f g)). Qed.
Lemma lem8256524 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8256525 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term356 A B P p lt2 s a f g) = (term384 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256524 A B P p f a) (@lem8256523 A B P p lt2 s a f g)). Qed.
Lemma lem8256527 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8256528 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (@lem8256527 A P Q). Qed.
Lemma lem8256529 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term385 A B P p lt2 s a f g) = (term386 A B P p lt2 s a f g).
Proof. exact (@lem8256528 A (term373 A B P p f a) (term382 A B P p lt2 s a f g)). Qed.
Lemma lem8256530 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term387 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term387 A B P p lt2 s a f g z)). Qed.
Lemma lem8256531 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term388 A B P p lt2 s a f g) = (term382 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256530 A B P p lt2 s a f g z)). Qed.
Lemma lem8256532 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256533 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term389 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256532 A) (@lem8256531 A B P p lt2 s a f g)). Qed.
Lemma lem8256534 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8256535 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term385 A B P p lt2 s a f g) = (term384 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256534 A B P p f a) (@lem8256533 A B P p lt2 s a f g)). Qed.
Lemma lem8256536 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256537 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term390 A B P p lt2 s a f g) = (term391 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256536) (@lem8256535 A B P p lt2 s a f g)). Qed.
Lemma lem8256538 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term387 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term387 A B P p lt2 s a f g z)). Qed.
Lemma lem8256539 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8256540 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term392 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8256539 A B P p f a) (@lem8256538 A B P p lt2 s a f g z)). Qed.
Lemma lem8256541 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term394 A B P p lt2 s a f g) = (term395 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256540 A B P p lt2 s a f g z)). Qed.
Lemma lem8256542 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256543 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term386 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256542 A) (@lem8256541 A B P p lt2 s a f g)). Qed.
Lemma lem8256544 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : ((term385 A B P p lt2 s a f g) = (term386 A B P p lt2 s a f g)) = ((term384 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8256537 A B P p lt2 s a f g) (@lem8256543 A B P p lt2 s a f g)). Qed.
Lemma lem8256545 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term384 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8256544 A B P p lt2 s a f g) (@lem8256529 A B P p lt2 s a f g)). Qed.
Lemma lem8256546 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term356 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8256525 A B P p lt2 s a f g) (@lem8256545 A B P p lt2 s a f g)). Qed.
Lemma lem8256547 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256548 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term360 A B P p lt2 s a f g) = (term397 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256547) (@lem8256546 A B P p lt2 s a f g)). Qed.
Lemma lem8256549 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8256550 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term362 A B P p lt2 s f P' g a) = (term398 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256548 A B P p lt2 s a f g) (@lem8256549 A B P f P' g a)). Qed.
Lemma lem8256552 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8256553 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (@lem8256552 A P Q). Qed.
Lemma lem8256554 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term401 A B P p lt2 s f P' g a) = (term402 A B P p lt2 s f P' g a).
Proof. exact (@lem8256553 A (term395 A B P p lt2 s a f g) (term358 A B P f P' g a)). Qed.
Lemma lem8256555 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term403 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term403 A B P p lt2 s a f g z)). Qed.
Lemma lem8256556 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term404 A B P p lt2 s a f g) = (term395 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256555 A B P p lt2 s a f g z)). Qed.
Lemma lem8256557 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256558 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term405 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256557 A) (@lem8256556 A B P p lt2 s a f g)). Qed.
Lemma lem8256559 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256560 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term406 A B P p lt2 s a f g) = (term397 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8256559) (@lem8256558 A B P p lt2 s a f g)). Qed.
Lemma lem8256561 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8256562 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term401 A B P p lt2 s f P' g a) = (term398 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256560 A B P p lt2 s a f g) (@lem8256561 A B P f P' g a)). Qed.
Lemma lem8256563 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256564 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term407 A B P p lt2 s f P' g a) = (term408 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256563) (@lem8256562 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256565 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term403 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term403 A B P p lt2 s a f g z)). Qed.
Lemma lem8256566 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256567 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term409 A B P p lt2 s a f g z) = (term410 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8256566) (@lem8256565 A B P p lt2 s a f g z)). Qed.
Lemma lem8256568 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8256569 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term411 A B P p lt2 s z f P' g a) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (MK_COMB (@lem8256567 A B P p lt2 s a f g z) (@lem8256568 A B P f P' g a)). Qed.
Lemma lem8256570 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term413 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (fun_ext (fun z : A => @lem8256569 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8256571 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256572 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term402 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256571 A) (@lem8256570 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256573 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((term401 A B P p lt2 s f P' g a) = (term402 A B P p lt2 s f P' g a)) = ((term398 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a)).
Proof. exact (MK_COMB (@lem8256564 A B P p lt2 s f P' g a) (@lem8256572 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256574 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term398 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (EQ_MP (@lem8256573 A B P p lt2 s f P' g a) (@lem8256554 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256575 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term362 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (TRANS (@lem8256550 A B P p lt2 s f P' g a) (@lem8256574 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256576 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term363 A B P p lt2 s f P' g) = (term416 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8256575 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256577 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256578 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term364 A B P p lt2 s f P' g) = (term417 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256577 P) (@lem8256576 A B P p lt2 s f P' g)). Qed.
Lemma lem8256580 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8256581 {A P : Type'} (P' : type1470 A P) : (term420 A P P') = (term421 A P P').
Proof. exact (@lem8256580 P A P'). Qed.
Lemma lem8256582 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term422 A B P p lt2 s f P' g) = (term423 A B P p lt2 s f P' g).
Proof. exact (@lem8256581 A P (term424 A B P p lt2 s f P' g)). Qed.
Lemma lem8256583 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term425 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term425 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256584 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8256585 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (z : A) : (term426 A B P p lt2 s f P' g a z) = (term427 A B P p lt2 s f P' g a z).
Proof. exact (MK_COMB (@lem8256583 A B P p lt2 s f P' g a) (@lem8256584 A z)). Qed.
Lemma lem8256586 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term427 A B P p lt2 s f P' g a z) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (eq_refl (term427 A B P p lt2 s f P' g a z)). Qed.
Lemma lem8256587 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term426 A B P p lt2 s f P' g a z) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (TRANS (@lem8256585 A B P p lt2 s f P' g a z) (@lem8256586 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8256588 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term428 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (fun_ext (fun z : A => @lem8256587 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8256589 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256590 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term429 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8256589 A) (@lem8256588 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256591 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term430 A B P p lt2 s f P' g) = (term416 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8256590 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256592 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256593 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term422 A B P p lt2 s f P' g) = (term417 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256592 P) (@lem8256591 A B P p lt2 s f P' g)). Qed.
Lemma lem8256594 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256595 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term431 A B P p lt2 s f P' g) = (term432 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256594) (@lem8256593 A B P p lt2 s f P' g)). Qed.
Lemma lem8256596 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term425 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term425 A B P p lt2 s f P' g a)). Qed.
Lemma lem8256597 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8256598 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term433 A B P p lt2 s f P' g z a) = (term434 A B P p lt2 s f P' g z a).
Proof. exact (MK_COMB (@lem8256596 A B P p lt2 s f P' g a) (@lem8256597 A P z a)). Qed.
Lemma lem8256599 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term434 A B P p lt2 s f P' g z a) = (term435 A B P p lt2 s z f P' g a).
Proof. exact (eq_refl (term434 A B P p lt2 s f P' g z a)). Qed.
Lemma lem8256600 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term433 A B P p lt2 s f P' g z a) = (term435 A B P p lt2 s z f P' g a).
Proof. exact (TRANS (@lem8256598 A B P p lt2 s f P' g z a) (@lem8256599 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8256601 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term436 A B P p lt2 s f P' g z) = (term437 A B P p lt2 s z f P' g).
Proof. exact (fun_ext (fun a : P => @lem8256600 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8256602 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256603 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term438 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (MK_COMB (@lem8256602 P) (@lem8256601 A B P p lt2 s z f P' g)). Qed.
Lemma lem8256604 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term440 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun z : P -> A => @lem8256603 A B P p lt2 s z f P' g)). Qed.
Lemma lem8256605 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8256606 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term423 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256605 A P) (@lem8256604 A B P p lt2 s f P' g)). Qed.
Lemma lem8256607 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : ((term422 A B P p lt2 s f P' g) = (term423 A B P p lt2 s f P' g)) = ((term417 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g)).
Proof. exact (MK_COMB (@lem8256595 A B P p lt2 s f P' g) (@lem8256606 A B P p lt2 s f P' g)). Qed.
Lemma lem8256608 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term417 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (EQ_MP (@lem8256607 A B P p lt2 s f P' g) (@lem8256582 A B P p lt2 s f P' g)). Qed.
Lemma lem8256609 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term364 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (TRANS (@lem8256578 A B P p lt2 s f P' g) (@lem8256608 A B P p lt2 s f P' g)). Qed.
Lemma lem8256610 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term365 A B P p lt2 s f P') = (term443 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8256609 A B P p lt2 s f P' g)). Qed.
Lemma lem8256611 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256612 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term366 A B P p lt2 s f P') = (term444 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256611 A B) (@lem8256610 A B P p lt2 s f P')). Qed.
Lemma lem8256614 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8256615 {A B P : Type'} (P' : type537 A B P) : (term445 A B P P') = (term446 A B P P').
Proof. exact (@lem8256614 (A -> B) (P -> A) P'). Qed.
Lemma lem8256616 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term447 A B P p lt2 s f P') = (term448 A B P p lt2 s f P').
Proof. exact (@lem8256615 A B P (term449 A B P p lt2 s f P')). Qed.
Lemma lem8256617 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term450 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term450 A B P p lt2 s f P' g)). Qed.
Lemma lem8256618 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8256619 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (z : P -> A) : (term451 A B P p lt2 s f P' g z) = (term452 A B P p lt2 s f P' g z).
Proof. exact (MK_COMB (@lem8256617 A B P p lt2 s f P' g) (@lem8256618 A P z)). Qed.
Lemma lem8256620 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term452 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (eq_refl (term452 A B P p lt2 s f P' g z)). Qed.
Lemma lem8256621 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term451 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (TRANS (@lem8256619 A B P p lt2 s f P' g z) (@lem8256620 A B P p lt2 s z f P' g)). Qed.
Lemma lem8256622 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term453 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun z : P -> A => @lem8256621 A B P p lt2 s z f P' g)). Qed.
Lemma lem8256623 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8256624 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term454 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8256623 A P) (@lem8256622 A B P p lt2 s f P' g)). Qed.
Lemma lem8256625 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term455 A B P p lt2 s f P') = (term443 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8256624 A B P p lt2 s f P' g)). Qed.
Lemma lem8256626 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256627 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term447 A B P p lt2 s f P') = (term444 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256626 A B) (@lem8256625 A B P p lt2 s f P')). Qed.
Lemma lem8256628 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256629 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term456 A B P p lt2 s f P') = (term457 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256628) (@lem8256627 A B P p lt2 s f P')). Qed.
Lemma lem8256630 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term450 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term450 A B P p lt2 s f P' g)). Qed.
Lemma lem8256631 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8256632 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (z : type557 A B P) (g : A -> B) : (term458 A B P p lt2 s f P' z g) = (term459 A B P p lt2 s f P' z g).
Proof. exact (MK_COMB (@lem8256630 A B P p lt2 s f P' g) (@lem8256631 A B P z g)). Qed.
Lemma lem8256633 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term459 A B P p lt2 s f P' z g) = (term460 A B P p lt2 s z f P' g).
Proof. exact (eq_refl (term459 A B P p lt2 s f P' z g)). Qed.
Lemma lem8256634 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term458 A B P p lt2 s f P' z g) = (term460 A B P p lt2 s z f P' g).
Proof. exact (TRANS (@lem8256632 A B P p lt2 s f P' z g) (@lem8256633 A B P p lt2 s z f P' g)). Qed.
Lemma lem8256635 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term461 A B P p lt2 s f P' z) = (term462 A B P p lt2 s z f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8256634 A B P p lt2 s z f P' g)). Qed.
Lemma lem8256636 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256637 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term463 A B P p lt2 s f P' z) = (term464 A B P p lt2 s z f P').
Proof. exact (MK_COMB (@lem8256636 A B) (@lem8256635 A B P p lt2 s z f P')). Qed.
Lemma lem8256638 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term465 A B P p lt2 s f P') = (term466 A B P p lt2 s f P').
Proof. exact (fun_ext (fun z : type557 A B P => @lem8256637 A B P p lt2 s z f P')). Qed.
Lemma lem8256639 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8256640 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term448 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256639 A B P) (@lem8256638 A B P p lt2 s f P')). Qed.
Lemma lem8256641 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : ((term447 A B P p lt2 s f P') = (term448 A B P p lt2 s f P')) = ((term444 A B P p lt2 s f P') = (term467 A B P p lt2 s f P')).
Proof. exact (MK_COMB (@lem8256629 A B P p lt2 s f P') (@lem8256640 A B P p lt2 s f P')). Qed.
Lemma lem8256642 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term444 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (EQ_MP (@lem8256641 A B P p lt2 s f P') (@lem8256616 A B P p lt2 s f P')). Qed.
Lemma lem8256643 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term366 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (TRANS (@lem8256612 A B P p lt2 s f P') (@lem8256642 A B P p lt2 s f P')). Qed.
Lemma lem8256644 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term367 A B P p lt2 s P') = (term468 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8256643 A B P p lt2 s f P')). Qed.
Lemma lem8256645 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256646 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term368 A B P p lt2 s P') = (term469 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256645 A B) (@lem8256644 A B P p lt2 s P')). Qed.
Lemma lem8256648 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8256649 {A B P : Type'} (P' : type495 A B P) : (term470 A B P P') = (term471 A B P P').
Proof. exact (@lem8256648 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8256650 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term472 A B P p lt2 s P') = (term473 A B P p lt2 s P').
Proof. exact (@lem8256649 A B P (term474 A B P p lt2 s P')). Qed.
Lemma lem8256651 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term475 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (eq_refl (term475 A B P p lt2 s P' f)). Qed.
Lemma lem8256652 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8256653 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (z : type557 A B P) : (term476 A B P p lt2 s P' f z) = (term477 A B P p lt2 s f P' z).
Proof. exact (MK_COMB (@lem8256651 A B P p lt2 s f P') (@lem8256652 A B P z)). Qed.
Lemma lem8256654 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term477 A B P p lt2 s f P' z) = (term464 A B P p lt2 s z f P').
Proof. exact (eq_refl (term477 A B P p lt2 s f P' z)). Qed.
Lemma lem8256655 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term476 A B P p lt2 s P' f z) = (term464 A B P p lt2 s z f P').
Proof. exact (TRANS (@lem8256653 A B P p lt2 s f P' z) (@lem8256654 A B P p lt2 s z f P')). Qed.
Lemma lem8256656 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term478 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (fun_ext (fun z : type557 A B P => @lem8256655 A B P p lt2 s z f P')). Qed.
Lemma lem8256657 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8256658 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term479 A B P p lt2 s P' f) = (term467 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8256657 A B P) (@lem8256656 A B P p lt2 s f P')). Qed.
Lemma lem8256659 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term480 A B P p lt2 s P') = (term468 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8256658 A B P p lt2 s f P')). Qed.
Lemma lem8256660 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256661 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term472 A B P p lt2 s P') = (term469 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256660 A B) (@lem8256659 A B P p lt2 s P')). Qed.
Lemma lem8256662 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256663 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term481 A B P p lt2 s P') = (term482 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256662) (@lem8256661 A B P p lt2 s P')). Qed.
Lemma lem8256664 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term475 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (eq_refl (term475 A B P p lt2 s P' f)). Qed.
Lemma lem8256665 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8256666 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (z : type518 A B P) (f : A -> B) : (term483 A B P p lt2 s P' z f) = (term484 A B P p lt2 s P' z f).
Proof. exact (MK_COMB (@lem8256664 A B P p lt2 s f P') (@lem8256665 A B P z f)). Qed.
Lemma lem8256667 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term484 A B P p lt2 s P' z f) = (term485 A B P p lt2 s z f P').
Proof. exact (eq_refl (term484 A B P p lt2 s P' z f)). Qed.
Lemma lem8256668 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term483 A B P p lt2 s P' z f) = (term485 A B P p lt2 s z f P').
Proof. exact (TRANS (@lem8256666 A B P p lt2 s P' z f) (@lem8256667 A B P p lt2 s z f P')). Qed.
Lemma lem8256669 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P' : type560 A B P) : (term486 A B P p lt2 s P' z) = (term487 A B P p lt2 s z P').
Proof. exact (fun_ext (fun f : A -> B => @lem8256668 A B P p lt2 s z f P')). Qed.
Lemma lem8256670 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256671 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P' : type560 A B P) : (term488 A B P p lt2 s P' z) = (term489 A B P p lt2 s z P').
Proof. exact (MK_COMB (@lem8256670 A B) (@lem8256669 A B P p lt2 s z P')). Qed.
Lemma lem8256672 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term490 A B P p lt2 s P') = (term491 A B P p lt2 s P').
Proof. exact (fun_ext (fun z : type518 A B P => @lem8256671 A B P p lt2 s z P')). Qed.
Lemma lem8256673 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8256674 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term473 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8256673 A B P) (@lem8256672 A B P p lt2 s P')). Qed.
Lemma lem8256675 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : ((term472 A B P p lt2 s P') = (term473 A B P p lt2 s P')) = ((term469 A B P p lt2 s P') = (term492 A B P p lt2 s P')).
Proof. exact (MK_COMB (@lem8256663 A B P p lt2 s P') (@lem8256674 A B P p lt2 s P')). Qed.
Lemma lem8256676 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term469 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (EQ_MP (@lem8256675 A B P p lt2 s P') (@lem8256650 A B P p lt2 s P')). Qed.
Lemma lem8256678 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term368 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (TRANS (@lem8256646 A B P p lt2 s P') (@lem8256676 A B P p lt2 s P')). Qed.
Lemma lem8256679 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (TRANS (@lem8256398 A B P p lt2 s P') (@lem8256678 A B P p lt2 s P')). Qed.
Lemma lem8256680 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term492 A B P p lt2 s P'.
Proof. exact (EQ_MP (@lem8256679 A B P p lt2 s P') (@lem8256333 A B P p lt2 s P' h1)). Qed.
Lemma lem8256687 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term339 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8256688 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8256689 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term345 A B P lt2 s a f g).
Proof. exact (@lem8256688 A (term326 A B P lt2 s a f g)). Qed.
Lemma lem8256690 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8256691 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8256692 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term339 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8256691) (@lem8256690 A B P lt2 s a f g z)). Qed.
Lemma lem8256693 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8256692 A B P lt2 s a f g z) (@lem8256687 A B P lt2 s a f g z)). Qed.
Lemma lem8256694 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term348 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256693 A B P lt2 s a f g z)). Qed.
Lemma lem8256695 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256696 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term345 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256695 A) (@lem8256694 A B P lt2 s a f g)). Qed.
Lemma lem8256697 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8256689 A B P lt2 s a f g) (@lem8256696 A B P lt2 s a f g)). Qed.
Lemma lem8256712 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = (term358 A B P f p g a).
Proof. exact (@lem17784 (p f a) (p g a)). Qed.
Lemma lem8256713 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256714 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term493 A B P lt2 s a f g) = (term494 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256713) (@lem8256697 A B P lt2 s a f g)). Qed.
Lemma lem8256715 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term495 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8256714 A B P lt2 s a f g) (@lem8256712 A B P f p g a)). Qed.
Lemma lem8256716 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term495 A B P lt2 s f p g a).
Proof. exact (@lem17265 (term162 A B P lt2 s a f g) ((p f a) = (p g a))). Qed.
Lemma lem8256717 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (TRANS (@lem8256716 A B P lt2 s f p g a) (@lem8256715 A B P lt2 s f p g a)). Qed.
Lemma lem8256718 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term253 A B P lt2 s f p g) = (term497 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8256717 A B P lt2 s f p g a)). Qed.
Lemma lem8256719 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256720 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term255 A B P lt2 s f p g) = (term498 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256719 P) (@lem8256718 A B P lt2 s f p g)). Qed.
Lemma lem8256721 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term257 A B P lt2 s f p) = (term499 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8256720 A B P lt2 s f p g)). Qed.
Lemma lem8256722 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256723 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term259 A B P lt2 s f p) = (term500 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256722 A B) (@lem8256721 A B P lt2 s f p)). Qed.
Lemma lem8256724 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term261 A B P lt2 s p) = (term501 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8256723 A B P lt2 s f p)). Qed.
Lemma lem8256725 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256726 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term502 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256725 A B) (@lem8256724 A B P lt2 s p)). Qed.
Lemma lem8256833 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8256834 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (@lem8256833 A P Q). Qed.
Lemma lem8256835 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term503 A B P lt2 s f p g a) = (term504 A B P lt2 s f p g a).
Proof. exact (@lem8256834 A (term349 A B P lt2 s a f g) (term358 A B P f p g a)). Qed.
Lemma lem8256836 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8256837 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term375 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256836 A B P lt2 s a f g z)). Qed.
Lemma lem8256838 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256839 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term376 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256838 A) (@lem8256837 A B P lt2 s a f g)). Qed.
Lemma lem8256840 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256841 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term505 A B P lt2 s a f g) = (term494 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256840) (@lem8256839 A B P lt2 s a f g)). Qed.
Lemma lem8256842 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term358 A B P f p g a).
Proof. exact (eq_refl (term358 A B P f p g a)). Qed.
Lemma lem8256843 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term503 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8256841 A B P lt2 s a f g) (@lem8256842 A B P f p g a)). Qed.
Lemma lem8256844 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256845 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term506 A B P lt2 s f p g a) = (term507 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8256844) (@lem8256843 A B P lt2 s f p g a)). Qed.
Lemma lem8256846 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8256847 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8256848 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term508 A B P lt2 s a f g z) = (term509 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8256847) (@lem8256846 A B P lt2 s a f g z)). Qed.
Lemma lem8256849 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term358 A B P f p g a).
Proof. exact (eq_refl (term358 A B P f p g a)). Qed.
Lemma lem8256850 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term510 A B P lt2 s z f p g a) = (term511 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8256848 A B P lt2 s a f g z) (@lem8256849 A B P f p g a)). Qed.
Lemma lem8256851 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term512 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8256850 A B P lt2 s z f p g a)). Qed.
Lemma lem8256852 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256853 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term504 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8256852 A) (@lem8256851 A B P lt2 s f p g a)). Qed.
Lemma lem8256854 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((term503 A B P lt2 s f p g a) = (term504 A B P lt2 s f p g a)) = ((term496 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a)).
Proof. exact (MK_COMB (@lem8256845 A B P lt2 s f p g a) (@lem8256853 A B P lt2 s f p g a)). Qed.
Lemma lem8256855 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term496 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (EQ_MP (@lem8256854 A B P lt2 s f p g a) (@lem8256835 A B P lt2 s f p g a)). Qed.
Lemma lem8256856 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term497 A B P lt2 s f p g) = (term515 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8256855 A B P lt2 s f p g a)). Qed.
Lemma lem8256857 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256858 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term498 A B P lt2 s f p g) = (term516 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256857 P) (@lem8256856 A B P lt2 s f p g)). Qed.
Lemma lem8256860 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8256861 {A P : Type'} (P' : type1470 A P) : (term420 A P P') = (term421 A P P').
Proof. exact (@lem8256860 P A P'). Qed.
Lemma lem8256862 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term517 A B P lt2 s f p g) = (term518 A B P lt2 s f p g).
Proof. exact (@lem8256861 A P (term519 A B P lt2 s f p g)). Qed.
Lemma lem8256863 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term520 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (eq_refl (term520 A B P lt2 s f p g a)). Qed.
Lemma lem8256864 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8256865 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (z : A) : (term521 A B P lt2 s f p g a z) = (term522 A B P lt2 s f p g a z).
Proof. exact (MK_COMB (@lem8256863 A B P lt2 s f p g a) (@lem8256864 A z)). Qed.
Lemma lem8256866 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term522 A B P lt2 s f p g a z) = (term511 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term522 A B P lt2 s f p g a z)). Qed.
Lemma lem8256867 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term521 A B P lt2 s f p g a z) = (term511 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8256865 A B P lt2 s f p g a z) (@lem8256866 A B P lt2 s z f p g a)). Qed.
Lemma lem8256868 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term523 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8256867 A B P lt2 s z f p g a)). Qed.
Lemma lem8256869 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8256870 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term524 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8256869 A) (@lem8256868 A B P lt2 s f p g a)). Qed.
Lemma lem8256871 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term525 A B P lt2 s f p g) = (term515 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8256870 A B P lt2 s f p g a)). Qed.
Lemma lem8256872 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256873 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term517 A B P lt2 s f p g) = (term516 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256872 P) (@lem8256871 A B P lt2 s f p g)). Qed.
Lemma lem8256874 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256875 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term526 A B P lt2 s f p g) = (term527 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256874) (@lem8256873 A B P lt2 s f p g)). Qed.
Lemma lem8256876 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term520 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (eq_refl (term520 A B P lt2 s f p g a)). Qed.
Lemma lem8256877 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8256878 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term528 A B P lt2 s f p g z a) = (term529 A B P lt2 s f p g z a).
Proof. exact (MK_COMB (@lem8256876 A B P lt2 s f p g a) (@lem8256877 A P z a)). Qed.
Lemma lem8256879 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term529 A B P lt2 s f p g z a) = (term530 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term529 A B P lt2 s f p g z a)). Qed.
Lemma lem8256880 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term528 A B P lt2 s f p g z a) = (term530 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8256878 A B P lt2 s f p g z a) (@lem8256879 A B P lt2 s z f p g a)). Qed.
Lemma lem8256881 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term531 A B P lt2 s f p g z) = (term532 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8256880 A B P lt2 s z f p g a)). Qed.
Lemma lem8256882 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8256883 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term533 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8256882 P) (@lem8256881 A B P lt2 s z f p g)). Qed.
Lemma lem8256884 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term535 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8256883 A B P lt2 s z f p g)). Qed.
Lemma lem8256885 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8256886 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term518 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256885 A P) (@lem8256884 A B P lt2 s f p g)). Qed.
Lemma lem8256887 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : ((term517 A B P lt2 s f p g) = (term518 A B P lt2 s f p g)) = ((term516 A B P lt2 s f p g) = (term537 A B P lt2 s f p g)).
Proof. exact (MK_COMB (@lem8256875 A B P lt2 s f p g) (@lem8256886 A B P lt2 s f p g)). Qed.
Lemma lem8256888 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term516 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (EQ_MP (@lem8256887 A B P lt2 s f p g) (@lem8256862 A B P lt2 s f p g)). Qed.
Lemma lem8256889 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term498 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (TRANS (@lem8256858 A B P lt2 s f p g) (@lem8256888 A B P lt2 s f p g)). Qed.
Lemma lem8256890 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term499 A B P lt2 s f p) = (term538 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8256889 A B P lt2 s f p g)). Qed.
Lemma lem8256891 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256892 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term500 A B P lt2 s f p) = (term539 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256891 A B) (@lem8256890 A B P lt2 s f p)). Qed.
Lemma lem8256894 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8256895 {A B P : Type'} (P' : type537 A B P) : (term445 A B P P') = (term446 A B P P').
Proof. exact (@lem8256894 (A -> B) (P -> A) P'). Qed.
Lemma lem8256896 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term540 A B P lt2 s f p) = (term541 A B P lt2 s f p).
Proof. exact (@lem8256895 A B P (term542 A B P lt2 s f p)). Qed.
Lemma lem8256897 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term543 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (eq_refl (term543 A B P lt2 s f p g)). Qed.
Lemma lem8256898 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8256899 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) : (term544 A B P lt2 s f p g z) = (term545 A B P lt2 s f p g z).
Proof. exact (MK_COMB (@lem8256897 A B P lt2 s f p g) (@lem8256898 A P z)). Qed.
Lemma lem8256900 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term545 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (eq_refl (term545 A B P lt2 s f p g z)). Qed.
Lemma lem8256901 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term544 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8256899 A B P lt2 s f p g z) (@lem8256900 A B P lt2 s z f p g)). Qed.
Lemma lem8256902 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term546 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8256901 A B P lt2 s z f p g)). Qed.
Lemma lem8256903 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8256904 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term547 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8256903 A P) (@lem8256902 A B P lt2 s f p g)). Qed.
Lemma lem8256905 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term548 A B P lt2 s f p) = (term538 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8256904 A B P lt2 s f p g)). Qed.
Lemma lem8256906 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256907 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term540 A B P lt2 s f p) = (term539 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256906 A B) (@lem8256905 A B P lt2 s f p)). Qed.
Lemma lem8256908 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256909 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term549 A B P lt2 s f p) = (term550 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256908) (@lem8256907 A B P lt2 s f p)). Qed.
Lemma lem8256910 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term543 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (eq_refl (term543 A B P lt2 s f p g)). Qed.
Lemma lem8256911 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8256912 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) (g : A -> B) : (term551 A B P lt2 s f p z g) = (term552 A B P lt2 s f p z g).
Proof. exact (MK_COMB (@lem8256910 A B P lt2 s f p g) (@lem8256911 A B P z g)). Qed.
Lemma lem8256913 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term552 A B P lt2 s f p z g) = (term553 A B P lt2 s z f p g).
Proof. exact (eq_refl (term552 A B P lt2 s f p z g)). Qed.
Lemma lem8256914 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term551 A B P lt2 s f p z g) = (term553 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8256912 A B P lt2 s f p z g) (@lem8256913 A B P lt2 s z f p g)). Qed.
Lemma lem8256915 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term554 A B P lt2 s f p z) = (term555 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8256914 A B P lt2 s z f p g)). Qed.
Lemma lem8256916 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256917 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term556 A B P lt2 s f p z) = (term557 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8256916 A B) (@lem8256915 A B P lt2 s z f p)). Qed.
Lemma lem8256918 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term558 A B P lt2 s f p) = (term559 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8256917 A B P lt2 s z f p)). Qed.
Lemma lem8256919 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8256920 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term541 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256919 A B P) (@lem8256918 A B P lt2 s f p)). Qed.
Lemma lem8256921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : ((term540 A B P lt2 s f p) = (term541 A B P lt2 s f p)) = ((term539 A B P lt2 s f p) = (term560 A B P lt2 s f p)).
Proof. exact (MK_COMB (@lem8256909 A B P lt2 s f p) (@lem8256920 A B P lt2 s f p)). Qed.
Lemma lem8256922 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term539 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (EQ_MP (@lem8256921 A B P lt2 s f p) (@lem8256896 A B P lt2 s f p)). Qed.
Lemma lem8256923 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term500 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (TRANS (@lem8256892 A B P lt2 s f p) (@lem8256922 A B P lt2 s f p)). Qed.
Lemma lem8256924 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term501 A B P lt2 s p) = (term561 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8256923 A B P lt2 s f p)). Qed.
Lemma lem8256925 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256926 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term502 A B P lt2 s p) = (term562 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256925 A B) (@lem8256924 A B P lt2 s p)). Qed.
Lemma lem8256928 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8256929 {A B P : Type'} (P' : type495 A B P) : (term470 A B P P') = (term471 A B P P').
Proof. exact (@lem8256928 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8256930 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term563 A B P lt2 s p) = (term564 A B P lt2 s p).
Proof. exact (@lem8256929 A B P (term565 A B P lt2 s p)). Qed.
Lemma lem8256931 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term566 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (eq_refl (term566 A B P lt2 s p f)). Qed.
Lemma lem8256932 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8256933 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) : (term567 A B P lt2 s p f z) = (term568 A B P lt2 s f p z).
Proof. exact (MK_COMB (@lem8256931 A B P lt2 s f p) (@lem8256932 A B P z)). Qed.
Lemma lem8256934 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term568 A B P lt2 s f p z) = (term557 A B P lt2 s z f p).
Proof. exact (eq_refl (term568 A B P lt2 s f p z)). Qed.
Lemma lem8256935 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term567 A B P lt2 s p f z) = (term557 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8256933 A B P lt2 s f p z) (@lem8256934 A B P lt2 s z f p)). Qed.
Lemma lem8256936 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term569 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8256935 A B P lt2 s z f p)). Qed.
Lemma lem8256937 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8256938 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term570 A B P lt2 s p f) = (term560 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8256937 A B P) (@lem8256936 A B P lt2 s f p)). Qed.
Lemma lem8256939 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term571 A B P lt2 s p) = (term561 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8256938 A B P lt2 s f p)). Qed.
Lemma lem8256940 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256941 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term563 A B P lt2 s p) = (term562 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256940 A B) (@lem8256939 A B P lt2 s p)). Qed.
Lemma lem8256942 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8256943 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term572 A B P lt2 s p) = (term573 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256942) (@lem8256941 A B P lt2 s p)). Qed.
Lemma lem8256944 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term566 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (eq_refl (term566 A B P lt2 s p f)). Qed.
Lemma lem8256945 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8256946 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z : type518 A B P) (f : A -> B) : (term574 A B P lt2 s p z f) = (term575 A B P lt2 s p z f).
Proof. exact (MK_COMB (@lem8256944 A B P lt2 s f p) (@lem8256945 A B P z f)). Qed.
Lemma lem8256947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term575 A B P lt2 s p z f) = (term576 A B P lt2 s z f p).
Proof. exact (eq_refl (term575 A B P lt2 s p z f)). Qed.
Lemma lem8256948 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term574 A B P lt2 s p z f) = (term576 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8256946 A B P lt2 s p z f) (@lem8256947 A B P lt2 s z f p)). Qed.
Lemma lem8256949 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term577 A B P lt2 s p z) = (term578 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8256948 A B P lt2 s z f p)). Qed.
Lemma lem8256950 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8256951 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term579 A B P lt2 s p z) = (term580 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8256950 A B) (@lem8256949 A B P lt2 s z p)). Qed.
Lemma lem8256952 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term581 A B P lt2 s p) = (term582 A B P lt2 s p).
Proof. exact (fun_ext (fun z : type518 A B P => @lem8256951 A B P lt2 s z p)). Qed.
Lemma lem8256953 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8256954 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term564 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8256953 A B P) (@lem8256952 A B P lt2 s p)). Qed.
Lemma lem8256955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : ((term563 A B P lt2 s p) = (term564 A B P lt2 s p)) = ((term562 A B P lt2 s p) = (term583 A B P lt2 s p)).
Proof. exact (MK_COMB (@lem8256943 A B P lt2 s p) (@lem8256954 A B P lt2 s p)). Qed.
Lemma lem8256956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term562 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (EQ_MP (@lem8256955 A B P lt2 s p) (@lem8256930 A B P lt2 s p)). Qed.
Lemma lem8256958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term502 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (TRANS (@lem8256926 A B P lt2 s p) (@lem8256956 A B P lt2 s p)). Qed.
Lemma lem8256959 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (TRANS (@lem8256726 A B P lt2 s p) (@lem8256958 A B P lt2 s p)). Qed.
Lemma lem8256960 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term583 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8256959 A B P lt2 s p) (@lem8256334 A B P lt2 s p h1)). Qed.
Lemma lem8256967 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term584 A B P lt2 s a f g z).
Proof. exact (@lem17265 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8256968 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term585 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8256967 A B P lt2 s a f g z)). Qed.
Lemma lem8256969 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8257022 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term586 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8256969 A) (@lem8256968 A B P lt2 s a f g)). Qed.
Lemma lem8257023 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term586 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8257022 A B P lt2 s a f g) (@lem8256335 A B P lt2 s a f g h1)). Qed.
Lemma lem8257032 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term965 A B P p P' f a) = (term966 A B P p P' f a).
Proof. exact (@lem17045 (p f a) (P' f a)). Qed.
Lemma lem8257044 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term965 A B P p P' g a) = (term966 A B P p P' g a).
Proof. exact (@lem17045 (p g a) (P' g a)). Qed.
Lemma lem8257047 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term177 A B P p P' g a) = (term177 A B P p P' g a).
Proof. exact (eq_refl (term177 A B P p P' g a)). Qed.
Lemma lem8257048 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257049 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term967 A B P p P' f a) = (term968 A B P p P' f a).
Proof. exact (MK_COMB (@lem8257048) (@lem8257032 A B P p P' f a)). Qed.
Lemma lem8257050 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term969 A B P f p P' g a) = (term970 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257049 A B P p P' f a) (@lem8257047 A B P p P' g a)). Qed.
Lemma lem8257052 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term971 A B P p P' f a) = (term971 A B P p P' f a).
Proof. exact (eq_refl (term971 A B P p P' f a)). Qed.
Lemma lem8257053 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term972 A B P f p P' g a) = (term973 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257052 A B P p P' f a) (@lem8257044 A B P p P' g a)). Qed.
Lemma lem8257054 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257055 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term974 A B P f p P' g a) = (term975 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257054) (@lem8257053 A B P f p P' g a)). Qed.
Lemma lem8257056 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term976 A B P f p P' g a) = (term977 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257055 A B P f p P' g a) (@lem8257050 A B P f p P' g a)). Qed.
Lemma lem8257057 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term964 A B P f p P' g a) = (term976 A B P f p P' g a).
Proof. exact (@lem17646 (term177 A B P p P' f a) (term177 A B P p P' g a)). Qed.
Lemma lem8257062 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term964 A B P f p P' g a) = (term977 A B P f p P' g a).
Proof. exact (TRANS (@lem8257057 A B P f p P' g a) (@lem8257056 A B P f p P' g a)). Qed.
Lemma lem8257063 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term964 A B P f p P' g a) : term977 A B P f p P' g a.
Proof. exact (EQ_MP (@lem8257062 A B P f p P' g a) (@lem8256340 A B P f p P' g a h1)). Qed.
Lemma lem8257064 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term580 A B P lt2 s z p.
Proof. exact (h1). Qed.
Lemma lem8257065 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term489 A B P p lt2 s z' P'.
Proof. exact (h1). Qed.
Lemma lem8257066 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8257071 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257072 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8257071 A B f x). Qed.
Lemma lem8257074 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8257072 A B f z). Qed.
Lemma lem8257079 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257080 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8257079 A B f x). Qed.
Lemma lem8257082 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8257080 A B g z). Qed.
Lemma lem8257083 {A B : Type'} (f : A -> B) (z : A) : (term602 A B f z) = (term603 A B f z).
Proof. exact (MK_COMB (@lem8257066 B) (@lem8257074 A B f z)). Qed.
Lemma lem8257084 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8257083 A B f z) (@lem8257082 A B g z)). Qed.
Lemma lem8257085 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257092 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257093 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257092 P A f x). Qed.
Lemma lem8257095 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8257093 A P s a). Qed.
Lemma lem8257096 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (lt2 z).
Proof. exact (eq_refl (lt2 z)). Qed.
Lemma lem8257097 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term341 A P lt2 z s a) = (term604 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8257096 A lt2 z) (@lem8257095 A P s a)). Qed.
Lemma lem8257099 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257100 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8257099 A (A -> Prop) f x). Qed.
Lemma lem8257101 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem8257100 A lt2 z). Qed.
Lemma lem8257102 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8257103 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term604 A P lt2 z s a) = (term605 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8257101 A lt2 z) (@lem8257102 A P s a)). Qed.
Lemma lem8257105 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257106 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8257105 A Prop f x). Qed.
Lemma lem8257107 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term605 A P lt2 z s a) = (term606 A P lt2 z s a).
Proof. exact (@lem8257106 A (@I (A -> A -> Prop) lt2 z) (@I (P -> A) s a)). Qed.
Lemma lem8257108 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term604 A P lt2 z s a) = (term606 A P lt2 z s a).
Proof. exact (TRANS (@lem8257103 A P lt2 z s a) (@lem8257107 A P lt2 z s a)). Qed.
Lemma lem8257109 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term341 A P lt2 z s a) = (term606 A P lt2 z s a).
Proof. exact (TRANS (@lem8257097 A P lt2 z s a) (@lem8257108 A P lt2 z s a)). Qed.
Lemma lem8257110 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term607 A P lt2 z s a) = (term608 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8257085) (@lem8257109 A P lt2 z s a)). Qed.
Lemma lem8257111 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257112 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term609 A P lt2 z s a) = (term610 A P lt2 z s a).
Proof. exact (MK_COMB (@lem8257111) (@lem8257110 A P lt2 z s a)). Qed.
Lemma lem8257113 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term584 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8257112 A P lt2 z s a) (@lem8257084 A B f g z)). Qed.
Lemma lem8257114 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term585 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8257113 A B P lt2 s a f g z)). Qed.
Lemma lem8257115 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8257116 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term586 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8257115 A) (@lem8257114 A B P lt2 s a f g)). Qed.
Lemma lem8257117 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8257116 A B P lt2 s a f g) (@lem8257023 A B P lt2 s a f g h1)). Qed.
Lemma lem8257124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257125 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257124 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257126 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8257125 A B P P' g). Qed.
Lemma lem8257127 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257128 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8257126 A B P P' g) (@lem8257127 P a)). Qed.
Lemma lem8257130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257131 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257130 P Prop f x). Qed.
Lemma lem8257132 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8257131 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8257134 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8257128 A B P P' g a) (@lem8257132 A B P P' g a)). Qed.
Lemma lem8257141 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257142 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257141 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257143 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8257142 A B P p g). Qed.
Lemma lem8257144 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257145 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8257143 A B P p g) (@lem8257144 P a)). Qed.
Lemma lem8257147 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257148 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257147 P Prop f x). Qed.
Lemma lem8257149 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8257148 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8257151 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8257145 A B P p g a) (@lem8257149 A B P p g a)). Qed.
Lemma lem8257152 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257153 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term616 A B P p g a).
Proof. exact (MK_COMB (@lem8257152) (@lem8257151 A B P p g a)). Qed.
Lemma lem8257154 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term177 A B P p P' g a) = (term978 A B P p P' g a).
Proof. exact (MK_COMB (@lem8257153 A B P p g a) (@lem8257134 A B P P' g a)). Qed.
Lemma lem8257155 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257162 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257163 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257162 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257164 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8257163 A B P P' f). Qed.
Lemma lem8257165 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257166 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8257164 A B P P' f) (@lem8257165 P a)). Qed.
Lemma lem8257168 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257169 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257168 P Prop f x). Qed.
Lemma lem8257170 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8257169 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8257172 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8257166 A B P P' f a) (@lem8257170 A B P P' f a)). Qed.
Lemma lem8257173 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (MK_COMB (@lem8257155) (@lem8257172 A B P P' f a)). Qed.
Lemma lem8257174 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257181 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257182 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257181 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257183 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8257182 A B P p f). Qed.
Lemma lem8257184 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257185 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8257183 A B P p f) (@lem8257184 P a)). Qed.
Lemma lem8257187 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257188 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257187 P Prop f x). Qed.
Lemma lem8257189 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8257188 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8257191 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8257185 A B P p f a) (@lem8257189 A B P p f a)). Qed.
Lemma lem8257192 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term373 A B P p f a) = (term615 A B P p f a).
Proof. exact (MK_COMB (@lem8257174) (@lem8257191 A B P p f a)). Qed.
Lemma lem8257193 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257194 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term618 A B P p f a).
Proof. exact (MK_COMB (@lem8257193) (@lem8257192 A B P p f a)). Qed.
Lemma lem8257195 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term966 A B P p P' f a) = (term806 A B P p P' f a).
Proof. exact (MK_COMB (@lem8257194 A B P p f a) (@lem8257173 A B P P' f a)). Qed.
Lemma lem8257196 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257197 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term968 A B P p P' f a) = (term979 A B P p P' f a).
Proof. exact (MK_COMB (@lem8257196) (@lem8257195 A B P p P' f a)). Qed.
Lemma lem8257198 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term970 A B P f p P' g a) = (term980 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257197 A B P p P' f a) (@lem8257154 A B P p P' g a)). Qed.
Lemma lem8257199 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257206 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257207 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257206 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257208 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8257207 A B P P' g). Qed.
Lemma lem8257209 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257210 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8257208 A B P P' g) (@lem8257209 P a)). Qed.
Lemma lem8257212 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257213 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257212 P Prop f x). Qed.
Lemma lem8257214 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8257213 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8257216 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8257210 A B P P' g a) (@lem8257214 A B P P' g a)). Qed.
Lemma lem8257217 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P' g a) = (term615 A B P P' g a).
Proof. exact (MK_COMB (@lem8257199) (@lem8257216 A B P P' g a)). Qed.
Lemma lem8257218 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257225 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257226 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257225 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257227 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8257226 A B P p g). Qed.
Lemma lem8257228 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257229 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8257227 A B P p g) (@lem8257228 P a)). Qed.
Lemma lem8257231 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257232 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257231 P Prop f x). Qed.
Lemma lem8257233 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8257232 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8257235 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8257229 A B P p g a) (@lem8257233 A B P p g a)). Qed.
Lemma lem8257236 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term373 A B P p g a) = (term615 A B P p g a).
Proof. exact (MK_COMB (@lem8257218) (@lem8257235 A B P p g a)). Qed.
Lemma lem8257237 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257238 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term618 A B P p g a).
Proof. exact (MK_COMB (@lem8257237) (@lem8257236 A B P p g a)). Qed.
Lemma lem8257239 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term966 A B P p P' g a) = (term806 A B P p P' g a).
Proof. exact (MK_COMB (@lem8257238 A B P p g a) (@lem8257217 A B P P' g a)). Qed.
Lemma lem8257246 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257247 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257246 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257248 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8257247 A B P P' f). Qed.
Lemma lem8257249 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257250 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8257248 A B P P' f) (@lem8257249 P a)). Qed.
Lemma lem8257252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257253 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257252 P Prop f x). Qed.
Lemma lem8257254 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8257253 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8257256 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8257250 A B P P' f a) (@lem8257254 A B P P' f a)). Qed.
Lemma lem8257263 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257264 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257263 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257265 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8257264 A B P p f). Qed.
Lemma lem8257266 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257267 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8257265 A B P p f) (@lem8257266 P a)). Qed.
Lemma lem8257269 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257270 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257269 P Prop f x). Qed.
Lemma lem8257271 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8257270 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8257273 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8257267 A B P p f a) (@lem8257271 A B P p f a)). Qed.
Lemma lem8257274 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257275 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term616 A B P p f a).
Proof. exact (MK_COMB (@lem8257274) (@lem8257273 A B P p f a)). Qed.
Lemma lem8257276 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term177 A B P p P' f a) = (term978 A B P p P' f a).
Proof. exact (MK_COMB (@lem8257275 A B P p f a) (@lem8257256 A B P P' f a)). Qed.
Lemma lem8257277 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257278 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term971 A B P p P' f a) = (term981 A B P p P' f a).
Proof. exact (MK_COMB (@lem8257277) (@lem8257276 A B P p P' f a)). Qed.
Lemma lem8257279 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term973 A B P f p P' g a) = (term982 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257278 A B P p P' f a) (@lem8257239 A B P p P' g a)). Qed.
Lemma lem8257280 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257281 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term975 A B P f p P' g a) = (term983 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257280) (@lem8257279 A B P f p P' g a)). Qed.
Lemma lem8257282 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) : (term977 A B P f p P' g a) = (term984 A B P f p P' g a).
Proof. exact (MK_COMB (@lem8257281 A B P f p P' g a) (@lem8257198 A B P f p P' g a)). Qed.
Lemma lem8257283 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term964 A B P f p P' g a) : term984 A B P f p P' g a.
Proof. exact (EQ_MP (@lem8257282 A B P f p P' g a) (@lem8257063 A B P f p P' g a h1)). Qed.
Lemma lem8257290 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257291 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257290 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257292 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8257291 A B P p g). Qed.
Lemma lem8257293 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257294 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8257292 A B P p g) (@lem8257293 P a)). Qed.
Lemma lem8257296 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257297 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257296 P Prop f x). Qed.
Lemma lem8257298 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8257297 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8257300 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8257294 A B P p g a) (@lem8257298 A B P p g a)). Qed.
Lemma lem8257301 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257308 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257309 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257308 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257310 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8257309 A B P p f). Qed.
Lemma lem8257311 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257312 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8257310 A B P p f) (@lem8257311 P a)). Qed.
Lemma lem8257314 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257315 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257314 P Prop f x). Qed.
Lemma lem8257316 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8257315 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8257318 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8257312 A B P p f a) (@lem8257316 A B P p f a)). Qed.
Lemma lem8257319 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term373 A B P p f a) = (term615 A B P p f a).
Proof. exact (MK_COMB (@lem8257301) (@lem8257318 A B P p f a)). Qed.
Lemma lem8257320 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257321 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term618 A B P p f a).
Proof. exact (MK_COMB (@lem8257320) (@lem8257319 A B P p f a)). Qed.
Lemma lem8257322 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term626 A B P f p g a) = (term627 A B P f p g a).
Proof. exact (MK_COMB (@lem8257321 A B P p f a) (@lem8257300 A B P p g a)). Qed.
Lemma lem8257323 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257330 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257331 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257330 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257332 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8257331 A B P p g). Qed.
Lemma lem8257333 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257334 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8257332 A B P p g) (@lem8257333 P a)). Qed.
Lemma lem8257336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257337 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257336 P Prop f x). Qed.
Lemma lem8257338 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8257337 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8257340 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8257334 A B P p g a) (@lem8257338 A B P p g a)). Qed.
Lemma lem8257341 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term373 A B P p g a) = (term615 A B P p g a).
Proof. exact (MK_COMB (@lem8257323) (@lem8257340 A B P p g a)). Qed.
Lemma lem8257348 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257349 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257348 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257350 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8257349 A B P p f). Qed.
Lemma lem8257351 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257352 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8257350 A B P p f) (@lem8257351 P a)). Qed.
Lemma lem8257354 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257355 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257354 P Prop f x). Qed.
Lemma lem8257356 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8257355 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8257358 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8257352 A B P p f a) (@lem8257356 A B P p f a)). Qed.
Lemma lem8257359 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257360 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term628 A B P p f a) = (term629 A B P p f a).
Proof. exact (MK_COMB (@lem8257359) (@lem8257358 A B P p f a)). Qed.
Lemma lem8257361 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term630 A B P f p g a) = (term631 A B P f p g a).
Proof. exact (MK_COMB (@lem8257360 A B P p f a) (@lem8257341 A B P p g a)). Qed.
Lemma lem8257362 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257363 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term632 A B P f p g a) = (term633 A B P f p g a).
Proof. exact (MK_COMB (@lem8257362) (@lem8257361 A B P f p g a)). Qed.
Lemma lem8257364 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term634 A B P f p g a).
Proof. exact (MK_COMB (@lem8257363 A B P f p g a) (@lem8257322 A B P f p g a)). Qed.
Lemma lem8257365 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257366 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8257367 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8257376 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257377 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8257376 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8257378 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8257377 A B P z f). Qed.
Lemma lem8257379 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257380 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8257378 A B P z f) (@lem8257379 A B g)). Qed.
Lemma lem8257382 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257383 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8257382 (A -> B) (P -> A) f x). Qed.
Lemma lem8257384 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term635 A B P z f g).
Proof. exact (@lem8257383 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8257385 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term635 A B P z f g).
Proof. exact (TRANS (@lem8257380 A B P z f g) (@lem8257384 A B P z f g)). Qed.
Lemma lem8257386 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257387 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term636 A B P z f g a).
Proof. exact (MK_COMB (@lem8257385 A B P z f g) (@lem8257386 P a)). Qed.
Lemma lem8257389 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257390 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257389 P A f x). Qed.
Lemma lem8257391 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z f g a) = (term637 A B P z f g a).
Proof. exact (@lem8257390 A P (term635 A B P z f g) a). Qed.
Lemma lem8257393 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term637 A B P z f g a).
Proof. exact (TRANS (@lem8257387 A B P z f g a) (@lem8257391 A B P z f g a)). Qed.
Lemma lem8257394 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z f g a) = (term639 A B P z f g a).
Proof. exact (MK_COMB (@lem8257367 A B f) (@lem8257393 A B P z f g a)). Qed.
Lemma lem8257396 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257397 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8257396 A B f x). Qed.
Lemma lem8257398 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term639 A B P z f g a) = (term640 A B P z f g a).
Proof. exact (@lem8257397 A B f (term637 A B P z f g a)). Qed.
Lemma lem8257399 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z f g a) = (term640 A B P z f g a).
Proof. exact (TRANS (@lem8257394 A B P z f g a) (@lem8257398 A B P z f g a)). Qed.
Lemma lem8257400 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257409 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257410 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8257409 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8257411 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8257410 A B P z f). Qed.
Lemma lem8257412 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257413 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8257411 A B P z f) (@lem8257412 A B g)). Qed.
Lemma lem8257415 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257416 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8257415 (A -> B) (P -> A) f x). Qed.
Lemma lem8257417 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term635 A B P z f g).
Proof. exact (@lem8257416 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8257418 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term635 A B P z f g).
Proof. exact (TRANS (@lem8257413 A B P z f g) (@lem8257417 A B P z f g)). Qed.
Lemma lem8257419 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257420 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term636 A B P z f g a).
Proof. exact (MK_COMB (@lem8257418 A B P z f g) (@lem8257419 P a)). Qed.
Lemma lem8257422 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257423 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257422 P A f x). Qed.
Lemma lem8257424 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z f g a) = (term637 A B P z f g a).
Proof. exact (@lem8257423 A P (term635 A B P z f g) a). Qed.
Lemma lem8257426 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term637 A B P z f g a).
Proof. exact (TRANS (@lem8257420 A B P z f g a) (@lem8257424 A B P z f g a)). Qed.
Lemma lem8257427 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z f g a) = (term642 A B P z f g a).
Proof. exact (MK_COMB (@lem8257400 A B g) (@lem8257426 A B P z f g a)). Qed.
Lemma lem8257429 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257430 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8257429 A B f x). Qed.
Lemma lem8257431 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term642 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8257430 A B g (term637 A B P z f g a)). Qed.
Lemma lem8257432 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (TRANS (@lem8257427 A B P z f g a) (@lem8257431 A B P z f g a)). Qed.
Lemma lem8257433 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term644 A B P z f g a) = (term645 A B P z f g a).
Proof. exact (MK_COMB (@lem8257366 B) (@lem8257399 A B P z f g a)). Qed.
Lemma lem8257434 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : ((term638 A B P z f g a) = (term641 A B P z f g a)) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (MK_COMB (@lem8257433 A B P z f g a) (@lem8257432 A B P z f g a)). Qed.
Lemma lem8257435 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term646 A B P z f g a) = (term647 A B P z f g a).
Proof. exact (MK_COMB (@lem8257365) (@lem8257434 A B P z f g a)). Qed.
Lemma lem8257436 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8257445 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257446 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8257445 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8257447 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8257446 A B P z f). Qed.
Lemma lem8257448 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257449 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8257447 A B P z f) (@lem8257448 A B g)). Qed.
Lemma lem8257451 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257452 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8257451 (A -> B) (P -> A) f x). Qed.
Lemma lem8257453 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term635 A B P z f g).
Proof. exact (@lem8257452 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8257454 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term635 A B P z f g).
Proof. exact (TRANS (@lem8257449 A B P z f g) (@lem8257453 A B P z f g)). Qed.
Lemma lem8257455 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257456 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term636 A B P z f g a).
Proof. exact (MK_COMB (@lem8257454 A B P z f g) (@lem8257455 P a)). Qed.
Lemma lem8257458 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257459 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257458 P A f x). Qed.
Lemma lem8257460 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z f g a) = (term637 A B P z f g a).
Proof. exact (@lem8257459 A P (term635 A B P z f g) a). Qed.
Lemma lem8257462 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term637 A B P z f g a).
Proof. exact (TRANS (@lem8257456 A B P z f g a) (@lem8257460 A B P z f g a)). Qed.
Lemma lem8257467 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257468 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257467 P A f x). Qed.
Lemma lem8257470 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8257468 A P s a). Qed.
Lemma lem8257471 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term648 A B P lt2 z f g a) = (term649 A B P lt2 z f g a).
Proof. exact (MK_COMB (@lem8257436 A lt2) (@lem8257462 A B P z f g a)). Qed.
Lemma lem8257472 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z f g s a) = (term651 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8257471 A B P lt2 z f g a) (@lem8257470 A P s a)). Qed.
Lemma lem8257474 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257475 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8257474 A (A -> Prop) f x). Qed.
Lemma lem8257476 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term649 A B P lt2 z f g a) = (term652 A B P lt2 z f g a).
Proof. exact (@lem8257475 A lt2 (term637 A B P z f g a)). Qed.
Lemma lem8257477 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8257478 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z f g s a) = (term653 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8257476 A B P lt2 z f g a) (@lem8257477 A P s a)). Qed.
Lemma lem8257480 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257481 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8257480 A Prop f x). Qed.
Lemma lem8257482 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term653 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8257481 A (term652 A B P lt2 z f g a) (@I (P -> A) s a)). Qed.
Lemma lem8257483 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8257478 A B P lt2 z f g s a) (@lem8257482 A B P lt2 z f g s a)). Qed.
Lemma lem8257484 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8257472 A B P lt2 z f g s a) (@lem8257483 A B P lt2 z f g s a)). Qed.
Lemma lem8257485 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257486 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term655 A B P lt2 z f g s a) = (term656 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8257485) (@lem8257484 A B P lt2 z f g s a)). Qed.
Lemma lem8257487 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term657 A B P lt2 s z f g a) = (term658 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8257486 A B P lt2 z f g s a) (@lem8257435 A B P z f g a)). Qed.
Lemma lem8257488 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257489 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term659 A B P lt2 s z f g a) = (term660 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8257488) (@lem8257487 A B P lt2 s z f g a)). Qed.
Lemma lem8257490 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term661 A B P lt2 s z f p g a) = (term662 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8257489 A B P lt2 s z f g a) (@lem8257364 A B P f p g a)). Qed.
Lemma lem8257491 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term663 A B P lt2 s z f p g) = (term664 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8257490 A B P lt2 s z f p g a)). Qed.
Lemma lem8257492 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8257493 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term665 A B P lt2 s z f p g) = (term666 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8257492 P) (@lem8257491 A B P lt2 s z f p g)). Qed.
Lemma lem8257494 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term667 A B P lt2 s z f p) = (term668 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8257493 A B P lt2 s z f p g)). Qed.
Lemma lem8257495 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8257496 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term576 A B P lt2 s z f p) = (term669 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8257495 A B) (@lem8257494 A B P lt2 s z f p)). Qed.
Lemma lem8257497 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term578 A B P lt2 s z p) = (term670 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8257496 A B P lt2 s z f p)). Qed.
Lemma lem8257498 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8257499 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term580 A B P lt2 s z p) = (term671 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8257498 A B) (@lem8257497 A B P lt2 s z p)). Qed.
Lemma lem8257500 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term671 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8257499 A B P lt2 s z p) (@lem8257064 A B P lt2 s z p h1)). Qed.
Lemma lem8257507 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257508 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257507 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257509 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8257508 A B P P' g). Qed.
Lemma lem8257510 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257511 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8257509 A B P P' g) (@lem8257510 P a)). Qed.
Lemma lem8257513 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257514 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257513 P Prop f x). Qed.
Lemma lem8257515 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8257514 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8257517 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8257511 A B P P' g a) (@lem8257515 A B P P' g a)). Qed.
Lemma lem8257518 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257525 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257526 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257525 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257527 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8257526 A B P P' f). Qed.
Lemma lem8257528 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257529 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8257527 A B P P' f) (@lem8257528 P a)). Qed.
Lemma lem8257531 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257532 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257531 P Prop f x). Qed.
Lemma lem8257533 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8257532 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8257535 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8257529 A B P P' f a) (@lem8257533 A B P P' f a)). Qed.
Lemma lem8257536 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (MK_COMB (@lem8257518) (@lem8257535 A B P P' f a)). Qed.
Lemma lem8257537 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257538 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term351 A B P P' f a) = (term618 A B P P' f a).
Proof. exact (MK_COMB (@lem8257537) (@lem8257536 A B P P' f a)). Qed.
Lemma lem8257539 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term626 A B P f P' g a) = (term627 A B P f P' g a).
Proof. exact (MK_COMB (@lem8257538 A B P P' f a) (@lem8257517 A B P P' g a)). Qed.
Lemma lem8257540 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257547 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257548 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257547 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257549 {A B P : Type'} (P' : type560 A B P) (g : A -> B) : (P' g) = (@I ((A -> B) -> P -> Prop) P' g).
Proof. exact (@lem8257548 A B P P' g). Qed.
Lemma lem8257550 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257551 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (@I ((A -> B) -> P -> Prop) P' g a).
Proof. exact (MK_COMB (@lem8257549 A B P P' g) (@lem8257550 P a)). Qed.
Lemma lem8257553 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257554 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257553 P Prop f x). Qed.
Lemma lem8257555 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8257554 P (@I ((A -> B) -> P -> Prop) P' g) a). Qed.
Lemma lem8257557 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (P' g a) = (term614 A B P P' g a).
Proof. exact (TRANS (@lem8257551 A B P P' g a) (@lem8257555 A B P P' g a)). Qed.
Lemma lem8257558 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P' g a) = (term615 A B P P' g a).
Proof. exact (MK_COMB (@lem8257540) (@lem8257557 A B P P' g a)). Qed.
Lemma lem8257565 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257566 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257565 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257567 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8257566 A B P P' f). Qed.
Lemma lem8257568 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257569 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8257567 A B P P' f) (@lem8257568 P a)). Qed.
Lemma lem8257571 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257572 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257571 P Prop f x). Qed.
Lemma lem8257573 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8257572 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8257575 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8257569 A B P P' f a) (@lem8257573 A B P P' f a)). Qed.
Lemma lem8257576 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257577 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term628 A B P P' f a) = (term629 A B P P' f a).
Proof. exact (MK_COMB (@lem8257576) (@lem8257575 A B P P' f a)). Qed.
Lemma lem8257578 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term630 A B P f P' g a) = (term631 A B P f P' g a).
Proof. exact (MK_COMB (@lem8257577 A B P P' f a) (@lem8257558 A B P P' g a)). Qed.
Lemma lem8257579 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257580 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term632 A B P f P' g a) = (term633 A B P f P' g a).
Proof. exact (MK_COMB (@lem8257579) (@lem8257578 A B P f P' g a)). Qed.
Lemma lem8257581 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term634 A B P f P' g a).
Proof. exact (MK_COMB (@lem8257580 A B P f P' g a) (@lem8257539 A B P f P' g a)). Qed.
Lemma lem8257582 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257583 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8257584 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8257593 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257594 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8257593 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8257595 {A B P : Type'} (z' : type518 A B P) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f).
Proof. exact (@lem8257594 A B P z' f). Qed.
Lemma lem8257596 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257597 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f g).
Proof. exact (MK_COMB (@lem8257595 A B P z' f) (@lem8257596 A B g)). Qed.
Lemma lem8257599 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257600 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8257599 (A -> B) (P -> A) f x). Qed.
Lemma lem8257601 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z' f g) = (term635 A B P z' f g).
Proof. exact (@lem8257600 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z' f) g). Qed.
Lemma lem8257602 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (term635 A B P z' f g).
Proof. exact (TRANS (@lem8257597 A B P z' f g) (@lem8257601 A B P z' f g)). Qed.
Lemma lem8257603 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257604 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term636 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257602 A B P z' f g) (@lem8257603 P a)). Qed.
Lemma lem8257606 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257607 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257606 P A f x). Qed.
Lemma lem8257608 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z' f g a) = (term637 A B P z' f g a).
Proof. exact (@lem8257607 A P (term635 A B P z' f g) a). Qed.
Lemma lem8257610 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term637 A B P z' f g a).
Proof. exact (TRANS (@lem8257604 A B P z' f g a) (@lem8257608 A B P z' f g a)). Qed.
Lemma lem8257611 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z' f g a) = (term639 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257584 A B f) (@lem8257610 A B P z' f g a)). Qed.
Lemma lem8257613 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257614 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8257613 A B f x). Qed.
Lemma lem8257615 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term639 A B P z' f g a) = (term640 A B P z' f g a).
Proof. exact (@lem8257614 A B f (term637 A B P z' f g a)). Qed.
Lemma lem8257616 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term638 A B P z' f g a) = (term640 A B P z' f g a).
Proof. exact (TRANS (@lem8257611 A B P z' f g a) (@lem8257615 A B P z' f g a)). Qed.
Lemma lem8257617 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257626 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257627 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8257626 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8257628 {A B P : Type'} (z' : type518 A B P) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f).
Proof. exact (@lem8257627 A B P z' f). Qed.
Lemma lem8257629 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257630 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f g).
Proof. exact (MK_COMB (@lem8257628 A B P z' f) (@lem8257629 A B g)). Qed.
Lemma lem8257632 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257633 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8257632 (A -> B) (P -> A) f x). Qed.
Lemma lem8257634 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z' f g) = (term635 A B P z' f g).
Proof. exact (@lem8257633 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z' f) g). Qed.
Lemma lem8257635 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (term635 A B P z' f g).
Proof. exact (TRANS (@lem8257630 A B P z' f g) (@lem8257634 A B P z' f g)). Qed.
Lemma lem8257636 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257637 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term636 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257635 A B P z' f g) (@lem8257636 P a)). Qed.
Lemma lem8257639 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257640 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257639 P A f x). Qed.
Lemma lem8257641 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z' f g a) = (term637 A B P z' f g a).
Proof. exact (@lem8257640 A P (term635 A B P z' f g) a). Qed.
Lemma lem8257643 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term637 A B P z' f g a).
Proof. exact (TRANS (@lem8257637 A B P z' f g a) (@lem8257641 A B P z' f g a)). Qed.
Lemma lem8257644 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z' f g a) = (term642 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257617 A B g) (@lem8257643 A B P z' f g a)). Qed.
Lemma lem8257646 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257647 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8257646 A B f x). Qed.
Lemma lem8257648 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term642 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (@lem8257647 A B g (term637 A B P z' f g a)). Qed.
Lemma lem8257649 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term641 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (TRANS (@lem8257644 A B P z' f g a) (@lem8257648 A B P z' f g a)). Qed.
Lemma lem8257650 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term644 A B P z' f g a) = (term645 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257583 B) (@lem8257616 A B P z' f g a)). Qed.
Lemma lem8257651 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : ((term638 A B P z' f g a) = (term641 A B P z' f g a)) = ((term640 A B P z' f g a) = (term643 A B P z' f g a)).
Proof. exact (MK_COMB (@lem8257650 A B P z' f g a) (@lem8257649 A B P z' f g a)). Qed.
Lemma lem8257652 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term646 A B P z' f g a) = (term647 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257582) (@lem8257651 A B P z' f g a)). Qed.
Lemma lem8257653 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8257662 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257663 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8257662 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8257664 {A B P : Type'} (z' : type518 A B P) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f).
Proof. exact (@lem8257663 A B P z' f). Qed.
Lemma lem8257665 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8257666 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z' f g).
Proof. exact (MK_COMB (@lem8257664 A B P z' f) (@lem8257665 A B g)). Qed.
Lemma lem8257668 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257669 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8257668 (A -> B) (P -> A) f x). Qed.
Lemma lem8257670 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z' f g) = (term635 A B P z' f g).
Proof. exact (@lem8257669 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z' f) g). Qed.
Lemma lem8257671 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) : (z' f g) = (term635 A B P z' f g).
Proof. exact (TRANS (@lem8257666 A B P z' f g) (@lem8257670 A B P z' f g)). Qed.
Lemma lem8257672 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257673 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term636 A B P z' f g a).
Proof. exact (MK_COMB (@lem8257671 A B P z' f g) (@lem8257672 P a)). Qed.
Lemma lem8257675 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257676 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257675 P A f x). Qed.
Lemma lem8257677 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term636 A B P z' f g a) = (term637 A B P z' f g a).
Proof. exact (@lem8257676 A P (term635 A B P z' f g) a). Qed.
Lemma lem8257679 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z' f g a) = (term637 A B P z' f g a).
Proof. exact (TRANS (@lem8257673 A B P z' f g a) (@lem8257677 A B P z' f g a)). Qed.
Lemma lem8257684 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257685 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8257684 P A f x). Qed.
Lemma lem8257687 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8257685 A P s a). Qed.
Lemma lem8257688 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term648 A B P lt2 z' f g a) = (term649 A B P lt2 z' f g a).
Proof. exact (MK_COMB (@lem8257653 A lt2) (@lem8257679 A B P z' f g a)). Qed.
Lemma lem8257689 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z' f g s a) = (term651 A B P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8257688 A B P lt2 z' f g a) (@lem8257687 A P s a)). Qed.
Lemma lem8257691 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257692 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8257691 A (A -> Prop) f x). Qed.
Lemma lem8257693 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term649 A B P lt2 z' f g a) = (term652 A B P lt2 z' f g a).
Proof. exact (@lem8257692 A lt2 (term637 A B P z' f g a)). Qed.
Lemma lem8257694 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8257695 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z' f g s a) = (term653 A B P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8257693 A B P lt2 z' f g a) (@lem8257694 A P s a)). Qed.
Lemma lem8257697 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257698 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8257697 A Prop f x). Qed.
Lemma lem8257699 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term653 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (@lem8257698 A (term652 A B P lt2 z' f g a) (@I (P -> A) s a)). Qed.
Lemma lem8257700 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term651 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (TRANS (@lem8257695 A B P lt2 z' f g s a) (@lem8257699 A B P lt2 z' f g s a)). Qed.
Lemma lem8257701 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term650 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (TRANS (@lem8257689 A B P lt2 z' f g s a) (@lem8257700 A B P lt2 z' f g s a)). Qed.
Lemma lem8257702 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257703 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term655 A B P lt2 z' f g s a) = (term656 A B P lt2 z' f g s a).
Proof. exact (MK_COMB (@lem8257702) (@lem8257701 A B P lt2 z' f g s a)). Qed.
Lemma lem8257704 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term657 A B P lt2 s z' f g a) = (term658 A B P lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8257703 A B P lt2 z' f g s a) (@lem8257652 A B P z' f g a)). Qed.
Lemma lem8257705 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257712 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257713 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257712 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257714 {A B P : Type'} (p : type560 A B P) (g : A -> B) : (p g) = (@I ((A -> B) -> P -> Prop) p g).
Proof. exact (@lem8257713 A B P p g). Qed.
Lemma lem8257715 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257716 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (@I ((A -> B) -> P -> Prop) p g a).
Proof. exact (MK_COMB (@lem8257714 A B P p g) (@lem8257715 P a)). Qed.
Lemma lem8257718 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257719 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257718 P Prop f x). Qed.
Lemma lem8257720 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p g a) = (term614 A B P p g a).
Proof. exact (@lem8257719 P (@I ((A -> B) -> P -> Prop) p g) a). Qed.
Lemma lem8257722 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (p g a) = (term614 A B P p g a).
Proof. exact (TRANS (@lem8257716 A B P p g a) (@lem8257720 A B P p g a)). Qed.
Lemma lem8257723 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term373 A B P p g a) = (term615 A B P p g a).
Proof. exact (MK_COMB (@lem8257705) (@lem8257722 A B P p g a)). Qed.
Lemma lem8257724 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257725 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term618 A B P p g a).
Proof. exact (MK_COMB (@lem8257724) (@lem8257723 A B P p g a)). Qed.
Lemma lem8257726 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term672 A B P p lt2 s z' f g a) = (term673 A B P p lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8257725 A B P p g a) (@lem8257704 A B P lt2 s z' f g a)). Qed.
Lemma lem8257727 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8257734 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257735 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8257734 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8257736 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8257735 A B P p f). Qed.
Lemma lem8257737 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8257738 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8257736 A B P p f) (@lem8257737 P a)). Qed.
Lemma lem8257740 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8257741 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8257740 P Prop f x). Qed.
Lemma lem8257742 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8257741 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8257744 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8257738 A B P p f a) (@lem8257742 A B P p f a)). Qed.
Lemma lem8257745 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term373 A B P p f a) = (term615 A B P p f a).
Proof. exact (MK_COMB (@lem8257727) (@lem8257744 A B P p f a)). Qed.
Lemma lem8257746 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257747 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term618 A B P p f a).
Proof. exact (MK_COMB (@lem8257746) (@lem8257745 A B P p f a)). Qed.
Lemma lem8257748 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term674 A B P p lt2 s z' f g a) = (term675 A B P p lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8257747 A B P p f a) (@lem8257726 A B P p lt2 s z' f g a)). Qed.
Lemma lem8257749 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8257750 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term676 A B P p lt2 s z' f g a) = (term677 A B P p lt2 s z' f g a).
Proof. exact (MK_COMB (@lem8257749) (@lem8257748 A B P p lt2 s z' f g a)). Qed.
Lemma lem8257751 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term678 A B P p lt2 s z' f P' g a) = (term679 A B P p lt2 s z' f P' g a).
Proof. exact (MK_COMB (@lem8257750 A B P p lt2 s z' f g a) (@lem8257581 A B P f P' g a)). Qed.
Lemma lem8257752 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term680 A B P p lt2 s z' f P' g) = (term681 A B P p lt2 s z' f P' g).
Proof. exact (fun_ext (fun a : P => @lem8257751 A B P p lt2 s z' f P' g a)). Qed.
Lemma lem8257753 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8257754 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term682 A B P p lt2 s z' f P' g) = (term683 A B P p lt2 s z' f P' g).
Proof. exact (MK_COMB (@lem8257753 P) (@lem8257752 A B P p lt2 s z' f P' g)). Qed.
Lemma lem8257755 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term684 A B P p lt2 s z' f P') = (term685 A B P p lt2 s z' f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8257754 A B P p lt2 s z' f P' g)). Qed.
Lemma lem8257756 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8257757 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term485 A B P p lt2 s z' f P') = (term686 A B P p lt2 s z' f P').
Proof. exact (MK_COMB (@lem8257756 A B) (@lem8257755 A B P p lt2 s z' f P')). Qed.
Lemma lem8257758 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) : (term487 A B P p lt2 s z' P') = (term687 A B P p lt2 s z' P').
Proof. exact (fun_ext (fun f : A -> B => @lem8257757 A B P p lt2 s z' f P')). Qed.
Lemma lem8257759 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8257760 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) : (term489 A B P p lt2 s z' P') = (term688 A B P p lt2 s z' P').
Proof. exact (MK_COMB (@lem8257759 A B) (@lem8257758 A B P p lt2 s z' P')). Qed.
Lemma lem8257761 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term688 A B P p lt2 s z' P'.
Proof. exact (EQ_MP (@lem8257760 A B P p lt2 s z' P') (@lem8257065 A B P p lt2 s z' P' h1)). Qed.
Lemma lem8257762 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term982 A B P f p P' g a.
Proof. exact (h1). Qed.
Lemma lem8257763 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term980 A B P f p P' g a.
Proof. exact (h1). Qed.
Lemma lem8257764 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term806 A B P p P' g a.
Proof. exact (proj2 (@lem8257762 A B P f p P' g a h1)). Qed.
Lemma lem8257765 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term978 A B P p P' f a.
Proof. exact (proj1 (@lem8257762 A B P f p P' g a h1)). Qed.
Lemma lem8257770 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term978 A B P p P' g a.
Proof. exact (proj2 (@lem8257763 A B P f p P' g a h1)). Qed.
Lemma lem8257771 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term806 A B P p P' f a.
Proof. exact (proj1 (@lem8257763 A B P f p P' g a h1)). Qed.
Lemma lem8257783 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8257784 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8257783 A B P lt2 s a f g z)). Qed.
Lemma lem8257785 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8257787 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8257785 A) (@lem8257784 A B P lt2 s a f g)). Qed.
Lemma lem8257788 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8257787 A B P lt2 s a f g) (@lem8257117 A B P lt2 s a f g h1)). Qed.
Lemma lem8257815 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8257822 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8257829 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8257830 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257831 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8257830) (@lem8257829 A B P lt2 s z f p g a)). Qed.
Lemma lem8257832 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8257831 A B P lt2 s z f p g a) (@lem8257822 A B P lt2 s z f p g a)). Qed.
Lemma lem8257834 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8257815 A B P lt2 s z f p g a) (@lem8257832 A B P lt2 s z f p g a)). Qed.
Lemma lem8257835 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8257834 A B P lt2 s z f p g a)). Qed.
Lemma lem8257836 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8257837 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8257836 P) (@lem8257835 A B P lt2 s z f p g)). Qed.
Lemma lem8257838 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8257837 A B P lt2 s z f p g)). Qed.
Lemma lem8257839 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8257840 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8257839 A B) (@lem8257838 A B P lt2 s z f p)). Qed.
Lemma lem8257841 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8257840 A B P lt2 s z f p)). Qed.
Lemma lem8257842 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8257844 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8257842 A B) (@lem8257841 A B P lt2 s z p)). Qed.
Lemma lem8257845 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8257844 A B P lt2 s z p) (@lem8257500 A B P lt2 s z p h1)). Qed.
Lemma lem8257938 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8257946 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8257947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8257946 A B P lt2 s a f g z)). Qed.
Lemma lem8257948 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8257950 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8257948 A) (@lem8257947 A B P lt2 s a f g)). Qed.
Lemma lem8257951 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8257950 A B P lt2 s a f g) (@lem8257117 A B P lt2 s a f g h1)). Qed.
Lemma lem8257978 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8257985 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8257992 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8257993 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8257994 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8257993) (@lem8257992 A B P lt2 s z f p g a)). Qed.
Lemma lem8257995 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8257994 A B P lt2 s z f p g a) (@lem8257985 A B P lt2 s z f p g a)). Qed.
Lemma lem8257997 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8257978 A B P lt2 s z f p g a) (@lem8257995 A B P lt2 s z f p g a)). Qed.
Lemma lem8257998 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8257997 A B P lt2 s z f p g a)). Qed.
Lemma lem8257999 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8258000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8257999 P) (@lem8257998 A B P lt2 s z f p g)). Qed.
Lemma lem8258001 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8258000 A B P lt2 s z f p g)). Qed.
Lemma lem8258002 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258003 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8258002 A B) (@lem8258001 A B P lt2 s z f p)). Qed.
Lemma lem8258004 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8258003 A B P lt2 s z f p)). Qed.
Lemma lem8258005 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258007 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8258005 A B) (@lem8258004 A B P lt2 s z p)). Qed.
Lemma lem8258008 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8258007 A B P lt2 s z p) (@lem8257500 A B P lt2 s z p h1)). Qed.
Lemma lem8258026 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term634 A B P f P' g a) = (term634 A B P f P' g a).
Proof. exact (eq_refl (term634 A B P f P' g a)). Qed.
Lemma lem8258043 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term673 A B P p lt2 s z' f g a) = (term703 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term654 A B P lt2 z' f g s a) (term615 A B P p g a) (term647 A B P z' f g a)). Qed.
Lemma lem8258046 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term618 A B P p f a) = (term618 A B P p f a).
Proof. exact (eq_refl (term618 A B P p f a)). Qed.
Lemma lem8258047 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term704 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8258046 A B P p f a) (@lem8258043 A B P lt2 s p z' f g a)). Qed.
Lemma lem8258054 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term704 A B P lt2 s p z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term706 A B P p lt2 z' f g s a) (term615 A B P p f a) (term707 A B P p z' f g a)). Qed.
Lemma lem8258055 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (TRANS (@lem8258047 A B P lt2 s p z' f g a) (@lem8258054 A B P lt2 s p z' f g a)). Qed.
Lemma lem8258056 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8258057 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term677 A B P p lt2 s z' f g a) = (term708 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8258056) (@lem8258055 A B P lt2 s p z' f g a)). Qed.
Lemma lem8258058 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term709 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8258057 A B P lt2 s p z' f g a) (@lem8258026 A B P f P' g a)). Qed.
Lemma lem8258059 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term710 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19490 (term631 A B P f P' g a) (term705 A B P lt2 s p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8258066 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term711 A B P lt2 s p z' f P' g a) = (term712 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8258073 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term715 A B P lt2 s p z' f P' g a) = (term716 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term631 A B P f P' g a)). Qed.
Lemma lem8258074 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8258075 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term717 A B P lt2 s p z' f P' g a) = (term718 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8258074) (@lem8258073 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258076 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term710 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8258075 A B P lt2 s p z' f P' g a) (@lem8258066 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258077 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8258059 A B P lt2 s p z' f P' g a) (@lem8258076 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258078 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8258058 A B P lt2 s p z' f P' g a) (@lem8258077 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258079 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term681 A B P p lt2 s z' f P' g) = (term720 A B P lt2 s p z' f P' g).
Proof. exact (fun_ext (fun a : P => @lem8258078 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258080 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8258081 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term683 A B P p lt2 s z' f P' g) = (term721 A B P lt2 s p z' f P' g).
Proof. exact (MK_COMB (@lem8258080 P) (@lem8258079 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8258082 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term685 A B P p lt2 s z' f P') = (term722 A B P lt2 s p z' f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8258081 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8258083 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258084 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term686 A B P p lt2 s z' f P') = (term723 A B P lt2 s p z' f P').
Proof. exact (MK_COMB (@lem8258083 A B) (@lem8258082 A B P lt2 s p z' f P')). Qed.
Lemma lem8258085 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term687 A B P p lt2 s z' P') = (term724 A B P lt2 s p z' P').
Proof. exact (fun_ext (fun f : A -> B => @lem8258084 A B P lt2 s p z' f P')). Qed.
Lemma lem8258086 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258088 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term688 A B P p lt2 s z' P') = (term725 A B P lt2 s p z' P').
Proof. exact (MK_COMB (@lem8258086 A B) (@lem8258085 A B P lt2 s p z' P')). Qed.
Lemma lem8258089 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term725 A B P lt2 s p z' P'.
Proof. exact (EQ_MP (@lem8258088 A B P lt2 s p z' P') (@lem8257761 A B P p lt2 s z' P' h1)). Qed.
Lemma lem8258101 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term615 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8258109 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8258110 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8258109 A B P lt2 s a f g z)). Qed.
Lemma lem8258111 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8258113 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8258111 A) (@lem8258110 A B P lt2 s a f g)). Qed.
Lemma lem8258114 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8258113 A B P lt2 s a f g) (@lem8257117 A B P lt2 s a f g h1)). Qed.
Lemma lem8258141 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8258148 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8258155 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8258156 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8258157 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8258156) (@lem8258155 A B P lt2 s z f p g a)). Qed.
Lemma lem8258158 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8258157 A B P lt2 s z f p g a) (@lem8258148 A B P lt2 s z f p g a)). Qed.
Lemma lem8258160 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8258141 A B P lt2 s z f p g a) (@lem8258158 A B P lt2 s z f p g a)). Qed.
Lemma lem8258161 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8258160 A B P lt2 s z f p g a)). Qed.
Lemma lem8258162 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8258163 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8258162 P) (@lem8258161 A B P lt2 s z f p g)). Qed.
Lemma lem8258164 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8258163 A B P lt2 s z f p g)). Qed.
Lemma lem8258165 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258166 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8258165 A B) (@lem8258164 A B P lt2 s z f p)). Qed.
Lemma lem8258167 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8258166 A B P lt2 s z f p)). Qed.
Lemma lem8258168 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258170 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8258168 A B) (@lem8258167 A B P lt2 s z p)). Qed.
Lemma lem8258171 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8258170 A B P lt2 s z p) (@lem8257500 A B P lt2 s z p h1)). Qed.
Lemma lem8258264 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8258272 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term611 A B P lt2 s a f g z) = (term611 A B P lt2 s a f g z).
Proof. exact (eq_refl (term611 A B P lt2 s a f g z)). Qed.
Lemma lem8258273 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term612 A B P lt2 s a f g) = (term612 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8258272 A B P lt2 s a f g z)). Qed.
Lemma lem8258274 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8258276 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term613 A B P lt2 s a f g) = (term613 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8258274 A) (@lem8258273 A B P lt2 s a f g)). Qed.
Lemma lem8258277 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term613 A B P lt2 s a f g.
Proof. exact (EQ_MP (@lem8258276 A B P lt2 s a f g) (@lem8257117 A B P lt2 s a f g h1)). Qed.
Lemma lem8258304 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term689 A B P lt2 s z f p g a).
Proof. exact (@lem19490 (term631 A B P f p g a) (term658 A B P lt2 s z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8258311 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term690 A B P lt2 s z f p g a) = (term691 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term627 A B P f p g a)). Qed.
Lemma lem8258318 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term692 A B P lt2 s z f p g a) = (term693 A B P lt2 s z f p g a).
Proof. exact (@lem19699 (term654 A B P lt2 z f g s a) (term647 A B P z f g a) (term631 A B P f p g a)). Qed.
Lemma lem8258319 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8258320 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term694 A B P lt2 s z f p g a) = (term695 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8258319) (@lem8258318 A B P lt2 s z f p g a)). Qed.
Lemma lem8258321 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term689 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8258320 A B P lt2 s z f p g a) (@lem8258311 A B P lt2 s z f p g a)). Qed.
Lemma lem8258323 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term662 A B P lt2 s z f p g a) = (term696 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8258304 A B P lt2 s z f p g a) (@lem8258321 A B P lt2 s z f p g a)). Qed.
Lemma lem8258324 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term664 A B P lt2 s z f p g) = (term697 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8258323 A B P lt2 s z f p g a)). Qed.
Lemma lem8258325 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8258326 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term666 A B P lt2 s z f p g) = (term698 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8258325 P) (@lem8258324 A B P lt2 s z f p g)). Qed.
Lemma lem8258327 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term668 A B P lt2 s z f p) = (term699 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8258326 A B P lt2 s z f p g)). Qed.
Lemma lem8258328 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258329 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term669 A B P lt2 s z f p) = (term700 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8258328 A B) (@lem8258327 A B P lt2 s z f p)). Qed.
Lemma lem8258330 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term670 A B P lt2 s z p) = (term701 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8258329 A B P lt2 s z f p)). Qed.
Lemma lem8258331 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258333 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term671 A B P lt2 s z p) = (term702 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8258331 A B) (@lem8258330 A B P lt2 s z p)). Qed.
Lemma lem8258334 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term702 A B P lt2 s z p.
Proof. exact (EQ_MP (@lem8258333 A B P lt2 s z p) (@lem8257500 A B P lt2 s z p h1)). Qed.
Lemma lem8258352 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term634 A B P f P' g a) = (term634 A B P f P' g a).
Proof. exact (eq_refl (term634 A B P f P' g a)). Qed.
Lemma lem8258369 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term673 A B P p lt2 s z' f g a) = (term703 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term654 A B P lt2 z' f g s a) (term615 A B P p g a) (term647 A B P z' f g a)). Qed.
Lemma lem8258372 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term618 A B P p f a) = (term618 A B P p f a).
Proof. exact (eq_refl (term618 A B P p f a)). Qed.
Lemma lem8258373 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term704 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8258372 A B P p f a) (@lem8258369 A B P lt2 s p z' f g a)). Qed.
Lemma lem8258380 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term704 A B P lt2 s p z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (@lem19490 (term706 A B P p lt2 z' f g s a) (term615 A B P p f a) (term707 A B P p z' f g a)). Qed.
Lemma lem8258381 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term675 A B P p lt2 s z' f g a) = (term705 A B P lt2 s p z' f g a).
Proof. exact (TRANS (@lem8258373 A B P lt2 s p z' f g a) (@lem8258380 A B P lt2 s p z' f g a)). Qed.
Lemma lem8258382 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8258383 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term677 A B P p lt2 s z' f g a) = (term708 A B P lt2 s p z' f g a).
Proof. exact (MK_COMB (@lem8258382) (@lem8258381 A B P lt2 s p z' f g a)). Qed.
Lemma lem8258384 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term709 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8258383 A B P lt2 s p z' f g a) (@lem8258352 A B P f P' g a)). Qed.
Lemma lem8258385 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term710 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19490 (term631 A B P f P' g a) (term705 A B P lt2 s p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8258392 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term711 A B P lt2 s p z' f P' g a) = (term712 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term627 A B P f P' g a)). Qed.
Lemma lem8258399 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term715 A B P lt2 s p z' f P' g a) = (term716 A B P lt2 s p z' f P' g a).
Proof. exact (@lem19699 (term713 A B P p lt2 z' f g s a) (term714 A B P p z' f g a) (term631 A B P f P' g a)). Qed.
Lemma lem8258400 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8258401 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term717 A B P lt2 s p z' f P' g a) = (term718 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8258400) (@lem8258399 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258402 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term710 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (MK_COMB (@lem8258401 A B P lt2 s p z' f P' g a) (@lem8258392 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258403 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term709 A B P lt2 s p z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8258385 A B P lt2 s p z' f P' g a) (@lem8258402 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258404 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term679 A B P p lt2 s z' f P' g a) = (term719 A B P lt2 s p z' f P' g a).
Proof. exact (TRANS (@lem8258384 A B P lt2 s p z' f P' g a) (@lem8258403 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258405 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term681 A B P p lt2 s z' f P' g) = (term720 A B P lt2 s p z' f P' g).
Proof. exact (fun_ext (fun a : P => @lem8258404 A B P lt2 s p z' f P' g a)). Qed.
Lemma lem8258406 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8258407 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term683 A B P p lt2 s z' f P' g) = (term721 A B P lt2 s p z' f P' g).
Proof. exact (MK_COMB (@lem8258406 P) (@lem8258405 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8258408 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term685 A B P p lt2 s z' f P') = (term722 A B P lt2 s p z' f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8258407 A B P lt2 s p z' f P' g)). Qed.
Lemma lem8258409 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258410 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term686 A B P p lt2 s z' f P') = (term723 A B P lt2 s p z' f P').
Proof. exact (MK_COMB (@lem8258409 A B) (@lem8258408 A B P lt2 s p z' f P')). Qed.
Lemma lem8258411 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term687 A B P p lt2 s z' P') = (term724 A B P lt2 s p z' P').
Proof. exact (fun_ext (fun f : A -> B => @lem8258410 A B P lt2 s p z' f P')). Qed.
Lemma lem8258412 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8258414 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (P' : type560 A B P) : (term688 A B P p lt2 s z' P') = (term725 A B P lt2 s p z' P').
Proof. exact (MK_COMB (@lem8258412 A B) (@lem8258411 A B P lt2 s p z' P')). Qed.
Lemma lem8258415 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term725 A B P lt2 s p z' P'.
Proof. exact (EQ_MP (@lem8258414 A B P lt2 s p z' P') (@lem8257761 A B P p lt2 s z' P' h1)). Qed.
Lemma lem8258427 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term615 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8258428 {A B P : Type'} (_110081 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _110081.
Proof. exact (@lem8257788 A B P lt2 s a f g h1 _110081). Qed.
Lemma lem8258429 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110081 : A) : (term726 A B P lt2 s a f g _110081) = (term611 A B P lt2 s a f g _110081).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _110081)). Qed.
Lemma lem8258431 {A B P : Type'} (_110082 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _110082.
Proof. exact (@lem8257845 A B P lt2 s z p h1 _110082). Qed.
Lemma lem8258432 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110082 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _110082) = (term700 A B P lt2 s z _110082 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _110082)). Qed.
Lemma lem8258433 {A B P : Type'} (_110082 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _110082 p.
Proof. exact (EQ_MP (@lem8258432 A B P lt2 s z _110082 p) (@lem8258431 A B P _110082 lt2 s z p h1)). Qed.
Lemma lem8258434 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _110082 p _110083.
Proof. exact (@lem8258433 A B P _110082 lt2 s z p h1 _110083). Qed.
Lemma lem8258435 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) : (term728 A B P lt2 s z _110082 p _110083) = (term698 A B P lt2 s z _110082 p _110083).
Proof. exact (eq_refl (term728 A B P lt2 s z _110082 p _110083)). Qed.
Lemma lem8258436 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _110082 p _110083.
Proof. exact (EQ_MP (@lem8258435 A B P lt2 s z _110082 p _110083) (@lem8258434 A B P _110082 _110083 lt2 s z p h1)). Qed.
Lemma lem8258437 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _110082 p _110083 _110084.
Proof. exact (@lem8258436 A B P _110082 _110083 lt2 s z p h1 _110084). Qed.
Lemma lem8258438 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term729 A B P lt2 s z _110082 p _110083 _110084) = (term696 A B P lt2 s z _110082 p _110083 _110084).
Proof. exact (eq_refl (term729 A B P lt2 s z _110082 p _110083 _110084)). Qed.
Lemma lem8258439 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _110082 p _110083 _110084.
Proof. exact (EQ_MP (@lem8258438 A B P lt2 s z _110082 p _110083 _110084) (@lem8258437 A B P _110082 _110083 _110084 lt2 s z p h1)). Qed.
Lemma lem8258449 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _110088.
Proof. exact (@lem8257951 A B P lt2 s a f g h1 _110088). Qed.
Lemma lem8258450 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110088 : A) : (term726 A B P lt2 s a f g _110088) = (term611 A B P lt2 s a f g _110088).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _110088)). Qed.
Lemma lem8258452 {A B P : Type'} (_110089 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _110089.
Proof. exact (@lem8258008 A B P lt2 s z p h1 _110089). Qed.
Lemma lem8258453 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110089 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _110089) = (term700 A B P lt2 s z _110089 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _110089)). Qed.
Lemma lem8258454 {A B P : Type'} (_110089 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _110089 p.
Proof. exact (EQ_MP (@lem8258453 A B P lt2 s z _110089 p) (@lem8258452 A B P _110089 lt2 s z p h1)). Qed.
Lemma lem8258455 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _110089 p _110090.
Proof. exact (@lem8258454 A B P _110089 lt2 s z p h1 _110090). Qed.
Lemma lem8258456 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) : (term728 A B P lt2 s z _110089 p _110090) = (term698 A B P lt2 s z _110089 p _110090).
Proof. exact (eq_refl (term728 A B P lt2 s z _110089 p _110090)). Qed.
Lemma lem8258457 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _110089 p _110090.
Proof. exact (EQ_MP (@lem8258456 A B P lt2 s z _110089 p _110090) (@lem8258455 A B P _110089 _110090 lt2 s z p h1)). Qed.
Lemma lem8258458 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _110089 p _110090 _110091.
Proof. exact (@lem8258457 A B P _110089 _110090 lt2 s z p h1 _110091). Qed.
Lemma lem8258459 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term729 A B P lt2 s z _110089 p _110090 _110091) = (term696 A B P lt2 s z _110089 p _110090 _110091).
Proof. exact (eq_refl (term729 A B P lt2 s z _110089 p _110090 _110091)). Qed.
Lemma lem8258460 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _110089 p _110090 _110091.
Proof. exact (EQ_MP (@lem8258459 A B P lt2 s z _110089 p _110090 _110091) (@lem8258458 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8258461 {A B P : Type'} (_110092 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term730 A B P lt2 s p z' P' _110092.
Proof. exact (@lem8258089 A B P p lt2 s z' P' h1 _110092). Qed.
Lemma lem8258462 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) : (term730 A B P lt2 s p z' P' _110092) = (term723 A B P lt2 s p z' _110092 P').
Proof. exact (eq_refl (term730 A B P lt2 s p z' P' _110092)). Qed.
Lemma lem8258463 {A B P : Type'} (_110092 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term723 A B P lt2 s p z' _110092 P'.
Proof. exact (EQ_MP (@lem8258462 A B P lt2 s p z' _110092 P') (@lem8258461 A B P _110092 p lt2 s z' P' h1)). Qed.
Lemma lem8258464 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term731 A B P lt2 s p z' _110092 P' _110093.
Proof. exact (@lem8258463 A B P _110092 p lt2 s z' P' h1 _110093). Qed.
Lemma lem8258465 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) : (term731 A B P lt2 s p z' _110092 P' _110093) = (term721 A B P lt2 s p z' _110092 P' _110093).
Proof. exact (eq_refl (term731 A B P lt2 s p z' _110092 P' _110093)). Qed.
Lemma lem8258466 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term721 A B P lt2 s p z' _110092 P' _110093.
Proof. exact (EQ_MP (@lem8258465 A B P lt2 s p z' _110092 P' _110093) (@lem8258464 A B P _110092 _110093 p lt2 s z' P' h1)). Qed.
Lemma lem8258467 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term732 A B P lt2 s p z' _110092 P' _110093 _110094.
Proof. exact (@lem8258466 A B P _110092 _110093 p lt2 s z' P' h1 _110094). Qed.
Lemma lem8258468 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term732 A B P lt2 s p z' _110092 P' _110093 _110094) = (term719 A B P lt2 s p z' _110092 P' _110093 _110094).
Proof. exact (eq_refl (term732 A B P lt2 s p z' _110092 P' _110093 _110094)). Qed.
Lemma lem8258469 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term719 A B P lt2 s p z' _110092 P' _110093 _110094.
Proof. exact (EQ_MP (@lem8258468 A B P lt2 s p z' _110092 P' _110093 _110094) (@lem8258467 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8258470 {A B P : Type'} (_110095 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _110095.
Proof. exact (@lem8258114 A B P lt2 s a f g h1 _110095). Qed.
Lemma lem8258471 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110095 : A) : (term726 A B P lt2 s a f g _110095) = (term611 A B P lt2 s a f g _110095).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _110095)). Qed.
Lemma lem8258473 {A B P : Type'} (_110096 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _110096.
Proof. exact (@lem8258171 A B P lt2 s z p h1 _110096). Qed.
Lemma lem8258474 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _110096) = (term700 A B P lt2 s z _110096 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _110096)). Qed.
Lemma lem8258475 {A B P : Type'} (_110096 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _110096 p.
Proof. exact (EQ_MP (@lem8258474 A B P lt2 s z _110096 p) (@lem8258473 A B P _110096 lt2 s z p h1)). Qed.
Lemma lem8258476 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _110096 p _110097.
Proof. exact (@lem8258475 A B P _110096 lt2 s z p h1 _110097). Qed.
Lemma lem8258477 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) : (term728 A B P lt2 s z _110096 p _110097) = (term698 A B P lt2 s z _110096 p _110097).
Proof. exact (eq_refl (term728 A B P lt2 s z _110096 p _110097)). Qed.
Lemma lem8258478 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _110096 p _110097.
Proof. exact (EQ_MP (@lem8258477 A B P lt2 s z _110096 p _110097) (@lem8258476 A B P _110096 _110097 lt2 s z p h1)). Qed.
Lemma lem8258479 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _110096 p _110097 _110098.
Proof. exact (@lem8258478 A B P _110096 _110097 lt2 s z p h1 _110098). Qed.
Lemma lem8258480 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term729 A B P lt2 s z _110096 p _110097 _110098) = (term696 A B P lt2 s z _110096 p _110097 _110098).
Proof. exact (eq_refl (term729 A B P lt2 s z _110096 p _110097 _110098)). Qed.
Lemma lem8258481 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _110096 p _110097 _110098.
Proof. exact (EQ_MP (@lem8258480 A B P lt2 s z _110096 p _110097 _110098) (@lem8258479 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8258491 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term726 A B P lt2 s a f g _110102.
Proof. exact (@lem8258277 A B P lt2 s a f g h1 _110102). Qed.
Lemma lem8258492 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110102 : A) : (term726 A B P lt2 s a f g _110102) = (term611 A B P lt2 s a f g _110102).
Proof. exact (eq_refl (term726 A B P lt2 s a f g _110102)). Qed.
Lemma lem8258494 {A B P : Type'} (_110103 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term727 A B P lt2 s z p _110103.
Proof. exact (@lem8258334 A B P lt2 s z p h1 _110103). Qed.
Lemma lem8258495 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) : (term727 A B P lt2 s z p _110103) = (term700 A B P lt2 s z _110103 p).
Proof. exact (eq_refl (term727 A B P lt2 s z p _110103)). Qed.
Lemma lem8258496 {A B P : Type'} (_110103 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term700 A B P lt2 s z _110103 p.
Proof. exact (EQ_MP (@lem8258495 A B P lt2 s z _110103 p) (@lem8258494 A B P _110103 lt2 s z p h1)). Qed.
Lemma lem8258497 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term728 A B P lt2 s z _110103 p _110104.
Proof. exact (@lem8258496 A B P _110103 lt2 s z p h1 _110104). Qed.
Lemma lem8258498 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) : (term728 A B P lt2 s z _110103 p _110104) = (term698 A B P lt2 s z _110103 p _110104).
Proof. exact (eq_refl (term728 A B P lt2 s z _110103 p _110104)). Qed.
Lemma lem8258499 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term698 A B P lt2 s z _110103 p _110104.
Proof. exact (EQ_MP (@lem8258498 A B P lt2 s z _110103 p _110104) (@lem8258497 A B P _110103 _110104 lt2 s z p h1)). Qed.
Lemma lem8258500 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term729 A B P lt2 s z _110103 p _110104 _110105.
Proof. exact (@lem8258499 A B P _110103 _110104 lt2 s z p h1 _110105). Qed.
Lemma lem8258501 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term729 A B P lt2 s z _110103 p _110104 _110105) = (term696 A B P lt2 s z _110103 p _110104 _110105).
Proof. exact (eq_refl (term729 A B P lt2 s z _110103 p _110104 _110105)). Qed.
Lemma lem8258502 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term696 A B P lt2 s z _110103 p _110104 _110105.
Proof. exact (EQ_MP (@lem8258501 A B P lt2 s z _110103 p _110104 _110105) (@lem8258500 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8258503 {A B P : Type'} (_110106 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term730 A B P lt2 s p z' P' _110106.
Proof. exact (@lem8258415 A B P p lt2 s z' P' h1 _110106). Qed.
Lemma lem8258504 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) : (term730 A B P lt2 s p z' P' _110106) = (term723 A B P lt2 s p z' _110106 P').
Proof. exact (eq_refl (term730 A B P lt2 s p z' P' _110106)). Qed.
Lemma lem8258505 {A B P : Type'} (_110106 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term723 A B P lt2 s p z' _110106 P'.
Proof. exact (EQ_MP (@lem8258504 A B P lt2 s p z' _110106 P') (@lem8258503 A B P _110106 p lt2 s z' P' h1)). Qed.
Lemma lem8258506 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term731 A B P lt2 s p z' _110106 P' _110107.
Proof. exact (@lem8258505 A B P _110106 p lt2 s z' P' h1 _110107). Qed.
Lemma lem8258507 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) : (term731 A B P lt2 s p z' _110106 P' _110107) = (term721 A B P lt2 s p z' _110106 P' _110107).
Proof. exact (eq_refl (term731 A B P lt2 s p z' _110106 P' _110107)). Qed.
Lemma lem8258508 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term721 A B P lt2 s p z' _110106 P' _110107.
Proof. exact (EQ_MP (@lem8258507 A B P lt2 s p z' _110106 P' _110107) (@lem8258506 A B P _110106 _110107 p lt2 s z' P' h1)). Qed.
Lemma lem8258509 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term732 A B P lt2 s p z' _110106 P' _110107 _110108.
Proof. exact (@lem8258508 A B P _110106 _110107 p lt2 s z' P' h1 _110108). Qed.
Lemma lem8258510 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term732 A B P lt2 s p z' _110106 P' _110107 _110108) = (term719 A B P lt2 s p z' _110106 P' _110107 _110108).
Proof. exact (eq_refl (term732 A B P lt2 s p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8258511 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term719 A B P lt2 s p z' _110106 P' _110107 _110108.
Proof. exact (EQ_MP (@lem8258510 A B P lt2 s p z' _110106 P' _110107 _110108) (@lem8258509 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8258518 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term691 A B P lt2 s z _110082 p _110083 _110084.
Proof. exact (proj2 (@lem8258439 A B P _110082 _110083 _110084 lt2 s z p h1)). Qed.
Lemma lem8258524 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term712 A B P lt2 s p z' _110092 P' _110093 _110094.
Proof. exact (proj2 (@lem8258469 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8258526 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term735 A B P p z' _110092 P' _110093 _110094.
Proof. exact (proj2 (@lem8258524 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8258527 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term736 A B P p lt2 z' s _110092 P' _110093 _110094.
Proof. exact (proj1 (@lem8258524 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8258530 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term691 A B P lt2 s z _110089 p _110090 _110091.
Proof. exact (proj2 (@lem8258460 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8258543 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term693 A B P lt2 s z _110096 p _110097 _110098.
Proof. exact (proj1 (@lem8258481 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8258549 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term716 A B P lt2 s p z' _110106 P' _110107 _110108.
Proof. exact (proj1 (@lem8258511 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8258552 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term733 A B P p z' _110106 P' _110107 _110108.
Proof. exact (proj2 (@lem8258549 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8258553 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term734 A B P p lt2 z' s _110106 P' _110107 _110108.
Proof. exact (proj1 (@lem8258549 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8258555 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term693 A B P lt2 s z _110103 p _110104 _110105.
Proof. exact (proj1 (@lem8258502 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8258565 {A B P : Type'} (_110081 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _110081.
Proof. exact (EQ_MP (@lem8258429 A B P lt2 s a f g _110081) (@lem8258428 A B P _110081 lt2 s a f g h1)). Qed.
Lemma lem8258571 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8258669 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term737 A B P lt2 z s _110082 p _110083 _110084.
Proof. exact (proj1 (@lem8258518 A B P _110082 _110083 _110084 lt2 s z p h1)). Qed.
Lemma lem8258679 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term738 A B P z _110082 p _110083 _110084.
Proof. exact (proj2 (@lem8258518 A B P _110082 _110083 _110084 lt2 s z p h1)). Qed.
Lemma lem8258705 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _110088.
Proof. exact (EQ_MP (@lem8258450 A B P lt2 s a f g _110088) (@lem8258449 A B P _110088 lt2 s a f g h1)). Qed.
Lemma lem8258711 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term615 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8258719 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term736 A B P p lt2 z' s _110092 P' _110093 _110094) = (term749 A B P p lt2 z' s _110092 P' _110093 _110094).
Proof. exact (@lem8255940 (term615 A B P p _110092 _110094) (term706 A B P p lt2 z' _110092 _110093 s _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8258726 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term750 A B P p lt2 z' s _110092 P' _110093 _110094) = (term751 A B P p lt2 z' s _110092 P' _110093 _110094).
Proof. exact (@lem8255940 (term615 A B P p _110093 _110094) (term654 A B P lt2 z' _110092 _110093 s _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8258727 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P p _110092 _110094) = (term618 A B P p _110092 _110094).
Proof. exact (eq_refl (term618 A B P p _110092 _110094)). Qed.
Lemma lem8258730 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term749 A B P p lt2 z' s _110092 P' _110093 _110094) = (term752 A B P p lt2 z' s _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8258727 A B P p _110092 _110094) (@lem8258726 A B P p lt2 z' s _110092 P' _110093 _110094)). Qed.
Lemma lem8258732 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term736 A B P p lt2 z' s _110092 P' _110093 _110094) = (term752 A B P p lt2 z' s _110092 P' _110093 _110094).
Proof. exact (TRANS (@lem8258719 A B P p lt2 z' s _110092 P' _110093 _110094) (@lem8258730 A B P p lt2 z' s _110092 P' _110093 _110094)). Qed.
Lemma lem8258733 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term752 A B P p lt2 z' s _110092 P' _110093 _110094.
Proof. exact (EQ_MP (@lem8258732 A B P p lt2 z' s _110092 P' _110093 _110094) (@lem8258527 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8258741 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term735 A B P p z' _110092 P' _110093 _110094) = (term753 A B P p z' _110092 P' _110093 _110094).
Proof. exact (@lem8255940 (term615 A B P p _110092 _110094) (term707 A B P p z' _110092 _110093 _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8258748 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term754 A B P p z' _110092 P' _110093 _110094) = (term755 A B P p z' _110092 P' _110093 _110094).
Proof. exact (@lem8255940 (term615 A B P p _110093 _110094) (term647 A B P z' _110092 _110093 _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8258749 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P p _110092 _110094) = (term618 A B P p _110092 _110094).
Proof. exact (eq_refl (term618 A B P p _110092 _110094)). Qed.
Lemma lem8258752 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term753 A B P p z' _110092 P' _110093 _110094) = (term756 A B P p z' _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8258749 A B P p _110092 _110094) (@lem8258748 A B P p z' _110092 P' _110093 _110094)). Qed.
Lemma lem8258754 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term735 A B P p z' _110092 P' _110093 _110094) = (term756 A B P p z' _110092 P' _110093 _110094).
Proof. exact (TRANS (@lem8258741 A B P p z' _110092 P' _110093 _110094) (@lem8258752 A B P p z' _110092 P' _110093 _110094)). Qed.
Lemma lem8258755 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term756 A B P p z' _110092 P' _110093 _110094.
Proof. exact (EQ_MP (@lem8258754 A B P p z' _110092 P' _110093 _110094) (@lem8258526 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8258809 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term737 A B P lt2 z s _110089 p _110090 _110091.
Proof. exact (proj1 (@lem8258530 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8258819 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term738 A B P z _110089 p _110090 _110091.
Proof. exact (proj2 (@lem8258530 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8258845 {A B P : Type'} (_110095 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _110095.
Proof. exact (EQ_MP (@lem8258471 A B P lt2 s a f g _110095) (@lem8258470 A B P _110095 lt2 s a f g h1)). Qed.
Lemma lem8258851 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8258969 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term747 A B P lt2 z s _110096 p _110097 _110098.
Proof. exact (proj1 (@lem8258543 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8258979 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term748 A B P z _110096 p _110097 _110098.
Proof. exact (proj2 (@lem8258543 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8258985 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term611 A B P lt2 s a f g _110102.
Proof. exact (EQ_MP (@lem8258492 A B P lt2 s a f g _110102) (@lem8258491 A B P _110102 lt2 s a f g h1)). Qed.
Lemma lem8258991 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term615 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8259043 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term734 A B P p lt2 z' s _110106 P' _110107 _110108) = (term739 A B P p lt2 z' s _110106 P' _110107 _110108).
Proof. exact (@lem8255940 (term615 A B P p _110106 _110108) (term706 A B P p lt2 z' _110106 _110107 s _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8259050 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term740 A B P p lt2 z' s _110106 P' _110107 _110108) = (term741 A B P p lt2 z' s _110106 P' _110107 _110108).
Proof. exact (@lem8255940 (term615 A B P p _110107 _110108) (term654 A B P lt2 z' _110106 _110107 s _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8259051 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term618 A B P p _110106 _110108) = (term618 A B P p _110106 _110108).
Proof. exact (eq_refl (term618 A B P p _110106 _110108)). Qed.
Lemma lem8259054 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term739 A B P p lt2 z' s _110106 P' _110107 _110108) = (term742 A B P p lt2 z' s _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8259051 A B P p _110106 _110108) (@lem8259050 A B P p lt2 z' s _110106 P' _110107 _110108)). Qed.
Lemma lem8259056 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term734 A B P p lt2 z' s _110106 P' _110107 _110108) = (term742 A B P p lt2 z' s _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8259043 A B P p lt2 z' s _110106 P' _110107 _110108) (@lem8259054 A B P p lt2 z' s _110106 P' _110107 _110108)). Qed.
Lemma lem8259057 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term742 A B P p lt2 z' s _110106 P' _110107 _110108.
Proof. exact (EQ_MP (@lem8259056 A B P p lt2 z' s _110106 P' _110107 _110108) (@lem8258553 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8259065 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term733 A B P p z' _110106 P' _110107 _110108) = (term743 A B P p z' _110106 P' _110107 _110108).
Proof. exact (@lem8255940 (term615 A B P p _110106 _110108) (term707 A B P p z' _110106 _110107 _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8259072 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term744 A B P p z' _110106 P' _110107 _110108) = (term745 A B P p z' _110106 P' _110107 _110108).
Proof. exact (@lem8255940 (term615 A B P p _110107 _110108) (term647 A B P z' _110106 _110107 _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8259073 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term618 A B P p _110106 _110108) = (term618 A B P p _110106 _110108).
Proof. exact (eq_refl (term618 A B P p _110106 _110108)). Qed.
Lemma lem8259076 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term743 A B P p z' _110106 P' _110107 _110108) = (term746 A B P p z' _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8259073 A B P p _110106 _110108) (@lem8259072 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8259078 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term733 A B P p z' _110106 P' _110107 _110108) = (term746 A B P p z' _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8259065 A B P p z' _110106 P' _110107 _110108) (@lem8259076 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8259079 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term746 A B P p z' _110106 P' _110107 _110108.
Proof. exact (EQ_MP (@lem8259078 A B P p z' _110106 P' _110107 _110108) (@lem8258552 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8259109 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term747 A B P lt2 z s _110103 p _110104 _110105.
Proof. exact (proj1 (@lem8258555 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8259119 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term748 A B P z _110103 p _110104 _110105.
Proof. exact (proj2 (@lem8258555 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8259271 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259272 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259271 A B P f p P' g a h1). Qed.
Lemma lem8259274 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259275 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259274 (term614 A B P p f a)). Qed.
Lemma lem8259276 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259275 A B P p f a) (@lem8259272 A B P f p P' g a h1)). Qed.
Lemma lem8259279 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8259280 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term759 A B P p g a.
Proof. exact (fun h0 : term614 A B P p g a => @lem8259279 A B P p g a h1). Qed.
Lemma lem8259282 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8259283 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term759 A B P p g a) = (term615 A B P p g a).
Proof. exact (@lem8259282 (term614 A B P p g a)). Qed.
Lemma lem8259284 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (EQ_MP (@lem8259283 A B P p g a) (@lem8259280 A B P p g a h1)). Qed.
Lemma lem8259286 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8259287 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (s : P -> A) (_110084 : P) : (term737 A B P lt2 z s _110082 p _110083 _110084) = (term762 A B P p lt2 z _110082 _110083 s _110084).
Proof. exact (@lem8259286 (term627 A B P _110082 p _110083 _110084) (term654 A B P lt2 z _110082 _110083 s _110084)). Qed.
Lemma lem8259289 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8259290 {A B P : Type'} (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term765 A B P _110082 p _110083 _110084) = (term766 A B P _110082 p _110083 _110084).
Proof. exact (@lem8259289 (term615 A B P p _110082 _110084) (term614 A B P p _110083 _110084)). Qed.
Lemma lem8259292 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259293 {A B P : Type'} (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term767 A B P p _110082 _110084) = (term614 A B P p _110082 _110084).
Proof. exact (@lem8259292 (term614 A B P p _110082 _110084)). Qed.
Lemma lem8259294 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8259295 {A B P : Type'} (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term768 A B P p _110082 _110084) = (term616 A B P p _110082 _110084).
Proof. exact (MK_COMB (@lem8259294) (@lem8259293 A B P p _110082 _110084)). Qed.
Lemma lem8259296 {A B P : Type'} (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term615 A B P p _110083 _110084) = (term615 A B P p _110083 _110084).
Proof. exact (eq_refl (term615 A B P p _110083 _110084)). Qed.
Lemma lem8259297 {A B P : Type'} (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term766 A B P _110082 p _110083 _110084) = (term769 A B P _110082 p _110083 _110084).
Proof. exact (MK_COMB (@lem8259295 A B P p _110082 _110084) (@lem8259296 A B P p _110083 _110084)). Qed.
Lemma lem8259298 {A B P : Type'} (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term765 A B P _110082 p _110083 _110084) = (term769 A B P _110082 p _110083 _110084).
Proof. exact (TRANS (@lem8259290 A B P _110082 p _110083 _110084) (@lem8259297 A B P _110082 p _110083 _110084)). Qed.
Lemma lem8259299 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8259300 {A B P : Type'} (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term770 A B P _110082 p _110083 _110084) = (term771 A B P _110082 p _110083 _110084).
Proof. exact (MK_COMB (@lem8259299) (@lem8259298 A B P _110082 p _110083 _110084)). Qed.
Lemma lem8259301 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (s : P -> A) (_110084 : P) : (term654 A B P lt2 z _110082 _110083 s _110084) = (term654 A B P lt2 z _110082 _110083 s _110084).
Proof. exact (eq_refl (term654 A B P lt2 z _110082 _110083 s _110084)). Qed.
Lemma lem8259302 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (s : P -> A) (_110084 : P) : (term762 A B P p lt2 z _110082 _110083 s _110084) = (term772 A B P p lt2 z _110082 _110083 s _110084).
Proof. exact (MK_COMB (@lem8259300 A B P _110082 p _110083 _110084) (@lem8259301 A B P lt2 z _110082 _110083 s _110084)). Qed.
Lemma lem8259303 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (s : P -> A) (_110084 : P) : (term737 A B P lt2 z s _110082 p _110083 _110084) = (term772 A B P p lt2 z _110082 _110083 s _110084).
Proof. exact (TRANS (@lem8259287 A B P p lt2 z _110082 _110083 s _110084) (@lem8259302 A B P p lt2 z _110082 _110083 s _110084)). Qed.
Lemma lem8259305 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) (h2 : term982 A B P f p P' g a) : term769 A B P f p g a.
Proof. exact (conj (@lem8259276 A B P f p P' g a h2) (@lem8259284 A B P p g a h1)). Qed.
Lemma lem8259307 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _110082 _110083 s _110084.
Proof. exact (EQ_MP (@lem8259303 A B P p lt2 z _110082 _110083 s _110084) (@lem8258669 A B P _110082 _110083 _110084 lt2 s z p h1)). Qed.
Lemma lem8259308 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _110082 _110083 s _110084.
Proof. exact (@lem8259307 A B P _110082 _110083 _110084 lt2 s z p h1). Qed.
Lemma lem8259309 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z f g s a.
Proof. exact (@lem8259308 A B P f g a lt2 s z p h1). Qed.
Lemma lem8259312 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8259309 A B P f g a lt2 s z p h1 (@lem8259305 A B P f p P' g a h2 h3)). Qed.
Lemma lem8259313 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8259312 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8259315 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259316 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8259315 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8259317 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8259316 A B P lt2 z f g s a) (@lem8259313 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8259323 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8259324 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110081) = (term775 A B P f g lt2 _110081 s a).
Proof. exact (@lem8259323 ((@I (A -> B) f _110081) = (@I (A -> B) g _110081)) (term608 A P lt2 _110081 s a)). Qed.
Lemma lem8259332 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8259333 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _110081) = (term777 A B P f g lt2 _110081 s a).
Proof. exact (MK_COMB (@lem8259332) (@lem8259324 A B P f g lt2 _110081 s a)). Qed.
Lemma lem8259341 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _110081 s a) = (term775 A B P f g lt2 _110081 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _110081 s a)). Qed.
Lemma lem8259342 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110081) = (term775 A B P f g lt2 _110081 s a)) = ((term775 A B P f g lt2 _110081 s a) = (term775 A B P f g lt2 _110081 s a)).
Proof. exact (MK_COMB (@lem8259333 A B P f g lt2 _110081 s a) (@lem8259341 A B P f g lt2 _110081 s a)). Qed.
Lemma lem8259344 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8259345 (x : Prop) : (x = x) = True.
Proof. exact (@lem8259344 Prop x). Qed.
Lemma lem8259346 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _110081 s a) = (term775 A B P f g lt2 _110081 s a)) = True.
Proof. exact (@lem8259345 (term775 A B P f g lt2 _110081 s a)). Qed.
Lemma lem8259347 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110081) = (term775 A B P f g lt2 _110081 s a)) = True.
Proof. exact (TRANS (@lem8259342 A B P f g lt2 _110081 s a) (@lem8259346 A B P f g lt2 _110081 s a)). Qed.
Lemma lem8259348 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _110081) = (term775 A B P f g lt2 _110081 s a)).
Proof. exact (SYM (@lem8259347 A B P f g lt2 _110081 s a)). Qed.
Lemma lem8259349 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110081) = (term775 A B P f g lt2 _110081 s a).
Proof. exact (EQ_MP (@lem8259348 A B P f g lt2 _110081 s a) (@lem0)). Qed.
Lemma lem8259350 {A B P : Type'} (_110081 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _110081 s a.
Proof. exact (EQ_MP (@lem8259349 A B P f g lt2 _110081 s a) (@lem8258565 A B P _110081 lt2 s a f g h1)). Qed.
Lemma lem8259352 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8259353 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110081 : A) : (term775 A B P f g lt2 _110081 s a) = (term778 A B P lt2 s a f g _110081).
Proof. exact (@lem8259352 (term608 A P lt2 _110081 s a) ((@I (A -> B) f _110081) = (@I (A -> B) g _110081))). Qed.
Lemma lem8259355 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259356 {A P : Type'} (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : (term779 A P lt2 _110081 s a) = (term606 A P lt2 _110081 s a).
Proof. exact (@lem8259355 (term606 A P lt2 _110081 s a)). Qed.
Lemma lem8259357 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8259358 {A P : Type'} (lt2 : type1402 A) (_110081 : A) (s : P -> A) (a : P) : (term780 A P lt2 _110081 s a) = (term781 A P lt2 _110081 s a).
Proof. exact (MK_COMB (@lem8259357) (@lem8259356 A P lt2 _110081 s a)). Qed.
Lemma lem8259359 {A B : Type'} (f : A -> B) (g : A -> B) (_110081 : A) : ((@I (A -> B) f _110081) = (@I (A -> B) g _110081)) = ((@I (A -> B) f _110081) = (@I (A -> B) g _110081)).
Proof. exact (eq_refl ((@I (A -> B) f _110081) = (@I (A -> B) g _110081))). Qed.
Lemma lem8259360 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110081 : A) : (term778 A B P lt2 s a f g _110081) = (term782 A B P lt2 s a f g _110081).
Proof. exact (MK_COMB (@lem8259358 A P lt2 _110081 s a) (@lem8259359 A B f g _110081)). Qed.
Lemma lem8259361 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110081 : A) : (term775 A B P f g lt2 _110081 s a) = (term782 A B P lt2 s a f g _110081).
Proof. exact (TRANS (@lem8259353 A B P lt2 s a f g _110081) (@lem8259360 A B P lt2 s a f g _110081)). Qed.
Lemma lem8259364 {A B P : Type'} (_110081 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110081.
Proof. exact (EQ_MP (@lem8259361 A B P lt2 s a f g _110081) (@lem8259350 A B P _110081 lt2 s a f g h1)). Qed.
Lemma lem8259365 {A B P : Type'} (_110081 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110081.
Proof. exact (@lem8259364 A B P _110081 lt2 s a f g h1). Qed.
Lemma lem8259366 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8259365 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8259369 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8259366 A B P z lt2 s a f g h1 (@lem8259317 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8259370 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8259369 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8259372 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259373 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8259372 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8259374 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8259373 A B P z f g a) (@lem8259370 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259376 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259377 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259376 A B P f p P' g a h1). Qed.
Lemma lem8259379 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259380 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259379 (term614 A B P p f a)). Qed.
Lemma lem8259381 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259380 A B P p f a) (@lem8259377 A B P f p P' g a h1)). Qed.
Lemma lem8259399 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8259400 {A B P : Type'} (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term627 A B P _110082 p _110083 _110084) = (term631 A B P _110083 p _110082 _110084).
Proof. exact (@lem8259399 (term614 A B P p _110083 _110084) (term615 A B P p _110082 _110084)). Qed.
Lemma lem8259406 {A B P : Type'} (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) : (term785 A B P z _110082 _110083 _110084) = (term785 A B P z _110082 _110083 _110084).
Proof. exact (eq_refl (term785 A B P z _110082 _110083 _110084)). Qed.
Lemma lem8259407 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term738 A B P z _110082 p _110083 _110084) = (term786 A B P z _110083 p _110082 _110084).
Proof. exact (MK_COMB (@lem8259406 A B P z _110082 _110083 _110084) (@lem8259400 A B P _110083 p _110082 _110084)). Qed.
Lemma lem8259411 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8259412 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term786 A B P z _110083 p _110082 _110084) = (term787 A B P z _110083 p _110082 _110084).
Proof. exact (@lem8259411 (term614 A B P p _110083 _110084) (term647 A B P z _110082 _110083 _110084) (term615 A B P p _110082 _110084)). Qed.
Lemma lem8259430 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term738 A B P z _110082 p _110083 _110084) = (term787 A B P z _110083 p _110082 _110084).
Proof. exact (TRANS (@lem8259407 A B P z _110083 p _110082 _110084) (@lem8259412 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259431 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8259432 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term788 A B P z _110082 p _110083 _110084) = (term789 A B P z _110083 p _110082 _110084).
Proof. exact (MK_COMB (@lem8259431) (@lem8259430 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259450 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term787 A B P z _110083 p _110082 _110084) = (term787 A B P z _110083 p _110082 _110084).
Proof. exact (eq_refl (term787 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259451 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : ((term738 A B P z _110082 p _110083 _110084) = (term787 A B P z _110083 p _110082 _110084)) = ((term787 A B P z _110083 p _110082 _110084) = (term787 A B P z _110083 p _110082 _110084)).
Proof. exact (MK_COMB (@lem8259432 A B P z _110083 p _110082 _110084) (@lem8259450 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259453 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8259454 (x : Prop) : (x = x) = True.
Proof. exact (@lem8259453 Prop x). Qed.
Lemma lem8259455 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : ((term787 A B P z _110083 p _110082 _110084) = (term787 A B P z _110083 p _110082 _110084)) = True.
Proof. exact (@lem8259454 (term787 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259456 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : ((term738 A B P z _110082 p _110083 _110084) = (term787 A B P z _110083 p _110082 _110084)) = True.
Proof. exact (TRANS (@lem8259451 A B P z _110083 p _110082 _110084) (@lem8259455 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259457 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : True = ((term738 A B P z _110082 p _110083 _110084) = (term787 A B P z _110083 p _110082 _110084)).
Proof. exact (SYM (@lem8259456 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259458 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term738 A B P z _110082 p _110083 _110084) = (term787 A B P z _110083 p _110082 _110084).
Proof. exact (EQ_MP (@lem8259457 A B P z _110083 p _110082 _110084) (@lem0)). Qed.
Lemma lem8259459 {A B P : Type'} (_110083 : A -> B) (_110082 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term787 A B P z _110083 p _110082 _110084.
Proof. exact (EQ_MP (@lem8259458 A B P z _110083 p _110082 _110084) (@lem8258679 A B P _110082 _110083 _110084 lt2 s z p h1)). Qed.
Lemma lem8259461 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8259462 {A B P : Type'} (z : type518 A B P) (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term787 A B P z _110083 p _110082 _110084) = (term790 A B P z _110082 p _110083 _110084).
Proof. exact (@lem8259461 (term791 A B P z _110083 p _110082 _110084) (term614 A B P p _110083 _110084)). Qed.
Lemma lem8259464 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8259465 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term792 A B P z _110083 p _110082 _110084) = (term793 A B P z _110083 p _110082 _110084).
Proof. exact (@lem8259464 (term647 A B P z _110082 _110083 _110084) (term615 A B P p _110082 _110084)). Qed.
Lemma lem8259467 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259468 {A B P : Type'} (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) : (term794 A B P z _110082 _110083 _110084) = ((term640 A B P z _110082 _110083 _110084) = (term643 A B P z _110082 _110083 _110084)).
Proof. exact (@lem8259467 ((term640 A B P z _110082 _110083 _110084) = (term643 A B P z _110082 _110083 _110084))). Qed.
Lemma lem8259469 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8259470 {A B P : Type'} (z : type518 A B P) (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) : (term795 A B P z _110082 _110083 _110084) = (term796 A B P z _110082 _110083 _110084).
Proof. exact (MK_COMB (@lem8259469) (@lem8259468 A B P z _110082 _110083 _110084)). Qed.
Lemma lem8259472 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259473 {A B P : Type'} (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term767 A B P p _110082 _110084) = (term614 A B P p _110082 _110084).
Proof. exact (@lem8259472 (term614 A B P p _110082 _110084)). Qed.
Lemma lem8259474 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term793 A B P z _110083 p _110082 _110084) = (term797 A B P z _110083 p _110082 _110084).
Proof. exact (MK_COMB (@lem8259470 A B P z _110082 _110083 _110084) (@lem8259473 A B P p _110082 _110084)). Qed.
Lemma lem8259475 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term792 A B P z _110083 p _110082 _110084) = (term797 A B P z _110083 p _110082 _110084).
Proof. exact (TRANS (@lem8259465 A B P z _110083 p _110082 _110084) (@lem8259474 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259476 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8259477 {A B P : Type'} (z : type518 A B P) (_110083 : A -> B) (p : type560 A B P) (_110082 : A -> B) (_110084 : P) : (term798 A B P z _110083 p _110082 _110084) = (term799 A B P z _110083 p _110082 _110084).
Proof. exact (MK_COMB (@lem8259476) (@lem8259475 A B P z _110083 p _110082 _110084)). Qed.
Lemma lem8259478 {A B P : Type'} (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term614 A B P p _110083 _110084) = (term614 A B P p _110083 _110084).
Proof. exact (eq_refl (term614 A B P p _110083 _110084)). Qed.
Lemma lem8259479 {A B P : Type'} (z : type518 A B P) (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term790 A B P z _110082 p _110083 _110084) = (term800 A B P z _110082 p _110083 _110084).
Proof. exact (MK_COMB (@lem8259477 A B P z _110083 p _110082 _110084) (@lem8259478 A B P p _110083 _110084)). Qed.
Lemma lem8259480 {A B P : Type'} (z : type518 A B P) (_110082 : A -> B) (p : type560 A B P) (_110083 : A -> B) (_110084 : P) : (term787 A B P z _110083 p _110082 _110084) = (term800 A B P z _110082 p _110083 _110084).
Proof. exact (TRANS (@lem8259462 A B P z _110082 p _110083 _110084) (@lem8259479 A B P z _110082 p _110083 _110084)). Qed.
Lemma lem8259482 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term797 A B P z g p f a.
Proof. exact (conj (@lem8259374 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8259381 A B P f p P' g a h4)). Qed.
Lemma lem8259484 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _110082 p _110083 _110084.
Proof. exact (EQ_MP (@lem8259480 A B P z _110082 p _110083 _110084) (@lem8259459 A B P _110083 _110082 _110084 lt2 s z p h1)). Qed.
Lemma lem8259485 {A B P : Type'} (_110082 : A -> B) (_110083 : A -> B) (_110084 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _110082 p _110083 _110084.
Proof. exact (@lem8259484 A B P _110082 _110083 _110084 lt2 s z p h1). Qed.
Lemma lem8259486 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z f p g a.
Proof. exact (@lem8259485 A B P f g a lt2 s z p h1). Qed.
Lemma lem8259489 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (@lem8259486 A B P f g a lt2 s z p h2 (@lem8259482 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259490 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term982 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8259489 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8259492 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259493 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8259492 (term614 A B P p g a)). Qed.
Lemma lem8259494 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term982 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8259493 A B P p g a) (@lem8259490 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8259497 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8259499 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term615 A B P p g a) = (term801 A B P p g a).
Proof. exact (@lem8259497 (term614 A B P p g a)). Qed.
Lemma lem8259502 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term801 A B P p g a.
Proof. exact (EQ_MP (@lem8259499 A B P p g a) (@lem8258571 A B P p g a h1)). Qed.
Lemma lem8259505 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : False.
Proof. exact (@lem8259502 A B P p g a h3 (@lem8259494 A B P lt2 s z f p P' g a h1 h2 h4)). Qed.
Lemma lem8259506 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8259505 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8259508 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259509 : term802 = False.
Proof. exact (@lem8259508 False). Qed.
Lemma lem8259510 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8259509) (@lem8259506 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259662 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259663 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259662 A B P f p P' g a h1). Qed.
Lemma lem8259665 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259666 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259665 (term614 A B P p f a)). Qed.
Lemma lem8259667 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259666 A B P p f a) (@lem8259663 A B P f p P' g a h1)). Qed.
Lemma lem8259669 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259670 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259669 A B P f p P' g a h1). Qed.
Lemma lem8259672 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259673 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259672 (term614 A B P p f a)). Qed.
Lemma lem8259674 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259673 A B P p f a) (@lem8259670 A B P f p P' g a h1)). Qed.
Lemma lem8259677 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8259678 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term759 A B P p g a.
Proof. exact (fun h0 : term614 A B P p g a => @lem8259677 A B P p g a h1). Qed.
Lemma lem8259680 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8259681 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term759 A B P p g a) = (term615 A B P p g a).
Proof. exact (@lem8259680 (term614 A B P p g a)). Qed.
Lemma lem8259682 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (EQ_MP (@lem8259681 A B P p g a) (@lem8259678 A B P p g a h1)). Qed.
Lemma lem8259684 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8259685 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (s : P -> A) (_110091 : P) : (term737 A B P lt2 z s _110089 p _110090 _110091) = (term762 A B P p lt2 z _110089 _110090 s _110091).
Proof. exact (@lem8259684 (term627 A B P _110089 p _110090 _110091) (term654 A B P lt2 z _110089 _110090 s _110091)). Qed.
Lemma lem8259687 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8259688 {A B P : Type'} (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term765 A B P _110089 p _110090 _110091) = (term766 A B P _110089 p _110090 _110091).
Proof. exact (@lem8259687 (term615 A B P p _110089 _110091) (term614 A B P p _110090 _110091)). Qed.
Lemma lem8259690 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259691 {A B P : Type'} (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term767 A B P p _110089 _110091) = (term614 A B P p _110089 _110091).
Proof. exact (@lem8259690 (term614 A B P p _110089 _110091)). Qed.
Lemma lem8259692 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8259693 {A B P : Type'} (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term768 A B P p _110089 _110091) = (term616 A B P p _110089 _110091).
Proof. exact (MK_COMB (@lem8259692) (@lem8259691 A B P p _110089 _110091)). Qed.
Lemma lem8259694 {A B P : Type'} (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term615 A B P p _110090 _110091) = (term615 A B P p _110090 _110091).
Proof. exact (eq_refl (term615 A B P p _110090 _110091)). Qed.
Lemma lem8259695 {A B P : Type'} (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term766 A B P _110089 p _110090 _110091) = (term769 A B P _110089 p _110090 _110091).
Proof. exact (MK_COMB (@lem8259693 A B P p _110089 _110091) (@lem8259694 A B P p _110090 _110091)). Qed.
Lemma lem8259696 {A B P : Type'} (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term765 A B P _110089 p _110090 _110091) = (term769 A B P _110089 p _110090 _110091).
Proof. exact (TRANS (@lem8259688 A B P _110089 p _110090 _110091) (@lem8259695 A B P _110089 p _110090 _110091)). Qed.
Lemma lem8259697 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8259698 {A B P : Type'} (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term770 A B P _110089 p _110090 _110091) = (term771 A B P _110089 p _110090 _110091).
Proof. exact (MK_COMB (@lem8259697) (@lem8259696 A B P _110089 p _110090 _110091)). Qed.
Lemma lem8259699 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (s : P -> A) (_110091 : P) : (term654 A B P lt2 z _110089 _110090 s _110091) = (term654 A B P lt2 z _110089 _110090 s _110091).
Proof. exact (eq_refl (term654 A B P lt2 z _110089 _110090 s _110091)). Qed.
Lemma lem8259700 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (s : P -> A) (_110091 : P) : (term762 A B P p lt2 z _110089 _110090 s _110091) = (term772 A B P p lt2 z _110089 _110090 s _110091).
Proof. exact (MK_COMB (@lem8259698 A B P _110089 p _110090 _110091) (@lem8259699 A B P lt2 z _110089 _110090 s _110091)). Qed.
Lemma lem8259701 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (s : P -> A) (_110091 : P) : (term737 A B P lt2 z s _110089 p _110090 _110091) = (term772 A B P p lt2 z _110089 _110090 s _110091).
Proof. exact (TRANS (@lem8259685 A B P p lt2 z _110089 _110090 s _110091) (@lem8259700 A B P p lt2 z _110089 _110090 s _110091)). Qed.
Lemma lem8259703 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) (h2 : term982 A B P f p P' g a) : term769 A B P f p g a.
Proof. exact (conj (@lem8259674 A B P f p P' g a h2) (@lem8259682 A B P p g a h1)). Qed.
Lemma lem8259705 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _110089 _110090 s _110091.
Proof. exact (EQ_MP (@lem8259701 A B P p lt2 z _110089 _110090 s _110091) (@lem8258809 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8259706 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _110089 _110090 s _110091.
Proof. exact (@lem8259705 A B P _110089 _110090 _110091 lt2 s z p h1). Qed.
Lemma lem8259707 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z f g s a.
Proof. exact (@lem8259706 A B P f g a lt2 s z p h1). Qed.
Lemma lem8259710 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8259707 A B P f g a lt2 s z p h1 (@lem8259703 A B P f p P' g a h2 h3)). Qed.
Lemma lem8259711 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8259710 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8259713 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259714 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8259713 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8259715 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8259714 A B P lt2 z f g s a) (@lem8259711 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8259721 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8259722 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110088) = (term775 A B P f g lt2 _110088 s a).
Proof. exact (@lem8259721 ((@I (A -> B) f _110088) = (@I (A -> B) g _110088)) (term608 A P lt2 _110088 s a)). Qed.
Lemma lem8259730 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8259731 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _110088) = (term777 A B P f g lt2 _110088 s a).
Proof. exact (MK_COMB (@lem8259730) (@lem8259722 A B P f g lt2 _110088 s a)). Qed.
Lemma lem8259739 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _110088 s a) = (term775 A B P f g lt2 _110088 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _110088 s a)). Qed.
Lemma lem8259740 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110088) = (term775 A B P f g lt2 _110088 s a)) = ((term775 A B P f g lt2 _110088 s a) = (term775 A B P f g lt2 _110088 s a)).
Proof. exact (MK_COMB (@lem8259731 A B P f g lt2 _110088 s a) (@lem8259739 A B P f g lt2 _110088 s a)). Qed.
Lemma lem8259742 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8259743 (x : Prop) : (x = x) = True.
Proof. exact (@lem8259742 Prop x). Qed.
Lemma lem8259744 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _110088 s a) = (term775 A B P f g lt2 _110088 s a)) = True.
Proof. exact (@lem8259743 (term775 A B P f g lt2 _110088 s a)). Qed.
Lemma lem8259745 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110088) = (term775 A B P f g lt2 _110088 s a)) = True.
Proof. exact (TRANS (@lem8259740 A B P f g lt2 _110088 s a) (@lem8259744 A B P f g lt2 _110088 s a)). Qed.
Lemma lem8259746 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _110088) = (term775 A B P f g lt2 _110088 s a)).
Proof. exact (SYM (@lem8259745 A B P f g lt2 _110088 s a)). Qed.
Lemma lem8259747 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110088) = (term775 A B P f g lt2 _110088 s a).
Proof. exact (EQ_MP (@lem8259746 A B P f g lt2 _110088 s a) (@lem0)). Qed.
Lemma lem8259748 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _110088 s a.
Proof. exact (EQ_MP (@lem8259747 A B P f g lt2 _110088 s a) (@lem8258705 A B P _110088 lt2 s a f g h1)). Qed.
Lemma lem8259750 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8259751 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110088 : A) : (term775 A B P f g lt2 _110088 s a) = (term778 A B P lt2 s a f g _110088).
Proof. exact (@lem8259750 (term608 A P lt2 _110088 s a) ((@I (A -> B) f _110088) = (@I (A -> B) g _110088))). Qed.
Lemma lem8259753 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259754 {A P : Type'} (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : (term779 A P lt2 _110088 s a) = (term606 A P lt2 _110088 s a).
Proof. exact (@lem8259753 (term606 A P lt2 _110088 s a)). Qed.
Lemma lem8259755 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8259756 {A P : Type'} (lt2 : type1402 A) (_110088 : A) (s : P -> A) (a : P) : (term780 A P lt2 _110088 s a) = (term781 A P lt2 _110088 s a).
Proof. exact (MK_COMB (@lem8259755) (@lem8259754 A P lt2 _110088 s a)). Qed.
Lemma lem8259757 {A B : Type'} (f : A -> B) (g : A -> B) (_110088 : A) : ((@I (A -> B) f _110088) = (@I (A -> B) g _110088)) = ((@I (A -> B) f _110088) = (@I (A -> B) g _110088)).
Proof. exact (eq_refl ((@I (A -> B) f _110088) = (@I (A -> B) g _110088))). Qed.
Lemma lem8259758 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110088 : A) : (term778 A B P lt2 s a f g _110088) = (term782 A B P lt2 s a f g _110088).
Proof. exact (MK_COMB (@lem8259756 A P lt2 _110088 s a) (@lem8259757 A B f g _110088)). Qed.
Lemma lem8259759 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110088 : A) : (term775 A B P f g lt2 _110088 s a) = (term782 A B P lt2 s a f g _110088).
Proof. exact (TRANS (@lem8259751 A B P lt2 s a f g _110088) (@lem8259758 A B P lt2 s a f g _110088)). Qed.
Lemma lem8259762 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110088.
Proof. exact (EQ_MP (@lem8259759 A B P lt2 s a f g _110088) (@lem8259748 A B P _110088 lt2 s a f g h1)). Qed.
Lemma lem8259763 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110088.
Proof. exact (@lem8259762 A B P _110088 lt2 s a f g h1). Qed.
Lemma lem8259764 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8259763 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8259767 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8259764 A B P z lt2 s a f g h1 (@lem8259715 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8259768 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8259767 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8259770 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259771 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8259770 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8259772 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8259771 A B P z f g a) (@lem8259768 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259774 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259775 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259774 A B P f p P' g a h1). Qed.
Lemma lem8259777 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259778 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259777 (term614 A B P p f a)). Qed.
Lemma lem8259779 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259778 A B P p f a) (@lem8259775 A B P f p P' g a h1)). Qed.
Lemma lem8259797 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8259798 {A B P : Type'} (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term627 A B P _110089 p _110090 _110091) = (term631 A B P _110090 p _110089 _110091).
Proof. exact (@lem8259797 (term614 A B P p _110090 _110091) (term615 A B P p _110089 _110091)). Qed.
Lemma lem8259804 {A B P : Type'} (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) : (term785 A B P z _110089 _110090 _110091) = (term785 A B P z _110089 _110090 _110091).
Proof. exact (eq_refl (term785 A B P z _110089 _110090 _110091)). Qed.
Lemma lem8259805 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term738 A B P z _110089 p _110090 _110091) = (term786 A B P z _110090 p _110089 _110091).
Proof. exact (MK_COMB (@lem8259804 A B P z _110089 _110090 _110091) (@lem8259798 A B P _110090 p _110089 _110091)). Qed.
Lemma lem8259809 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8259810 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term786 A B P z _110090 p _110089 _110091) = (term787 A B P z _110090 p _110089 _110091).
Proof. exact (@lem8259809 (term614 A B P p _110090 _110091) (term647 A B P z _110089 _110090 _110091) (term615 A B P p _110089 _110091)). Qed.
Lemma lem8259828 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term738 A B P z _110089 p _110090 _110091) = (term787 A B P z _110090 p _110089 _110091).
Proof. exact (TRANS (@lem8259805 A B P z _110090 p _110089 _110091) (@lem8259810 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259829 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8259830 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term788 A B P z _110089 p _110090 _110091) = (term789 A B P z _110090 p _110089 _110091).
Proof. exact (MK_COMB (@lem8259829) (@lem8259828 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259848 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term787 A B P z _110090 p _110089 _110091) = (term787 A B P z _110090 p _110089 _110091).
Proof. exact (eq_refl (term787 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259849 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : ((term738 A B P z _110089 p _110090 _110091) = (term787 A B P z _110090 p _110089 _110091)) = ((term787 A B P z _110090 p _110089 _110091) = (term787 A B P z _110090 p _110089 _110091)).
Proof. exact (MK_COMB (@lem8259830 A B P z _110090 p _110089 _110091) (@lem8259848 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259851 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8259852 (x : Prop) : (x = x) = True.
Proof. exact (@lem8259851 Prop x). Qed.
Lemma lem8259853 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : ((term787 A B P z _110090 p _110089 _110091) = (term787 A B P z _110090 p _110089 _110091)) = True.
Proof. exact (@lem8259852 (term787 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259854 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : ((term738 A B P z _110089 p _110090 _110091) = (term787 A B P z _110090 p _110089 _110091)) = True.
Proof. exact (TRANS (@lem8259849 A B P z _110090 p _110089 _110091) (@lem8259853 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259855 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : True = ((term738 A B P z _110089 p _110090 _110091) = (term787 A B P z _110090 p _110089 _110091)).
Proof. exact (SYM (@lem8259854 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259856 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term738 A B P z _110089 p _110090 _110091) = (term787 A B P z _110090 p _110089 _110091).
Proof. exact (EQ_MP (@lem8259855 A B P z _110090 p _110089 _110091) (@lem0)). Qed.
Lemma lem8259857 {A B P : Type'} (_110090 : A -> B) (_110089 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term787 A B P z _110090 p _110089 _110091.
Proof. exact (EQ_MP (@lem8259856 A B P z _110090 p _110089 _110091) (@lem8258819 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8259859 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8259860 {A B P : Type'} (z : type518 A B P) (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term787 A B P z _110090 p _110089 _110091) = (term790 A B P z _110089 p _110090 _110091).
Proof. exact (@lem8259859 (term791 A B P z _110090 p _110089 _110091) (term614 A B P p _110090 _110091)). Qed.
Lemma lem8259862 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8259863 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term792 A B P z _110090 p _110089 _110091) = (term793 A B P z _110090 p _110089 _110091).
Proof. exact (@lem8259862 (term647 A B P z _110089 _110090 _110091) (term615 A B P p _110089 _110091)). Qed.
Lemma lem8259865 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259866 {A B P : Type'} (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) : (term794 A B P z _110089 _110090 _110091) = ((term640 A B P z _110089 _110090 _110091) = (term643 A B P z _110089 _110090 _110091)).
Proof. exact (@lem8259865 ((term640 A B P z _110089 _110090 _110091) = (term643 A B P z _110089 _110090 _110091))). Qed.
Lemma lem8259867 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8259868 {A B P : Type'} (z : type518 A B P) (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) : (term795 A B P z _110089 _110090 _110091) = (term796 A B P z _110089 _110090 _110091).
Proof. exact (MK_COMB (@lem8259867) (@lem8259866 A B P z _110089 _110090 _110091)). Qed.
Lemma lem8259870 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8259871 {A B P : Type'} (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term767 A B P p _110089 _110091) = (term614 A B P p _110089 _110091).
Proof. exact (@lem8259870 (term614 A B P p _110089 _110091)). Qed.
Lemma lem8259872 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term793 A B P z _110090 p _110089 _110091) = (term797 A B P z _110090 p _110089 _110091).
Proof. exact (MK_COMB (@lem8259868 A B P z _110089 _110090 _110091) (@lem8259871 A B P p _110089 _110091)). Qed.
Lemma lem8259873 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term792 A B P z _110090 p _110089 _110091) = (term797 A B P z _110090 p _110089 _110091).
Proof. exact (TRANS (@lem8259863 A B P z _110090 p _110089 _110091) (@lem8259872 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259874 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8259875 {A B P : Type'} (z : type518 A B P) (_110090 : A -> B) (p : type560 A B P) (_110089 : A -> B) (_110091 : P) : (term798 A B P z _110090 p _110089 _110091) = (term799 A B P z _110090 p _110089 _110091).
Proof. exact (MK_COMB (@lem8259874) (@lem8259873 A B P z _110090 p _110089 _110091)). Qed.
Lemma lem8259876 {A B P : Type'} (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term614 A B P p _110090 _110091) = (term614 A B P p _110090 _110091).
Proof. exact (eq_refl (term614 A B P p _110090 _110091)). Qed.
Lemma lem8259877 {A B P : Type'} (z : type518 A B P) (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term790 A B P z _110089 p _110090 _110091) = (term800 A B P z _110089 p _110090 _110091).
Proof. exact (MK_COMB (@lem8259875 A B P z _110090 p _110089 _110091) (@lem8259876 A B P p _110090 _110091)). Qed.
Lemma lem8259878 {A B P : Type'} (z : type518 A B P) (_110089 : A -> B) (p : type560 A B P) (_110090 : A -> B) (_110091 : P) : (term787 A B P z _110090 p _110089 _110091) = (term800 A B P z _110089 p _110090 _110091).
Proof. exact (TRANS (@lem8259860 A B P z _110089 p _110090 _110091) (@lem8259877 A B P z _110089 p _110090 _110091)). Qed.
Lemma lem8259880 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term797 A B P z g p f a.
Proof. exact (conj (@lem8259772 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8259779 A B P f p P' g a h4)). Qed.
Lemma lem8259882 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _110089 p _110090 _110091.
Proof. exact (EQ_MP (@lem8259878 A B P z _110089 p _110090 _110091) (@lem8259857 A B P _110090 _110089 _110091 lt2 s z p h1)). Qed.
Lemma lem8259883 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _110089 p _110090 _110091.
Proof. exact (@lem8259882 A B P _110089 _110090 _110091 lt2 s z p h1). Qed.
Lemma lem8259884 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z f p g a.
Proof. exact (@lem8259883 A B P f g a lt2 s z p h1). Qed.
Lemma lem8259887 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (@lem8259884 A B P f g a lt2 s z p h2 (@lem8259880 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259888 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term982 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8259887 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8259890 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259891 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8259890 (term614 A B P p g a)). Qed.
Lemma lem8259892 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term982 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8259891 A B P p g a) (@lem8259888 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8259894 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259895 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259894 A B P f p P' g a h1). Qed.
Lemma lem8259897 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259898 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259897 (term614 A B P p f a)). Qed.
Lemma lem8259899 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259898 A B P p f a) (@lem8259895 A B P f p P' g a h1)). Qed.
Lemma lem8259901 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259902 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259901 A B P f p P' g a h1). Qed.
Lemma lem8259904 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259905 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259904 (term614 A B P p f a)). Qed.
Lemma lem8259906 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259905 A B P p f a) (@lem8259902 A B P f p P' g a h1)). Qed.
Lemma lem8259909 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (h1). Qed.
Lemma lem8259910 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term759 A B P p g a.
Proof. exact (fun h0 : term614 A B P p g a => @lem8259909 A B P p g a h1). Qed.
Lemma lem8259912 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8259913 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term759 A B P p g a) = (term615 A B P p g a).
Proof. exact (@lem8259912 (term614 A B P p g a)). Qed.
Lemma lem8259914 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) : term615 A B P p g a.
Proof. exact (EQ_MP (@lem8259913 A B P p g a) (@lem8259910 A B P p g a h1)). Qed.
Lemma lem8259915 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p g a) (h2 : term982 A B P f p P' g a) : term769 A B P f p g a.
Proof. exact (conj (@lem8259906 A B P f p P' g a h2) (@lem8259914 A B P p g a h1)). Qed.
Lemma lem8259917 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _110089 _110090 s _110091.
Proof. exact (EQ_MP (@lem8259701 A B P p lt2 z _110089 _110090 s _110091) (@lem8258809 A B P _110089 _110090 _110091 lt2 s z p h1)). Qed.
Lemma lem8259918 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z _110089 _110090 s _110091.
Proof. exact (@lem8259917 A B P _110089 _110090 _110091 lt2 s z p h1). Qed.
Lemma lem8259919 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term772 A B P p lt2 z f g s a.
Proof. exact (@lem8259918 A B P f g a lt2 s z p h1). Qed.
Lemma lem8259922 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8259919 A B P f g a lt2 s z p h1 (@lem8259915 A B P f p P' g a h2 h3)). Qed.
Lemma lem8259923 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8259922 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8259925 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259926 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8259925 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8259927 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p g a) (h3 : term982 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8259926 A B P lt2 z f g s a) (@lem8259923 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8259929 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110088.
Proof. exact (EQ_MP (@lem8259759 A B P lt2 s a f g _110088) (@lem8259748 A B P _110088 lt2 s a f g h1)). Qed.
Lemma lem8259930 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110088.
Proof. exact (@lem8259929 A B P _110088 lt2 s a f g h1). Qed.
Lemma lem8259931 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8259930 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8259934 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8259931 A B P z lt2 s a f g h1 (@lem8259927 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8259935 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8259934 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8259937 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259938 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8259937 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8259939 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8259938 A B P z f g a) (@lem8259935 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259941 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (proj1 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259942 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8259941 A B P f p P' g a h1). Qed.
Lemma lem8259944 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259945 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8259944 (term614 A B P p f a)). Qed.
Lemma lem8259946 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8259945 A B P p f a) (@lem8259942 A B P f p P' g a h1)). Qed.
Lemma lem8259947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term797 A B P z g p f a.
Proof. exact (conj (@lem8259939 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8259946 A B P f p P' g a h4)). Qed.
Lemma lem8259949 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _110089 p _110090 _110091.
Proof. exact (EQ_MP (@lem8259878 A B P z _110089 p _110090 _110091) (@lem8259857 A B P _110090 _110089 _110091 lt2 s z p h1)). Qed.
Lemma lem8259950 {A B P : Type'} (_110089 : A -> B) (_110090 : A -> B) (_110091 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z _110089 p _110090 _110091.
Proof. exact (@lem8259949 A B P _110089 _110090 _110091 lt2 s z p h1). Qed.
Lemma lem8259951 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term800 A B P z f p g a.
Proof. exact (@lem8259950 A B P f g a lt2 s z p h1). Qed.
Lemma lem8259954 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (@lem8259951 A B P f g a lt2 s z p h2 (@lem8259947 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8259955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term982 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8259954 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8259957 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259958 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8259957 (term614 A B P p g a)). Qed.
Lemma lem8259959 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term982 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8259958 A B P p g a) (@lem8259955 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8259961 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P P' f a.
Proof. exact (proj2 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8259962 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P P' f a.
Proof. exact (fun h0 : term615 A B P P' f a => @lem8259961 A B P f p P' g a h1). Qed.
Lemma lem8259964 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8259965 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8259964 (term614 A B P P' f a)). Qed.
Lemma lem8259966 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P P' f a.
Proof. exact (EQ_MP (@lem8259965 A B P P' f a) (@lem8259962 A B P f p P' g a h1)). Qed.
Lemma lem8259969 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term615 A B P P' g a.
Proof. exact (h1). Qed.
Lemma lem8259970 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term759 A B P P' g a.
Proof. exact (fun h0 : term614 A B P P' g a => @lem8259969 A B P P' g a h1). Qed.
Lemma lem8259972 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8259973 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term759 A B P P' g a) = (term615 A B P P' g a).
Proof. exact (@lem8259972 (term614 A B P P' g a)). Qed.
Lemma lem8259974 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term615 A B P P' g a.
Proof. exact (EQ_MP (@lem8259973 A B P P' g a) (@lem8259970 A B P P' g a h1)). Qed.
Lemma lem8259990 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8259991 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term751 A B P p lt2 z' s _110092 P' _110093 _110094) = (term876 A B P lt2 z' s p _110092 P' _110093 _110094).
Proof. exact (@lem8259990 (term654 A B P lt2 z' _110092 _110093 s _110094) (term615 A B P p _110093 _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8260005 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260006 {A B P : Type'} (_110092 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term877 A B P p _110092 P' _110093 _110094) = (term878 A B P _110092 p P' _110093 _110094).
Proof. exact (@lem8260005 (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094) (term614 A B P P' _110093 _110094)). Qed.
Lemma lem8260020 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8260021 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term619 A B P p P' _110093 _110094) = (term879 A B P P' p _110093 _110094).
Proof. exact (@lem8260020 (term614 A B P P' _110093 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260027 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P P' _110092 _110094) = (term618 A B P P' _110092 _110094).
Proof. exact (eq_refl (term618 A B P P' _110092 _110094)). Qed.
Lemma lem8260028 {A B P : Type'} (_110092 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term878 A B P _110092 p P' _110093 _110094) = (term880 A B P _110092 P' p _110093 _110094).
Proof. exact (MK_COMB (@lem8260027 A B P P' _110092 _110094) (@lem8260021 A B P P' p _110093 _110094)). Qed.
Lemma lem8260032 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260033 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term880 A B P _110092 P' p _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260032 (term614 A B P P' _110093 _110094) (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260049 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term878 A B P _110092 p P' _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260028 A B P _110092 P' p _110093 _110094) (@lem8260033 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260050 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term877 A B P p _110092 P' _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260006 A B P _110092 p P' _110093 _110094) (@lem8260049 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260051 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term808 A B P lt2 z' _110092 _110093 s _110094) = (term808 A B P lt2 z' _110092 _110093 s _110094).
Proof. exact (eq_refl (term808 A B P lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260052 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term876 A B P lt2 z' s p _110092 P' _110093 _110094) = (term882 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260051 A B P lt2 z' _110092 _110093 s _110094) (@lem8260050 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260063 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term751 A B P p lt2 z' s _110092 P' _110093 _110094) = (term882 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8259991 A B P lt2 z' s p _110092 P' _110093 _110094) (@lem8260052 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260064 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P p _110092 _110094) = (term618 A B P p _110092 _110094).
Proof. exact (eq_refl (term618 A B P p _110092 _110094)). Qed.
Lemma lem8260065 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term752 A B P p lt2 z' s _110092 P' _110093 _110094) = (term883 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260064 A B P p _110092 _110094) (@lem8260063 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260069 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260070 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term883 A B P lt2 z' s P' _110092 p _110093 _110094) = (term884 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (@lem8260069 (term654 A B P lt2 z' _110092 _110093 s _110094) (term615 A B P p _110092 _110094) (term881 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260084 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260085 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term885 A B P P' _110092 p _110093 _110094) = (term886 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260084 (term614 A B P P' _110093 _110094) (term615 A B P p _110092 _110094) (term887 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260099 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260100 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term888 A B P P' _110092 p _110093 _110094) = (term889 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260099 (term615 A B P P' _110092 _110094) (term615 A B P p _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260116 {A B P : Type'} (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term629 A B P P' _110093 _110094) = (term629 A B P P' _110093 _110094).
Proof. exact (eq_refl (term629 A B P P' _110093 _110094)). Qed.
Lemma lem8260117 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term886 A B P P' _110092 p _110093 _110094) = (term890 A B P P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260116 A B P P' _110093 _110094) (@lem8260100 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260128 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term885 A B P P' _110092 p _110093 _110094) = (term890 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260085 A B P P' _110092 p _110093 _110094) (@lem8260117 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260129 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term808 A B P lt2 z' _110092 _110093 s _110094) = (term808 A B P lt2 z' _110092 _110093 s _110094).
Proof. exact (eq_refl (term808 A B P lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260130 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term884 A B P lt2 z' s P' _110092 p _110093 _110094) = (term891 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260129 A B P lt2 z' _110092 _110093 s _110094) (@lem8260128 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260141 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term883 A B P lt2 z' s P' _110092 p _110093 _110094) = (term891 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260070 A B P lt2 z' s P' _110092 p _110093 _110094) (@lem8260130 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260142 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term752 A B P p lt2 z' s _110092 P' _110093 _110094) = (term891 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260065 A B P lt2 z' s P' _110092 p _110093 _110094) (@lem8260141 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260143 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8260144 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term892 A B P p lt2 z' s _110092 P' _110093 _110094) = (term893 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260143) (@lem8260142 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260168 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260169 {A B P : Type'} (_110092 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term877 A B P p _110092 P' _110093 _110094) = (term878 A B P _110092 p P' _110093 _110094).
Proof. exact (@lem8260168 (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094) (term614 A B P P' _110093 _110094)). Qed.
Lemma lem8260183 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8260184 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term619 A B P p P' _110093 _110094) = (term879 A B P P' p _110093 _110094).
Proof. exact (@lem8260183 (term614 A B P P' _110093 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260190 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P P' _110092 _110094) = (term618 A B P P' _110092 _110094).
Proof. exact (eq_refl (term618 A B P P' _110092 _110094)). Qed.
Lemma lem8260191 {A B P : Type'} (_110092 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term878 A B P _110092 p P' _110093 _110094) = (term880 A B P _110092 P' p _110093 _110094).
Proof. exact (MK_COMB (@lem8260190 A B P P' _110092 _110094) (@lem8260184 A B P P' p _110093 _110094)). Qed.
Lemma lem8260195 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260196 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term880 A B P _110092 P' p _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260195 (term614 A B P P' _110093 _110094) (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260212 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term878 A B P _110092 p P' _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260191 A B P _110092 P' p _110093 _110094) (@lem8260196 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260213 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term877 A B P p _110092 P' _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260169 A B P _110092 p P' _110093 _110094) (@lem8260212 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260214 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P p _110092 _110094) = (term618 A B P p _110092 _110094).
Proof. exact (eq_refl (term618 A B P p _110092 _110094)). Qed.
Lemma lem8260215 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term894 A B P p _110092 P' _110093 _110094) = (term885 A B P P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260214 A B P p _110092 _110094) (@lem8260213 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260219 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260220 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term885 A B P P' _110092 p _110093 _110094) = (term886 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260219 (term614 A B P P' _110093 _110094) (term615 A B P p _110092 _110094) (term887 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260234 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260235 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term888 A B P P' _110092 p _110093 _110094) = (term889 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260234 (term615 A B P P' _110092 _110094) (term615 A B P p _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260251 {A B P : Type'} (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term629 A B P P' _110093 _110094) = (term629 A B P P' _110093 _110094).
Proof. exact (eq_refl (term629 A B P P' _110093 _110094)). Qed.
Lemma lem8260252 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term886 A B P P' _110092 p _110093 _110094) = (term890 A B P P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260251 A B P P' _110093 _110094) (@lem8260235 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260263 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term885 A B P P' _110092 p _110093 _110094) = (term890 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260220 A B P P' _110092 p _110093 _110094) (@lem8260252 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260264 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term894 A B P p _110092 P' _110093 _110094) = (term890 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260215 A B P P' _110092 p _110093 _110094) (@lem8260263 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260265 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term808 A B P lt2 z' _110092 _110093 s _110094) = (term808 A B P lt2 z' _110092 _110093 s _110094).
Proof. exact (eq_refl (term808 A B P lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260266 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term895 A B P lt2 z' s p _110092 P' _110093 _110094) = (term891 A B P lt2 z' s P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260265 A B P lt2 z' _110092 _110093 s _110094) (@lem8260264 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260277 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : ((term752 A B P p lt2 z' s _110092 P' _110093 _110094) = (term895 A B P lt2 z' s p _110092 P' _110093 _110094)) = ((term891 A B P lt2 z' s P' _110092 p _110093 _110094) = (term891 A B P lt2 z' s P' _110092 p _110093 _110094)).
Proof. exact (MK_COMB (@lem8260144 A B P lt2 z' s P' _110092 p _110093 _110094) (@lem8260266 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260279 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8260280 (x : Prop) : (x = x) = True.
Proof. exact (@lem8260279 Prop x). Qed.
Lemma lem8260281 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : ((term891 A B P lt2 z' s P' _110092 p _110093 _110094) = (term891 A B P lt2 z' s P' _110092 p _110093 _110094)) = True.
Proof. exact (@lem8260280 (term891 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260282 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : ((term752 A B P p lt2 z' s _110092 P' _110093 _110094) = (term895 A B P lt2 z' s p _110092 P' _110093 _110094)) = True.
Proof. exact (TRANS (@lem8260277 A B P lt2 z' s P' _110092 p _110093 _110094) (@lem8260281 A B P lt2 z' s P' _110092 p _110093 _110094)). Qed.
Lemma lem8260283 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : True = ((term752 A B P p lt2 z' s _110092 P' _110093 _110094) = (term895 A B P lt2 z' s p _110092 P' _110093 _110094)).
Proof. exact (SYM (@lem8260282 A B P lt2 z' s p _110092 P' _110093 _110094)). Qed.
Lemma lem8260284 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term752 A B P p lt2 z' s _110092 P' _110093 _110094) = (term895 A B P lt2 z' s p _110092 P' _110093 _110094).
Proof. exact (EQ_MP (@lem8260283 A B P lt2 z' s p _110092 P' _110093 _110094) (@lem0)). Qed.
Lemma lem8260285 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term895 A B P lt2 z' s p _110092 P' _110093 _110094.
Proof. exact (EQ_MP (@lem8260284 A B P lt2 z' s p _110092 P' _110093 _110094) (@lem8258733 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8260287 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8260288 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term895 A B P lt2 z' s p _110092 P' _110093 _110094) = (term896 A B P p P' lt2 z' _110092 _110093 s _110094).
Proof. exact (@lem8260287 (term894 A B P p _110092 P' _110093 _110094) (term654 A B P lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260290 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260291 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term897 A B P p _110092 P' _110093 _110094) = (term898 A B P p _110092 P' _110093 _110094).
Proof. exact (@lem8260290 (term615 A B P p _110092 _110094) (term877 A B P p _110092 P' _110093 _110094)). Qed.
Lemma lem8260293 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260294 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term767 A B P p _110092 _110094) = (term614 A B P p _110092 _110094).
Proof. exact (@lem8260293 (term614 A B P p _110092 _110094)). Qed.
Lemma lem8260295 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8260296 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term768 A B P p _110092 _110094) = (term616 A B P p _110092 _110094).
Proof. exact (MK_COMB (@lem8260295) (@lem8260294 A B P p _110092 _110094)). Qed.
Lemma lem8260298 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260299 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term899 A B P p _110092 P' _110093 _110094) = (term900 A B P p _110092 P' _110093 _110094).
Proof. exact (@lem8260298 (term615 A B P p _110093 _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8260301 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260302 {A B P : Type'} (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term767 A B P p _110093 _110094) = (term614 A B P p _110093 _110094).
Proof. exact (@lem8260301 (term614 A B P p _110093 _110094)). Qed.
Lemma lem8260303 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8260304 {A B P : Type'} (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term768 A B P p _110093 _110094) = (term616 A B P p _110093 _110094).
Proof. exact (MK_COMB (@lem8260303) (@lem8260302 A B P p _110093 _110094)). Qed.
Lemma lem8260306 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260307 {A B P : Type'} (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term765 A B P _110092 P' _110093 _110094) = (term766 A B P _110092 P' _110093 _110094).
Proof. exact (@lem8260306 (term615 A B P P' _110092 _110094) (term614 A B P P' _110093 _110094)). Qed.
Lemma lem8260309 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260310 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term767 A B P P' _110092 _110094) = (term614 A B P P' _110092 _110094).
Proof. exact (@lem8260309 (term614 A B P P' _110092 _110094)). Qed.
Lemma lem8260311 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8260312 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term768 A B P P' _110092 _110094) = (term616 A B P P' _110092 _110094).
Proof. exact (MK_COMB (@lem8260311) (@lem8260310 A B P P' _110092 _110094)). Qed.
Lemma lem8260313 {A B P : Type'} (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term615 A B P P' _110093 _110094) = (term615 A B P P' _110093 _110094).
Proof. exact (eq_refl (term615 A B P P' _110093 _110094)). Qed.
Lemma lem8260314 {A B P : Type'} (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term766 A B P _110092 P' _110093 _110094) = (term769 A B P _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8260312 A B P P' _110092 _110094) (@lem8260313 A B P P' _110093 _110094)). Qed.
Lemma lem8260315 {A B P : Type'} (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term765 A B P _110092 P' _110093 _110094) = (term769 A B P _110092 P' _110093 _110094).
Proof. exact (TRANS (@lem8260307 A B P _110092 P' _110093 _110094) (@lem8260314 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8260316 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term900 A B P p _110092 P' _110093 _110094) = (term901 A B P p _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8260304 A B P p _110093 _110094) (@lem8260315 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8260317 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term899 A B P p _110092 P' _110093 _110094) = (term901 A B P p _110092 P' _110093 _110094).
Proof. exact (TRANS (@lem8260299 A B P p _110092 P' _110093 _110094) (@lem8260316 A B P p _110092 P' _110093 _110094)). Qed.
Lemma lem8260318 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term898 A B P p _110092 P' _110093 _110094) = (term902 A B P p _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8260296 A B P p _110092 _110094) (@lem8260317 A B P p _110092 P' _110093 _110094)). Qed.
Lemma lem8260319 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term897 A B P p _110092 P' _110093 _110094) = (term902 A B P p _110092 P' _110093 _110094).
Proof. exact (TRANS (@lem8260291 A B P p _110092 P' _110093 _110094) (@lem8260318 A B P p _110092 P' _110093 _110094)). Qed.
Lemma lem8260320 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8260321 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term903 A B P p _110092 P' _110093 _110094) = (term904 A B P p _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8260320) (@lem8260319 A B P p _110092 P' _110093 _110094)). Qed.
Lemma lem8260322 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term654 A B P lt2 z' _110092 _110093 s _110094) = (term654 A B P lt2 z' _110092 _110093 s _110094).
Proof. exact (eq_refl (term654 A B P lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260323 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term896 A B P p P' lt2 z' _110092 _110093 s _110094) = (term905 A B P p P' lt2 z' _110092 _110093 s _110094).
Proof. exact (MK_COMB (@lem8260321 A B P p _110092 P' _110093 _110094) (@lem8260322 A B P lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260324 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (s : P -> A) (_110094 : P) : (term895 A B P lt2 z' s p _110092 P' _110093 _110094) = (term905 A B P p P' lt2 z' _110092 _110093 s _110094).
Proof. exact (TRANS (@lem8260288 A B P p P' lt2 z' _110092 _110093 s _110094) (@lem8260323 A B P p P' lt2 z' _110092 _110093 s _110094)). Qed.
Lemma lem8260326 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) (h2 : term982 A B P f p P' g a) : term769 A B P f P' g a.
Proof. exact (conj (@lem8259966 A B P f p P' g a h2) (@lem8259974 A B P P' g a h1)). Qed.
Lemma lem8260327 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P P' g a) (h4 : term982 A B P f p P' g a) : term901 A B P p f P' g a.
Proof. exact (conj (@lem8259959 A B P lt2 s z f p P' g a h1 h2 h4) (@lem8260326 A B P f p P' g a h3 h4)). Qed.
Lemma lem8260328 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P P' g a) (h4 : term982 A B P f p P' g a) : term902 A B P p f P' g a.
Proof. exact (conj (@lem8259899 A B P f p P' g a h4) (@lem8260327 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8260330 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term905 A B P p P' lt2 z' _110092 _110093 s _110094.
Proof. exact (EQ_MP (@lem8260324 A B P p P' lt2 z' _110092 _110093 s _110094) (@lem8260285 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8260331 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term905 A B P p P' lt2 z' _110092 _110093 s _110094.
Proof. exact (@lem8260330 A B P _110092 _110093 _110094 p lt2 s z' P' h1). Qed.
Lemma lem8260332 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term905 A B P p P' lt2 z' f g s a.
Proof. exact (@lem8260331 A B P f g a p lt2 s z' P' h1). Qed.
Lemma lem8260335 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term654 A B P lt2 z' f g s a.
Proof. exact (@lem8260332 A B P f g a p lt2 s z' P' h3 (@lem8260328 A B P lt2 s z f p P' g a h1 h2 h4 h5)). Qed.
Lemma lem8260336 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term773 A B P lt2 z' f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z' f g s a => @lem8260335 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8260338 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260339 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (@lem8260338 (term654 A B P lt2 z' f g s a)). Qed.
Lemma lem8260340 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term654 A B P lt2 z' f g s a.
Proof. exact (EQ_MP (@lem8260339 A B P lt2 z' f g s a) (@lem8260336 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260342 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110088.
Proof. exact (EQ_MP (@lem8259759 A B P lt2 s a f g _110088) (@lem8259748 A B P _110088 lt2 s a f g h1)). Qed.
Lemma lem8260343 {A B P : Type'} (_110088 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110088.
Proof. exact (@lem8260342 A B P _110088 lt2 s a f g h1). Qed.
Lemma lem8260344 {A B P : Type'} (z' : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z' f g a.
Proof. exact (@lem8260343 A B P (term637 A B P z' f g a) lt2 s a f g h1). Qed.
Lemma lem8260347 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (@lem8260344 A B P z' lt2 s a f g h1 (@lem8260340 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260348 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term784 A B P z' f g a.
Proof. exact (fun h0 : term647 A B P z' f g a => @lem8260347 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8260350 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260351 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z' f g a) = ((term640 A B P z' f g a) = (term643 A B P z' f g a)).
Proof. exact (@lem8260350 ((term640 A B P z' f g a) = (term643 A B P z' f g a))). Qed.
Lemma lem8260352 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (EQ_MP (@lem8260351 A B P z' f g a) (@lem8260348 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260354 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P P' f a.
Proof. exact (proj2 (@lem8257765 A B P f p P' g a h1)). Qed.
Lemma lem8260355 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term757 A B P P' f a.
Proof. exact (fun h0 : term615 A B P P' f a => @lem8260354 A B P f p P' g a h1). Qed.
Lemma lem8260357 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260358 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8260357 (term614 A B P P' f a)). Qed.
Lemma lem8260359 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term982 A B P f p P' g a) : term614 A B P P' f a.
Proof. exact (EQ_MP (@lem8260358 A B P P' f a) (@lem8260355 A B P f p P' g a h1)). Qed.
Lemma lem8260375 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260376 {A B P : Type'} (z' : type518 A B P) (p : type560 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term755 A B P p z' _110092 P' _110093 _110094) = (term906 A B P z' p _110092 P' _110093 _110094).
Proof. exact (@lem8260375 (term647 A B P z' _110092 _110093 _110094) (term615 A B P p _110093 _110094) (term627 A B P _110092 P' _110093 _110094)). Qed.
Lemma lem8260392 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260393 {A B P : Type'} (_110092 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term877 A B P p _110092 P' _110093 _110094) = (term878 A B P _110092 p P' _110093 _110094).
Proof. exact (@lem8260392 (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094) (term614 A B P P' _110093 _110094)). Qed.
Lemma lem8260407 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8260408 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term619 A B P p P' _110093 _110094) = (term879 A B P P' p _110093 _110094).
Proof. exact (@lem8260407 (term614 A B P P' _110093 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260414 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P P' _110092 _110094) = (term618 A B P P' _110092 _110094).
Proof. exact (eq_refl (term618 A B P P' _110092 _110094)). Qed.
Lemma lem8260415 {A B P : Type'} (_110092 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term878 A B P _110092 p P' _110093 _110094) = (term880 A B P _110092 P' p _110093 _110094).
Proof. exact (MK_COMB (@lem8260414 A B P P' _110092 _110094) (@lem8260408 A B P P' p _110093 _110094)). Qed.
Lemma lem8260419 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260420 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term880 A B P _110092 P' p _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260419 (term614 A B P P' _110093 _110094) (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260436 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term878 A B P _110092 p P' _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260415 A B P _110092 P' p _110093 _110094) (@lem8260420 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260437 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term877 A B P p _110092 P' _110093 _110094) = (term881 A B P P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260393 A B P _110092 p P' _110093 _110094) (@lem8260436 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260438 {A B P : Type'} (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) : (term785 A B P z' _110092 _110093 _110094) = (term785 A B P z' _110092 _110093 _110094).
Proof. exact (eq_refl (term785 A B P z' _110092 _110093 _110094)). Qed.
Lemma lem8260439 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term906 A B P z' p _110092 P' _110093 _110094) = (term907 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260438 A B P z' _110092 _110093 _110094) (@lem8260437 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260443 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260444 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term907 A B P z' P' _110092 p _110093 _110094) = (term908 A B P z' P' _110092 p _110093 _110094).
Proof. exact (@lem8260443 (term614 A B P P' _110093 _110094) (term647 A B P z' _110092 _110093 _110094) (term887 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260472 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term906 A B P z' p _110092 P' _110093 _110094) = (term908 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260439 A B P z' P' _110092 p _110093 _110094) (@lem8260444 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260473 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term755 A B P p z' _110092 P' _110093 _110094) = (term908 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260376 A B P z' p _110092 P' _110093 _110094) (@lem8260472 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260474 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P p _110092 _110094) = (term618 A B P p _110092 _110094).
Proof. exact (eq_refl (term618 A B P p _110092 _110094)). Qed.
Lemma lem8260475 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term756 A B P p z' _110092 P' _110093 _110094) = (term909 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260474 A B P p _110092 _110094) (@lem8260473 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260479 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260480 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term909 A B P z' P' _110092 p _110093 _110094) = (term910 A B P z' P' _110092 p _110093 _110094).
Proof. exact (@lem8260479 (term614 A B P P' _110093 _110094) (term615 A B P p _110092 _110094) (term911 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260494 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260495 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term912 A B P z' P' _110092 p _110093 _110094) = (term913 A B P z' P' _110092 p _110093 _110094).
Proof. exact (@lem8260494 (term647 A B P z' _110092 _110093 _110094) (term615 A B P p _110092 _110094) (term887 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260511 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260512 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term888 A B P P' _110092 p _110093 _110094) = (term889 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260511 (term615 A B P P' _110092 _110094) (term615 A B P p _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260528 {A B P : Type'} (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) : (term785 A B P z' _110092 _110093 _110094) = (term785 A B P z' _110092 _110093 _110094).
Proof. exact (eq_refl (term785 A B P z' _110092 _110093 _110094)). Qed.
Lemma lem8260529 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term913 A B P z' P' _110092 p _110093 _110094) = (term914 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260528 A B P z' _110092 _110093 _110094) (@lem8260512 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260540 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term912 A B P z' P' _110092 p _110093 _110094) = (term914 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260495 A B P z' P' _110092 p _110093 _110094) (@lem8260529 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260541 {A B P : Type'} (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term629 A B P P' _110093 _110094) = (term629 A B P P' _110093 _110094).
Proof. exact (eq_refl (term629 A B P P' _110093 _110094)). Qed.
Lemma lem8260542 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term910 A B P z' P' _110092 p _110093 _110094) = (term915 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260541 A B P P' _110093 _110094) (@lem8260540 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260553 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term909 A B P z' P' _110092 p _110093 _110094) = (term915 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260480 A B P z' P' _110092 p _110093 _110094) (@lem8260542 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260554 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term756 A B P p z' _110092 P' _110093 _110094) = (term915 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260475 A B P z' P' _110092 p _110093 _110094) (@lem8260553 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260555 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8260556 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term916 A B P p z' _110092 P' _110093 _110094) = (term917 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260555) (@lem8260554 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260580 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260581 {A B P : Type'} (z' : type518 A B P) (p : type560 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term918 A B P p z' _110093 P' _110092 _110094) = (term919 A B P z' p _110093 P' _110092 _110094).
Proof. exact (@lem8260580 (term647 A B P z' _110092 _110093 _110094) (term615 A B P p _110093 _110094) (term615 A B P P' _110092 _110094)). Qed.
Lemma lem8260597 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8260598 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term887 A B P p _110093 P' _110092 _110094) = (term887 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260597 (term615 A B P P' _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260604 {A B P : Type'} (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) : (term785 A B P z' _110092 _110093 _110094) = (term785 A B P z' _110092 _110093 _110094).
Proof. exact (eq_refl (term785 A B P z' _110092 _110093 _110094)). Qed.
Lemma lem8260605 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term919 A B P z' p _110093 P' _110092 _110094) = (term911 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260604 A B P z' _110092 _110093 _110094) (@lem8260598 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260616 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term918 A B P p z' _110093 P' _110092 _110094) = (term911 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260581 A B P z' p _110093 P' _110092 _110094) (@lem8260605 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260617 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term618 A B P p _110092 _110094) = (term618 A B P p _110092 _110094).
Proof. exact (eq_refl (term618 A B P p _110092 _110094)). Qed.
Lemma lem8260618 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term920 A B P p z' _110093 P' _110092 _110094) = (term912 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260617 A B P p _110092 _110094) (@lem8260616 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260622 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260623 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term912 A B P z' P' _110092 p _110093 _110094) = (term913 A B P z' P' _110092 p _110093 _110094).
Proof. exact (@lem8260622 (term647 A B P z' _110092 _110093 _110094) (term615 A B P p _110092 _110094) (term887 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260639 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8260640 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term888 A B P P' _110092 p _110093 _110094) = (term889 A B P P' _110092 p _110093 _110094).
Proof. exact (@lem8260639 (term615 A B P P' _110092 _110094) (term615 A B P p _110092 _110094) (term615 A B P p _110093 _110094)). Qed.
Lemma lem8260656 {A B P : Type'} (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) : (term785 A B P z' _110092 _110093 _110094) = (term785 A B P z' _110092 _110093 _110094).
Proof. exact (eq_refl (term785 A B P z' _110092 _110093 _110094)). Qed.
Lemma lem8260657 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term913 A B P z' P' _110092 p _110093 _110094) = (term914 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260656 A B P z' _110092 _110093 _110094) (@lem8260640 A B P P' _110092 p _110093 _110094)). Qed.
Lemma lem8260668 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term912 A B P z' P' _110092 p _110093 _110094) = (term914 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260623 A B P z' P' _110092 p _110093 _110094) (@lem8260657 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260669 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term920 A B P p z' _110093 P' _110092 _110094) = (term914 A B P z' P' _110092 p _110093 _110094).
Proof. exact (TRANS (@lem8260618 A B P z' P' _110092 p _110093 _110094) (@lem8260668 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260670 {A B P : Type'} (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term629 A B P P' _110093 _110094) = (term629 A B P P' _110093 _110094).
Proof. exact (eq_refl (term629 A B P P' _110093 _110094)). Qed.
Lemma lem8260671 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term921 A B P p z' _110093 P' _110092 _110094) = (term915 A B P z' P' _110092 p _110093 _110094).
Proof. exact (MK_COMB (@lem8260670 A B P P' _110093 _110094) (@lem8260669 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260682 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : ((term756 A B P p z' _110092 P' _110093 _110094) = (term921 A B P p z' _110093 P' _110092 _110094)) = ((term915 A B P z' P' _110092 p _110093 _110094) = (term915 A B P z' P' _110092 p _110093 _110094)).
Proof. exact (MK_COMB (@lem8260556 A B P z' P' _110092 p _110093 _110094) (@lem8260671 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260684 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8260685 (x : Prop) : (x = x) = True.
Proof. exact (@lem8260684 Prop x). Qed.
Lemma lem8260686 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110092 : A -> B) (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : ((term915 A B P z' P' _110092 p _110093 _110094) = (term915 A B P z' P' _110092 p _110093 _110094)) = True.
Proof. exact (@lem8260685 (term915 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260687 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : ((term756 A B P p z' _110092 P' _110093 _110094) = (term921 A B P p z' _110093 P' _110092 _110094)) = True.
Proof. exact (TRANS (@lem8260682 A B P z' P' _110092 p _110093 _110094) (@lem8260686 A B P z' P' _110092 p _110093 _110094)). Qed.
Lemma lem8260688 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : True = ((term756 A B P p z' _110092 P' _110093 _110094) = (term921 A B P p z' _110093 P' _110092 _110094)).
Proof. exact (SYM (@lem8260687 A B P p z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260689 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term756 A B P p z' _110092 P' _110093 _110094) = (term921 A B P p z' _110093 P' _110092 _110094).
Proof. exact (EQ_MP (@lem8260688 A B P p z' _110093 P' _110092 _110094) (@lem0)). Qed.
Lemma lem8260690 {A B P : Type'} (_110093 : A -> B) (_110092 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term921 A B P p z' _110093 P' _110092 _110094.
Proof. exact (EQ_MP (@lem8260689 A B P p z' _110093 P' _110092 _110094) (@lem8258755 A B P _110092 _110093 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8260692 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8260693 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term921 A B P p z' _110093 P' _110092 _110094) = (term922 A B P p z' _110092 P' _110093 _110094).
Proof. exact (@lem8260692 (term920 A B P p z' _110093 P' _110092 _110094) (term614 A B P P' _110093 _110094)). Qed.
Lemma lem8260695 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260696 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term923 A B P p z' _110093 P' _110092 _110094) = (term924 A B P p z' _110093 P' _110092 _110094).
Proof. exact (@lem8260695 (term615 A B P p _110092 _110094) (term918 A B P p z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260698 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260699 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term767 A B P p _110092 _110094) = (term614 A B P p _110092 _110094).
Proof. exact (@lem8260698 (term614 A B P p _110092 _110094)). Qed.
Lemma lem8260700 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8260701 {A B P : Type'} (p : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term768 A B P p _110092 _110094) = (term616 A B P p _110092 _110094).
Proof. exact (MK_COMB (@lem8260700) (@lem8260699 A B P p _110092 _110094)). Qed.
Lemma lem8260703 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260704 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term925 A B P p z' _110093 P' _110092 _110094) = (term926 A B P p z' _110093 P' _110092 _110094).
Proof. exact (@lem8260703 (term615 A B P p _110093 _110094) (term791 A B P z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260706 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260707 {A B P : Type'} (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term767 A B P p _110093 _110094) = (term614 A B P p _110093 _110094).
Proof. exact (@lem8260706 (term614 A B P p _110093 _110094)). Qed.
Lemma lem8260708 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8260709 {A B P : Type'} (p : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term768 A B P p _110093 _110094) = (term616 A B P p _110093 _110094).
Proof. exact (MK_COMB (@lem8260708) (@lem8260707 A B P p _110093 _110094)). Qed.
Lemma lem8260711 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260712 {A B P : Type'} (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term792 A B P z' _110093 P' _110092 _110094) = (term793 A B P z' _110093 P' _110092 _110094).
Proof. exact (@lem8260711 (term647 A B P z' _110092 _110093 _110094) (term615 A B P P' _110092 _110094)). Qed.
Lemma lem8260714 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260715 {A B P : Type'} (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) : (term794 A B P z' _110092 _110093 _110094) = ((term640 A B P z' _110092 _110093 _110094) = (term643 A B P z' _110092 _110093 _110094)).
Proof. exact (@lem8260714 ((term640 A B P z' _110092 _110093 _110094) = (term643 A B P z' _110092 _110093 _110094))). Qed.
Lemma lem8260716 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8260717 {A B P : Type'} (z' : type518 A B P) (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) : (term795 A B P z' _110092 _110093 _110094) = (term796 A B P z' _110092 _110093 _110094).
Proof. exact (MK_COMB (@lem8260716) (@lem8260715 A B P z' _110092 _110093 _110094)). Qed.
Lemma lem8260719 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260720 {A B P : Type'} (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term767 A B P P' _110092 _110094) = (term614 A B P P' _110092 _110094).
Proof. exact (@lem8260719 (term614 A B P P' _110092 _110094)). Qed.
Lemma lem8260721 {A B P : Type'} (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term793 A B P z' _110093 P' _110092 _110094) = (term797 A B P z' _110093 P' _110092 _110094).
Proof. exact (MK_COMB (@lem8260717 A B P z' _110092 _110093 _110094) (@lem8260720 A B P P' _110092 _110094)). Qed.
Lemma lem8260722 {A B P : Type'} (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term792 A B P z' _110093 P' _110092 _110094) = (term797 A B P z' _110093 P' _110092 _110094).
Proof. exact (TRANS (@lem8260712 A B P z' _110093 P' _110092 _110094) (@lem8260721 A B P z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260723 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term926 A B P p z' _110093 P' _110092 _110094) = (term927 A B P p z' _110093 P' _110092 _110094).
Proof. exact (MK_COMB (@lem8260709 A B P p _110093 _110094) (@lem8260722 A B P z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260724 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term925 A B P p z' _110093 P' _110092 _110094) = (term927 A B P p z' _110093 P' _110092 _110094).
Proof. exact (TRANS (@lem8260704 A B P p z' _110093 P' _110092 _110094) (@lem8260723 A B P p z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260725 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term924 A B P p z' _110093 P' _110092 _110094) = (term928 A B P p z' _110093 P' _110092 _110094).
Proof. exact (MK_COMB (@lem8260701 A B P p _110092 _110094) (@lem8260724 A B P p z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260726 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term923 A B P p z' _110093 P' _110092 _110094) = (term928 A B P p z' _110093 P' _110092 _110094).
Proof. exact (TRANS (@lem8260696 A B P p z' _110093 P' _110092 _110094) (@lem8260725 A B P p z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260727 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8260728 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110093 : A -> B) (P' : type560 A B P) (_110092 : A -> B) (_110094 : P) : (term929 A B P p z' _110093 P' _110092 _110094) = (term930 A B P p z' _110093 P' _110092 _110094).
Proof. exact (MK_COMB (@lem8260727) (@lem8260726 A B P p z' _110093 P' _110092 _110094)). Qed.
Lemma lem8260729 {A B P : Type'} (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term614 A B P P' _110093 _110094) = (term614 A B P P' _110093 _110094).
Proof. exact (eq_refl (term614 A B P P' _110093 _110094)). Qed.
Lemma lem8260730 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term922 A B P p z' _110092 P' _110093 _110094) = (term931 A B P p z' _110092 P' _110093 _110094).
Proof. exact (MK_COMB (@lem8260728 A B P p z' _110093 P' _110092 _110094) (@lem8260729 A B P P' _110093 _110094)). Qed.
Lemma lem8260731 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110092 : A -> B) (P' : type560 A B P) (_110093 : A -> B) (_110094 : P) : (term921 A B P p z' _110093 P' _110092 _110094) = (term931 A B P p z' _110092 P' _110093 _110094).
Proof. exact (TRANS (@lem8260693 A B P p z' _110092 P' _110093 _110094) (@lem8260730 A B P p z' _110092 P' _110093 _110094)). Qed.
Lemma lem8260733 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term797 A B P z' g P' f a.
Proof. exact (conj (@lem8260352 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8260359 A B P f p P' g a h5)). Qed.
Lemma lem8260734 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term927 A B P p z' g P' f a.
Proof. exact (conj (@lem8259892 A B P lt2 s z f p P' g a h1 h2 h5) (@lem8260733 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260735 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term928 A B P p z' g P' f a.
Proof. exact (conj (@lem8259667 A B P f p P' g a h5) (@lem8260734 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260737 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term931 A B P p z' _110092 P' _110093 _110094.
Proof. exact (EQ_MP (@lem8260731 A B P p z' _110092 P' _110093 _110094) (@lem8260690 A B P _110093 _110092 _110094 p lt2 s z' P' h1)). Qed.
Lemma lem8260738 {A B P : Type'} (_110092 : A -> B) (_110093 : A -> B) (_110094 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term931 A B P p z' _110092 P' _110093 _110094.
Proof. exact (@lem8260737 A B P _110092 _110093 _110094 p lt2 s z' P' h1). Qed.
Lemma lem8260739 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term931 A B P p z' f P' g a.
Proof. exact (@lem8260738 A B P f g a p lt2 s z' P' h1). Qed.
Lemma lem8260742 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term614 A B P P' g a.
Proof. exact (@lem8260739 A B P f g a p lt2 s z' P' h3 (@lem8260735 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260743 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term982 A B P f p P' g a) : term757 A B P P' g a.
Proof. exact (fun h0 : term615 A B P P' g a => @lem8260742 A B P z lt2 s z' f p P' g a h1 h2 h3 h0 h4). Qed.
Lemma lem8260745 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260746 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term757 A B P P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8260745 (term614 A B P P' g a)). Qed.
Lemma lem8260747 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term982 A B P f p P' g a) : term614 A B P P' g a.
Proof. exact (EQ_MP (@lem8260746 A B P P' g a) (@lem8260743 A B P z lt2 s z' f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8260750 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8260752 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term615 A B P P' g a) = (term801 A B P P' g a).
Proof. exact (@lem8260750 (term614 A B P P' g a)). Qed.
Lemma lem8260755 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' g a) : term801 A B P P' g a.
Proof. exact (EQ_MP (@lem8260752 A B P P' g a) (@lem8258711 A B P P' g a h1)). Qed.
Lemma lem8260758 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : False.
Proof. exact (@lem8260755 A B P P' g a h4 (@lem8260747 A B P z lt2 s z' f p P' g a h1 h2 h3 h5)). Qed.
Lemma lem8260759 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8260758 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8260761 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260762 : term802 = False.
Proof. exact (@lem8260761 False). Qed.
Lemma lem8260763 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8260762) (@lem8260759 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8260916 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8260917 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term759 A B P p f a.
Proof. exact (fun h0 : term614 A B P p f a => @lem8260916 A B P p f a h1). Qed.
Lemma lem8260919 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8260920 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term759 A B P p f a) = (term615 A B P p f a).
Proof. exact (@lem8260919 (term614 A B P p f a)). Qed.
Lemma lem8260921 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (EQ_MP (@lem8260920 A B P p f a) (@lem8260917 A B P p f a h1)). Qed.
Lemma lem8260923 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8260924 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8260923 A B P f p P' g a h1). Qed.
Lemma lem8260926 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260927 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8260926 (term614 A B P p g a)). Qed.
Lemma lem8260928 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8260927 A B P p g a) (@lem8260924 A B P f p P' g a h1)). Qed.
Lemma lem8260930 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8260931 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110096 : A -> B) (_110097 : A -> B) (s : P -> A) (_110098 : P) : (term747 A B P lt2 z s _110096 p _110097 _110098) = (term865 A B P p lt2 z _110096 _110097 s _110098).
Proof. exact (@lem8260930 (term631 A B P _110096 p _110097 _110098) (term654 A B P lt2 z _110096 _110097 s _110098)). Qed.
Lemma lem8260933 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8260934 {A B P : Type'} (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term827 A B P _110096 p _110097 _110098) = (term828 A B P _110096 p _110097 _110098).
Proof. exact (@lem8260933 (term614 A B P p _110096 _110098) (term615 A B P p _110097 _110098)). Qed.
Lemma lem8260936 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260937 {A B P : Type'} (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term767 A B P p _110097 _110098) = (term614 A B P p _110097 _110098).
Proof. exact (@lem8260936 (term614 A B P p _110097 _110098)). Qed.
Lemma lem8260938 {A B P : Type'} (p : type560 A B P) (_110096 : A -> B) (_110098 : P) : (term829 A B P p _110096 _110098) = (term829 A B P p _110096 _110098).
Proof. exact (eq_refl (term829 A B P p _110096 _110098)). Qed.
Lemma lem8260939 {A B P : Type'} (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term828 A B P _110096 p _110097 _110098) = (term830 A B P _110096 p _110097 _110098).
Proof. exact (MK_COMB (@lem8260938 A B P p _110096 _110098) (@lem8260937 A B P p _110097 _110098)). Qed.
Lemma lem8260940 {A B P : Type'} (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term827 A B P _110096 p _110097 _110098) = (term830 A B P _110096 p _110097 _110098).
Proof. exact (TRANS (@lem8260934 A B P _110096 p _110097 _110098) (@lem8260939 A B P _110096 p _110097 _110098)). Qed.
Lemma lem8260941 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8260942 {A B P : Type'} (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term866 A B P _110096 p _110097 _110098) = (term867 A B P _110096 p _110097 _110098).
Proof. exact (MK_COMB (@lem8260941) (@lem8260940 A B P _110096 p _110097 _110098)). Qed.
Lemma lem8260943 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_110096 : A -> B) (_110097 : A -> B) (s : P -> A) (_110098 : P) : (term654 A B P lt2 z _110096 _110097 s _110098) = (term654 A B P lt2 z _110096 _110097 s _110098).
Proof. exact (eq_refl (term654 A B P lt2 z _110096 _110097 s _110098)). Qed.
Lemma lem8260944 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110096 : A -> B) (_110097 : A -> B) (s : P -> A) (_110098 : P) : (term865 A B P p lt2 z _110096 _110097 s _110098) = (term868 A B P p lt2 z _110096 _110097 s _110098).
Proof. exact (MK_COMB (@lem8260942 A B P _110096 p _110097 _110098) (@lem8260943 A B P lt2 z _110096 _110097 s _110098)). Qed.
Lemma lem8260945 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110096 : A -> B) (_110097 : A -> B) (s : P -> A) (_110098 : P) : (term747 A B P lt2 z s _110096 p _110097 _110098) = (term868 A B P p lt2 z _110096 _110097 s _110098).
Proof. exact (TRANS (@lem8260931 A B P p lt2 z _110096 _110097 s _110098) (@lem8260944 A B P p lt2 z _110096 _110097 s _110098)). Qed.
Lemma lem8260947 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p f a) (h2 : term980 A B P f p P' g a) : term830 A B P f p g a.
Proof. exact (conj (@lem8260921 A B P p f a h1) (@lem8260928 A B P f p P' g a h2)). Qed.
Lemma lem8260949 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _110096 _110097 s _110098.
Proof. exact (EQ_MP (@lem8260945 A B P p lt2 z _110096 _110097 s _110098) (@lem8258969 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8260950 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _110096 _110097 s _110098.
Proof. exact (@lem8260949 A B P _110096 _110097 _110098 lt2 s z p h1). Qed.
Lemma lem8260951 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z f g s a.
Proof. exact (@lem8260950 A B P f g a lt2 s z p h1). Qed.
Lemma lem8260954 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8260951 A B P f g a lt2 s z p h1 (@lem8260947 A B P f p P' g a h2 h3)). Qed.
Lemma lem8260955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8260954 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8260957 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8260958 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8260957 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8260959 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8260958 A B P lt2 z f g s a) (@lem8260955 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8260965 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8260966 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110095) = (term775 A B P f g lt2 _110095 s a).
Proof. exact (@lem8260965 ((@I (A -> B) f _110095) = (@I (A -> B) g _110095)) (term608 A P lt2 _110095 s a)). Qed.
Lemma lem8260974 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8260975 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _110095) = (term777 A B P f g lt2 _110095 s a).
Proof. exact (MK_COMB (@lem8260974) (@lem8260966 A B P f g lt2 _110095 s a)). Qed.
Lemma lem8260983 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _110095 s a) = (term775 A B P f g lt2 _110095 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _110095 s a)). Qed.
Lemma lem8260984 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110095) = (term775 A B P f g lt2 _110095 s a)) = ((term775 A B P f g lt2 _110095 s a) = (term775 A B P f g lt2 _110095 s a)).
Proof. exact (MK_COMB (@lem8260975 A B P f g lt2 _110095 s a) (@lem8260983 A B P f g lt2 _110095 s a)). Qed.
Lemma lem8260986 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8260987 (x : Prop) : (x = x) = True.
Proof. exact (@lem8260986 Prop x). Qed.
Lemma lem8260988 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _110095 s a) = (term775 A B P f g lt2 _110095 s a)) = True.
Proof. exact (@lem8260987 (term775 A B P f g lt2 _110095 s a)). Qed.
Lemma lem8260989 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110095) = (term775 A B P f g lt2 _110095 s a)) = True.
Proof. exact (TRANS (@lem8260984 A B P f g lt2 _110095 s a) (@lem8260988 A B P f g lt2 _110095 s a)). Qed.
Lemma lem8260990 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _110095) = (term775 A B P f g lt2 _110095 s a)).
Proof. exact (SYM (@lem8260989 A B P f g lt2 _110095 s a)). Qed.
Lemma lem8260991 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110095) = (term775 A B P f g lt2 _110095 s a).
Proof. exact (EQ_MP (@lem8260990 A B P f g lt2 _110095 s a) (@lem0)). Qed.
Lemma lem8260992 {A B P : Type'} (_110095 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _110095 s a.
Proof. exact (EQ_MP (@lem8260991 A B P f g lt2 _110095 s a) (@lem8258845 A B P _110095 lt2 s a f g h1)). Qed.
Lemma lem8260994 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8260995 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110095 : A) : (term775 A B P f g lt2 _110095 s a) = (term778 A B P lt2 s a f g _110095).
Proof. exact (@lem8260994 (term608 A P lt2 _110095 s a) ((@I (A -> B) f _110095) = (@I (A -> B) g _110095))). Qed.
Lemma lem8260997 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8260998 {A P : Type'} (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : (term779 A P lt2 _110095 s a) = (term606 A P lt2 _110095 s a).
Proof. exact (@lem8260997 (term606 A P lt2 _110095 s a)). Qed.
Lemma lem8260999 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8261000 {A P : Type'} (lt2 : type1402 A) (_110095 : A) (s : P -> A) (a : P) : (term780 A P lt2 _110095 s a) = (term781 A P lt2 _110095 s a).
Proof. exact (MK_COMB (@lem8260999) (@lem8260998 A P lt2 _110095 s a)). Qed.
Lemma lem8261001 {A B : Type'} (f : A -> B) (g : A -> B) (_110095 : A) : ((@I (A -> B) f _110095) = (@I (A -> B) g _110095)) = ((@I (A -> B) f _110095) = (@I (A -> B) g _110095)).
Proof. exact (eq_refl ((@I (A -> B) f _110095) = (@I (A -> B) g _110095))). Qed.
Lemma lem8261002 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110095 : A) : (term778 A B P lt2 s a f g _110095) = (term782 A B P lt2 s a f g _110095).
Proof. exact (MK_COMB (@lem8261000 A P lt2 _110095 s a) (@lem8261001 A B f g _110095)). Qed.
Lemma lem8261003 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110095 : A) : (term775 A B P f g lt2 _110095 s a) = (term782 A B P lt2 s a f g _110095).
Proof. exact (TRANS (@lem8260995 A B P lt2 s a f g _110095) (@lem8261002 A B P lt2 s a f g _110095)). Qed.
Lemma lem8261006 {A B P : Type'} (_110095 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110095.
Proof. exact (EQ_MP (@lem8261003 A B P lt2 s a f g _110095) (@lem8260992 A B P _110095 lt2 s a f g h1)). Qed.
Lemma lem8261007 {A B P : Type'} (_110095 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110095.
Proof. exact (@lem8261006 A B P _110095 lt2 s a f g h1). Qed.
Lemma lem8261008 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8261007 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8261011 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8261008 A B P z lt2 s a f g h1 (@lem8260959 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8261012 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8261011 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8261014 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261015 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8261014 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8261016 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8261015 A B P z f g a) (@lem8261012 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261018 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261019 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261018 A B P f p P' g a h1). Qed.
Lemma lem8261021 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261022 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261021 (term614 A B P p g a)). Qed.
Lemma lem8261023 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261022 A B P p g a) (@lem8261019 A B P f p P' g a h1)). Qed.
Lemma lem8261029 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261030 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term748 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098).
Proof. exact (@lem8261029 (term614 A B P p _110096 _110098) (term647 A B P z _110096 _110097 _110098) (term615 A B P p _110097 _110098)). Qed.
Lemma lem8261048 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8261049 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term870 A B P z _110096 p _110097 _110098) = (term871 A B P z _110096 p _110097 _110098).
Proof. exact (MK_COMB (@lem8261048) (@lem8261030 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261067 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term869 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098).
Proof. exact (eq_refl (term869 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261068 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : ((term748 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098)) = ((term869 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098)).
Proof. exact (MK_COMB (@lem8261049 A B P z _110096 p _110097 _110098) (@lem8261067 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261070 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8261071 (x : Prop) : (x = x) = True.
Proof. exact (@lem8261070 Prop x). Qed.
Lemma lem8261072 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : ((term869 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098)) = True.
Proof. exact (@lem8261071 (term869 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261073 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : ((term748 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098)) = True.
Proof. exact (TRANS (@lem8261068 A B P z _110096 p _110097 _110098) (@lem8261072 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261074 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : True = ((term748 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098)).
Proof. exact (SYM (@lem8261073 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261075 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term748 A B P z _110096 p _110097 _110098) = (term869 A B P z _110096 p _110097 _110098).
Proof. exact (EQ_MP (@lem8261074 A B P z _110096 p _110097 _110098) (@lem0)). Qed.
Lemma lem8261076 {A B P : Type'} (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term869 A B P z _110096 p _110097 _110098.
Proof. exact (EQ_MP (@lem8261075 A B P z _110096 p _110097 _110098) (@lem8258979 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8261078 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8261079 {A B P : Type'} (z : type518 A B P) (_110097 : A -> B) (p : type560 A B P) (_110096 : A -> B) (_110098 : P) : (term869 A B P z _110096 p _110097 _110098) = (term872 A B P z _110097 p _110096 _110098).
Proof. exact (@lem8261078 (term856 A B P z _110096 p _110097 _110098) (term614 A B P p _110096 _110098)). Qed.
Lemma lem8261081 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8261082 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term857 A B P z _110096 p _110097 _110098) = (term858 A B P z _110096 p _110097 _110098).
Proof. exact (@lem8261081 (term647 A B P z _110096 _110097 _110098) (term615 A B P p _110097 _110098)). Qed.
Lemma lem8261084 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261085 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) : (term794 A B P z _110096 _110097 _110098) = ((term640 A B P z _110096 _110097 _110098) = (term643 A B P z _110096 _110097 _110098)).
Proof. exact (@lem8261084 ((term640 A B P z _110096 _110097 _110098) = (term643 A B P z _110096 _110097 _110098))). Qed.
Lemma lem8261086 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8261087 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (_110097 : A -> B) (_110098 : P) : (term795 A B P z _110096 _110097 _110098) = (term796 A B P z _110096 _110097 _110098).
Proof. exact (MK_COMB (@lem8261086) (@lem8261085 A B P z _110096 _110097 _110098)). Qed.
Lemma lem8261089 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261090 {A B P : Type'} (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term767 A B P p _110097 _110098) = (term614 A B P p _110097 _110098).
Proof. exact (@lem8261089 (term614 A B P p _110097 _110098)). Qed.
Lemma lem8261091 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term858 A B P z _110096 p _110097 _110098) = (term859 A B P z _110096 p _110097 _110098).
Proof. exact (MK_COMB (@lem8261087 A B P z _110096 _110097 _110098) (@lem8261090 A B P p _110097 _110098)). Qed.
Lemma lem8261092 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term857 A B P z _110096 p _110097 _110098) = (term859 A B P z _110096 p _110097 _110098).
Proof. exact (TRANS (@lem8261082 A B P z _110096 p _110097 _110098) (@lem8261091 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261093 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8261094 {A B P : Type'} (z : type518 A B P) (_110096 : A -> B) (p : type560 A B P) (_110097 : A -> B) (_110098 : P) : (term873 A B P z _110096 p _110097 _110098) = (term874 A B P z _110096 p _110097 _110098).
Proof. exact (MK_COMB (@lem8261093) (@lem8261092 A B P z _110096 p _110097 _110098)). Qed.
Lemma lem8261095 {A B P : Type'} (p : type560 A B P) (_110096 : A -> B) (_110098 : P) : (term614 A B P p _110096 _110098) = (term614 A B P p _110096 _110098).
Proof. exact (eq_refl (term614 A B P p _110096 _110098)). Qed.
Lemma lem8261096 {A B P : Type'} (z : type518 A B P) (_110097 : A -> B) (p : type560 A B P) (_110096 : A -> B) (_110098 : P) : (term872 A B P z _110097 p _110096 _110098) = (term875 A B P z _110097 p _110096 _110098).
Proof. exact (MK_COMB (@lem8261094 A B P z _110096 p _110097 _110098) (@lem8261095 A B P p _110096 _110098)). Qed.
Lemma lem8261097 {A B P : Type'} (z : type518 A B P) (_110097 : A -> B) (p : type560 A B P) (_110096 : A -> B) (_110098 : P) : (term869 A B P z _110096 p _110097 _110098) = (term875 A B P z _110097 p _110096 _110098).
Proof. exact (TRANS (@lem8261079 A B P z _110097 p _110096 _110098) (@lem8261096 A B P z _110097 p _110096 _110098)). Qed.
Lemma lem8261099 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term859 A B P z f p g a.
Proof. exact (conj (@lem8261016 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8261023 A B P f p P' g a h4)). Qed.
Lemma lem8261101 {A B P : Type'} (_110097 : A -> B) (_110096 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _110097 p _110096 _110098.
Proof. exact (EQ_MP (@lem8261097 A B P z _110097 p _110096 _110098) (@lem8261076 A B P _110096 _110097 _110098 lt2 s z p h1)). Qed.
Lemma lem8261102 {A B P : Type'} (_110097 : A -> B) (_110096 : A -> B) (_110098 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _110097 p _110096 _110098.
Proof. exact (@lem8261101 A B P _110097 _110096 _110098 lt2 s z p h1). Qed.
Lemma lem8261103 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z g p f a.
Proof. exact (@lem8261102 A B P g f a lt2 s z p h1). Qed.
Lemma lem8261106 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (@lem8261103 A B P g f a lt2 s z p h2 (@lem8261099 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261107 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term980 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8261106 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8261109 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261110 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8261109 (term614 A B P p f a)). Qed.
Lemma lem8261111 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term980 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8261110 A B P p f a) (@lem8261107 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8261114 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8261116 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term615 A B P p f a) = (term801 A B P p f a).
Proof. exact (@lem8261114 (term614 A B P p f a)). Qed.
Lemma lem8261119 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term801 A B P p f a.
Proof. exact (EQ_MP (@lem8261116 A B P p f a) (@lem8258851 A B P p f a h1)). Qed.
Lemma lem8261122 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : False.
Proof. exact (@lem8261119 A B P p f a h3 (@lem8261111 A B P lt2 s z f p P' g a h1 h2 h4)). Qed.
Lemma lem8261123 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8261122 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8261125 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261126 : term802 = False.
Proof. exact (@lem8261125 False). Qed.
Lemma lem8261127 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8261126) (@lem8261123 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261280 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8261281 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term759 A B P p f a.
Proof. exact (fun h0 : term614 A B P p f a => @lem8261280 A B P p f a h1). Qed.
Lemma lem8261283 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8261284 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term759 A B P p f a) = (term615 A B P p f a).
Proof. exact (@lem8261283 (term614 A B P p f a)). Qed.
Lemma lem8261285 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (EQ_MP (@lem8261284 A B P p f a) (@lem8261281 A B P p f a h1)). Qed.
Lemma lem8261287 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261288 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261287 A B P f p P' g a h1). Qed.
Lemma lem8261290 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261291 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261290 (term614 A B P p g a)). Qed.
Lemma lem8261292 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261291 A B P p g a) (@lem8261288 A B P f p P' g a h1)). Qed.
Lemma lem8261294 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8261295 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110103 : A -> B) (_110104 : A -> B) (s : P -> A) (_110105 : P) : (term747 A B P lt2 z s _110103 p _110104 _110105) = (term865 A B P p lt2 z _110103 _110104 s _110105).
Proof. exact (@lem8261294 (term631 A B P _110103 p _110104 _110105) (term654 A B P lt2 z _110103 _110104 s _110105)). Qed.
Lemma lem8261297 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8261298 {A B P : Type'} (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term827 A B P _110103 p _110104 _110105) = (term828 A B P _110103 p _110104 _110105).
Proof. exact (@lem8261297 (term614 A B P p _110103 _110105) (term615 A B P p _110104 _110105)). Qed.
Lemma lem8261300 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261301 {A B P : Type'} (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term767 A B P p _110104 _110105) = (term614 A B P p _110104 _110105).
Proof. exact (@lem8261300 (term614 A B P p _110104 _110105)). Qed.
Lemma lem8261302 {A B P : Type'} (p : type560 A B P) (_110103 : A -> B) (_110105 : P) : (term829 A B P p _110103 _110105) = (term829 A B P p _110103 _110105).
Proof. exact (eq_refl (term829 A B P p _110103 _110105)). Qed.
Lemma lem8261303 {A B P : Type'} (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term828 A B P _110103 p _110104 _110105) = (term830 A B P _110103 p _110104 _110105).
Proof. exact (MK_COMB (@lem8261302 A B P p _110103 _110105) (@lem8261301 A B P p _110104 _110105)). Qed.
Lemma lem8261304 {A B P : Type'} (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term827 A B P _110103 p _110104 _110105) = (term830 A B P _110103 p _110104 _110105).
Proof. exact (TRANS (@lem8261298 A B P _110103 p _110104 _110105) (@lem8261303 A B P _110103 p _110104 _110105)). Qed.
Lemma lem8261305 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8261306 {A B P : Type'} (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term866 A B P _110103 p _110104 _110105) = (term867 A B P _110103 p _110104 _110105).
Proof. exact (MK_COMB (@lem8261305) (@lem8261304 A B P _110103 p _110104 _110105)). Qed.
Lemma lem8261307 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_110103 : A -> B) (_110104 : A -> B) (s : P -> A) (_110105 : P) : (term654 A B P lt2 z _110103 _110104 s _110105) = (term654 A B P lt2 z _110103 _110104 s _110105).
Proof. exact (eq_refl (term654 A B P lt2 z _110103 _110104 s _110105)). Qed.
Lemma lem8261308 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110103 : A -> B) (_110104 : A -> B) (s : P -> A) (_110105 : P) : (term865 A B P p lt2 z _110103 _110104 s _110105) = (term868 A B P p lt2 z _110103 _110104 s _110105).
Proof. exact (MK_COMB (@lem8261306 A B P _110103 p _110104 _110105) (@lem8261307 A B P lt2 z _110103 _110104 s _110105)). Qed.
Lemma lem8261309 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_110103 : A -> B) (_110104 : A -> B) (s : P -> A) (_110105 : P) : (term747 A B P lt2 z s _110103 p _110104 _110105) = (term868 A B P p lt2 z _110103 _110104 s _110105).
Proof. exact (TRANS (@lem8261295 A B P p lt2 z _110103 _110104 s _110105) (@lem8261308 A B P p lt2 z _110103 _110104 s _110105)). Qed.
Lemma lem8261311 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p f a) (h2 : term980 A B P f p P' g a) : term830 A B P f p g a.
Proof. exact (conj (@lem8261285 A B P p f a h1) (@lem8261292 A B P f p P' g a h2)). Qed.
Lemma lem8261313 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _110103 _110104 s _110105.
Proof. exact (EQ_MP (@lem8261309 A B P p lt2 z _110103 _110104 s _110105) (@lem8259109 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8261314 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _110103 _110104 s _110105.
Proof. exact (@lem8261313 A B P _110103 _110104 _110105 lt2 s z p h1). Qed.
Lemma lem8261315 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z f g s a.
Proof. exact (@lem8261314 A B P f g a lt2 s z p h1). Qed.
Lemma lem8261318 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8261315 A B P f g a lt2 s z p h1 (@lem8261311 A B P f p P' g a h2 h3)). Qed.
Lemma lem8261319 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8261318 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8261321 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261322 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8261321 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8261323 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8261322 A B P lt2 z f g s a) (@lem8261319 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8261329 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8261330 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110102) = (term775 A B P f g lt2 _110102 s a).
Proof. exact (@lem8261329 ((@I (A -> B) f _110102) = (@I (A -> B) g _110102)) (term608 A P lt2 _110102 s a)). Qed.
Lemma lem8261338 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8261339 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : (term776 A B P lt2 s a f g _110102) = (term777 A B P f g lt2 _110102 s a).
Proof. exact (MK_COMB (@lem8261338) (@lem8261330 A B P f g lt2 _110102 s a)). Qed.
Lemma lem8261347 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : (term775 A B P f g lt2 _110102 s a) = (term775 A B P f g lt2 _110102 s a).
Proof. exact (eq_refl (term775 A B P f g lt2 _110102 s a)). Qed.
Lemma lem8261348 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110102) = (term775 A B P f g lt2 _110102 s a)) = ((term775 A B P f g lt2 _110102 s a) = (term775 A B P f g lt2 _110102 s a)).
Proof. exact (MK_COMB (@lem8261339 A B P f g lt2 _110102 s a) (@lem8261347 A B P f g lt2 _110102 s a)). Qed.
Lemma lem8261350 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8261351 (x : Prop) : (x = x) = True.
Proof. exact (@lem8261350 Prop x). Qed.
Lemma lem8261352 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : ((term775 A B P f g lt2 _110102 s a) = (term775 A B P f g lt2 _110102 s a)) = True.
Proof. exact (@lem8261351 (term775 A B P f g lt2 _110102 s a)). Qed.
Lemma lem8261353 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : ((term611 A B P lt2 s a f g _110102) = (term775 A B P f g lt2 _110102 s a)) = True.
Proof. exact (TRANS (@lem8261348 A B P f g lt2 _110102 s a) (@lem8261352 A B P f g lt2 _110102 s a)). Qed.
Lemma lem8261354 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : True = ((term611 A B P lt2 s a f g _110102) = (term775 A B P f g lt2 _110102 s a)).
Proof. exact (SYM (@lem8261353 A B P f g lt2 _110102 s a)). Qed.
Lemma lem8261355 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : (term611 A B P lt2 s a f g _110102) = (term775 A B P f g lt2 _110102 s a).
Proof. exact (EQ_MP (@lem8261354 A B P f g lt2 _110102 s a) (@lem0)). Qed.
Lemma lem8261356 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term775 A B P f g lt2 _110102 s a.
Proof. exact (EQ_MP (@lem8261355 A B P f g lt2 _110102 s a) (@lem8258985 A B P _110102 lt2 s a f g h1)). Qed.
Lemma lem8261358 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8261359 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110102 : A) : (term775 A B P f g lt2 _110102 s a) = (term778 A B P lt2 s a f g _110102).
Proof. exact (@lem8261358 (term608 A P lt2 _110102 s a) ((@I (A -> B) f _110102) = (@I (A -> B) g _110102))). Qed.
Lemma lem8261361 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261362 {A P : Type'} (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : (term779 A P lt2 _110102 s a) = (term606 A P lt2 _110102 s a).
Proof. exact (@lem8261361 (term606 A P lt2 _110102 s a)). Qed.
Lemma lem8261363 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8261364 {A P : Type'} (lt2 : type1402 A) (_110102 : A) (s : P -> A) (a : P) : (term780 A P lt2 _110102 s a) = (term781 A P lt2 _110102 s a).
Proof. exact (MK_COMB (@lem8261363) (@lem8261362 A P lt2 _110102 s a)). Qed.
Lemma lem8261365 {A B : Type'} (f : A -> B) (g : A -> B) (_110102 : A) : ((@I (A -> B) f _110102) = (@I (A -> B) g _110102)) = ((@I (A -> B) f _110102) = (@I (A -> B) g _110102)).
Proof. exact (eq_refl ((@I (A -> B) f _110102) = (@I (A -> B) g _110102))). Qed.
Lemma lem8261366 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110102 : A) : (term778 A B P lt2 s a f g _110102) = (term782 A B P lt2 s a f g _110102).
Proof. exact (MK_COMB (@lem8261364 A P lt2 _110102 s a) (@lem8261365 A B f g _110102)). Qed.
Lemma lem8261367 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (_110102 : A) : (term775 A B P f g lt2 _110102 s a) = (term782 A B P lt2 s a f g _110102).
Proof. exact (TRANS (@lem8261359 A B P lt2 s a f g _110102) (@lem8261366 A B P lt2 s a f g _110102)). Qed.
Lemma lem8261370 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110102.
Proof. exact (EQ_MP (@lem8261367 A B P lt2 s a f g _110102) (@lem8261356 A B P _110102 lt2 s a f g h1)). Qed.
Lemma lem8261371 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110102.
Proof. exact (@lem8261370 A B P _110102 lt2 s a f g h1). Qed.
Lemma lem8261372 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8261371 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8261375 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8261372 A B P z lt2 s a f g h1 (@lem8261323 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8261376 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8261375 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8261378 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261379 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8261378 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8261380 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8261379 A B P z f g a) (@lem8261376 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261382 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261383 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261382 A B P f p P' g a h1). Qed.
Lemma lem8261385 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261386 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261385 (term614 A B P p g a)). Qed.
Lemma lem8261387 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261386 A B P p g a) (@lem8261383 A B P f p P' g a h1)). Qed.
Lemma lem8261393 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261394 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term748 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105).
Proof. exact (@lem8261393 (term614 A B P p _110103 _110105) (term647 A B P z _110103 _110104 _110105) (term615 A B P p _110104 _110105)). Qed.
Lemma lem8261412 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8261413 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term870 A B P z _110103 p _110104 _110105) = (term871 A B P z _110103 p _110104 _110105).
Proof. exact (MK_COMB (@lem8261412) (@lem8261394 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261431 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term869 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105).
Proof. exact (eq_refl (term869 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261432 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : ((term748 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105)) = ((term869 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105)).
Proof. exact (MK_COMB (@lem8261413 A B P z _110103 p _110104 _110105) (@lem8261431 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261434 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8261435 (x : Prop) : (x = x) = True.
Proof. exact (@lem8261434 Prop x). Qed.
Lemma lem8261436 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : ((term869 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105)) = True.
Proof. exact (@lem8261435 (term869 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261437 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : ((term748 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105)) = True.
Proof. exact (TRANS (@lem8261432 A B P z _110103 p _110104 _110105) (@lem8261436 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261438 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : True = ((term748 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105)).
Proof. exact (SYM (@lem8261437 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261439 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term748 A B P z _110103 p _110104 _110105) = (term869 A B P z _110103 p _110104 _110105).
Proof. exact (EQ_MP (@lem8261438 A B P z _110103 p _110104 _110105) (@lem0)). Qed.
Lemma lem8261440 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term869 A B P z _110103 p _110104 _110105.
Proof. exact (EQ_MP (@lem8261439 A B P z _110103 p _110104 _110105) (@lem8259119 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8261442 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8261443 {A B P : Type'} (z : type518 A B P) (_110104 : A -> B) (p : type560 A B P) (_110103 : A -> B) (_110105 : P) : (term869 A B P z _110103 p _110104 _110105) = (term872 A B P z _110104 p _110103 _110105).
Proof. exact (@lem8261442 (term856 A B P z _110103 p _110104 _110105) (term614 A B P p _110103 _110105)). Qed.
Lemma lem8261445 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8261446 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term857 A B P z _110103 p _110104 _110105) = (term858 A B P z _110103 p _110104 _110105).
Proof. exact (@lem8261445 (term647 A B P z _110103 _110104 _110105) (term615 A B P p _110104 _110105)). Qed.
Lemma lem8261448 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261449 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) : (term794 A B P z _110103 _110104 _110105) = ((term640 A B P z _110103 _110104 _110105) = (term643 A B P z _110103 _110104 _110105)).
Proof. exact (@lem8261448 ((term640 A B P z _110103 _110104 _110105) = (term643 A B P z _110103 _110104 _110105))). Qed.
Lemma lem8261450 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8261451 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) : (term795 A B P z _110103 _110104 _110105) = (term796 A B P z _110103 _110104 _110105).
Proof. exact (MK_COMB (@lem8261450) (@lem8261449 A B P z _110103 _110104 _110105)). Qed.
Lemma lem8261453 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261454 {A B P : Type'} (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term767 A B P p _110104 _110105) = (term614 A B P p _110104 _110105).
Proof. exact (@lem8261453 (term614 A B P p _110104 _110105)). Qed.
Lemma lem8261455 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term858 A B P z _110103 p _110104 _110105) = (term859 A B P z _110103 p _110104 _110105).
Proof. exact (MK_COMB (@lem8261451 A B P z _110103 _110104 _110105) (@lem8261454 A B P p _110104 _110105)). Qed.
Lemma lem8261456 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term857 A B P z _110103 p _110104 _110105) = (term859 A B P z _110103 p _110104 _110105).
Proof. exact (TRANS (@lem8261446 A B P z _110103 p _110104 _110105) (@lem8261455 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261457 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8261458 {A B P : Type'} (z : type518 A B P) (_110103 : A -> B) (p : type560 A B P) (_110104 : A -> B) (_110105 : P) : (term873 A B P z _110103 p _110104 _110105) = (term874 A B P z _110103 p _110104 _110105).
Proof. exact (MK_COMB (@lem8261457) (@lem8261456 A B P z _110103 p _110104 _110105)). Qed.
Lemma lem8261459 {A B P : Type'} (p : type560 A B P) (_110103 : A -> B) (_110105 : P) : (term614 A B P p _110103 _110105) = (term614 A B P p _110103 _110105).
Proof. exact (eq_refl (term614 A B P p _110103 _110105)). Qed.
Lemma lem8261460 {A B P : Type'} (z : type518 A B P) (_110104 : A -> B) (p : type560 A B P) (_110103 : A -> B) (_110105 : P) : (term872 A B P z _110104 p _110103 _110105) = (term875 A B P z _110104 p _110103 _110105).
Proof. exact (MK_COMB (@lem8261458 A B P z _110103 p _110104 _110105) (@lem8261459 A B P p _110103 _110105)). Qed.
Lemma lem8261461 {A B P : Type'} (z : type518 A B P) (_110104 : A -> B) (p : type560 A B P) (_110103 : A -> B) (_110105 : P) : (term869 A B P z _110103 p _110104 _110105) = (term875 A B P z _110104 p _110103 _110105).
Proof. exact (TRANS (@lem8261443 A B P z _110104 p _110103 _110105) (@lem8261460 A B P z _110104 p _110103 _110105)). Qed.
Lemma lem8261463 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term859 A B P z f p g a.
Proof. exact (conj (@lem8261380 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8261387 A B P f p P' g a h4)). Qed.
Lemma lem8261465 {A B P : Type'} (_110104 : A -> B) (_110103 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _110104 p _110103 _110105.
Proof. exact (EQ_MP (@lem8261461 A B P z _110104 p _110103 _110105) (@lem8261440 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8261466 {A B P : Type'} (_110104 : A -> B) (_110103 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _110104 p _110103 _110105.
Proof. exact (@lem8261465 A B P _110104 _110103 _110105 lt2 s z p h1). Qed.
Lemma lem8261467 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z g p f a.
Proof. exact (@lem8261466 A B P g f a lt2 s z p h1). Qed.
Lemma lem8261470 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (@lem8261467 A B P g f a lt2 s z p h2 (@lem8261463 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261471 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term980 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8261470 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8261473 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261474 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8261473 (term614 A B P p f a)). Qed.
Lemma lem8261475 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term980 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8261474 A B P p f a) (@lem8261471 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8261477 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261478 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261477 A B P f p P' g a h1). Qed.
Lemma lem8261480 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261481 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261480 (term614 A B P p g a)). Qed.
Lemma lem8261482 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261481 A B P p g a) (@lem8261478 A B P f p P' g a h1)). Qed.
Lemma lem8261485 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (h1). Qed.
Lemma lem8261486 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term759 A B P p f a.
Proof. exact (fun h0 : term614 A B P p f a => @lem8261485 A B P p f a h1). Qed.
Lemma lem8261488 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8261489 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term759 A B P p f a) = (term615 A B P p f a).
Proof. exact (@lem8261488 (term614 A B P p f a)). Qed.
Lemma lem8261490 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P p f a) : term615 A B P p f a.
Proof. exact (EQ_MP (@lem8261489 A B P p f a) (@lem8261486 A B P p f a h1)). Qed.
Lemma lem8261492 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261493 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261492 A B P f p P' g a h1). Qed.
Lemma lem8261495 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261496 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261495 (term614 A B P p g a)). Qed.
Lemma lem8261497 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261496 A B P p g a) (@lem8261493 A B P f p P' g a h1)). Qed.
Lemma lem8261498 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P p f a) (h2 : term980 A B P f p P' g a) : term830 A B P f p g a.
Proof. exact (conj (@lem8261490 A B P p f a h1) (@lem8261497 A B P f p P' g a h2)). Qed.
Lemma lem8261500 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _110103 _110104 s _110105.
Proof. exact (EQ_MP (@lem8261309 A B P p lt2 z _110103 _110104 s _110105) (@lem8259109 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8261501 {A B P : Type'} (_110103 : A -> B) (_110104 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z _110103 _110104 s _110105.
Proof. exact (@lem8261500 A B P _110103 _110104 _110105 lt2 s z p h1). Qed.
Lemma lem8261502 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term868 A B P p lt2 z f g s a.
Proof. exact (@lem8261501 A B P f g a lt2 s z p h1). Qed.
Lemma lem8261505 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (@lem8261502 A B P f g a lt2 s z p h1 (@lem8261498 A B P f p P' g a h2 h3)). Qed.
Lemma lem8261506 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term773 A B P lt2 z f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z f g s a => @lem8261505 A B P lt2 s z f p P' g a h1 h2 h3). Qed.
Lemma lem8261508 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261509 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z f g s a) = (term654 A B P lt2 z f g s a).
Proof. exact (@lem8261508 (term654 A B P lt2 z f g s a)). Qed.
Lemma lem8261510 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term580 A B P lt2 s z p) (h2 : term615 A B P p f a) (h3 : term980 A B P f p P' g a) : term654 A B P lt2 z f g s a.
Proof. exact (EQ_MP (@lem8261509 A B P lt2 z f g s a) (@lem8261506 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8261512 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110102.
Proof. exact (EQ_MP (@lem8261367 A B P lt2 s a f g _110102) (@lem8261356 A B P _110102 lt2 s a f g h1)). Qed.
Lemma lem8261513 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110102.
Proof. exact (@lem8261512 A B P _110102 lt2 s a f g h1). Qed.
Lemma lem8261514 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z f g a.
Proof. exact (@lem8261513 A B P (term637 A B P z f g a) lt2 s a f g h1). Qed.
Lemma lem8261517 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (@lem8261514 A B P z lt2 s a f g h1 (@lem8261510 A B P lt2 s z f p P' g a h2 h3 h4)). Qed.
Lemma lem8261518 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term784 A B P z f g a.
Proof. exact (fun h0 : term647 A B P z f g a => @lem8261517 A B P lt2 s z f p P' g a h1 h2 h3 h4). Qed.
Lemma lem8261520 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261521 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z f g a) = ((term640 A B P z f g a) = (term643 A B P z f g a)).
Proof. exact (@lem8261520 ((term640 A B P z f g a) = (term643 A B P z f g a))). Qed.
Lemma lem8261522 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term640 A B P z f g a) = (term643 A B P z f g a).
Proof. exact (EQ_MP (@lem8261521 A B P z f g a) (@lem8261518 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261524 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261525 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261524 A B P f p P' g a h1). Qed.
Lemma lem8261527 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261528 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261527 (term614 A B P p g a)). Qed.
Lemma lem8261529 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261528 A B P p g a) (@lem8261525 A B P f p P' g a h1)). Qed.
Lemma lem8261530 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term859 A B P z f p g a.
Proof. exact (conj (@lem8261522 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8261529 A B P f p P' g a h4)). Qed.
Lemma lem8261532 {A B P : Type'} (_110104 : A -> B) (_110103 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _110104 p _110103 _110105.
Proof. exact (EQ_MP (@lem8261461 A B P z _110104 p _110103 _110105) (@lem8261440 A B P _110103 _110104 _110105 lt2 s z p h1)). Qed.
Lemma lem8261533 {A B P : Type'} (_110104 : A -> B) (_110103 : A -> B) (_110105 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z _110104 p _110103 _110105.
Proof. exact (@lem8261532 A B P _110104 _110103 _110105 lt2 s z p h1). Qed.
Lemma lem8261534 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) (h1 : term580 A B P lt2 s z p) : term875 A B P z g p f a.
Proof. exact (@lem8261533 A B P g f a lt2 s z p h1). Qed.
Lemma lem8261537 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (@lem8261534 A B P g f a lt2 s z p h2 (@lem8261530 A B P lt2 s z f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8261538 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term980 A B P f p P' g a) : term757 A B P p f a.
Proof. exact (fun h0 : term615 A B P p f a => @lem8261537 A B P lt2 s z f p P' g a h1 h2 h0 h3). Qed.
Lemma lem8261540 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261541 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term757 A B P p f a) = (term614 A B P p f a).
Proof. exact (@lem8261540 (term614 A B P p f a)). Qed.
Lemma lem8261542 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term980 A B P f p P' g a) : term614 A B P p f a.
Proof. exact (EQ_MP (@lem8261541 A B P p f a) (@lem8261538 A B P lt2 s z f p P' g a h1 h2 h3)). Qed.
Lemma lem8261544 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (proj1 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261545 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P p g a.
Proof. exact (fun h0 : term615 A B P p g a => @lem8261544 A B P f p P' g a h1). Qed.
Lemma lem8261547 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261548 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term757 A B P p g a) = (term614 A B P p g a).
Proof. exact (@lem8261547 (term614 A B P p g a)). Qed.
Lemma lem8261549 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P p g a.
Proof. exact (EQ_MP (@lem8261548 A B P p g a) (@lem8261545 A B P f p P' g a h1)). Qed.
Lemma lem8261552 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term615 A B P P' f a.
Proof. exact (h1). Qed.
Lemma lem8261553 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term759 A B P P' f a.
Proof. exact (fun h0 : term614 A B P P' f a => @lem8261552 A B P P' f a h1). Qed.
Lemma lem8261555 (p : Prop) : (term760 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8261556 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term759 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (@lem8261555 (term614 A B P P' f a)). Qed.
Lemma lem8261557 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term615 A B P P' f a.
Proof. exact (EQ_MP (@lem8261556 A B P P' f a) (@lem8261553 A B P P' f a h1)). Qed.
Lemma lem8261559 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P P' g a.
Proof. exact (proj2 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261560 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P P' g a.
Proof. exact (fun h0 : term615 A B P P' g a => @lem8261559 A B P f p P' g a h1). Qed.
Lemma lem8261562 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261563 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term757 A B P P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8261562 (term614 A B P P' g a)). Qed.
Lemma lem8261564 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P P' g a.
Proof. exact (EQ_MP (@lem8261563 A B P P' g a) (@lem8261560 A B P f p P' g a h1)). Qed.
Lemma lem8261580 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261581 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term741 A B P p lt2 z' s _110106 P' _110107 _110108) = (term803 A B P lt2 z' s p _110106 P' _110107 _110108).
Proof. exact (@lem8261580 (term654 A B P lt2 z' _110106 _110107 s _110108) (term615 A B P p _110107 _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8261595 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261596 {A B P : Type'} (_110106 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term804 A B P p _110106 P' _110107 _110108) = (term805 A B P _110106 p P' _110107 _110108).
Proof. exact (@lem8261595 (term614 A B P P' _110106 _110108) (term615 A B P p _110107 _110108) (term615 A B P P' _110107 _110108)). Qed.
Lemma lem8261610 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8261611 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term806 A B P p P' _110107 _110108) = (term806 A B P P' p _110107 _110108).
Proof. exact (@lem8261610 (term615 A B P P' _110107 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8261617 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8261618 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term805 A B P _110106 p P' _110107 _110108) = (term807 A B P _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261617 A B P P' _110106 _110108) (@lem8261611 A B P P' p _110107 _110108)). Qed.
Lemma lem8261629 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term804 A B P p _110106 P' _110107 _110108) = (term807 A B P _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8261596 A B P _110106 p P' _110107 _110108) (@lem8261618 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261630 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term808 A B P lt2 z' _110106 _110107 s _110108) = (term808 A B P lt2 z' _110106 _110107 s _110108).
Proof. exact (eq_refl (term808 A B P lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261631 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term803 A B P lt2 z' s p _110106 P' _110107 _110108) = (term809 A B P lt2 z' s _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261630 A B P lt2 z' _110106 _110107 s _110108) (@lem8261629 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261642 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term741 A B P p lt2 z' s _110106 P' _110107 _110108) = (term809 A B P lt2 z' s _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8261581 A B P lt2 z' s p _110106 P' _110107 _110108) (@lem8261631 A B P lt2 z' s _110106 P' p _110107 _110108)). Qed.
Lemma lem8261643 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term618 A B P p _110106 _110108) = (term618 A B P p _110106 _110108).
Proof. exact (eq_refl (term618 A B P p _110106 _110108)). Qed.
Lemma lem8261644 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term742 A B P p lt2 z' s _110106 P' _110107 _110108) = (term810 A B P lt2 z' s _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261643 A B P p _110106 _110108) (@lem8261642 A B P lt2 z' s _110106 P' p _110107 _110108)). Qed.
Lemma lem8261648 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261649 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term810 A B P lt2 z' s _110106 P' p _110107 _110108) = (term811 A B P lt2 z' s _110106 P' p _110107 _110108).
Proof. exact (@lem8261648 (term654 A B P lt2 z' _110106 _110107 s _110108) (term615 A B P p _110106 _110108) (term807 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261663 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261664 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term812 A B P _110106 P' p _110107 _110108) = (term813 A B P _110106 P' p _110107 _110108).
Proof. exact (@lem8261663 (term614 A B P P' _110106 _110108) (term615 A B P p _110106 _110108) (term806 A B P P' p _110107 _110108)). Qed.
Lemma lem8261678 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261679 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term814 A B P _110106 P' p _110107 _110108) = (term815 A B P P' _110106 p _110107 _110108).
Proof. exact (@lem8261678 (term615 A B P P' _110107 _110108) (term615 A B P p _110106 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8261695 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8261696 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term813 A B P _110106 P' p _110107 _110108) = (term816 A B P P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8261695 A B P P' _110106 _110108) (@lem8261679 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261707 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term812 A B P _110106 P' p _110107 _110108) = (term816 A B P P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8261664 A B P _110106 P' p _110107 _110108) (@lem8261696 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261708 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term808 A B P lt2 z' _110106 _110107 s _110108) = (term808 A B P lt2 z' _110106 _110107 s _110108).
Proof. exact (eq_refl (term808 A B P lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261709 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term811 A B P lt2 z' s _110106 P' p _110107 _110108) = (term817 A B P lt2 z' s P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8261708 A B P lt2 z' _110106 _110107 s _110108) (@lem8261707 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261720 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term810 A B P lt2 z' s _110106 P' p _110107 _110108) = (term817 A B P lt2 z' s P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8261649 A B P lt2 z' s _110106 P' p _110107 _110108) (@lem8261709 A B P lt2 z' s P' _110106 p _110107 _110108)). Qed.
Lemma lem8261721 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term742 A B P p lt2 z' s _110106 P' _110107 _110108) = (term817 A B P lt2 z' s P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8261644 A B P lt2 z' s _110106 P' p _110107 _110108) (@lem8261720 A B P lt2 z' s P' _110106 p _110107 _110108)). Qed.
Lemma lem8261722 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8261723 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term818 A B P p lt2 z' s _110106 P' _110107 _110108) = (term819 A B P lt2 z' s P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8261722) (@lem8261721 A B P lt2 z' s P' _110106 p _110107 _110108)). Qed.
Lemma lem8261747 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261748 {A B P : Type'} (_110106 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term804 A B P p _110106 P' _110107 _110108) = (term805 A B P _110106 p P' _110107 _110108).
Proof. exact (@lem8261747 (term614 A B P P' _110106 _110108) (term615 A B P p _110107 _110108) (term615 A B P P' _110107 _110108)). Qed.
Lemma lem8261762 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8261763 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term806 A B P p P' _110107 _110108) = (term806 A B P P' p _110107 _110108).
Proof. exact (@lem8261762 (term615 A B P P' _110107 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8261769 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8261770 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term805 A B P _110106 p P' _110107 _110108) = (term807 A B P _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261769 A B P P' _110106 _110108) (@lem8261763 A B P P' p _110107 _110108)). Qed.
Lemma lem8261781 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term804 A B P p _110106 P' _110107 _110108) = (term807 A B P _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8261748 A B P _110106 p P' _110107 _110108) (@lem8261770 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261782 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term618 A B P p _110106 _110108) = (term618 A B P p _110106 _110108).
Proof. exact (eq_refl (term618 A B P p _110106 _110108)). Qed.
Lemma lem8261783 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term820 A B P p _110106 P' _110107 _110108) = (term812 A B P _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261782 A B P p _110106 _110108) (@lem8261781 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261787 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261788 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term812 A B P _110106 P' p _110107 _110108) = (term813 A B P _110106 P' p _110107 _110108).
Proof. exact (@lem8261787 (term614 A B P P' _110106 _110108) (term615 A B P p _110106 _110108) (term806 A B P P' p _110107 _110108)). Qed.
Lemma lem8261802 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261803 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term814 A B P _110106 P' p _110107 _110108) = (term815 A B P P' _110106 p _110107 _110108).
Proof. exact (@lem8261802 (term615 A B P P' _110107 _110108) (term615 A B P p _110106 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8261819 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8261820 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term813 A B P _110106 P' p _110107 _110108) = (term816 A B P P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8261819 A B P P' _110106 _110108) (@lem8261803 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261831 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term812 A B P _110106 P' p _110107 _110108) = (term816 A B P P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8261788 A B P _110106 P' p _110107 _110108) (@lem8261820 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261832 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term820 A B P p _110106 P' _110107 _110108) = (term816 A B P P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8261783 A B P _110106 P' p _110107 _110108) (@lem8261831 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261833 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term808 A B P lt2 z' _110106 _110107 s _110108) = (term808 A B P lt2 z' _110106 _110107 s _110108).
Proof. exact (eq_refl (term808 A B P lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261834 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term821 A B P lt2 z' s p _110106 P' _110107 _110108) = (term817 A B P lt2 z' s P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8261833 A B P lt2 z' _110106 _110107 s _110108) (@lem8261832 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8261845 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : ((term742 A B P p lt2 z' s _110106 P' _110107 _110108) = (term821 A B P lt2 z' s p _110106 P' _110107 _110108)) = ((term817 A B P lt2 z' s P' _110106 p _110107 _110108) = (term817 A B P lt2 z' s P' _110106 p _110107 _110108)).
Proof. exact (MK_COMB (@lem8261723 A B P lt2 z' s P' _110106 p _110107 _110108) (@lem8261834 A B P lt2 z' s P' _110106 p _110107 _110108)). Qed.
Lemma lem8261847 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8261848 (x : Prop) : (x = x) = True.
Proof. exact (@lem8261847 Prop x). Qed.
Lemma lem8261849 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : ((term817 A B P lt2 z' s P' _110106 p _110107 _110108) = (term817 A B P lt2 z' s P' _110106 p _110107 _110108)) = True.
Proof. exact (@lem8261848 (term817 A B P lt2 z' s P' _110106 p _110107 _110108)). Qed.
Lemma lem8261850 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : ((term742 A B P p lt2 z' s _110106 P' _110107 _110108) = (term821 A B P lt2 z' s p _110106 P' _110107 _110108)) = True.
Proof. exact (TRANS (@lem8261845 A B P lt2 z' s P' _110106 p _110107 _110108) (@lem8261849 A B P lt2 z' s P' _110106 p _110107 _110108)). Qed.
Lemma lem8261851 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : True = ((term742 A B P p lt2 z' s _110106 P' _110107 _110108) = (term821 A B P lt2 z' s p _110106 P' _110107 _110108)).
Proof. exact (SYM (@lem8261850 A B P lt2 z' s p _110106 P' _110107 _110108)). Qed.
Lemma lem8261852 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (s : P -> A) (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term742 A B P p lt2 z' s _110106 P' _110107 _110108) = (term821 A B P lt2 z' s p _110106 P' _110107 _110108).
Proof. exact (EQ_MP (@lem8261851 A B P lt2 z' s p _110106 P' _110107 _110108) (@lem0)). Qed.
Lemma lem8261853 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term821 A B P lt2 z' s p _110106 P' _110107 _110108.
Proof. exact (EQ_MP (@lem8261852 A B P lt2 z' s p _110106 P' _110107 _110108) (@lem8259057 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8261855 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8261856 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term821 A B P lt2 z' s p _110106 P' _110107 _110108) = (term822 A B P p P' lt2 z' _110106 _110107 s _110108).
Proof. exact (@lem8261855 (term820 A B P p _110106 P' _110107 _110108) (term654 A B P lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261858 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8261859 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term823 A B P p _110106 P' _110107 _110108) = (term824 A B P p _110106 P' _110107 _110108).
Proof. exact (@lem8261858 (term615 A B P p _110106 _110108) (term804 A B P p _110106 P' _110107 _110108)). Qed.
Lemma lem8261861 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261862 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term767 A B P p _110106 _110108) = (term614 A B P p _110106 _110108).
Proof. exact (@lem8261861 (term614 A B P p _110106 _110108)). Qed.
Lemma lem8261863 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8261864 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term768 A B P p _110106 _110108) = (term616 A B P p _110106 _110108).
Proof. exact (MK_COMB (@lem8261863) (@lem8261862 A B P p _110106 _110108)). Qed.
Lemma lem8261866 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8261867 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term825 A B P p _110106 P' _110107 _110108) = (term826 A B P p _110106 P' _110107 _110108).
Proof. exact (@lem8261866 (term615 A B P p _110107 _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8261869 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261870 {A B P : Type'} (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term767 A B P p _110107 _110108) = (term614 A B P p _110107 _110108).
Proof. exact (@lem8261869 (term614 A B P p _110107 _110108)). Qed.
Lemma lem8261871 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8261872 {A B P : Type'} (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term768 A B P p _110107 _110108) = (term616 A B P p _110107 _110108).
Proof. exact (MK_COMB (@lem8261871) (@lem8261870 A B P p _110107 _110108)). Qed.
Lemma lem8261874 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8261875 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term827 A B P _110106 P' _110107 _110108) = (term828 A B P _110106 P' _110107 _110108).
Proof. exact (@lem8261874 (term614 A B P P' _110106 _110108) (term615 A B P P' _110107 _110108)). Qed.
Lemma lem8261877 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8261878 {A B P : Type'} (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term767 A B P P' _110107 _110108) = (term614 A B P P' _110107 _110108).
Proof. exact (@lem8261877 (term614 A B P P' _110107 _110108)). Qed.
Lemma lem8261879 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term829 A B P P' _110106 _110108) = (term829 A B P P' _110106 _110108).
Proof. exact (eq_refl (term829 A B P P' _110106 _110108)). Qed.
Lemma lem8261880 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term828 A B P _110106 P' _110107 _110108) = (term830 A B P _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8261879 A B P P' _110106 _110108) (@lem8261878 A B P P' _110107 _110108)). Qed.
Lemma lem8261881 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term827 A B P _110106 P' _110107 _110108) = (term830 A B P _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8261875 A B P _110106 P' _110107 _110108) (@lem8261880 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8261882 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term826 A B P p _110106 P' _110107 _110108) = (term831 A B P p _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8261872 A B P p _110107 _110108) (@lem8261881 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8261883 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term825 A B P p _110106 P' _110107 _110108) = (term831 A B P p _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8261867 A B P p _110106 P' _110107 _110108) (@lem8261882 A B P p _110106 P' _110107 _110108)). Qed.
Lemma lem8261884 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term824 A B P p _110106 P' _110107 _110108) = (term832 A B P p _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8261864 A B P p _110106 _110108) (@lem8261883 A B P p _110106 P' _110107 _110108)). Qed.
Lemma lem8261885 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term823 A B P p _110106 P' _110107 _110108) = (term832 A B P p _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8261859 A B P p _110106 P' _110107 _110108) (@lem8261884 A B P p _110106 P' _110107 _110108)). Qed.
Lemma lem8261886 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8261887 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term833 A B P p _110106 P' _110107 _110108) = (term834 A B P p _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8261886) (@lem8261885 A B P p _110106 P' _110107 _110108)). Qed.
Lemma lem8261888 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term654 A B P lt2 z' _110106 _110107 s _110108) = (term654 A B P lt2 z' _110106 _110107 s _110108).
Proof. exact (eq_refl (term654 A B P lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261889 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term822 A B P p P' lt2 z' _110106 _110107 s _110108) = (term835 A B P p P' lt2 z' _110106 _110107 s _110108).
Proof. exact (MK_COMB (@lem8261887 A B P p _110106 P' _110107 _110108) (@lem8261888 A B P lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261890 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (s : P -> A) (_110108 : P) : (term821 A B P lt2 z' s p _110106 P' _110107 _110108) = (term835 A B P p P' lt2 z' _110106 _110107 s _110108).
Proof. exact (TRANS (@lem8261856 A B P p P' lt2 z' _110106 _110107 s _110108) (@lem8261889 A B P p P' lt2 z' _110106 _110107 s _110108)). Qed.
Lemma lem8261892 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' f a) (h2 : term980 A B P f p P' g a) : term830 A B P f P' g a.
Proof. exact (conj (@lem8261557 A B P P' f a h1) (@lem8261564 A B P f p P' g a h2)). Qed.
Lemma lem8261893 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term615 A B P P' f a) (h2 : term980 A B P f p P' g a) : term831 A B P p f P' g a.
Proof. exact (conj (@lem8261549 A B P f p P' g a h2) (@lem8261892 A B P f p P' g a h1 h2)). Qed.
Lemma lem8261894 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P P' f a) (h4 : term980 A B P f p P' g a) : term832 A B P p f P' g a.
Proof. exact (conj (@lem8261542 A B P lt2 s z f p P' g a h1 h2 h4) (@lem8261893 A B P f p P' g a h3 h4)). Qed.
Lemma lem8261896 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term835 A B P p P' lt2 z' _110106 _110107 s _110108.
Proof. exact (EQ_MP (@lem8261890 A B P p P' lt2 z' _110106 _110107 s _110108) (@lem8261853 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8261897 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term835 A B P p P' lt2 z' _110106 _110107 s _110108.
Proof. exact (@lem8261896 A B P _110106 _110107 _110108 p lt2 s z' P' h1). Qed.
Lemma lem8261898 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term835 A B P p P' lt2 z' f g s a.
Proof. exact (@lem8261897 A B P f g a p lt2 s z' P' h1). Qed.
Lemma lem8261901 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term654 A B P lt2 z' f g s a.
Proof. exact (@lem8261898 A B P f g a p lt2 s z' P' h3 (@lem8261894 A B P lt2 s z f p P' g a h1 h2 h4 h5)). Qed.
Lemma lem8261902 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term773 A B P lt2 z' f g s a.
Proof. exact (fun h0 : term774 A B P lt2 z' f g s a => @lem8261901 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8261904 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261905 {A B P : Type'} (lt2 : type1402 A) (z' : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term773 A B P lt2 z' f g s a) = (term654 A B P lt2 z' f g s a).
Proof. exact (@lem8261904 (term654 A B P lt2 z' f g s a)). Qed.
Lemma lem8261906 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term654 A B P lt2 z' f g s a.
Proof. exact (EQ_MP (@lem8261905 A B P lt2 z' f g s a) (@lem8261902 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8261908 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110102.
Proof. exact (EQ_MP (@lem8261367 A B P lt2 s a f g _110102) (@lem8261356 A B P _110102 lt2 s a f g h1)). Qed.
Lemma lem8261909 {A B P : Type'} (_110102 : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term782 A B P lt2 s a f g _110102.
Proof. exact (@lem8261908 A B P _110102 lt2 s a f g h1). Qed.
Lemma lem8261910 {A B P : Type'} (z' : type518 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term783 A B P lt2 s z' f g a.
Proof. exact (@lem8261909 A B P (term637 A B P z' f g a) lt2 s a f g h1). Qed.
Lemma lem8261913 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (@lem8261910 A B P z' lt2 s a f g h1 (@lem8261906 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8261914 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term784 A B P z' f g a.
Proof. exact (fun h0 : term647 A B P z' f g a => @lem8261913 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8261916 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261917 {A B P : Type'} (z' : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term784 A B P z' f g a) = ((term640 A B P z' f g a) = (term643 A B P z' f g a)).
Proof. exact (@lem8261916 ((term640 A B P z' f g a) = (term643 A B P z' f g a))). Qed.
Lemma lem8261918 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : (term640 A B P z' f g a) = (term643 A B P z' f g a).
Proof. exact (EQ_MP (@lem8261917 A B P z' f g a) (@lem8261914 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8261920 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P P' g a.
Proof. exact (proj2 (@lem8257770 A B P f p P' g a h1)). Qed.
Lemma lem8261921 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term757 A B P P' g a.
Proof. exact (fun h0 : term615 A B P P' g a => @lem8261920 A B P f p P' g a h1). Qed.
Lemma lem8261923 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8261924 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term757 A B P P' g a) = (term614 A B P P' g a).
Proof. exact (@lem8261923 (term614 A B P P' g a)). Qed.
Lemma lem8261925 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term980 A B P f p P' g a) : term614 A B P P' g a.
Proof. exact (EQ_MP (@lem8261924 A B P P' g a) (@lem8261921 A B P f p P' g a h1)). Qed.
Lemma lem8261941 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261942 {A B P : Type'} (z' : type518 A B P) (p : type560 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term745 A B P p z' _110106 P' _110107 _110108) = (term836 A B P z' p _110106 P' _110107 _110108).
Proof. exact (@lem8261941 (term647 A B P z' _110106 _110107 _110108) (term615 A B P p _110107 _110108) (term631 A B P _110106 P' _110107 _110108)). Qed.
Lemma lem8261958 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261959 {A B P : Type'} (_110106 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term804 A B P p _110106 P' _110107 _110108) = (term805 A B P _110106 p P' _110107 _110108).
Proof. exact (@lem8261958 (term614 A B P P' _110106 _110108) (term615 A B P p _110107 _110108) (term615 A B P P' _110107 _110108)). Qed.
Lemma lem8261973 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8261974 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term806 A B P p P' _110107 _110108) = (term806 A B P P' p _110107 _110108).
Proof. exact (@lem8261973 (term615 A B P P' _110107 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8261980 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8261981 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term805 A B P _110106 p P' _110107 _110108) = (term807 A B P _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261980 A B P P' _110106 _110108) (@lem8261974 A B P P' p _110107 _110108)). Qed.
Lemma lem8261992 {A B P : Type'} (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term804 A B P p _110106 P' _110107 _110108) = (term807 A B P _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8261959 A B P _110106 p P' _110107 _110108) (@lem8261981 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261993 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) : (term785 A B P z' _110106 _110107 _110108) = (term785 A B P z' _110106 _110107 _110108).
Proof. exact (eq_refl (term785 A B P z' _110106 _110107 _110108)). Qed.
Lemma lem8261994 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term836 A B P z' p _110106 P' _110107 _110108) = (term837 A B P z' _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8261993 A B P z' _110106 _110107 _110108) (@lem8261992 A B P _110106 P' p _110107 _110108)). Qed.
Lemma lem8261998 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8261999 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term837 A B P z' _110106 P' p _110107 _110108) = (term838 A B P z' _110106 P' p _110107 _110108).
Proof. exact (@lem8261998 (term614 A B P P' _110106 _110108) (term647 A B P z' _110106 _110107 _110108) (term806 A B P P' p _110107 _110108)). Qed.
Lemma lem8262027 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term836 A B P z' p _110106 P' _110107 _110108) = (term838 A B P z' _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8261994 A B P z' _110106 P' p _110107 _110108) (@lem8261999 A B P z' _110106 P' p _110107 _110108)). Qed.
Lemma lem8262028 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term745 A B P p z' _110106 P' _110107 _110108) = (term838 A B P z' _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8261942 A B P z' p _110106 P' _110107 _110108) (@lem8262027 A B P z' _110106 P' p _110107 _110108)). Qed.
Lemma lem8262029 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term618 A B P p _110106 _110108) = (term618 A B P p _110106 _110108).
Proof. exact (eq_refl (term618 A B P p _110106 _110108)). Qed.
Lemma lem8262030 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term746 A B P p z' _110106 P' _110107 _110108) = (term839 A B P z' _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8262029 A B P p _110106 _110108) (@lem8262028 A B P z' _110106 P' p _110107 _110108)). Qed.
Lemma lem8262034 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8262035 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term839 A B P z' _110106 P' p _110107 _110108) = (term840 A B P z' _110106 P' p _110107 _110108).
Proof. exact (@lem8262034 (term614 A B P P' _110106 _110108) (term615 A B P p _110106 _110108) (term841 A B P z' _110106 P' p _110107 _110108)). Qed.
Lemma lem8262049 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8262050 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term842 A B P z' _110106 P' p _110107 _110108) = (term843 A B P z' _110106 P' p _110107 _110108).
Proof. exact (@lem8262049 (term647 A B P z' _110106 _110107 _110108) (term615 A B P p _110106 _110108) (term806 A B P P' p _110107 _110108)). Qed.
Lemma lem8262066 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8262067 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term814 A B P _110106 P' p _110107 _110108) = (term815 A B P P' _110106 p _110107 _110108).
Proof. exact (@lem8262066 (term615 A B P P' _110107 _110108) (term615 A B P p _110106 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8262083 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) : (term785 A B P z' _110106 _110107 _110108) = (term785 A B P z' _110106 _110107 _110108).
Proof. exact (eq_refl (term785 A B P z' _110106 _110107 _110108)). Qed.
Lemma lem8262084 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term843 A B P z' _110106 P' p _110107 _110108) = (term844 A B P z' P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8262083 A B P z' _110106 _110107 _110108) (@lem8262067 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8262095 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term842 A B P z' _110106 P' p _110107 _110108) = (term844 A B P z' P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8262050 A B P z' _110106 P' p _110107 _110108) (@lem8262084 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262096 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8262097 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term840 A B P z' _110106 P' p _110107 _110108) = (term845 A B P z' P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8262096 A B P P' _110106 _110108) (@lem8262095 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262108 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term839 A B P z' _110106 P' p _110107 _110108) = (term845 A B P z' P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8262035 A B P z' _110106 P' p _110107 _110108) (@lem8262097 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262109 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term746 A B P p z' _110106 P' _110107 _110108) = (term845 A B P z' P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8262030 A B P z' _110106 P' p _110107 _110108) (@lem8262108 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262110 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8262111 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term846 A B P p z' _110106 P' _110107 _110108) = (term847 A B P z' P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8262110) (@lem8262109 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262135 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8262136 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (p : type560 A B P) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term848 A B P p z' _110106 P' _110107 _110108) = (term841 A B P z' _110106 p P' _110107 _110108).
Proof. exact (@lem8262135 (term647 A B P z' _110106 _110107 _110108) (term615 A B P p _110107 _110108) (term615 A B P P' _110107 _110108)). Qed.
Lemma lem8262152 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8262153 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term806 A B P p P' _110107 _110108) = (term806 A B P P' p _110107 _110108).
Proof. exact (@lem8262152 (term615 A B P P' _110107 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8262159 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) : (term785 A B P z' _110106 _110107 _110108) = (term785 A B P z' _110106 _110107 _110108).
Proof. exact (eq_refl (term785 A B P z' _110106 _110107 _110108)). Qed.
Lemma lem8262160 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term841 A B P z' _110106 p P' _110107 _110108) = (term841 A B P z' _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8262159 A B P z' _110106 _110107 _110108) (@lem8262153 A B P P' p _110107 _110108)). Qed.
Lemma lem8262171 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term848 A B P p z' _110106 P' _110107 _110108) = (term841 A B P z' _110106 P' p _110107 _110108).
Proof. exact (TRANS (@lem8262136 A B P z' _110106 p P' _110107 _110108) (@lem8262160 A B P z' _110106 P' p _110107 _110108)). Qed.
Lemma lem8262172 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term618 A B P p _110106 _110108) = (term618 A B P p _110106 _110108).
Proof. exact (eq_refl (term618 A B P p _110106 _110108)). Qed.
Lemma lem8262173 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term849 A B P p z' _110106 P' _110107 _110108) = (term842 A B P z' _110106 P' p _110107 _110108).
Proof. exact (MK_COMB (@lem8262172 A B P p _110106 _110108) (@lem8262171 A B P z' _110106 P' p _110107 _110108)). Qed.
Lemma lem8262177 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8262178 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term842 A B P z' _110106 P' p _110107 _110108) = (term843 A B P z' _110106 P' p _110107 _110108).
Proof. exact (@lem8262177 (term647 A B P z' _110106 _110107 _110108) (term615 A B P p _110106 _110108) (term806 A B P P' p _110107 _110108)). Qed.
Lemma lem8262194 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8262195 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term814 A B P _110106 P' p _110107 _110108) = (term815 A B P P' _110106 p _110107 _110108).
Proof. exact (@lem8262194 (term615 A B P P' _110107 _110108) (term615 A B P p _110106 _110108) (term615 A B P p _110107 _110108)). Qed.
Lemma lem8262211 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) : (term785 A B P z' _110106 _110107 _110108) = (term785 A B P z' _110106 _110107 _110108).
Proof. exact (eq_refl (term785 A B P z' _110106 _110107 _110108)). Qed.
Lemma lem8262212 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term843 A B P z' _110106 P' p _110107 _110108) = (term844 A B P z' P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8262211 A B P z' _110106 _110107 _110108) (@lem8262195 A B P P' _110106 p _110107 _110108)). Qed.
Lemma lem8262223 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term842 A B P z' _110106 P' p _110107 _110108) = (term844 A B P z' P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8262178 A B P z' _110106 P' p _110107 _110108) (@lem8262212 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262224 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term849 A B P p z' _110106 P' _110107 _110108) = (term844 A B P z' P' _110106 p _110107 _110108).
Proof. exact (TRANS (@lem8262173 A B P z' _110106 P' p _110107 _110108) (@lem8262223 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262225 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term629 A B P P' _110106 _110108) = (term629 A B P P' _110106 _110108).
Proof. exact (eq_refl (term629 A B P P' _110106 _110108)). Qed.
Lemma lem8262226 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term850 A B P p z' _110106 P' _110107 _110108) = (term845 A B P z' P' _110106 p _110107 _110108).
Proof. exact (MK_COMB (@lem8262225 A B P P' _110106 _110108) (@lem8262224 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262237 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : ((term746 A B P p z' _110106 P' _110107 _110108) = (term850 A B P p z' _110106 P' _110107 _110108)) = ((term845 A B P z' P' _110106 p _110107 _110108) = (term845 A B P z' P' _110106 p _110107 _110108)).
Proof. exact (MK_COMB (@lem8262111 A B P z' P' _110106 p _110107 _110108) (@lem8262226 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262239 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8262240 (x : Prop) : (x = x) = True.
Proof. exact (@lem8262239 Prop x). Qed.
Lemma lem8262241 {A B P : Type'} (z' : type518 A B P) (P' : type560 A B P) (_110106 : A -> B) (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : ((term845 A B P z' P' _110106 p _110107 _110108) = (term845 A B P z' P' _110106 p _110107 _110108)) = True.
Proof. exact (@lem8262240 (term845 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262242 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : ((term746 A B P p z' _110106 P' _110107 _110108) = (term850 A B P p z' _110106 P' _110107 _110108)) = True.
Proof. exact (TRANS (@lem8262237 A B P z' P' _110106 p _110107 _110108) (@lem8262241 A B P z' P' _110106 p _110107 _110108)). Qed.
Lemma lem8262243 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : True = ((term746 A B P p z' _110106 P' _110107 _110108) = (term850 A B P p z' _110106 P' _110107 _110108)).
Proof. exact (SYM (@lem8262242 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262244 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term746 A B P p z' _110106 P' _110107 _110108) = (term850 A B P p z' _110106 P' _110107 _110108).
Proof. exact (EQ_MP (@lem8262243 A B P p z' _110106 P' _110107 _110108) (@lem0)). Qed.
Lemma lem8262245 {A B P : Type'} (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term850 A B P p z' _110106 P' _110107 _110108.
Proof. exact (EQ_MP (@lem8262244 A B P p z' _110106 P' _110107 _110108) (@lem8259079 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8262247 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8262248 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110107 : A -> B) (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term850 A B P p z' _110106 P' _110107 _110108) = (term851 A B P p z' _110107 P' _110106 _110108).
Proof. exact (@lem8262247 (term849 A B P p z' _110106 P' _110107 _110108) (term614 A B P P' _110106 _110108)). Qed.
Lemma lem8262250 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8262251 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term852 A B P p z' _110106 P' _110107 _110108) = (term853 A B P p z' _110106 P' _110107 _110108).
Proof. exact (@lem8262250 (term615 A B P p _110106 _110108) (term848 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262253 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8262254 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term767 A B P p _110106 _110108) = (term614 A B P p _110106 _110108).
Proof. exact (@lem8262253 (term614 A B P p _110106 _110108)). Qed.
Lemma lem8262255 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8262256 {A B P : Type'} (p : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term768 A B P p _110106 _110108) = (term616 A B P p _110106 _110108).
Proof. exact (MK_COMB (@lem8262255) (@lem8262254 A B P p _110106 _110108)). Qed.
Lemma lem8262258 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8262259 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term854 A B P p z' _110106 P' _110107 _110108) = (term855 A B P p z' _110106 P' _110107 _110108).
Proof. exact (@lem8262258 (term615 A B P p _110107 _110108) (term856 A B P z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262261 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8262262 {A B P : Type'} (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term767 A B P p _110107 _110108) = (term614 A B P p _110107 _110108).
Proof. exact (@lem8262261 (term614 A B P p _110107 _110108)). Qed.
Lemma lem8262263 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8262264 {A B P : Type'} (p : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term768 A B P p _110107 _110108) = (term616 A B P p _110107 _110108).
Proof. exact (MK_COMB (@lem8262263) (@lem8262262 A B P p _110107 _110108)). Qed.
Lemma lem8262266 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8262267 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term857 A B P z' _110106 P' _110107 _110108) = (term858 A B P z' _110106 P' _110107 _110108).
Proof. exact (@lem8262266 (term647 A B P z' _110106 _110107 _110108) (term615 A B P P' _110107 _110108)). Qed.
Lemma lem8262269 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8262270 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) : (term794 A B P z' _110106 _110107 _110108) = ((term640 A B P z' _110106 _110107 _110108) = (term643 A B P z' _110106 _110107 _110108)).
Proof. exact (@lem8262269 ((term640 A B P z' _110106 _110107 _110108) = (term643 A B P z' _110106 _110107 _110108))). Qed.
Lemma lem8262271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8262272 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (_110107 : A -> B) (_110108 : P) : (term795 A B P z' _110106 _110107 _110108) = (term796 A B P z' _110106 _110107 _110108).
Proof. exact (MK_COMB (@lem8262271) (@lem8262270 A B P z' _110106 _110107 _110108)). Qed.
Lemma lem8262274 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8262275 {A B P : Type'} (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term767 A B P P' _110107 _110108) = (term614 A B P P' _110107 _110108).
Proof. exact (@lem8262274 (term614 A B P P' _110107 _110108)). Qed.
Lemma lem8262276 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term858 A B P z' _110106 P' _110107 _110108) = (term859 A B P z' _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8262272 A B P z' _110106 _110107 _110108) (@lem8262275 A B P P' _110107 _110108)). Qed.
Lemma lem8262277 {A B P : Type'} (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term857 A B P z' _110106 P' _110107 _110108) = (term859 A B P z' _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8262267 A B P z' _110106 P' _110107 _110108) (@lem8262276 A B P z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262278 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term855 A B P p z' _110106 P' _110107 _110108) = (term860 A B P p z' _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8262264 A B P p _110107 _110108) (@lem8262277 A B P z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262279 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term854 A B P p z' _110106 P' _110107 _110108) = (term860 A B P p z' _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8262259 A B P p z' _110106 P' _110107 _110108) (@lem8262278 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262280 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term853 A B P p z' _110106 P' _110107 _110108) = (term861 A B P p z' _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8262256 A B P p _110106 _110108) (@lem8262279 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262281 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term852 A B P p z' _110106 P' _110107 _110108) = (term861 A B P p z' _110106 P' _110107 _110108).
Proof. exact (TRANS (@lem8262251 A B P p z' _110106 P' _110107 _110108) (@lem8262280 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262282 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262283 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110106 : A -> B) (P' : type560 A B P) (_110107 : A -> B) (_110108 : P) : (term862 A B P p z' _110106 P' _110107 _110108) = (term863 A B P p z' _110106 P' _110107 _110108).
Proof. exact (MK_COMB (@lem8262282) (@lem8262281 A B P p z' _110106 P' _110107 _110108)). Qed.
Lemma lem8262284 {A B P : Type'} (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term614 A B P P' _110106 _110108) = (term614 A B P P' _110106 _110108).
Proof. exact (eq_refl (term614 A B P P' _110106 _110108)). Qed.
Lemma lem8262285 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110107 : A -> B) (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term851 A B P p z' _110107 P' _110106 _110108) = (term864 A B P p z' _110107 P' _110106 _110108).
Proof. exact (MK_COMB (@lem8262283 A B P p z' _110106 P' _110107 _110108) (@lem8262284 A B P P' _110106 _110108)). Qed.
Lemma lem8262286 {A B P : Type'} (p : type560 A B P) (z' : type518 A B P) (_110107 : A -> B) (P' : type560 A B P) (_110106 : A -> B) (_110108 : P) : (term850 A B P p z' _110106 P' _110107 _110108) = (term864 A B P p z' _110107 P' _110106 _110108).
Proof. exact (TRANS (@lem8262248 A B P p z' _110107 P' _110106 _110108) (@lem8262285 A B P p z' _110107 P' _110106 _110108)). Qed.
Lemma lem8262288 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term859 A B P z' f P' g a.
Proof. exact (conj (@lem8261918 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8261925 A B P f p P' g a h5)). Qed.
Lemma lem8262289 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term860 A B P p z' f P' g a.
Proof. exact (conj (@lem8261482 A B P f p P' g a h5) (@lem8262288 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8262290 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term861 A B P p z' f P' g a.
Proof. exact (conj (@lem8261475 A B P lt2 s z f p P' g a h1 h2 h5) (@lem8262289 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8262292 {A B P : Type'} (_110107 : A -> B) (_110106 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term864 A B P p z' _110107 P' _110106 _110108.
Proof. exact (EQ_MP (@lem8262286 A B P p z' _110107 P' _110106 _110108) (@lem8262245 A B P _110106 _110107 _110108 p lt2 s z' P' h1)). Qed.
Lemma lem8262293 {A B P : Type'} (_110107 : A -> B) (_110106 : A -> B) (_110108 : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term864 A B P p z' _110107 P' _110106 _110108.
Proof. exact (@lem8262292 A B P _110107 _110106 _110108 p lt2 s z' P' h1). Qed.
Lemma lem8262294 {A B P : Type'} (g : A -> B) (f : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (P' : type560 A B P) (h1 : term489 A B P p lt2 s z' P') : term864 A B P p z' g P' f a.
Proof. exact (@lem8262293 A B P g f a p lt2 s z' P' h1). Qed.
Lemma lem8262297 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term614 A B P P' f a.
Proof. exact (@lem8262294 A B P g f a p lt2 s z' P' h3 (@lem8262290 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8262298 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term980 A B P f p P' g a) : term757 A B P P' f a.
Proof. exact (fun h0 : term615 A B P P' f a => @lem8262297 A B P z lt2 s z' f p P' g a h1 h2 h3 h0 h4). Qed.
Lemma lem8262300 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8262301 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8262300 (term614 A B P P' f a)). Qed.
Lemma lem8262302 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term980 A B P f p P' g a) : term614 A B P P' f a.
Proof. exact (EQ_MP (@lem8262301 A B P P' f a) (@lem8262298 A B P z lt2 s z' f p P' g a h1 h2 h3 h4)). Qed.
Lemma lem8262305 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8262307 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term615 A B P P' f a) = (term801 A B P P' f a).
Proof. exact (@lem8262305 (term614 A B P P' f a)). Qed.
Lemma lem8262310 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : term615 A B P P' f a) : term801 A B P P' f a.
Proof. exact (EQ_MP (@lem8262307 A B P P' f a) (@lem8258991 A B P P' f a h1)). Qed.
Lemma lem8262313 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : False.
Proof. exact (@lem8262310 A B P P' f a h4 (@lem8262302 A B P z lt2 s z' f p P' g a h1 h2 h3 h5)). Qed.
Lemma lem8262314 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8262313 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5). Qed.
Lemma lem8262316 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8262317 : term802 = False.
Proof. exact (@lem8262316 False). Qed.
Lemma lem8262318 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262317) (@lem8262314 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5)). Qed.
Lemma lem8262319 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : (term615 A B P P' f a) = False.
Proof. exact (prop_ext (fun h6 : term615 A B P P' f a => @lem8262318 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8258991 A B P P' f a h4)). Qed.
Lemma lem8262320 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262319 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8258991 A B P P' f a h4)). Qed.
Lemma lem8262321 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term615 A B P p f a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p f a => @lem8261127 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8258851 A B P p f a h3)). Qed.
Lemma lem8262322 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262321 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8258851 A B P p f a h3)). Qed.
Lemma lem8262323 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : (term615 A B P P' g a) = False.
Proof. exact (prop_ext (fun h6 : term615 A B P P' g a => @lem8260763 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8258711 A B P P' g a h4)). Qed.
Lemma lem8262324 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262323 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8258711 A B P P' g a h4)). Qed.
Lemma lem8262325 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term615 A B P p g a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p g a => @lem8259510 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8258571 A B P p g a h3)). Qed.
Lemma lem8262326 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262325 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8258571 A B P p g a h3)). Qed.
Lemma lem8262327 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : (term615 A B P P' f a) = False.
Proof. exact (prop_ext (fun h6 : term615 A B P P' f a => @lem8262320 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8258427 A B P P' f a h4)). Qed.
Lemma lem8262328 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262327 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8258427 A B P P' f a h4)). Qed.
Lemma lem8262329 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term615 A B P p f a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p f a => @lem8262322 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8258264 A B P p f a h3)). Qed.
Lemma lem8262330 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262329 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8258264 A B P p f a h3)). Qed.
Lemma lem8262331 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : (term615 A B P P' g a) = False.
Proof. exact (prop_ext (fun h6 : term615 A B P P' g a => @lem8262324 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8258101 A B P P' g a h4)). Qed.
Lemma lem8262332 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262331 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8258101 A B P P' g a h4)). Qed.
Lemma lem8262333 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term615 A B P p g a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p g a => @lem8262326 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8257938 A B P p g a h3)). Qed.
Lemma lem8262334 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262333 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8257938 A B P p g a h3)). Qed.
Lemma lem8262335 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : (term615 A B P P' f a) = False.
Proof. exact (prop_ext (fun h6 : term615 A B P P' f a => @lem8262328 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8258427 A B P P' f a h4)). Qed.
Lemma lem8262336 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' f a) (h5 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262335 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8258427 A B P P' f a h4)). Qed.
Lemma lem8262337 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : (term615 A B P p f a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p f a => @lem8262330 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8258264 A B P p f a h3)). Qed.
Lemma lem8262338 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p f a) (h4 : term980 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262337 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8258264 A B P p f a h3)). Qed.
Lemma lem8262339 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : (term615 A B P P' g a) = False.
Proof. exact (prop_ext (fun h6 : term615 A B P P' g a => @lem8262332 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (fun h6 : False => @lem8258101 A B P P' g a h4)). Qed.
Lemma lem8262340 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term615 A B P P' g a) (h5 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262339 A B P z lt2 s z' f p P' g a h1 h2 h3 h4 h5) (@lem8258101 A B P P' g a h4)). Qed.
Lemma lem8262341 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : (term615 A B P p g a) = False.
Proof. exact (prop_ext (fun h5 : term615 A B P p g a => @lem8262334 A B P lt2 s z f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8257938 A B P p g a h3)). Qed.
Lemma lem8262342 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term615 A B P p g a) (h4 : term982 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262341 A B P lt2 s z f p P' g a h1 h2 h3 h4) (@lem8257938 A B P p g a h3)). Qed.
Lemma lem8262343 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term980 A B P f p P' g a) : False.
Proof. exact (or_elim (@lem8257771 A B P f p P' g a h4) (fun h0 : term615 A B P p f a => @lem8262338 A B P lt2 s z f p P' g a h1 h2 h0 h4) (fun h0 : term615 A B P P' f a => @lem8262336 A B P z lt2 s z' f p P' g a h1 h2 h3 h0 h4)). Qed.
Lemma lem8262344 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term982 A B P f p P' g a) : False.
Proof. exact (or_elim (@lem8257764 A B P f p P' g a h4) (fun h0 : term615 A B P p g a => @lem8262342 A B P lt2 s z f p P' g a h1 h2 h0 h4) (fun h0 : term615 A B P P' g a => @lem8262340 A B P z lt2 s z' f p P' g a h1 h2 h3 h0 h4)). Qed.
Lemma lem8262345 {A B P : Type'} (z : type518 A B P) (lt2 : type1402 A) (s : P -> A) (z' : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term580 A B P lt2 s z p) (h3 : term489 A B P p lt2 s z' P') (h4 : term964 A B P f p P' g a) : False.
Proof. exact (or_elim (@lem8257283 A B P f p P' g a h4) (fun h0 : term982 A B P f p P' g a => @lem8262344 A B P z lt2 s z' f p P' g a h1 h2 h3 h0) (fun h0 : term980 A B P f p P' g a => @lem8262343 A B P z lt2 s z' f p P' g a h1 h2 h3 h0)). Qed.
Lemma lem8262346 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term137 A B P p lt2 s P') (h3 : term580 A B P lt2 s z p) (h4 : term964 A B P f p P' g a) : False.
Proof. exact (ex_elim (@lem8256680 A B P p lt2 s P' h2) (fun z' : type518 A B P => fun h0 : term491 A B P p lt2 s P' z' => @lem8262345 A B P z lt2 s z' f p P' g a h1 h3 h0 h4)). Qed.
Lemma lem8262347 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') (h4 : term964 A B P f p P' g a) : False.
Proof. exact (ex_elim (@lem8256960 A B P lt2 s p h2) (fun z : type518 A B P => fun h0 : term582 A B P lt2 s p z => @lem8262346 A B P lt2 s z f p P' g a h1 h3 h0 h4)). Qed.
Lemma lem8262348 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') (h4 : term964 A B P f p P' g a) : (term964 A B P f p P' g a) = False.
Proof. exact (prop_ext (fun h5 : term964 A B P f p P' g a => @lem8262347 A B P lt2 s f p P' g a h1 h2 h3 h4) (fun h5 : False => @lem8256340 A B P f p P' g a h4)). Qed.
Lemma lem8262349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') (h4 : term964 A B P f p P' g a) : False.
Proof. exact (EQ_MP (@lem8262348 A B P lt2 s f p P' g a h1 h2 h3 h4) (@lem8256340 A B P f p P' g a h4)). Qed.
Lemma lem8262350 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') : term963 A B P f p P' g a.
Proof. exact (fun h0 : term964 A B P f p P' g a => @lem8262349 A B P lt2 s f p P' g a h1 h2 h3 h0). Qed.
Lemma lem8262351 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term162 A B P lt2 s a f g) (h2 : term262 A B P lt2 s p) (h3 : term137 A B P p lt2 s P') : (term177 A B P p P' f a) = (term177 A B P p P' g a).
Proof. exact (EQ_MP (@lem8256339 A B P f p P' g a) (@lem8262350 A B P a f g p lt2 s P' h1 h2 h3)). Qed.
Lemma lem8262352 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term184 A B P lt2 s f p P' g a.
Proof. exact (fun h0 : term162 A B P lt2 s a f g => @lem8262351 A B P a f g p lt2 s P' h0 h1 h2). Qed.
Lemma lem8262357 {A B P : Type'} (f : A -> B) (g : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term188 A B P lt2 s f p P' g.
Proof. exact (fun a : P => @lem8262352 A B P f g a p lt2 s P' h1 h2). Qed.
Lemma lem8262362 {A B P : Type'} (f : A -> B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term192 A B P lt2 s f p P'.
Proof. exact (fun g : A -> B => @lem8262357 A B P f g p lt2 s P' h1 h2). Qed.
Lemma lem8262367 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term195 A B P lt2 s p P'.
Proof. exact (fun f : A -> B => @lem8262362 A B P f p lt2 s P' h1 h2). Qed.
Lemma lem8262368 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term945 A B P lt2 s p P'.
Proof. exact (fun h0 : term262 A B P lt2 s p => @lem8262367 A B P p lt2 s P' h0 h1). Qed.
Lemma lem8262369 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term946 A B P lt2 s p P'.
Proof. exact (fun h0 : term137 A B P p lt2 s P' => @lem8262368 A B P p lt2 s P' h0). Qed.
Lemma lem8262374 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term950 A B P s p P'.
Proof. exact (fun lt2 : type1402 A => @lem8262369 A B P lt2 s p P'). Qed.
Lemma lem8262379 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : term954 A B P p P'.
Proof. exact (fun s : P -> A => @lem8262374 A B P s p P'). Qed.
Lemma lem8262384 {A B P : Type'} (P' : type560 A B P) : term958 A B P P'.
Proof. exact (fun p : type560 A B P => @lem8262379 A B P p P'). Qed.
Lemma lem8262389 {A B P : Type'} : term962 A B P.
Proof. exact (fun P' : type560 A B P => @lem8262384 A B P P'). Qed.
Lemma lem8262390 {A B P : Type'} : term961 A B P.
Proof. exact (EQ_MP (@lem8256332 A B P) (@lem8262389 A B P)). Qed.
Lemma lem8262391 {A B P : Type'} (P' : type560 A B P) : term985 A B P P'.
Proof. exact (@lem8262390 A B P P'). Qed.
Lemma lem8262392 {A B P : Type'} (P' : type560 A B P) : (term985 A B P P') = (term957 A B P P').
Proof. exact (eq_refl (term985 A B P P')). Qed.
Lemma lem8262393 {A B P : Type'} (P' : type560 A B P) : term957 A B P P'.
Proof. exact (EQ_MP (@lem8262392 A B P P') (@lem8262391 A B P P')). Qed.
Lemma lem8262394 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) : term986 A B P P' p.
Proof. exact (@lem8262393 A B P P' p). Qed.
Lemma lem8262395 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term986 A B P P' p) = (term953 A B P p P').
Proof. exact (eq_refl (term986 A B P P' p)). Qed.
Lemma lem8262396 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : term953 A B P p P'.
Proof. exact (EQ_MP (@lem8262395 A B P p P') (@lem8262394 A B P P' p)). Qed.
Lemma lem8262397 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (s : P -> A) : term987 A B P p P' s.
Proof. exact (@lem8262396 A B P p P' s). Qed.
Lemma lem8262398 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term987 A B P p P' s) = (term949 A B P s p P').
Proof. exact (eq_refl (term987 A B P p P' s)). Qed.
Lemma lem8262399 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term949 A B P s p P'.
Proof. exact (EQ_MP (@lem8262398 A B P s p P') (@lem8262397 A B P p P' s)). Qed.
Lemma lem8262400 {A B P : Type'} (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) : term988 A B P s p P' lt2.
Proof. exact (@lem8262399 A B P s p P' lt2). Qed.
Lemma lem8262401 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : (term988 A B P s p P' lt2) = (term939 A B P lt2 s p P').
Proof. exact (eq_refl (term988 A B P s p P' lt2)). Qed.
Lemma lem8262402 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term939 A B P lt2 s p P'.
Proof. exact (EQ_MP (@lem8262401 A B P lt2 s p P') (@lem8262400 A B P s p P' lt2)). Qed.
Lemma lem8262404 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) : term939 A B P lt2 s p P'.
Proof. exact (@lem8255964 A B P lt2 s p P' (@lem8262402 A B P lt2 s p P')). Qed.
Lemma lem8262405 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term944 A B P lt2 s p P'.
Proof. exact (@lem8262404 A B P lt2 s p P' (@lem8249446 A B P p lt2 s P' h1)). Qed.
Lemma lem8262406 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term937 A B P lt2 s p P'.
Proof. exact (@lem8262405 A B P p lt2 s P' h2 (@lem8249448 A B P lt2 s p h1)). Qed.
Lemma lem8262407 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term938 A B P lt2 s p P') : False.
Proof. exact (@lem8262406 A B P p lt2 s P' h1 h2 (@lem8255948 A B P lt2 s p P' h3)). Qed.
Lemma lem8262408 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term938 A B P lt2 s p P') : (term938 A B P lt2 s p P') = False.
Proof. exact (prop_ext (fun h4 : term938 A B P lt2 s p P' => @lem8262407 A B P lt2 s p P' h1 h2 h3) (fun h4 : False => @lem8255948 A B P lt2 s p P' h3)). Qed.
Lemma lem8262409 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term938 A B P lt2 s p P') : False.
Proof. exact (EQ_MP (@lem8262408 A B P lt2 s p P' h1 h2 h3) (@lem8255948 A B P lt2 s p P' h3)). Qed.
Lemma lem8262410 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term937 A B P lt2 s p P'.
Proof. exact (fun h0 : term938 A B P lt2 s p P' => @lem8262409 A B P lt2 s p P' h1 h2 h0). Qed.
Lemma lem8262411 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term195 A B P lt2 s p P'.
Proof. exact (EQ_MP (@lem8255947 A B P lt2 s p P') (@lem8262410 A B P p lt2 s P' h1 h2)). Qed.
Lemma lem8262415 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t).
Proof. exact (EQ_MP (@lem8248658 A B P lt2 s p t) (@lem8248657 A B P lt2 s p t)). Qed.
Lemma lem8262416 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t).
Proof. exact (@lem8262415 A B P lt2 s p t). Qed.
Lemma lem8262417 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term237 A B P lt2 p P' s k) = (term989 A B P lt2 s p P' k).
Proof. exact (@lem8262416 A B P lt2 s (term204 A B P p P') k). Qed.
Lemma lem8262493 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8262494 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8262493 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8262495 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term207 A B P p P' f) = (term208 A B P p P' f).
Proof. exact (@lem8262494 A B P (term204 A B P p P') f). Qed.
Lemma lem8262496 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (eq_refl (term208 A B P p P' f)). Qed.
Lemma lem8262497 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term210 A B P p P') = (term204 A B P p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8262496 A B P p P' f)). Qed.
Lemma lem8262498 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8262499 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term207 A B P p P' f) = (term208 A B P p P' f).
Proof. exact (MK_COMB (@lem8262497 A B P p P') (@lem8262498 A B f)). Qed.
Lemma lem8262500 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8262501 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term211 A B P p P' f) = (term212 A B P p P' f).
Proof. exact (MK_COMB (@lem8262500 P) (@lem8262499 A B P p P' f)). Qed.
Lemma lem8262502 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (eq_refl (term208 A B P p P' f)). Qed.
Lemma lem8262503 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : ((term207 A B P p P' f) = (term208 A B P p P' f)) = ((term208 A B P p P' f) = (term209 A B P p P' f)).
Proof. exact (MK_COMB (@lem8262501 A B P p P' f) (@lem8262502 A B P p P' f)). Qed.
Lemma lem8262504 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term208 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (EQ_MP (@lem8262503 A B P p P' f) (@lem8262495 A B P p P' f)). Qed.
Lemma lem8262507 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8262508 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term213 A B P p P' f a) = (term214 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262504 A B P p P' f) (@lem8262507 P a)). Qed.
Lemma lem8262510 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8262511 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8262510 P Prop f y). Qed.
Lemma lem8262512 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term215 A B P p P' f a) = (term214 A B P p P' f a).
Proof. exact (@lem8262511 P (term209 A B P p P' f) a). Qed.
Lemma lem8262513 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (x : P) : (term214 A B P p P' f x) = (term216 A B P p P' f x).
Proof. exact (eq_refl (term214 A B P p P' f x)). Qed.
Lemma lem8262514 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term217 A B P p P' f) = (term209 A B P p P' f).
Proof. exact (fun_ext (fun x : P => @lem8262513 A B P p P' f x)). Qed.
Lemma lem8262515 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8262516 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term215 A B P p P' f a) = (term214 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262514 A B P p P' f) (@lem8262515 P a)). Qed.
Lemma lem8262517 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8262518 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term218 A B P p P' f a) = (term219 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262517) (@lem8262516 A B P p P' f a)). Qed.
Lemma lem8262519 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term214 A B P p P' f a) = (term216 A B P p P' f a).
Proof. exact (eq_refl (term214 A B P p P' f a)). Qed.
Lemma lem8262520 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : ((term215 A B P p P' f a) = (term214 A B P p P' f a)) = ((term214 A B P p P' f a) = (term216 A B P p P' f a)).
Proof. exact (MK_COMB (@lem8262518 A B P p P' f a) (@lem8262519 A B P p P' f a)). Qed.
Lemma lem8262521 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term214 A B P p P' f a) = (term216 A B P p P' f a).
Proof. exact (EQ_MP (@lem8262520 A B P p P' f a) (@lem8262512 A B P p P' f a)). Qed.
Lemma lem8262524 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term213 A B P p P' f a) = (term216 A B P p P' f a).
Proof. exact (TRANS (@lem8262508 A B P p P' f a) (@lem8262521 A B P p P' f a)). Qed.
Lemma lem8262525 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262526 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term990 A B P p P' f a) = (term991 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262525) (@lem8262524 A B P p P' f a)). Qed.
Lemma lem8262529 {A B P : Type'} (k : type558 A B P) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : ((k f a) = (term992 A B P P' G H f a)) = ((k f a) = (term992 A B P P' G H f a)).
Proof. exact (eq_refl ((k f a) = (term992 A B P P' G H f a))). Qed.
Lemma lem8262530 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term993 A B P p P' k P'' G H f a) = (term994 A B P p P' k P'' G H f a).
Proof. exact (MK_COMB (@lem8262526 A B P p P' f a) (@lem8262529 A B P k P'' G H f a)). Qed.
Lemma lem8262533 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term995 A B P p P' k P'' G H f) = (term996 A B P p P' k P'' G H f).
Proof. exact (fun_ext (fun a : P => @lem8262530 A B P p P' k P'' G H f a)). Qed.
Lemma lem8262534 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8262535 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term997 A B P p P' k P'' G H f) = (term998 A B P p P' k P'' G H f).
Proof. exact (MK_COMB (@lem8262534 P) (@lem8262533 A B P p P' k P'' G H f)). Qed.
Lemma lem8262540 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term999 A B P p P' k P'' G H) = (term1000 A B P p P' k P'' G H).
Proof. exact (fun_ext (fun f : A -> B => @lem8262535 A B P p P' k P'' G H f)). Qed.
Lemma lem8262541 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8262542 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1001 A B P p P' k P'' G H) = (term1002 A B P p P' k P'' G H).
Proof. exact (MK_COMB (@lem8262541 A B) (@lem8262540 A B P p P' k P'' G H)). Qed.
Lemma lem8262547 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1003 A B P lt2 s P' G H) = (term1003 A B P lt2 s P' G H).
Proof. exact (eq_refl (term1003 A B P lt2 s P' G H)). Qed.
Lemma lem8262548 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1004 A B P lt2 s p P' k P'' G H) = (term1005 A B P lt2 s p P' k P'' G H).
Proof. exact (MK_COMB (@lem8262547 A B P lt2 s P'' G H) (@lem8262542 A B P p P' k P'' G H)). Qed.
Lemma lem8262551 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1006 A B P P' G lt2 s) = (term1006 A B P P' G lt2 s).
Proof. exact (eq_refl (term1006 A B P P' G lt2 s)). Qed.
Lemma lem8262552 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1007 A B P lt2 s p P' k P'' G H) = (term1008 A B P lt2 s p P' k P'' G H).
Proof. exact (MK_COMB (@lem8262551 A B P P'' G lt2 s) (@lem8262548 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8262555 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1009 A B P lt2 s p P' k P'' G) = (term1010 A B P lt2 s p P' k P'' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8262552 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8262556 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8262557 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1011 A B P lt2 s p P' k P'' G) = (term1012 A B P lt2 s p P' k P'' G).
Proof. exact (MK_COMB (@lem8262556 A B P) (@lem8262555 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262562 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1013 A B P lt2 s p P' k P'') = (term1014 A B P lt2 s p P' k P'').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8262557 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262563 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8262564 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1015 A B P lt2 s p P' k P'') = (term1016 A B P lt2 s p P' k P'').
Proof. exact (MK_COMB (@lem8262563 A B P) (@lem8262562 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262569 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term1017 A B P lt2 s p P' k) = (term1018 A B P lt2 s p P' k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8262564 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262570 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8262571 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term989 A B P lt2 s p P' k) = (term1019 A B P lt2 s p P' k).
Proof. exact (MK_COMB (@lem8262570 A B P) (@lem8262569 A B P lt2 s p P' k)). Qed.
Lemma lem8262576 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term237 A B P lt2 p P' s k) = (term1019 A B P lt2 s p P' k).
Proof. exact (TRANS (@lem8262417 A B P lt2 s p P' k) (@lem8262571 A B P lt2 s p P' k)). Qed.
Lemma lem8262577 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262578 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term1020 A B P lt2 p P' s k) = (term1021 A B P lt2 s p P' k).
Proof. exact (MK_COMB (@lem8262577) (@lem8262576 A B P lt2 s p P' k)). Qed.
Lemma lem8262582 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t).
Proof. exact (EQ_MP (@lem8248658 A B P lt2 s p t) (@lem8248657 A B P lt2 s p t)). Qed.
Lemma lem8262583 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t).
Proof. exact (@lem8262582 A B P lt2 s p t). Qed.
Lemma lem8262584 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term198 A B P lt2 p P' s h) = (term1022 A B P lt2 s p P' h).
Proof. exact (@lem8262583 A B P lt2 s (term142 A B P p P') h). Qed.
Lemma lem8262660 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8262661 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8262660 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8262662 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term168 A B P p P' f) = (term169 A B P p P' f).
Proof. exact (@lem8262661 A B P (term142 A B P p P') f). Qed.
Lemma lem8262663 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (eq_refl (term169 A B P p P' f)). Qed.
Lemma lem8262664 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) : (term171 A B P p P') = (term142 A B P p P').
Proof. exact (fun_ext (fun f : A -> B => @lem8262663 A B P p P' f)). Qed.
Lemma lem8262665 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8262666 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term168 A B P p P' f) = (term169 A B P p P' f).
Proof. exact (MK_COMB (@lem8262664 A B P p P') (@lem8262665 A B f)). Qed.
Lemma lem8262667 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8262668 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term172 A B P p P' f) = (term173 A B P p P' f).
Proof. exact (MK_COMB (@lem8262667 P) (@lem8262666 A B P p P' f)). Qed.
Lemma lem8262669 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (eq_refl (term169 A B P p P' f)). Qed.
Lemma lem8262670 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : ((term168 A B P p P' f) = (term169 A B P p P' f)) = ((term169 A B P p P' f) = (term170 A B P p P' f)).
Proof. exact (MK_COMB (@lem8262668 A B P p P' f) (@lem8262669 A B P p P' f)). Qed.
Lemma lem8262671 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term169 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (EQ_MP (@lem8262670 A B P p P' f) (@lem8262662 A B P p P' f)). Qed.
Lemma lem8262674 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8262675 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term174 A B P p P' f a) = (term175 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262671 A B P p P' f) (@lem8262674 P a)). Qed.
Lemma lem8262677 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8262678 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8262677 P Prop f y). Qed.
Lemma lem8262679 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term176 A B P p P' f a) = (term175 A B P p P' f a).
Proof. exact (@lem8262678 P (term170 A B P p P' f) a). Qed.
Lemma lem8262680 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (x : P) : (term175 A B P p P' f x) = (term177 A B P p P' f x).
Proof. exact (eq_refl (term175 A B P p P' f x)). Qed.
Lemma lem8262681 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) : (term178 A B P p P' f) = (term170 A B P p P' f).
Proof. exact (fun_ext (fun x : P => @lem8262680 A B P p P' f x)). Qed.
Lemma lem8262682 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8262683 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term176 A B P p P' f a) = (term175 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262681 A B P p P' f) (@lem8262682 P a)). Qed.
Lemma lem8262684 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8262685 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term179 A B P p P' f a) = (term180 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262684) (@lem8262683 A B P p P' f a)). Qed.
Lemma lem8262686 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term175 A B P p P' f a) = (term177 A B P p P' f a).
Proof. exact (eq_refl (term175 A B P p P' f a)). Qed.
Lemma lem8262687 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : ((term176 A B P p P' f a) = (term175 A B P p P' f a)) = ((term175 A B P p P' f a) = (term177 A B P p P' f a)).
Proof. exact (MK_COMB (@lem8262685 A B P p P' f a) (@lem8262686 A B P p P' f a)). Qed.
Lemma lem8262688 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term175 A B P p P' f a) = (term177 A B P p P' f a).
Proof. exact (EQ_MP (@lem8262687 A B P p P' f a) (@lem8262679 A B P p P' f a)). Qed.
Lemma lem8262691 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term174 A B P p P' f a) = (term177 A B P p P' f a).
Proof. exact (TRANS (@lem8262675 A B P p P' f a) (@lem8262688 A B P p P' f a)). Qed.
Lemma lem8262692 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262693 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term1023 A B P p P' f a) = (term1024 A B P p P' f a).
Proof. exact (MK_COMB (@lem8262692) (@lem8262691 A B P p P' f a)). Qed.
Lemma lem8262696 {A B P : Type'} (h : type558 A B P) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : ((h f a) = (term992 A B P P' G H f a)) = ((h f a) = (term992 A B P P' G H f a)).
Proof. exact (eq_refl ((h f a) = (term992 A B P P' G H f a))). Qed.
Lemma lem8262697 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term1025 A B P p P' h P'' G H f a) = (term1026 A B P p P' h P'' G H f a).
Proof. exact (MK_COMB (@lem8262693 A B P p P' f a) (@lem8262696 A B P h P'' G H f a)). Qed.
Lemma lem8262700 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term1027 A B P p P' h P'' G H f) = (term1028 A B P p P' h P'' G H f).
Proof. exact (fun_ext (fun a : P => @lem8262697 A B P p P' h P'' G H f a)). Qed.
Lemma lem8262701 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8262702 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term1029 A B P p P' h P'' G H f) = (term1030 A B P p P' h P'' G H f).
Proof. exact (MK_COMB (@lem8262701 P) (@lem8262700 A B P p P' h P'' G H f)). Qed.
Lemma lem8262707 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1031 A B P p P' h P'' G H) = (term1032 A B P p P' h P'' G H).
Proof. exact (fun_ext (fun f : A -> B => @lem8262702 A B P p P' h P'' G H f)). Qed.
Lemma lem8262708 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8262709 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1033 A B P p P' h P'' G H) = (term1034 A B P p P' h P'' G H).
Proof. exact (MK_COMB (@lem8262708 A B) (@lem8262707 A B P p P' h P'' G H)). Qed.
Lemma lem8262714 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1003 A B P lt2 s P' G H) = (term1003 A B P lt2 s P' G H).
Proof. exact (eq_refl (term1003 A B P lt2 s P' G H)). Qed.
Lemma lem8262715 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1035 A B P lt2 s p P' h P'' G H) = (term1036 A B P lt2 s p P' h P'' G H).
Proof. exact (MK_COMB (@lem8262714 A B P lt2 s P'' G H) (@lem8262709 A B P p P' h P'' G H)). Qed.
Lemma lem8262718 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1006 A B P P' G lt2 s) = (term1006 A B P P' G lt2 s).
Proof. exact (eq_refl (term1006 A B P P' G lt2 s)). Qed.
Lemma lem8262719 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1037 A B P lt2 s p P' h P'' G H) = (term1038 A B P lt2 s p P' h P'' G H).
Proof. exact (MK_COMB (@lem8262718 A B P P'' G lt2 s) (@lem8262715 A B P lt2 s p P' h P'' G H)). Qed.
Lemma lem8262722 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1039 A B P lt2 s p P' h P'' G) = (term1040 A B P lt2 s p P' h P'' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8262719 A B P lt2 s p P' h P'' G H)). Qed.
Lemma lem8262723 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8262724 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1041 A B P lt2 s p P' h P'' G) = (term1042 A B P lt2 s p P' h P'' G).
Proof. exact (MK_COMB (@lem8262723 A B P) (@lem8262722 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8262729 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1043 A B P lt2 s p P' h P'') = (term1044 A B P lt2 s p P' h P'').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8262724 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8262730 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8262731 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1045 A B P lt2 s p P' h P'') = (term1046 A B P lt2 s p P' h P'').
Proof. exact (MK_COMB (@lem8262730 A B P) (@lem8262729 A B P lt2 s p P' h P'')). Qed.
Lemma lem8262736 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term1047 A B P lt2 s p P' h) = (term1048 A B P lt2 s p P' h).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8262731 A B P lt2 s p P' h P'')). Qed.
Lemma lem8262737 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8262738 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term1022 A B P lt2 s p P' h) = (term1049 A B P lt2 s p P' h).
Proof. exact (MK_COMB (@lem8262737 A B P) (@lem8262736 A B P lt2 s p P' h)). Qed.
Lemma lem8262743 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term198 A B P lt2 p P' s h) = (term1049 A B P lt2 s p P' h).
Proof. exact (TRANS (@lem8262584 A B P lt2 s p P' h) (@lem8262738 A B P lt2 s p P' h)). Qed.
Lemma lem8262744 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262745 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term1050 A B P lt2 p P' s h) = (term1051 A B P lt2 s p P' h).
Proof. exact (MK_COMB (@lem8262744) (@lem8262743 A B P lt2 s p P' h)). Qed.
Lemma lem8262747 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t).
Proof. exact (EQ_MP (@lem8248658 A B P lt2 s p t) (@lem8248657 A B P lt2 s p t)). Qed.
Lemma lem8262748 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (t : type558 A B P) : (@tailadmissible A B P lt2 p s t) = (term120 A B P lt2 s p t).
Proof. exact (@lem8262747 A B P lt2 s p t). Qed.
Lemma lem8262749 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term265 A B P lt2 p s P' h k) = (term1052 A B P lt2 s p P' h k).
Proof. exact (@lem8262748 A B P lt2 s p (term247 A B P P' h k)). Qed.
Lemma lem8262827 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8262828 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term1053 A B P f y) = (f y).
Proof. exact (@lem8262827 (A -> B) (P -> B) f y). Qed.
Lemma lem8262829 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1054 A B P P' h k f) = (term1055 A B P P' h k f).
Proof. exact (@lem8262828 A B P (term247 A B P P' h k) f). Qed.
Lemma lem8262830 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1055 A B P P' h k f) = (term1056 A B P P' h k f).
Proof. exact (eq_refl (term1055 A B P P' h k f)). Qed.
Lemma lem8262831 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1057 A B P P' h k) = (term247 A B P P' h k).
Proof. exact (fun_ext (fun f : A -> B => @lem8262830 A B P P' h k f)). Qed.
Lemma lem8262832 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8262833 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1054 A B P P' h k f) = (term1055 A B P P' h k f).
Proof. exact (MK_COMB (@lem8262831 A B P P' h k) (@lem8262832 A B f)). Qed.
Lemma lem8262834 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8262835 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1058 A B P P' h k f) = (term1059 A B P P' h k f).
Proof. exact (MK_COMB (@lem8262834 B P) (@lem8262833 A B P P' h k f)). Qed.
Lemma lem8262836 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1055 A B P P' h k f) = (term1056 A B P P' h k f).
Proof. exact (eq_refl (term1055 A B P P' h k f)). Qed.
Lemma lem8262837 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : ((term1054 A B P P' h k f) = (term1055 A B P P' h k f)) = ((term1055 A B P P' h k f) = (term1056 A B P P' h k f)).
Proof. exact (MK_COMB (@lem8262835 A B P P' h k f) (@lem8262836 A B P P' h k f)). Qed.
Lemma lem8262838 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1055 A B P P' h k f) = (term1056 A B P P' h k f).
Proof. exact (EQ_MP (@lem8262837 A B P P' h k f) (@lem8262829 A B P P' h k f)). Qed.
Lemma lem8262839 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8262840 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1060 A B P P' h k f a) = (term1061 A B P P' h k f a).
Proof. exact (MK_COMB (@lem8262838 A B P P' h k f) (@lem8262839 P a)). Qed.
Lemma lem8262842 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8262843 {B P : Type'} (f : P -> B) (y : P) : (term1062 B P f y) = (f y).
Proof. exact (@lem8262842 P B f y). Qed.
Lemma lem8262844 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1063 A B P P' h k f a) = (term1061 A B P P' h k f a).
Proof. exact (@lem8262843 B P (term1056 A B P P' h k f) a). Qed.
Lemma lem8262845 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (x : P) : (term1061 A B P P' h k f x) = (term1064 A B P P' h k f x).
Proof. exact (eq_refl (term1061 A B P P' h k f x)). Qed.
Lemma lem8262846 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) : (term1065 A B P P' h k f) = (term1056 A B P P' h k f).
Proof. exact (fun_ext (fun x : P => @lem8262845 A B P P' h k f x)). Qed.
Lemma lem8262847 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8262848 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1063 A B P P' h k f a) = (term1061 A B P P' h k f a).
Proof. exact (MK_COMB (@lem8262846 A B P P' h k f) (@lem8262847 P a)). Qed.
Lemma lem8262849 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8262850 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1066 A B P P' h k f a) = (term1067 A B P P' h k f a).
Proof. exact (MK_COMB (@lem8262849 B) (@lem8262848 A B P P' h k f a)). Qed.
Lemma lem8262851 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1061 A B P P' h k f a) = (term1064 A B P P' h k f a).
Proof. exact (eq_refl (term1061 A B P P' h k f a)). Qed.
Lemma lem8262852 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : ((term1063 A B P P' h k f a) = (term1061 A B P P' h k f a)) = ((term1061 A B P P' h k f a) = (term1064 A B P P' h k f a)).
Proof. exact (MK_COMB (@lem8262850 A B P P' h k f a) (@lem8262851 A B P P' h k f a)). Qed.
Lemma lem8262853 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1061 A B P P' h k f a) = (term1064 A B P P' h k f a).
Proof. exact (EQ_MP (@lem8262852 A B P P' h k f a) (@lem8262844 A B P P' h k f a)). Qed.
Lemma lem8262854 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1060 A B P P' h k f a) = (term1064 A B P P' h k f a).
Proof. exact (TRANS (@lem8262840 A B P P' h k f a) (@lem8262853 A B P P' h k f a)). Qed.
Lemma lem8262855 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8262856 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1068 A B P P' h k f a) = (term1069 A B P P' h k f a).
Proof. exact (MK_COMB (@lem8262855 B) (@lem8262854 A B P P' h k f a)). Qed.
Lemma lem8262857 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term992 A B P P' G H f a) = (term992 A B P P' G H f a).
Proof. exact (eq_refl (term992 A B P P' G H f a)). Qed.
Lemma lem8262858 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : ((term1060 A B P P' h k f a) = (term992 A B P P'' G H f a)) = ((term1064 A B P P' h k f a) = (term992 A B P P'' G H f a)).
Proof. exact (MK_COMB (@lem8262856 A B P P' h k f a) (@lem8262857 A B P P'' G H f a)). Qed.
Lemma lem8262861 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1070 A B P p f a) = (term1070 A B P p f a).
Proof. exact (eq_refl (term1070 A B P p f a)). Qed.
Lemma lem8262862 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) (a : P) : (term1071 A B P p P' h k P'' G H f a) = (term1072 A B P p P' h k P'' G H f a).
Proof. exact (MK_COMB (@lem8262861 A B P p f a) (@lem8262858 A B P P' h k P'' G H f a)). Qed.
Lemma lem8262865 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term1073 A B P p P' h k P'' G H f) = (term1074 A B P p P' h k P'' G H f).
Proof. exact (fun_ext (fun a : P => @lem8262862 A B P p P' h k P'' G H f a)). Qed.
Lemma lem8262866 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8262867 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (f : A -> B) : (term1075 A B P p P' h k P'' G H f) = (term1076 A B P p P' h k P'' G H f).
Proof. exact (MK_COMB (@lem8262866 P) (@lem8262865 A B P p P' h k P'' G H f)). Qed.
Lemma lem8262872 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1077 A B P p P' h k P'' G H) = (term1078 A B P p P' h k P'' G H).
Proof. exact (fun_ext (fun f : A -> B => @lem8262867 A B P p P' h k P'' G H f)). Qed.
Lemma lem8262873 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8262874 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1079 A B P p P' h k P'' G H) = (term1080 A B P p P' h k P'' G H).
Proof. exact (MK_COMB (@lem8262873 A B) (@lem8262872 A B P p P' h k P'' G H)). Qed.
Lemma lem8262879 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1003 A B P lt2 s P' G H) = (term1003 A B P lt2 s P' G H).
Proof. exact (eq_refl (term1003 A B P lt2 s P' G H)). Qed.
Lemma lem8262880 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1081 A B P lt2 s p P' h k P'' G H) = (term1082 A B P lt2 s p P' h k P'' G H).
Proof. exact (MK_COMB (@lem8262879 A B P lt2 s P'' G H) (@lem8262874 A B P p P' h k P'' G H)). Qed.
Lemma lem8262883 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1006 A B P P' G lt2 s) = (term1006 A B P P' G lt2 s).
Proof. exact (eq_refl (term1006 A B P P' G lt2 s)). Qed.
Lemma lem8262884 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1083 A B P lt2 s p P' h k P'' G H) = (term1084 A B P lt2 s p P' h k P'' G H).
Proof. exact (MK_COMB (@lem8262883 A B P P'' G lt2 s) (@lem8262880 A B P lt2 s p P' h k P'' G H)). Qed.
Lemma lem8262887 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1085 A B P lt2 s p P' h k P'' G) = (term1086 A B P lt2 s p P' h k P'' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8262884 A B P lt2 s p P' h k P'' G H)). Qed.
Lemma lem8262888 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8262889 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1087 A B P lt2 s p P' h k P'' G) = (term1088 A B P lt2 s p P' h k P'' G).
Proof. exact (MK_COMB (@lem8262888 A B P) (@lem8262887 A B P lt2 s p P' h k P'' G)). Qed.
Lemma lem8262894 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1089 A B P lt2 s p P' h k P'') = (term1090 A B P lt2 s p P' h k P'').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8262889 A B P lt2 s p P' h k P'' G)). Qed.
Lemma lem8262895 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8262896 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1091 A B P lt2 s p P' h k P'') = (term1092 A B P lt2 s p P' h k P'').
Proof. exact (MK_COMB (@lem8262895 A B P) (@lem8262894 A B P lt2 s p P' h k P'')). Qed.
Lemma lem8262901 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1093 A B P lt2 s p P' h k) = (term1094 A B P lt2 s p P' h k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8262896 A B P lt2 s p P' h k P'')). Qed.
Lemma lem8262902 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8262903 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1052 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8262902 A B P) (@lem8262901 A B P lt2 s p P' h k)). Qed.
Lemma lem8262908 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term265 A B P lt2 p s P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (TRANS (@lem8262749 A B P lt2 s p P' h k) (@lem8262903 A B P lt2 s p P' h k)). Qed.
Lemma lem8262909 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1096 A B P lt2 p s P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8262745 A B P lt2 s p P' h) (@lem8262908 A B P lt2 s p P' h k)). Qed.
Lemma lem8262912 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1098 A B P lt2 p s P' h k) = (term1099 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8262578 A B P lt2 s p P' k) (@lem8262909 A B P lt2 s p P' h k)). Qed.
Lemma lem8262915 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1099 A B P lt2 s p P' h k) = (term1098 A B P lt2 p s P' h k).
Proof. exact (SYM (@lem8262912 A B P lt2 s p P' h k)). Qed.
Lemma lem8262917 {A : Type'} (P : A -> Prop) (Q : Prop) : (term111 A P Q) = (term112 A P Q).
Proof. exact (EQ_MP (@lem8248646 A P Q) (@lem8248645 A P Q)). Qed.
Lemma lem8262918 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term1100 A B P P' Q) = (term1101 A B P P' Q).
Proof. exact (@lem8262917 (type560 A B P) P' Q). Qed.
Lemma lem8262919 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1102 A B P lt2 s p P' h k) = (term1103 A B P lt2 s p P' h k).
Proof. exact (@lem8262918 A B P (term1018 A B P lt2 s p P' k) (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262920 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1104 A B P lt2 s p P' k P'') = (term1016 A B P lt2 s p P' k P'').
Proof. exact (eq_refl (term1104 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term1105 A B P lt2 s p P' k) = (term1018 A B P lt2 s p P' k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8262920 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262922 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8262923 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term1106 A B P lt2 s p P' k) = (term1019 A B P lt2 s p P' k).
Proof. exact (MK_COMB (@lem8262922 A B P) (@lem8262921 A B P lt2 s p P' k)). Qed.
Lemma lem8262924 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262925 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) : (term1107 A B P lt2 s p P' k) = (term1021 A B P lt2 s p P' k).
Proof. exact (MK_COMB (@lem8262924) (@lem8262923 A B P lt2 s p P' k)). Qed.
Lemma lem8262926 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262927 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1102 A B P lt2 s p P' h k) = (term1099 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8262925 A B P lt2 s p P' k) (@lem8262926 A B P lt2 s p P' h k)). Qed.
Lemma lem8262928 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8262929 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1108 A B P lt2 s p P' h k) = (term1109 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8262928) (@lem8262927 A B P lt2 s p P' h k)). Qed.
Lemma lem8262930 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1104 A B P lt2 s p P' k P'') = (term1016 A B P lt2 s p P' k P'').
Proof. exact (eq_refl (term1104 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262931 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262932 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1110 A B P lt2 s p P' k P'') = (term1111 A B P lt2 s p P' k P'').
Proof. exact (MK_COMB (@lem8262931) (@lem8262930 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262933 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262934 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1112 A B P P' lt2 s p P'' h k) = (term1113 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262932 A B P lt2 s p P'' k P') (@lem8262933 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262935 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1114 A B P lt2 s p P' h k) = (term1115 A B P lt2 s p P' h k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8262934 A B P P'' lt2 s p P' h k)). Qed.
Lemma lem8262936 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8262937 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1103 A B P lt2 s p P' h k) = (term1116 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8262936 A B P) (@lem8262935 A B P lt2 s p P' h k)). Qed.
Lemma lem8262938 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1102 A B P lt2 s p P' h k) = (term1103 A B P lt2 s p P' h k)) = ((term1099 A B P lt2 s p P' h k) = (term1116 A B P lt2 s p P' h k)).
Proof. exact (MK_COMB (@lem8262929 A B P lt2 s p P' h k) (@lem8262937 A B P lt2 s p P' h k)). Qed.
Lemma lem8262939 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1099 A B P lt2 s p P' h k) = (term1116 A B P lt2 s p P' h k).
Proof. exact (EQ_MP (@lem8262938 A B P lt2 s p P' h k) (@lem8262919 A B P lt2 s p P' h k)). Qed.
Lemma lem8262945 {A : Type'} (P : A -> Prop) (Q : Prop) : (term111 A P Q) = (term112 A P Q).
Proof. exact (EQ_MP (@lem8248646 A P Q) (@lem8248645 A P Q)). Qed.
Lemma lem8262946 {A B P : Type'} (P' : type113 A B P) (Q : Prop) : (term1117 A B P P' Q) = (term1118 A B P P' Q).
Proof. exact (@lem8262945 (type557 A B P) P' Q). Qed.
Lemma lem8262947 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1119 A B P P' lt2 s p P'' h k) = (term1120 A B P P' lt2 s p P'' h k).
Proof. exact (@lem8262946 A B P (term1014 A B P lt2 s p P'' k P') (term1097 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262948 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1121 A B P lt2 s p P' k P'' G) = (term1012 A B P lt2 s p P' k P'' G).
Proof. exact (eq_refl (term1121 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262949 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1122 A B P lt2 s p P' k P'') = (term1014 A B P lt2 s p P' k P'').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8262948 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262950 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8262951 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1123 A B P lt2 s p P' k P'') = (term1016 A B P lt2 s p P' k P'').
Proof. exact (MK_COMB (@lem8262950 A B P) (@lem8262949 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262952 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262953 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) : (term1124 A B P lt2 s p P' k P'') = (term1111 A B P lt2 s p P' k P'').
Proof. exact (MK_COMB (@lem8262952) (@lem8262951 A B P lt2 s p P' k P'')). Qed.
Lemma lem8262954 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262955 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1119 A B P P' lt2 s p P'' h k) = (term1113 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262953 A B P lt2 s p P'' k P') (@lem8262954 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262956 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8262957 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1125 A B P P' lt2 s p P'' h k) = (term1126 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262956) (@lem8262955 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8262958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1121 A B P lt2 s p P' k P'' G) = (term1012 A B P lt2 s p P' k P'' G).
Proof. exact (eq_refl (term1121 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262959 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262960 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1127 A B P lt2 s p P' k P'' G) = (term1128 A B P lt2 s p P' k P'' G).
Proof. exact (MK_COMB (@lem8262959) (@lem8262958 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262961 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262962 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1129 A B P P' G lt2 s p P'' h k) = (term1130 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262960 A B P lt2 s p P'' k P' G) (@lem8262961 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262963 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1131 A B P P' lt2 s p P'' h k) = (term1132 A B P P' lt2 s p P'' h k).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8262962 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8262964 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8262965 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1120 A B P P' lt2 s p P'' h k) = (term1133 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262964 A B P) (@lem8262963 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8262966 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1119 A B P P' lt2 s p P'' h k) = (term1120 A B P P' lt2 s p P'' h k)) = ((term1113 A B P P' lt2 s p P'' h k) = (term1133 A B P P' lt2 s p P'' h k)).
Proof. exact (MK_COMB (@lem8262957 A B P P' lt2 s p P'' h k) (@lem8262965 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8262967 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1113 A B P P' lt2 s p P'' h k) = (term1133 A B P P' lt2 s p P'' h k).
Proof. exact (EQ_MP (@lem8262966 A B P P' lt2 s p P'' h k) (@lem8262947 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8262973 {A : Type'} (P : A -> Prop) (Q : Prop) : (term111 A P Q) = (term112 A P Q).
Proof. exact (EQ_MP (@lem8248646 A P Q) (@lem8248645 A P Q)). Qed.
Lemma lem8262974 {A B P : Type'} (P' : type116 A B P) (Q : Prop) : (term1134 A B P P' Q) = (term1135 A B P P' Q).
Proof. exact (@lem8262973 (type558 A B P) P' Q). Qed.
Lemma lem8262975 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1136 A B P P' G lt2 s p P'' h k) = (term1137 A B P P' G lt2 s p P'' h k).
Proof. exact (@lem8262974 A B P (term1010 A B P lt2 s p P'' k P' G) (term1097 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262976 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1138 A B P lt2 s p P' k P'' G H) = (term1008 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1138 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8262977 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1139 A B P lt2 s p P' k P'' G) = (term1010 A B P lt2 s p P' k P'' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8262976 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8262978 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8262979 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1140 A B P lt2 s p P' k P'' G) = (term1012 A B P lt2 s p P' k P'' G).
Proof. exact (MK_COMB (@lem8262978 A B P) (@lem8262977 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262980 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262981 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1141 A B P lt2 s p P' k P'' G) = (term1128 A B P lt2 s p P' k P'' G).
Proof. exact (MK_COMB (@lem8262980) (@lem8262979 A B P lt2 s p P' k P'' G)). Qed.
Lemma lem8262982 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262983 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1136 A B P P' G lt2 s p P'' h k) = (term1130 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262981 A B P lt2 s p P'' k P' G) (@lem8262982 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262984 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8262985 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1142 A B P P' G lt2 s p P'' h k) = (term1143 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262984) (@lem8262983 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8262986 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1138 A B P lt2 s p P' k P'' G H) = (term1008 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1138 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8262987 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8262988 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1144 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (MK_COMB (@lem8262987) (@lem8262986 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8262989 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1097 A B P lt2 s p P' h k)). Qed.
Lemma lem8262990 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1146 A B P P' G H lt2 s p P'' h k) = (term1147 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262988 A B P lt2 s p P'' k P' G H) (@lem8262989 A B P lt2 s p P'' h k)). Qed.
Lemma lem8262991 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1148 A B P P' G lt2 s p P'' h k) = (term1149 A B P P' G lt2 s p P'' h k).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8262990 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8262992 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8262993 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1137 A B P P' G lt2 s p P'' h k) = (term1150 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8262992 A B P) (@lem8262991 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8262994 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1136 A B P P' G lt2 s p P'' h k) = (term1137 A B P P' G lt2 s p P'' h k)) = ((term1130 A B P P' G lt2 s p P'' h k) = (term1150 A B P P' G lt2 s p P'' h k)).
Proof. exact (MK_COMB (@lem8262985 A B P P' G lt2 s p P'' h k) (@lem8262993 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8262995 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1130 A B P P' G lt2 s p P'' h k) = (term1150 A B P P' G lt2 s p P'' h k).
Proof. exact (EQ_MP (@lem8262994 A B P P' G lt2 s p P'' h k) (@lem8262975 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263069 {A : Type'} (P : A -> Prop) (Q : Prop) : (term111 A P Q) = (term112 A P Q).
Proof. exact (EQ_MP (@lem8248646 A P Q) (@lem8248645 A P Q)). Qed.
Lemma lem8263070 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term1100 A B P P' Q) = (term1101 A B P P' Q).
Proof. exact (@lem8263069 (type560 A B P) P' Q). Qed.
Lemma lem8263071 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1151 A B P lt2 s p P' h k) = (term1152 A B P lt2 s p P' h k).
Proof. exact (@lem8263070 A B P (term1048 A B P lt2 s p P' h) (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263072 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1153 A B P lt2 s p P' h P'') = (term1046 A B P lt2 s p P' h P'').
Proof. exact (eq_refl (term1153 A B P lt2 s p P' h P'')). Qed.
Lemma lem8263073 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term1154 A B P lt2 s p P' h) = (term1048 A B P lt2 s p P' h).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8263072 A B P lt2 s p P' h P'')). Qed.
Lemma lem8263074 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263075 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term1155 A B P lt2 s p P' h) = (term1049 A B P lt2 s p P' h).
Proof. exact (MK_COMB (@lem8263074 A B P) (@lem8263073 A B P lt2 s p P' h)). Qed.
Lemma lem8263076 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8263077 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) : (term1156 A B P lt2 s p P' h) = (term1051 A B P lt2 s p P' h).
Proof. exact (MK_COMB (@lem8263076) (@lem8263075 A B P lt2 s p P' h)). Qed.
Lemma lem8263078 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1095 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263079 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1151 A B P lt2 s p P' h k) = (term1097 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263077 A B P lt2 s p P' h) (@lem8263078 A B P lt2 s p P' h k)). Qed.
Lemma lem8263080 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8263081 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1157 A B P lt2 s p P' h k) = (term1158 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263080) (@lem8263079 A B P lt2 s p P' h k)). Qed.
Lemma lem8263082 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1153 A B P lt2 s p P' h P'') = (term1046 A B P lt2 s p P' h P'').
Proof. exact (eq_refl (term1153 A B P lt2 s p P' h P'')). Qed.
Lemma lem8263083 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8263084 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1159 A B P lt2 s p P' h P'') = (term1160 A B P lt2 s p P' h P'').
Proof. exact (MK_COMB (@lem8263083) (@lem8263082 A B P lt2 s p P' h P'')). Qed.
Lemma lem8263085 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1095 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263086 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1161 A B P P' lt2 s p P'' h k) = (term1162 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263084 A B P lt2 s p P'' h P') (@lem8263085 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263087 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1163 A B P lt2 s p P' h k) = (term1164 A B P lt2 s p P' h k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8263086 A B P P'' lt2 s p P' h k)). Qed.
Lemma lem8263088 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263089 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1152 A B P lt2 s p P' h k) = (term1165 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263088 A B P) (@lem8263087 A B P lt2 s p P' h k)). Qed.
Lemma lem8263090 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1151 A B P lt2 s p P' h k) = (term1152 A B P lt2 s p P' h k)) = ((term1097 A B P lt2 s p P' h k) = (term1165 A B P lt2 s p P' h k)).
Proof. exact (MK_COMB (@lem8263081 A B P lt2 s p P' h k) (@lem8263089 A B P lt2 s p P' h k)). Qed.
Lemma lem8263091 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1165 A B P lt2 s p P' h k).
Proof. exact (EQ_MP (@lem8263090 A B P lt2 s p P' h k) (@lem8263071 A B P lt2 s p P' h k)). Qed.
Lemma lem8263097 {A : Type'} (P : A -> Prop) (Q : Prop) : (term111 A P Q) = (term112 A P Q).
Proof. exact (EQ_MP (@lem8248646 A P Q) (@lem8248645 A P Q)). Qed.
Lemma lem8263098 {A B P : Type'} (P' : type113 A B P) (Q : Prop) : (term1117 A B P P' Q) = (term1118 A B P P' Q).
Proof. exact (@lem8263097 (type557 A B P) P' Q). Qed.
Lemma lem8263099 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1166 A B P P' lt2 s p P'' h k) = (term1167 A B P P' lt2 s p P'' h k).
Proof. exact (@lem8263098 A B P (term1044 A B P lt2 s p P'' h P') (term1095 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263100 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1168 A B P lt2 s p P' h P'' G) = (term1042 A B P lt2 s p P' h P'' G).
Proof. exact (eq_refl (term1168 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8263101 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1169 A B P lt2 s p P' h P'') = (term1044 A B P lt2 s p P' h P'').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8263100 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8263102 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8263103 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1170 A B P lt2 s p P' h P'') = (term1046 A B P lt2 s p P' h P'').
Proof. exact (MK_COMB (@lem8263102 A B P) (@lem8263101 A B P lt2 s p P' h P'')). Qed.
Lemma lem8263104 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8263105 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) : (term1171 A B P lt2 s p P' h P'') = (term1160 A B P lt2 s p P' h P'').
Proof. exact (MK_COMB (@lem8263104) (@lem8263103 A B P lt2 s p P' h P'')). Qed.
Lemma lem8263106 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1095 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263107 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1166 A B P P' lt2 s p P'' h k) = (term1162 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263105 A B P lt2 s p P'' h P') (@lem8263106 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263108 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8263109 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1172 A B P P' lt2 s p P'' h k) = (term1173 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263108) (@lem8263107 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263110 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1168 A B P lt2 s p P' h P'' G) = (term1042 A B P lt2 s p P' h P'' G).
Proof. exact (eq_refl (term1168 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8263111 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8263112 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1174 A B P lt2 s p P' h P'' G) = (term1175 A B P lt2 s p P' h P'' G).
Proof. exact (MK_COMB (@lem8263111) (@lem8263110 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8263113 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1095 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263114 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1176 A B P P' G lt2 s p P'' h k) = (term1177 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263112 A B P lt2 s p P'' h P' G) (@lem8263113 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263115 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1178 A B P P' lt2 s p P'' h k) = (term1179 A B P P' lt2 s p P'' h k).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8263114 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263116 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8263117 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1167 A B P P' lt2 s p P'' h k) = (term1180 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263116 A B P) (@lem8263115 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263118 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1166 A B P P' lt2 s p P'' h k) = (term1167 A B P P' lt2 s p P'' h k)) = ((term1162 A B P P' lt2 s p P'' h k) = (term1180 A B P P' lt2 s p P'' h k)).
Proof. exact (MK_COMB (@lem8263109 A B P P' lt2 s p P'' h k) (@lem8263117 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263119 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1162 A B P P' lt2 s p P'' h k) = (term1180 A B P P' lt2 s p P'' h k).
Proof. exact (EQ_MP (@lem8263118 A B P P' lt2 s p P'' h k) (@lem8263099 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263125 {A : Type'} (P : A -> Prop) (Q : Prop) : (term111 A P Q) = (term112 A P Q).
Proof. exact (EQ_MP (@lem8248646 A P Q) (@lem8248645 A P Q)). Qed.
Lemma lem8263126 {A B P : Type'} (P' : type116 A B P) (Q : Prop) : (term1134 A B P P' Q) = (term1135 A B P P' Q).
Proof. exact (@lem8263125 (type558 A B P) P' Q). Qed.
Lemma lem8263127 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1181 A B P P' G lt2 s p P'' h k) = (term1182 A B P P' G lt2 s p P'' h k).
Proof. exact (@lem8263126 A B P (term1040 A B P lt2 s p P'' h P' G) (term1095 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263128 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1183 A B P lt2 s p P' h P'' G H) = (term1038 A B P lt2 s p P' h P'' G H).
Proof. exact (eq_refl (term1183 A B P lt2 s p P' h P'' G H)). Qed.
Lemma lem8263129 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1184 A B P lt2 s p P' h P'' G) = (term1040 A B P lt2 s p P' h P'' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8263128 A B P lt2 s p P' h P'' G H)). Qed.
Lemma lem8263130 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8263131 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1185 A B P lt2 s p P' h P'' G) = (term1042 A B P lt2 s p P' h P'' G).
Proof. exact (MK_COMB (@lem8263130 A B P) (@lem8263129 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8263132 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8263133 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) : (term1186 A B P lt2 s p P' h P'' G) = (term1175 A B P lt2 s p P' h P'' G).
Proof. exact (MK_COMB (@lem8263132) (@lem8263131 A B P lt2 s p P' h P'' G)). Qed.
Lemma lem8263134 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1095 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263135 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1181 A B P P' G lt2 s p P'' h k) = (term1177 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263133 A B P lt2 s p P'' h P' G) (@lem8263134 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263136 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8263137 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1187 A B P P' G lt2 s p P'' h k) = (term1188 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263136) (@lem8263135 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263138 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1183 A B P lt2 s p P' h P'' G H) = (term1038 A B P lt2 s p P' h P'' G H).
Proof. exact (eq_refl (term1183 A B P lt2 s p P' h P'' G H)). Qed.
Lemma lem8263139 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8263140 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1189 A B P lt2 s p P' h P'' G H) = (term1190 A B P lt2 s p P' h P'' G H).
Proof. exact (MK_COMB (@lem8263139) (@lem8263138 A B P lt2 s p P' h P'' G H)). Qed.
Lemma lem8263141 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1095 A B P lt2 s p P' h k) = (term1095 A B P lt2 s p P' h k).
Proof. exact (eq_refl (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263142 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1191 A B P P' G H lt2 s p P'' h k) = (term1192 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263140 A B P lt2 s p P'' h P' G H) (@lem8263141 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263143 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1193 A B P P' G lt2 s p P'' h k) = (term1194 A B P P' G lt2 s p P'' h k).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8263142 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263144 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8263145 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1182 A B P P' G lt2 s p P'' h k) = (term1195 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263144 A B P) (@lem8263143 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263146 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1181 A B P P' G lt2 s p P'' h k) = (term1182 A B P P' G lt2 s p P'' h k)) = ((term1177 A B P P' G lt2 s p P'' h k) = (term1195 A B P P' G lt2 s p P'' h k)).
Proof. exact (MK_COMB (@lem8263137 A B P P' G lt2 s p P'' h k) (@lem8263145 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263147 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1177 A B P P' G lt2 s p P'' h k) = (term1195 A B P P' G lt2 s p P'' h k).
Proof. exact (EQ_MP (@lem8263146 A B P P' G lt2 s p P'' h k) (@lem8263127 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263296 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1179 A B P P' lt2 s p P'' h k) = (term1196 A B P P' lt2 s p P'' h k).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8263147 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263297 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8263298 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1180 A B P P' lt2 s p P'' h k) = (term1197 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263297 A B P) (@lem8263296 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263303 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1162 A B P P' lt2 s p P'' h k) = (term1197 A B P P' lt2 s p P'' h k).
Proof. exact (TRANS (@lem8263119 A B P P' lt2 s p P'' h k) (@lem8263298 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263304 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1164 A B P lt2 s p P' h k) = (term1198 A B P lt2 s p P' h k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8263303 A B P P'' lt2 s p P' h k)). Qed.
Lemma lem8263305 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263306 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1165 A B P lt2 s p P' h k) = (term1199 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263305 A B P) (@lem8263304 A B P lt2 s p P' h k)). Qed.
Lemma lem8263311 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1097 A B P lt2 s p P' h k) = (term1199 A B P lt2 s p P' h k).
Proof. exact (TRANS (@lem8263091 A B P lt2 s p P' h k) (@lem8263306 A B P lt2 s p P' h k)). Qed.
Lemma lem8263312 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263313 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1147 A B P P' G H lt2 s p P'' h k) = (term1200 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263312 A B P lt2 s p P'' k P' G H) (@lem8263311 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263315 {A : Type'} (P : Prop) (Q : A -> Prop) : (term106 A P Q) = (term107 A P Q).
Proof. exact (EQ_MP (@lem8248640 A P Q) (@lem8248639 A P Q)). Qed.
Lemma lem8263316 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term1201 A B P P' Q) = (term1202 A B P P' Q).
Proof. exact (@lem8263315 (type560 A B P) P' Q). Qed.
Lemma lem8263317 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1203 A B P P' G H lt2 s p P'' h k) = (term1204 A B P P' G H lt2 s p P'' h k).
Proof. exact (@lem8263316 A B P (term1008 A B P lt2 s p P'' k P' G H) (term1198 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263318 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1205 A B P lt2 s p P'' h k P') = (term1197 A B P P' lt2 s p P'' h k).
Proof. exact (eq_refl (term1205 A B P lt2 s p P'' h k P')). Qed.
Lemma lem8263319 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1206 A B P lt2 s p P' h k) = (term1198 A B P lt2 s p P' h k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8263318 A B P P'' lt2 s p P' h k)). Qed.
Lemma lem8263320 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263321 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1207 A B P lt2 s p P' h k) = (term1199 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263320 A B P) (@lem8263319 A B P lt2 s p P' h k)). Qed.
Lemma lem8263322 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263323 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1203 A B P P' G H lt2 s p P'' h k) = (term1200 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263322 A B P lt2 s p P'' k P' G H) (@lem8263321 A B P lt2 s p P'' h k)). Qed.
Lemma lem8263324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8263325 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1208 A B P P' G H lt2 s p P'' h k) = (term1209 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263324) (@lem8263323 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263326 {A B P : Type'} (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1205 A B P lt2 s p P' h k P'') = (term1197 A B P P'' lt2 s p P' h k).
Proof. exact (eq_refl (term1205 A B P lt2 s p P' h k P'')). Qed.
Lemma lem8263327 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263328 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1210 A B P P' G H lt2 s p P''' h k P'') = (term1211 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263327 A B P lt2 s p P''' k P' G H) (@lem8263326 A B P P'' lt2 s p P''' h k)). Qed.
Lemma lem8263329 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1212 A B P P' G H lt2 s p P'' h k) = (term1213 A B P P' G H lt2 s p P'' h k).
Proof. exact (fun_ext (fun P''' : type560 A B P => @lem8263328 A B P P' G H P''' lt2 s p P'' h k)). Qed.
Lemma lem8263330 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263331 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1204 A B P P' G H lt2 s p P'' h k) = (term1214 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263330 A B P) (@lem8263329 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263332 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1203 A B P P' G H lt2 s p P'' h k) = (term1204 A B P P' G H lt2 s p P'' h k)) = ((term1200 A B P P' G H lt2 s p P'' h k) = (term1214 A B P P' G H lt2 s p P'' h k)).
Proof. exact (MK_COMB (@lem8263325 A B P P' G H lt2 s p P'' h k) (@lem8263331 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263333 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1200 A B P P' G H lt2 s p P'' h k) = (term1214 A B P P' G H lt2 s p P'' h k).
Proof. exact (EQ_MP (@lem8263332 A B P P' G H lt2 s p P'' h k) (@lem8263317 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263339 {A : Type'} (P : Prop) (Q : A -> Prop) : (term106 A P Q) = (term107 A P Q).
Proof. exact (EQ_MP (@lem8248640 A P Q) (@lem8248639 A P Q)). Qed.
Lemma lem8263340 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term1215 A B P P' Q) = (term1216 A B P P' Q).
Proof. exact (@lem8263339 (type557 A B P) P' Q). Qed.
Lemma lem8263341 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1217 A B P P' G H P'' lt2 s p P''' h k) = (term1218 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (@lem8263340 A B P (term1008 A B P lt2 s p P''' k P' G H) (term1196 A B P P'' lt2 s p P''' h k)). Qed.
Lemma lem8263342 {A B P : Type'} (P'' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1219 A B P P'' lt2 s p P' h k G) = (term1195 A B P P'' G lt2 s p P' h k).
Proof. exact (eq_refl (term1219 A B P P'' lt2 s p P' h k G)). Qed.
Lemma lem8263343 {A B P : Type'} (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1220 A B P P'' lt2 s p P' h k) = (term1196 A B P P'' lt2 s p P' h k).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8263342 A B P P'' G lt2 s p P' h k)). Qed.
Lemma lem8263344 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8263345 {A B P : Type'} (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1221 A B P P'' lt2 s p P' h k) = (term1197 A B P P'' lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263344 A B P) (@lem8263343 A B P P'' lt2 s p P' h k)). Qed.
Lemma lem8263346 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263347 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1217 A B P P' G H P'' lt2 s p P''' h k) = (term1211 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263346 A B P lt2 s p P''' k P' G H) (@lem8263345 A B P P'' lt2 s p P''' h k)). Qed.
Lemma lem8263348 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8263349 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1222 A B P P' G H P'' lt2 s p P''' h k) = (term1223 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263348) (@lem8263347 A B P P' G H P'' lt2 s p P''' h k)). Qed.
Lemma lem8263350 {A B P : Type'} (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1219 A B P P'' lt2 s p P' h k G') = (term1195 A B P P'' G' lt2 s p P' h k).
Proof. exact (eq_refl (term1219 A B P P'' lt2 s p P' h k G')). Qed.
Lemma lem8263351 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263352 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1224 A B P P' G H P'' lt2 s p P''' h k G') = (term1225 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263351 A B P lt2 s p P''' k P' G H) (@lem8263350 A B P P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263353 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1226 A B P P' G H P'' lt2 s p P''' h k) = (term1227 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (fun_ext (fun G' : type557 A B P => @lem8263352 A B P P' G H P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263354 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8263355 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1218 A B P P' G H P'' lt2 s p P''' h k) = (term1228 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263354 A B P) (@lem8263353 A B P P' G H P'' lt2 s p P''' h k)). Qed.
Lemma lem8263356 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1217 A B P P' G H P'' lt2 s p P''' h k) = (term1218 A B P P' G H P'' lt2 s p P''' h k)) = ((term1211 A B P P' G H P'' lt2 s p P''' h k) = (term1228 A B P P' G H P'' lt2 s p P''' h k)).
Proof. exact (MK_COMB (@lem8263349 A B P P' G H P'' lt2 s p P''' h k) (@lem8263355 A B P P' G H P'' lt2 s p P''' h k)). Qed.
Lemma lem8263357 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1211 A B P P' G H P'' lt2 s p P''' h k) = (term1228 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (EQ_MP (@lem8263356 A B P P' G H P'' lt2 s p P''' h k) (@lem8263341 A B P P' G H P'' lt2 s p P''' h k)). Qed.
Lemma lem8263363 {A : Type'} (P : Prop) (Q : A -> Prop) : (term106 A P Q) = (term107 A P Q).
Proof. exact (EQ_MP (@lem8248640 A P Q) (@lem8248639 A P Q)). Qed.
Lemma lem8263364 {A B P : Type'} (P' : Prop) (Q : type116 A B P) : (term1229 A B P P' Q) = (term1230 A B P P' Q).
Proof. exact (@lem8263363 (type558 A B P) P' Q). Qed.
Lemma lem8263365 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1231 A B P P' G H P'' G' lt2 s p P''' h k) = (term1232 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (@lem8263364 A B P (term1008 A B P lt2 s p P''' k P' G H) (term1194 A B P P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263366 {A B P : Type'} (P'' : type560 A B P) (G' : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1233 A B P P'' G' lt2 s p P' h k H) = (term1192 A B P P'' G' H lt2 s p P' h k).
Proof. exact (eq_refl (term1233 A B P P'' G' lt2 s p P' h k H)). Qed.
Lemma lem8263367 {A B P : Type'} (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1234 A B P P'' G' lt2 s p P' h k) = (term1194 A B P P'' G' lt2 s p P' h k).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8263366 A B P P'' G' H lt2 s p P' h k)). Qed.
Lemma lem8263368 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8263369 {A B P : Type'} (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1235 A B P P'' G' lt2 s p P' h k) = (term1195 A B P P'' G' lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263368 A B P) (@lem8263367 A B P P'' G' lt2 s p P' h k)). Qed.
Lemma lem8263370 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263371 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1231 A B P P' G H P'' G' lt2 s p P''' h k) = (term1225 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263370 A B P lt2 s p P''' k P' G H) (@lem8263369 A B P P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263372 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8263373 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1236 A B P P' G H P'' G' lt2 s p P''' h k) = (term1237 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263372) (@lem8263371 A B P P' G H P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263374 {A B P : Type'} (P'' : type560 A B P) (G' : type557 A B P) (H' : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1233 A B P P'' G' lt2 s p P' h k H') = (term1192 A B P P'' G' H' lt2 s p P' h k).
Proof. exact (eq_refl (term1233 A B P P'' G' lt2 s p P' h k H')). Qed.
Lemma lem8263375 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P'' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1145 A B P lt2 s p P' k P'' G H) = (term1145 A B P lt2 s p P' k P'' G H).
Proof. exact (eq_refl (term1145 A B P lt2 s p P' k P'' G H)). Qed.
Lemma lem8263376 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (H' : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1238 A B P P' G H P'' G' lt2 s p P''' h k H') = (term1239 A B P P' G H P'' G' H' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263375 A B P lt2 s p P''' k P' G H) (@lem8263374 A B P P'' G' H' lt2 s p P''' h k)). Qed.
Lemma lem8263377 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1240 A B P P' G H P'' G' lt2 s p P''' h k) = (term1241 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (fun_ext (fun H' : type558 A B P => @lem8263376 A B P P' G H P'' G' H' lt2 s p P''' h k)). Qed.
Lemma lem8263378 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8263379 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1232 A B P P' G H P'' G' lt2 s p P''' h k) = (term1242 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263378 A B P) (@lem8263377 A B P P' G H P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263380 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : ((term1231 A B P P' G H P'' G' lt2 s p P''' h k) = (term1232 A B P P' G H P'' G' lt2 s p P''' h k)) = ((term1225 A B P P' G H P'' G' lt2 s p P''' h k) = (term1242 A B P P' G H P'' G' lt2 s p P''' h k)).
Proof. exact (MK_COMB (@lem8263373 A B P P' G H P'' G' lt2 s p P''' h k) (@lem8263379 A B P P' G H P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263381 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1225 A B P P' G H P'' G' lt2 s p P''' h k) = (term1242 A B P P' G H P'' G' lt2 s p P''' h k).
Proof. exact (EQ_MP (@lem8263380 A B P P' G H P'' G' lt2 s p P''' h k) (@lem8263365 A B P P' G H P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263598 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1227 A B P P' G H P'' lt2 s p P''' h k) = (term1243 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (fun_ext (fun G' : type557 A B P => @lem8263381 A B P P' G H P'' G' lt2 s p P''' h k)). Qed.
Lemma lem8263599 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8263600 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1228 A B P P' G H P'' lt2 s p P''' h k) = (term1244 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (MK_COMB (@lem8263599 A B P) (@lem8263598 A B P P' G H P'' lt2 s p P''' h k)). Qed.
Lemma lem8263605 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (P'' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P''' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1211 A B P P' G H P'' lt2 s p P''' h k) = (term1244 A B P P' G H P'' lt2 s p P''' h k).
Proof. exact (TRANS (@lem8263357 A B P P' G H P'' lt2 s p P''' h k) (@lem8263600 A B P P' G H P'' lt2 s p P''' h k)). Qed.
Lemma lem8263606 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1213 A B P P' G H lt2 s p P'' h k) = (term1245 A B P P' G H lt2 s p P'' h k).
Proof. exact (fun_ext (fun P''' : type560 A B P => @lem8263605 A B P P' G H P''' lt2 s p P'' h k)). Qed.
Lemma lem8263607 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263608 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1214 A B P P' G H lt2 s p P'' h k) = (term1246 A B P P' G H lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263607 A B P) (@lem8263606 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263613 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1200 A B P P' G H lt2 s p P'' h k) = (term1246 A B P P' G H lt2 s p P'' h k).
Proof. exact (TRANS (@lem8263333 A B P P' G H lt2 s p P'' h k) (@lem8263608 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263614 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1147 A B P P' G H lt2 s p P'' h k) = (term1246 A B P P' G H lt2 s p P'' h k).
Proof. exact (TRANS (@lem8263313 A B P P' G H lt2 s p P'' h k) (@lem8263613 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263615 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1149 A B P P' G lt2 s p P'' h k) = (term1247 A B P P' G lt2 s p P'' h k).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8263614 A B P P' G H lt2 s p P'' h k)). Qed.
Lemma lem8263616 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8263617 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1150 A B P P' G lt2 s p P'' h k) = (term1248 A B P P' G lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263616 A B P) (@lem8263615 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263622 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1130 A B P P' G lt2 s p P'' h k) = (term1248 A B P P' G lt2 s p P'' h k).
Proof. exact (TRANS (@lem8262995 A B P P' G lt2 s p P'' h k) (@lem8263617 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263623 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1132 A B P P' lt2 s p P'' h k) = (term1249 A B P P' lt2 s p P'' h k).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8263622 A B P P' G lt2 s p P'' h k)). Qed.
Lemma lem8263624 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8263625 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1133 A B P P' lt2 s p P'' h k) = (term1250 A B P P' lt2 s p P'' h k).
Proof. exact (MK_COMB (@lem8263624 A B P) (@lem8263623 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263630 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P'' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1113 A B P P' lt2 s p P'' h k) = (term1250 A B P P' lt2 s p P'' h k).
Proof. exact (TRANS (@lem8262967 A B P P' lt2 s p P'' h k) (@lem8263625 A B P P' lt2 s p P'' h k)). Qed.
Lemma lem8263631 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1115 A B P lt2 s p P' h k) = (term1251 A B P lt2 s p P' h k).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8263630 A B P P'' lt2 s p P' h k)). Qed.
Lemma lem8263632 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8263633 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1116 A B P lt2 s p P' h k) = (term1252 A B P lt2 s p P' h k).
Proof. exact (MK_COMB (@lem8263632 A B P) (@lem8263631 A B P lt2 s p P' h k)). Qed.
Lemma lem8263638 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1099 A B P lt2 s p P' h k) = (term1252 A B P lt2 s p P' h k).
Proof. exact (TRANS (@lem8262939 A B P lt2 s p P' h k) (@lem8263633 A B P lt2 s p P' h k)). Qed.
Lemma lem8263639 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1252 A B P lt2 s p P' h k) = (term1099 A B P lt2 s p P' h k).
Proof. exact (SYM (@lem8263638 A B P lt2 s p P' h k)). Qed.
Lemma lem8263641 (a1 : Prop) (a2 : Prop) (b1 : Prop) (b2 : Prop) (c1 : Prop) (c2 : Prop) (x : Prop) : (term30 a1 b1 c1 a2 b2 c2 x) = (term31 a1 a2 b1 b2 c1 c2 x).
Proof. exact (or_elim (@lem8248145 a1) (fun h0 : a1 = True => @lem8248632 a2 b1 b2 c1 c2 x a1 h0) (fun h0 : a1 = False => @lem8248631 a2 b1 b2 c1 c2 x a1 h0)). Qed.
Lemma lem8263642 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1239 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k) = (term1253 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k).
Proof. exact (@lem8263641 (term1254 A B P P1 G1 lt2 s) (term1254 A B P P2 G2 lt2 s) (term1255 A B P lt2 s P1 G1 H1) (term1255 A B P lt2 s P2 G2 H2) (term1002 A B P p P' k P1 G1 H1) (term1034 A B P p P' h P2 G2 H2) (term1095 A B P lt2 s p P' h k)). Qed.
Lemma lem8263855 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : (term1253 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k) = (term1239 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k).
Proof. exact (SYM (@lem8263642 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k)). Qed.
Lemma lem8263856 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8264012 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264013 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8264012 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8264014 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f).
Proof. exact (@lem8264013 A B P (term1259 A B P p P' P2 P1) f). Qed.
Lemma lem8264015 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264016 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) : (term1261 A B P p P' P2 P1) = (term1259 A B P p P' P2 P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8264015 A B P p P' P2 P1 f)). Qed.
Lemma lem8264017 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264018 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f).
Proof. exact (MK_COMB (@lem8264016 A B P p P' P2 P1) (@lem8264017 A B f)). Qed.
Lemma lem8264019 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8264020 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1262 A B P p P' P2 P1 f) = (term1263 A B P p P' P2 P1 f).
Proof. exact (MK_COMB (@lem8264019 P) (@lem8264018 A B P p P' P2 P1 f)). Qed.
Lemma lem8264021 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264022 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : ((term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f)) = ((term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f)).
Proof. exact (MK_COMB (@lem8264020 A B P p P' P2 P1 f) (@lem8264021 A B P p P' P2 P1 f)). Qed.
Lemma lem8264023 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (EQ_MP (@lem8264022 A B P p P' P2 P1 f) (@lem8264014 A B P p P' P2 P1 f)). Qed.
Lemma lem8264024 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264025 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1264 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264023 A B P p P' P2 P1 f) (@lem8264024 P a)). Qed.
Lemma lem8264027 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264028 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8264027 P Prop f y). Qed.
Lemma lem8264029 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (@lem8264028 P (term1260 A B P p P' P2 P1 f) a). Qed.
Lemma lem8264030 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264031 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1268 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (fun_ext (fun a : P => @lem8264030 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264032 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264033 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264031 A B P p P' P2 P1 f) (@lem8264032 P a)). Qed.
Lemma lem8264034 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8264035 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1269 A B P p P' P2 P1 f a) = (term1270 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264034) (@lem8264033 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264036 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264037 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : ((term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a)) = ((term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a)).
Proof. exact (MK_COMB (@lem8264035 A B P p P' P2 P1 f a) (@lem8264036 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264038 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (EQ_MP (@lem8264037 A B P p P' P2 P1 f a) (@lem8264029 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264039 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1264 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (TRANS (@lem8264025 A B P p P' P2 P1 f a) (@lem8264038 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264040 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264041 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1271 A B P p P' P2 P1 f a) = (term1272 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264040) (@lem8264039 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264043 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264044 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1273 A B P f y) = (f y).
Proof. exact (@lem8264043 (A -> B) (P -> A) f y). Qed.
Lemma lem8264045 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f).
Proof. exact (@lem8264044 A B P (term1276 A B P p P' G2 G1 z) f). Qed.
Lemma lem8264046 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264047 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) : (term1278 A B P p P' G2 G1 z) = (term1276 A B P p P' G2 G1 z).
Proof. exact (fun_ext (fun f : A -> B => @lem8264046 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264048 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264049 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f).
Proof. exact (MK_COMB (@lem8264047 A B P p P' G2 G1 z) (@lem8264048 A B f)). Qed.
Lemma lem8264050 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8264051 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1279 A B P p P' G2 G1 z f) = (term1280 A B P p P' G2 G1 z f).
Proof. exact (MK_COMB (@lem8264050 A P) (@lem8264049 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264052 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264053 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : ((term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f)) = ((term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z)).
Proof. exact (MK_COMB (@lem8264051 A B P p P' G2 G1 z f) (@lem8264052 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264054 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (EQ_MP (@lem8264053 A B P p P' G2 G1 f z) (@lem8264045 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264055 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264056 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1281 A B P p P' G2 G1 z f a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264054 A B P p P' G2 G1 f z) (@lem8264055 P a)). Qed.
Lemma lem8264058 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264059 {A P : Type'} (f : P -> A) (y : P) : (term1062 A P f y) = (f y).
Proof. exact (@lem8264058 P A f y). Qed.
Lemma lem8264060 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (@lem8264059 A P (term1277 A B P p P' G2 G1 f z) a). Qed.
Lemma lem8264061 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264062 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1285 A B P p P' G2 G1 f z) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (fun_ext (fun a : P => @lem8264061 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264063 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264064 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264062 A B P p P' G2 G1 f z) (@lem8264063 P a)). Qed.
Lemma lem8264065 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8264066 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1286 A B P p P' G2 G1 f z a) = (term1287 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264065 A) (@lem8264064 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264067 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264068 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : ((term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a)) = ((term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z)).
Proof. exact (MK_COMB (@lem8264066 A B P p P' G2 G1 f z a) (@lem8264067 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264069 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (EQ_MP (@lem8264068 A B P p P' G2 G1 f a z) (@lem8264060 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264070 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1281 A B P p P' G2 G1 z f a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (TRANS (@lem8264056 A B P p P' G2 G1 f z a) (@lem8264069 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264071 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8264072 {A B P : Type'} (lt2 : type1402 A) (y : A) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1288 A B P lt2 y p P' G2 G1 z f a) = (term1289 A B P lt2 y p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264071 A lt2 y) (@lem8264070 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264073 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1290 A B P P2 P1 lt2 y p P' G2 G1 z f a) = (term1291 A B P P2 P1 lt2 y p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264041 A B P p P' P2 P1 f a) (@lem8264072 A B P lt2 y p P' G2 G1 f a z)). Qed.
Lemma lem8264076 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8264077 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1292 A B P P2 P1 lt2 y p P' G2 G1 z f a) = (term1293 A B P P2 P1 lt2 y p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264076) (@lem8264073 A B P P2 P1 lt2 y p P' G2 G1 f a z)). Qed.
Lemma lem8264078 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8264079 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1294 A B P P2 P1 p P' G2 G1 z f lt2 y s a) = (term1295 A B P P2 P1 p P' G2 G1 f z lt2 y s a).
Proof. exact (MK_COMB (@lem8264077 A B P P2 P1 lt2 y p P' G2 G1 f a z) (@lem8264078 A P lt2 y s a)). Qed.
Lemma lem8264082 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1296 A B P P2 P1 p P' G2 G1 z f lt2 s a) = (term1297 A B P P2 P1 p P' G2 G1 f z lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8264079 A B P P2 P1 p P' G2 G1 f z lt2 y s a)). Qed.
Lemma lem8264083 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8264084 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1298 A B P P2 P1 p P' G2 G1 z f lt2 s a) = (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a).
Proof. exact (MK_COMB (@lem8264083 A) (@lem8264082 A B P P2 P1 p P' G2 G1 f z lt2 s a)). Qed.
Lemma lem8264089 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1300 A B P P2 P1 p P' G2 G1 z f lt2 s) = (term1301 A B P P2 P1 p P' G2 G1 f z lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8264084 A B P P2 P1 p P' G2 G1 f z lt2 s a)). Qed.
Lemma lem8264090 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8264091 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1302 A B P P2 P1 p P' G2 G1 z f lt2 s) = (term1303 A B P P2 P1 p P' G2 G1 f z lt2 s).
Proof. exact (MK_COMB (@lem8264090 P) (@lem8264089 A B P P2 P1 p P' G2 G1 f z lt2 s)). Qed.
Lemma lem8264096 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1304 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1305 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8264091 A B P P2 P1 p P' G2 G1 f z lt2 s)). Qed.
Lemma lem8264097 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8264098 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1306 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1307 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264097 A B) (@lem8264096 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264104 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1308 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1309 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264103) (@lem8264098 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264134 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264135 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8264134 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8264136 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f).
Proof. exact (@lem8264135 A B P (term1259 A B P p P' P2 P1) f). Qed.
Lemma lem8264137 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264138 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) : (term1261 A B P p P' P2 P1) = (term1259 A B P p P' P2 P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8264137 A B P p P' P2 P1 f)). Qed.
Lemma lem8264139 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264140 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f).
Proof. exact (MK_COMB (@lem8264138 A B P p P' P2 P1) (@lem8264139 A B f)). Qed.
Lemma lem8264141 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8264142 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1262 A B P p P' P2 P1 f) = (term1263 A B P p P' P2 P1 f).
Proof. exact (MK_COMB (@lem8264141 P) (@lem8264140 A B P p P' P2 P1 f)). Qed.
Lemma lem8264143 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264144 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : ((term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f)) = ((term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f)).
Proof. exact (MK_COMB (@lem8264142 A B P p P' P2 P1 f) (@lem8264143 A B P p P' P2 P1 f)). Qed.
Lemma lem8264145 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (EQ_MP (@lem8264144 A B P p P' P2 P1 f) (@lem8264136 A B P p P' P2 P1 f)). Qed.
Lemma lem8264146 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264147 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1264 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264145 A B P p P' P2 P1 f) (@lem8264146 P a)). Qed.
Lemma lem8264149 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264150 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8264149 P Prop f y). Qed.
Lemma lem8264151 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (@lem8264150 P (term1260 A B P p P' P2 P1 f) a). Qed.
Lemma lem8264152 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264153 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1268 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (fun_ext (fun a : P => @lem8264152 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264154 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264155 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264153 A B P p P' P2 P1 f) (@lem8264154 P a)). Qed.
Lemma lem8264156 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8264157 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1269 A B P p P' P2 P1 f a) = (term1270 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264156) (@lem8264155 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264158 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264159 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : ((term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a)) = ((term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a)).
Proof. exact (MK_COMB (@lem8264157 A B P p P' P2 P1 f a) (@lem8264158 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264160 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (EQ_MP (@lem8264159 A B P p P' P2 P1 f a) (@lem8264151 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264161 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1264 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (TRANS (@lem8264147 A B P p P' P2 P1 f a) (@lem8264160 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264162 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8264163 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1310 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264162) (@lem8264161 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264165 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264166 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8264165 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8264167 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : (term1257 A B P p P' P2 P1 g) = (term1258 A B P p P' P2 P1 g).
Proof. exact (@lem8264166 A B P (term1259 A B P p P' P2 P1) g). Qed.
Lemma lem8264168 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264169 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) : (term1261 A B P p P' P2 P1) = (term1259 A B P p P' P2 P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8264168 A B P p P' P2 P1 f)). Qed.
Lemma lem8264170 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8264171 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : (term1257 A B P p P' P2 P1 g) = (term1258 A B P p P' P2 P1 g).
Proof. exact (MK_COMB (@lem8264169 A B P p P' P2 P1) (@lem8264170 A B g)). Qed.
Lemma lem8264172 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8264173 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : (term1262 A B P p P' P2 P1 g) = (term1263 A B P p P' P2 P1 g).
Proof. exact (MK_COMB (@lem8264172 P) (@lem8264171 A B P p P' P2 P1 g)). Qed.
Lemma lem8264174 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : (term1258 A B P p P' P2 P1 g) = (term1260 A B P p P' P2 P1 g).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 g)). Qed.
Lemma lem8264175 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : ((term1257 A B P p P' P2 P1 g) = (term1258 A B P p P' P2 P1 g)) = ((term1258 A B P p P' P2 P1 g) = (term1260 A B P p P' P2 P1 g)).
Proof. exact (MK_COMB (@lem8264173 A B P p P' P2 P1 g) (@lem8264174 A B P p P' P2 P1 g)). Qed.
Lemma lem8264176 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : (term1258 A B P p P' P2 P1 g) = (term1260 A B P p P' P2 P1 g).
Proof. exact (EQ_MP (@lem8264175 A B P p P' P2 P1 g) (@lem8264167 A B P p P' P2 P1 g)). Qed.
Lemma lem8264177 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264178 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1264 A B P p P' P2 P1 g a) = (term1265 A B P p P' P2 P1 g a).
Proof. exact (MK_COMB (@lem8264176 A B P p P' P2 P1 g) (@lem8264177 P a)). Qed.
Lemma lem8264180 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264181 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8264180 P Prop f y). Qed.
Lemma lem8264182 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1266 A B P p P' P2 P1 g a) = (term1265 A B P p P' P2 P1 g a).
Proof. exact (@lem8264181 P (term1260 A B P p P' P2 P1 g) a). Qed.
Lemma lem8264183 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1265 A B P p P' P2 P1 g a) = (term1267 A B P p P' P2 P1 g a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264184 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) : (term1268 A B P p P' P2 P1 g) = (term1260 A B P p P' P2 P1 g).
Proof. exact (fun_ext (fun a : P => @lem8264183 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264185 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264186 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1266 A B P p P' P2 P1 g a) = (term1265 A B P p P' P2 P1 g a).
Proof. exact (MK_COMB (@lem8264184 A B P p P' P2 P1 g) (@lem8264185 P a)). Qed.
Lemma lem8264187 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8264188 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1269 A B P p P' P2 P1 g a) = (term1270 A B P p P' P2 P1 g a).
Proof. exact (MK_COMB (@lem8264187) (@lem8264186 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264189 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1265 A B P p P' P2 P1 g a) = (term1267 A B P p P' P2 P1 g a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264190 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : ((term1266 A B P p P' P2 P1 g a) = (term1265 A B P p P' P2 P1 g a)) = ((term1265 A B P p P' P2 P1 g a) = (term1267 A B P p P' P2 P1 g a)).
Proof. exact (MK_COMB (@lem8264188 A B P p P' P2 P1 g a) (@lem8264189 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264191 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1265 A B P p P' P2 P1 g a) = (term1267 A B P p P' P2 P1 g a).
Proof. exact (EQ_MP (@lem8264190 A B P p P' P2 P1 g a) (@lem8264182 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264192 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1264 A B P p P' P2 P1 g a) = (term1267 A B P p P' P2 P1 g a).
Proof. exact (TRANS (@lem8264178 A B P p P' P2 P1 g a) (@lem8264191 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264193 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : ((term1264 A B P p P' P2 P1 f a) = (term1264 A B P p P' P2 P1 g a)) = ((term1267 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 g a)).
Proof. exact (MK_COMB (@lem8264163 A B P p P' P2 P1 f a) (@lem8264192 A B P p P' P2 P1 g a)). Qed.
Lemma lem8264196 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264197 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1312 A B P f p P' P2 P1 g a) = (term1313 A B P f p P' P2 P1 g a).
Proof. exact (MK_COMB (@lem8264196) (@lem8264193 A B P f p P' P2 P1 g a)). Qed.
Lemma lem8264203 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264204 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1273 A B P f y) = (f y).
Proof. exact (@lem8264203 (A -> B) (P -> A) f y). Qed.
Lemma lem8264205 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f).
Proof. exact (@lem8264204 A B P (term1276 A B P p P' G2 G1 z) f). Qed.
Lemma lem8264206 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264207 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) : (term1278 A B P p P' G2 G1 z) = (term1276 A B P p P' G2 G1 z).
Proof. exact (fun_ext (fun f : A -> B => @lem8264206 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264208 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264209 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f).
Proof. exact (MK_COMB (@lem8264207 A B P p P' G2 G1 z) (@lem8264208 A B f)). Qed.
Lemma lem8264210 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8264211 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1279 A B P p P' G2 G1 z f) = (term1280 A B P p P' G2 G1 z f).
Proof. exact (MK_COMB (@lem8264210 A P) (@lem8264209 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264212 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264213 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : ((term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f)) = ((term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z)).
Proof. exact (MK_COMB (@lem8264211 A B P p P' G2 G1 z f) (@lem8264212 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264214 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (EQ_MP (@lem8264213 A B P p P' G2 G1 f z) (@lem8264205 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264215 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264216 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1281 A B P p P' G2 G1 z f a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264214 A B P p P' G2 G1 f z) (@lem8264215 P a)). Qed.
Lemma lem8264218 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264219 {A P : Type'} (f : P -> A) (y : P) : (term1062 A P f y) = (f y).
Proof. exact (@lem8264218 P A f y). Qed.
Lemma lem8264220 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (@lem8264219 A P (term1277 A B P p P' G2 G1 f z) a). Qed.
Lemma lem8264221 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264222 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1285 A B P p P' G2 G1 f z) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (fun_ext (fun a : P => @lem8264221 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264223 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264224 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264222 A B P p P' G2 G1 f z) (@lem8264223 P a)). Qed.
Lemma lem8264225 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8264226 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1286 A B P p P' G2 G1 f z a) = (term1287 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264225 A) (@lem8264224 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264227 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264228 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : ((term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a)) = ((term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z)).
Proof. exact (MK_COMB (@lem8264226 A B P p P' G2 G1 f z a) (@lem8264227 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264229 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (EQ_MP (@lem8264228 A B P p P' G2 G1 f a z) (@lem8264220 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264230 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1281 A B P p P' G2 G1 z f a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (TRANS (@lem8264216 A B P p P' G2 G1 f z a) (@lem8264229 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264231 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8264232 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1314 A B P p P' G2 G1 z f a) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264231 A) (@lem8264230 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264234 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264235 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1273 A B P f y) = (f y).
Proof. exact (@lem8264234 (A -> B) (P -> A) f y). Qed.
Lemma lem8264236 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (g : A -> B) : (term1274 A B P p P' G2 G1 z g) = (term1275 A B P p P' G2 G1 z g).
Proof. exact (@lem8264235 A B P (term1276 A B P p P' G2 G1 z) g). Qed.
Lemma lem8264237 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264238 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) : (term1278 A B P p P' G2 G1 z) = (term1276 A B P p P' G2 G1 z).
Proof. exact (fun_ext (fun f : A -> B => @lem8264237 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264239 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8264240 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (g : A -> B) : (term1274 A B P p P' G2 G1 z g) = (term1275 A B P p P' G2 G1 z g).
Proof. exact (MK_COMB (@lem8264238 A B P p P' G2 G1 z) (@lem8264239 A B g)). Qed.
Lemma lem8264241 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8264242 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (g : A -> B) : (term1279 A B P p P' G2 G1 z g) = (term1280 A B P p P' G2 G1 z g).
Proof. exact (MK_COMB (@lem8264241 A P) (@lem8264240 A B P p P' G2 G1 z g)). Qed.
Lemma lem8264243 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z g) = (term1277 A B P p P' G2 G1 g z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z g)). Qed.
Lemma lem8264244 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) : ((term1274 A B P p P' G2 G1 z g) = (term1275 A B P p P' G2 G1 z g)) = ((term1275 A B P p P' G2 G1 z g) = (term1277 A B P p P' G2 G1 g z)).
Proof. exact (MK_COMB (@lem8264242 A B P p P' G2 G1 z g) (@lem8264243 A B P p P' G2 G1 g z)). Qed.
Lemma lem8264245 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z g) = (term1277 A B P p P' G2 G1 g z).
Proof. exact (EQ_MP (@lem8264244 A B P p P' G2 G1 g z) (@lem8264236 A B P p P' G2 G1 z g)). Qed.
Lemma lem8264246 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264247 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) (a : P) : (term1281 A B P p P' G2 G1 z g a) = (term1282 A B P p P' G2 G1 g z a).
Proof. exact (MK_COMB (@lem8264245 A B P p P' G2 G1 g z) (@lem8264246 P a)). Qed.
Lemma lem8264249 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264250 {A P : Type'} (f : P -> A) (y : P) : (term1062 A P f y) = (f y).
Proof. exact (@lem8264249 P A f y). Qed.
Lemma lem8264251 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 g z a) = (term1282 A B P p P' G2 G1 g z a).
Proof. exact (@lem8264250 A P (term1277 A B P p P' G2 G1 g z) a). Qed.
Lemma lem8264252 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 g z a) = (term1284 A B P p P' G2 G1 g a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 g z a)). Qed.
Lemma lem8264253 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) : (term1285 A B P p P' G2 G1 g z) = (term1277 A B P p P' G2 G1 g z).
Proof. exact (fun_ext (fun a : P => @lem8264252 A B P p P' G2 G1 g a z)). Qed.
Lemma lem8264254 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264255 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 g z a) = (term1282 A B P p P' G2 G1 g z a).
Proof. exact (MK_COMB (@lem8264253 A B P p P' G2 G1 g z) (@lem8264254 P a)). Qed.
Lemma lem8264256 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8264257 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (z : A) (a : P) : (term1286 A B P p P' G2 G1 g z a) = (term1287 A B P p P' G2 G1 g z a).
Proof. exact (MK_COMB (@lem8264256 A) (@lem8264255 A B P p P' G2 G1 g z a)). Qed.
Lemma lem8264258 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 g z a) = (term1284 A B P p P' G2 G1 g a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 g z a)). Qed.
Lemma lem8264259 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : ((term1283 A B P p P' G2 G1 g z a) = (term1282 A B P p P' G2 G1 g z a)) = ((term1282 A B P p P' G2 G1 g z a) = (term1284 A B P p P' G2 G1 g a z)).
Proof. exact (MK_COMB (@lem8264257 A B P p P' G2 G1 g z a) (@lem8264258 A B P p P' G2 G1 g a z)). Qed.
Lemma lem8264260 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 g z a) = (term1284 A B P p P' G2 G1 g a z).
Proof. exact (EQ_MP (@lem8264259 A B P p P' G2 G1 g a z) (@lem8264251 A B P p P' G2 G1 g z a)). Qed.
Lemma lem8264261 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term1281 A B P p P' G2 G1 z g a) = (term1284 A B P p P' G2 G1 g a z).
Proof. exact (TRANS (@lem8264247 A B P p P' G2 G1 g z a) (@lem8264260 A B P p P' G2 G1 g a z)). Qed.
Lemma lem8264262 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : ((term1281 A B P p P' G2 G1 z f a) = (term1281 A B P p P' G2 G1 z g a)) = ((term1284 A B P p P' G2 G1 f a z) = (term1284 A B P p P' G2 G1 g a z)).
Proof. exact (MK_COMB (@lem8264232 A B P p P' G2 G1 f a z) (@lem8264261 A B P p P' G2 G1 g a z)). Qed.
Lemma lem8264265 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264266 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term1316 A B P f p P' G2 G1 z g a) = (term1317 A B P f p P' G2 G1 g a z).
Proof. exact (MK_COMB (@lem8264265) (@lem8264262 A B P f p P' G2 G1 g a z)). Qed.
Lemma lem8264270 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264271 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term1053 A B P f y) = (f y).
Proof. exact (@lem8264270 (A -> B) (P -> B) f y). Qed.
Lemma lem8264272 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (f : A -> B) : (term1318 A B P p P' H2 H1 w f) = (term1319 A B P p P' H2 H1 w f).
Proof. exact (@lem8264271 A B P (term1320 A B P p P' H2 H1 w) f). Qed.
Lemma lem8264273 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (eq_refl (term1319 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264274 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1322 A B P p P' H2 H1 w) = (term1320 A B P p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8264273 A B P p P' H2 H1 f w)). Qed.
Lemma lem8264275 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264276 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (f : A -> B) : (term1318 A B P p P' H2 H1 w f) = (term1319 A B P p P' H2 H1 w f).
Proof. exact (MK_COMB (@lem8264274 A B P p P' H2 H1 w) (@lem8264275 A B f)). Qed.
Lemma lem8264277 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8264278 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (f : A -> B) : (term1323 A B P p P' H2 H1 w f) = (term1324 A B P p P' H2 H1 w f).
Proof. exact (MK_COMB (@lem8264277 B P) (@lem8264276 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264279 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (eq_refl (term1319 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264280 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : ((term1318 A B P p P' H2 H1 w f) = (term1319 A B P p P' H2 H1 w f)) = ((term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w)).
Proof. exact (MK_COMB (@lem8264278 A B P p P' H2 H1 w f) (@lem8264279 A B P p P' H2 H1 f w)). Qed.
Lemma lem8264281 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (EQ_MP (@lem8264280 A B P p P' H2 H1 f w) (@lem8264272 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264282 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264283 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1325 A B P p P' H2 H1 w f a) = (term1326 A B P p P' H2 H1 f w a).
Proof. exact (MK_COMB (@lem8264281 A B P p P' H2 H1 f w) (@lem8264282 P a)). Qed.
Lemma lem8264285 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264286 {B P : Type'} (f : P -> B) (y : P) : (term1062 B P f y) = (f y).
Proof. exact (@lem8264285 P B f y). Qed.
Lemma lem8264287 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1327 A B P p P' H2 H1 f w a) = (term1326 A B P p P' H2 H1 f w a).
Proof. exact (@lem8264286 B P (term1321 A B P p P' H2 H1 f w) a). Qed.
Lemma lem8264288 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1326 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264289 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1329 A B P p P' H2 H1 f w) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (fun_ext (fun a : P => @lem8264288 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264290 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264291 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1327 A B P p P' H2 H1 f w a) = (term1326 A B P p P' H2 H1 f w a).
Proof. exact (MK_COMB (@lem8264289 A B P p P' H2 H1 f w) (@lem8264290 P a)). Qed.
Lemma lem8264292 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8264293 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1330 A B P p P' H2 H1 f w a) = (term1331 A B P p P' H2 H1 f w a).
Proof. exact (MK_COMB (@lem8264292 B) (@lem8264291 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264294 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1326 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264295 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : ((term1327 A B P p P' H2 H1 f w a) = (term1326 A B P p P' H2 H1 f w a)) = ((term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w)).
Proof. exact (MK_COMB (@lem8264293 A B P p P' H2 H1 f w a) (@lem8264294 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264296 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (EQ_MP (@lem8264295 A B P p P' H2 H1 f a w) (@lem8264287 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264297 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1325 A B P p P' H2 H1 w f a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (TRANS (@lem8264283 A B P p P' H2 H1 f w a) (@lem8264296 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264298 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8264299 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1332 A B P p P' H2 H1 w f a) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8264298 B) (@lem8264297 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264301 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264302 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term1053 A B P f y) = (f y).
Proof. exact (@lem8264301 (A -> B) (P -> B) f y). Qed.
Lemma lem8264303 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (g : A -> B) : (term1318 A B P p P' H2 H1 w g) = (term1319 A B P p P' H2 H1 w g).
Proof. exact (@lem8264302 A B P (term1320 A B P p P' H2 H1 w) g). Qed.
Lemma lem8264304 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (eq_refl (term1319 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264305 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1322 A B P p P' H2 H1 w) = (term1320 A B P p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8264304 A B P p P' H2 H1 f w)). Qed.
Lemma lem8264306 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8264307 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (g : A -> B) : (term1318 A B P p P' H2 H1 w g) = (term1319 A B P p P' H2 H1 w g).
Proof. exact (MK_COMB (@lem8264305 A B P p P' H2 H1 w) (@lem8264306 A B g)). Qed.
Lemma lem8264308 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8264309 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (g : A -> B) : (term1323 A B P p P' H2 H1 w g) = (term1324 A B P p P' H2 H1 w g).
Proof. exact (MK_COMB (@lem8264308 B P) (@lem8264307 A B P p P' H2 H1 w g)). Qed.
Lemma lem8264310 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w g) = (term1321 A B P p P' H2 H1 g w).
Proof. exact (eq_refl (term1319 A B P p P' H2 H1 w g)). Qed.
Lemma lem8264311 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : ((term1318 A B P p P' H2 H1 w g) = (term1319 A B P p P' H2 H1 w g)) = ((term1319 A B P p P' H2 H1 w g) = (term1321 A B P p P' H2 H1 g w)).
Proof. exact (MK_COMB (@lem8264309 A B P p P' H2 H1 w g) (@lem8264310 A B P p P' H2 H1 g w)). Qed.
Lemma lem8264312 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w g) = (term1321 A B P p P' H2 H1 g w).
Proof. exact (EQ_MP (@lem8264311 A B P p P' H2 H1 g w) (@lem8264303 A B P p P' H2 H1 w g)). Qed.
Lemma lem8264313 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264314 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) (a : P) : (term1325 A B P p P' H2 H1 w g a) = (term1326 A B P p P' H2 H1 g w a).
Proof. exact (MK_COMB (@lem8264312 A B P p P' H2 H1 g w) (@lem8264313 P a)). Qed.
Lemma lem8264316 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264317 {B P : Type'} (f : P -> B) (y : P) : (term1062 B P f y) = (f y).
Proof. exact (@lem8264316 P B f y). Qed.
Lemma lem8264318 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) (a : P) : (term1327 A B P p P' H2 H1 g w a) = (term1326 A B P p P' H2 H1 g w a).
Proof. exact (@lem8264317 B P (term1321 A B P p P' H2 H1 g w) a). Qed.
Lemma lem8264319 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 g w a) = (term1328 A B P p P' H2 H1 g a w).
Proof. exact (eq_refl (term1326 A B P p P' H2 H1 g w a)). Qed.
Lemma lem8264320 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1329 A B P p P' H2 H1 g w) = (term1321 A B P p P' H2 H1 g w).
Proof. exact (fun_ext (fun a : P => @lem8264319 A B P p P' H2 H1 g a w)). Qed.
Lemma lem8264321 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264322 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) (a : P) : (term1327 A B P p P' H2 H1 g w a) = (term1326 A B P p P' H2 H1 g w a).
Proof. exact (MK_COMB (@lem8264320 A B P p P' H2 H1 g w) (@lem8264321 P a)). Qed.
Lemma lem8264323 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8264324 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) (a : P) : (term1330 A B P p P' H2 H1 g w a) = (term1331 A B P p P' H2 H1 g w a).
Proof. exact (MK_COMB (@lem8264323 B) (@lem8264322 A B P p P' H2 H1 g w a)). Qed.
Lemma lem8264325 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 g w a) = (term1328 A B P p P' H2 H1 g a w).
Proof. exact (eq_refl (term1326 A B P p P' H2 H1 g w a)). Qed.
Lemma lem8264326 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : ((term1327 A B P p P' H2 H1 g w a) = (term1326 A B P p P' H2 H1 g w a)) = ((term1326 A B P p P' H2 H1 g w a) = (term1328 A B P p P' H2 H1 g a w)).
Proof. exact (MK_COMB (@lem8264324 A B P p P' H2 H1 g w a) (@lem8264325 A B P p P' H2 H1 g a w)). Qed.
Lemma lem8264327 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 g w a) = (term1328 A B P p P' H2 H1 g a w).
Proof. exact (EQ_MP (@lem8264326 A B P p P' H2 H1 g a w) (@lem8264318 A B P p P' H2 H1 g w a)). Qed.
Lemma lem8264328 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1325 A B P p P' H2 H1 w g a) = (term1328 A B P p P' H2 H1 g a w).
Proof. exact (TRANS (@lem8264314 A B P p P' H2 H1 g w a) (@lem8264327 A B P p P' H2 H1 g a w)). Qed.
Lemma lem8264329 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : ((term1325 A B P p P' H2 H1 w f a) = (term1325 A B P p P' H2 H1 w g a)) = ((term1328 A B P p P' H2 H1 f a w) = (term1328 A B P p P' H2 H1 g a w)).
Proof. exact (MK_COMB (@lem8264299 A B P p P' H2 H1 f a w) (@lem8264328 A B P p P' H2 H1 g a w)). Qed.
Lemma lem8264332 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1334 A B P G2 G1 z f p P' H2 H1 w g a) = (term1335 A B P G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8264266 A B P f p P' G2 G1 g a z) (@lem8264329 A B P f p P' H2 H1 g a w)). Qed.
Lemma lem8264335 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1336 A B P P2 P1 G2 G1 z f p P' H2 H1 w g a) = (term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8264197 A B P f p P' P2 P1 g a) (@lem8264332 A B P G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8264338 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8264339 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1338 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g a) = (term1339 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8264338 A B P lt2 s a f g) (@lem8264335 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8264342 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1340 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g) = (term1341 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (fun_ext (fun a : P => @lem8264339 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8264343 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8264344 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1342 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g) = (term1343 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8264343 P) (@lem8264342 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8264349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1344 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1345 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (fun_ext (fun g : A -> B => @lem8264344 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8264350 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8264351 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1346 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1347 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264350 A B) (@lem8264349 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8264356 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1348 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1349 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8264351 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8264357 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8264358 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1350 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264357 A B) (@lem8264356 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264363 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264364 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1352 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1353 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264363) (@lem8264358 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264378 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264379 {A B P : Type'} (f : type560 A B P) (y : A -> B) : (term147 A B P f y) = (f y).
Proof. exact (@lem8264378 (A -> B) (P -> Prop) f y). Qed.
Lemma lem8264380 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f).
Proof. exact (@lem8264379 A B P (term1259 A B P p P' P2 P1) f). Qed.
Lemma lem8264381 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264382 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) : (term1261 A B P p P' P2 P1) = (term1259 A B P p P' P2 P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8264381 A B P p P' P2 P1 f)). Qed.
Lemma lem8264383 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264384 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f).
Proof. exact (MK_COMB (@lem8264382 A B P p P' P2 P1) (@lem8264383 A B f)). Qed.
Lemma lem8264385 {P : Type'} : (@eq (P -> Prop)) = (@eq (P -> Prop)).
Proof. exact (eq_refl (@eq (P -> Prop))). Qed.
Lemma lem8264386 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1262 A B P p P' P2 P1 f) = (term1263 A B P p P' P2 P1 f).
Proof. exact (MK_COMB (@lem8264385 P) (@lem8264384 A B P p P' P2 P1 f)). Qed.
Lemma lem8264387 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (eq_refl (term1258 A B P p P' P2 P1 f)). Qed.
Lemma lem8264388 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : ((term1257 A B P p P' P2 P1 f) = (term1258 A B P p P' P2 P1 f)) = ((term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f)).
Proof. exact (MK_COMB (@lem8264386 A B P p P' P2 P1 f) (@lem8264387 A B P p P' P2 P1 f)). Qed.
Lemma lem8264389 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1258 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (EQ_MP (@lem8264388 A B P p P' P2 P1 f) (@lem8264380 A B P p P' P2 P1 f)). Qed.
Lemma lem8264390 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264391 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1264 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264389 A B P p P' P2 P1 f) (@lem8264390 P a)). Qed.
Lemma lem8264393 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264394 {P : Type'} (f : P -> Prop) (y : P) : (term156 P f y) = (f y).
Proof. exact (@lem8264393 P Prop f y). Qed.
Lemma lem8264395 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (@lem8264394 P (term1260 A B P p P' P2 P1 f) a). Qed.
Lemma lem8264396 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264397 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) : (term1268 A B P p P' P2 P1 f) = (term1260 A B P p P' P2 P1 f).
Proof. exact (fun_ext (fun a : P => @lem8264396 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264398 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264399 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264397 A B P p P' P2 P1 f) (@lem8264398 P a)). Qed.
Lemma lem8264400 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8264401 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1269 A B P p P' P2 P1 f a) = (term1270 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264400) (@lem8264399 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264402 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1265 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264403 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : ((term1266 A B P p P' P2 P1 f a) = (term1265 A B P p P' P2 P1 f a)) = ((term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a)).
Proof. exact (MK_COMB (@lem8264401 A B P p P' P2 P1 f a) (@lem8264402 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264404 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1265 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (EQ_MP (@lem8264403 A B P p P' P2 P1 f a) (@lem8264395 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264405 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1264 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 f a).
Proof. exact (TRANS (@lem8264391 A B P p P' P2 P1 f a) (@lem8264404 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264406 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8264407 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1354 A B P p P' P2 P1 f a) = (term1355 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264406 B) (@lem8264405 A B P p P' P2 P1 f a)). Qed.
Lemma lem8264409 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264410 {A B P : Type'} (f : type557 A B P) (y : A -> B) : (term1273 A B P f y) = (f y).
Proof. exact (@lem8264409 (A -> B) (P -> A) f y). Qed.
Lemma lem8264411 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f).
Proof. exact (@lem8264410 A B P (term1276 A B P p P' G2 G1 z) f). Qed.
Lemma lem8264412 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264413 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) : (term1278 A B P p P' G2 G1 z) = (term1276 A B P p P' G2 G1 z).
Proof. exact (fun_ext (fun f : A -> B => @lem8264412 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264414 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264415 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f).
Proof. exact (MK_COMB (@lem8264413 A B P p P' G2 G1 z) (@lem8264414 A B f)). Qed.
Lemma lem8264416 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8264417 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) : (term1279 A B P p P' G2 G1 z f) = (term1280 A B P p P' G2 G1 z f).
Proof. exact (MK_COMB (@lem8264416 A P) (@lem8264415 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264418 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (eq_refl (term1275 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264419 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : ((term1274 A B P p P' G2 G1 z f) = (term1275 A B P p P' G2 G1 z f)) = ((term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z)).
Proof. exact (MK_COMB (@lem8264417 A B P p P' G2 G1 z f) (@lem8264418 A B P p P' G2 G1 f z)). Qed.
Lemma lem8264420 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1275 A B P p P' G2 G1 z f) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (EQ_MP (@lem8264419 A B P p P' G2 G1 f z) (@lem8264411 A B P p P' G2 G1 z f)). Qed.
Lemma lem8264421 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264422 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1281 A B P p P' G2 G1 z f a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264420 A B P p P' G2 G1 f z) (@lem8264421 P a)). Qed.
Lemma lem8264424 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264425 {A P : Type'} (f : P -> A) (y : P) : (term1062 A P f y) = (f y).
Proof. exact (@lem8264424 P A f y). Qed.
Lemma lem8264426 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (@lem8264425 A P (term1277 A B P p P' G2 G1 f z) a). Qed.
Lemma lem8264427 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264428 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) : (term1285 A B P p P' G2 G1 f z) = (term1277 A B P p P' G2 G1 f z).
Proof. exact (fun_ext (fun a : P => @lem8264427 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264429 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264430 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264428 A B P p P' G2 G1 f z) (@lem8264429 P a)). Qed.
Lemma lem8264431 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8264432 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (a : P) : (term1286 A B P p P' G2 G1 f z a) = (term1287 A B P p P' G2 G1 f z a).
Proof. exact (MK_COMB (@lem8264431 A) (@lem8264430 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264433 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1282 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264434 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : ((term1283 A B P p P' G2 G1 f z a) = (term1282 A B P p P' G2 G1 f z a)) = ((term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z)).
Proof. exact (MK_COMB (@lem8264432 A B P p P' G2 G1 f z a) (@lem8264433 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264435 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1282 A B P p P' G2 G1 f z a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (EQ_MP (@lem8264434 A B P p P' G2 G1 f a z) (@lem8264426 A B P p P' G2 G1 f z a)). Qed.
Lemma lem8264436 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1281 A B P p P' G2 G1 z f a) = (term1284 A B P p P' G2 G1 f a z).
Proof. exact (TRANS (@lem8264422 A B P p P' G2 G1 f z a) (@lem8264435 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264437 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264438 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1356 A B P p P' G2 G1 z f a) = (term1357 A B P p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264437 A B f) (@lem8264436 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264439 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1358 A B P P2 P1 p P' G2 G1 z f a) = (term1359 A B P P2 P1 p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264407 A B P p P' P2 P1 f a) (@lem8264438 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8264441 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264442 {A B P : Type'} (f : type558 A B P) (y : A -> B) : (term1053 A B P f y) = (f y).
Proof. exact (@lem8264441 (A -> B) (P -> B) f y). Qed.
Lemma lem8264443 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (f : A -> B) : (term1318 A B P p P' H2 H1 w f) = (term1319 A B P p P' H2 H1 w f).
Proof. exact (@lem8264442 A B P (term1320 A B P p P' H2 H1 w) f). Qed.
Lemma lem8264444 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (eq_refl (term1319 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264445 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1322 A B P p P' H2 H1 w) = (term1320 A B P p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8264444 A B P p P' H2 H1 f w)). Qed.
Lemma lem8264446 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8264447 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (f : A -> B) : (term1318 A B P p P' H2 H1 w f) = (term1319 A B P p P' H2 H1 w f).
Proof. exact (MK_COMB (@lem8264445 A B P p P' H2 H1 w) (@lem8264446 A B f)). Qed.
Lemma lem8264448 {B P : Type'} : (@eq (P -> B)) = (@eq (P -> B)).
Proof. exact (eq_refl (@eq (P -> B))). Qed.
Lemma lem8264449 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (f : A -> B) : (term1323 A B P p P' H2 H1 w f) = (term1324 A B P p P' H2 H1 w f).
Proof. exact (MK_COMB (@lem8264448 B P) (@lem8264447 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264450 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (eq_refl (term1319 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264451 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : ((term1318 A B P p P' H2 H1 w f) = (term1319 A B P p P' H2 H1 w f)) = ((term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w)).
Proof. exact (MK_COMB (@lem8264449 A B P p P' H2 H1 w f) (@lem8264450 A B P p P' H2 H1 f w)). Qed.
Lemma lem8264452 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1319 A B P p P' H2 H1 w f) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (EQ_MP (@lem8264451 A B P p P' H2 H1 f w) (@lem8264443 A B P p P' H2 H1 w f)). Qed.
Lemma lem8264453 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264454 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1325 A B P p P' H2 H1 w f a) = (term1326 A B P p P' H2 H1 f w a).
Proof. exact (MK_COMB (@lem8264452 A B P p P' H2 H1 f w) (@lem8264453 P a)). Qed.
Lemma lem8264456 {A B : Type'} (f : A -> B) (y : A) : (term146 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8264457 {B P : Type'} (f : P -> B) (y : P) : (term1062 B P f y) = (f y).
Proof. exact (@lem8264456 P B f y). Qed.
Lemma lem8264458 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1327 A B P p P' H2 H1 f w a) = (term1326 A B P p P' H2 H1 f w a).
Proof. exact (@lem8264457 B P (term1321 A B P p P' H2 H1 f w) a). Qed.
Lemma lem8264459 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1326 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264460 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1329 A B P p P' H2 H1 f w) = (term1321 A B P p P' H2 H1 f w).
Proof. exact (fun_ext (fun a : P => @lem8264459 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264461 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8264462 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1327 A B P p P' H2 H1 f w a) = (term1326 A B P p P' H2 H1 f w a).
Proof. exact (MK_COMB (@lem8264460 A B P p P' H2 H1 f w) (@lem8264461 P a)). Qed.
Lemma lem8264463 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8264464 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (a : P) : (term1330 A B P p P' H2 H1 f w a) = (term1331 A B P p P' H2 H1 f w a).
Proof. exact (MK_COMB (@lem8264463 B) (@lem8264462 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264465 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1326 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264466 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : ((term1327 A B P p P' H2 H1 f w a) = (term1326 A B P p P' H2 H1 f w a)) = ((term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w)).
Proof. exact (MK_COMB (@lem8264464 A B P p P' H2 H1 f w a) (@lem8264465 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264467 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1326 A B P p P' H2 H1 f w a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (EQ_MP (@lem8264466 A B P p P' H2 H1 f a w) (@lem8264458 A B P p P' H2 H1 f w a)). Qed.
Lemma lem8264468 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1325 A B P p P' H2 H1 w f a) = (term1328 A B P p P' H2 H1 f a w).
Proof. exact (TRANS (@lem8264454 A B P p P' H2 H1 f w a) (@lem8264467 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264469 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1360 A B P P2 P1 G2 G1 z p P' H2 H1 w f a) = (term1361 A B P P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8264439 A B P P2 P1 p P' G2 G1 f a z) (@lem8264468 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8264470 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1069 A B P P' h k f a) = (term1069 A B P P' h k f a).
Proof. exact (eq_refl (term1069 A B P P' h k f a)). Qed.
Lemma lem8264471 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : ((term1064 A B P P' h k f a) = (term1360 A B P P2 P1 G2 G1 z p P' H2 H1 w f a)) = ((term1064 A B P P' h k f a) = (term1361 A B P P2 P1 G2 G1 z p P' H2 H1 f a w)).
Proof. exact (MK_COMB (@lem8264470 A B P P' h k f a) (@lem8264469 A B P P2 P1 G2 G1 z p P' H2 H1 f a w)). Qed.
Lemma lem8264474 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1070 A B P p f a) = (term1070 A B P p f a).
Proof. exact (eq_refl (term1070 A B P p f a)). Qed.
Lemma lem8264475 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1362 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f a) = (term1363 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8264474 A B P p f a) (@lem8264471 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w)). Qed.
Lemma lem8264478 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1364 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f) = (term1365 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (fun_ext (fun a : P => @lem8264475 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w)). Qed.
Lemma lem8264479 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8264480 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1366 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f) = (term1367 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8264479 P) (@lem8264478 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8264485 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1368 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1369 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8264480 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8264486 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8264487 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1370 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1371 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264486 A B) (@lem8264485 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264492 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1372 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1373 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264364 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) (@lem8264487 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264495 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1374 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1375 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264104 A B P P2 P1 p P' G2 G1 z lt2 s) (@lem8264492 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264498 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1376 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) = (term1376 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (eq_refl (term1376 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8264499 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1377 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1378 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8264498 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) (@lem8264495 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264502 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1378 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1377 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (SYM (@lem8264499 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264504 (A : Prop) (C : Prop) (B : Prop) (D : Prop) : term17 A C B D.
Proof. exact (@lem8248113 A C B D (@lem7059 A C B D)). Qed.
Lemma lem8264505 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1379 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8264504 (term1380 A B P P1 G1 P2 G2 lt2 s) (term1381 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) (term1307 A B P P2 P1 p P' G2 G1 z lt2 s) (term1373 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264509 (A : Prop) (C : Prop) (B : Prop) (D : Prop) : term17 A C B D.
Proof. exact (@lem8248113 A C B D (@lem7059 A C B D)). Qed.
Lemma lem8264510 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1382 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8264509 (term1383 A B P P1 G1 H1 lt2 s P2 G2 H2) (term1384 A B P k P1 G1 H1 p P' h P2 G2 H2) (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) (term1371 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8264516 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8264517 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1385 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1386 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (@lem8264516 (term1385 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264518 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1386 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1385 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (SYM (@lem8264517 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264519 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1387 A B P P2 P1 p P' G2 G1 z lt2 s) : term1387 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (h1). Qed.
Lemma lem8264522 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s) : term1388 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (h1). Qed.
Lemma lem8264523 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1389 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (fun h0 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s => @lem8264522 A B P P2 P1 p P' G2 G1 z lt2 s h0). Qed.
Lemma lem8264524 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s) : term1389 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (h1). Qed.
Lemma lem8264525 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s) : term1388 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (h1). Qed.
Lemma lem8264526 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s) (h2 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s) : term1388 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8264524 A B P P2 P1 p P' G2 G1 z lt2 s h2 (@lem8264525 A B P P2 P1 p P' G2 G1 z lt2 s h1)). Qed.
Lemma lem8264527 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s) : term1390 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (fun h0 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s => @lem8264526 A B P P2 P1 p P' G2 G1 z lt2 s h1 h0). Qed.
Lemma lem8264528 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s) : term1389 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (h1). Qed.
Lemma lem8264529 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s) (h2 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s) : term1388 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8264527 A B P P2 P1 p P' G2 G1 z lt2 s h1 (@lem8264528 A B P P2 P1 p P' G2 G1 z lt2 s h2)). Qed.
Lemma lem8264530 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s) : term1389 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (fun h0 : term1388 A B P P2 P1 p P' G2 G1 z lt2 s => @lem8264529 A B P P2 P1 p P' G2 G1 z lt2 s h0 h1). Qed.
Lemma lem8264531 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1391 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (fun h0 : term1389 A B P P2 P1 p P' G2 G1 z lt2 s => @lem8264530 A B P P2 P1 p P' G2 G1 z lt2 s h0). Qed.
Lemma lem8264534 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1389 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8264531 A B P P2 P1 p P' G2 G1 z lt2 s (@lem8264523 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264535 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1389 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8264534 A B P P2 P1 p P' G2 G1 z lt2 s). Qed.
Lemma lem8264621 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8264622 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1386 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1392 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (@lem8264621 (term1387 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264624 (t : Prop) : (term304 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8264625 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1392 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1385 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (@lem8264624 (term1385 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264628 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1386 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1385 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (TRANS (@lem8264622 A B P P2 P1 p P' G2 G1 z lt2 s) (@lem8264625 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264679 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (eq_refl (term264 A B P lt2 s p)). Qed.
Lemma lem8264680 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1393 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1394 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264679 A B P lt2 s p) (@lem8264628 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264683 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (eq_refl (term307 A B P p lt2 s P')). Qed.
Lemma lem8264684 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1388 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1395 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264683 A B P p lt2 s P') (@lem8264680 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264687 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1396 A B P P1 p P' G2 G1 z lt2 s) = (term1397 A B P P1 p P' G2 G1 z lt2 s).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8264684 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264688 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8264689 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1398 A B P P1 p P' G2 G1 z lt2 s) = (term1399 A B P P1 p P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264688 A B P) (@lem8264687 A B P P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264694 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1400 A B P p P' G2 G1 z lt2 s) = (term1401 A B P p P' G2 G1 z lt2 s).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8264689 A B P P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264695 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8264696 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1402 A B P p P' G2 G1 z lt2 s) = (term1403 A B P p P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264695 A B P) (@lem8264694 A B P p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264701 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1404 A B P P' G2 G1 z lt2 s) = (term1405 A B P P' G2 G1 z lt2 s).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8264696 A B P p P' G2 G1 z lt2 s)). Qed.
Lemma lem8264702 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8264703 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1406 A B P P' G2 G1 z lt2 s) = (term1407 A B P P' G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264702 A B P) (@lem8264701 A B P P' G2 G1 z lt2 s)). Qed.
Lemma lem8264708 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1408 A B P G2 G1 z lt2 s) = (term1409 A B P G2 G1 z lt2 s).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8264703 A B P P' G2 G1 z lt2 s)). Qed.
Lemma lem8264709 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8264710 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1410 A B P G2 G1 z lt2 s) = (term1411 A B P G2 G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264709 A B P) (@lem8264708 A B P G2 G1 z lt2 s)). Qed.
Lemma lem8264715 {A B P : Type'} (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1412 A B P G1 z lt2 s) = (term1413 A B P G1 z lt2 s).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8264710 A B P G2 G1 z lt2 s)). Qed.
Lemma lem8264716 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8264717 {A B P : Type'} (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1414 A B P G1 z lt2 s) = (term1415 A B P G1 z lt2 s).
Proof. exact (MK_COMB (@lem8264716 A B P) (@lem8264715 A B P G1 z lt2 s)). Qed.
Lemma lem8264722 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) : (term1416 A B P z lt2 s) = (term1417 A B P z lt2 s).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8264717 A B P G1 z lt2 s)). Qed.
Lemma lem8264723 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8264724 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) : (term1418 A B P z lt2 s) = (term1419 A B P z lt2 s).
Proof. exact (MK_COMB (@lem8264723 A B P) (@lem8264722 A B P z lt2 s)). Qed.
Lemma lem8264729 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1420 A B P lt2 s) = (term1421 A B P lt2 s).
Proof. exact (fun_ext (fun z : A => @lem8264724 A B P z lt2 s)). Qed.
Lemma lem8264730 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8264731 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1422 A B P lt2 s) = (term1423 A B P lt2 s).
Proof. exact (MK_COMB (@lem8264730 A) (@lem8264729 A B P lt2 s)). Qed.
Lemma lem8264736 {A B P : Type'} (s : P -> A) : (term1424 A B P s) = (term1425 A B P s).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8264731 A B P lt2 s)). Qed.
Lemma lem8264737 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8264738 {A B P : Type'} (s : P -> A) : (term1426 A B P s) = (term1427 A B P s).
Proof. exact (MK_COMB (@lem8264737 A) (@lem8264736 A B P s)). Qed.
Lemma lem8264743 {A B P : Type'} : (term1428 A B P) = (term1429 A B P).
Proof. exact (fun_ext (fun s : P -> A => @lem8264738 A B P s)). Qed.
Lemma lem8264744 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8264753 {A B P : Type'} : (term1430 A B P) = (term1431 A B P).
Proof. exact (MK_COMB (@lem8264744 A P) (@lem8264743 A B P)). Qed.
Lemma lem8264757 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8264758 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8264759 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1432 A B P p f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8264758) (@lem8264757 A B P p f a h1)). Qed.
Lemma lem8264760 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8264761 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1434 A B P p P' P2 P1 f a) = (term1435 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264759 A B P p f a h1) (@lem8264760 A B P P' P2 P1 f a)). Qed.
Lemma lem8264762 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8264763 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = (term1436 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264761 A B P P' P2 P1 p f a h1) (@lem8264762)). Qed.
Lemma lem8264765 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8264766 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8264765 Prop t1 t2). Qed.
Lemma lem8264767 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1436 A B P P' P2 P1 f a) = False.
Proof. exact (@lem8264766 (term1433 A B P P' P2 P1 f a) False). Qed.
Lemma lem8264768 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = False.
Proof. exact (TRANS (@lem8264763 A B P P' P2 P1 p f a h1) (@lem8264767 A B P P' P2 P1 f a)). Qed.
Lemma lem8264769 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264770 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1272 A B P p P' P2 P1 f a) = (and False).
Proof. exact (MK_COMB (@lem8264769) (@lem8264768 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8264772 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8264773 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8264774 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1437 A B P p f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8264773 A) (@lem8264772 A B P p f a h1)). Qed.
Lemma lem8264775 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8264776 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1439 A B P p P' G2 G1 f a) = (term1440 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8264774 A B P p f a h1) (@lem8264775 A B P P' G2 G1 f a)). Qed.
Lemma lem8264777 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8264778 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = (term1441 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264776 A B P P' G2 G1 p f a h1) (@lem8264777 A z)). Qed.
Lemma lem8264780 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8264781 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8264780 A t1 t2). Qed.
Lemma lem8264782 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1441 A B P P' G2 G1 f a z) = z.
Proof. exact (@lem8264781 A (term1438 A B P P' G2 G1 f a) z). Qed.
Lemma lem8264783 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = z.
Proof. exact (TRANS (@lem8264778 A B P P' G2 G1 z p f a h1) (@lem8264782 A B P P' G2 G1 f a z)). Qed.
Lemma lem8264784 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8264785 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (y : A) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1289 A B P lt2 y p P' G2 G1 f a z) = (lt2 y z).
Proof. exact (MK_COMB (@lem8264784 A lt2 y) (@lem8264783 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8264786 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (y : A) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1291 A B P P2 P1 lt2 y p P' G2 G1 f a z) = (term1442 A lt2 y z).
Proof. exact (MK_COMB (@lem8264770 A B P P' P2 P1 p f a h1) (@lem8264785 A B P P' G2 G1 lt2 y z p f a h1)). Qed.
Lemma lem8264788 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8264789 {A : Type'} (lt2 : type1402 A) (y : A) (z : A) : (term1442 A lt2 y z) = False.
Proof. exact (@lem8264788 (lt2 y z)). Qed.
Lemma lem8264790 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1291 A B P P2 P1 lt2 y p P' G2 G1 f a z) = False.
Proof. exact (TRANS (@lem8264786 A B P P2 P1 P' G2 G1 lt2 y z p f a h1) (@lem8264789 A lt2 y z)). Qed.
Lemma lem8264791 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8264792 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1293 A B P P2 P1 lt2 y p P' G2 G1 f a z) = (imp False).
Proof. exact (MK_COMB (@lem8264791) (@lem8264790 A B P P2 P1 lt2 y P' G2 G1 z p f a h1)). Qed.
Lemma lem8264793 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8264794 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (y : A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1295 A B P P2 P1 p P' G2 G1 f z lt2 y s a) = (term1443 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8264792 A B P P2 P1 lt2 y P' G2 G1 z p f a h1) (@lem8264793 A P lt2 y s a)). Qed.
Lemma lem8264796 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8264797 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1443 A P lt2 y s a) = True.
Proof. exact (@lem8264796 (term341 A P lt2 y s a)). Qed.
Lemma lem8264798 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (y : A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1295 A B P P2 P1 p P' G2 G1 f z lt2 y s a) = True.
Proof. exact (TRANS (@lem8264794 A B P P2 P1 P' G2 G1 z lt2 y s p f a h1) (@lem8264797 A P lt2 y s a)). Qed.
Lemma lem8264799 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1297 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term150 A).
Proof. exact (fun_ext (fun y : A => @lem8264798 A B P P2 P1 P' G2 G1 z lt2 y s p f a h1)). Qed.
Lemma lem8264800 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8264801 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1444 A).
Proof. exact (MK_COMB (@lem8264800 A) (@lem8264799 A B P P2 P1 P' G2 G1 z lt2 s p f a h1)). Qed.
Lemma lem8264803 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8264804 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8264803 A t). Qed.
Lemma lem8264805 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8264804 A True). Qed.
Lemma lem8264806 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = True.
Proof. exact (TRANS (@lem8264801 A B P P2 P1 P' G2 G1 z lt2 s p f a h1) (@lem8264805 A)). Qed.
Lemma lem8264807 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) : term1446 A B P P2 P1 p P' G2 G1 f z lt2 s a.
Proof. exact (fun h0 : (p f a) = False => @lem8264806 A B P P2 P1 P' G2 G1 z lt2 s p f a h0). Qed.
Lemma lem8264809 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8264810 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8264811 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1432 A B P p f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8264810) (@lem8264809 A B P p f a h1)). Qed.
Lemma lem8264812 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8264813 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1434 A B P p P' P2 P1 f a) = (term1447 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264811 A B P p f a h1) (@lem8264812 A B P P' P2 P1 f a)). Qed.
Lemma lem8264814 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8264815 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1448 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264813 A B P P' P2 P1 p f a h1) (@lem8264814)). Qed.
Lemma lem8264817 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8264818 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8264817 Prop t2 t1). Qed.
Lemma lem8264819 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1448 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (@lem8264818 False (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8264820 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (TRANS (@lem8264815 A B P P' P2 P1 p f a h1) (@lem8264819 A B P P' P2 P1 f a)). Qed.
Lemma lem8264821 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264822 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1272 A B P p P' P2 P1 f a) = (term1449 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8264821) (@lem8264820 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8264824 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8264825 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8264826 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1437 A B P p f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8264825 A) (@lem8264824 A B P p f a h1)). Qed.
Lemma lem8264827 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8264828 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1439 A B P p P' G2 G1 f a) = (term1450 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8264826 A B P p f a h1) (@lem8264827 A B P P' G2 G1 f a)). Qed.
Lemma lem8264829 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8264830 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1451 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8264828 A B P P' G2 G1 p f a h1) (@lem8264829 A z)). Qed.
Lemma lem8264832 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8264833 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8264832 A t2 t1). Qed.
Lemma lem8264834 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1451 A B P P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (@lem8264833 A z (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8264835 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (TRANS (@lem8264830 A B P P' G2 G1 z p f a h1) (@lem8264834 A B P z P' G2 G1 f a)). Qed.
Lemma lem8264836 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8264837 {A B P : Type'} (z : A) (lt2 : type1402 A) (y : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1289 A B P lt2 y p P' G2 G1 f a z) = (term1452 A B P lt2 y P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8264836 A lt2 y) (@lem8264835 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8264838 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1291 A B P P2 P1 lt2 y p P' G2 G1 f a z) = (term1453 A B P P2 P1 lt2 y P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8264822 A B P P' P2 P1 p f a h1) (@lem8264837 A B P z lt2 y P' G2 G1 p f a h1)). Qed.
Lemma lem8264841 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8264842 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1293 A B P P2 P1 lt2 y p P' G2 G1 f a z) = (term1454 A B P P2 P1 lt2 y P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8264841) (@lem8264838 A B P z P2 P1 lt2 y P' G2 G1 p f a h1)). Qed.
Lemma lem8264843 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8264844 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (y : A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1295 A B P P2 P1 p P' G2 G1 f z lt2 y s a) = (term1455 A B P P2 P1 P' G2 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8264842 A B P z P2 P1 lt2 y P' G2 G1 p f a h1) (@lem8264843 A P lt2 y s a)). Qed.
Lemma lem8264847 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1297 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1456 A B P P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8264844 A B P z P2 P1 P' G2 G1 lt2 y s p f a h1)). Qed.
Lemma lem8264848 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8264849 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1457 A B P P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8264848 A) (@lem8264847 A B P z P2 P1 P' G2 G1 lt2 s p f a h1)). Qed.
Lemma lem8264854 {A B P : Type'} (p : type560 A B P) (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : term1458 A B P p z P2 P1 P' G2 G1 f lt2 s a.
Proof. exact (fun h0 : (p f a) = True => @lem8264849 A B P z P2 P1 P' G2 G1 lt2 s p f a h0). Qed.
Lemma lem8264855 {A B P : Type'} (p : type560 A B P) (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : term1459 A B P p z P2 P1 P' G2 G1 f lt2 s a.
Proof. exact (conj (@lem8264807 A B P P2 P1 p P' G2 G1 f z lt2 s a) (@lem8264854 A B P p z P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8264857 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8264858 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) : term1461 A B P z P2 P1 P' G2 G1 lt2 s p f a.
Proof. exact (@lem8264857 (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) (term1457 A B P P2 P1 P' G2 G1 f lt2 s a) (p f a) True). Qed.
Lemma lem8264859 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (f : A -> B) (a : P) : (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1462 A B P P2 P1 P' G2 G1 lt2 s p f a).
Proof. exact (@lem8264858 A B P z P2 P1 P' G2 G1 lt2 s p f a (@lem8264855 A B P p z P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8264861 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8264862 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P p f a) = True.
Proof. exact (@lem8264861 (p f a)). Qed.
Lemma lem8264867 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1464 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1464 A B P p P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (eq_refl (term1464 A B P p P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8264868 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1462 A B P P2 P1 P' G2 G1 lt2 s p f a) = (term1465 A B P p P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8264867 A B P p P2 P1 P' G2 G1 f lt2 s a) (@lem8264862 A B P p f a)). Qed.
Lemma lem8264870 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8264871 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1465 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (@lem8264870 (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8264872 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1462 A B P P2 P1 P' G2 G1 lt2 s p f a) = (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (TRANS (@lem8264868 A B P p P2 P1 P' G2 G1 f lt2 s a) (@lem8264871 A B P p P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8264873 {A B P : Type'} (z : A) (p : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (TRANS (@lem8264859 A B P z P2 P1 P' G2 G1 lt2 s p f a) (@lem8264872 A B P p P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8264877 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8264878 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8264879 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1432 A B P P' f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8264878) (@lem8264877 A B P P' f a h1)). Qed.
Lemma lem8264880 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8264881 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1467 A B P P' P2 f a) = (term1468 A B P P2 f a).
Proof. exact (MK_COMB (@lem8264879 A B P P' f a h1) (@lem8264880 A B P P2 f a)). Qed.
Lemma lem8264882 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8264883 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (term1469 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8264881 A B P P2 P' f a h1) (@lem8264882 A B P P1 f a)). Qed.
Lemma lem8264885 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8264886 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8264885 Prop t1 t2). Qed.
Lemma lem8264887 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1469 A B P P2 P1 f a) = (P1 f a).
Proof. exact (@lem8264886 (P2 f a) (P1 f a)). Qed.
Lemma lem8264888 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (P1 f a).
Proof. exact (TRANS (@lem8264883 A B P P2 P1 P' f a h1) (@lem8264887 A B P P2 P1 f a)). Qed.
Lemma lem8264889 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264890 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1449 A B P P' P2 P1 f a) = (term327 A B P P1 f a).
Proof. exact (MK_COMB (@lem8264889) (@lem8264888 A B P P2 P1 P' f a h1)). Qed.
Lemma lem8264892 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8264893 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8264894 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1437 A B P P' f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8264893 A) (@lem8264892 A B P P' f a h1)). Qed.
Lemma lem8264895 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8264896 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1470 A B P P' G2 f a) = (term1471 A B P G2 f a).
Proof. exact (MK_COMB (@lem8264894 A B P P' f a h1) (@lem8264895 A B P G2 f a)). Qed.
Lemma lem8264897 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8264898 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (term1472 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8264896 A B P G2 P' f a h1) (@lem8264897 A B P G1 f a)). Qed.
Lemma lem8264900 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8264901 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8264900 A t1 t2). Qed.
Lemma lem8264902 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1472 A B P G2 G1 f a) = (G1 f a).
Proof. exact (@lem8264901 A (G2 f a) (G1 f a)). Qed.
Lemma lem8264903 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (G1 f a).
Proof. exact (TRANS (@lem8264898 A B P G2 G1 P' f a h1) (@lem8264902 A B P G2 G1 f a)). Qed.
Lemma lem8264904 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8264905 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1452 A B P lt2 y P' G2 G1 f a) = (term1473 A B P lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8264904 A lt2 y) (@lem8264903 A B P G2 G1 P' f a h1)). Qed.
Lemma lem8264906 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1453 A B P P2 P1 lt2 y P' G2 G1 f a) = (term1474 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8264890 A B P P2 P1 P' f a h1) (@lem8264905 A B P G2 lt2 y G1 P' f a h1)). Qed.
Lemma lem8264909 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8264910 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1454 A B P P2 P1 lt2 y P' G2 G1 f a) = (term1475 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8264909) (@lem8264906 A B P P2 G2 P1 lt2 y G1 P' f a h1)). Qed.
Lemma lem8264911 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8264912 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (y : A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1455 A B P P2 P1 P' G2 G1 f lt2 y s a) = (term1476 A B P P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8264910 A B P P2 G2 P1 lt2 y G1 P' f a h1) (@lem8264911 A P lt2 y s a)). Qed.
Lemma lem8264915 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1456 A B P P2 P1 P' G2 G1 f lt2 s a) = (term1477 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8264912 A B P P2 G2 P1 G1 lt2 y s P' f a h1)). Qed.
Lemma lem8264916 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8264917 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1457 A B P P2 P1 P' G2 G1 f lt2 s a) = (term1478 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8264916 A) (@lem8264915 A B P P2 G2 P1 G1 lt2 s P' f a h1)). Qed.
Lemma lem8264922 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8264923 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1479 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8264922 A B P p f a) (@lem8264917 A B P P2 G2 P1 G1 lt2 s P' f a h1)). Qed.
Lemma lem8264926 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : term1480 A B P P2 P' G2 p P1 G1 f lt2 s a.
Proof. exact (fun h0 : (P' f a) = False => @lem8264923 A B P P2 G2 p P1 G1 lt2 s P' f a h0). Qed.
Lemma lem8264928 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8264929 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8264930 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1432 A B P P' f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8264929) (@lem8264928 A B P P' f a h1)). Qed.
Lemma lem8264931 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8264932 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1467 A B P P' P2 f a) = (term1481 A B P P2 f a).
Proof. exact (MK_COMB (@lem8264930 A B P P' f a h1) (@lem8264931 A B P P2 f a)). Qed.
Lemma lem8264933 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8264934 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (term1482 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8264932 A B P P2 P' f a h1) (@lem8264933 A B P P1 f a)). Qed.
Lemma lem8264936 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8264937 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8264936 Prop t2 t1). Qed.
Lemma lem8264938 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) : (term1482 A B P P2 P1 f a) = (P2 f a).
Proof. exact (@lem8264937 (P1 f a) (P2 f a)). Qed.
Lemma lem8264939 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (P2 f a).
Proof. exact (TRANS (@lem8264934 A B P P2 P1 P' f a h1) (@lem8264938 A B P P1 P2 f a)). Qed.
Lemma lem8264940 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8264941 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1449 A B P P' P2 P1 f a) = (term327 A B P P2 f a).
Proof. exact (MK_COMB (@lem8264940) (@lem8264939 A B P P1 P2 P' f a h1)). Qed.
Lemma lem8264943 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8264944 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8264945 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1437 A B P P' f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8264944 A) (@lem8264943 A B P P' f a h1)). Qed.
Lemma lem8264946 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8264947 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1470 A B P P' G2 f a) = (term1483 A B P G2 f a).
Proof. exact (MK_COMB (@lem8264945 A B P P' f a h1) (@lem8264946 A B P G2 f a)). Qed.
Lemma lem8264948 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8264949 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (term1484 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8264947 A B P G2 P' f a h1) (@lem8264948 A B P G1 f a)). Qed.
Lemma lem8264951 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8264952 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8264951 A t2 t1). Qed.
Lemma lem8264953 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1484 A B P G2 G1 f a) = (G2 f a).
Proof. exact (@lem8264952 A (G1 f a) (G2 f a)). Qed.
Lemma lem8264954 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (G2 f a).
Proof. exact (TRANS (@lem8264949 A B P G2 G1 P' f a h1) (@lem8264953 A B P G1 G2 f a)). Qed.
Lemma lem8264955 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8264956 {A B P : Type'} (G1 : type557 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1452 A B P lt2 y P' G2 G1 f a) = (term1473 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8264955 A lt2 y) (@lem8264954 A B P G1 G2 P' f a h1)). Qed.
Lemma lem8264957 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1453 A B P P2 P1 lt2 y P' G2 G1 f a) = (term1474 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8264941 A B P P1 P2 P' f a h1) (@lem8264956 A B P G1 lt2 y G2 P' f a h1)). Qed.
Lemma lem8264960 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8264961 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1454 A B P P2 P1 lt2 y P' G2 G1 f a) = (term1475 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8264960) (@lem8264957 A B P P1 G1 P2 lt2 y G2 P' f a h1)). Qed.
Lemma lem8264962 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8264963 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (y : A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1455 A B P P2 P1 P' G2 G1 f lt2 y s a) = (term1476 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8264961 A B P P1 G1 P2 lt2 y G2 P' f a h1) (@lem8264962 A P lt2 y s a)). Qed.
Lemma lem8264966 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1456 A B P P2 P1 P' G2 G1 f lt2 s a) = (term1477 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8264963 A B P P1 G1 P2 G2 lt2 y s P' f a h1)). Qed.
Lemma lem8264967 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8264968 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1457 A B P P2 P1 P' G2 G1 f lt2 s a) = (term1478 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8264967 A) (@lem8264966 A B P P1 G1 P2 G2 lt2 s P' f a h1)). Qed.
Lemma lem8264973 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8264974 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1479 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8264973 A B P p f a) (@lem8264968 A B P P1 G1 P2 G2 lt2 s P' f a h1)). Qed.
Lemma lem8264977 {A B P : Type'} (P1 : type560 A B P) (P' : type560 A B P) (G1 : type557 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : term1485 A B P P1 P' G1 p P2 G2 f lt2 s a.
Proof. exact (fun h0 : (P' f a) = True => @lem8264974 A B P P1 G1 p P2 G2 lt2 s P' f a h0). Qed.
Lemma lem8264978 {A B P : Type'} (P1 : type560 A B P) (P' : type560 A B P) (G1 : type557 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : term1486 A B P P1 P' G1 p P2 G2 f lt2 s a.
Proof. exact (conj (@lem8264926 A B P P2 P' G2 p P1 G1 f lt2 s a) (@lem8264977 A B P P1 P' G1 p P2 G2 f lt2 s a)). Qed.
Lemma lem8264980 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8264981 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : term1487 A B P P2 G2 P' p P1 G1 f lt2 s a.
Proof. exact (@lem8264980 (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) (term1479 A B P p P2 G2 f lt2 s a) (P' f a) (term1479 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8264996 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (@lem8264981 A B P P2 G2 P' p P1 G1 f lt2 s a (@lem8264978 A B P P1 P' G1 p P2 G2 f lt2 s a)). Qed.
Lemma lem8265005 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P1 G1 f lt2 y s a) = (term1476 A B P P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1476 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8265006 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1477 A B P P1 G1 f lt2 s a) = (term1477 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8265005 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8265007 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265008 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1478 A B P P1 G1 f lt2 s a) = (term1478 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8265007 A) (@lem8265006 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8265013 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8265014 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1479 A B P p P1 G1 f lt2 s a) = (term1479 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8265013 A B P p f a) (@lem8265008 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8265017 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term628 A B P P' f a) = (term628 A B P P' f a).
Proof. exact (eq_refl (term628 A B P P' f a)). Qed.
Lemma lem8265018 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1489 A B P P' p P1 G1 f lt2 s a) = (term1489 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8265017 A B P P' f a) (@lem8265014 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8265027 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P2 G2 f lt2 y s a) = (term1476 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1476 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8265028 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1477 A B P P2 G2 f lt2 s a) = (term1477 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8265027 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8265029 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265030 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1478 A B P P2 G2 f lt2 s a) = (term1478 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8265029 A) (@lem8265028 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8265035 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8265036 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1479 A B P p P2 G2 f lt2 s a) = (term1479 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8265035 A B P p f a) (@lem8265030 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8265041 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term351 A B P P' f a) = (term351 A B P P' f a).
Proof. exact (eq_refl (term351 A B P P' f a)). Qed.
Lemma lem8265042 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1490 A B P P' p P2 G2 f lt2 s a) = (term1490 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8265041 A B P P' f a) (@lem8265036 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8265043 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8265044 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1491 A B P P' p P2 G2 f lt2 s a) = (term1491 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8265043) (@lem8265042 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8265045 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8265044 A B P P' p P2 G2 f lt2 s a) (@lem8265018 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265046 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1492 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1492 A B P p P2 P1 P' G2 G1 f lt2 s a).
Proof. exact (eq_refl (term1492 A B P p P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8265047 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a)) = ((term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a)).
Proof. exact (MK_COMB (@lem8265046 A B P p P2 P1 P' G2 G1 f lt2 s a) (@lem8265045 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265048 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (EQ_MP (@lem8265047 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8264996 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265049 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1493 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1493 A B P P2 P1 p P' G2 G1 f z lt2 s a).
Proof. exact (eq_refl (term1493 A B P P2 P1 p P' G2 G1 f z lt2 s a)). Qed.
Lemma lem8265050 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1466 A B P p P2 P1 P' G2 G1 f lt2 s a)) = ((term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a)).
Proof. exact (MK_COMB (@lem8265049 A B P P2 P1 p P' G2 G1 f z lt2 s a) (@lem8265048 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265051 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1299 A B P P2 P1 p P' G2 G1 f z lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (EQ_MP (@lem8265050 A B P z P2 G2 P' p P1 G1 f lt2 s a) (@lem8264873 A B P z p P2 P1 P' G2 G1 f lt2 s a)). Qed.
Lemma lem8265052 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1301 A B P P2 P1 p P' G2 G1 f z lt2 s) = (term1494 A B P P2 G2 P' p P1 G1 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8265051 A B P z P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265053 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265054 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1303 A B P P2 P1 p P' G2 G1 f z lt2 s) = (term1495 A B P P2 G2 P' p P1 G1 f lt2 s).
Proof. exact (MK_COMB (@lem8265053 P) (@lem8265052 A B P z P2 G2 P' p P1 G1 f lt2 s)). Qed.
Lemma lem8265055 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1305 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1496 A B P P2 G2 P' p P1 G1 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8265054 A B P z P2 G2 P' p P1 G1 f lt2 s)). Qed.
Lemma lem8265056 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265057 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1307 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1497 A B P P2 G2 P' p P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265056 A B) (@lem8265055 A B P z P2 G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265066 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P2 G2 f lt2 y s a) = (term1476 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1476 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8265067 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1477 A B P P2 G2 f lt2 s a) = (term1477 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8265066 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8265068 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265069 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1478 A B P P2 G2 f lt2 s a) = (term1478 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8265068 A) (@lem8265067 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8265070 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1498 A B P P2 G2 f lt2 s) = (term1498 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8265069 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8265071 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265072 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1499 A B P P2 G2 f lt2 s) = (term1499 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8265071 P) (@lem8265070 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8265073 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1500 A B P P2 G2 lt2 s) = (term1500 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8265072 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8265074 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265075 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1254 A B P P2 G2 lt2 s) = (term1254 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8265074 A B) (@lem8265073 A B P P2 G2 lt2 s)). Qed.
Lemma lem8265084 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P1 G1 f lt2 y s a) = (term1476 A B P P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1476 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8265085 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1477 A B P P1 G1 f lt2 s a) = (term1477 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8265084 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8265086 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265087 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1478 A B P P1 G1 f lt2 s a) = (term1478 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8265086 A) (@lem8265085 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8265088 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1498 A B P P1 G1 f lt2 s) = (term1498 A B P P1 G1 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8265087 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8265089 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265090 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1499 A B P P1 G1 f lt2 s) = (term1499 A B P P1 G1 f lt2 s).
Proof. exact (MK_COMB (@lem8265089 P) (@lem8265088 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8265091 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1500 A B P P1 G1 lt2 s) = (term1500 A B P P1 G1 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8265090 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8265092 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265093 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1254 A B P P1 G1 lt2 s) = (term1254 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265092 A B) (@lem8265091 A B P P1 G1 lt2 s)). Qed.
Lemma lem8265094 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8265095 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1006 A B P P1 G1 lt2 s) = (term1006 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265094) (@lem8265093 A B P P1 G1 lt2 s)). Qed.
Lemma lem8265096 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1380 A B P P1 G1 P2 G2 lt2 s) = (term1380 A B P P1 G1 P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8265095 A B P P1 G1 lt2 s) (@lem8265075 A B P P2 G2 lt2 s)). Qed.
Lemma lem8265097 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8265098 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1501 A B P P1 G1 P2 G2 lt2 s) = (term1501 A B P P1 G1 P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8265097) (@lem8265096 A B P P1 G1 P2 G2 lt2 s)). Qed.
Lemma lem8265099 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1385 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1502 A B P P2 G2 P' p P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265098 A B P P1 G1 P2 G2 lt2 s) (@lem8265057 A B P z P2 G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265104 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8265109 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8265110 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265109 A B P lt2 s a f g z)). Qed.
Lemma lem8265111 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265112 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265111 A) (@lem8265110 A B P lt2 s a f g)). Qed.
Lemma lem8265113 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8265114 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265113) (@lem8265112 A B P lt2 s a f g)). Qed.
Lemma lem8265115 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term251 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8265114 A B P lt2 s a f g) (@lem8265104 A B P f p g a)). Qed.
Lemma lem8265116 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term253 A B P lt2 s f p g) = (term253 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8265115 A B P lt2 s f p g a)). Qed.
Lemma lem8265117 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265118 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term255 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265117 P) (@lem8265116 A B P lt2 s f p g)). Qed.
Lemma lem8265119 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term257 A B P lt2 s f p) = (term257 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8265118 A B P lt2 s f p g)). Qed.
Lemma lem8265120 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265121 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term259 A B P lt2 s f p) = (term259 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8265120 A B) (@lem8265119 A B P lt2 s f p)). Qed.
Lemma lem8265122 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term261 A B P lt2 s p) = (term261 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8265121 A B P lt2 s f p)). Qed.
Lemma lem8265123 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265124 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term262 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8265123 A B) (@lem8265122 A B P lt2 s p)). Qed.
Lemma lem8265125 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8265126 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8265125) (@lem8265124 A B P lt2 s p)). Qed.
Lemma lem8265127 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1394 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1503 A B P P2 G2 P' p P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265126 A B P lt2 s p) (@lem8265099 A B P z P2 G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265132 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = ((P' f a) = (P' g a)).
Proof. exact (eq_refl ((P' f a) = (P' g a))). Qed.
Lemma lem8265137 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8265138 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265137 A B P lt2 s a f g z)). Qed.
Lemma lem8265139 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265140 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265139 A) (@lem8265138 A B P lt2 s a f g)). Qed.
Lemma lem8265143 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8265144 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term328 A B P p lt2 s a f g) = (term328 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265143 A B P p g a) (@lem8265140 A B P lt2 s a f g)). Qed.
Lemma lem8265147 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8265148 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term329 A B P p lt2 s a f g) = (term329 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265147 A B P p f a) (@lem8265144 A B P p lt2 s a f g)). Qed.
Lemma lem8265149 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8265150 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term330 A B P p lt2 s a f g) = (term330 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265149) (@lem8265148 A B P p lt2 s a f g)). Qed.
Lemma lem8265151 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term331 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265150 A B P p lt2 s a f g) (@lem8265132 A B P f P' g a)). Qed.
Lemma lem8265152 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term332 A B P p lt2 s f P' g) = (term332 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8265151 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265153 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265154 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term333 A B P p lt2 s f P' g) = (term333 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265153 P) (@lem8265152 A B P p lt2 s f P' g)). Qed.
Lemma lem8265155 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term334 A B P p lt2 s f P') = (term334 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8265154 A B P p lt2 s f P' g)). Qed.
Lemma lem8265156 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265157 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term335 A B P p lt2 s f P') = (term335 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265156 A B) (@lem8265155 A B P p lt2 s f P')). Qed.
Lemma lem8265158 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term336 A B P p lt2 s P') = (term336 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8265157 A B P p lt2 s f P')). Qed.
Lemma lem8265159 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265160 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term137 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265159 A B) (@lem8265158 A B P p lt2 s P')). Qed.
Lemma lem8265161 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8265162 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265161) (@lem8265160 A B P p lt2 s P')). Qed.
Lemma lem8265163 {A B P : Type'} (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1395 A B P P2 P1 p P' G2 G1 z lt2 s) = (term1504 A B P P2 G2 P' p P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265162 A B P p lt2 s P') (@lem8265127 A B P z P2 G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265164 {A B P : Type'} (z : A) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1397 A B P P1 p P' G2 G1 z lt2 s) = (term1505 A B P G2 P' p P1 G1 lt2 s).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8265163 A B P z P2 G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265165 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8265166 {A B P : Type'} (z : A) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1399 A B P P1 p P' G2 G1 z lt2 s) = (term1506 A B P G2 P' p P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265165 A B P) (@lem8265164 A B P z G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265167 {A B P : Type'} (z : A) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1401 A B P p P' G2 G1 z lt2 s) = (term1507 A B P G2 P' p G1 lt2 s).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8265166 A B P z G2 P' p P1 G1 lt2 s)). Qed.
Lemma lem8265168 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8265169 {A B P : Type'} (z : A) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1403 A B P p P' G2 G1 z lt2 s) = (term1508 A B P G2 P' p G1 lt2 s).
Proof. exact (MK_COMB (@lem8265168 A B P) (@lem8265167 A B P z G2 P' p G1 lt2 s)). Qed.
Lemma lem8265170 {A B P : Type'} (z : A) (G2 : type557 A B P) (P' : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1405 A B P P' G2 G1 z lt2 s) = (term1509 A B P G2 P' G1 lt2 s).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8265169 A B P z G2 P' p G1 lt2 s)). Qed.
Lemma lem8265171 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8265172 {A B P : Type'} (z : A) (G2 : type557 A B P) (P' : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1407 A B P P' G2 G1 z lt2 s) = (term1510 A B P G2 P' G1 lt2 s).
Proof. exact (MK_COMB (@lem8265171 A B P) (@lem8265170 A B P z G2 P' G1 lt2 s)). Qed.
Lemma lem8265173 {A B P : Type'} (z : A) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1409 A B P G2 G1 z lt2 s) = (term1511 A B P G2 G1 lt2 s).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8265172 A B P z G2 P' G1 lt2 s)). Qed.
Lemma lem8265174 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8265175 {A B P : Type'} (z : A) (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1411 A B P G2 G1 z lt2 s) = (term1512 A B P G2 G1 lt2 s).
Proof. exact (MK_COMB (@lem8265174 A B P) (@lem8265173 A B P z G2 G1 lt2 s)). Qed.
Lemma lem8265176 {A B P : Type'} (z : A) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1413 A B P G1 z lt2 s) = (term1513 A B P G1 lt2 s).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8265175 A B P z G2 G1 lt2 s)). Qed.
Lemma lem8265177 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8265178 {A B P : Type'} (z : A) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1415 A B P G1 z lt2 s) = (term1514 A B P G1 lt2 s).
Proof. exact (MK_COMB (@lem8265177 A B P) (@lem8265176 A B P z G1 lt2 s)). Qed.
Lemma lem8265179 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) : (term1417 A B P z lt2 s) = (term1515 A B P lt2 s).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8265178 A B P z G1 lt2 s)). Qed.
Lemma lem8265180 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8265181 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) : (term1419 A B P z lt2 s) = (term1516 A B P lt2 s).
Proof. exact (MK_COMB (@lem8265180 A B P) (@lem8265179 A B P z lt2 s)). Qed.
Lemma lem8265182 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1421 A B P lt2 s) = (term1517 A B P lt2 s).
Proof. exact (fun_ext (fun z : A => @lem8265181 A B P z lt2 s)). Qed.
Lemma lem8265183 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8265184 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1423 A B P lt2 s) = (term1518 A B P lt2 s).
Proof. exact (MK_COMB (@lem8265183 A) (@lem8265182 A B P lt2 s)). Qed.
Lemma lem8265185 {A B P : Type'} (s : P -> A) : (term1425 A B P s) = (term1519 A B P s).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8265184 A B P lt2 s)). Qed.
Lemma lem8265186 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8265187 {A B P : Type'} (s : P -> A) : (term1427 A B P s) = (term1520 A B P s).
Proof. exact (MK_COMB (@lem8265186 A) (@lem8265185 A B P s)). Qed.
Lemma lem8265188 {A B P : Type'} : (term1429 A B P) = (term1521 A B P).
Proof. exact (fun_ext (fun s : P -> A => @lem8265187 A B P s)). Qed.
Lemma lem8265189 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8265190 {A B P : Type'} : (term1431 A B P) = (term1522 A B P).
Proof. exact (MK_COMB (@lem8265189 A P) (@lem8265188 A B P)). Qed.
Lemma lem8265191 {A B P : Type'} : (term1430 A B P) = (term1522 A B P).
Proof. exact (TRANS (@lem8264753 A B P) (@lem8265190 A B P)). Qed.
Lemma lem8265205 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8265206 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8265205 A t). Qed.
Lemma lem8265207 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1518 A B P lt2 s) = (term1516 A B P lt2 s).
Proof. exact (@lem8265206 A (term1516 A B P lt2 s)). Qed.
Lemma lem8265398 {A B P : Type'} (s : P -> A) : (term1519 A B P s) = (term1523 A B P s).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8265207 A B P lt2 s)). Qed.
Lemma lem8265399 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8265400 {A B P : Type'} (s : P -> A) : (term1520 A B P s) = (term1524 A B P s).
Proof. exact (MK_COMB (@lem8265399 A) (@lem8265398 A B P s)). Qed.
Lemma lem8265407 {A B P : Type'} : (term1521 A B P) = (term1525 A B P).
Proof. exact (fun_ext (fun s : P -> A => @lem8265400 A B P s)). Qed.
Lemma lem8265408 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8265409 {A B P : Type'} : (term1522 A B P) = (term1526 A B P).
Proof. exact (MK_COMB (@lem8265408 A P) (@lem8265407 A B P)). Qed.
Lemma lem8265416 {A B P : Type'} : (term1430 A B P) = (term1526 A B P).
Proof. exact (TRANS (@lem8265191 A B P) (@lem8265409 A B P)). Qed.
Lemma lem8265417 {A B P : Type'} : (term1526 A B P) = (term1430 A B P).
Proof. exact (SYM (@lem8265416 A B P)). Qed.
Lemma lem8265418 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term137 A B P p lt2 s P'.
Proof. exact (h1). Qed.
Lemma lem8265419 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term262 A B P lt2 s p.
Proof. exact (h1). Qed.
Lemma lem8265420 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1380 A B P P1 G1 P2 G2 lt2 s.
Proof. exact (h1). Qed.
Lemma lem8265422 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8265423 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1527 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (@lem8265422 (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265424 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1527 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1488 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (SYM (@lem8265423 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8265425 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) (h1 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a.
Proof. exact (h1). Qed.
Lemma lem8265434 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term339 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8265435 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8265436 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term345 A B P lt2 s a f g).
Proof. exact (@lem8265435 A (term326 A B P lt2 s a f g)). Qed.
Lemma lem8265437 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8265438 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8265439 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term339 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8265438) (@lem8265437 A B P lt2 s a f g z)). Qed.
Lemma lem8265440 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8265439 A B P lt2 s a f g z) (@lem8265434 A B P lt2 s a f g z)). Qed.
Lemma lem8265441 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term348 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265440 A B P lt2 s a f g z)). Qed.
Lemma lem8265442 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265443 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term345 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265442 A) (@lem8265441 A B P lt2 s a f g)). Qed.
Lemma lem8265444 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8265436 A B P lt2 s a f g) (@lem8265443 A B P lt2 s a f g)). Qed.
Lemma lem8265446 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8265447 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term352 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265446 A B P p g a) (@lem8265444 A B P lt2 s a f g)). Qed.
Lemma lem8265448 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term354 A B P p lt2 s a f g) = (term352 A B P p lt2 s a f g).
Proof. exact (@lem17045 (p g a) (term162 A B P lt2 s a f g)). Qed.
Lemma lem8265449 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term354 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8265448 A B P p lt2 s a f g) (@lem8265447 A B P p lt2 s a f g)). Qed.
Lemma lem8265451 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8265452 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term355 A B P p lt2 s a f g) = (term356 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265451 A B P p f a) (@lem8265449 A B P p lt2 s a f g)). Qed.
Lemma lem8265453 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term357 A B P p lt2 s a f g) = (term355 A B P p lt2 s a f g).
Proof. exact (@lem17045 (p f a) (term328 A B P p lt2 s a f g)). Qed.
Lemma lem8265454 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term357 A B P p lt2 s a f g) = (term356 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8265453 A B P p lt2 s a f g) (@lem8265452 A B P p lt2 s a f g)). Qed.
Lemma lem8265469 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = (term358 A B P f P' g a).
Proof. exact (@lem17784 (P' f a) (P' g a)). Qed.
Lemma lem8265470 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265471 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term359 A B P p lt2 s a f g) = (term360 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265470) (@lem8265454 A B P p lt2 s a f g)). Qed.
Lemma lem8265472 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term361 A B P p lt2 s f P' g a) = (term362 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265471 A B P p lt2 s a f g) (@lem8265469 A B P f P' g a)). Qed.
Lemma lem8265473 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term361 A B P p lt2 s f P' g a).
Proof. exact (@lem17265 (term329 A B P p lt2 s a f g) ((P' f a) = (P' g a))). Qed.
Lemma lem8265474 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term331 A B P p lt2 s f P' g a) = (term362 A B P p lt2 s f P' g a).
Proof. exact (TRANS (@lem8265473 A B P p lt2 s f P' g a) (@lem8265472 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265475 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term332 A B P p lt2 s f P' g) = (term363 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8265474 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265476 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265477 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term333 A B P p lt2 s f P' g) = (term364 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265476 P) (@lem8265475 A B P p lt2 s f P' g)). Qed.
Lemma lem8265478 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term334 A B P p lt2 s f P') = (term365 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8265477 A B P p lt2 s f P' g)). Qed.
Lemma lem8265479 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265480 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term335 A B P p lt2 s f P') = (term366 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265479 A B) (@lem8265478 A B P p lt2 s f P')). Qed.
Lemma lem8265481 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term336 A B P p lt2 s P') = (term367 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8265480 A B P p lt2 s f P')). Qed.
Lemma lem8265482 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265483 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term368 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265482 A B) (@lem8265481 A B P p lt2 s P')). Qed.
Lemma lem8265590 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8265591 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (@lem8265590 A P Q). Qed.
Lemma lem8265592 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term371 A B P p lt2 s a f g) = (term372 A B P p lt2 s a f g).
Proof. exact (@lem8265591 A (term373 A B P p g a) (term349 A B P lt2 s a f g)). Qed.
Lemma lem8265593 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8265594 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term375 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265593 A B P lt2 s a f g z)). Qed.
Lemma lem8265595 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265596 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term376 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265595 A) (@lem8265594 A B P lt2 s a f g)). Qed.
Lemma lem8265597 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8265598 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term371 A B P p lt2 s a f g) = (term353 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265597 A B P p g a) (@lem8265596 A B P lt2 s a f g)). Qed.
Lemma lem8265599 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265600 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term377 A B P p lt2 s a f g) = (term378 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265599) (@lem8265598 A B P p lt2 s a f g)). Qed.
Lemma lem8265601 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8265602 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8265603 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term379 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8265602 A B P p g a) (@lem8265601 A B P lt2 s a f g z)). Qed.
Lemma lem8265604 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term381 A B P p lt2 s a f g) = (term382 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265603 A B P p lt2 s a f g z)). Qed.
Lemma lem8265605 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265606 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term372 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265605 A) (@lem8265604 A B P p lt2 s a f g)). Qed.
Lemma lem8265607 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : ((term371 A B P p lt2 s a f g) = (term372 A B P p lt2 s a f g)) = ((term353 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8265600 A B P p lt2 s a f g) (@lem8265606 A B P p lt2 s a f g)). Qed.
Lemma lem8265608 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term353 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8265607 A B P p lt2 s a f g) (@lem8265592 A B P p lt2 s a f g)). Qed.
Lemma lem8265609 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8265610 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term356 A B P p lt2 s a f g) = (term384 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265609 A B P p f a) (@lem8265608 A B P p lt2 s a f g)). Qed.
Lemma lem8265612 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8265613 {A : Type'} (P : Prop) (Q : A -> Prop) : (term369 A P Q) = (term370 A P Q).
Proof. exact (@lem8265612 A P Q). Qed.
Lemma lem8265614 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term385 A B P p lt2 s a f g) = (term386 A B P p lt2 s a f g).
Proof. exact (@lem8265613 A (term373 A B P p f a) (term382 A B P p lt2 s a f g)). Qed.
Lemma lem8265615 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term387 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term387 A B P p lt2 s a f g z)). Qed.
Lemma lem8265616 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term388 A B P p lt2 s a f g) = (term382 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265615 A B P p lt2 s a f g z)). Qed.
Lemma lem8265617 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265618 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term389 A B P p lt2 s a f g) = (term383 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265617 A) (@lem8265616 A B P p lt2 s a f g)). Qed.
Lemma lem8265619 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8265620 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term385 A B P p lt2 s a f g) = (term384 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265619 A B P p f a) (@lem8265618 A B P p lt2 s a f g)). Qed.
Lemma lem8265621 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265622 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term390 A B P p lt2 s a f g) = (term391 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265621) (@lem8265620 A B P p lt2 s a f g)). Qed.
Lemma lem8265623 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term387 A B P p lt2 s a f g z) = (term380 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term387 A B P p lt2 s a f g z)). Qed.
Lemma lem8265624 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8265625 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term392 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8265624 A B P p f a) (@lem8265623 A B P p lt2 s a f g z)). Qed.
Lemma lem8265626 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term394 A B P p lt2 s a f g) = (term395 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265625 A B P p lt2 s a f g z)). Qed.
Lemma lem8265627 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265628 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term386 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265627 A) (@lem8265626 A B P p lt2 s a f g)). Qed.
Lemma lem8265629 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : ((term385 A B P p lt2 s a f g) = (term386 A B P p lt2 s a f g)) = ((term384 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g)).
Proof. exact (MK_COMB (@lem8265622 A B P p lt2 s a f g) (@lem8265628 A B P p lt2 s a f g)). Qed.
Lemma lem8265630 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term384 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (EQ_MP (@lem8265629 A B P p lt2 s a f g) (@lem8265614 A B P p lt2 s a f g)). Qed.
Lemma lem8265631 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term356 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (TRANS (@lem8265610 A B P p lt2 s a f g) (@lem8265630 A B P p lt2 s a f g)). Qed.
Lemma lem8265632 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265633 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term360 A B P p lt2 s a f g) = (term397 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265632) (@lem8265631 A B P p lt2 s a f g)). Qed.
Lemma lem8265634 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8265635 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term362 A B P p lt2 s f P' g a) = (term398 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265633 A B P p lt2 s a f g) (@lem8265634 A B P f P' g a)). Qed.
Lemma lem8265637 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8265638 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (@lem8265637 A P Q). Qed.
Lemma lem8265639 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term401 A B P p lt2 s f P' g a) = (term402 A B P p lt2 s f P' g a).
Proof. exact (@lem8265638 A (term395 A B P p lt2 s a f g) (term358 A B P f P' g a)). Qed.
Lemma lem8265640 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term403 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term403 A B P p lt2 s a f g z)). Qed.
Lemma lem8265641 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term404 A B P p lt2 s a f g) = (term395 A B P p lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265640 A B P p lt2 s a f g z)). Qed.
Lemma lem8265642 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265643 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term405 A B P p lt2 s a f g) = (term396 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265642 A) (@lem8265641 A B P p lt2 s a f g)). Qed.
Lemma lem8265644 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265645 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term406 A B P p lt2 s a f g) = (term397 A B P p lt2 s a f g).
Proof. exact (MK_COMB (@lem8265644) (@lem8265643 A B P p lt2 s a f g)). Qed.
Lemma lem8265646 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8265647 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term401 A B P p lt2 s f P' g a) = (term398 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265645 A B P p lt2 s a f g) (@lem8265646 A B P f P' g a)). Qed.
Lemma lem8265648 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265649 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term407 A B P p lt2 s f P' g a) = (term408 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265648) (@lem8265647 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265650 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term403 A B P p lt2 s a f g z) = (term393 A B P p lt2 s a f g z).
Proof. exact (eq_refl (term403 A B P p lt2 s a f g z)). Qed.
Lemma lem8265651 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265652 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term409 A B P p lt2 s a f g z) = (term410 A B P p lt2 s a f g z).
Proof. exact (MK_COMB (@lem8265651) (@lem8265650 A B P p lt2 s a f g z)). Qed.
Lemma lem8265653 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f P' g a) = (term358 A B P f P' g a).
Proof. exact (eq_refl (term358 A B P f P' g a)). Qed.
Lemma lem8265654 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term411 A B P p lt2 s z f P' g a) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (MK_COMB (@lem8265652 A B P p lt2 s a f g z) (@lem8265653 A B P f P' g a)). Qed.
Lemma lem8265655 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term413 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (fun_ext (fun z : A => @lem8265654 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8265656 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265657 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term402 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265656 A) (@lem8265655 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265658 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((term401 A B P p lt2 s f P' g a) = (term402 A B P p lt2 s f P' g a)) = ((term398 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a)).
Proof. exact (MK_COMB (@lem8265649 A B P p lt2 s f P' g a) (@lem8265657 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265659 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term398 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (EQ_MP (@lem8265658 A B P p lt2 s f P' g a) (@lem8265639 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265660 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term362 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (TRANS (@lem8265635 A B P p lt2 s f P' g a) (@lem8265659 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265661 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term363 A B P p lt2 s f P' g) = (term416 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8265660 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265662 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265663 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term364 A B P p lt2 s f P' g) = (term417 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265662 P) (@lem8265661 A B P p lt2 s f P' g)). Qed.
Lemma lem8265665 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8265666 {A P : Type'} (P' : type1470 A P) : (term420 A P P') = (term421 A P P').
Proof. exact (@lem8265665 P A P'). Qed.
Lemma lem8265667 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term422 A B P p lt2 s f P' g) = (term423 A B P p lt2 s f P' g).
Proof. exact (@lem8265666 A P (term424 A B P p lt2 s f P' g)). Qed.
Lemma lem8265668 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term425 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term425 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265669 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8265670 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (z : A) : (term426 A B P p lt2 s f P' g a z) = (term427 A B P p lt2 s f P' g a z).
Proof. exact (MK_COMB (@lem8265668 A B P p lt2 s f P' g a) (@lem8265669 A z)). Qed.
Lemma lem8265671 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term427 A B P p lt2 s f P' g a z) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (eq_refl (term427 A B P p lt2 s f P' g a z)). Qed.
Lemma lem8265672 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term426 A B P p lt2 s f P' g a z) = (term412 A B P p lt2 s z f P' g a).
Proof. exact (TRANS (@lem8265670 A B P p lt2 s f P' g a z) (@lem8265671 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8265673 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term428 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (fun_ext (fun z : A => @lem8265672 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8265674 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265675 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term429 A B P p lt2 s f P' g a) = (term415 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8265674 A) (@lem8265673 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265676 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term430 A B P p lt2 s f P' g) = (term416 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8265675 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265677 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265678 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term422 A B P p lt2 s f P' g) = (term417 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265677 P) (@lem8265676 A B P p lt2 s f P' g)). Qed.
Lemma lem8265679 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265680 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term431 A B P p lt2 s f P' g) = (term432 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265679) (@lem8265678 A B P p lt2 s f P' g)). Qed.
Lemma lem8265681 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term425 A B P p lt2 s f P' g a) = (term414 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term425 A B P p lt2 s f P' g a)). Qed.
Lemma lem8265682 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8265683 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term433 A B P p lt2 s f P' g z a) = (term434 A B P p lt2 s f P' g z a).
Proof. exact (MK_COMB (@lem8265681 A B P p lt2 s f P' g a) (@lem8265682 A P z a)). Qed.
Lemma lem8265684 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term434 A B P p lt2 s f P' g z a) = (term435 A B P p lt2 s z f P' g a).
Proof. exact (eq_refl (term434 A B P p lt2 s f P' g z a)). Qed.
Lemma lem8265685 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term433 A B P p lt2 s f P' g z a) = (term435 A B P p lt2 s z f P' g a).
Proof. exact (TRANS (@lem8265683 A B P p lt2 s f P' g z a) (@lem8265684 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8265686 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term436 A B P p lt2 s f P' g z) = (term437 A B P p lt2 s z f P' g).
Proof. exact (fun_ext (fun a : P => @lem8265685 A B P p lt2 s z f P' g a)). Qed.
Lemma lem8265687 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265688 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term438 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (MK_COMB (@lem8265687 P) (@lem8265686 A B P p lt2 s z f P' g)). Qed.
Lemma lem8265689 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term440 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun z : P -> A => @lem8265688 A B P p lt2 s z f P' g)). Qed.
Lemma lem8265690 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8265691 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term423 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265690 A P) (@lem8265689 A B P p lt2 s f P' g)). Qed.
Lemma lem8265692 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : ((term422 A B P p lt2 s f P' g) = (term423 A B P p lt2 s f P' g)) = ((term417 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g)).
Proof. exact (MK_COMB (@lem8265680 A B P p lt2 s f P' g) (@lem8265691 A B P p lt2 s f P' g)). Qed.
Lemma lem8265693 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term417 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (EQ_MP (@lem8265692 A B P p lt2 s f P' g) (@lem8265667 A B P p lt2 s f P' g)). Qed.
Lemma lem8265694 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term364 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (TRANS (@lem8265663 A B P p lt2 s f P' g) (@lem8265693 A B P p lt2 s f P' g)). Qed.
Lemma lem8265695 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term365 A B P p lt2 s f P') = (term443 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8265694 A B P p lt2 s f P' g)). Qed.
Lemma lem8265696 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265697 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term366 A B P p lt2 s f P') = (term444 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265696 A B) (@lem8265695 A B P p lt2 s f P')). Qed.
Lemma lem8265699 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8265700 {A B P : Type'} (P' : type537 A B P) : (term445 A B P P') = (term446 A B P P').
Proof. exact (@lem8265699 (A -> B) (P -> A) P'). Qed.
Lemma lem8265701 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term447 A B P p lt2 s f P') = (term448 A B P p lt2 s f P').
Proof. exact (@lem8265700 A B P (term449 A B P p lt2 s f P')). Qed.
Lemma lem8265702 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term450 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term450 A B P p lt2 s f P' g)). Qed.
Lemma lem8265703 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8265704 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (z : P -> A) : (term451 A B P p lt2 s f P' g z) = (term452 A B P p lt2 s f P' g z).
Proof. exact (MK_COMB (@lem8265702 A B P p lt2 s f P' g) (@lem8265703 A P z)). Qed.
Lemma lem8265705 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term452 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (eq_refl (term452 A B P p lt2 s f P' g z)). Qed.
Lemma lem8265706 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term451 A B P p lt2 s f P' g z) = (term439 A B P p lt2 s z f P' g).
Proof. exact (TRANS (@lem8265704 A B P p lt2 s f P' g z) (@lem8265705 A B P p lt2 s z f P' g)). Qed.
Lemma lem8265707 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term453 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun z : P -> A => @lem8265706 A B P p lt2 s z f P' g)). Qed.
Lemma lem8265708 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8265709 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term454 A B P p lt2 s f P' g) = (term442 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8265708 A P) (@lem8265707 A B P p lt2 s f P' g)). Qed.
Lemma lem8265710 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term455 A B P p lt2 s f P') = (term443 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8265709 A B P p lt2 s f P' g)). Qed.
Lemma lem8265711 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265712 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term447 A B P p lt2 s f P') = (term444 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265711 A B) (@lem8265710 A B P p lt2 s f P')). Qed.
Lemma lem8265713 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265714 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term456 A B P p lt2 s f P') = (term457 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265713) (@lem8265712 A B P p lt2 s f P')). Qed.
Lemma lem8265715 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term450 A B P p lt2 s f P' g) = (term441 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term450 A B P p lt2 s f P' g)). Qed.
Lemma lem8265716 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8265717 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (z : type557 A B P) (g : A -> B) : (term458 A B P p lt2 s f P' z g) = (term459 A B P p lt2 s f P' z g).
Proof. exact (MK_COMB (@lem8265715 A B P p lt2 s f P' g) (@lem8265716 A B P z g)). Qed.
Lemma lem8265718 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term459 A B P p lt2 s f P' z g) = (term460 A B P p lt2 s z f P' g).
Proof. exact (eq_refl (term459 A B P p lt2 s f P' z g)). Qed.
Lemma lem8265719 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term458 A B P p lt2 s f P' z g) = (term460 A B P p lt2 s z f P' g).
Proof. exact (TRANS (@lem8265717 A B P p lt2 s f P' z g) (@lem8265718 A B P p lt2 s z f P' g)). Qed.
Lemma lem8265720 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term461 A B P p lt2 s f P' z) = (term462 A B P p lt2 s z f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8265719 A B P p lt2 s z f P' g)). Qed.
Lemma lem8265721 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265722 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term463 A B P p lt2 s f P' z) = (term464 A B P p lt2 s z f P').
Proof. exact (MK_COMB (@lem8265721 A B) (@lem8265720 A B P p lt2 s z f P')). Qed.
Lemma lem8265723 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term465 A B P p lt2 s f P') = (term466 A B P p lt2 s f P').
Proof. exact (fun_ext (fun z : type557 A B P => @lem8265722 A B P p lt2 s z f P')). Qed.
Lemma lem8265724 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8265725 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term448 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265724 A B P) (@lem8265723 A B P p lt2 s f P')). Qed.
Lemma lem8265726 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : ((term447 A B P p lt2 s f P') = (term448 A B P p lt2 s f P')) = ((term444 A B P p lt2 s f P') = (term467 A B P p lt2 s f P')).
Proof. exact (MK_COMB (@lem8265714 A B P p lt2 s f P') (@lem8265725 A B P p lt2 s f P')). Qed.
Lemma lem8265727 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term444 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (EQ_MP (@lem8265726 A B P p lt2 s f P') (@lem8265701 A B P p lt2 s f P')). Qed.
Lemma lem8265728 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term366 A B P p lt2 s f P') = (term467 A B P p lt2 s f P').
Proof. exact (TRANS (@lem8265697 A B P p lt2 s f P') (@lem8265727 A B P p lt2 s f P')). Qed.
Lemma lem8265729 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term367 A B P p lt2 s P') = (term468 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8265728 A B P p lt2 s f P')). Qed.
Lemma lem8265730 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265731 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term368 A B P p lt2 s P') = (term469 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265730 A B) (@lem8265729 A B P p lt2 s P')). Qed.
Lemma lem8265733 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8265734 {A B P : Type'} (P' : type495 A B P) : (term470 A B P P') = (term471 A B P P').
Proof. exact (@lem8265733 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8265735 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term472 A B P p lt2 s P') = (term473 A B P p lt2 s P').
Proof. exact (@lem8265734 A B P (term474 A B P p lt2 s P')). Qed.
Lemma lem8265736 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term475 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (eq_refl (term475 A B P p lt2 s P' f)). Qed.
Lemma lem8265737 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8265738 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (z : type557 A B P) : (term476 A B P p lt2 s P' f z) = (term477 A B P p lt2 s f P' z).
Proof. exact (MK_COMB (@lem8265736 A B P p lt2 s f P') (@lem8265737 A B P z)). Qed.
Lemma lem8265739 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term477 A B P p lt2 s f P' z) = (term464 A B P p lt2 s z f P').
Proof. exact (eq_refl (term477 A B P p lt2 s f P' z)). Qed.
Lemma lem8265740 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (P' : type560 A B P) : (term476 A B P p lt2 s P' f z) = (term464 A B P p lt2 s z f P').
Proof. exact (TRANS (@lem8265738 A B P p lt2 s f P' z) (@lem8265739 A B P p lt2 s z f P')). Qed.
Lemma lem8265741 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term478 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (fun_ext (fun z : type557 A B P => @lem8265740 A B P p lt2 s z f P')). Qed.
Lemma lem8265742 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8265743 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term479 A B P p lt2 s P' f) = (term467 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8265742 A B P) (@lem8265741 A B P p lt2 s f P')). Qed.
Lemma lem8265744 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term480 A B P p lt2 s P') = (term468 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8265743 A B P p lt2 s f P')). Qed.
Lemma lem8265745 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265746 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term472 A B P p lt2 s P') = (term469 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265745 A B) (@lem8265744 A B P p lt2 s P')). Qed.
Lemma lem8265747 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265748 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term481 A B P p lt2 s P') = (term482 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265747) (@lem8265746 A B P p lt2 s P')). Qed.
Lemma lem8265749 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term475 A B P p lt2 s P' f) = (term466 A B P p lt2 s f P').
Proof. exact (eq_refl (term475 A B P p lt2 s P' f)). Qed.
Lemma lem8265750 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8265751 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (z : type518 A B P) (f : A -> B) : (term483 A B P p lt2 s P' z f) = (term484 A B P p lt2 s P' z f).
Proof. exact (MK_COMB (@lem8265749 A B P p lt2 s f P') (@lem8265750 A B P z f)). Qed.
Lemma lem8265752 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term484 A B P p lt2 s P' z f) = (term485 A B P p lt2 s z f P').
Proof. exact (eq_refl (term484 A B P p lt2 s P' z f)). Qed.
Lemma lem8265753 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P' : type560 A B P) : (term483 A B P p lt2 s P' z f) = (term485 A B P p lt2 s z f P').
Proof. exact (TRANS (@lem8265751 A B P p lt2 s P' z f) (@lem8265752 A B P p lt2 s z f P')). Qed.
Lemma lem8265754 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P' : type560 A B P) : (term486 A B P p lt2 s P' z) = (term487 A B P p lt2 s z P').
Proof. exact (fun_ext (fun f : A -> B => @lem8265753 A B P p lt2 s z f P')). Qed.
Lemma lem8265755 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265756 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P' : type560 A B P) : (term488 A B P p lt2 s P' z) = (term489 A B P p lt2 s z P').
Proof. exact (MK_COMB (@lem8265755 A B) (@lem8265754 A B P p lt2 s z P')). Qed.
Lemma lem8265757 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term490 A B P p lt2 s P') = (term491 A B P p lt2 s P').
Proof. exact (fun_ext (fun z : type518 A B P => @lem8265756 A B P p lt2 s z P')). Qed.
Lemma lem8265758 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8265759 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term473 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8265758 A B P) (@lem8265757 A B P p lt2 s P')). Qed.
Lemma lem8265760 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : ((term472 A B P p lt2 s P') = (term473 A B P p lt2 s P')) = ((term469 A B P p lt2 s P') = (term492 A B P p lt2 s P')).
Proof. exact (MK_COMB (@lem8265748 A B P p lt2 s P') (@lem8265759 A B P p lt2 s P')). Qed.
Lemma lem8265761 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term469 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (EQ_MP (@lem8265760 A B P p lt2 s P') (@lem8265735 A B P p lt2 s P')). Qed.
Lemma lem8265763 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term368 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (TRANS (@lem8265731 A B P p lt2 s P') (@lem8265761 A B P p lt2 s P')). Qed.
Lemma lem8265764 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term137 A B P p lt2 s P') = (term492 A B P p lt2 s P').
Proof. exact (TRANS (@lem8265483 A B P p lt2 s P') (@lem8265763 A B P p lt2 s P')). Qed.
Lemma lem8265765 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term492 A B P p lt2 s P'.
Proof. exact (EQ_MP (@lem8265764 A B P p lt2 s P') (@lem8265418 A B P p lt2 s P' h1)). Qed.
Lemma lem8265772 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term339 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8265773 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8265774 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term345 A B P lt2 s a f g).
Proof. exact (@lem8265773 A (term326 A B P lt2 s a f g)). Qed.
Lemma lem8265775 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8265776 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8265777 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term339 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8265776) (@lem8265775 A B P lt2 s a f g z)). Qed.
Lemma lem8265778 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term347 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8265777 A B P lt2 s a f g z) (@lem8265772 A B P lt2 s a f g z)). Qed.
Lemma lem8265779 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term348 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265778 A B P lt2 s a f g z)). Qed.
Lemma lem8265780 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265781 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term345 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265780 A) (@lem8265779 A B P lt2 s a f g)). Qed.
Lemma lem8265782 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term344 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8265774 A B P lt2 s a f g) (@lem8265781 A B P lt2 s a f g)). Qed.
Lemma lem8265797 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = (term358 A B P f p g a).
Proof. exact (@lem17784 (p f a) (p g a)). Qed.
Lemma lem8265798 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265799 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term493 A B P lt2 s a f g) = (term494 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265798) (@lem8265782 A B P lt2 s a f g)). Qed.
Lemma lem8265800 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term495 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8265799 A B P lt2 s a f g) (@lem8265797 A B P f p g a)). Qed.
Lemma lem8265801 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term495 A B P lt2 s f p g a).
Proof. exact (@lem17265 (term162 A B P lt2 s a f g) ((p f a) = (p g a))). Qed.
Lemma lem8265802 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term251 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (TRANS (@lem8265801 A B P lt2 s f p g a) (@lem8265800 A B P lt2 s f p g a)). Qed.
Lemma lem8265803 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term253 A B P lt2 s f p g) = (term497 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8265802 A B P lt2 s f p g a)). Qed.
Lemma lem8265804 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265805 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term255 A B P lt2 s f p g) = (term498 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265804 P) (@lem8265803 A B P lt2 s f p g)). Qed.
Lemma lem8265806 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term257 A B P lt2 s f p) = (term499 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8265805 A B P lt2 s f p g)). Qed.
Lemma lem8265807 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265808 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term259 A B P lt2 s f p) = (term500 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8265807 A B) (@lem8265806 A B P lt2 s f p)). Qed.
Lemma lem8265809 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term261 A B P lt2 s p) = (term501 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8265808 A B P lt2 s f p)). Qed.
Lemma lem8265810 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265811 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term502 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8265810 A B) (@lem8265809 A B P lt2 s p)). Qed.
Lemma lem8265918 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8265919 {A : Type'} (P : A -> Prop) (Q : Prop) : (term399 A P Q) = (term400 A P Q).
Proof. exact (@lem8265918 A P Q). Qed.
Lemma lem8265920 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term503 A B P lt2 s f p g a) = (term504 A B P lt2 s f p g a).
Proof. exact (@lem8265919 A (term349 A B P lt2 s a f g) (term358 A B P f p g a)). Qed.
Lemma lem8265921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8265922 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term375 A B P lt2 s a f g) = (term349 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8265921 A B P lt2 s a f g z)). Qed.
Lemma lem8265923 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265924 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term376 A B P lt2 s a f g) = (term350 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265923 A) (@lem8265922 A B P lt2 s a f g)). Qed.
Lemma lem8265925 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265926 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term505 A B P lt2 s a f g) = (term494 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8265925) (@lem8265924 A B P lt2 s a f g)). Qed.
Lemma lem8265927 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term358 A B P f p g a).
Proof. exact (eq_refl (term358 A B P f p g a)). Qed.
Lemma lem8265928 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term503 A B P lt2 s f p g a) = (term496 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8265926 A B P lt2 s a f g) (@lem8265927 A B P f p g a)). Qed.
Lemma lem8265929 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265930 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term506 A B P lt2 s f p g a) = (term507 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8265929) (@lem8265928 A B P lt2 s f p g a)). Qed.
Lemma lem8265931 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term374 A B P lt2 s a f g z) = (term340 A B P lt2 s a f g z).
Proof. exact (eq_refl (term374 A B P lt2 s a f g z)). Qed.
Lemma lem8265932 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8265933 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term508 A B P lt2 s a f g z) = (term509 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8265932) (@lem8265931 A B P lt2 s a f g z)). Qed.
Lemma lem8265934 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term358 A B P f p g a) = (term358 A B P f p g a).
Proof. exact (eq_refl (term358 A B P f p g a)). Qed.
Lemma lem8265935 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term510 A B P lt2 s z f p g a) = (term511 A B P lt2 s z f p g a).
Proof. exact (MK_COMB (@lem8265933 A B P lt2 s a f g z) (@lem8265934 A B P f p g a)). Qed.
Lemma lem8265936 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term512 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8265935 A B P lt2 s z f p g a)). Qed.
Lemma lem8265937 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265938 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term504 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8265937 A) (@lem8265936 A B P lt2 s f p g a)). Qed.
Lemma lem8265939 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((term503 A B P lt2 s f p g a) = (term504 A B P lt2 s f p g a)) = ((term496 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a)).
Proof. exact (MK_COMB (@lem8265930 A B P lt2 s f p g a) (@lem8265938 A B P lt2 s f p g a)). Qed.
Lemma lem8265940 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term496 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (EQ_MP (@lem8265939 A B P lt2 s f p g a) (@lem8265920 A B P lt2 s f p g a)). Qed.
Lemma lem8265941 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term497 A B P lt2 s f p g) = (term515 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8265940 A B P lt2 s f p g a)). Qed.
Lemma lem8265942 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265943 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term498 A B P lt2 s f p g) = (term516 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265942 P) (@lem8265941 A B P lt2 s f p g)). Qed.
Lemma lem8265945 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8265946 {A P : Type'} (P' : type1470 A P) : (term420 A P P') = (term421 A P P').
Proof. exact (@lem8265945 P A P'). Qed.
Lemma lem8265947 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term517 A B P lt2 s f p g) = (term518 A B P lt2 s f p g).
Proof. exact (@lem8265946 A P (term519 A B P lt2 s f p g)). Qed.
Lemma lem8265948 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term520 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (eq_refl (term520 A B P lt2 s f p g a)). Qed.
Lemma lem8265949 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8265950 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (z : A) : (term521 A B P lt2 s f p g a z) = (term522 A B P lt2 s f p g a z).
Proof. exact (MK_COMB (@lem8265948 A B P lt2 s f p g a) (@lem8265949 A z)). Qed.
Lemma lem8265951 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term522 A B P lt2 s f p g a z) = (term511 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term522 A B P lt2 s f p g a z)). Qed.
Lemma lem8265952 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term521 A B P lt2 s f p g a z) = (term511 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8265950 A B P lt2 s f p g a z) (@lem8265951 A B P lt2 s z f p g a)). Qed.
Lemma lem8265953 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term523 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (fun_ext (fun z : A => @lem8265952 A B P lt2 s z f p g a)). Qed.
Lemma lem8265954 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8265955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term524 A B P lt2 s f p g a) = (term514 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8265954 A) (@lem8265953 A B P lt2 s f p g a)). Qed.
Lemma lem8265956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term525 A B P lt2 s f p g) = (term515 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8265955 A B P lt2 s f p g a)). Qed.
Lemma lem8265957 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term517 A B P lt2 s f p g) = (term516 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265957 P) (@lem8265956 A B P lt2 s f p g)). Qed.
Lemma lem8265959 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265960 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term526 A B P lt2 s f p g) = (term527 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265959) (@lem8265958 A B P lt2 s f p g)). Qed.
Lemma lem8265961 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term520 A B P lt2 s f p g a) = (term513 A B P lt2 s f p g a).
Proof. exact (eq_refl (term520 A B P lt2 s f p g a)). Qed.
Lemma lem8265962 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8265963 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) (a : P) : (term528 A B P lt2 s f p g z a) = (term529 A B P lt2 s f p g z a).
Proof. exact (MK_COMB (@lem8265961 A B P lt2 s f p g a) (@lem8265962 A P z a)). Qed.
Lemma lem8265964 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term529 A B P lt2 s f p g z a) = (term530 A B P lt2 s z f p g a).
Proof. exact (eq_refl (term529 A B P lt2 s f p g z a)). Qed.
Lemma lem8265965 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term528 A B P lt2 s f p g z a) = (term530 A B P lt2 s z f p g a).
Proof. exact (TRANS (@lem8265963 A B P lt2 s f p g z a) (@lem8265964 A B P lt2 s z f p g a)). Qed.
Lemma lem8265966 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term531 A B P lt2 s f p g z) = (term532 A B P lt2 s z f p g).
Proof. exact (fun_ext (fun a : P => @lem8265965 A B P lt2 s z f p g a)). Qed.
Lemma lem8265967 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8265968 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term533 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (MK_COMB (@lem8265967 P) (@lem8265966 A B P lt2 s z f p g)). Qed.
Lemma lem8265969 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term535 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8265968 A B P lt2 s z f p g)). Qed.
Lemma lem8265970 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8265971 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term518 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265970 A P) (@lem8265969 A B P lt2 s f p g)). Qed.
Lemma lem8265972 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : ((term517 A B P lt2 s f p g) = (term518 A B P lt2 s f p g)) = ((term516 A B P lt2 s f p g) = (term537 A B P lt2 s f p g)).
Proof. exact (MK_COMB (@lem8265960 A B P lt2 s f p g) (@lem8265971 A B P lt2 s f p g)). Qed.
Lemma lem8265973 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term516 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (EQ_MP (@lem8265972 A B P lt2 s f p g) (@lem8265947 A B P lt2 s f p g)). Qed.
Lemma lem8265974 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term498 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (TRANS (@lem8265943 A B P lt2 s f p g) (@lem8265973 A B P lt2 s f p g)). Qed.
Lemma lem8265975 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term499 A B P lt2 s f p) = (term538 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8265974 A B P lt2 s f p g)). Qed.
Lemma lem8265976 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265977 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term500 A B P lt2 s f p) = (term539 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8265976 A B) (@lem8265975 A B P lt2 s f p)). Qed.
Lemma lem8265979 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8265980 {A B P : Type'} (P' : type537 A B P) : (term445 A B P P') = (term446 A B P P').
Proof. exact (@lem8265979 (A -> B) (P -> A) P'). Qed.
Lemma lem8265981 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term540 A B P lt2 s f p) = (term541 A B P lt2 s f p).
Proof. exact (@lem8265980 A B P (term542 A B P lt2 s f p)). Qed.
Lemma lem8265982 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term543 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (eq_refl (term543 A B P lt2 s f p g)). Qed.
Lemma lem8265983 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8265984 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (z : P -> A) : (term544 A B P lt2 s f p g z) = (term545 A B P lt2 s f p g z).
Proof. exact (MK_COMB (@lem8265982 A B P lt2 s f p g) (@lem8265983 A P z)). Qed.
Lemma lem8265985 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term545 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (eq_refl (term545 A B P lt2 s f p g z)). Qed.
Lemma lem8265986 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term544 A B P lt2 s f p g z) = (term534 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8265984 A B P lt2 s f p g z) (@lem8265985 A B P lt2 s z f p g)). Qed.
Lemma lem8265987 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term546 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (fun_ext (fun z : P -> A => @lem8265986 A B P lt2 s z f p g)). Qed.
Lemma lem8265988 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8265989 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term547 A B P lt2 s f p g) = (term537 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8265988 A P) (@lem8265987 A B P lt2 s f p g)). Qed.
Lemma lem8265990 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term548 A B P lt2 s f p) = (term538 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8265989 A B P lt2 s f p g)). Qed.
Lemma lem8265991 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8265992 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term540 A B P lt2 s f p) = (term539 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8265991 A B) (@lem8265990 A B P lt2 s f p)). Qed.
Lemma lem8265993 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8265994 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term549 A B P lt2 s f p) = (term550 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8265993) (@lem8265992 A B P lt2 s f p)). Qed.
Lemma lem8265995 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term543 A B P lt2 s f p g) = (term536 A B P lt2 s f p g).
Proof. exact (eq_refl (term543 A B P lt2 s f p g)). Qed.
Lemma lem8265996 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8265997 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) (g : A -> B) : (term551 A B P lt2 s f p z g) = (term552 A B P lt2 s f p z g).
Proof. exact (MK_COMB (@lem8265995 A B P lt2 s f p g) (@lem8265996 A B P z g)). Qed.
Lemma lem8265998 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term552 A B P lt2 s f p z g) = (term553 A B P lt2 s z f p g).
Proof. exact (eq_refl (term552 A B P lt2 s f p z g)). Qed.
Lemma lem8265999 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term551 A B P lt2 s f p z g) = (term553 A B P lt2 s z f p g).
Proof. exact (TRANS (@lem8265997 A B P lt2 s f p z g) (@lem8265998 A B P lt2 s z f p g)). Qed.
Lemma lem8266000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term554 A B P lt2 s f p z) = (term555 A B P lt2 s z f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8265999 A B P lt2 s z f p g)). Qed.
Lemma lem8266001 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266002 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term556 A B P lt2 s f p z) = (term557 A B P lt2 s z f p).
Proof. exact (MK_COMB (@lem8266001 A B) (@lem8266000 A B P lt2 s z f p)). Qed.
Lemma lem8266003 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term558 A B P lt2 s f p) = (term559 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8266002 A B P lt2 s z f p)). Qed.
Lemma lem8266004 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8266005 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term541 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8266004 A B P) (@lem8266003 A B P lt2 s f p)). Qed.
Lemma lem8266006 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : ((term540 A B P lt2 s f p) = (term541 A B P lt2 s f p)) = ((term539 A B P lt2 s f p) = (term560 A B P lt2 s f p)).
Proof. exact (MK_COMB (@lem8265994 A B P lt2 s f p) (@lem8266005 A B P lt2 s f p)). Qed.
Lemma lem8266007 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term539 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (EQ_MP (@lem8266006 A B P lt2 s f p) (@lem8265981 A B P lt2 s f p)). Qed.
Lemma lem8266008 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term500 A B P lt2 s f p) = (term560 A B P lt2 s f p).
Proof. exact (TRANS (@lem8265977 A B P lt2 s f p) (@lem8266007 A B P lt2 s f p)). Qed.
Lemma lem8266009 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term501 A B P lt2 s p) = (term561 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8266008 A B P lt2 s f p)). Qed.
Lemma lem8266010 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266011 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term502 A B P lt2 s p) = (term562 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8266010 A B) (@lem8266009 A B P lt2 s p)). Qed.
Lemma lem8266013 {A B : Type'} (P : type1413 A B) : (term418 A B P) = (term419 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8266014 {A B P : Type'} (P' : type495 A B P) : (term470 A B P P') = (term471 A B P P').
Proof. exact (@lem8266013 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8266015 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term563 A B P lt2 s p) = (term564 A B P lt2 s p).
Proof. exact (@lem8266014 A B P (term565 A B P lt2 s p)). Qed.
Lemma lem8266016 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term566 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (eq_refl (term566 A B P lt2 s p f)). Qed.
Lemma lem8266017 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8266018 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (z : type557 A B P) : (term567 A B P lt2 s p f z) = (term568 A B P lt2 s f p z).
Proof. exact (MK_COMB (@lem8266016 A B P lt2 s f p) (@lem8266017 A B P z)). Qed.
Lemma lem8266019 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term568 A B P lt2 s f p z) = (term557 A B P lt2 s z f p).
Proof. exact (eq_refl (term568 A B P lt2 s f p z)). Qed.
Lemma lem8266020 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (f : A -> B) (p : type560 A B P) : (term567 A B P lt2 s p f z) = (term557 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8266018 A B P lt2 s f p z) (@lem8266019 A B P lt2 s z f p)). Qed.
Lemma lem8266021 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term569 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8266020 A B P lt2 s z f p)). Qed.
Lemma lem8266022 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8266023 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term570 A B P lt2 s p f) = (term560 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8266022 A B P) (@lem8266021 A B P lt2 s f p)). Qed.
Lemma lem8266024 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term571 A B P lt2 s p) = (term561 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8266023 A B P lt2 s f p)). Qed.
Lemma lem8266025 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266026 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term563 A B P lt2 s p) = (term562 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8266025 A B) (@lem8266024 A B P lt2 s p)). Qed.
Lemma lem8266027 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8266028 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term572 A B P lt2 s p) = (term573 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8266027) (@lem8266026 A B P lt2 s p)). Qed.
Lemma lem8266029 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term566 A B P lt2 s p f) = (term559 A B P lt2 s f p).
Proof. exact (eq_refl (term566 A B P lt2 s p f)). Qed.
Lemma lem8266030 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8266031 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (z : type518 A B P) (f : A -> B) : (term574 A B P lt2 s p z f) = (term575 A B P lt2 s p z f).
Proof. exact (MK_COMB (@lem8266029 A B P lt2 s f p) (@lem8266030 A B P z f)). Qed.
Lemma lem8266032 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term575 A B P lt2 s p z f) = (term576 A B P lt2 s z f p).
Proof. exact (eq_refl (term575 A B P lt2 s p z f)). Qed.
Lemma lem8266033 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (p : type560 A B P) : (term574 A B P lt2 s p z f) = (term576 A B P lt2 s z f p).
Proof. exact (TRANS (@lem8266031 A B P lt2 s p z f) (@lem8266032 A B P lt2 s z f p)). Qed.
Lemma lem8266034 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term577 A B P lt2 s p z) = (term578 A B P lt2 s z p).
Proof. exact (fun_ext (fun f : A -> B => @lem8266033 A B P lt2 s z f p)). Qed.
Lemma lem8266035 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266036 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (p : type560 A B P) : (term579 A B P lt2 s p z) = (term580 A B P lt2 s z p).
Proof. exact (MK_COMB (@lem8266035 A B) (@lem8266034 A B P lt2 s z p)). Qed.
Lemma lem8266037 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term581 A B P lt2 s p) = (term582 A B P lt2 s p).
Proof. exact (fun_ext (fun z : type518 A B P => @lem8266036 A B P lt2 s z p)). Qed.
Lemma lem8266038 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8266039 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term564 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8266038 A B P) (@lem8266037 A B P lt2 s p)). Qed.
Lemma lem8266040 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : ((term563 A B P lt2 s p) = (term564 A B P lt2 s p)) = ((term562 A B P lt2 s p) = (term583 A B P lt2 s p)).
Proof. exact (MK_COMB (@lem8266028 A B P lt2 s p) (@lem8266039 A B P lt2 s p)). Qed.
Lemma lem8266041 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term562 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (EQ_MP (@lem8266040 A B P lt2 s p) (@lem8266015 A B P lt2 s p)). Qed.
Lemma lem8266043 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term502 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (TRANS (@lem8266011 A B P lt2 s p) (@lem8266041 A B P lt2 s p)). Qed.
Lemma lem8266044 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term262 A B P lt2 s p) = (term583 A B P lt2 s p).
Proof. exact (TRANS (@lem8265811 A B P lt2 s p) (@lem8266043 A B P lt2 s p)). Qed.
Lemma lem8266045 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h1 : term262 A B P lt2 s p) : term583 A B P lt2 s p.
Proof. exact (EQ_MP (@lem8266044 A B P lt2 s p) (@lem8265419 A B P lt2 s p h1)). Qed.
Lemma lem8266052 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1529 A B P P1 lt2 y G1 f a) = (term1530 A B P P1 lt2 y G1 f a).
Proof. exact (@lem17045 (P1 f a) (term1473 A B P lt2 y G1 f a)). Qed.
Lemma lem8266053 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8266054 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266055 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1531 A B P P1 lt2 y G1 f a) = (term1532 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266054) (@lem8266052 A B P P1 lt2 y G1 f a)). Qed.
Lemma lem8266056 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1533 A B P P1 G1 f lt2 y s a) = (term1534 A B P P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266055 A B P P1 lt2 y G1 f a) (@lem8266053 A P lt2 y s a)). Qed.
Lemma lem8266057 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P1 G1 f lt2 y s a) = (term1533 A B P P1 G1 f lt2 y s a).
Proof. exact (@lem17265 (term1474 A B P P1 lt2 y G1 f a) (term341 A P lt2 y s a)). Qed.
Lemma lem8266058 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P1 G1 f lt2 y s a) = (term1534 A B P P1 G1 f lt2 y s a).
Proof. exact (TRANS (@lem8266057 A B P P1 G1 f lt2 y s a) (@lem8266056 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266059 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1477 A B P P1 G1 f lt2 s a) = (term1535 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266058 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266060 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8266061 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1478 A B P P1 G1 f lt2 s a) = (term1536 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266060 A) (@lem8266059 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266062 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1498 A B P P1 G1 f lt2 s) = (term1537 A B P P1 G1 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8266061 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266063 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8266064 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1499 A B P P1 G1 f lt2 s) = (term1538 A B P P1 G1 f lt2 s).
Proof. exact (MK_COMB (@lem8266063 P) (@lem8266062 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8266065 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1500 A B P P1 G1 lt2 s) = (term1539 A B P P1 G1 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8266064 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8266066 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266067 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1254 A B P P1 G1 lt2 s) = (term1540 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8266066 A B) (@lem8266065 A B P P1 G1 lt2 s)). Qed.
Lemma lem8266074 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1529 A B P P2 lt2 y G2 f a) = (term1530 A B P P2 lt2 y G2 f a).
Proof. exact (@lem17045 (P2 f a) (term1473 A B P lt2 y G2 f a)). Qed.
Lemma lem8266075 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term341 A P lt2 y s a).
Proof. exact (eq_refl (term341 A P lt2 y s a)). Qed.
Lemma lem8266076 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266077 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1531 A B P P2 lt2 y G2 f a) = (term1532 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266076) (@lem8266074 A B P P2 lt2 y G2 f a)). Qed.
Lemma lem8266078 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1533 A B P P2 G2 f lt2 y s a) = (term1534 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266077 A B P P2 lt2 y G2 f a) (@lem8266075 A P lt2 y s a)). Qed.
Lemma lem8266079 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P2 G2 f lt2 y s a) = (term1533 A B P P2 G2 f lt2 y s a).
Proof. exact (@lem17265 (term1474 A B P P2 lt2 y G2 f a) (term341 A P lt2 y s a)). Qed.
Lemma lem8266080 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1476 A B P P2 G2 f lt2 y s a) = (term1534 A B P P2 G2 f lt2 y s a).
Proof. exact (TRANS (@lem8266079 A B P P2 G2 f lt2 y s a) (@lem8266078 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266081 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1477 A B P P2 G2 f lt2 s a) = (term1535 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266080 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266082 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8266083 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1478 A B P P2 G2 f lt2 s a) = (term1536 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266082 A) (@lem8266081 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266084 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1498 A B P P2 G2 f lt2 s) = (term1537 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8266083 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266085 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8266086 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1499 A B P P2 G2 f lt2 s) = (term1538 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8266085 P) (@lem8266084 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8266087 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1500 A B P P2 G2 lt2 s) = (term1539 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8266086 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8266088 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266089 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1254 A B P P2 G2 lt2 s) = (term1540 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8266088 A B) (@lem8266087 A B P P2 G2 lt2 s)). Qed.
Lemma lem8266090 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266091 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1006 A B P P1 G1 lt2 s) = (term1541 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8266090) (@lem8266067 A B P P1 G1 lt2 s)). Qed.
Lemma lem8266208 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1380 A B P P1 G1 P2 G2 lt2 s) = (term1542 A B P P1 G1 P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8266091 A B P P1 G1 lt2 s) (@lem8266089 A B P P2 G2 lt2 s)). Qed.
Lemma lem8266209 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1542 A B P P1 G1 P2 G2 lt2 s.
Proof. exact (EQ_MP (@lem8266208 A B P P1 G1 P2 G2 lt2 s) (@lem8265420 A B P P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8266212 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term587 A B P P' f a) = (P' f a).
Proof. exact (@lem16933 (P' f a)). Qed.
Lemma lem8266215 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term587 A B P p f a) = (p f a).
Proof. exact (@lem16933 (p f a)). Qed.
Lemma lem8266226 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1543 A B P P2 G2 f lt2 y s a) = (term1544 A B P P2 G2 f lt2 y s a).
Proof. exact (@lem17362 (term1474 A B P P2 lt2 y G2 f a) (term341 A P lt2 y s a)). Qed.
Lemma lem8266227 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8266228 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1545 A B P P2 G2 f lt2 s a) = (term1546 A B P P2 G2 f lt2 s a).
Proof. exact (@lem8266227 A (term1477 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266229 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1547 A B P P2 G2 f lt2 s a y) = (term1476 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1547 A B P P2 G2 f lt2 s a y)). Qed.
Lemma lem8266230 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266231 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1548 A B P P2 G2 f lt2 s a y) = (term1543 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266230) (@lem8266229 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266232 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1548 A B P P2 G2 f lt2 s a y) = (term1544 A B P P2 G2 f lt2 y s a).
Proof. exact (TRANS (@lem8266231 A B P P2 G2 f lt2 y s a) (@lem8266226 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266233 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1549 A B P P2 G2 f lt2 s a) = (term1550 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266232 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266234 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266235 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1546 A B P P2 G2 f lt2 s a) = (term1551 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266234 A) (@lem8266233 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266236 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1545 A B P P2 G2 f lt2 s a) = (term1551 A B P P2 G2 f lt2 s a).
Proof. exact (TRANS (@lem8266228 A B P P2 G2 f lt2 s a) (@lem8266235 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266237 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266238 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1552 A B P p f a) = (term327 A B P p f a).
Proof. exact (MK_COMB (@lem8266237) (@lem8266215 A B P p f a)). Qed.
Lemma lem8266239 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1553 A B P p P2 G2 f lt2 s a) = (term1554 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266238 A B P p f a) (@lem8266236 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266240 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1555 A B P p P2 G2 f lt2 s a) = (term1553 A B P p P2 G2 f lt2 s a).
Proof. exact (@lem17160 (term373 A B P p f a) (term1478 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266241 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1555 A B P p P2 G2 f lt2 s a) = (term1554 A B P p P2 G2 f lt2 s a).
Proof. exact (TRANS (@lem8266240 A B P p P2 G2 f lt2 s a) (@lem8266239 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266242 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266243 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1552 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (MK_COMB (@lem8266242) (@lem8266212 A B P P' f a)). Qed.
Lemma lem8266244 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1556 A B P P' p P2 G2 f lt2 s a) = (term1557 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266243 A B P P' f a) (@lem8266241 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266245 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1558 A B P P' p P2 G2 f lt2 s a) = (term1556 A B P P' p P2 G2 f lt2 s a).
Proof. exact (@lem17160 (term373 A B P P' f a) (term1479 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266246 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1558 A B P P' p P2 G2 f lt2 s a) = (term1557 A B P P' p P2 G2 f lt2 s a).
Proof. exact (TRANS (@lem8266245 A B P P' p P2 G2 f lt2 s a) (@lem8266244 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266250 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term587 A B P p f a) = (p f a).
Proof. exact (@lem16933 (p f a)). Qed.
Lemma lem8266261 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1543 A B P P1 G1 f lt2 y s a) = (term1544 A B P P1 G1 f lt2 y s a).
Proof. exact (@lem17362 (term1474 A B P P1 lt2 y G1 f a) (term341 A P lt2 y s a)). Qed.
Lemma lem8266262 {A : Type'} (P : A -> Prop) : (term342 A P) = (term343 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8266263 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1545 A B P P1 G1 f lt2 s a) = (term1546 A B P P1 G1 f lt2 s a).
Proof. exact (@lem8266262 A (term1477 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266264 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1547 A B P P1 G1 f lt2 s a y) = (term1476 A B P P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1547 A B P P1 G1 f lt2 s a y)). Qed.
Lemma lem8266265 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266266 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1548 A B P P1 G1 f lt2 s a y) = (term1543 A B P P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266265) (@lem8266264 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266267 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1548 A B P P1 G1 f lt2 s a y) = (term1544 A B P P1 G1 f lt2 y s a).
Proof. exact (TRANS (@lem8266266 A B P P1 G1 f lt2 y s a) (@lem8266261 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266268 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1549 A B P P1 G1 f lt2 s a) = (term1550 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266267 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266269 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266270 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1546 A B P P1 G1 f lt2 s a) = (term1551 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266269 A) (@lem8266268 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266271 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1545 A B P P1 G1 f lt2 s a) = (term1551 A B P P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266263 A B P P1 G1 f lt2 s a) (@lem8266270 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266272 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266273 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1552 A B P p f a) = (term327 A B P p f a).
Proof. exact (MK_COMB (@lem8266272) (@lem8266250 A B P p f a)). Qed.
Lemma lem8266274 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1553 A B P p P1 G1 f lt2 s a) = (term1554 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266273 A B P p f a) (@lem8266271 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266275 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1555 A B P p P1 G1 f lt2 s a) = (term1553 A B P p P1 G1 f lt2 s a).
Proof. exact (@lem17160 (term373 A B P p f a) (term1478 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266276 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1555 A B P p P1 G1 f lt2 s a) = (term1554 A B P p P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266275 A B P p P1 G1 f lt2 s a) (@lem8266274 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266278 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8266279 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1560 A B P P' p P1 G1 f lt2 s a) = (term1561 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266278 A B P P' f a) (@lem8266276 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266280 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1562 A B P P' p P1 G1 f lt2 s a) = (term1560 A B P P' p P1 G1 f lt2 s a).
Proof. exact (@lem17160 (P' f a) (term1479 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266281 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1562 A B P P' p P1 G1 f lt2 s a) = (term1561 A B P P' p P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266280 A B P P' p P1 G1 f lt2 s a) (@lem8266279 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266282 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266283 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1563 A B P P' p P2 G2 f lt2 s a) = (term1564 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266282) (@lem8266246 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266284 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1565 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1566 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266283 A B P P' p P2 G2 f lt2 s a) (@lem8266281 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266285 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1565 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (@lem17045 (term1490 A B P P' p P2 G2 f lt2 s a) (term1489 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266286 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1566 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266285 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8266284 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266385 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8266386 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (@lem8266385 A P Q). Qed.
Lemma lem8266387 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1569 A B P p P2 G2 f lt2 s a) = (term1570 A B P p P2 G2 f lt2 s a).
Proof. exact (@lem8266386 A (p f a) (term1550 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266388 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1571 A B P P2 G2 f lt2 s a y) = (term1544 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1571 A B P P2 G2 f lt2 s a y)). Qed.
Lemma lem8266389 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1572 A B P P2 G2 f lt2 s a) = (term1550 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266388 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266390 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266391 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1573 A B P P2 G2 f lt2 s a) = (term1551 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266390 A) (@lem8266389 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266392 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8266393 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1569 A B P p P2 G2 f lt2 s a) = (term1554 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266392 A B P p f a) (@lem8266391 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266394 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8266395 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1574 A B P p P2 G2 f lt2 s a) = (term1575 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266394) (@lem8266393 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266396 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1571 A B P P2 G2 f lt2 s a y) = (term1544 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1571 A B P P2 G2 f lt2 s a y)). Qed.
Lemma lem8266397 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8266398 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1576 A B P p P2 G2 f lt2 s a y) = (term1577 A B P p P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266397 A B P p f a) (@lem8266396 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266399 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1578 A B P p P2 G2 f lt2 s a) = (term1579 A B P p P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266398 A B P p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266400 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266401 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1570 A B P p P2 G2 f lt2 s a) = (term1580 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266400 A) (@lem8266399 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266402 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1569 A B P p P2 G2 f lt2 s a) = (term1570 A B P p P2 G2 f lt2 s a)) = ((term1554 A B P p P2 G2 f lt2 s a) = (term1580 A B P p P2 G2 f lt2 s a)).
Proof. exact (MK_COMB (@lem8266395 A B P p P2 G2 f lt2 s a) (@lem8266401 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266403 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1554 A B P p P2 G2 f lt2 s a) = (term1580 A B P p P2 G2 f lt2 s a).
Proof. exact (EQ_MP (@lem8266402 A B P p P2 G2 f lt2 s a) (@lem8266387 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266404 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8266405 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1557 A B P P' p P2 G2 f lt2 s a) = (term1581 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266404 A B P P' f a) (@lem8266403 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266407 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8266408 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (@lem8266407 A P Q). Qed.
Lemma lem8266409 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1582 A B P P' p P2 G2 f lt2 s a) = (term1583 A B P P' p P2 G2 f lt2 s a).
Proof. exact (@lem8266408 A (P' f a) (term1579 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266410 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1584 A B P p P2 G2 f lt2 s a y) = (term1577 A B P p P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1584 A B P p P2 G2 f lt2 s a y)). Qed.
Lemma lem8266411 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1585 A B P p P2 G2 f lt2 s a) = (term1579 A B P p P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266410 A B P p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266412 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266413 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1586 A B P p P2 G2 f lt2 s a) = (term1580 A B P p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266412 A) (@lem8266411 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266414 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8266415 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1582 A B P P' p P2 G2 f lt2 s a) = (term1581 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266414 A B P P' f a) (@lem8266413 A B P p P2 G2 f lt2 s a)). Qed.
Lemma lem8266416 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8266417 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1587 A B P P' p P2 G2 f lt2 s a) = (term1588 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266416) (@lem8266415 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266418 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1584 A B P p P2 G2 f lt2 s a y) = (term1577 A B P p P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1584 A B P p P2 G2 f lt2 s a y)). Qed.
Lemma lem8266419 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8266420 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1589 A B P P' p P2 G2 f lt2 s a y) = (term1590 A B P P' p P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266419 A B P P' f a) (@lem8266418 A B P p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266421 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1591 A B P P' p P2 G2 f lt2 s a) = (term1592 A B P P' p P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266420 A B P P' p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266422 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266423 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1583 A B P P' p P2 G2 f lt2 s a) = (term1593 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266422 A) (@lem8266421 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266424 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1582 A B P P' p P2 G2 f lt2 s a) = (term1583 A B P P' p P2 G2 f lt2 s a)) = ((term1581 A B P P' p P2 G2 f lt2 s a) = (term1593 A B P P' p P2 G2 f lt2 s a)).
Proof. exact (MK_COMB (@lem8266417 A B P P' p P2 G2 f lt2 s a) (@lem8266423 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266425 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1581 A B P P' p P2 G2 f lt2 s a) = (term1593 A B P P' p P2 G2 f lt2 s a).
Proof. exact (EQ_MP (@lem8266424 A B P P' p P2 G2 f lt2 s a) (@lem8266409 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266426 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1557 A B P P' p P2 G2 f lt2 s a) = (term1593 A B P P' p P2 G2 f lt2 s a).
Proof. exact (TRANS (@lem8266405 A B P P' p P2 G2 f lt2 s a) (@lem8266425 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266427 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266428 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1564 A B P P' p P2 G2 f lt2 s a) = (term1594 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266427) (@lem8266426 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266430 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8266431 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (@lem8266430 A P Q). Qed.
Lemma lem8266432 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1569 A B P p P1 G1 f lt2 s a) = (term1570 A B P p P1 G1 f lt2 s a).
Proof. exact (@lem8266431 A (p f a) (term1550 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266433 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1571 A B P P1 G1 f lt2 s a y) = (term1544 A B P P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1571 A B P P1 G1 f lt2 s a y)). Qed.
Lemma lem8266434 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1572 A B P P1 G1 f lt2 s a) = (term1550 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266433 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266435 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266436 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1573 A B P P1 G1 f lt2 s a) = (term1551 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266435 A) (@lem8266434 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266437 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8266438 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1569 A B P p P1 G1 f lt2 s a) = (term1554 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266437 A B P p f a) (@lem8266436 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266439 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8266440 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1574 A B P p P1 G1 f lt2 s a) = (term1575 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266439) (@lem8266438 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266441 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1571 A B P P1 G1 f lt2 s a y) = (term1544 A B P P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1571 A B P P1 G1 f lt2 s a y)). Qed.
Lemma lem8266442 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8266443 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1576 A B P p P1 G1 f lt2 s a y) = (term1577 A B P p P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266442 A B P p f a) (@lem8266441 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266444 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1578 A B P p P1 G1 f lt2 s a) = (term1579 A B P p P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266443 A B P p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266445 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266446 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1570 A B P p P1 G1 f lt2 s a) = (term1580 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266445 A) (@lem8266444 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266447 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1569 A B P p P1 G1 f lt2 s a) = (term1570 A B P p P1 G1 f lt2 s a)) = ((term1554 A B P p P1 G1 f lt2 s a) = (term1580 A B P p P1 G1 f lt2 s a)).
Proof. exact (MK_COMB (@lem8266440 A B P p P1 G1 f lt2 s a) (@lem8266446 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266448 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1554 A B P p P1 G1 f lt2 s a) = (term1580 A B P p P1 G1 f lt2 s a).
Proof. exact (EQ_MP (@lem8266447 A B P p P1 G1 f lt2 s a) (@lem8266432 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266449 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8266450 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1561 A B P P' p P1 G1 f lt2 s a) = (term1595 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266449 A B P P' f a) (@lem8266448 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266452 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8266453 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (@lem8266452 A P Q). Qed.
Lemma lem8266454 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1596 A B P P' p P1 G1 f lt2 s a) = (term1597 A B P P' p P1 G1 f lt2 s a).
Proof. exact (@lem8266453 A (term373 A B P P' f a) (term1579 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266455 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1584 A B P p P1 G1 f lt2 s a y) = (term1577 A B P p P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1584 A B P p P1 G1 f lt2 s a y)). Qed.
Lemma lem8266456 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1585 A B P p P1 G1 f lt2 s a) = (term1579 A B P p P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266455 A B P p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266457 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266458 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1586 A B P p P1 G1 f lt2 s a) = (term1580 A B P p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266457 A) (@lem8266456 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266459 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8266460 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1596 A B P P' p P1 G1 f lt2 s a) = (term1595 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266459 A B P P' f a) (@lem8266458 A B P p P1 G1 f lt2 s a)). Qed.
Lemma lem8266461 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8266462 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1598 A B P P' p P1 G1 f lt2 s a) = (term1599 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266461) (@lem8266460 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266463 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1584 A B P p P1 G1 f lt2 s a y) = (term1577 A B P p P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1584 A B P p P1 G1 f lt2 s a y)). Qed.
Lemma lem8266464 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8266465 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1600 A B P P' p P1 G1 f lt2 s a y) = (term1601 A B P P' p P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266464 A B P P' f a) (@lem8266463 A B P p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266466 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1602 A B P P' p P1 G1 f lt2 s a) = (term1603 A B P P' p P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266465 A B P P' p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266467 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266468 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1597 A B P P' p P1 G1 f lt2 s a) = (term1604 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266467 A) (@lem8266466 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266469 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1596 A B P P' p P1 G1 f lt2 s a) = (term1597 A B P P' p P1 G1 f lt2 s a)) = ((term1595 A B P P' p P1 G1 f lt2 s a) = (term1604 A B P P' p P1 G1 f lt2 s a)).
Proof. exact (MK_COMB (@lem8266462 A B P P' p P1 G1 f lt2 s a) (@lem8266468 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266470 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1595 A B P P' p P1 G1 f lt2 s a) = (term1604 A B P P' p P1 G1 f lt2 s a).
Proof. exact (EQ_MP (@lem8266469 A B P P' p P1 G1 f lt2 s a) (@lem8266454 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266471 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1561 A B P P' p P1 G1 f lt2 s a) = (term1604 A B P P' p P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266450 A B P P' p P1 G1 f lt2 s a) (@lem8266470 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266472 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1566 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1605 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266428 A B P P' p P2 G2 f lt2 s a) (@lem8266471 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266474 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8266475 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (@lem8266474 A P Q). Qed.
Lemma lem8266476 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1608 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1609 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (@lem8266475 A (term1592 A B P P' p P2 G2 f lt2 s a) (term1603 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266477 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1610 A B P P' p P2 G2 f lt2 s a y) = (term1590 A B P P' p P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1610 A B P P' p P2 G2 f lt2 s a y)). Qed.
Lemma lem8266478 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1611 A B P P' p P2 G2 f lt2 s a) = (term1592 A B P P' p P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266477 A B P P' p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266479 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266480 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1612 A B P P' p P2 G2 f lt2 s a) = (term1593 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266479 A) (@lem8266478 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266481 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266482 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1613 A B P P' p P2 G2 f lt2 s a) = (term1594 A B P P' p P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266481) (@lem8266480 A B P P' p P2 G2 f lt2 s a)). Qed.
Lemma lem8266483 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1614 A B P P' p P1 G1 f lt2 s a y) = (term1601 A B P P' p P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1614 A B P P' p P1 G1 f lt2 s a y)). Qed.
Lemma lem8266484 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1615 A B P P' p P1 G1 f lt2 s a) = (term1603 A B P P' p P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266483 A B P P' p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266485 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266486 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1616 A B P P' p P1 G1 f lt2 s a) = (term1604 A B P P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266485 A) (@lem8266484 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266487 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1608 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1605 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266482 A B P P' p P2 G2 f lt2 s a) (@lem8266486 A B P P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266488 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8266489 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1617 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1618 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266488) (@lem8266487 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266490 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1610 A B P P' p P2 G2 f lt2 s a y) = (term1590 A B P P' p P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1610 A B P P' p P2 G2 f lt2 s a y)). Qed.
Lemma lem8266491 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266492 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1619 A B P P' p P2 G2 f lt2 s a y) = (term1620 A B P P' p P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266491) (@lem8266490 A B P P' p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266493 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1614 A B P P' p P1 G1 f lt2 s a y) = (term1601 A B P P' p P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1614 A B P P' p P1 G1 f lt2 s a y)). Qed.
Lemma lem8266494 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1621 A B P P2 G2 P' p P1 G1 f lt2 s a y) = (term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266492 A B P P' p P2 G2 f lt2 y s a) (@lem8266493 A B P P' p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266495 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1623 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1624 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266494 A B P P2 G2 P' p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266496 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8266497 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1609 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1625 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266496 A) (@lem8266495 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266498 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : ((term1608 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1609 A B P P2 G2 P' p P1 G1 f lt2 s a)) = ((term1605 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1625 A B P P2 G2 P' p P1 G1 f lt2 s a)).
Proof. exact (MK_COMB (@lem8266489 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8266497 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266499 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1605 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1625 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (EQ_MP (@lem8266498 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8266476 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266501 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1566 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1625 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266472 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8266499 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266502 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) = (term1625 A B P P2 G2 P' p P1 G1 f lt2 s a).
Proof. exact (TRANS (@lem8266286 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8266501 A B P P2 G2 P' p P1 G1 f lt2 s a)). Qed.
Lemma lem8266503 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) (h1 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) : term1625 A B P P2 G2 P' p P1 G1 f lt2 s a.
Proof. exact (EQ_MP (@lem8266502 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8265425 A B P P2 G2 P' p P1 G1 f lt2 s a h1)). Qed.
Lemma lem8266504 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a) : term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a.
Proof. exact (h1). Qed.
Lemma lem8266513 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266514 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266513 P A f x). Qed.
Lemma lem8266516 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8266514 A P s a). Qed.
Lemma lem8266517 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266518 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term604 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266517 A lt2 y) (@lem8266516 A P s a)). Qed.
Lemma lem8266520 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266521 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266520 A (A -> Prop) f x). Qed.
Lemma lem8266522 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266521 A lt2 y). Qed.
Lemma lem8266523 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8266524 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term605 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266522 A lt2 y) (@lem8266523 A P s a)). Qed.
Lemma lem8266526 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266527 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266526 A Prop f x). Qed.
Lemma lem8266528 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term605 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (@lem8266527 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8266529 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266524 A P lt2 y s a) (@lem8266528 A P lt2 y s a)). Qed.
Lemma lem8266530 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266518 A P lt2 y s a) (@lem8266529 A P lt2 y s a)). Qed.
Lemma lem8266531 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266540 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266541 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8266540 (A -> B) (P -> A) f x). Qed.
Lemma lem8266542 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (@I ((A -> B) -> P -> A) G2 f).
Proof. exact (@lem8266541 A B P G2 f). Qed.
Lemma lem8266543 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266544 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (@I ((A -> B) -> P -> A) G2 f a).
Proof. exact (MK_COMB (@lem8266542 A B P G2 f) (@lem8266543 P a)). Qed.
Lemma lem8266546 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266547 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266546 P A f x). Qed.
Lemma lem8266548 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G2 f a) = (term1626 A B P G2 f a).
Proof. exact (@lem8266547 A P (@I ((A -> B) -> P -> A) G2 f) a). Qed.
Lemma lem8266550 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (term1626 A B P G2 f a).
Proof. exact (TRANS (@lem8266544 A B P G2 f a) (@lem8266548 A B P G2 f a)). Qed.
Lemma lem8266551 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266552 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G2 f a) = (term1627 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266551 A lt2 y) (@lem8266550 A B P G2 f a)). Qed.
Lemma lem8266554 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266555 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266554 A (A -> Prop) f x). Qed.
Lemma lem8266556 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266555 A lt2 y). Qed.
Lemma lem8266557 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (term1626 A B P G2 f a) = (term1626 A B P G2 f a).
Proof. exact (eq_refl (term1626 A B P G2 f a)). Qed.
Lemma lem8266558 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G2 f a) = (term1628 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266556 A lt2 y) (@lem8266557 A B P G2 f a)). Qed.
Lemma lem8266560 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266561 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266560 A Prop f x). Qed.
Lemma lem8266562 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1628 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (@lem8266561 A (@I (A -> A -> Prop) lt2 y) (term1626 A B P G2 f a)). Qed.
Lemma lem8266563 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (TRANS (@lem8266558 A B P lt2 y G2 f a) (@lem8266562 A B P lt2 y G2 f a)). Qed.
Lemma lem8266564 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (TRANS (@lem8266552 A B P lt2 y G2 f a) (@lem8266563 A B P lt2 y G2 f a)). Qed.
Lemma lem8266565 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1630 A B P lt2 y G2 f a) = (term1631 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266531) (@lem8266564 A B P lt2 y G2 f a)). Qed.
Lemma lem8266566 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266573 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266574 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266573 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266575 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8266574 A B P P2 f). Qed.
Lemma lem8266576 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266577 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (@I ((A -> B) -> P -> Prop) P2 f a).
Proof. exact (MK_COMB (@lem8266575 A B P P2 f) (@lem8266576 P a)). Qed.
Lemma lem8266579 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266580 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266579 P Prop f x). Qed.
Lemma lem8266581 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 f a) = (term614 A B P P2 f a).
Proof. exact (@lem8266580 P (@I ((A -> B) -> P -> Prop) P2 f) a). Qed.
Lemma lem8266583 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (term614 A B P P2 f a).
Proof. exact (TRANS (@lem8266577 A B P P2 f a) (@lem8266581 A B P P2 f a)). Qed.
Lemma lem8266584 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P2 f a) = (term615 A B P P2 f a).
Proof. exact (MK_COMB (@lem8266566) (@lem8266583 A B P P2 f a)). Qed.
Lemma lem8266585 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266586 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term351 A B P P2 f a) = (term618 A B P P2 f a).
Proof. exact (MK_COMB (@lem8266585) (@lem8266584 A B P P2 f a)). Qed.
Lemma lem8266587 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1530 A B P P2 lt2 y G2 f a) = (term1632 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266586 A B P P2 f a) (@lem8266565 A B P lt2 y G2 f a)). Qed.
Lemma lem8266588 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266589 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1532 A B P P2 lt2 y G2 f a) = (term1633 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266588) (@lem8266587 A B P P2 lt2 y G2 f a)). Qed.
Lemma lem8266590 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1534 A B P P2 G2 f lt2 y s a) = (term1634 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266589 A B P P2 lt2 y G2 f a) (@lem8266530 A P lt2 y s a)). Qed.
Lemma lem8266591 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1535 A B P P2 G2 f lt2 s a) = (term1635 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266590 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266592 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8266593 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1536 A B P P2 G2 f lt2 s a) = (term1636 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8266592 A) (@lem8266591 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266594 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1537 A B P P2 G2 f lt2 s) = (term1637 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8266593 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8266595 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8266596 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1538 A B P P2 G2 f lt2 s) = (term1638 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8266595 P) (@lem8266594 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8266597 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1539 A B P P2 G2 lt2 s) = (term1639 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8266596 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8266598 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266599 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1540 A B P P2 G2 lt2 s) = (term1640 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8266598 A B) (@lem8266597 A B P P2 G2 lt2 s)). Qed.
Lemma lem8266606 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266607 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266606 P A f x). Qed.
Lemma lem8266609 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8266607 A P s a). Qed.
Lemma lem8266610 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266611 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term604 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266610 A lt2 y) (@lem8266609 A P s a)). Qed.
Lemma lem8266613 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266614 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266613 A (A -> Prop) f x). Qed.
Lemma lem8266615 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266614 A lt2 y). Qed.
Lemma lem8266616 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8266617 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term605 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266615 A lt2 y) (@lem8266616 A P s a)). Qed.
Lemma lem8266619 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266620 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266619 A Prop f x). Qed.
Lemma lem8266621 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term605 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (@lem8266620 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8266622 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266617 A P lt2 y s a) (@lem8266621 A P lt2 y s a)). Qed.
Lemma lem8266623 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266611 A P lt2 y s a) (@lem8266622 A P lt2 y s a)). Qed.
Lemma lem8266624 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266633 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266634 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8266633 (A -> B) (P -> A) f x). Qed.
Lemma lem8266635 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) : (G1 f) = (@I ((A -> B) -> P -> A) G1 f).
Proof. exact (@lem8266634 A B P G1 f). Qed.
Lemma lem8266636 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266637 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (@I ((A -> B) -> P -> A) G1 f a).
Proof. exact (MK_COMB (@lem8266635 A B P G1 f) (@lem8266636 P a)). Qed.
Lemma lem8266639 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266640 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266639 P A f x). Qed.
Lemma lem8266641 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G1 f a) = (term1626 A B P G1 f a).
Proof. exact (@lem8266640 A P (@I ((A -> B) -> P -> A) G1 f) a). Qed.
Lemma lem8266643 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (term1626 A B P G1 f a).
Proof. exact (TRANS (@lem8266637 A B P G1 f a) (@lem8266641 A B P G1 f a)). Qed.
Lemma lem8266644 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266645 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G1 f a) = (term1627 A B P lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266644 A lt2 y) (@lem8266643 A B P G1 f a)). Qed.
Lemma lem8266647 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266648 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266647 A (A -> Prop) f x). Qed.
Lemma lem8266649 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266648 A lt2 y). Qed.
Lemma lem8266650 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (term1626 A B P G1 f a) = (term1626 A B P G1 f a).
Proof. exact (eq_refl (term1626 A B P G1 f a)). Qed.
Lemma lem8266651 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G1 f a) = (term1628 A B P lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266649 A lt2 y) (@lem8266650 A B P G1 f a)). Qed.
Lemma lem8266653 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266654 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266653 A Prop f x). Qed.
Lemma lem8266655 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1628 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (@lem8266654 A (@I (A -> A -> Prop) lt2 y) (term1626 A B P G1 f a)). Qed.
Lemma lem8266656 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (TRANS (@lem8266651 A B P lt2 y G1 f a) (@lem8266655 A B P lt2 y G1 f a)). Qed.
Lemma lem8266657 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (TRANS (@lem8266645 A B P lt2 y G1 f a) (@lem8266656 A B P lt2 y G1 f a)). Qed.
Lemma lem8266658 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1630 A B P lt2 y G1 f a) = (term1631 A B P lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266624) (@lem8266657 A B P lt2 y G1 f a)). Qed.
Lemma lem8266659 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266666 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266667 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266666 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266668 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) : (P1 f) = (@I ((A -> B) -> P -> Prop) P1 f).
Proof. exact (@lem8266667 A B P P1 f). Qed.
Lemma lem8266669 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266670 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (@I ((A -> B) -> P -> Prop) P1 f a).
Proof. exact (MK_COMB (@lem8266668 A B P P1 f) (@lem8266669 P a)). Qed.
Lemma lem8266672 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266673 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266672 P Prop f x). Qed.
Lemma lem8266674 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P1 f a) = (term614 A B P P1 f a).
Proof. exact (@lem8266673 P (@I ((A -> B) -> P -> Prop) P1 f) a). Qed.
Lemma lem8266676 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (term614 A B P P1 f a).
Proof. exact (TRANS (@lem8266670 A B P P1 f a) (@lem8266674 A B P P1 f a)). Qed.
Lemma lem8266677 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P1 f a) = (term615 A B P P1 f a).
Proof. exact (MK_COMB (@lem8266659) (@lem8266676 A B P P1 f a)). Qed.
Lemma lem8266678 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266679 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term351 A B P P1 f a) = (term618 A B P P1 f a).
Proof. exact (MK_COMB (@lem8266678) (@lem8266677 A B P P1 f a)). Qed.
Lemma lem8266680 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1530 A B P P1 lt2 y G1 f a) = (term1632 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266679 A B P P1 f a) (@lem8266658 A B P lt2 y G1 f a)). Qed.
Lemma lem8266681 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266682 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1532 A B P P1 lt2 y G1 f a) = (term1633 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266681) (@lem8266680 A B P P1 lt2 y G1 f a)). Qed.
Lemma lem8266683 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1534 A B P P1 G1 f lt2 y s a) = (term1634 A B P P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266682 A B P P1 lt2 y G1 f a) (@lem8266623 A P lt2 y s a)). Qed.
Lemma lem8266684 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1535 A B P P1 G1 f lt2 s a) = (term1635 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8266683 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266685 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8266686 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1536 A B P P1 G1 f lt2 s a) = (term1636 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8266685 A) (@lem8266684 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266687 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1537 A B P P1 G1 f lt2 s) = (term1637 A B P P1 G1 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8266686 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8266688 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8266689 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1538 A B P P1 G1 f lt2 s) = (term1638 A B P P1 G1 f lt2 s).
Proof. exact (MK_COMB (@lem8266688 P) (@lem8266687 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8266690 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1539 A B P P1 G1 lt2 s) = (term1639 A B P P1 G1 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8266689 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8266691 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8266692 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1540 A B P P1 G1 lt2 s) = (term1640 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8266691 A B) (@lem8266690 A B P P1 G1 lt2 s)). Qed.
Lemma lem8266693 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266694 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1541 A B P P1 G1 lt2 s) = (term1641 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8266693) (@lem8266692 A B P P1 G1 lt2 s)). Qed.
Lemma lem8266695 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1542 A B P P1 G1 P2 G2 lt2 s) = (term1642 A B P P1 G1 P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8266694 A B P P1 G1 lt2 s) (@lem8266599 A B P P2 G2 lt2 s)). Qed.
Lemma lem8266696 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1642 A B P P1 G1 P2 G2 lt2 s.
Proof. exact (EQ_MP (@lem8266695 A B P P1 G1 P2 G2 lt2 s) (@lem8266209 A B P P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8266697 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266704 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266705 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266704 P A f x). Qed.
Lemma lem8266707 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8266705 A P s a). Qed.
Lemma lem8266708 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266709 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term604 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266708 A lt2 y) (@lem8266707 A P s a)). Qed.
Lemma lem8266711 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266712 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266711 A (A -> Prop) f x). Qed.
Lemma lem8266713 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266712 A lt2 y). Qed.
Lemma lem8266714 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8266715 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term605 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266713 A lt2 y) (@lem8266714 A P s a)). Qed.
Lemma lem8266717 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266718 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266717 A Prop f x). Qed.
Lemma lem8266719 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term605 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (@lem8266718 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8266720 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266715 A P lt2 y s a) (@lem8266719 A P lt2 y s a)). Qed.
Lemma lem8266721 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266709 A P lt2 y s a) (@lem8266720 A P lt2 y s a)). Qed.
Lemma lem8266722 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term607 A P lt2 y s a) = (term608 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266697) (@lem8266721 A P lt2 y s a)). Qed.
Lemma lem8266731 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266732 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8266731 (A -> B) (P -> A) f x). Qed.
Lemma lem8266733 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) : (G1 f) = (@I ((A -> B) -> P -> A) G1 f).
Proof. exact (@lem8266732 A B P G1 f). Qed.
Lemma lem8266734 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266735 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (@I ((A -> B) -> P -> A) G1 f a).
Proof. exact (MK_COMB (@lem8266733 A B P G1 f) (@lem8266734 P a)). Qed.
Lemma lem8266737 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266738 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266737 P A f x). Qed.
Lemma lem8266739 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G1 f a) = (term1626 A B P G1 f a).
Proof. exact (@lem8266738 A P (@I ((A -> B) -> P -> A) G1 f) a). Qed.
Lemma lem8266741 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (term1626 A B P G1 f a).
Proof. exact (TRANS (@lem8266735 A B P G1 f a) (@lem8266739 A B P G1 f a)). Qed.
Lemma lem8266742 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266743 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G1 f a) = (term1627 A B P lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266742 A lt2 y) (@lem8266741 A B P G1 f a)). Qed.
Lemma lem8266745 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266746 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266745 A (A -> Prop) f x). Qed.
Lemma lem8266747 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266746 A lt2 y). Qed.
Lemma lem8266748 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (term1626 A B P G1 f a) = (term1626 A B P G1 f a).
Proof. exact (eq_refl (term1626 A B P G1 f a)). Qed.
Lemma lem8266749 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G1 f a) = (term1628 A B P lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266747 A lt2 y) (@lem8266748 A B P G1 f a)). Qed.
Lemma lem8266751 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266752 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266751 A Prop f x). Qed.
Lemma lem8266753 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1628 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (@lem8266752 A (@I (A -> A -> Prop) lt2 y) (term1626 A B P G1 f a)). Qed.
Lemma lem8266754 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (TRANS (@lem8266749 A B P lt2 y G1 f a) (@lem8266753 A B P lt2 y G1 f a)). Qed.
Lemma lem8266755 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (TRANS (@lem8266743 A B P lt2 y G1 f a) (@lem8266754 A B P lt2 y G1 f a)). Qed.
Lemma lem8266762 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266763 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266762 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266764 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) : (P1 f) = (@I ((A -> B) -> P -> Prop) P1 f).
Proof. exact (@lem8266763 A B P P1 f). Qed.
Lemma lem8266765 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266766 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (@I ((A -> B) -> P -> Prop) P1 f a).
Proof. exact (MK_COMB (@lem8266764 A B P P1 f) (@lem8266765 P a)). Qed.
Lemma lem8266768 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266769 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266768 P Prop f x). Qed.
Lemma lem8266770 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P1 f a) = (term614 A B P P1 f a).
Proof. exact (@lem8266769 P (@I ((A -> B) -> P -> Prop) P1 f) a). Qed.
Lemma lem8266772 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (term614 A B P P1 f a).
Proof. exact (TRANS (@lem8266766 A B P P1 f a) (@lem8266770 A B P P1 f a)). Qed.
Lemma lem8266773 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266774 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P1 f a) = (term616 A B P P1 f a).
Proof. exact (MK_COMB (@lem8266773) (@lem8266772 A B P P1 f a)). Qed.
Lemma lem8266775 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1474 A B P P1 lt2 y G1 f a) = (term1643 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266774 A B P P1 f a) (@lem8266755 A B P lt2 y G1 f a)). Qed.
Lemma lem8266776 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266777 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1644 A B P P1 lt2 y G1 f a) = (term1645 A B P P1 lt2 y G1 f a).
Proof. exact (MK_COMB (@lem8266776) (@lem8266775 A B P P1 lt2 y G1 f a)). Qed.
Lemma lem8266778 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1544 A B P P1 G1 f lt2 y s a) = (term1646 A B P P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266777 A B P P1 lt2 y G1 f a) (@lem8266722 A P lt2 y s a)). Qed.
Lemma lem8266785 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266786 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266785 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266787 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8266786 A B P p f). Qed.
Lemma lem8266788 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266789 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8266787 A B P p f) (@lem8266788 P a)). Qed.
Lemma lem8266791 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266792 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266791 P Prop f x). Qed.
Lemma lem8266793 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8266792 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8266795 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8266789 A B P p f a) (@lem8266793 A B P p f a)). Qed.
Lemma lem8266796 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266797 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term616 A B P p f a).
Proof. exact (MK_COMB (@lem8266796) (@lem8266795 A B P p f a)). Qed.
Lemma lem8266798 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1577 A B P p P1 G1 f lt2 y s a) = (term1647 A B P p P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266797 A B P p f a) (@lem8266778 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8266799 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266806 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266807 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266806 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266808 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8266807 A B P P' f). Qed.
Lemma lem8266809 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266810 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8266808 A B P P' f) (@lem8266809 P a)). Qed.
Lemma lem8266812 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266813 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266812 P Prop f x). Qed.
Lemma lem8266814 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8266813 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8266816 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8266810 A B P P' f a) (@lem8266814 A B P P' f a)). Qed.
Lemma lem8266817 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term615 A B P P' f a).
Proof. exact (MK_COMB (@lem8266799) (@lem8266816 A B P P' f a)). Qed.
Lemma lem8266818 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266819 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term829 A B P P' f a).
Proof. exact (MK_COMB (@lem8266818) (@lem8266817 A B P P' f a)). Qed.
Lemma lem8266820 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1601 A B P P' p P1 G1 f lt2 y s a) = (term1648 A B P P' p P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266819 A B P P' f a) (@lem8266798 A B P p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266821 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8266828 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266829 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266828 P A f x). Qed.
Lemma lem8266831 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8266829 A P s a). Qed.
Lemma lem8266832 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266833 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term604 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266832 A lt2 y) (@lem8266831 A P s a)). Qed.
Lemma lem8266835 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266836 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266835 A (A -> Prop) f x). Qed.
Lemma lem8266837 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266836 A lt2 y). Qed.
Lemma lem8266838 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8266839 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term605 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266837 A lt2 y) (@lem8266838 A P s a)). Qed.
Lemma lem8266841 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266842 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266841 A Prop f x). Qed.
Lemma lem8266843 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term605 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (@lem8266842 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8266844 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term604 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266839 A P lt2 y s a) (@lem8266843 A P lt2 y s a)). Qed.
Lemma lem8266845 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term341 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (TRANS (@lem8266833 A P lt2 y s a) (@lem8266844 A P lt2 y s a)). Qed.
Lemma lem8266846 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term607 A P lt2 y s a) = (term608 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8266821) (@lem8266845 A P lt2 y s a)). Qed.
Lemma lem8266855 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266856 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8266855 (A -> B) (P -> A) f x). Qed.
Lemma lem8266857 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (@I ((A -> B) -> P -> A) G2 f).
Proof. exact (@lem8266856 A B P G2 f). Qed.
Lemma lem8266858 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266859 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (@I ((A -> B) -> P -> A) G2 f a).
Proof. exact (MK_COMB (@lem8266857 A B P G2 f) (@lem8266858 P a)). Qed.
Lemma lem8266861 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266862 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8266861 P A f x). Qed.
Lemma lem8266863 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G2 f a) = (term1626 A B P G2 f a).
Proof. exact (@lem8266862 A P (@I ((A -> B) -> P -> A) G2 f) a). Qed.
Lemma lem8266865 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (term1626 A B P G2 f a).
Proof. exact (TRANS (@lem8266859 A B P G2 f a) (@lem8266863 A B P G2 f a)). Qed.
Lemma lem8266866 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8266867 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G2 f a) = (term1627 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266866 A lt2 y) (@lem8266865 A B P G2 f a)). Qed.
Lemma lem8266869 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266870 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8266869 A (A -> Prop) f x). Qed.
Lemma lem8266871 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8266870 A lt2 y). Qed.
Lemma lem8266872 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (term1626 A B P G2 f a) = (term1626 A B P G2 f a).
Proof. exact (eq_refl (term1626 A B P G2 f a)). Qed.
Lemma lem8266873 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G2 f a) = (term1628 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266871 A lt2 y) (@lem8266872 A B P G2 f a)). Qed.
Lemma lem8266875 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266876 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8266875 A Prop f x). Qed.
Lemma lem8266877 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1628 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (@lem8266876 A (@I (A -> A -> Prop) lt2 y) (term1626 A B P G2 f a)). Qed.
Lemma lem8266878 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1627 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (TRANS (@lem8266873 A B P lt2 y G2 f a) (@lem8266877 A B P lt2 y G2 f a)). Qed.
Lemma lem8266879 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1473 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (TRANS (@lem8266867 A B P lt2 y G2 f a) (@lem8266878 A B P lt2 y G2 f a)). Qed.
Lemma lem8266886 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266887 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266886 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266888 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8266887 A B P P2 f). Qed.
Lemma lem8266889 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266890 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (@I ((A -> B) -> P -> Prop) P2 f a).
Proof. exact (MK_COMB (@lem8266888 A B P P2 f) (@lem8266889 P a)). Qed.
Lemma lem8266892 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266893 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266892 P Prop f x). Qed.
Lemma lem8266894 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 f a) = (term614 A B P P2 f a).
Proof. exact (@lem8266893 P (@I ((A -> B) -> P -> Prop) P2 f) a). Qed.
Lemma lem8266896 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (term614 A B P P2 f a).
Proof. exact (TRANS (@lem8266890 A B P P2 f a) (@lem8266894 A B P P2 f a)). Qed.
Lemma lem8266897 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266898 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P2 f a) = (term616 A B P P2 f a).
Proof. exact (MK_COMB (@lem8266897) (@lem8266896 A B P P2 f a)). Qed.
Lemma lem8266899 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1474 A B P P2 lt2 y G2 f a) = (term1643 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266898 A B P P2 f a) (@lem8266879 A B P lt2 y G2 f a)). Qed.
Lemma lem8266900 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266901 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1644 A B P P2 lt2 y G2 f a) = (term1645 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8266900) (@lem8266899 A B P P2 lt2 y G2 f a)). Qed.
Lemma lem8266902 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1544 A B P P2 G2 f lt2 y s a) = (term1646 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266901 A B P P2 lt2 y G2 f a) (@lem8266846 A P lt2 y s a)). Qed.
Lemma lem8266909 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266910 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266909 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266911 {A B P : Type'} (p : type560 A B P) (f : A -> B) : (p f) = (@I ((A -> B) -> P -> Prop) p f).
Proof. exact (@lem8266910 A B P p f). Qed.
Lemma lem8266912 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266913 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (@I ((A -> B) -> P -> Prop) p f a).
Proof. exact (MK_COMB (@lem8266911 A B P p f) (@lem8266912 P a)). Qed.
Lemma lem8266915 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266916 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266915 P Prop f x). Qed.
Lemma lem8266917 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) p f a) = (term614 A B P p f a).
Proof. exact (@lem8266916 P (@I ((A -> B) -> P -> Prop) p f) a). Qed.
Lemma lem8266919 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = (term614 A B P p f a).
Proof. exact (TRANS (@lem8266913 A B P p f a) (@lem8266917 A B P p f a)). Qed.
Lemma lem8266920 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266921 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term616 A B P p f a).
Proof. exact (MK_COMB (@lem8266920) (@lem8266919 A B P p f a)). Qed.
Lemma lem8266922 {A B P : Type'} (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1577 A B P p P2 G2 f lt2 y s a) = (term1647 A B P p P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266921 A B P p f a) (@lem8266902 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8266929 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266930 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8266929 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8266931 {A B P : Type'} (P' : type560 A B P) (f : A -> B) : (P' f) = (@I ((A -> B) -> P -> Prop) P' f).
Proof. exact (@lem8266930 A B P P' f). Qed.
Lemma lem8266932 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8266933 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (@I ((A -> B) -> P -> Prop) P' f a).
Proof. exact (MK_COMB (@lem8266931 A B P P' f) (@lem8266932 P a)). Qed.
Lemma lem8266935 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8266936 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8266935 P Prop f x). Qed.
Lemma lem8266937 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P' f a) = (term614 A B P P' f a).
Proof. exact (@lem8266936 P (@I ((A -> B) -> P -> Prop) P' f) a). Qed.
Lemma lem8266939 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (term614 A B P P' f a).
Proof. exact (TRANS (@lem8266933 A B P P' f a) (@lem8266937 A B P P' f a)). Qed.
Lemma lem8266940 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8266941 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term616 A B P P' f a).
Proof. exact (MK_COMB (@lem8266940) (@lem8266939 A B P P' f a)). Qed.
Lemma lem8266942 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1590 A B P P' p P2 G2 f lt2 y s a) = (term1649 A B P P' p P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266941 A B P P' f a) (@lem8266922 A B P p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266943 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8266944 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1620 A B P P' p P2 G2 f lt2 y s a) = (term1650 A B P P' p P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266943) (@lem8266942 A B P P' p P2 G2 f lt2 y s a)). Qed.
Lemma lem8266945 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a) = (term1651 A B P P2 G2 P' p P1 G1 f lt2 y s a).
Proof. exact (MK_COMB (@lem8266944 A B P P' p P2 G2 f lt2 y s a) (@lem8266820 A B P P' p P1 G1 f lt2 y s a)). Qed.
Lemma lem8266946 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a) : term1651 A B P P2 G2 P' p P1 G1 f lt2 y s a.
Proof. exact (EQ_MP (@lem8266945 A B P P2 G2 P' p P1 G1 f lt2 y s a) (@lem8266504 A B P P2 G2 P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8267425 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1640 A B P P2 G2 lt2 s.
Proof. exact (proj2 (@lem8266696 A B P P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267426 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1640 A B P P1 G1 lt2 s.
Proof. exact (proj1 (@lem8266696 A B P P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267427 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1649 A B P P' p P2 G2 f lt2 y s a.
Proof. exact (h1). Qed.
Lemma lem8267428 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1648 A B P P' p P1 G1 f lt2 y s a.
Proof. exact (h1). Qed.
Lemma lem8267429 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1647 A B P p P2 G2 f lt2 y s a.
Proof. exact (proj2 (@lem8267427 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8267431 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1646 A B P P2 G2 f lt2 y s a.
Proof. exact (proj2 (@lem8267429 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8267434 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1643 A B P P2 lt2 y G2 f a.
Proof. exact (proj1 (@lem8267431 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8267437 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1647 A B P p P1 G1 f lt2 y s a.
Proof. exact (proj2 (@lem8267428 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8267439 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1646 A B P P1 G1 f lt2 y s a.
Proof. exact (proj2 (@lem8267437 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8267442 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1643 A B P P1 lt2 y G1 f a.
Proof. exact (proj1 (@lem8267439 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8267621 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1634 A B P P2 G2 f lt2 y s a) = (term1634 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1634 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8267622 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1635 A B P P2 G2 f lt2 s a) = (term1635 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8267621 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8267623 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8267624 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1636 A B P P2 G2 f lt2 s a) = (term1636 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8267623 A) (@lem8267622 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8267625 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1637 A B P P2 G2 f lt2 s) = (term1637 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8267624 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8267626 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8267627 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1638 A B P P2 G2 f lt2 s) = (term1638 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8267626 P) (@lem8267625 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8267628 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1639 A B P P2 G2 lt2 s) = (term1639 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8267627 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8267629 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8267631 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1640 A B P P2 G2 lt2 s) = (term1640 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8267629 A B) (@lem8267628 A B P P2 G2 lt2 s)). Qed.
Lemma lem8267632 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1640 A B P P2 G2 lt2 s.
Proof. exact (EQ_MP (@lem8267631 A B P P2 G2 lt2 s) (@lem8267425 A B P P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267804 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1634 A B P P1 G1 f lt2 y s a) = (term1634 A B P P1 G1 f lt2 y s a).
Proof. exact (eq_refl (term1634 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8267805 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1635 A B P P1 G1 f lt2 s a) = (term1635 A B P P1 G1 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8267804 A B P P1 G1 f lt2 y s a)). Qed.
Lemma lem8267806 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8267807 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1636 A B P P1 G1 f lt2 s a) = (term1636 A B P P1 G1 f lt2 s a).
Proof. exact (MK_COMB (@lem8267806 A) (@lem8267805 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8267808 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1637 A B P P1 G1 f lt2 s) = (term1637 A B P P1 G1 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8267807 A B P P1 G1 f lt2 s a)). Qed.
Lemma lem8267809 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8267810 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1638 A B P P1 G1 f lt2 s) = (term1638 A B P P1 G1 f lt2 s).
Proof. exact (MK_COMB (@lem8267809 P) (@lem8267808 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8267811 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1639 A B P P1 G1 lt2 s) = (term1639 A B P P1 G1 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8267810 A B P P1 G1 f lt2 s)). Qed.
Lemma lem8267812 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8267814 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1640 A B P P1 G1 lt2 s) = (term1640 A B P P1 G1 lt2 s).
Proof. exact (MK_COMB (@lem8267812 A B) (@lem8267811 A B P P1 G1 lt2 s)). Qed.
Lemma lem8267815 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1640 A B P P1 G1 lt2 s.
Proof. exact (EQ_MP (@lem8267814 A B P P1 G1 lt2 s) (@lem8267426 A B P P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267888 {A B P : Type'} (_110246 : A -> B) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1652 A B P P2 G2 lt2 s _110246.
Proof. exact (@lem8267632 A B P P1 G1 P2 G2 lt2 s h1 _110246). Qed.
Lemma lem8267889 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1652 A B P P2 G2 lt2 s _110246) = (term1638 A B P P2 G2 _110246 lt2 s).
Proof. exact (eq_refl (term1652 A B P P2 G2 lt2 s _110246)). Qed.
Lemma lem8267890 {A B P : Type'} (_110246 : A -> B) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1638 A B P P2 G2 _110246 lt2 s.
Proof. exact (EQ_MP (@lem8267889 A B P P2 G2 _110246 lt2 s) (@lem8267888 A B P _110246 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267891 {A B P : Type'} (_110246 : A -> B) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1653 A B P P2 G2 _110246 lt2 s _110247.
Proof. exact (@lem8267890 A B P _110246 P1 G1 P2 G2 lt2 s h1 _110247). Qed.
Lemma lem8267892 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (s : P -> A) (_110247 : P) : (term1653 A B P P2 G2 _110246 lt2 s _110247) = (term1636 A B P P2 G2 _110246 lt2 s _110247).
Proof. exact (eq_refl (term1653 A B P P2 G2 _110246 lt2 s _110247)). Qed.
Lemma lem8267893 {A B P : Type'} (_110246 : A -> B) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1636 A B P P2 G2 _110246 lt2 s _110247.
Proof. exact (EQ_MP (@lem8267892 A B P P2 G2 _110246 lt2 s _110247) (@lem8267891 A B P _110246 _110247 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267894 {A B P : Type'} (_110246 : A -> B) (_110247 : P) (_110248 : A) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1654 A B P P2 G2 _110246 lt2 s _110247 _110248.
Proof. exact (@lem8267893 A B P _110246 _110247 P1 G1 P2 G2 lt2 s h1 _110248). Qed.
Lemma lem8267895 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1654 A B P P2 G2 _110246 lt2 s _110247 _110248) = (term1634 A B P P2 G2 _110246 lt2 _110248 s _110247).
Proof. exact (eq_refl (term1654 A B P P2 G2 _110246 lt2 s _110247 _110248)). Qed.
Lemma lem8267896 {A B P : Type'} (_110246 : A -> B) (_110248 : A) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1634 A B P P2 G2 _110246 lt2 _110248 s _110247.
Proof. exact (EQ_MP (@lem8267895 A B P P2 G2 _110246 lt2 _110248 s _110247) (@lem8267894 A B P _110246 _110247 _110248 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267915 {A B P : Type'} (_110255 : A -> B) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1652 A B P P1 G1 lt2 s _110255.
Proof. exact (@lem8267815 A B P P1 G1 P2 G2 lt2 s h1 _110255). Qed.
Lemma lem8267916 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1652 A B P P1 G1 lt2 s _110255) = (term1638 A B P P1 G1 _110255 lt2 s).
Proof. exact (eq_refl (term1652 A B P P1 G1 lt2 s _110255)). Qed.
Lemma lem8267917 {A B P : Type'} (_110255 : A -> B) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1638 A B P P1 G1 _110255 lt2 s.
Proof. exact (EQ_MP (@lem8267916 A B P P1 G1 _110255 lt2 s) (@lem8267915 A B P _110255 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267918 {A B P : Type'} (_110255 : A -> B) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1653 A B P P1 G1 _110255 lt2 s _110256.
Proof. exact (@lem8267917 A B P _110255 P1 G1 P2 G2 lt2 s h1 _110256). Qed.
Lemma lem8267919 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (s : P -> A) (_110256 : P) : (term1653 A B P P1 G1 _110255 lt2 s _110256) = (term1636 A B P P1 G1 _110255 lt2 s _110256).
Proof. exact (eq_refl (term1653 A B P P1 G1 _110255 lt2 s _110256)). Qed.
Lemma lem8267920 {A B P : Type'} (_110255 : A -> B) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1636 A B P P1 G1 _110255 lt2 s _110256.
Proof. exact (EQ_MP (@lem8267919 A B P P1 G1 _110255 lt2 s _110256) (@lem8267918 A B P _110255 _110256 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267921 {A B P : Type'} (_110255 : A -> B) (_110256 : P) (_110257 : A) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1654 A B P P1 G1 _110255 lt2 s _110256 _110257.
Proof. exact (@lem8267920 A B P _110255 _110256 P1 G1 P2 G2 lt2 s h1 _110257). Qed.
Lemma lem8267922 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1654 A B P P1 G1 _110255 lt2 s _110256 _110257) = (term1634 A B P P1 G1 _110255 lt2 _110257 s _110256).
Proof. exact (eq_refl (term1654 A B P P1 G1 _110255 lt2 s _110256 _110257)). Qed.
Lemma lem8267923 {A B P : Type'} (_110255 : A -> B) (_110257 : A) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1634 A B P P1 G1 _110255 lt2 _110257 s _110256.
Proof. exact (EQ_MP (@lem8267922 A B P P1 G1 _110255 lt2 _110257 s _110256) (@lem8267921 A B P _110255 _110256 _110257 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267979 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1634 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1655 A B P P2 G2 _110246 lt2 _110248 s _110247).
Proof. exact (@lem8248105 (term615 A B P P2 _110246 _110247) (term1631 A B P lt2 _110248 G2 _110246 _110247) (term606 A P lt2 _110248 s _110247)). Qed.
Lemma lem8267980 {A B P : Type'} (_110246 : A -> B) (_110248 : A) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1655 A B P P2 G2 _110246 lt2 _110248 s _110247.
Proof. exact (EQ_MP (@lem8267979 A B P P2 G2 _110246 lt2 _110248 s _110247) (@lem8267896 A B P _110246 _110248 _110247 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8267986 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term608 A P lt2 y s a.
Proof. exact (proj2 (@lem8267431 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268129 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1634 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1655 A B P P1 G1 _110255 lt2 _110257 s _110256).
Proof. exact (@lem8248105 (term615 A B P P1 _110255 _110256) (term1631 A B P lt2 _110257 G1 _110255 _110256) (term606 A P lt2 _110257 s _110256)). Qed.
Lemma lem8268130 {A B P : Type'} (_110255 : A -> B) (_110257 : A) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1655 A B P P1 G1 _110255 lt2 _110257 s _110256.
Proof. exact (EQ_MP (@lem8268129 A B P P1 G1 _110255 lt2 _110257 s _110256) (@lem8267923 A B P _110255 _110257 _110256 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8268148 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term608 A P lt2 y s a.
Proof. exact (proj2 (@lem8267439 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268432 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term614 A B P P2 f a.
Proof. exact (proj1 (@lem8267434 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268433 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term757 A B P P2 f a.
Proof. exact (fun h0 : term615 A B P P2 f a => @lem8268432 A B P P' p P2 G2 f lt2 y s a h1). Qed.
Lemma lem8268435 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268436 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P2 f a) = (term614 A B P P2 f a).
Proof. exact (@lem8268435 (term614 A B P P2 f a)). Qed.
Lemma lem8268437 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term614 A B P P2 f a.
Proof. exact (EQ_MP (@lem8268436 A B P P2 f a) (@lem8268433 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268439 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1629 A B P lt2 y G2 f a.
Proof. exact (proj2 (@lem8267434 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268440 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1656 A B P lt2 y G2 f a.
Proof. exact (fun h0 : term1631 A B P lt2 y G2 f a => @lem8268439 A B P P' p P2 G2 f lt2 y s a h1). Qed.
Lemma lem8268442 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268443 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1656 A B P lt2 y G2 f a) = (term1629 A B P lt2 y G2 f a).
Proof. exact (@lem8268442 (term1629 A B P lt2 y G2 f a)). Qed.
Lemma lem8268444 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1629 A B P lt2 y G2 f a.
Proof. exact (EQ_MP (@lem8268443 A B P lt2 y G2 f a) (@lem8268440 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268450 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8268451 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1655 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1657 A B P G2 P2 _110246 lt2 _110248 s _110247).
Proof. exact (@lem8268450 (term1631 A B P lt2 _110248 G2 _110246 _110247) (term615 A B P P2 _110246 _110247) (term606 A P lt2 _110248 s _110247)). Qed.
Lemma lem8268465 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8268466 {A B P : Type'} (lt2 : type1402 A) (_110248 : A) (s : P -> A) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1658 A B P P2 _110246 lt2 _110248 s _110247) = (term1659 A B P lt2 _110248 s P2 _110246 _110247).
Proof. exact (@lem8268465 (term606 A P lt2 _110248 s _110247) (term615 A B P P2 _110246 _110247)). Qed.
Lemma lem8268472 {A B P : Type'} (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1660 A B P lt2 _110248 G2 _110246 _110247) = (term1660 A B P lt2 _110248 G2 _110246 _110247).
Proof. exact (eq_refl (term1660 A B P lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268473 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1657 A B P G2 P2 _110246 lt2 _110248 s _110247) = (term1661 A B P G2 lt2 _110248 s P2 _110246 _110247).
Proof. exact (MK_COMB (@lem8268472 A B P lt2 _110248 G2 _110246 _110247) (@lem8268466 A B P lt2 _110248 s P2 _110246 _110247)). Qed.
Lemma lem8268477 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8268478 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1661 A B P G2 lt2 _110248 s P2 _110246 _110247) = (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247).
Proof. exact (@lem8268477 (term606 A P lt2 _110248 s _110247) (term1631 A B P lt2 _110248 G2 _110246 _110247) (term615 A B P P2 _110246 _110247)). Qed.
Lemma lem8268494 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1657 A B P G2 P2 _110246 lt2 _110248 s _110247) = (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247).
Proof. exact (TRANS (@lem8268473 A B P G2 lt2 _110248 s P2 _110246 _110247) (@lem8268478 A B P s lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268495 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1655 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247).
Proof. exact (TRANS (@lem8268451 A B P G2 P2 _110246 lt2 _110248 s _110247) (@lem8268494 A B P s lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268496 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8268497 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1663 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1664 A B P s lt2 _110248 G2 P2 _110246 _110247).
Proof. exact (MK_COMB (@lem8268496) (@lem8268495 A B P s lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268511 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8268512 {A B P : Type'} (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1632 A B P P2 lt2 _110248 G2 _110246 _110247) = (term1665 A B P lt2 _110248 G2 P2 _110246 _110247).
Proof. exact (@lem8268511 (term1631 A B P lt2 _110248 G2 _110246 _110247) (term615 A B P P2 _110246 _110247)). Qed.
Lemma lem8268518 {A P : Type'} (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1666 A P lt2 _110248 s _110247) = (term1666 A P lt2 _110248 s _110247).
Proof. exact (eq_refl (term1666 A P lt2 _110248 s _110247)). Qed.
Lemma lem8268519 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247) = (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247).
Proof. exact (MK_COMB (@lem8268518 A P lt2 _110248 s _110247) (@lem8268512 A B P lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268530 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : ((term1655 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247)) = ((term1662 A B P s lt2 _110248 G2 P2 _110246 _110247) = (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247)).
Proof. exact (MK_COMB (@lem8268497 A B P s lt2 _110248 G2 P2 _110246 _110247) (@lem8268519 A B P s lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268532 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8268533 (x : Prop) : (x = x) = True.
Proof. exact (@lem8268532 Prop x). Qed.
Lemma lem8268534 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : ((term1662 A B P s lt2 _110248 G2 P2 _110246 _110247) = (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247)) = True.
Proof. exact (@lem8268533 (term1662 A B P s lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268535 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : ((term1655 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247)) = True.
Proof. exact (TRANS (@lem8268530 A B P s lt2 _110248 G2 P2 _110246 _110247) (@lem8268534 A B P s lt2 _110248 G2 P2 _110246 _110247)). Qed.
Lemma lem8268536 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : True = ((term1655 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247)).
Proof. exact (SYM (@lem8268535 A B P s P2 lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268537 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1655 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247).
Proof. exact (EQ_MP (@lem8268536 A B P s P2 lt2 _110248 G2 _110246 _110247) (@lem0)). Qed.
Lemma lem8268538 {A B P : Type'} (_110248 : A) (_110246 : A -> B) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1667 A B P s P2 lt2 _110248 G2 _110246 _110247.
Proof. exact (EQ_MP (@lem8268537 A B P s P2 lt2 _110248 G2 _110246 _110247) (@lem8267980 A B P _110246 _110248 _110247 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8268540 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8268541 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247) = (term1668 A B P P2 G2 _110246 lt2 _110248 s _110247).
Proof. exact (@lem8268540 (term1632 A B P P2 lt2 _110248 G2 _110246 _110247) (term606 A P lt2 _110248 s _110247)). Qed.
Lemma lem8268543 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8268544 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1669 A B P P2 lt2 _110248 G2 _110246 _110247) = (term1670 A B P P2 lt2 _110248 G2 _110246 _110247).
Proof. exact (@lem8268543 (term615 A B P P2 _110246 _110247) (term1631 A B P lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268546 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8268547 {A B P : Type'} (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term767 A B P P2 _110246 _110247) = (term614 A B P P2 _110246 _110247).
Proof. exact (@lem8268546 (term614 A B P P2 _110246 _110247)). Qed.
Lemma lem8268548 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8268549 {A B P : Type'} (P2 : type560 A B P) (_110246 : A -> B) (_110247 : P) : (term768 A B P P2 _110246 _110247) = (term616 A B P P2 _110246 _110247).
Proof. exact (MK_COMB (@lem8268548) (@lem8268547 A B P P2 _110246 _110247)). Qed.
Lemma lem8268551 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8268552 {A B P : Type'} (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1671 A B P lt2 _110248 G2 _110246 _110247) = (term1629 A B P lt2 _110248 G2 _110246 _110247).
Proof. exact (@lem8268551 (term1629 A B P lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268553 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1670 A B P P2 lt2 _110248 G2 _110246 _110247) = (term1643 A B P P2 lt2 _110248 G2 _110246 _110247).
Proof. exact (MK_COMB (@lem8268549 A B P P2 _110246 _110247) (@lem8268552 A B P lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268554 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1669 A B P P2 lt2 _110248 G2 _110246 _110247) = (term1643 A B P P2 lt2 _110248 G2 _110246 _110247).
Proof. exact (TRANS (@lem8268544 A B P P2 lt2 _110248 G2 _110246 _110247) (@lem8268553 A B P P2 lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268555 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8268556 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_110248 : A) (G2 : type557 A B P) (_110246 : A -> B) (_110247 : P) : (term1672 A B P P2 lt2 _110248 G2 _110246 _110247) = (term1673 A B P P2 lt2 _110248 G2 _110246 _110247).
Proof. exact (MK_COMB (@lem8268555) (@lem8268554 A B P P2 lt2 _110248 G2 _110246 _110247)). Qed.
Lemma lem8268557 {A P : Type'} (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term606 A P lt2 _110248 s _110247) = (term606 A P lt2 _110248 s _110247).
Proof. exact (eq_refl (term606 A P lt2 _110248 s _110247)). Qed.
Lemma lem8268558 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1668 A B P P2 G2 _110246 lt2 _110248 s _110247) = (term1674 A B P P2 G2 _110246 lt2 _110248 s _110247).
Proof. exact (MK_COMB (@lem8268556 A B P P2 lt2 _110248 G2 _110246 _110247) (@lem8268557 A P lt2 _110248 s _110247)). Qed.
Lemma lem8268559 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_110246 : A -> B) (lt2 : type1402 A) (_110248 : A) (s : P -> A) (_110247 : P) : (term1667 A B P s P2 lt2 _110248 G2 _110246 _110247) = (term1674 A B P P2 G2 _110246 lt2 _110248 s _110247).
Proof. exact (TRANS (@lem8268541 A B P P2 G2 _110246 lt2 _110248 s _110247) (@lem8268558 A B P P2 G2 _110246 lt2 _110248 s _110247)). Qed.
Lemma lem8268561 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1643 A B P P2 lt2 y G2 f a.
Proof. exact (conj (@lem8268437 A B P P' p P2 G2 f lt2 y s a h1) (@lem8268444 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268563 {A B P : Type'} (_110246 : A -> B) (_110248 : A) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1674 A B P P2 G2 _110246 lt2 _110248 s _110247.
Proof. exact (EQ_MP (@lem8268559 A B P P2 G2 _110246 lt2 _110248 s _110247) (@lem8268538 A B P _110248 _110246 _110247 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8268564 {A B P : Type'} (_110246 : A -> B) (_110248 : A) (_110247 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1674 A B P P2 G2 _110246 lt2 _110248 s _110247.
Proof. exact (@lem8268563 A B P _110246 _110248 _110247 P1 G1 P2 G2 lt2 s h1). Qed.
Lemma lem8268565 {A B P : Type'} (f : A -> B) (y : A) (a : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1674 A B P P2 G2 f lt2 y s a.
Proof. exact (@lem8268564 A B P f y a P1 G1 P2 G2 lt2 s h1). Qed.
Lemma lem8268568 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1649 A B P P' p P2 G2 f lt2 y s a) : term606 A P lt2 y s a.
Proof. exact (@lem8268565 A B P f y a P1 G1 P2 G2 lt2 s h1 (@lem8268561 A B P P' p P2 G2 f lt2 y s a h2)). Qed.
Lemma lem8268569 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1675 A P lt2 y s a.
Proof. exact (fun h0 : term608 A P lt2 y s a => @lem8268568 A B P P1 G1 P' p P2 G2 f lt2 y s a h1 h2). Qed.
Lemma lem8268571 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268572 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1675 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (@lem8268571 (term606 A P lt2 y s a)). Qed.
Lemma lem8268573 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1649 A B P P' p P2 G2 f lt2 y s a) : term606 A P lt2 y s a.
Proof. exact (EQ_MP (@lem8268572 A P lt2 y s a) (@lem8268569 A B P P1 G1 P' p P2 G2 f lt2 y s a h1 h2)). Qed.
Lemma lem8268576 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8268578 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term608 A P lt2 y s a) = (term1676 A P lt2 y s a).
Proof. exact (@lem8268576 (term606 A P lt2 y s a)). Qed.
Lemma lem8268581 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1649 A B P P' p P2 G2 f lt2 y s a) : term1676 A P lt2 y s a.
Proof. exact (EQ_MP (@lem8268578 A P lt2 y s a) (@lem8267986 A B P P' p P2 G2 f lt2 y s a h1)). Qed.
Lemma lem8268584 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1649 A B P P' p P2 G2 f lt2 y s a) : False.
Proof. exact (@lem8268581 A B P P' p P2 G2 f lt2 y s a h2 (@lem8268573 A B P P1 G1 P' p P2 G2 f lt2 y s a h1 h2)). Qed.
Lemma lem8268585 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1649 A B P P' p P2 G2 f lt2 y s a) : term802.
Proof. exact (fun h0 : ~ False => @lem8268584 A B P P1 G1 P' p P2 G2 f lt2 y s a h1 h2). Qed.
Lemma lem8268587 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268588 : term802 = False.
Proof. exact (@lem8268587 False). Qed.
Lemma lem8268589 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1649 A B P P' p P2 G2 f lt2 y s a) : False.
Proof. exact (EQ_MP (@lem8268588) (@lem8268585 A B P P1 G1 P' p P2 G2 f lt2 y s a h1 h2)). Qed.
Lemma lem8268741 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term614 A B P P1 f a.
Proof. exact (proj1 (@lem8267442 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268742 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term757 A B P P1 f a.
Proof. exact (fun h0 : term615 A B P P1 f a => @lem8268741 A B P P' p P1 G1 f lt2 y s a h1). Qed.
Lemma lem8268744 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268745 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term757 A B P P1 f a) = (term614 A B P P1 f a).
Proof. exact (@lem8268744 (term614 A B P P1 f a)). Qed.
Lemma lem8268746 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term614 A B P P1 f a.
Proof. exact (EQ_MP (@lem8268745 A B P P1 f a) (@lem8268742 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268748 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1629 A B P lt2 y G1 f a.
Proof. exact (proj2 (@lem8267442 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268749 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1656 A B P lt2 y G1 f a.
Proof. exact (fun h0 : term1631 A B P lt2 y G1 f a => @lem8268748 A B P P' p P1 G1 f lt2 y s a h1). Qed.
Lemma lem8268751 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268752 {A B P : Type'} (lt2 : type1402 A) (y : A) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1656 A B P lt2 y G1 f a) = (term1629 A B P lt2 y G1 f a).
Proof. exact (@lem8268751 (term1629 A B P lt2 y G1 f a)). Qed.
Lemma lem8268753 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1629 A B P lt2 y G1 f a.
Proof. exact (EQ_MP (@lem8268752 A B P lt2 y G1 f a) (@lem8268749 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268759 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8268760 {A B P : Type'} (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1655 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1657 A B P G1 P1 _110255 lt2 _110257 s _110256).
Proof. exact (@lem8268759 (term1631 A B P lt2 _110257 G1 _110255 _110256) (term615 A B P P1 _110255 _110256) (term606 A P lt2 _110257 s _110256)). Qed.
Lemma lem8268774 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8268775 {A B P : Type'} (lt2 : type1402 A) (_110257 : A) (s : P -> A) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1658 A B P P1 _110255 lt2 _110257 s _110256) = (term1659 A B P lt2 _110257 s P1 _110255 _110256).
Proof. exact (@lem8268774 (term606 A P lt2 _110257 s _110256) (term615 A B P P1 _110255 _110256)). Qed.
Lemma lem8268781 {A B P : Type'} (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1660 A B P lt2 _110257 G1 _110255 _110256) = (term1660 A B P lt2 _110257 G1 _110255 _110256).
Proof. exact (eq_refl (term1660 A B P lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268782 {A B P : Type'} (G1 : type557 A B P) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1657 A B P G1 P1 _110255 lt2 _110257 s _110256) = (term1661 A B P G1 lt2 _110257 s P1 _110255 _110256).
Proof. exact (MK_COMB (@lem8268781 A B P lt2 _110257 G1 _110255 _110256) (@lem8268775 A B P lt2 _110257 s P1 _110255 _110256)). Qed.
Lemma lem8268786 (q : Prop) (p : Prop) (r : Prop) : (term15 p q r) = (term15 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8268787 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1661 A B P G1 lt2 _110257 s P1 _110255 _110256) = (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256).
Proof. exact (@lem8268786 (term606 A P lt2 _110257 s _110256) (term1631 A B P lt2 _110257 G1 _110255 _110256) (term615 A B P P1 _110255 _110256)). Qed.
Lemma lem8268803 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1657 A B P G1 P1 _110255 lt2 _110257 s _110256) = (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256).
Proof. exact (TRANS (@lem8268782 A B P G1 lt2 _110257 s P1 _110255 _110256) (@lem8268787 A B P s lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268804 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1655 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256).
Proof. exact (TRANS (@lem8268760 A B P G1 P1 _110255 lt2 _110257 s _110256) (@lem8268803 A B P s lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268805 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8268806 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1663 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1664 A B P s lt2 _110257 G1 P1 _110255 _110256).
Proof. exact (MK_COMB (@lem8268805) (@lem8268804 A B P s lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268820 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8268821 {A B P : Type'} (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1632 A B P P1 lt2 _110257 G1 _110255 _110256) = (term1665 A B P lt2 _110257 G1 P1 _110255 _110256).
Proof. exact (@lem8268820 (term1631 A B P lt2 _110257 G1 _110255 _110256) (term615 A B P P1 _110255 _110256)). Qed.
Lemma lem8268827 {A P : Type'} (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1666 A P lt2 _110257 s _110256) = (term1666 A P lt2 _110257 s _110256).
Proof. exact (eq_refl (term1666 A P lt2 _110257 s _110256)). Qed.
Lemma lem8268828 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256) = (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256).
Proof. exact (MK_COMB (@lem8268827 A P lt2 _110257 s _110256) (@lem8268821 A B P lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268839 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : ((term1655 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256)) = ((term1662 A B P s lt2 _110257 G1 P1 _110255 _110256) = (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256)).
Proof. exact (MK_COMB (@lem8268806 A B P s lt2 _110257 G1 P1 _110255 _110256) (@lem8268828 A B P s lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268841 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8268842 (x : Prop) : (x = x) = True.
Proof. exact (@lem8268841 Prop x). Qed.
Lemma lem8268843 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : ((term1662 A B P s lt2 _110257 G1 P1 _110255 _110256) = (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256)) = True.
Proof. exact (@lem8268842 (term1662 A B P s lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268844 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : ((term1655 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256)) = True.
Proof. exact (TRANS (@lem8268839 A B P s lt2 _110257 G1 P1 _110255 _110256) (@lem8268843 A B P s lt2 _110257 G1 P1 _110255 _110256)). Qed.
Lemma lem8268845 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : True = ((term1655 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256)).
Proof. exact (SYM (@lem8268844 A B P s P1 lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268846 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1655 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256).
Proof. exact (EQ_MP (@lem8268845 A B P s P1 lt2 _110257 G1 _110255 _110256) (@lem0)). Qed.
Lemma lem8268847 {A B P : Type'} (_110257 : A) (_110255 : A -> B) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1667 A B P s P1 lt2 _110257 G1 _110255 _110256.
Proof. exact (EQ_MP (@lem8268846 A B P s P1 lt2 _110257 G1 _110255 _110256) (@lem8268130 A B P _110255 _110257 _110256 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8268849 (b : Prop) (a : Prop) : (a \/ b) = (term761 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8268850 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256) = (term1668 A B P P1 G1 _110255 lt2 _110257 s _110256).
Proof. exact (@lem8268849 (term1632 A B P P1 lt2 _110257 G1 _110255 _110256) (term606 A P lt2 _110257 s _110256)). Qed.
Lemma lem8268852 (a : Prop) (b : Prop) : (term763 a b) = (term764 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8268853 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1669 A B P P1 lt2 _110257 G1 _110255 _110256) = (term1670 A B P P1 lt2 _110257 G1 _110255 _110256).
Proof. exact (@lem8268852 (term615 A B P P1 _110255 _110256) (term1631 A B P lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268855 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8268856 {A B P : Type'} (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term767 A B P P1 _110255 _110256) = (term614 A B P P1 _110255 _110256).
Proof. exact (@lem8268855 (term614 A B P P1 _110255 _110256)). Qed.
Lemma lem8268857 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8268858 {A B P : Type'} (P1 : type560 A B P) (_110255 : A -> B) (_110256 : P) : (term768 A B P P1 _110255 _110256) = (term616 A B P P1 _110255 _110256).
Proof. exact (MK_COMB (@lem8268857) (@lem8268856 A B P P1 _110255 _110256)). Qed.
Lemma lem8268860 (a : Prop) : (term304 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8268861 {A B P : Type'} (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1671 A B P lt2 _110257 G1 _110255 _110256) = (term1629 A B P lt2 _110257 G1 _110255 _110256).
Proof. exact (@lem8268860 (term1629 A B P lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268862 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1670 A B P P1 lt2 _110257 G1 _110255 _110256) = (term1643 A B P P1 lt2 _110257 G1 _110255 _110256).
Proof. exact (MK_COMB (@lem8268858 A B P P1 _110255 _110256) (@lem8268861 A B P lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268863 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1669 A B P P1 lt2 _110257 G1 _110255 _110256) = (term1643 A B P P1 lt2 _110257 G1 _110255 _110256).
Proof. exact (TRANS (@lem8268853 A B P P1 lt2 _110257 G1 _110255 _110256) (@lem8268862 A B P P1 lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268864 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8268865 {A B P : Type'} (P1 : type560 A B P) (lt2 : type1402 A) (_110257 : A) (G1 : type557 A B P) (_110255 : A -> B) (_110256 : P) : (term1672 A B P P1 lt2 _110257 G1 _110255 _110256) = (term1673 A B P P1 lt2 _110257 G1 _110255 _110256).
Proof. exact (MK_COMB (@lem8268864) (@lem8268863 A B P P1 lt2 _110257 G1 _110255 _110256)). Qed.
Lemma lem8268866 {A P : Type'} (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term606 A P lt2 _110257 s _110256) = (term606 A P lt2 _110257 s _110256).
Proof. exact (eq_refl (term606 A P lt2 _110257 s _110256)). Qed.
Lemma lem8268867 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1668 A B P P1 G1 _110255 lt2 _110257 s _110256) = (term1674 A B P P1 G1 _110255 lt2 _110257 s _110256).
Proof. exact (MK_COMB (@lem8268865 A B P P1 lt2 _110257 G1 _110255 _110256) (@lem8268866 A P lt2 _110257 s _110256)). Qed.
Lemma lem8268868 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (_110255 : A -> B) (lt2 : type1402 A) (_110257 : A) (s : P -> A) (_110256 : P) : (term1667 A B P s P1 lt2 _110257 G1 _110255 _110256) = (term1674 A B P P1 G1 _110255 lt2 _110257 s _110256).
Proof. exact (TRANS (@lem8268850 A B P P1 G1 _110255 lt2 _110257 s _110256) (@lem8268867 A B P P1 G1 _110255 lt2 _110257 s _110256)). Qed.
Lemma lem8268870 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1643 A B P P1 lt2 y G1 f a.
Proof. exact (conj (@lem8268746 A B P P' p P1 G1 f lt2 y s a h1) (@lem8268753 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268872 {A B P : Type'} (_110255 : A -> B) (_110257 : A) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1674 A B P P1 G1 _110255 lt2 _110257 s _110256.
Proof. exact (EQ_MP (@lem8268868 A B P P1 G1 _110255 lt2 _110257 s _110256) (@lem8268847 A B P _110257 _110255 _110256 P1 G1 P2 G2 lt2 s h1)). Qed.
Lemma lem8268873 {A B P : Type'} (_110255 : A -> B) (_110257 : A) (_110256 : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1674 A B P P1 G1 _110255 lt2 _110257 s _110256.
Proof. exact (@lem8268872 A B P _110255 _110257 _110256 P1 G1 P2 G2 lt2 s h1). Qed.
Lemma lem8268874 {A B P : Type'} (f : A -> B) (y : A) (a : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1674 A B P P1 G1 f lt2 y s a.
Proof. exact (@lem8268873 A B P f y a P1 G1 P2 G2 lt2 s h1). Qed.
Lemma lem8268877 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1648 A B P P' p P1 G1 f lt2 y s a) : term606 A P lt2 y s a.
Proof. exact (@lem8268874 A B P f y a P1 G1 P2 G2 lt2 s h1 (@lem8268870 A B P P' p P1 G1 f lt2 y s a h2)). Qed.
Lemma lem8268878 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1675 A P lt2 y s a.
Proof. exact (fun h0 : term608 A P lt2 y s a => @lem8268877 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h2). Qed.
Lemma lem8268880 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268881 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1675 A P lt2 y s a) = (term606 A P lt2 y s a).
Proof. exact (@lem8268880 (term606 A P lt2 y s a)). Qed.
Lemma lem8268882 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1648 A B P P' p P1 G1 f lt2 y s a) : term606 A P lt2 y s a.
Proof. exact (EQ_MP (@lem8268881 A P lt2 y s a) (@lem8268878 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h2)). Qed.
Lemma lem8268885 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8268887 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term608 A P lt2 y s a) = (term1676 A P lt2 y s a).
Proof. exact (@lem8268885 (term606 A P lt2 y s a)). Qed.
Lemma lem8268890 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1648 A B P P' p P1 G1 f lt2 y s a) : term1676 A P lt2 y s a.
Proof. exact (EQ_MP (@lem8268887 A P lt2 y s a) (@lem8268148 A B P P' p P1 G1 f lt2 y s a h1)). Qed.
Lemma lem8268893 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1648 A B P P' p P1 G1 f lt2 y s a) : False.
Proof. exact (@lem8268890 A B P P' p P1 G1 f lt2 y s a h2 (@lem8268882 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h2)). Qed.
Lemma lem8268894 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1648 A B P P' p P1 G1 f lt2 y s a) : term802.
Proof. exact (fun h0 : ~ False => @lem8268893 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h2). Qed.
Lemma lem8268896 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8268897 : term802 = False.
Proof. exact (@lem8268896 False). Qed.
Lemma lem8268898 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1648 A B P P' p P1 G1 f lt2 y s a) : False.
Proof. exact (EQ_MP (@lem8268897) (@lem8268894 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h2)). Qed.
Lemma lem8268899 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term1380 A B P P1 G1 P2 G2 lt2 s) (h2 : term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a) : False.
Proof. exact (or_elim (@lem8266946 A B P P2 G2 P' p P1 G1 f lt2 y s a h2) (fun h0 : term1649 A B P P' p P2 G2 f lt2 y s a => @lem8268589 A B P P1 G1 P' p P2 G2 f lt2 y s a h1 h0) (fun h0 : term1648 A B P P' p P1 G1 f lt2 y s a => @lem8268898 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h0)). Qed.
Lemma lem8268900 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term137 A B P p lt2 s P') (h2 : term1380 A B P P1 G1 P2 G2 lt2 s) (h3 : term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a) : False.
Proof. exact (ex_elim (@lem8265765 A B P p lt2 s P' h1) (fun z' : type518 A B P => fun h0 : term491 A B P p lt2 s P' z' => @lem8268899 A B P P2 G2 P' p P1 G1 f lt2 y s a h2 h3)). Qed.
Lemma lem8268901 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1380 A B P P1 G1 P2 G2 lt2 s) (h4 : term1622 A B P P2 G2 P' p P1 G1 f lt2 y s a) : False.
Proof. exact (ex_elim (@lem8266045 A B P lt2 s p h1) (fun z : type518 A B P => fun h0 : term582 A B P lt2 s p z => @lem8268900 A B P P2 G2 P' p P1 G1 f lt2 y s a h2 h3 h4)). Qed.
Lemma lem8268902 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) (h4 : term1380 A B P P1 G1 P2 G2 lt2 s) : False.
Proof. exact (ex_elim (@lem8266503 A B P P2 G2 P' p P1 G1 f lt2 s a h3) (fun y : A => fun h0 : term1624 A B P P2 G2 P' p P1 G1 f lt2 s a y => @lem8268901 A B P P2 G2 P' p P1 G1 f lt2 y s a h1 h2 h4 h0)). Qed.
Lemma lem8268903 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) (h4 : term1380 A B P P1 G1 P2 G2 lt2 s) : (term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) = False.
Proof. exact (prop_ext (fun h5 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a => @lem8268902 A B P P' p f a P1 G1 P2 G2 lt2 s h1 h2 h3 h4) (fun h5 : False => @lem8265425 A B P P2 G2 P' p P1 G1 f lt2 s a h3)). Qed.
Lemma lem8268904 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a) (h4 : term1380 A B P P1 G1 P2 G2 lt2 s) : False.
Proof. exact (EQ_MP (@lem8268903 A B P P' p f a P1 G1 P2 G2 lt2 s h1 h2 h3 h4) (@lem8265425 A B P P2 G2 P' p P1 G1 f lt2 s a h3)). Qed.
Lemma lem8268905 {A B P : Type'} (f : A -> B) (a : P) (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1527 A B P P2 G2 P' p P1 G1 f lt2 s a.
Proof. exact (fun h0 : term1528 A B P P2 G2 P' p P1 G1 f lt2 s a => @lem8268904 A B P P' p f a P1 G1 P2 G2 lt2 s h1 h2 h0 h3). Qed.
Lemma lem8268906 {A B P : Type'} (f : A -> B) (a : P) (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1488 A B P P2 G2 P' p P1 G1 f lt2 s a.
Proof. exact (EQ_MP (@lem8265424 A B P P2 G2 P' p P1 G1 f lt2 s a) (@lem8268905 A B P f a p P' P1 G1 P2 G2 lt2 s h1 h2 h3)). Qed.
Lemma lem8268911 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1495 A B P P2 G2 P' p P1 G1 f lt2 s.
Proof. exact (fun a : P => @lem8268906 A B P f a p P' P1 G1 P2 G2 lt2 s h1 h2 h3). Qed.
Lemma lem8268916 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1380 A B P P1 G1 P2 G2 lt2 s) : term1497 A B P P2 G2 P' p P1 G1 lt2 s.
Proof. exact (fun f : A -> B => @lem8268911 A B P f p P' P1 G1 P2 G2 lt2 s h1 h2 h3). Qed.
Lemma lem8268917 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1502 A B P P2 G2 P' p P1 G1 lt2 s.
Proof. exact (fun h0 : term1380 A B P P1 G1 P2 G2 lt2 s => @lem8268916 A B P p P' P1 G1 P2 G2 lt2 s h1 h2 h0). Qed.
Lemma lem8268918 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term1503 A B P P2 G2 P' p P1 G1 lt2 s.
Proof. exact (fun h0 : term262 A B P lt2 s p => @lem8268917 A B P P2 G2 P1 G1 p lt2 s P' h0 h1). Qed.
Lemma lem8268919 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : term1504 A B P P2 G2 P' p P1 G1 lt2 s.
Proof. exact (fun h0 : term137 A B P p lt2 s P' => @lem8268918 A B P P2 G2 P1 G1 p lt2 s P' h0). Qed.
Lemma lem8268924 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : term1506 A B P G2 P' p P1 G1 lt2 s.
Proof. exact (fun P2 : type560 A B P => @lem8268919 A B P P2 G2 P' p P1 G1 lt2 s). Qed.
Lemma lem8268929 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (p : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : term1508 A B P G2 P' p G1 lt2 s.
Proof. exact (fun P1 : type560 A B P => @lem8268924 A B P G2 P' p P1 G1 lt2 s). Qed.
Lemma lem8268934 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : term1510 A B P G2 P' G1 lt2 s.
Proof. exact (fun p : type560 A B P => @lem8268929 A B P G2 P' p G1 lt2 s). Qed.
Lemma lem8268939 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : term1512 A B P G2 G1 lt2 s.
Proof. exact (fun P' : type560 A B P => @lem8268934 A B P G2 P' G1 lt2 s). Qed.
Lemma lem8268944 {A B P : Type'} (G1 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : term1514 A B P G1 lt2 s.
Proof. exact (fun G2 : type557 A B P => @lem8268939 A B P G2 G1 lt2 s). Qed.
Lemma lem8268949 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term1516 A B P lt2 s.
Proof. exact (fun G1 : type557 A B P => @lem8268944 A B P G1 lt2 s). Qed.
Lemma lem8268954 {A B P : Type'} (s : P -> A) : term1524 A B P s.
Proof. exact (fun lt2 : type1402 A => @lem8268949 A B P lt2 s). Qed.
Lemma lem8268959 {A B P : Type'} : term1526 A B P.
Proof. exact (fun s : P -> A => @lem8268954 A B P s). Qed.
Lemma lem8268960 {A B P : Type'} : term1430 A B P.
Proof. exact (EQ_MP (@lem8265417 A B P) (@lem8268959 A B P)). Qed.
Lemma lem8268961 {A B P : Type'} (s : P -> A) : term1677 A B P s.
Proof. exact (@lem8268960 A B P s). Qed.
Lemma lem8268962 {A B P : Type'} (s : P -> A) : (term1677 A B P s) = (term1426 A B P s).
Proof. exact (eq_refl (term1677 A B P s)). Qed.
Lemma lem8268963 {A B P : Type'} (s : P -> A) : term1426 A B P s.
Proof. exact (EQ_MP (@lem8268962 A B P s) (@lem8268961 A B P s)). Qed.
Lemma lem8268964 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) : term1678 A B P s lt2.
Proof. exact (@lem8268963 A B P s lt2). Qed.
Lemma lem8268965 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1678 A B P s lt2) = (term1422 A B P lt2 s).
Proof. exact (eq_refl (term1678 A B P s lt2)). Qed.
Lemma lem8268966 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term1422 A B P lt2 s.
Proof. exact (EQ_MP (@lem8268965 A B P lt2 s) (@lem8268964 A B P s lt2)). Qed.
Lemma lem8268967 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) : term1679 A B P lt2 s z.
Proof. exact (@lem8268966 A B P lt2 s z). Qed.
Lemma lem8268968 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) : (term1679 A B P lt2 s z) = (term1418 A B P z lt2 s).
Proof. exact (eq_refl (term1679 A B P lt2 s z)). Qed.
Lemma lem8268969 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) : term1418 A B P z lt2 s.
Proof. exact (EQ_MP (@lem8268968 A B P z lt2 s) (@lem8268967 A B P lt2 s z)). Qed.
Lemma lem8268970 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) : term1680 A B P z lt2 s G1.
Proof. exact (@lem8268969 A B P z lt2 s G1). Qed.
Lemma lem8268971 {A B P : Type'} (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1680 A B P z lt2 s G1) = (term1414 A B P G1 z lt2 s).
Proof. exact (eq_refl (term1680 A B P z lt2 s G1)). Qed.
Lemma lem8268972 {A B P : Type'} (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1414 A B P G1 z lt2 s.
Proof. exact (EQ_MP (@lem8268971 A B P G1 z lt2 s) (@lem8268970 A B P z lt2 s G1)). Qed.
Lemma lem8268973 {A B P : Type'} (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) : term1681 A B P G1 z lt2 s G2.
Proof. exact (@lem8268972 A B P G1 z lt2 s G2). Qed.
Lemma lem8268974 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1681 A B P G1 z lt2 s G2) = (term1410 A B P G2 G1 z lt2 s).
Proof. exact (eq_refl (term1681 A B P G1 z lt2 s G2)). Qed.
Lemma lem8268975 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1410 A B P G2 G1 z lt2 s.
Proof. exact (EQ_MP (@lem8268974 A B P G2 G1 z lt2 s) (@lem8268973 A B P G1 z lt2 s G2)). Qed.
Lemma lem8268976 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : term1682 A B P G2 G1 z lt2 s P'.
Proof. exact (@lem8268975 A B P G2 G1 z lt2 s P'). Qed.
Lemma lem8268977 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1682 A B P G2 G1 z lt2 s P') = (term1406 A B P P' G2 G1 z lt2 s).
Proof. exact (eq_refl (term1682 A B P G2 G1 z lt2 s P')). Qed.
Lemma lem8268978 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1406 A B P P' G2 G1 z lt2 s.
Proof. exact (EQ_MP (@lem8268977 A B P P' G2 G1 z lt2 s) (@lem8268976 A B P G2 G1 z lt2 s P')). Qed.
Lemma lem8268979 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : term1683 A B P P' G2 G1 z lt2 s p.
Proof. exact (@lem8268978 A B P P' G2 G1 z lt2 s p). Qed.
Lemma lem8268980 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1683 A B P P' G2 G1 z lt2 s p) = (term1402 A B P p P' G2 G1 z lt2 s).
Proof. exact (eq_refl (term1683 A B P P' G2 G1 z lt2 s p)). Qed.
Lemma lem8268981 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1402 A B P p P' G2 G1 z lt2 s.
Proof. exact (EQ_MP (@lem8268980 A B P p P' G2 G1 z lt2 s) (@lem8268979 A B P P' G2 G1 z lt2 s p)). Qed.
Lemma lem8268982 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) : term1684 A B P p P' G2 G1 z lt2 s P1.
Proof. exact (@lem8268981 A B P p P' G2 G1 z lt2 s P1). Qed.
Lemma lem8268983 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1684 A B P p P' G2 G1 z lt2 s P1) = (term1398 A B P P1 p P' G2 G1 z lt2 s).
Proof. exact (eq_refl (term1684 A B P p P' G2 G1 z lt2 s P1)). Qed.
Lemma lem8268984 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1398 A B P P1 p P' G2 G1 z lt2 s.
Proof. exact (EQ_MP (@lem8268983 A B P P1 p P' G2 G1 z lt2 s) (@lem8268982 A B P p P' G2 G1 z lt2 s P1)). Qed.
Lemma lem8268985 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) : term1685 A B P P1 p P' G2 G1 z lt2 s P2.
Proof. exact (@lem8268984 A B P P1 p P' G2 G1 z lt2 s P2). Qed.
Lemma lem8268986 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : (term1685 A B P P1 p P' G2 G1 z lt2 s P2) = (term1388 A B P P2 P1 p P' G2 G1 z lt2 s).
Proof. exact (eq_refl (term1685 A B P P1 p P' G2 G1 z lt2 s P2)). Qed.
Lemma lem8268987 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1388 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (EQ_MP (@lem8268986 A B P P2 P1 p P' G2 G1 z lt2 s) (@lem8268985 A B P P1 p P' G2 G1 z lt2 s P2)). Qed.
Lemma lem8268989 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) : term1388 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8264535 A B P P2 P1 p P' G2 G1 z lt2 s (@lem8268987 A B P P2 P1 p P' G2 G1 z lt2 s)). Qed.
Lemma lem8268990 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term1393 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8268989 A B P P2 P1 p P' G2 G1 z lt2 s (@lem8249446 A B P p lt2 s P' h1)). Qed.
Lemma lem8268991 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1386 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (@lem8268990 A B P P2 P1 G2 G1 z p lt2 s P' h2 (@lem8249448 A B P lt2 s p h1)). Qed.
Lemma lem8268992 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1387 A B P P2 P1 p P' G2 G1 z lt2 s) : False.
Proof. exact (@lem8268991 A B P P2 P1 G2 G1 z p lt2 s P' h1 h2 (@lem8264519 A B P P2 P1 p P' G2 G1 z lt2 s h3)). Qed.
Lemma lem8268993 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1387 A B P P2 P1 p P' G2 G1 z lt2 s) : (term1387 A B P P2 P1 p P' G2 G1 z lt2 s) = False.
Proof. exact (prop_ext (fun h4 : term1387 A B P P2 P1 p P' G2 G1 z lt2 s => @lem8268992 A B P P2 P1 p P' G2 G1 z lt2 s h1 h2 h3) (fun h4 : False => @lem8264519 A B P P2 P1 p P' G2 G1 z lt2 s h3)). Qed.
Lemma lem8268994 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (lt2 : type1402 A) (s : P -> A) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1387 A B P P2 P1 p P' G2 G1 z lt2 s) : False.
Proof. exact (EQ_MP (@lem8268993 A B P P2 P1 p P' G2 G1 z lt2 s h1 h2 h3) (@lem8264519 A B P P2 P1 p P' G2 G1 z lt2 s h3)). Qed.
Lemma lem8268995 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1386 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (fun h0 : term1387 A B P P2 P1 p P' G2 G1 z lt2 s => @lem8268994 A B P P2 P1 p P' G2 G1 z lt2 s h1 h2 h0). Qed.
Lemma lem8268996 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1385 A B P P2 P1 p P' G2 G1 z lt2 s.
Proof. exact (EQ_MP (@lem8264518 A B P P2 P1 p P' G2 G1 z lt2 s) (@lem8268995 A B P P2 P1 G2 G1 z p lt2 s P' h1 h2)). Qed.
Lemma lem8268997 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1686 A B P p lt2 s P'.
Proof. exact (conj (@lem8249448 A B P lt2 s p h1) (@lem8249446 A B P p lt2 s P' h2)). Qed.
Lemma lem8268999 (p : Prop) (q : Prop) (r : Prop) : (term1687 p q r) = (term1688 p q r).
Proof. exact (EQ_MP (@lem892 p q r) (@lem887 p q r)). Qed.
Lemma lem8269000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1689 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1690 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (@lem8268999 (term1686 A B P p lt2 s P') (term1383 A B P P1 G1 H1 lt2 s P2 G2 H2) (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269006 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269007 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269006 (A -> B) P Q). Qed.
Lemma lem8269008 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1693 A B P p lt2 s P') = (term1694 A B P p lt2 s P').
Proof. exact (@lem8269007 A B (term261 A B P lt2 s p) (term336 A B P p lt2 s P')). Qed.
Lemma lem8269009 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1695 A B P lt2 s p f) = (term259 A B P lt2 s f p).
Proof. exact (eq_refl (term1695 A B P lt2 s p f)). Qed.
Lemma lem8269010 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1696 A B P lt2 s p) = (term261 A B P lt2 s p).
Proof. exact (fun_ext (fun f : A -> B => @lem8269009 A B P lt2 s f p)). Qed.
Lemma lem8269011 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269012 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1697 A B P lt2 s p) = (term262 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8269011 A B) (@lem8269010 A B P lt2 s p)). Qed.
Lemma lem8269013 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269014 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term1698 A B P lt2 s p) = (term1699 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8269013) (@lem8269012 A B P lt2 s p)). Qed.
Lemma lem8269015 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1700 A B P p lt2 s P' f) = (term335 A B P p lt2 s f P').
Proof. exact (eq_refl (term1700 A B P p lt2 s P' f)). Qed.
Lemma lem8269016 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1701 A B P p lt2 s P') = (term336 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8269015 A B P p lt2 s f P')). Qed.
Lemma lem8269017 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269018 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1702 A B P p lt2 s P') = (term137 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269017 A B) (@lem8269016 A B P p lt2 s P')). Qed.
Lemma lem8269019 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1693 A B P p lt2 s P') = (term1686 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269014 A B P lt2 s p) (@lem8269018 A B P p lt2 s P')). Qed.
Lemma lem8269020 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269021 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1703 A B P p lt2 s P') = (term1704 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269020) (@lem8269019 A B P p lt2 s P')). Qed.
Lemma lem8269022 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1695 A B P lt2 s p f) = (term259 A B P lt2 s f p).
Proof. exact (eq_refl (term1695 A B P lt2 s p f)). Qed.
Lemma lem8269023 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269024 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1705 A B P lt2 s p f) = (term1706 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8269023) (@lem8269022 A B P lt2 s f p)). Qed.
Lemma lem8269025 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1700 A B P p lt2 s P' f) = (term335 A B P p lt2 s f P').
Proof. exact (eq_refl (term1700 A B P p lt2 s P' f)). Qed.
Lemma lem8269026 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1707 A B P p lt2 s P' f) = (term1708 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269024 A B P lt2 s f p) (@lem8269025 A B P p lt2 s f P')). Qed.
Lemma lem8269027 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1709 A B P p lt2 s P') = (term1710 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8269026 A B P p lt2 s f P')). Qed.
Lemma lem8269028 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269029 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1694 A B P p lt2 s P') = (term1711 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269028 A B) (@lem8269027 A B P p lt2 s P')). Qed.
Lemma lem8269030 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : ((term1693 A B P p lt2 s P') = (term1694 A B P p lt2 s P')) = ((term1686 A B P p lt2 s P') = (term1711 A B P p lt2 s P')).
Proof. exact (MK_COMB (@lem8269021 A B P p lt2 s P') (@lem8269029 A B P p lt2 s P')). Qed.
Lemma lem8269031 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1686 A B P p lt2 s P') = (term1711 A B P p lt2 s P').
Proof. exact (EQ_MP (@lem8269030 A B P p lt2 s P') (@lem8269008 A B P p lt2 s P')). Qed.
Lemma lem8269037 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269038 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269037 (A -> B) P Q). Qed.
Lemma lem8269039 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1712 A B P p lt2 s f P') = (term1713 A B P p lt2 s f P').
Proof. exact (@lem8269038 A B (term257 A B P lt2 s f p) (term334 A B P p lt2 s f P')). Qed.
Lemma lem8269040 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1714 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (eq_refl (term1714 A B P lt2 s f p g)). Qed.
Lemma lem8269041 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1715 A B P lt2 s f p) = (term257 A B P lt2 s f p).
Proof. exact (fun_ext (fun g : A -> B => @lem8269040 A B P lt2 s f p g)). Qed.
Lemma lem8269042 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269043 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1716 A B P lt2 s f p) = (term259 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8269042 A B) (@lem8269041 A B P lt2 s f p)). Qed.
Lemma lem8269044 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269045 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) : (term1717 A B P lt2 s f p) = (term1706 A B P lt2 s f p).
Proof. exact (MK_COMB (@lem8269044) (@lem8269043 A B P lt2 s f p)). Qed.
Lemma lem8269046 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1718 A B P p lt2 s f P' g) = (term333 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term1718 A B P p lt2 s f P' g)). Qed.
Lemma lem8269047 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1719 A B P p lt2 s f P') = (term334 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8269046 A B P p lt2 s f P' g)). Qed.
Lemma lem8269048 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269049 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1720 A B P p lt2 s f P') = (term335 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269048 A B) (@lem8269047 A B P p lt2 s f P')). Qed.
Lemma lem8269050 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1712 A B P p lt2 s f P') = (term1708 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269045 A B P lt2 s f p) (@lem8269049 A B P p lt2 s f P')). Qed.
Lemma lem8269051 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269052 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1721 A B P p lt2 s f P') = (term1722 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269051) (@lem8269050 A B P p lt2 s f P')). Qed.
Lemma lem8269053 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1714 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (eq_refl (term1714 A B P lt2 s f p g)). Qed.
Lemma lem8269054 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269055 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1723 A B P lt2 s f p g) = (term1724 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8269054) (@lem8269053 A B P lt2 s f p g)). Qed.
Lemma lem8269056 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1718 A B P p lt2 s f P' g) = (term333 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term1718 A B P p lt2 s f P' g)). Qed.
Lemma lem8269057 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1725 A B P p lt2 s f P' g) = (term1726 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269055 A B P lt2 s f p g) (@lem8269056 A B P p lt2 s f P' g)). Qed.
Lemma lem8269058 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1727 A B P p lt2 s f P') = (term1728 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8269057 A B P p lt2 s f P' g)). Qed.
Lemma lem8269059 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269060 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1713 A B P p lt2 s f P') = (term1729 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269059 A B) (@lem8269058 A B P p lt2 s f P')). Qed.
Lemma lem8269061 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : ((term1712 A B P p lt2 s f P') = (term1713 A B P p lt2 s f P')) = ((term1708 A B P p lt2 s f P') = (term1729 A B P p lt2 s f P')).
Proof. exact (MK_COMB (@lem8269052 A B P p lt2 s f P') (@lem8269060 A B P p lt2 s f P')). Qed.
Lemma lem8269062 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1708 A B P p lt2 s f P') = (term1729 A B P p lt2 s f P').
Proof. exact (EQ_MP (@lem8269061 A B P p lt2 s f P') (@lem8269039 A B P p lt2 s f P')). Qed.
Lemma lem8269068 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269069 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : (term8 P P' Q) = (term9 P P' Q).
Proof. exact (@lem8269068 P P' Q). Qed.
Lemma lem8269070 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1730 A B P p lt2 s f P' g) = (term1731 A B P p lt2 s f P' g).
Proof. exact (@lem8269069 P (term253 A B P lt2 s f p g) (term332 A B P p lt2 s f P' g)). Qed.
Lemma lem8269071 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1732 A B P lt2 s f p g a) = (term251 A B P lt2 s f p g a).
Proof. exact (eq_refl (term1732 A B P lt2 s f p g a)). Qed.
Lemma lem8269072 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1733 A B P lt2 s f p g) = (term253 A B P lt2 s f p g).
Proof. exact (fun_ext (fun a : P => @lem8269071 A B P lt2 s f p g a)). Qed.
Lemma lem8269073 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269074 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1734 A B P lt2 s f p g) = (term255 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8269073 P) (@lem8269072 A B P lt2 s f p g)). Qed.
Lemma lem8269075 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269076 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) : (term1735 A B P lt2 s f p g) = (term1724 A B P lt2 s f p g).
Proof. exact (MK_COMB (@lem8269075) (@lem8269074 A B P lt2 s f p g)). Qed.
Lemma lem8269077 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term1736 A B P p lt2 s f P' g a) = (term331 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term1736 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269078 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1737 A B P p lt2 s f P' g) = (term332 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8269077 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269079 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269080 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1738 A B P p lt2 s f P' g) = (term333 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269079 P) (@lem8269078 A B P p lt2 s f P' g)). Qed.
Lemma lem8269081 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1730 A B P p lt2 s f P' g) = (term1726 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269076 A B P lt2 s f p g) (@lem8269080 A B P p lt2 s f P' g)). Qed.
Lemma lem8269082 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269083 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1739 A B P p lt2 s f P' g) = (term1740 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269082) (@lem8269081 A B P p lt2 s f P' g)). Qed.
Lemma lem8269084 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1732 A B P lt2 s f p g a) = (term251 A B P lt2 s f p g a).
Proof. exact (eq_refl (term1732 A B P lt2 s f p g a)). Qed.
Lemma lem8269085 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269086 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term1741 A B P lt2 s f p g a) = (term1742 A B P lt2 s f p g a).
Proof. exact (MK_COMB (@lem8269085) (@lem8269084 A B P lt2 s f p g a)). Qed.
Lemma lem8269087 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term1736 A B P p lt2 s f P' g a) = (term331 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term1736 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269088 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term1743 A B P p lt2 s f P' g a) = (term1744 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8269086 A B P lt2 s f p g a) (@lem8269087 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269089 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1745 A B P p lt2 s f P' g) = (term1746 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8269088 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269090 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269091 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1731 A B P p lt2 s f P' g) = (term1747 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269090 P) (@lem8269089 A B P p lt2 s f P' g)). Qed.
Lemma lem8269092 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : ((term1730 A B P p lt2 s f P' g) = (term1731 A B P p lt2 s f P' g)) = ((term1726 A B P p lt2 s f P' g) = (term1747 A B P p lt2 s f P' g)).
Proof. exact (MK_COMB (@lem8269083 A B P p lt2 s f P' g) (@lem8269091 A B P p lt2 s f P' g)). Qed.
Lemma lem8269093 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1726 A B P p lt2 s f P' g) = (term1747 A B P p lt2 s f P' g).
Proof. exact (EQ_MP (@lem8269092 A B P p lt2 s f P' g) (@lem8269070 A B P p lt2 s f P' g)). Qed.
Lemma lem8269128 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1728 A B P p lt2 s f P') = (term1748 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8269093 A B P p lt2 s f P' g)). Qed.
Lemma lem8269129 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269130 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1729 A B P p lt2 s f P') = (term1749 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269129 A B) (@lem8269128 A B P p lt2 s f P')). Qed.
Lemma lem8269135 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1708 A B P p lt2 s f P') = (term1749 A B P p lt2 s f P').
Proof. exact (TRANS (@lem8269062 A B P p lt2 s f P') (@lem8269130 A B P p lt2 s f P')). Qed.
Lemma lem8269136 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1710 A B P p lt2 s P') = (term1750 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8269135 A B P p lt2 s f P')). Qed.
Lemma lem8269137 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269138 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1711 A B P p lt2 s P') = (term1751 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269137 A B) (@lem8269136 A B P p lt2 s P')). Qed.
Lemma lem8269143 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1686 A B P p lt2 s P') = (term1751 A B P p lt2 s P').
Proof. exact (TRANS (@lem8269031 A B P p lt2 s P') (@lem8269138 A B P p lt2 s P')). Qed.
Lemma lem8269144 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269145 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1752 A B P p lt2 s P') = (term1753 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269144) (@lem8269143 A B P p lt2 s P')). Qed.
Lemma lem8269147 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269148 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269147 (A -> B) P Q). Qed.
Lemma lem8269149 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1754 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1755 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (@lem8269148 A B (term1756 A B P lt2 s P1 G1 H1) (term1756 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8269150 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) : (term1757 A B P lt2 s P1 G1 H1 f) = (term1758 A B P lt2 s P1 G1 f H1).
Proof. exact (eq_refl (term1757 A B P lt2 s P1 G1 H1 f)). Qed.
Lemma lem8269151 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) : (term1759 A B P lt2 s P1 G1 H1) = (term1756 A B P lt2 s P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8269150 A B P lt2 s P1 G1 f H1)). Qed.
Lemma lem8269152 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269153 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) : (term1760 A B P lt2 s P1 G1 H1) = (term1255 A B P lt2 s P1 G1 H1).
Proof. exact (MK_COMB (@lem8269152 A B) (@lem8269151 A B P lt2 s P1 G1 H1)). Qed.
Lemma lem8269154 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269155 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) : (term1761 A B P lt2 s P1 G1 H1) = (term1003 A B P lt2 s P1 G1 H1).
Proof. exact (MK_COMB (@lem8269154) (@lem8269153 A B P lt2 s P1 G1 H1)). Qed.
Lemma lem8269156 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1757 A B P lt2 s P2 G2 H2 f) = (term1758 A B P lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term1757 A B P lt2 s P2 G2 H2 f)). Qed.
Lemma lem8269157 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1759 A B P lt2 s P2 G2 H2) = (term1756 A B P lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269156 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8269158 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269159 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1760 A B P lt2 s P2 G2 H2) = (term1255 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269158 A B) (@lem8269157 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8269160 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1754 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1383 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269155 A B P lt2 s P1 G1 H1) (@lem8269159 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8269161 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269162 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1762 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1763 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269161) (@lem8269160 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269163 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) : (term1757 A B P lt2 s P1 G1 H1 f) = (term1758 A B P lt2 s P1 G1 f H1).
Proof. exact (eq_refl (term1757 A B P lt2 s P1 G1 H1 f)). Qed.
Lemma lem8269164 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269165 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) : (term1764 A B P lt2 s P1 G1 H1 f) = (term1765 A B P lt2 s P1 G1 f H1).
Proof. exact (MK_COMB (@lem8269164) (@lem8269163 A B P lt2 s P1 G1 f H1)). Qed.
Lemma lem8269166 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1757 A B P lt2 s P2 G2 H2 f) = (term1758 A B P lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term1757 A B P lt2 s P2 G2 H2 f)). Qed.
Lemma lem8269167 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1766 A B P P1 G1 H1 lt2 s P2 G2 H2 f) = (term1767 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269165 A B P lt2 s P1 G1 f H1) (@lem8269166 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8269168 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1768 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1769 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269167 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269169 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269170 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1755 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1770 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269169 A B) (@lem8269168 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269171 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : ((term1754 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1755 A B P P1 G1 H1 lt2 s P2 G2 H2)) = ((term1383 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1770 A B P P1 G1 H1 lt2 s P2 G2 H2)).
Proof. exact (MK_COMB (@lem8269162 A B P P1 G1 H1 lt2 s P2 G2 H2) (@lem8269170 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269172 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1383 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1770 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (EQ_MP (@lem8269171 A B P P1 G1 H1 lt2 s P2 G2 H2) (@lem8269149 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269178 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269179 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269178 (A -> B) P Q). Qed.
Lemma lem8269180 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1771 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1772 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (@lem8269179 A B (term1773 A B P lt2 s P1 G1 f H1) (term1773 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8269181 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) : (term1774 A B P lt2 s P1 G1 f H1 g) = (term1775 A B P lt2 s P1 G1 f H1 g).
Proof. exact (eq_refl (term1774 A B P lt2 s P1 G1 f H1 g)). Qed.
Lemma lem8269182 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) : (term1776 A B P lt2 s P1 G1 f H1) = (term1773 A B P lt2 s P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8269181 A B P lt2 s P1 G1 f H1 g)). Qed.
Lemma lem8269183 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269184 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) : (term1777 A B P lt2 s P1 G1 f H1) = (term1758 A B P lt2 s P1 G1 f H1).
Proof. exact (MK_COMB (@lem8269183 A B) (@lem8269182 A B P lt2 s P1 G1 f H1)). Qed.
Lemma lem8269185 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269186 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) : (term1778 A B P lt2 s P1 G1 f H1) = (term1765 A B P lt2 s P1 G1 f H1).
Proof. exact (MK_COMB (@lem8269185) (@lem8269184 A B P lt2 s P1 G1 f H1)). Qed.
Lemma lem8269187 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1774 A B P lt2 s P2 G2 f H2 g) = (term1775 A B P lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term1774 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269188 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1776 A B P lt2 s P2 G2 f H2) = (term1773 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269187 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269189 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269190 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1777 A B P lt2 s P2 G2 f H2) = (term1758 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269189 A B) (@lem8269188 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8269191 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1771 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1767 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269186 A B P lt2 s P1 G1 f H1) (@lem8269190 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8269192 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269193 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1779 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1780 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269192) (@lem8269191 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269194 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) : (term1774 A B P lt2 s P1 G1 f H1 g) = (term1775 A B P lt2 s P1 G1 f H1 g).
Proof. exact (eq_refl (term1774 A B P lt2 s P1 G1 f H1 g)). Qed.
Lemma lem8269195 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269196 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) : (term1781 A B P lt2 s P1 G1 f H1 g) = (term1782 A B P lt2 s P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8269195) (@lem8269194 A B P lt2 s P1 G1 f H1 g)). Qed.
Lemma lem8269197 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1774 A B P lt2 s P2 G2 f H2 g) = (term1775 A B P lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term1774 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269198 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1783 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1784 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269196 A B P lt2 s P1 G1 f H1 g) (@lem8269197 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269199 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1785 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1786 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269198 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269200 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269201 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1772 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1787 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269200 A B) (@lem8269199 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269202 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : ((term1771 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1772 A B P P1 G1 H1 lt2 s P2 G2 f H2)) = ((term1767 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1787 A B P P1 G1 H1 lt2 s P2 G2 f H2)).
Proof. exact (MK_COMB (@lem8269193 A B P P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269201 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269203 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1767 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1787 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (EQ_MP (@lem8269202 A B P P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269180 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269209 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269210 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : (term8 P P' Q) = (term9 P P' Q).
Proof. exact (@lem8269209 P P' Q). Qed.
Lemma lem8269211 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1788 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1789 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (@lem8269210 P (term1790 A B P lt2 s P1 G1 f H1 g) (term1790 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269212 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term1791 A B P lt2 s P1 G1 f H1 g a) = (term1792 A B P lt2 s P1 G1 f H1 g a).
Proof. exact (eq_refl (term1791 A B P lt2 s P1 G1 f H1 g a)). Qed.
Lemma lem8269213 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) : (term1793 A B P lt2 s P1 G1 f H1 g) = (term1790 A B P lt2 s P1 G1 f H1 g).
Proof. exact (fun_ext (fun a : P => @lem8269212 A B P lt2 s P1 G1 f H1 g a)). Qed.
Lemma lem8269214 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269215 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) : (term1794 A B P lt2 s P1 G1 f H1 g) = (term1775 A B P lt2 s P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8269214 P) (@lem8269213 A B P lt2 s P1 G1 f H1 g)). Qed.
Lemma lem8269216 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269217 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) : (term1795 A B P lt2 s P1 G1 f H1 g) = (term1782 A B P lt2 s P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8269216) (@lem8269215 A B P lt2 s P1 G1 f H1 g)). Qed.
Lemma lem8269218 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1791 A B P lt2 s P2 G2 f H2 g a) = (term1792 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term1791 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269219 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1793 A B P lt2 s P2 G2 f H2 g) = (term1790 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8269218 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269220 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269221 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1794 A B P lt2 s P2 G2 f H2 g) = (term1775 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269220 P) (@lem8269219 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269222 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1788 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1784 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269217 A B P lt2 s P1 G1 f H1 g) (@lem8269221 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269223 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269224 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1796 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1797 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269223) (@lem8269222 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269225 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term1791 A B P lt2 s P1 G1 f H1 g a) = (term1792 A B P lt2 s P1 G1 f H1 g a).
Proof. exact (eq_refl (term1791 A B P lt2 s P1 G1 f H1 g a)). Qed.
Lemma lem8269226 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269227 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term1798 A B P lt2 s P1 G1 f H1 g a) = (term1799 A B P lt2 s P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8269226) (@lem8269225 A B P lt2 s P1 G1 f H1 g a)). Qed.
Lemma lem8269228 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1791 A B P lt2 s P2 G2 f H2 g a) = (term1792 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term1791 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269229 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1800 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1801 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269227 A B P lt2 s P1 G1 f H1 g a) (@lem8269228 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269230 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1802 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1803 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8269229 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269231 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269232 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1789 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1804 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269231 P) (@lem8269230 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269233 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : ((term1788 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1789 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)) = ((term1784 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1804 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)).
Proof. exact (MK_COMB (@lem8269224 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) (@lem8269232 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269234 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1784 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1804 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (EQ_MP (@lem8269233 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) (@lem8269211 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269281 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1786 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1805 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269234 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269282 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269283 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1787 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1806 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269282 A B) (@lem8269281 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269288 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1767 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1806 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (TRANS (@lem8269203 A B P P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269283 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269289 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1769 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1807 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269288 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269290 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269291 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1770 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1808 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269290 A B) (@lem8269289 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269296 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1383 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1808 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (TRANS (@lem8269172 A B P P1 G1 H1 lt2 s P2 G2 H2) (@lem8269291 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269297 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1809 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1810 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269145 A B P p lt2 s P') (@lem8269296 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269299 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269300 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269299 (A -> B) P Q). Qed.
Lemma lem8269301 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1811 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1812 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (@lem8269300 A B (term1750 A B P p lt2 s P') (term1807 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269302 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1813 A B P p lt2 s P' f) = (term1749 A B P p lt2 s f P').
Proof. exact (eq_refl (term1813 A B P p lt2 s P' f)). Qed.
Lemma lem8269303 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1814 A B P p lt2 s P') = (term1750 A B P p lt2 s P').
Proof. exact (fun_ext (fun f : A -> B => @lem8269302 A B P p lt2 s f P')). Qed.
Lemma lem8269304 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269305 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1815 A B P p lt2 s P') = (term1751 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269304 A B) (@lem8269303 A B P p lt2 s P')). Qed.
Lemma lem8269306 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269307 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term1816 A B P p lt2 s P') = (term1753 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8269306) (@lem8269305 A B P p lt2 s P')). Qed.
Lemma lem8269308 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1817 A B P P1 G1 H1 lt2 s P2 G2 H2 f) = (term1806 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term1817 A B P P1 G1 H1 lt2 s P2 G2 H2 f)). Qed.
Lemma lem8269309 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1818 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1807 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269308 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269310 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269311 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1819 A B P P1 G1 H1 lt2 s P2 G2 H2) = (term1808 A B P P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269310 A B) (@lem8269309 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269312 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1811 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1810 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269307 A B P p lt2 s P') (@lem8269311 A B P P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269313 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269314 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1820 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1821 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269313) (@lem8269312 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269315 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1813 A B P p lt2 s P' f) = (term1749 A B P p lt2 s f P').
Proof. exact (eq_refl (term1813 A B P p lt2 s P' f)). Qed.
Lemma lem8269316 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269317 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1822 A B P p lt2 s P' f) = (term1823 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269316) (@lem8269315 A B P p lt2 s f P')). Qed.
Lemma lem8269318 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1817 A B P P1 G1 H1 lt2 s P2 G2 H2 f) = (term1806 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term1817 A B P P1 G1 H1 lt2 s P2 G2 H2 f)). Qed.
Lemma lem8269319 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1824 A B P p P' P1 G1 H1 lt2 s P2 G2 H2 f) = (term1825 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269317 A B P p lt2 s f P') (@lem8269318 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269320 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1826 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1827 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269319 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269321 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269322 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1812 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1828 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269321 A B) (@lem8269320 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269323 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : ((term1811 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1812 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)) = ((term1810 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1828 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)).
Proof. exact (MK_COMB (@lem8269314 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (@lem8269322 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269324 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1810 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1828 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (EQ_MP (@lem8269323 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (@lem8269301 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269330 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269331 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269330 (A -> B) P Q). Qed.
Lemma lem8269332 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1829 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1830 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (@lem8269331 A B (term1748 A B P p lt2 s f P') (term1805 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269333 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1831 A B P p lt2 s f P' g) = (term1747 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term1831 A B P p lt2 s f P' g)). Qed.
Lemma lem8269334 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1832 A B P p lt2 s f P') = (term1748 A B P p lt2 s f P').
Proof. exact (fun_ext (fun g : A -> B => @lem8269333 A B P p lt2 s f P' g)). Qed.
Lemma lem8269335 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269336 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1833 A B P p lt2 s f P') = (term1749 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269335 A B) (@lem8269334 A B P p lt2 s f P')). Qed.
Lemma lem8269337 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269338 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) : (term1834 A B P p lt2 s f P') = (term1823 A B P p lt2 s f P').
Proof. exact (MK_COMB (@lem8269337) (@lem8269336 A B P p lt2 s f P')). Qed.
Lemma lem8269339 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1835 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1804 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term1835 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269340 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1836 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1805 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269339 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269341 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269342 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1837 A B P P1 G1 H1 lt2 s P2 G2 f H2) = (term1806 A B P P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269341 A B) (@lem8269340 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269343 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1829 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1825 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269338 A B P p lt2 s f P') (@lem8269342 A B P P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269344 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269345 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1838 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1839 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269344) (@lem8269343 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269346 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1831 A B P p lt2 s f P' g) = (term1747 A B P p lt2 s f P' g).
Proof. exact (eq_refl (term1831 A B P p lt2 s f P' g)). Qed.
Lemma lem8269347 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269348 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1840 A B P p lt2 s f P' g) = (term1841 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269347) (@lem8269346 A B P p lt2 s f P' g)). Qed.
Lemma lem8269349 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1835 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1804 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term1835 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269350 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1842 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1843 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269348 A B P p lt2 s f P' g) (@lem8269349 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269351 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1844 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1845 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269350 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269352 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269353 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1830 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1846 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269352 A B) (@lem8269351 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269354 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : ((term1829 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1830 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)) = ((term1825 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1846 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)).
Proof. exact (MK_COMB (@lem8269345 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269353 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269355 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1825 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1846 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (EQ_MP (@lem8269354 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269332 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269361 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269362 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : (term8 P P' Q) = (term9 P P' Q).
Proof. exact (@lem8269361 P P' Q). Qed.
Lemma lem8269363 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1847 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1848 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (@lem8269362 P (term1746 A B P p lt2 s f P' g) (term1803 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269364 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term1849 A B P p lt2 s f P' g a) = (term1744 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term1849 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269365 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1850 A B P p lt2 s f P' g) = (term1746 A B P p lt2 s f P' g).
Proof. exact (fun_ext (fun a : P => @lem8269364 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269366 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269367 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1851 A B P p lt2 s f P' g) = (term1747 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269366 P) (@lem8269365 A B P p lt2 s f P' g)). Qed.
Lemma lem8269368 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269369 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) : (term1852 A B P p lt2 s f P' g) = (term1841 A B P p lt2 s f P' g).
Proof. exact (MK_COMB (@lem8269368) (@lem8269367 A B P p lt2 s f P' g)). Qed.
Lemma lem8269370 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1853 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1801 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term1853 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269371 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1854 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1803 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8269370 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269372 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269373 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1855 A B P P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1804 A B P P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269372 P) (@lem8269371 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269374 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1847 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1843 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269369 A B P p lt2 s f P' g) (@lem8269373 A B P P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269375 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269376 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1856 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1857 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269375) (@lem8269374 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269377 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term1849 A B P p lt2 s f P' g a) = (term1744 A B P p lt2 s f P' g a).
Proof. exact (eq_refl (term1849 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269378 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269379 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : (term1858 A B P p lt2 s f P' g a) = (term1859 A B P p lt2 s f P' g a).
Proof. exact (MK_COMB (@lem8269378) (@lem8269377 A B P p lt2 s f P' g a)). Qed.
Lemma lem8269380 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1853 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1801 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term1853 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269381 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1860 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269379 A B P p lt2 s f P' g a) (@lem8269380 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269382 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1862 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1863 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8269381 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269383 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269384 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1848 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1864 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269383 P) (@lem8269382 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269385 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : ((term1847 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1848 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)) = ((term1843 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1864 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)).
Proof. exact (MK_COMB (@lem8269376 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) (@lem8269384 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269386 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1843 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1864 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (EQ_MP (@lem8269385 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) (@lem8269363 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269465 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1845 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1865 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269386 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269466 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269467 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1846 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1866 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269466 A B) (@lem8269465 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269472 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1825 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1866 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (TRANS (@lem8269355 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269467 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269473 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1827 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1867 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269472 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269474 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269475 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1828 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1868 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269474 A B) (@lem8269473 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269480 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1810 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1868 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (TRANS (@lem8269324 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (@lem8269475 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269481 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1809 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1868 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (TRANS (@lem8269297 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (@lem8269480 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269482 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269483 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1869 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1870 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269482) (@lem8269481 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269516 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (eq_refl (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269517 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1690 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1871 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269483 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (@lem8269516 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269520 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1689 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1871 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (TRANS (@lem8269000 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) (@lem8269517 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269521 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1871 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1689 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (SYM (@lem8269520 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269525 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269526 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1691 A B P Q) = (term1692 A B P Q).
Proof. exact (@lem8269525 (A -> B) P Q). Qed.
Lemma lem8269527 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1872 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1873 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (@lem8269526 A B (term1000 A B P p P' k P1 G1 H1) (term1032 A B P p P' h P2 G2 H2)). Qed.
Lemma lem8269528 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) : (term1874 A B P p P' k P1 G1 H1 f) = (term998 A B P p P' k P1 G1 H1 f).
Proof. exact (eq_refl (term1874 A B P p P' k P1 G1 H1 f)). Qed.
Lemma lem8269529 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) : (term1875 A B P p P' k P1 G1 H1) = (term1000 A B P p P' k P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8269528 A B P p P' k P1 G1 H1 f)). Qed.
Lemma lem8269530 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269531 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) : (term1876 A B P p P' k P1 G1 H1) = (term1002 A B P p P' k P1 G1 H1).
Proof. exact (MK_COMB (@lem8269530 A B) (@lem8269529 A B P p P' k P1 G1 H1)). Qed.
Lemma lem8269532 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269533 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) : (term1877 A B P p P' k P1 G1 H1) = (term1878 A B P p P' k P1 G1 H1).
Proof. exact (MK_COMB (@lem8269532) (@lem8269531 A B P p P' k P1 G1 H1)). Qed.
Lemma lem8269534 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1879 A B P p P' h P2 G2 H2 f) = (term1030 A B P p P' h P2 G2 H2 f).
Proof. exact (eq_refl (term1879 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269535 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1880 A B P p P' h P2 G2 H2) = (term1032 A B P p P' h P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269534 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269536 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269537 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1881 A B P p P' h P2 G2 H2) = (term1034 A B P p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269536 A B) (@lem8269535 A B P p P' h P2 G2 H2)). Qed.
Lemma lem8269538 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1872 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1384 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269533 A B P p P' k P1 G1 H1) (@lem8269537 A B P p P' h P2 G2 H2)). Qed.
Lemma lem8269539 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269540 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1882 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1883 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269539) (@lem8269538 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269541 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) : (term1874 A B P p P' k P1 G1 H1 f) = (term998 A B P p P' k P1 G1 H1 f).
Proof. exact (eq_refl (term1874 A B P p P' k P1 G1 H1 f)). Qed.
Lemma lem8269542 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269543 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) : (term1884 A B P p P' k P1 G1 H1 f) = (term1885 A B P p P' k P1 G1 H1 f).
Proof. exact (MK_COMB (@lem8269542) (@lem8269541 A B P p P' k P1 G1 H1 f)). Qed.
Lemma lem8269544 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1879 A B P p P' h P2 G2 H2 f) = (term1030 A B P p P' h P2 G2 H2 f).
Proof. exact (eq_refl (term1879 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269545 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1886 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1887 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269543 A B P p P' k P1 G1 H1 f) (@lem8269544 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269546 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1888 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1889 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269545 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269547 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269548 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1873 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1890 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269547 A B) (@lem8269546 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269549 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : ((term1872 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1873 A B P k P1 G1 H1 p P' h P2 G2 H2)) = ((term1384 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1890 A B P k P1 G1 H1 p P' h P2 G2 H2)).
Proof. exact (MK_COMB (@lem8269540 A B P k P1 G1 H1 p P' h P2 G2 H2) (@lem8269548 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269550 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1384 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1890 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (EQ_MP (@lem8269549 A B P k P1 G1 H1 p P' h P2 G2 H2) (@lem8269527 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269556 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term8 A P Q) = (term9 A P Q).
Proof. exact (EQ_MP (@lem8248094 A P Q) (@lem8248093 A P Q)). Qed.
Lemma lem8269557 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : (term8 P P' Q) = (term9 P P' Q).
Proof. exact (@lem8269556 P P' Q). Qed.
Lemma lem8269558 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1891 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1892 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (@lem8269557 P (term996 A B P p P' k P1 G1 H1 f) (term1028 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269559 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1893 A B P p P' k P1 G1 H1 f a) = (term994 A B P p P' k P1 G1 H1 f a).
Proof. exact (eq_refl (term1893 A B P p P' k P1 G1 H1 f a)). Qed.
Lemma lem8269560 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) : (term1894 A B P p P' k P1 G1 H1 f) = (term996 A B P p P' k P1 G1 H1 f).
Proof. exact (fun_ext (fun a : P => @lem8269559 A B P p P' k P1 G1 H1 f a)). Qed.
Lemma lem8269561 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269562 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) : (term1895 A B P p P' k P1 G1 H1 f) = (term998 A B P p P' k P1 G1 H1 f).
Proof. exact (MK_COMB (@lem8269561 P) (@lem8269560 A B P p P' k P1 G1 H1 f)). Qed.
Lemma lem8269563 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269564 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) : (term1896 A B P p P' k P1 G1 H1 f) = (term1885 A B P p P' k P1 G1 H1 f).
Proof. exact (MK_COMB (@lem8269563) (@lem8269562 A B P p P' k P1 G1 H1 f)). Qed.
Lemma lem8269565 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1897 A B P p P' h P2 G2 H2 f a) = (term1026 A B P p P' h P2 G2 H2 f a).
Proof. exact (eq_refl (term1897 A B P p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269566 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1898 A B P p P' h P2 G2 H2 f) = (term1028 A B P p P' h P2 G2 H2 f).
Proof. exact (fun_ext (fun a : P => @lem8269565 A B P p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269567 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269568 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1899 A B P p P' h P2 G2 H2 f) = (term1030 A B P p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269567 P) (@lem8269566 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269569 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1891 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1887 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269564 A B P p P' k P1 G1 H1 f) (@lem8269568 A B P p P' h P2 G2 H2 f)). Qed.
Lemma lem8269570 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8269571 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1900 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1901 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269570) (@lem8269569 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269572 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1893 A B P p P' k P1 G1 H1 f a) = (term994 A B P p P' k P1 G1 H1 f a).
Proof. exact (eq_refl (term1893 A B P p P' k P1 G1 H1 f a)). Qed.
Lemma lem8269573 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269574 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1902 A B P p P' k P1 G1 H1 f a) = (term1903 A B P p P' k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8269573) (@lem8269572 A B P p P' k P1 G1 H1 f a)). Qed.
Lemma lem8269575 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1897 A B P p P' h P2 G2 H2 f a) = (term1026 A B P p P' h P2 G2 H2 f a).
Proof. exact (eq_refl (term1897 A B P p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269576 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1904 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) = (term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8269574 A B P p P' k P1 G1 H1 f a) (@lem8269575 A B P p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269577 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1906 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1907 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (fun_ext (fun a : P => @lem8269576 A B P k P1 G1 H1 p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269578 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269579 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1892 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1908 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269578 P) (@lem8269577 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269580 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : ((term1891 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1892 A B P k P1 G1 H1 p P' h P2 G2 H2 f)) = ((term1887 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1908 A B P k P1 G1 H1 p P' h P2 G2 H2 f)).
Proof. exact (MK_COMB (@lem8269571 A B P k P1 G1 H1 p P' h P2 G2 H2 f) (@lem8269579 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269581 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1887 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1908 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (EQ_MP (@lem8269580 A B P k P1 G1 H1 p P' h P2 G2 H2 f) (@lem8269558 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269600 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1889 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1909 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269581 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269601 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269602 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1890 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1910 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269601 A B) (@lem8269600 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269607 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1384 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1910 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (TRANS (@lem8269550 A B P k P1 G1 H1 p P' h P2 G2 H2) (@lem8269602 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269608 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269609 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1911 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1912 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269608) (@lem8269607 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269622 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1371 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1371 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (eq_refl (term1371 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269623 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1913 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1914 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269609 A B P k P1 G1 H1 p P' h P2 G2 H2) (@lem8269622 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269626 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1914 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1913 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (SYM (@lem8269623 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269628 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term0 A P Q.
Proof. exact (@lem8248088 A P Q (@lem7363 A P Q)). Qed.
Lemma lem8269629 {A B : Type'} (P : type572 A B) (Q : type572 A B) : term1915 A B P Q.
Proof. exact (@lem8269628 (A -> B) P Q). Qed.
Lemma lem8269630 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1916 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8269629 A B (term1867 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (term1349 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269631 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1917 A B P p P' P1 G1 H1 lt2 s P2 G2 H2 f) = (term1866 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term1917 A B P p P' P1 G1 H1 lt2 s P2 G2 H2 f)). Qed.
Lemma lem8269632 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269633 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1918 A B P p P' P1 G1 H1 lt2 s P2 G2 H2 f) = (term1919 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269632) (@lem8269631 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269634 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1920 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w f) = (term1347 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (eq_refl (term1920 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w f)). Qed.
Lemma lem8269635 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1921 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w f) = (term1922 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269633 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269634 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269636 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1923 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1924 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8269635 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269637 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269638 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1925 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1926 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269637 A B) (@lem8269636 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269639 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269640 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1927 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1928 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269639) (@lem8269638 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269641 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1917 A B P p P' P1 G1 H1 lt2 s P2 G2 H2 f) = (term1866 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term1917 A B P p P' P1 G1 H1 lt2 s P2 G2 H2 f)). Qed.
Lemma lem8269642 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1929 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1867 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269641 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269643 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269644 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1930 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1868 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269643 A B) (@lem8269642 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269645 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269646 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1931 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) = (term1870 A B P p P' P1 G1 H1 lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8269645) (@lem8269644 A B P p P' P1 G1 H1 lt2 s P2 G2 H2)). Qed.
Lemma lem8269647 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1920 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w f) = (term1347 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (eq_refl (term1920 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w f)). Qed.
Lemma lem8269648 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1932 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1349 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8269647 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269649 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269650 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1933 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1351 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269649 A B) (@lem8269648 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269651 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1934 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1871 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269646 A B P p P' P1 G1 H1 lt2 s P2 G2 H2) (@lem8269650 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269652 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1916 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) = (term1935 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269640 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) (@lem8269651 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269653 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1935 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (EQ_MP (@lem8269652 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) (@lem8269630 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269655 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term0 A P Q.
Proof. exact (@lem8248088 A P Q (@lem7363 A P Q)). Qed.
Lemma lem8269656 {A B : Type'} (P : type572 A B) (Q : type572 A B) : term1915 A B P Q.
Proof. exact (@lem8269655 (A -> B) P Q). Qed.
Lemma lem8269657 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1936 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w.
Proof. exact (@lem8269656 A B (term1865 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) (term1345 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269658 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1937 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1864 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term1937 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269659 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269660 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1938 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1939 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269659) (@lem8269658 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269661 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1940 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g) = (term1343 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (eq_refl (term1940 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g)). Qed.
Lemma lem8269662 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1941 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g) = (term1942 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8269660 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) (@lem8269661 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269663 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1943 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1944 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (fun_ext (fun g : A -> B => @lem8269662 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269664 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269665 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1945 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1946 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269664 A B) (@lem8269663 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269666 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269667 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1947 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1948 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269666) (@lem8269665 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269668 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1937 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1864 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term1937 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269669 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1949 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1865 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8269668 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269670 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269671 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1950 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1866 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269670 A B) (@lem8269669 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269672 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269673 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1951 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) = (term1919 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8269672) (@lem8269671 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2)). Qed.
Lemma lem8269674 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1940 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g) = (term1343 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (eq_refl (term1940 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w g)). Qed.
Lemma lem8269675 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1952 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1345 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (fun_ext (fun g : A -> B => @lem8269674 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269676 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269677 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1953 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1347 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269676 A B) (@lem8269675 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269678 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1954 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1922 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269673 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2) (@lem8269677 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269679 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1936 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) = (term1955 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269667 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) (@lem8269678 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269680 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1955 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w.
Proof. exact (EQ_MP (@lem8269679 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w) (@lem8269657 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8269682 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term0 A P Q.
Proof. exact (@lem8248088 A P Q (@lem7363 A P Q)). Qed.
Lemma lem8269683 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : term0 P P' Q.
Proof. exact (@lem8269682 P P' Q). Qed.
Lemma lem8269684 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : term1956 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w.
Proof. exact (@lem8269683 P (term1863 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) (term1341 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269685 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1957 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term1957 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269686 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269687 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1958 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1959 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269686) (@lem8269685 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269688 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1960 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w a) = (term1339 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term1960 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w a)). Qed.
Lemma lem8269689 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1961 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w a) = (term1962 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8269687 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) (@lem8269688 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8269690 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1963 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1964 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (fun_ext (fun a : P => @lem8269689 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8269691 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269692 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1965 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1966 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8269691 P) (@lem8269690 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269693 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269694 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1967 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1968 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8269693) (@lem8269692 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269695 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1957 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term1957 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269696 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1969 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1863 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8269695 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8269697 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269698 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1970 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1864 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269697 P) (@lem8269696 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269699 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269700 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1971 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) = (term1939 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8269699) (@lem8269698 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8269701 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1960 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w a) = (term1339 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term1960 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w a)). Qed.
Lemma lem8269702 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1972 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1341 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (fun_ext (fun a : P => @lem8269701 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8269703 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269704 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1973 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1343 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8269703 P) (@lem8269702 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269705 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1974 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1942 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8269700 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g) (@lem8269704 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269706 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : (term1956 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) = (term1975 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w).
Proof. exact (MK_COMB (@lem8269694 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) (@lem8269705 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269707 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : term1975 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w.
Proof. exact (EQ_MP (@lem8269706 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w) (@lem8269684 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8269711 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term0 A P Q.
Proof. exact (@lem8248088 A P Q (@lem7363 A P Q)). Qed.
Lemma lem8269712 {A B : Type'} (P : type572 A B) (Q : type572 A B) : term1915 A B P Q.
Proof. exact (@lem8269711 (A -> B) P Q). Qed.
Lemma lem8269713 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1976 A B P h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8269712 A B (term1909 A B P k P1 G1 H1 p P' h P2 G2 H2) (term1369 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269714 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1977 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1908 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (eq_refl (term1977 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269715 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269716 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1978 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1979 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269715) (@lem8269714 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269717 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1980 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f) = (term1367 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (eq_refl (term1980 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f)). Qed.
Lemma lem8269718 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1981 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f) = (term1982 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8269716 A B P k P1 G1 H1 p P' h P2 G2 H2 f) (@lem8269717 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269719 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1983 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1984 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8269718 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269720 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269721 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1985 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1986 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269720 A B) (@lem8269719 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269722 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269723 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1987 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1988 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269722) (@lem8269721 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269724 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1977 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1908 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (eq_refl (term1977 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269725 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1989 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1909 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8269724 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269726 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269727 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1990 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1910 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269726 A B) (@lem8269725 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269728 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269729 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1991 A B P k P1 G1 H1 p P' h P2 G2 H2) = (term1912 A B P k P1 G1 H1 p P' h P2 G2 H2).
Proof. exact (MK_COMB (@lem8269728) (@lem8269727 A B P k P1 G1 H1 p P' h P2 G2 H2)). Qed.
Lemma lem8269730 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1980 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f) = (term1367 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (eq_refl (term1980 A B P h k P2 P1 G2 G1 z p P' H2 H1 w f)). Qed.
Lemma lem8269731 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1992 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1369 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (fun_ext (fun f : A -> B => @lem8269730 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269732 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8269733 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1993 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1371 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269732 A B) (@lem8269731 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269734 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1994 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1914 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269729 A B P k P1 G1 H1 p P' h P2 G2 H2) (@lem8269733 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269735 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : (term1976 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) = (term1995 A B P h k P2 P1 G2 G1 z p P' H2 H1 w).
Proof. exact (MK_COMB (@lem8269723 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) (@lem8269734 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269736 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1995 A B P h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (EQ_MP (@lem8269735 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) (@lem8269713 A B P h k P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8269738 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : term0 A P Q.
Proof. exact (@lem8248088 A P Q (@lem7363 A P Q)). Qed.
Lemma lem8269739 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : term0 P P' Q.
Proof. exact (@lem8269738 P P' Q). Qed.
Lemma lem8269740 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : term1996 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w.
Proof. exact (@lem8269739 P (term1907 A B P k P1 G1 H1 p P' h P2 G2 H2 f) (term1365 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269741 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1997 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) = (term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a).
Proof. exact (eq_refl (term1997 A B P k P1 G1 H1 p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269742 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269743 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1998 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) = (term1999 A B P k P1 G1 H1 p P' h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8269742) (@lem8269741 A B P k P1 G1 H1 p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269744 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2000 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w a) = (term1363 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (eq_refl (term2000 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w a)). Qed.
Lemma lem8269745 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2001 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w a) = (term2002 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8269743 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) (@lem8269744 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w)). Qed.
Lemma lem8269746 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term2003 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term2004 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (fun_ext (fun a : P => @lem8269745 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w)). Qed.
Lemma lem8269747 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269748 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term2005 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term2006 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8269747 P) (@lem8269746 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269749 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269750 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term2007 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term2008 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8269749) (@lem8269748 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269751 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1997 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) = (term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a).
Proof. exact (eq_refl (term1997 A B P k P1 G1 H1 p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269752 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term2009 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1907 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (fun_ext (fun a : P => @lem8269751 A B P k P1 G1 H1 p P' h P2 G2 H2 f a)). Qed.
Lemma lem8269753 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269754 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term2010 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1908 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269753 P) (@lem8269752 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269755 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269756 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term2011 A B P k P1 G1 H1 p P' h P2 G2 H2 f) = (term1979 A B P k P1 G1 H1 p P' h P2 G2 H2 f).
Proof. exact (MK_COMB (@lem8269755) (@lem8269754 A B P k P1 G1 H1 p P' h P2 G2 H2 f)). Qed.
Lemma lem8269757 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2000 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w a) = (term1363 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (eq_refl (term2000 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w a)). Qed.
Lemma lem8269758 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term2012 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term1365 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (fun_ext (fun a : P => @lem8269757 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w)). Qed.
Lemma lem8269759 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8269760 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term2013 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term1367 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8269759 P) (@lem8269758 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269761 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term2014 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term1982 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8269756 A B P k P1 G1 H1 p P' h P2 G2 H2 f) (@lem8269760 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269762 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : (term1996 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) = (term2015 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w).
Proof. exact (MK_COMB (@lem8269750 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) (@lem8269761 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269763 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) : term2015 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w.
Proof. exact (EQ_MP (@lem8269762 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w) (@lem8269740 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w)). Qed.
Lemma lem8269766 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) : term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8269767 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term162 A B P lt2 s a f g.
Proof. exact (h1). Qed.
Lemma lem8269768 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) (h1 : term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) : term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a.
Proof. exact (h1). Qed.
Lemma lem8269769 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : p f a.
Proof. exact (h1). Qed.
Lemma lem8269770 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term346 A B P lt2 s a f g z.
Proof. exact (@lem8269767 A B P lt2 s a f g h1 z). Qed.
Lemma lem8269771 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term346 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term346 A B P lt2 s a f g z)). Qed.
Lemma lem8269772 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term325 A B P lt2 s a f g z.
Proof. exact (EQ_MP (@lem8269771 A B P lt2 s a f g z) (@lem8269770 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269773 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = ((term325 A B P lt2 s a f g z) = True).
Proof. exact (@lem7 (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8269788 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (EQ_MP (@lem8269773 A B P lt2 s a f g z) (@lem8269772 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269789 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (@lem8269788 A B P z lt2 s a f g h1). Qed.
Lemma lem8269790 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term326 A B P lt2 s a f g) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8269789 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269791 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8269792 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = (term1444 A).
Proof. exact (MK_COMB (@lem8269791 A) (@lem8269790 A B P lt2 s a f g h1)). Qed.
Lemma lem8269794 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8269795 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8269794 A t). Qed.
Lemma lem8269796 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8269795 A True). Qed.
Lemma lem8269797 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = True.
Proof. exact (TRANS (@lem8269792 A B P lt2 s a f g h1) (@lem8269796 A)). Qed.
Lemma lem8269798 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269799 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term167 A B P lt2 s a f g) = (imp True).
Proof. exact (MK_COMB (@lem8269798) (@lem8269797 A B P lt2 s a f g h1)). Qed.
Lemma lem8269802 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : ((p f a) = (p g a)) = ((p f a) = (p g a)).
Proof. exact (eq_refl ((p f a) = (p g a))). Qed.
Lemma lem8269803 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term251 A B P lt2 s f p g a) = (term2016 A B P f p g a).
Proof. exact (MK_COMB (@lem8269799 A B P lt2 s a f g h1) (@lem8269802 A B P f p g a)). Qed.
Lemma lem8269805 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8269806 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2016 A B P f p g a) = ((p f a) = (p g a)).
Proof. exact (@lem8269805 ((p f a) = (p g a))). Qed.
Lemma lem8269809 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term251 A B P lt2 s f p g a) = ((p f a) = (p g a)).
Proof. exact (TRANS (@lem8269803 A B P p lt2 s a f g h1) (@lem8269806 A B P f p g a)). Qed.
Lemma lem8269810 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269811 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1742 A B P lt2 s f p g a) = (term2017 A B P f p g a).
Proof. exact (MK_COMB (@lem8269810) (@lem8269809 A B P p lt2 s a f g h1)). Qed.
Lemma lem8269823 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (EQ_MP (@lem8269773 A B P lt2 s a f g z) (@lem8269772 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269824 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (@lem8269823 A B P z lt2 s a f g h1). Qed.
Lemma lem8269825 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term326 A B P lt2 s a f g) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8269824 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269826 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8269827 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = (term1444 A).
Proof. exact (MK_COMB (@lem8269826 A) (@lem8269825 A B P lt2 s a f g h1)). Qed.
Lemma lem8269829 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8269830 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8269829 A t). Qed.
Lemma lem8269831 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8269830 A True). Qed.
Lemma lem8269832 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = True.
Proof. exact (TRANS (@lem8269827 A B P lt2 s a f g h1) (@lem8269831 A)). Qed.
Lemma lem8269833 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8269834 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term328 A B P p lt2 s a f g) = (term2018 A B P p g a).
Proof. exact (MK_COMB (@lem8269833 A B P p g a) (@lem8269832 A B P lt2 s a f g h1)). Qed.
Lemma lem8269836 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8269837 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2018 A B P p g a) = (p g a).
Proof. exact (@lem8269836 (p g a)). Qed.
Lemma lem8269838 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term328 A B P p lt2 s a f g) = (p g a).
Proof. exact (TRANS (@lem8269834 A B P p lt2 s a f g h1) (@lem8269837 A B P p g a)). Qed.
Lemma lem8269839 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8269840 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term329 A B P p lt2 s a f g) = (term2019 A B P f p g a).
Proof. exact (MK_COMB (@lem8269839 A B P p f a) (@lem8269838 A B P p lt2 s a f g h1)). Qed.
Lemma lem8269843 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269844 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term330 A B P p lt2 s a f g) = (term2020 A B P f p g a).
Proof. exact (MK_COMB (@lem8269843) (@lem8269840 A B P p lt2 s a f g h1)). Qed.
Lemma lem8269847 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) : ((P' f a) = (P' g a)) = ((P' f a) = (P' g a)).
Proof. exact (eq_refl ((P' f a) = (P' g a))). Qed.
Lemma lem8269848 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term331 A B P p lt2 s f P' g a) = (term2021 A B P p f P' g a).
Proof. exact (MK_COMB (@lem8269844 A B P p lt2 s a f g h1) (@lem8269847 A B P f P' g a)). Qed.
Lemma lem8269851 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1744 A B P p lt2 s f P' g a) = (term2022 A B P p f P' g a).
Proof. exact (MK_COMB (@lem8269811 A B P p lt2 s a f g h1) (@lem8269848 A B P p P' lt2 s a f g h1)). Qed.
Lemma lem8269854 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269855 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1859 A B P p lt2 s f P' g a) = (term2023 A B P p f P' g a).
Proof. exact (MK_COMB (@lem8269854) (@lem8269851 A B P p P' lt2 s a f g h1)). Qed.
Lemma lem8269865 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (EQ_MP (@lem8269773 A B P lt2 s a f g z) (@lem8269772 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269866 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (@lem8269865 A B P z lt2 s a f g h1). Qed.
Lemma lem8269867 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term326 A B P lt2 s a f g) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8269866 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269868 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8269869 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = (term1444 A).
Proof. exact (MK_COMB (@lem8269868 A) (@lem8269867 A B P lt2 s a f g h1)). Qed.
Lemma lem8269871 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8269872 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8269871 A t). Qed.
Lemma lem8269873 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8269872 A True). Qed.
Lemma lem8269874 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = True.
Proof. exact (TRANS (@lem8269869 A B P lt2 s a f g h1) (@lem8269873 A)). Qed.
Lemma lem8269875 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269876 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term167 A B P lt2 s a f g) = (imp True).
Proof. exact (MK_COMB (@lem8269875) (@lem8269874 A B P lt2 s a f g h1)). Qed.
Lemma lem8269887 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2024 A B P P1 G1 f H1 g a) = (term2024 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2024 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8269888 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1792 A B P lt2 s P1 G1 f H1 g a) = (term2025 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8269876 A B P lt2 s a f g h1) (@lem8269887 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8269890 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8269891 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2025 A B P P1 G1 f H1 g a) = (term2024 A B P P1 G1 f H1 g a).
Proof. exact (@lem8269890 (term2024 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8269902 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1792 A B P lt2 s P1 G1 f H1 g a) = (term2024 A B P P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8269888 A B P P1 G1 H1 lt2 s a f g h1) (@lem8269891 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8269903 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8269904 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1799 A B P lt2 s P1 G1 f H1 g a) = (term2026 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8269903) (@lem8269902 A B P P1 G1 H1 lt2 s a f g h1)). Qed.
Lemma lem8269912 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (EQ_MP (@lem8269773 A B P lt2 s a f g z) (@lem8269772 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269913 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term325 A B P lt2 s a f g z) = True.
Proof. exact (@lem8269912 A B P z lt2 s a f g h1). Qed.
Lemma lem8269914 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term326 A B P lt2 s a f g) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8269913 A B P z lt2 s a f g h1)). Qed.
Lemma lem8269915 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8269916 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = (term1444 A).
Proof. exact (MK_COMB (@lem8269915 A) (@lem8269914 A B P lt2 s a f g h1)). Qed.
Lemma lem8269918 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8269919 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8269918 A t). Qed.
Lemma lem8269920 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8269919 A True). Qed.
Lemma lem8269921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term162 A B P lt2 s a f g) = True.
Proof. exact (TRANS (@lem8269916 A B P lt2 s a f g h1) (@lem8269920 A)). Qed.
Lemma lem8269922 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269923 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term167 A B P lt2 s a f g) = (imp True).
Proof. exact (MK_COMB (@lem8269922) (@lem8269921 A B P lt2 s a f g h1)). Qed.
Lemma lem8269934 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2024 A B P P2 G2 f H2 g a) = (term2024 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2024 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8269935 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1792 A B P lt2 s P2 G2 f H2 g a) = (term2025 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269923 A B P lt2 s a f g h1) (@lem8269934 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8269937 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8269938 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2025 A B P P2 G2 f H2 g a) = (term2024 A B P P2 G2 f H2 g a).
Proof. exact (@lem8269937 (term2024 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8269949 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1792 A B P lt2 s P2 G2 f H2 g a) = (term2024 A B P P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8269935 A B P P2 G2 H2 lt2 s a f g h1) (@lem8269938 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8269950 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1801 A B P P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269904 A B P P1 G1 H1 lt2 s a f g h1) (@lem8269949 A B P P2 G2 H2 lt2 s a f g h1)). Qed.
Lemma lem8269953 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term2028 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269855 A B P p P' lt2 s a f g h1) (@lem8269950 A B P P1 G1 H1 P2 G2 H2 lt2 s a f g h1)). Qed.
Lemma lem8269956 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8269957 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term1959 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) = (term2029 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8269956) (@lem8269953 A B P p P' P1 G1 H1 P2 G2 H2 lt2 s a f g h1)). Qed.
Lemma lem8269968 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8269969 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term2030 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8269957 A B P p P' P1 G1 H1 P2 G2 H2 lt2 s a f g h1) (@lem8269968 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8269972 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2030 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (SYM (@lem8269969 A B P P2 P1 G2 G1 z p P' H2 H1 w lt2 s a f g h1)). Qed.
Lemma lem8269995 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (p f a) = ((p f a) = True).
Proof. exact (@lem7 (p f a)). Qed.
Lemma lem8270006 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8269995 A B P p f a) (@lem8269769 A B P p f a h1)). Qed.
Lemma lem8270007 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270008 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term327 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8270007) (@lem8270006 A B P p f a h1)). Qed.
Lemma lem8270009 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (eq_refl (term373 A B P P' f a)). Qed.
Lemma lem8270010 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term216 A B P p P' f a) = (term2032 A B P P' f a).
Proof. exact (MK_COMB (@lem8270008 A B P p f a h1) (@lem8270009 A B P P' f a)). Qed.
Lemma lem8270012 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8270013 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2032 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (@lem8270012 (term373 A B P P' f a)). Qed.
Lemma lem8270014 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term216 A B P p P' f a) = (term373 A B P P' f a).
Proof. exact (TRANS (@lem8270010 A B P P' p f a h1) (@lem8270013 A B P P' f a)). Qed.
Lemma lem8270015 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270016 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term991 A B P p P' f a) = (term2033 A B P P' f a).
Proof. exact (MK_COMB (@lem8270015) (@lem8270014 A B P P' p f a h1)). Qed.
Lemma lem8270019 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : ((k f a) = (term992 A B P P1 G1 H1 f a)) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (eq_refl ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8270020 {A B P : Type'} (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term994 A B P p P' k P1 G1 H1 f a) = (term2034 A B P P' k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8270016 A B P P' p f a h1) (@lem8270019 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8270023 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270024 {A B P : Type'} (P' : type560 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1903 A B P p P' k P1 G1 H1 f a) = (term2035 A B P P' k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8270023) (@lem8270020 A B P P' k P1 G1 H1 p f a h1)). Qed.
Lemma lem8270030 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8269995 A B P p f a) (@lem8269769 A B P p f a h1)). Qed.
Lemma lem8270031 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270032 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term327 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8270031) (@lem8270030 A B P p f a h1)). Qed.
Lemma lem8270033 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (P' f a).
Proof. exact (eq_refl (P' f a)). Qed.
Lemma lem8270034 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term177 A B P p P' f a) = (term2036 A B P P' f a).
Proof. exact (MK_COMB (@lem8270032 A B P p f a h1) (@lem8270033 A B P P' f a)). Qed.
Lemma lem8270036 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8270037 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2036 A B P P' f a) = (P' f a).
Proof. exact (@lem8270036 (P' f a)). Qed.
Lemma lem8270038 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term177 A B P p P' f a) = (P' f a).
Proof. exact (TRANS (@lem8270034 A B P P' p f a h1) (@lem8270037 A B P P' f a)). Qed.
Lemma lem8270039 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270040 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1024 A B P p P' f a) = (term1070 A B P P' f a).
Proof. exact (MK_COMB (@lem8270039) (@lem8270038 A B P P' p f a h1)). Qed.
Lemma lem8270043 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : ((h f a) = (term992 A B P P2 G2 H2 f a)) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (eq_refl ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8270044 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1026 A B P p P' h P2 G2 H2 f a) = (term2037 A B P P' h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8270040 A B P P' p f a h1) (@lem8270043 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8270047 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) = (term2038 A B P k P1 G1 H1 P' h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8270024 A B P P' k P1 G1 H1 p f a h1) (@lem8270044 A B P P' h P2 G2 H2 p f a h1)). Qed.
Lemma lem8270050 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270051 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1999 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) = (term2039 A B P k P1 G1 H1 P' h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8270050) (@lem8270047 A B P k P1 G1 H1 P' h P2 G2 H2 p f a h1)). Qed.
Lemma lem8270055 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8269995 A B P p f a) (@lem8269769 A B P p f a h1)). Qed.
Lemma lem8270056 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8270057 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1432 A B P p f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8270056) (@lem8270055 A B P p f a h1)). Qed.
Lemma lem8270058 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8270059 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1434 A B P p P' P2 P1 f a) = (term1447 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8270057 A B P p f a h1) (@lem8270058 A B P P' P2 P1 f a)). Qed.
Lemma lem8270060 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8270061 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1267 A B P p P' P2 P1 f a) = (term1448 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8270059 A B P P' P2 P1 p f a h1) (@lem8270060)). Qed.
Lemma lem8270063 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8270064 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8270063 Prop t2 t1). Qed.
Lemma lem8270065 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1448 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (@lem8270064 False (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8270066 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1267 A B P p P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (TRANS (@lem8270061 A B P P' P2 P1 p f a h1) (@lem8270065 A B P P' P2 P1 f a)). Qed.
Lemma lem8270067 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8270068 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1355 A B P p P' P2 P1 f a) = (term2040 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8270067 B) (@lem8270066 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8270070 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8269995 A B P p f a) (@lem8269769 A B P p f a h1)). Qed.
Lemma lem8270071 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8270072 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1437 A B P p f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8270071 A) (@lem8270070 A B P p f a h1)). Qed.
Lemma lem8270073 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8270074 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1439 A B P p P' G2 G1 f a) = (term1450 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8270072 A B P p f a h1) (@lem8270073 A B P P' G2 G1 f a)). Qed.
Lemma lem8270075 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8270076 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1284 A B P p P' G2 G1 f a z) = (term1451 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8270074 A B P P' G2 G1 p f a h1) (@lem8270075 A z)). Qed.
Lemma lem8270078 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8270079 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8270078 A t2 t1). Qed.
Lemma lem8270080 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1451 A B P P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (@lem8270079 A z (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8270081 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1284 A B P p P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (TRANS (@lem8270076 A B P P' G2 G1 z p f a h1) (@lem8270080 A B P z P' G2 G1 f a)). Qed.
Lemma lem8270082 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8270083 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1357 A B P p P' G2 G1 f a z) = (term2041 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8270082 A B f) (@lem8270081 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8270084 {A B P : Type'} (z : A) (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1359 A B P P2 P1 p P' G2 G1 f a z) = (term2042 A B P P2 P1 P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8270068 A B P P' P2 P1 p f a h1) (@lem8270083 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8270086 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (p f a) = True.
Proof. exact (EQ_MP (@lem8269995 A B P p f a) (@lem8269769 A B P p f a h1)). Qed.
Lemma lem8270087 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8270088 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term2043 A B P p f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8270087 B) (@lem8270086 A B P p f a h1)). Qed.
Lemma lem8270089 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8270090 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term2044 A B P p P' H2 H1 f a) = (term2045 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8270088 A B P p f a h1) (@lem8270089 A B P P' H2 H1 f a)). Qed.
Lemma lem8270091 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8270092 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1328 A B P p P' H2 H1 f a w) = (term2046 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270090 A B P P' H2 H1 p f a h1) (@lem8270091 B w)). Qed.
Lemma lem8270094 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8270095 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8270094 B t2 t1). Qed.
Lemma lem8270096 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2046 A B P P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (@lem8270095 B w (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8270097 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1328 A B P p P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (TRANS (@lem8270092 A B P P' H2 H1 w p f a h1) (@lem8270096 A B P w P' H2 H1 f a)). Qed.
Lemma lem8270098 {A B P : Type'} (z : A) (w : B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term1361 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2047 A B P P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8270084 A B P z P2 P1 P' G2 G1 p f a h1) (@lem8270097 A B P w P' H2 H1 p f a h1)). Qed.
Lemma lem8270099 {A B P : Type'} (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term1069 A B P P' h k f a) = (term1069 A B P P' h k f a).
Proof. exact (eq_refl (term1069 A B P P' h k f a)). Qed.
Lemma lem8270100 {A B P : Type'} (z : A) (w : B) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : ((term1064 A B P P' h k f a) = (term1361 A B P P2 P1 G2 G1 z p P' H2 H1 f a w)) = ((term1064 A B P P' h k f a) = (term2047 A B P P2 P1 G2 G1 P' H2 H1 f a)).
Proof. exact (MK_COMB (@lem8270099 A B P P' h k f a) (@lem8270098 A B P z w P2 P1 G2 G1 P' H2 H1 p f a h1)). Qed.
Lemma lem8270103 {A B P : Type'} (z : A) (w : B) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term2048 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8270051 A B P k P1 G1 H1 P' h P2 G2 H2 p f a h1) (@lem8270100 A B P z w h k P2 P1 G2 G1 P' H2 H1 p f a h1)). Qed.
Lemma lem8270106 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : p f a) : (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2048 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (SYM (@lem8270103 A B P z w h k P2 P1 G2 G1 P' H2 H1 p f a h1)). Qed.
Lemma lem8270108 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8270109 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2050 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (@lem8270108 (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270110 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2050 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (SYM (@lem8270109 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270111 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (h1). Qed.
Lemma lem8270114 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (h1). Qed.
Lemma lem8270115 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w => @lem8270114 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h0). Qed.
Lemma lem8270116 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (h1). Qed.
Lemma lem8270117 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (h1). Qed.
Lemma lem8270118 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) (h2 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8270116 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h2 (@lem8270117 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h1)). Qed.
Lemma lem8270119 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2054 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w => @lem8270118 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h1 h0). Qed.
Lemma lem8270120 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (h1). Qed.
Lemma lem8270121 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) (h2 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8270119 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h1 (@lem8270120 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h2)). Qed.
Lemma lem8270122 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w => @lem8270121 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h0 h1). Qed.
Lemma lem8270123 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2055 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w => @lem8270122 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h0). Qed.
Lemma lem8270126 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8270123 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w (@lem8270115 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270127 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2053 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8270126 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w). Qed.
Lemma lem8270197 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8270198 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2050 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2056 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (@lem8270197 (term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270200 (t : Prop) : (term304 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8270201 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2056 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (@lem8270200 (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270204 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2050 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (TRANS (@lem8270198 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) (@lem8270201 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270227 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8270228 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2057 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270227 A B P lt2 s a f g) (@lem8270204 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270231 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2058 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2059 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8270228 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270232 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8270233 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2060 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2061 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270232 A) (@lem8270231 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270238 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2062 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2063 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun s : P -> A => @lem8270233 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270239 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8270240 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2064 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2065 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270239 A P) (@lem8270238 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270245 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2066 A B P P1 G2 G1 z f p P' H2 H1 g a w) = (term2067 A B P P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8270240 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270246 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270247 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2068 A B P P1 G2 G1 z f p P' H2 H1 g a w) = (term2069 A B P P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270246 A B P) (@lem8270245 A B P P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270252 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2070 A B P G2 G1 z f p P' H2 H1 g a w) = (term2071 A B P G2 G1 z f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8270247 A B P P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270253 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270254 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2072 A B P G2 G1 z f p P' H2 H1 g a w) = (term2073 A B P G2 G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270253 A B P) (@lem8270252 A B P G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270259 {A B P : Type'} (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2074 A B P G1 z f p P' H2 H1 g a w) = (term2075 A B P G1 z f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8270254 A B P G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270260 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270261 {A B P : Type'} (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2076 A B P G1 z f p P' H2 H1 g a w) = (term2077 A B P G1 z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270260 A B P) (@lem8270259 A B P G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270266 {A B P : Type'} (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2078 A B P z f p P' H2 H1 g a w) = (term2079 A B P z f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8270261 A B P G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8270267 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270268 {A B P : Type'} (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2080 A B P z f p P' H2 H1 g a w) = (term2081 A B P z f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270267 A B P) (@lem8270266 A B P z f p P' H2 H1 g a w)). Qed.
Lemma lem8270273 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2082 A B P f p P' H2 H1 g a w) = (term2083 A B P f p P' H2 H1 g a w).
Proof. exact (fun_ext (fun z : A => @lem8270268 A B P z f p P' H2 H1 g a w)). Qed.
Lemma lem8270274 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8270275 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2084 A B P f p P' H2 H1 g a w) = (term2085 A B P f p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270274 A) (@lem8270273 A B P f p P' H2 H1 g a w)). Qed.
Lemma lem8270280 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2086 A B P p P' H2 H1 g a w) = (term2087 A B P p P' H2 H1 g a w).
Proof. exact (fun_ext (fun f : A -> B => @lem8270275 A B P f p P' H2 H1 g a w)). Qed.
Lemma lem8270281 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8270282 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2088 A B P p P' H2 H1 g a w) = (term2089 A B P p P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270281 A B) (@lem8270280 A B P p P' H2 H1 g a w)). Qed.
Lemma lem8270287 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2090 A B P P' H2 H1 g a w) = (term2091 A B P P' H2 H1 g a w).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8270282 A B P p P' H2 H1 g a w)). Qed.
Lemma lem8270288 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270289 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2092 A B P P' H2 H1 g a w) = (term2093 A B P P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270288 A B P) (@lem8270287 A B P P' H2 H1 g a w)). Qed.
Lemma lem8270294 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2094 A B P H2 H1 g a w) = (term2095 A B P H2 H1 g a w).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8270289 A B P P' H2 H1 g a w)). Qed.
Lemma lem8270295 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270296 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2096 A B P H2 H1 g a w) = (term2097 A B P H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270295 A B P) (@lem8270294 A B P H2 H1 g a w)). Qed.
Lemma lem8270301 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2098 A B P H1 g a w) = (term2099 A B P H1 g a w).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8270296 A B P H2 H1 g a w)). Qed.
Lemma lem8270302 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8270303 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2100 A B P H1 g a w) = (term2101 A B P H1 g a w).
Proof. exact (MK_COMB (@lem8270302 A B P) (@lem8270301 A B P H1 g a w)). Qed.
Lemma lem8270308 {A B P : Type'} (g : A -> B) (a : P) (w : B) : (term2102 A B P g a w) = (term2103 A B P g a w).
Proof. exact (fun_ext (fun H1 : type558 A B P => @lem8270303 A B P H1 g a w)). Qed.
Lemma lem8270309 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8270310 {A B P : Type'} (g : A -> B) (a : P) (w : B) : (term2104 A B P g a w) = (term2105 A B P g a w).
Proof. exact (MK_COMB (@lem8270309 A B P) (@lem8270308 A B P g a w)). Qed.
Lemma lem8270315 {A B P : Type'} (a : P) (w : B) : (term2106 A B P a w) = (term2107 A B P a w).
Proof. exact (fun_ext (fun g : A -> B => @lem8270310 A B P g a w)). Qed.
Lemma lem8270316 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8270317 {A B P : Type'} (a : P) (w : B) : (term2108 A B P a w) = (term2109 A B P a w).
Proof. exact (MK_COMB (@lem8270316 A B) (@lem8270315 A B P a w)). Qed.
Lemma lem8270322 {A B P : Type'} (w : B) : (term2110 A B P w) = (term2111 A B P w).
Proof. exact (fun_ext (fun a : P => @lem8270317 A B P a w)). Qed.
Lemma lem8270323 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8270324 {A B P : Type'} (w : B) : (term2112 A B P w) = (term2113 A B P w).
Proof. exact (MK_COMB (@lem8270323 P) (@lem8270322 A B P w)). Qed.
Lemma lem8270329 {A B P : Type'} : (term2114 A B P) = (term2115 A B P).
Proof. exact (fun_ext (fun w : B => @lem8270324 A B P w)). Qed.
Lemma lem8270330 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8270339 {A B P : Type'} : (term2116 A B P) = (term2117 A B P).
Proof. exact (MK_COMB (@lem8270330 B) (@lem8270329 A B P)). Qed.
Lemma lem8270355 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (P' g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270356 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2118 A B P P' f a) = (term2118 A B P P' f a).
Proof. exact (eq_refl (term2118 A B P P' f a)). Qed.
Lemma lem8270357 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : ((P' f a) = (P' g a)) = ((P' f a) = False).
Proof. exact (MK_COMB (@lem8270356 A B P P' f a) (@lem8270355 A B P P' g a h1)). Qed.
Lemma lem8270359 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem8270360 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : ((P' f a) = False) = (term373 A B P P' f a).
Proof. exact (@lem8270359 (P' f a)). Qed.
Lemma lem8270361 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : ((P' f a) = (P' g a)) = (term373 A B P P' f a).
Proof. exact (TRANS (@lem8270357 A B P f P' g a h1) (@lem8270360 A B P P' f a)). Qed.
Lemma lem8270362 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2020 A B P f p g a) = (term2020 A B P f p g a).
Proof. exact (eq_refl (term2020 A B P f p g a)). Qed.
Lemma lem8270363 {A B P : Type'} (p : type560 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2021 A B P p f P' g a) = (term2119 A B P p g P' f a).
Proof. exact (MK_COMB (@lem8270362 A B P f p g a) (@lem8270361 A B P f P' g a h1)). Qed.
Lemma lem8270366 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2017 A B P f p g a) = (term2017 A B P f p g a).
Proof. exact (eq_refl (term2017 A B P f p g a)). Qed.
Lemma lem8270367 {A B P : Type'} (p : type560 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2022 A B P p f P' g a) = (term2120 A B P p g P' f a).
Proof. exact (MK_COMB (@lem8270366 A B P f p g a) (@lem8270363 A B P p f P' g a h1)). Qed.
Lemma lem8270370 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270371 {A B P : Type'} (p : type560 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2023 A B P p f P' g a) = (term2121 A B P p g P' f a).
Proof. exact (MK_COMB (@lem8270370) (@lem8270367 A B P p f P' g a h1)). Qed.
Lemma lem8270394 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8270395 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2028 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2122 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270371 A B P p f P' g a h1) (@lem8270394 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8270398 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270399 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2029 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2123 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270398) (@lem8270395 A B P p P1 G1 H1 P2 G2 f H2 P' g a h1)). Qed.
Lemma lem8270401 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (P' g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270402 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8270403 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1432 A B P P' g a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8270402) (@lem8270401 A B P P' g a h1)). Qed.
Lemma lem8270404 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8270405 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1467 A B P P' P2 g a) = (term1468 A B P P2 g a).
Proof. exact (MK_COMB (@lem8270403 A B P P' g a h1) (@lem8270404 A B P P2 g a)). Qed.
Lemma lem8270406 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8270407 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1433 A B P P' P2 P1 g a) = (term1469 A B P P2 P1 g a).
Proof. exact (MK_COMB (@lem8270405 A B P P2 P' g a h1) (@lem8270406 A B P P1 g a)). Qed.
Lemma lem8270409 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8270410 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8270409 Prop t1 t2). Qed.
Lemma lem8270411 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (a : P) : (term1469 A B P P2 P1 g a) = (P1 g a).
Proof. exact (@lem8270410 (P2 g a) (P1 g a)). Qed.
Lemma lem8270412 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1433 A B P P' P2 P1 g a) = (P1 g a).
Proof. exact (TRANS (@lem8270407 A B P P2 P1 P' g a h1) (@lem8270411 A B P P2 P1 g a)). Qed.
Lemma lem8270413 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1432 A B P p g a) = (term1432 A B P p g a).
Proof. exact (eq_refl (term1432 A B P p g a)). Qed.
Lemma lem8270414 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1434 A B P p P' P2 P1 g a) = (term1467 A B P p P1 g a).
Proof. exact (MK_COMB (@lem8270413 A B P p g a) (@lem8270412 A B P P2 P1 P' g a h1)). Qed.
Lemma lem8270415 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8270416 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1267 A B P p P' P2 P1 g a) = (term2124 A B P p P1 g a).
Proof. exact (MK_COMB (@lem8270414 A B P P2 p P1 P' g a h1) (@lem8270415)). Qed.
Lemma lem8270417 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1311 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1311 A B P p P' P2 P1 f a)). Qed.
Lemma lem8270418 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (p : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : ((term1267 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 g a)) = ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P1 g a)).
Proof. exact (MK_COMB (@lem8270417 A B P p P' P2 P1 f a) (@lem8270416 A B P P2 p P1 P' g a h1)). Qed.
Lemma lem8270421 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270422 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (p : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1313 A B P f p P' P2 P1 g a) = (term2125 A B P P' P2 f p P1 g a).
Proof. exact (MK_COMB (@lem8270421) (@lem8270418 A B P P2 f p P1 P' g a h1)). Qed.
Lemma lem8270424 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (P' g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270425 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8270426 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1437 A B P P' g a) = (@COND A False).
Proof. exact (MK_COMB (@lem8270425 A) (@lem8270424 A B P P' g a h1)). Qed.
Lemma lem8270427 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8270428 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1470 A B P P' G2 g a) = (term1471 A B P G2 g a).
Proof. exact (MK_COMB (@lem8270426 A B P P' g a h1) (@lem8270427 A B P G2 g a)). Qed.
Lemma lem8270429 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8270430 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1438 A B P P' G2 G1 g a) = (term1472 A B P G2 G1 g a).
Proof. exact (MK_COMB (@lem8270428 A B P G2 P' g a h1) (@lem8270429 A B P G1 g a)). Qed.
Lemma lem8270432 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8270433 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8270432 A t1 t2). Qed.
Lemma lem8270434 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (a : P) : (term1472 A B P G2 G1 g a) = (G1 g a).
Proof. exact (@lem8270433 A (G2 g a) (G1 g a)). Qed.
Lemma lem8270435 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1438 A B P P' G2 G1 g a) = (G1 g a).
Proof. exact (TRANS (@lem8270430 A B P G2 G1 P' g a h1) (@lem8270434 A B P G2 G1 g a)). Qed.
Lemma lem8270436 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1437 A B P p g a) = (term1437 A B P p g a).
Proof. exact (eq_refl (term1437 A B P p g a)). Qed.
Lemma lem8270437 {A B P : Type'} (G2 : type557 A B P) (p : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1439 A B P p P' G2 G1 g a) = (term1470 A B P p G1 g a).
Proof. exact (MK_COMB (@lem8270436 A B P p g a) (@lem8270435 A B P G2 G1 P' g a h1)). Qed.
Lemma lem8270438 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8270439 {A B P : Type'} (G2 : type557 A B P) (p : type560 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1284 A B P p P' G2 G1 g a z) = (term2126 A B P p G1 g a z).
Proof. exact (MK_COMB (@lem8270437 A B P G2 p G1 P' g a h1) (@lem8270438 A z)). Qed.
Lemma lem8270440 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1315 A B P p P' G2 G1 f a z) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1315 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8270441 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (p : type560 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : ((term1284 A B P p P' G2 G1 f a z) = (term1284 A B P p P' G2 G1 g a z)) = ((term1284 A B P p P' G2 G1 f a z) = (term2126 A B P p G1 g a z)).
Proof. exact (MK_COMB (@lem8270440 A B P p P' G2 G1 f a z) (@lem8270439 A B P G2 p G1 z P' g a h1)). Qed.
Lemma lem8270444 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270445 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (p : type560 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1317 A B P f p P' G2 G1 g a z) = (term2127 A B P P' G2 f p G1 g a z).
Proof. exact (MK_COMB (@lem8270444) (@lem8270441 A B P G2 f p G1 z P' g a h1)). Qed.
Lemma lem8270447 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (P' g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270448 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8270449 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2043 A B P P' g a) = (@COND B False).
Proof. exact (MK_COMB (@lem8270448 B) (@lem8270447 A B P P' g a h1)). Qed.
Lemma lem8270450 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8270451 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2128 A B P P' H2 g a) = (term2129 A B P H2 g a).
Proof. exact (MK_COMB (@lem8270449 A B P P' g a h1) (@lem8270450 A B P H2 g a)). Qed.
Lemma lem8270452 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8270453 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1064 A B P P' H2 H1 g a) = (term2130 A B P H2 H1 g a).
Proof. exact (MK_COMB (@lem8270451 A B P H2 P' g a h1) (@lem8270452 A B P H1 g a)). Qed.
Lemma lem8270455 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8270456 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8270455 B t1 t2). Qed.
Lemma lem8270457 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2130 A B P H2 H1 g a) = (H1 g a).
Proof. exact (@lem8270456 B (H2 g a) (H1 g a)). Qed.
Lemma lem8270458 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1064 A B P P' H2 H1 g a) = (H1 g a).
Proof. exact (TRANS (@lem8270453 A B P H2 H1 P' g a h1) (@lem8270457 A B P H2 H1 g a)). Qed.
Lemma lem8270459 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2043 A B P p g a) = (term2043 A B P p g a).
Proof. exact (eq_refl (term2043 A B P p g a)). Qed.
Lemma lem8270460 {A B P : Type'} (H2 : type558 A B P) (p : type560 A B P) (H1 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2044 A B P p P' H2 H1 g a) = (term2128 A B P p H1 g a).
Proof. exact (MK_COMB (@lem8270459 A B P p g a) (@lem8270458 A B P H2 H1 P' g a h1)). Qed.
Lemma lem8270461 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8270462 {A B P : Type'} (H2 : type558 A B P) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1328 A B P p P' H2 H1 g a w) = (term2131 A B P p H1 g a w).
Proof. exact (MK_COMB (@lem8270460 A B P H2 p H1 P' g a h1) (@lem8270461 B w)). Qed.
Lemma lem8270463 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1333 A B P p P' H2 H1 f a w) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1333 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8270464 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : ((term1328 A B P p P' H2 H1 f a w) = (term1328 A B P p P' H2 H1 g a w)) = ((term1328 A B P p P' H2 H1 f a w) = (term2131 A B P p H1 g a w)).
Proof. exact (MK_COMB (@lem8270463 A B P p P' H2 H1 f a w) (@lem8270462 A B P H2 p H1 w P' g a h1)). Qed.
Lemma lem8270467 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1335 A B P G2 G1 z f p P' H2 H1 g a w) = (term2132 A B P G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270445 A B P G2 f p G1 z P' g a h1) (@lem8270464 A B P H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270470 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2133 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270422 A B P P2 f p P1 P' g a h1) (@lem8270467 A B P G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270473 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2134 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270399 A B P p P1 G1 H1 P2 G2 f H2 P' g a h1) (@lem8270470 A B P P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270476 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8270477 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2057 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2135 A B P lt2 s P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270476 A B P lt2 s a f g) (@lem8270473 A B P P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270480 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2059 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2136 A B P s P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8270477 A B P lt2 s P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270481 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8270482 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2061 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2137 A B P s P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270481 A) (@lem8270480 A B P s P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270487 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2063 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2138 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun s : P -> A => @lem8270482 A B P s P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270488 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8270489 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2065 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2139 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270488 A P) (@lem8270487 A B P P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270494 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2067 A B P P1 G2 G1 z f p P' H2 H1 g a w) = (term2140 A B P P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8270489 A B P P2 P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270495 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270496 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2069 A B P P1 G2 G1 z f p P' H2 H1 g a w) = (term2141 A B P P1 G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270495 A B P) (@lem8270494 A B P P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270501 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2071 A B P G2 G1 z f p P' H2 H1 g a w) = (term2142 A B P G2 G1 z P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8270496 A B P P1 G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270502 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270503 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2073 A B P G2 G1 z f p P' H2 H1 g a w) = (term2143 A B P G2 G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270502 A B P) (@lem8270501 A B P G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270508 {A B P : Type'} (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2075 A B P G1 z f p P' H2 H1 g a w) = (term2144 A B P G1 z P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8270503 A B P G2 G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270509 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270510 {A B P : Type'} (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2077 A B P G1 z f p P' H2 H1 g a w) = (term2145 A B P G1 z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270509 A B P) (@lem8270508 A B P G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270515 {A B P : Type'} (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2079 A B P z f p P' H2 H1 g a w) = (term2146 A B P z P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8270510 A B P G1 z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270516 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270517 {A B P : Type'} (z : A) (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2081 A B P z f p P' H2 H1 g a w) = (term2147 A B P z P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270516 A B P) (@lem8270515 A B P z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270522 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2083 A B P f p P' H2 H1 g a w) = (term2148 A B P P' H2 f p H1 g a w).
Proof. exact (fun_ext (fun z : A => @lem8270517 A B P z H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270523 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8270524 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2085 A B P f p P' H2 H1 g a w) = (term2149 A B P P' H2 f p H1 g a w).
Proof. exact (MK_COMB (@lem8270523 A) (@lem8270522 A B P H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270529 {A B P : Type'} (H2 : type558 A B P) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2087 A B P p P' H2 H1 g a w) = (term2150 A B P P' H2 p H1 g a w).
Proof. exact (fun_ext (fun f : A -> B => @lem8270524 A B P H2 f p H1 w P' g a h1)). Qed.
Lemma lem8270530 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8270531 {A B P : Type'} (H2 : type558 A B P) (p : type560 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2089 A B P p P' H2 H1 g a w) = (term2151 A B P P' H2 p H1 g a w).
Proof. exact (MK_COMB (@lem8270530 A B) (@lem8270529 A B P H2 p H1 w P' g a h1)). Qed.
Lemma lem8270536 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2091 A B P P' H2 H1 g a w) = (term2152 A B P P' H2 H1 g a w).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8270531 A B P H2 p H1 w P' g a h1)). Qed.
Lemma lem8270537 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270538 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = False) : (term2093 A B P P' H2 H1 g a w) = (term2153 A B P P' H2 H1 g a w).
Proof. exact (MK_COMB (@lem8270537 A B P) (@lem8270536 A B P H2 H1 w P' g a h1)). Qed.
Lemma lem8270543 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2154 A B P P' H2 H1 g a w.
Proof. exact (fun h0 : (P' g a) = False => @lem8270538 A B P H2 H1 w P' g a h0). Qed.
Lemma lem8270557 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (P' g a) = True.
Proof. exact (h1). Qed.
Lemma lem8270558 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2118 A B P P' f a) = (term2118 A B P P' f a).
Proof. exact (eq_refl (term2118 A B P P' f a)). Qed.
Lemma lem8270559 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : ((P' f a) = (P' g a)) = ((P' f a) = True).
Proof. exact (MK_COMB (@lem8270558 A B P P' f a) (@lem8270557 A B P P' g a h1)). Qed.
Lemma lem8270561 (t : Prop) : (t = True) = t.
Proof. exact (proj1 (@lem1856 t)). Qed.
Lemma lem8270562 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : ((P' f a) = True) = (P' f a).
Proof. exact (@lem8270561 (P' f a)). Qed.
Lemma lem8270563 {A B P : Type'} (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : ((P' f a) = (P' g a)) = (P' f a).
Proof. exact (TRANS (@lem8270559 A B P f P' g a h1) (@lem8270562 A B P P' f a)). Qed.
Lemma lem8270564 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2020 A B P f p g a) = (term2020 A B P f p g a).
Proof. exact (eq_refl (term2020 A B P f p g a)). Qed.
Lemma lem8270565 {A B P : Type'} (p : type560 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2021 A B P p f P' g a) = (term2155 A B P p g P' f a).
Proof. exact (MK_COMB (@lem8270564 A B P f p g a) (@lem8270563 A B P f P' g a h1)). Qed.
Lemma lem8270568 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) : (term2017 A B P f p g a) = (term2017 A B P f p g a).
Proof. exact (eq_refl (term2017 A B P f p g a)). Qed.
Lemma lem8270569 {A B P : Type'} (p : type560 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2022 A B P p f P' g a) = (term2156 A B P p g P' f a).
Proof. exact (MK_COMB (@lem8270568 A B P f p g a) (@lem8270565 A B P p f P' g a h1)). Qed.
Lemma lem8270572 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270573 {A B P : Type'} (p : type560 A B P) (f : A -> B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2023 A B P p f P' g a) = (term2157 A B P p g P' f a).
Proof. exact (MK_COMB (@lem8270572) (@lem8270569 A B P p f P' g a h1)). Qed.
Lemma lem8270596 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8270597 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2028 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2158 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270573 A B P p f P' g a h1) (@lem8270596 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8270600 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270601 {A B P : Type'} (p : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2029 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2159 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270600) (@lem8270597 A B P p P1 G1 H1 P2 G2 f H2 P' g a h1)). Qed.
Lemma lem8270603 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (P' g a) = True.
Proof. exact (h1). Qed.
Lemma lem8270604 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8270605 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1432 A B P P' g a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8270604) (@lem8270603 A B P P' g a h1)). Qed.
Lemma lem8270606 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8270607 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1467 A B P P' P2 g a) = (term1481 A B P P2 g a).
Proof. exact (MK_COMB (@lem8270605 A B P P' g a h1) (@lem8270606 A B P P2 g a)). Qed.
Lemma lem8270608 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8270609 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1433 A B P P' P2 P1 g a) = (term1482 A B P P2 P1 g a).
Proof. exact (MK_COMB (@lem8270607 A B P P2 P' g a h1) (@lem8270608 A B P P1 g a)). Qed.
Lemma lem8270611 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8270612 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8270611 Prop t2 t1). Qed.
Lemma lem8270613 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (a : P) : (term1482 A B P P2 P1 g a) = (P2 g a).
Proof. exact (@lem8270612 (P1 g a) (P2 g a)). Qed.
Lemma lem8270614 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1433 A B P P' P2 P1 g a) = (P2 g a).
Proof. exact (TRANS (@lem8270609 A B P P2 P1 P' g a h1) (@lem8270613 A B P P1 P2 g a)). Qed.
Lemma lem8270615 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1432 A B P p g a) = (term1432 A B P p g a).
Proof. exact (eq_refl (term1432 A B P p g a)). Qed.
Lemma lem8270616 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1434 A B P p P' P2 P1 g a) = (term1467 A B P p P2 g a).
Proof. exact (MK_COMB (@lem8270615 A B P p g a) (@lem8270614 A B P P1 P2 P' g a h1)). Qed.
Lemma lem8270617 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8270618 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1267 A B P p P' P2 P1 g a) = (term2124 A B P p P2 g a).
Proof. exact (MK_COMB (@lem8270616 A B P P1 p P2 P' g a h1) (@lem8270617)). Qed.
Lemma lem8270619 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1311 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1311 A B P p P' P2 P1 f a)). Qed.
Lemma lem8270620 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : ((term1267 A B P p P' P2 P1 f a) = (term1267 A B P p P' P2 P1 g a)) = ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P2 g a)).
Proof. exact (MK_COMB (@lem8270619 A B P p P' P2 P1 f a) (@lem8270618 A B P P1 p P2 P' g a h1)). Qed.
Lemma lem8270623 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270624 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1313 A B P f p P' P2 P1 g a) = (term2160 A B P P' P1 f p P2 g a).
Proof. exact (MK_COMB (@lem8270623) (@lem8270620 A B P P1 f p P2 P' g a h1)). Qed.
Lemma lem8270626 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (P' g a) = True.
Proof. exact (h1). Qed.
Lemma lem8270627 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8270628 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1437 A B P P' g a) = (@COND A True).
Proof. exact (MK_COMB (@lem8270627 A) (@lem8270626 A B P P' g a h1)). Qed.
Lemma lem8270629 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8270630 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1470 A B P P' G2 g a) = (term1483 A B P G2 g a).
Proof. exact (MK_COMB (@lem8270628 A B P P' g a h1) (@lem8270629 A B P G2 g a)). Qed.
Lemma lem8270631 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8270632 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1438 A B P P' G2 G1 g a) = (term1484 A B P G2 G1 g a).
Proof. exact (MK_COMB (@lem8270630 A B P G2 P' g a h1) (@lem8270631 A B P G1 g a)). Qed.
Lemma lem8270634 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8270635 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8270634 A t2 t1). Qed.
Lemma lem8270636 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (a : P) : (term1484 A B P G2 G1 g a) = (G2 g a).
Proof. exact (@lem8270635 A (G1 g a) (G2 g a)). Qed.
Lemma lem8270637 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1438 A B P P' G2 G1 g a) = (G2 g a).
Proof. exact (TRANS (@lem8270632 A B P G2 G1 P' g a h1) (@lem8270636 A B P G1 G2 g a)). Qed.
Lemma lem8270638 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1437 A B P p g a) = (term1437 A B P p g a).
Proof. exact (eq_refl (term1437 A B P p g a)). Qed.
Lemma lem8270639 {A B P : Type'} (G1 : type557 A B P) (p : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1439 A B P p P' G2 G1 g a) = (term1470 A B P p G2 g a).
Proof. exact (MK_COMB (@lem8270638 A B P p g a) (@lem8270637 A B P G1 G2 P' g a h1)). Qed.
Lemma lem8270640 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8270641 {A B P : Type'} (G1 : type557 A B P) (p : type560 A B P) (G2 : type557 A B P) (z : A) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1284 A B P p P' G2 G1 g a z) = (term2126 A B P p G2 g a z).
Proof. exact (MK_COMB (@lem8270639 A B P G1 p G2 P' g a h1) (@lem8270640 A z)). Qed.
Lemma lem8270642 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1315 A B P p P' G2 G1 f a z) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1315 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8270643 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (p : type560 A B P) (G2 : type557 A B P) (z : A) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : ((term1284 A B P p P' G2 G1 f a z) = (term1284 A B P p P' G2 G1 g a z)) = ((term1284 A B P p P' G2 G1 f a z) = (term2126 A B P p G2 g a z)).
Proof. exact (MK_COMB (@lem8270642 A B P p P' G2 G1 f a z) (@lem8270641 A B P G1 p G2 z P' g a h1)). Qed.
Lemma lem8270646 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270647 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (p : type560 A B P) (G2 : type557 A B P) (z : A) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1317 A B P f p P' G2 G1 g a z) = (term2161 A B P P' G1 f p G2 g a z).
Proof. exact (MK_COMB (@lem8270646) (@lem8270643 A B P G1 f p G2 z P' g a h1)). Qed.
Lemma lem8270649 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (P' g a) = True.
Proof. exact (h1). Qed.
Lemma lem8270650 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8270651 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2043 A B P P' g a) = (@COND B True).
Proof. exact (MK_COMB (@lem8270650 B) (@lem8270649 A B P P' g a h1)). Qed.
Lemma lem8270652 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8270653 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2128 A B P P' H2 g a) = (term2162 A B P H2 g a).
Proof. exact (MK_COMB (@lem8270651 A B P P' g a h1) (@lem8270652 A B P H2 g a)). Qed.
Lemma lem8270654 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8270655 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1064 A B P P' H2 H1 g a) = (term2163 A B P H2 H1 g a).
Proof. exact (MK_COMB (@lem8270653 A B P H2 P' g a h1) (@lem8270654 A B P H1 g a)). Qed.
Lemma lem8270657 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8270658 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8270657 B t2 t1). Qed.
Lemma lem8270659 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2163 A B P H2 H1 g a) = (H2 g a).
Proof. exact (@lem8270658 B (H1 g a) (H2 g a)). Qed.
Lemma lem8270660 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1064 A B P P' H2 H1 g a) = (H2 g a).
Proof. exact (TRANS (@lem8270655 A B P H2 H1 P' g a h1) (@lem8270659 A B P H1 H2 g a)). Qed.
Lemma lem8270661 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2043 A B P p g a) = (term2043 A B P p g a).
Proof. exact (eq_refl (term2043 A B P p g a)). Qed.
Lemma lem8270662 {A B P : Type'} (H1 : type558 A B P) (p : type560 A B P) (H2 : type558 A B P) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2044 A B P p P' H2 H1 g a) = (term2128 A B P p H2 g a).
Proof. exact (MK_COMB (@lem8270661 A B P p g a) (@lem8270660 A B P H1 H2 P' g a h1)). Qed.
Lemma lem8270663 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8270664 {A B P : Type'} (H1 : type558 A B P) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1328 A B P p P' H2 H1 g a w) = (term2131 A B P p H2 g a w).
Proof. exact (MK_COMB (@lem8270662 A B P H1 p H2 P' g a h1) (@lem8270663 B w)). Qed.
Lemma lem8270665 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1333 A B P p P' H2 H1 f a w) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1333 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8270666 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : ((term1328 A B P p P' H2 H1 f a w) = (term1328 A B P p P' H2 H1 g a w)) = ((term1328 A B P p P' H2 H1 f a w) = (term2131 A B P p H2 g a w)).
Proof. exact (MK_COMB (@lem8270665 A B P p P' H2 H1 f a w) (@lem8270664 A B P H1 p H2 w P' g a h1)). Qed.
Lemma lem8270669 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1335 A B P G2 G1 z f p P' H2 H1 g a w) = (term2164 A B P G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270647 A B P G1 f p G2 z P' g a h1) (@lem8270666 A B P H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270672 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2165 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270624 A B P P1 f p P2 P' g a h1) (@lem8270669 A B P G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270675 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2166 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270601 A B P p P1 G1 H1 P2 G2 f H2 P' g a h1) (@lem8270672 A B P P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270678 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8270679 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2057 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2167 A B P lt2 s P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270678 A B P lt2 s a f g) (@lem8270675 A B P P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270682 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2059 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2168 A B P s P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8270679 A B P lt2 s P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270683 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8270684 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2061 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2169 A B P s P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270683 A) (@lem8270682 A B P s P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270689 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2063 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2170 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun s : P -> A => @lem8270684 A B P s P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270690 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8270691 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2065 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = (term2171 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270690 A P) (@lem8270689 A B P P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270696 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2067 A B P P1 G2 G1 z f p P' H2 H1 g a w) = (term2172 A B P P1 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8270691 A B P P1 P2 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270697 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270698 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2069 A B P P1 G2 G1 z f p P' H2 H1 g a w) = (term2173 A B P P1 G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270697 A B P) (@lem8270696 A B P P1 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270703 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2071 A B P G2 G1 z f p P' H2 H1 g a w) = (term2174 A B P G1 G2 z P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8270698 A B P P1 G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270704 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270705 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2073 A B P G2 G1 z f p P' H2 H1 g a w) = (term2175 A B P G1 G2 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270704 A B P) (@lem8270703 A B P G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270710 {A B P : Type'} (G1 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2075 A B P G1 z f p P' H2 H1 g a w) = (term2176 A B P G1 z P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8270705 A B P G1 G2 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270711 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270712 {A B P : Type'} (G1 : type557 A B P) (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2077 A B P G1 z f p P' H2 H1 g a w) = (term2177 A B P G1 z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270711 A B P) (@lem8270710 A B P G1 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270717 {A B P : Type'} (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2079 A B P z f p P' H2 H1 g a w) = (term2178 A B P z P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8270712 A B P G1 z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270718 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270719 {A B P : Type'} (z : A) (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2081 A B P z f p P' H2 H1 g a w) = (term2179 A B P z P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270718 A B P) (@lem8270717 A B P z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270724 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2083 A B P f p P' H2 H1 g a w) = (term2180 A B P P' H1 f p H2 g a w).
Proof. exact (fun_ext (fun z : A => @lem8270719 A B P z H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270725 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8270726 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2085 A B P f p P' H2 H1 g a w) = (term2181 A B P P' H1 f p H2 g a w).
Proof. exact (MK_COMB (@lem8270725 A) (@lem8270724 A B P H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270731 {A B P : Type'} (H1 : type558 A B P) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2087 A B P p P' H2 H1 g a w) = (term2182 A B P P' H1 p H2 g a w).
Proof. exact (fun_ext (fun f : A -> B => @lem8270726 A B P H1 f p H2 w P' g a h1)). Qed.
Lemma lem8270732 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8270733 {A B P : Type'} (H1 : type558 A B P) (p : type560 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2089 A B P p P' H2 H1 g a w) = (term2183 A B P P' H1 p H2 g a w).
Proof. exact (MK_COMB (@lem8270732 A B) (@lem8270731 A B P H1 p H2 w P' g a h1)). Qed.
Lemma lem8270738 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2091 A B P P' H2 H1 g a w) = (term2184 A B P P' H1 H2 g a w).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8270733 A B P H1 p H2 w P' g a h1)). Qed.
Lemma lem8270739 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270740 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (w : B) (P' : type560 A B P) (g : A -> B) (a : P) (h1 : (P' g a) = True) : (term2093 A B P P' H2 H1 g a w) = (term2185 A B P P' H1 H2 g a w).
Proof. exact (MK_COMB (@lem8270739 A B P) (@lem8270738 A B P H1 H2 w P' g a h1)). Qed.
Lemma lem8270745 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2186 A B P P' H1 H2 g a w.
Proof. exact (fun h0 : (P' g a) = True => @lem8270740 A B P H1 H2 w P' g a h0). Qed.
Lemma lem8270746 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2187 A B P P' H1 H2 g a w.
Proof. exact (conj (@lem8270543 A B P P' H2 H1 g a w) (@lem8270745 A B P P' H1 H2 g a w)). Qed.
Lemma lem8270748 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8270749 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2188 A B P P' H2 H1 g a w.
Proof. exact (@lem8270748 (term2093 A B P P' H2 H1 g a w) (term2185 A B P P' H1 H2 g a w) (P' g a) (term2153 A B P P' H2 H1 g a w)). Qed.
Lemma lem8270764 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2093 A B P P' H2 H1 g a w) = (term2189 A B P P' H2 H1 g a w).
Proof. exact (@lem8270749 A B P P' H2 H1 g a w (@lem8270746 A B P P' H1 H2 g a w)). Qed.
Lemma lem8270776 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270777 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2118 A B P p f a) = (term2118 A B P p f a).
Proof. exact (eq_refl (term2118 A B P p f a)). Qed.
Lemma lem8270778 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((p f a) = (p g a)) = ((p f a) = False).
Proof. exact (MK_COMB (@lem8270777 A B P p f a) (@lem8270776 A B P p g a h1)). Qed.
Lemma lem8270780 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem8270781 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : ((p f a) = False) = (term373 A B P p f a).
Proof. exact (@lem8270780 (p f a)). Qed.
Lemma lem8270782 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((p f a) = (p g a)) = (term373 A B P p f a).
Proof. exact (TRANS (@lem8270778 A B P f p g a h1) (@lem8270781 A B P p f a)). Qed.
Lemma lem8270783 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270784 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2017 A B P f p g a) = (term1559 A B P p f a).
Proof. exact (MK_COMB (@lem8270783) (@lem8270782 A B P f p g a h1)). Qed.
Lemma lem8270786 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270787 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8270788 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2019 A B P f p g a) = (term2190 A B P p f a).
Proof. exact (MK_COMB (@lem8270787 A B P p f a) (@lem8270786 A B P p g a h1)). Qed.
Lemma lem8270790 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem8270791 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2190 A B P p f a) = False.
Proof. exact (@lem8270790 (p f a)). Qed.
Lemma lem8270792 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2019 A B P f p g a) = False.
Proof. exact (TRANS (@lem8270788 A B P f p g a h1) (@lem8270791 A B P p f a)). Qed.
Lemma lem8270793 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270794 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2020 A B P f p g a) = (imp False).
Proof. exact (MK_COMB (@lem8270793) (@lem8270792 A B P f p g a h1)). Qed.
Lemma lem8270795 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (eq_refl (term373 A B P P' f a)). Qed.
Lemma lem8270796 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2119 A B P p g P' f a) = (term2191 A B P P' f a).
Proof. exact (MK_COMB (@lem8270794 A B P f p g a h1) (@lem8270795 A B P P' f a)). Qed.
Lemma lem8270798 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8270799 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2191 A B P P' f a) = True.
Proof. exact (@lem8270798 (term373 A B P P' f a)). Qed.
Lemma lem8270800 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2119 A B P p g P' f a) = True.
Proof. exact (TRANS (@lem8270796 A B P P' f p g a h1) (@lem8270799 A B P P' f a)). Qed.
Lemma lem8270801 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2120 A B P p g P' f a) = (term2192 A B P p f a).
Proof. exact (MK_COMB (@lem8270784 A B P f p g a h1) (@lem8270800 A B P P' f p g a h1)). Qed.
Lemma lem8270803 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8270804 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2192 A B P p f a) = (term373 A B P p f a).
Proof. exact (@lem8270803 (term373 A B P p f a)). Qed.
Lemma lem8270805 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2120 A B P p g P' f a) = (term373 A B P p f a).
Proof. exact (TRANS (@lem8270801 A B P P' f p g a h1) (@lem8270804 A B P p f a)). Qed.
Lemma lem8270806 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270807 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2121 A B P p g P' f a) = (term1559 A B P p f a).
Proof. exact (MK_COMB (@lem8270806) (@lem8270805 A B P P' f p g a h1)). Qed.
Lemma lem8270830 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8270831 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2122 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270807 A B P P' f p g a h1) (@lem8270830 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8270834 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270835 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2123 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2194 A B P p P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270834) (@lem8270831 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1)). Qed.
Lemma lem8270837 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270838 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8270839 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1432 A B P p g a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8270838) (@lem8270837 A B P p g a h1)). Qed.
Lemma lem8270840 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8270841 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1467 A B P p P1 g a) = (term1468 A B P P1 g a).
Proof. exact (MK_COMB (@lem8270839 A B P p g a h1) (@lem8270840 A B P P1 g a)). Qed.
Lemma lem8270842 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8270843 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2124 A B P p P1 g a) = (term2195 A B P P1 g a).
Proof. exact (MK_COMB (@lem8270841 A B P P1 p g a h1) (@lem8270842)). Qed.
Lemma lem8270845 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8270846 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8270845 Prop t1 t2). Qed.
Lemma lem8270847 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term2195 A B P P1 g a) = False.
Proof. exact (@lem8270846 (P1 g a) False). Qed.
Lemma lem8270848 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2124 A B P p P1 g a) = False.
Proof. exact (TRANS (@lem8270843 A B P P1 p g a h1) (@lem8270847 A B P P1 g a)). Qed.
Lemma lem8270849 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1311 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1311 A B P p P' P2 P1 f a)). Qed.
Lemma lem8270850 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P1 g a)) = ((term1267 A B P p P' P2 P1 f a) = False).
Proof. exact (MK_COMB (@lem8270849 A B P p P' P2 P1 f a) (@lem8270848 A B P P1 p g a h1)). Qed.
Lemma lem8270852 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem8270853 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : ((term1267 A B P p P' P2 P1 f a) = False) = (term2196 A B P p P' P2 P1 f a).
Proof. exact (@lem8270852 (term1267 A B P p P' P2 P1 f a)). Qed.
Lemma lem8270854 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P1 g a)) = (term2196 A B P p P' P2 P1 f a).
Proof. exact (TRANS (@lem8270850 A B P P' P2 P1 f p g a h1) (@lem8270853 A B P p P' P2 P1 f a)). Qed.
Lemma lem8270855 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270856 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2125 A B P P' P2 f p P1 g a) = (term2197 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8270855) (@lem8270854 A B P P' P2 P1 f p g a h1)). Qed.
Lemma lem8270858 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270859 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8270860 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1437 A B P p g a) = (@COND A False).
Proof. exact (MK_COMB (@lem8270859 A) (@lem8270858 A B P p g a h1)). Qed.
Lemma lem8270861 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8270862 {A B P : Type'} (G1 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1470 A B P p G1 g a) = (term1471 A B P G1 g a).
Proof. exact (MK_COMB (@lem8270860 A B P p g a h1) (@lem8270861 A B P G1 g a)). Qed.
Lemma lem8270863 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8270864 {A B P : Type'} (G1 : type557 A B P) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2126 A B P p G1 g a z) = (term2198 A B P G1 g a z).
Proof. exact (MK_COMB (@lem8270862 A B P G1 p g a h1) (@lem8270863 A z)). Qed.
Lemma lem8270866 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8270867 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8270866 A t1 t2). Qed.
Lemma lem8270868 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term2198 A B P G1 g a z) = z.
Proof. exact (@lem8270867 A (G1 g a) z). Qed.
Lemma lem8270869 {A B P : Type'} (G1 : type557 A B P) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2126 A B P p G1 g a z) = z.
Proof. exact (TRANS (@lem8270864 A B P G1 z p g a h1) (@lem8270868 A B P G1 g a z)). Qed.
Lemma lem8270870 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1315 A B P p P' G2 G1 f a z) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1315 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8270871 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1284 A B P p P' G2 G1 f a z) = (term2126 A B P p G1 g a z)) = ((term1284 A B P p P' G2 G1 f a z) = z).
Proof. exact (MK_COMB (@lem8270870 A B P p P' G2 G1 f a z) (@lem8270869 A B P G1 z p g a h1)). Qed.
Lemma lem8270874 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270875 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2127 A B P P' G2 f p G1 g a z) = (term2199 A B P p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8270874) (@lem8270871 A B P P' G2 G1 f z p g a h1)). Qed.
Lemma lem8270877 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8270878 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8270879 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2043 A B P p g a) = (@COND B False).
Proof. exact (MK_COMB (@lem8270878 B) (@lem8270877 A B P p g a h1)). Qed.
Lemma lem8270880 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8270881 {A B P : Type'} (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2128 A B P p H1 g a) = (term2129 A B P H1 g a).
Proof. exact (MK_COMB (@lem8270879 A B P p g a h1) (@lem8270880 A B P H1 g a)). Qed.
Lemma lem8270882 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8270883 {A B P : Type'} (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2131 A B P p H1 g a w) = (term2200 A B P H1 g a w).
Proof. exact (MK_COMB (@lem8270881 A B P H1 p g a h1) (@lem8270882 B w)). Qed.
Lemma lem8270885 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8270886 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8270885 B t1 t2). Qed.
Lemma lem8270887 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2200 A B P H1 g a w) = w.
Proof. exact (@lem8270886 B (H1 g a) w). Qed.
Lemma lem8270888 {A B P : Type'} (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2131 A B P p H1 g a w) = w.
Proof. exact (TRANS (@lem8270883 A B P H1 w p g a h1) (@lem8270887 A B P H1 g a w)). Qed.
Lemma lem8270889 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1333 A B P p P' H2 H1 f a w) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1333 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8270890 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1328 A B P p P' H2 H1 f a w) = (term2131 A B P p H1 g a w)) = ((term1328 A B P p P' H2 H1 f a w) = w).
Proof. exact (MK_COMB (@lem8270889 A B P p P' H2 H1 f a w) (@lem8270888 A B P H1 w p g a h1)). Qed.
Lemma lem8270893 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2132 A B P G2 G1 z P' H2 f p H1 g a w) = (term2201 A B P G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270875 A B P P' G2 G1 f z p g a h1) (@lem8270890 A B P P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270896 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2133 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270856 A B P P' P2 P1 f p g a h1) (@lem8270893 A B P G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270899 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2134 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270835 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1) (@lem8270896 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270902 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8270903 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2135 A B P lt2 s P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270902 A B P lt2 s a f g) (@lem8270899 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270906 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2136 A B P s P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2205 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8270903 A B P lt2 s P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270907 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8270908 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2137 A B P s P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270907 A) (@lem8270906 A B P s P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270913 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2138 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2207 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun s : P -> A => @lem8270908 A B P s P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270914 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8270915 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2139 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270914 A P) (@lem8270913 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270920 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2140 A B P P1 G2 G1 z P' H2 f p H1 g a w) = (term2209 A B P g P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8270915 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270921 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270922 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2141 A B P P1 G2 G1 z P' H2 f p H1 g a w) = (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270921 A B P) (@lem8270920 A B P P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270927 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2142 A B P G2 G1 z P' H2 f p H1 g a w) = (term2211 A B P g G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8270922 A B P P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270928 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8270929 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2143 A B P G2 G1 z P' H2 f p H1 g a w) = (term2212 A B P g G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270928 A B P) (@lem8270927 A B P G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270934 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2144 A B P G1 z P' H2 f p H1 g a w) = (term2213 A B P g G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8270929 A B P G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270935 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270936 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2145 A B P G1 z P' H2 f p H1 g a w) = (term2214 A B P g G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270935 A B P) (@lem8270934 A B P G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270941 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2146 A B P z P' H2 f p H1 g a w) = (term2215 A B P g z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8270936 A B P G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270942 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8270943 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2147 A B P z P' H2 f p H1 g a w) = (term2216 A B P g z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270942 A B P) (@lem8270941 A B P z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270948 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2148 A B P P' H2 f p H1 g a w) = (term2217 A B P g p P' H2 H1 f a w).
Proof. exact (fun_ext (fun z : A => @lem8270943 A B P z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270949 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8270950 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2149 A B P P' H2 f p H1 g a w) = (term2218 A B P g p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8270949 A) (@lem8270948 A B P P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270955 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2150 A B P P' H2 p H1 g a w) = (term2219 A B P g p P' H2 H1 a w).
Proof. exact (fun_ext (fun f : A -> B => @lem8270950 A B P P' H2 H1 f w p g a h1)). Qed.
Lemma lem8270956 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8270957 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2151 A B P P' H2 p H1 g a w) = (term2220 A B P g p P' H2 H1 a w).
Proof. exact (MK_COMB (@lem8270956 A B) (@lem8270955 A B P P' H2 H1 w p g a h1)). Qed.
Lemma lem8270962 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : term2221 A B P g p P' H2 H1 a w.
Proof. exact (fun h0 : (p g a) = False => @lem8270957 A B P P' H2 H1 w p g a h0). Qed.
Lemma lem8270972 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8270973 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2118 A B P p f a) = (term2118 A B P p f a).
Proof. exact (eq_refl (term2118 A B P p f a)). Qed.
Lemma lem8270974 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((p f a) = (p g a)) = ((p f a) = True).
Proof. exact (MK_COMB (@lem8270973 A B P p f a) (@lem8270972 A B P p g a h1)). Qed.
Lemma lem8270976 (t : Prop) : (t = True) = t.
Proof. exact (proj1 (@lem1856 t)). Qed.
Lemma lem8270977 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : ((p f a) = True) = (p f a).
Proof. exact (@lem8270976 (p f a)). Qed.
Lemma lem8270978 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((p f a) = (p g a)) = (p f a).
Proof. exact (TRANS (@lem8270974 A B P f p g a h1) (@lem8270977 A B P p f a)). Qed.
Lemma lem8270979 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270980 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2017 A B P f p g a) = (term327 A B P p f a).
Proof. exact (MK_COMB (@lem8270979) (@lem8270978 A B P f p g a h1)). Qed.
Lemma lem8270982 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8270983 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8270984 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2019 A B P f p g a) = (term2018 A B P p f a).
Proof. exact (MK_COMB (@lem8270983 A B P p f a) (@lem8270982 A B P p g a h1)). Qed.
Lemma lem8270986 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8270987 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2018 A B P p f a) = (p f a).
Proof. exact (@lem8270986 (p f a)). Qed.
Lemma lem8270988 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2019 A B P f p g a) = (p f a).
Proof. exact (TRANS (@lem8270984 A B P f p g a h1) (@lem8270987 A B P p f a)). Qed.
Lemma lem8270989 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8270990 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2020 A B P f p g a) = (term1070 A B P p f a).
Proof. exact (MK_COMB (@lem8270989) (@lem8270988 A B P f p g a h1)). Qed.
Lemma lem8270991 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (eq_refl (term373 A B P P' f a)). Qed.
Lemma lem8270992 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2119 A B P p g P' f a) = (term2222 A B P p P' f a).
Proof. exact (MK_COMB (@lem8270990 A B P f p g a h1) (@lem8270991 A B P P' f a)). Qed.
Lemma lem8270995 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2120 A B P p g P' f a) = (term2223 A B P p P' f a).
Proof. exact (MK_COMB (@lem8270980 A B P f p g a h1) (@lem8270992 A B P P' f p g a h1)). Qed.
Lemma lem8270998 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8270999 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2121 A B P p g P' f a) = (term2224 A B P p P' f a).
Proof. exact (MK_COMB (@lem8270998) (@lem8270995 A B P P' f p g a h1)). Qed.
Lemma lem8271022 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271023 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2122 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2225 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8270999 A B P P' f p g a h1) (@lem8271022 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271026 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271027 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2123 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2226 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271026) (@lem8271023 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1)). Qed.
Lemma lem8271029 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8271030 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8271031 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1432 A B P p g a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8271030) (@lem8271029 A B P p g a h1)). Qed.
Lemma lem8271032 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8271033 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1467 A B P p P1 g a) = (term1481 A B P P1 g a).
Proof. exact (MK_COMB (@lem8271031 A B P p g a h1) (@lem8271032 A B P P1 g a)). Qed.
Lemma lem8271034 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8271035 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2124 A B P p P1 g a) = (term2227 A B P P1 g a).
Proof. exact (MK_COMB (@lem8271033 A B P P1 p g a h1) (@lem8271034)). Qed.
Lemma lem8271037 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271038 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8271037 Prop t2 t1). Qed.
Lemma lem8271039 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term2227 A B P P1 g a) = (P1 g a).
Proof. exact (@lem8271038 False (P1 g a)). Qed.
Lemma lem8271040 {A B P : Type'} (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2124 A B P p P1 g a) = (P1 g a).
Proof. exact (TRANS (@lem8271035 A B P P1 p g a h1) (@lem8271039 A B P P1 g a)). Qed.
Lemma lem8271041 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1311 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1311 A B P p P' P2 P1 f a)). Qed.
Lemma lem8271042 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (f : A -> B) (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P1 g a)) = ((term1267 A B P p P' P2 P1 f a) = (P1 g a)).
Proof. exact (MK_COMB (@lem8271041 A B P p P' P2 P1 f a) (@lem8271040 A B P P1 p g a h1)). Qed.
Lemma lem8271045 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271046 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (f : A -> B) (P1 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2125 A B P P' P2 f p P1 g a) = (term2228 A B P p P' P2 f P1 g a).
Proof. exact (MK_COMB (@lem8271045) (@lem8271042 A B P P' P2 f P1 p g a h1)). Qed.
Lemma lem8271048 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8271049 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8271050 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1437 A B P p g a) = (@COND A True).
Proof. exact (MK_COMB (@lem8271049 A) (@lem8271048 A B P p g a h1)). Qed.
Lemma lem8271051 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8271052 {A B P : Type'} (G1 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1470 A B P p G1 g a) = (term1483 A B P G1 g a).
Proof. exact (MK_COMB (@lem8271050 A B P p g a h1) (@lem8271051 A B P G1 g a)). Qed.
Lemma lem8271053 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271054 {A B P : Type'} (G1 : type557 A B P) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2126 A B P p G1 g a z) = (term2229 A B P G1 g a z).
Proof. exact (MK_COMB (@lem8271052 A B P G1 p g a h1) (@lem8271053 A z)). Qed.
Lemma lem8271056 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271057 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8271056 A t2 t1). Qed.
Lemma lem8271058 {A B P : Type'} (z : A) (G1 : type557 A B P) (g : A -> B) (a : P) : (term2229 A B P G1 g a z) = (G1 g a).
Proof. exact (@lem8271057 A z (G1 g a)). Qed.
Lemma lem8271059 {A B P : Type'} (z : A) (G1 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2126 A B P p G1 g a z) = (G1 g a).
Proof. exact (TRANS (@lem8271054 A B P G1 z p g a h1) (@lem8271058 A B P z G1 g a)). Qed.
Lemma lem8271060 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1315 A B P p P' G2 G1 f a z) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1315 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8271061 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (f : A -> B) (z : A) (G1 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((term1284 A B P p P' G2 G1 f a z) = (term2126 A B P p G1 g a z)) = ((term1284 A B P p P' G2 G1 f a z) = (G1 g a)).
Proof. exact (MK_COMB (@lem8271060 A B P p P' G2 G1 f a z) (@lem8271059 A B P z G1 p g a h1)). Qed.
Lemma lem8271064 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271065 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (f : A -> B) (z : A) (G1 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2127 A B P P' G2 f p G1 g a z) = (term2230 A B P p P' G2 f z G1 g a).
Proof. exact (MK_COMB (@lem8271064) (@lem8271061 A B P P' G2 f z G1 p g a h1)). Qed.
Lemma lem8271067 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8271068 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8271069 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2043 A B P p g a) = (@COND B True).
Proof. exact (MK_COMB (@lem8271068 B) (@lem8271067 A B P p g a h1)). Qed.
Lemma lem8271070 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8271071 {A B P : Type'} (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2128 A B P p H1 g a) = (term2162 A B P H1 g a).
Proof. exact (MK_COMB (@lem8271069 A B P p g a h1) (@lem8271070 A B P H1 g a)). Qed.
Lemma lem8271072 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271073 {A B P : Type'} (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2131 A B P p H1 g a w) = (term2231 A B P H1 g a w).
Proof. exact (MK_COMB (@lem8271071 A B P H1 p g a h1) (@lem8271072 B w)). Qed.
Lemma lem8271075 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271076 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8271075 B t2 t1). Qed.
Lemma lem8271077 {A B P : Type'} (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2231 A B P H1 g a w) = (H1 g a).
Proof. exact (@lem8271076 B w (H1 g a)). Qed.
Lemma lem8271078 {A B P : Type'} (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2131 A B P p H1 g a w) = (H1 g a).
Proof. exact (TRANS (@lem8271073 A B P H1 w p g a h1) (@lem8271077 A B P w H1 g a)). Qed.
Lemma lem8271079 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1333 A B P p P' H2 H1 f a w) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1333 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8271080 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((term1328 A B P p P' H2 H1 f a w) = (term2131 A B P p H1 g a w)) = ((term1328 A B P p P' H2 H1 f a w) = (H1 g a)).
Proof. exact (MK_COMB (@lem8271079 A B P p P' H2 H1 f a w) (@lem8271078 A B P w H1 p g a h1)). Qed.
Lemma lem8271083 {A B P : Type'} (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2132 A B P G2 G1 z P' H2 f p H1 g a w) = (term2232 A B P G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271065 A B P P' G2 f z G1 p g a h1) (@lem8271080 A B P P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271086 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2133 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2233 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271046 A B P P' P2 f P1 p g a h1) (@lem8271083 A B P G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271089 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2134 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2234 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271027 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1) (@lem8271086 A B P P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271092 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8271093 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2135 A B P lt2 s P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2235 A B P lt2 s P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271092 A B P lt2 s a f g) (@lem8271089 A B P P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271096 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2136 A B P s P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2236 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8271093 A B P lt2 s P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271097 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8271098 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2137 A B P s P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2237 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271097 A) (@lem8271096 A B P s P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271103 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2138 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2238 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8271098 A B P s P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271104 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8271105 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2139 A B P P2 P1 G2 G1 z P' H2 f p H1 g a w) = (term2239 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271104 A P) (@lem8271103 A B P P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271110 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2140 A B P P1 G2 G1 z P' H2 f p H1 g a w) = (term2240 A B P P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8271105 A B P P2 P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271111 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271112 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2141 A B P P1 G2 G1 z P' H2 f p H1 g a w) = (term2241 A B P P1 G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271111 A B P) (@lem8271110 A B P P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271117 {A B P : Type'} (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2142 A B P G2 G1 z P' H2 f p H1 g a w) = (term2242 A B P G2 z G1 p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8271112 A B P P1 G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271118 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271119 {A B P : Type'} (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2143 A B P G2 G1 z P' H2 f p H1 g a w) = (term2243 A B P G2 z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271118 A B P) (@lem8271117 A B P G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271124 {A B P : Type'} (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2144 A B P G1 z P' H2 f p H1 g a w) = (term2244 A B P z G1 p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8271119 A B P G2 z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271125 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271126 {A B P : Type'} (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2145 A B P G1 z P' H2 f p H1 g a w) = (term2245 A B P z G1 p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271125 A B P) (@lem8271124 A B P z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271131 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2146 A B P z P' H2 f p H1 g a w) = (term2246 A B P z p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8271126 A B P z G1 P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271132 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271133 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2147 A B P z P' H2 f p H1 g a w) = (term2247 A B P z p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271132 A B P) (@lem8271131 A B P z P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271138 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2148 A B P P' H2 f p H1 g a w) = (term2248 A B P p P' H2 f w H1 g a).
Proof. exact (fun_ext (fun z : A => @lem8271133 A B P z P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271139 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8271140 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2149 A B P P' H2 f p H1 g a w) = (term2249 A B P p P' H2 f w H1 g a).
Proof. exact (MK_COMB (@lem8271139 A) (@lem8271138 A B P P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271145 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2150 A B P P' H2 p H1 g a w) = (term2250 A B P p P' H2 w H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8271140 A B P P' H2 f w H1 p g a h1)). Qed.
Lemma lem8271146 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8271147 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2151 A B P P' H2 p H1 g a w) = (term2251 A B P p P' H2 w H1 g a).
Proof. exact (MK_COMB (@lem8271146 A B) (@lem8271145 A B P P' H2 w H1 p g a h1)). Qed.
Lemma lem8271152 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2252 A B P p P' H2 w H1 g a.
Proof. exact (fun h0 : (p g a) = True => @lem8271147 A B P P' H2 w H1 p g a h0). Qed.
Lemma lem8271153 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2253 A B P p P' H2 w H1 g a.
Proof. exact (conj (@lem8270962 A B P g p P' H2 H1 a w) (@lem8271152 A B P p P' H2 w H1 g a)). Qed.
Lemma lem8271155 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8271156 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : term2254 A B P g p P' H2 H1 a w.
Proof. exact (@lem8271155 (term2151 A B P P' H2 p H1 g a w) (term2251 A B P p P' H2 w H1 g a) (p g a) (term2220 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8271171 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : (term2151 A B P P' H2 p H1 g a w) = (term2255 A B P g p P' H2 H1 a w).
Proof. exact (@lem8271156 A B P g p P' H2 H1 a w (@lem8271153 A B P p P' H2 w H1 g a)). Qed.
Lemma lem8271183 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271184 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8271185 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term373 A B P p f a) = (~ False).
Proof. exact (MK_COMB (@lem8271184) (@lem8271183 A B P p f a h1)). Qed.
Lemma lem8271187 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8271188 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term373 A B P p f a) = True.
Proof. exact (TRANS (@lem8271185 A B P p f a h1) (@lem8271187)). Qed.
Lemma lem8271189 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271190 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1559 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8271189) (@lem8271188 A B P p f a h1)). Qed.
Lemma lem8271213 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271214 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2256 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271190 A B P p f a h1) (@lem8271213 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271216 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8271217 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2256 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8271216 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271220 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8271214 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271217 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271221 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271222 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2194 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2257 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271221) (@lem8271220 A B P P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8271224 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271225 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8271226 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1432 A B P p f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8271225) (@lem8271224 A B P p f a h1)). Qed.
Lemma lem8271227 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8271228 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1434 A B P p P' P2 P1 f a) = (term1435 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271226 A B P p f a h1) (@lem8271227 A B P P' P2 P1 f a)). Qed.
Lemma lem8271229 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8271230 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = (term1436 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271228 A B P P' P2 P1 p f a h1) (@lem8271229)). Qed.
Lemma lem8271232 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8271233 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8271232 Prop t1 t2). Qed.
Lemma lem8271234 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1436 A B P P' P2 P1 f a) = False.
Proof. exact (@lem8271233 (term1433 A B P P' P2 P1 f a) False). Qed.
Lemma lem8271235 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = False.
Proof. exact (TRANS (@lem8271230 A B P P' P2 P1 p f a h1) (@lem8271234 A B P P' P2 P1 f a)). Qed.
Lemma lem8271236 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8271237 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2196 A B P p P' P2 P1 f a) = (~ False).
Proof. exact (MK_COMB (@lem8271236) (@lem8271235 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8271239 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8271240 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2196 A B P p P' P2 P1 f a) = True.
Proof. exact (TRANS (@lem8271237 A B P P' P2 P1 p f a h1) (@lem8271239)). Qed.
Lemma lem8271241 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271242 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2197 A B P p P' P2 P1 f a) = (and True).
Proof. exact (MK_COMB (@lem8271241) (@lem8271240 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8271244 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271245 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8271246 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1437 A B P p f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8271245 A) (@lem8271244 A B P p f a h1)). Qed.
Lemma lem8271247 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8271248 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1439 A B P p P' G2 G1 f a) = (term1440 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8271246 A B P p f a h1) (@lem8271247 A B P P' G2 G1 f a)). Qed.
Lemma lem8271249 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271250 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = (term1441 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8271248 A B P P' G2 G1 p f a h1) (@lem8271249 A z)). Qed.
Lemma lem8271252 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8271253 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8271252 A t1 t2). Qed.
Lemma lem8271254 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1441 A B P P' G2 G1 f a z) = z.
Proof. exact (@lem8271253 A (term1438 A B P P' G2 G1 f a) z). Qed.
Lemma lem8271255 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = z.
Proof. exact (TRANS (@lem8271250 A B P P' G2 G1 z p f a h1) (@lem8271254 A B P P' G2 G1 f a z)). Qed.
Lemma lem8271256 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8271257 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1315 A B P p P' G2 G1 f a z) = (@eq A z).
Proof. exact (MK_COMB (@lem8271256 A) (@lem8271255 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8271258 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271259 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1284 A B P p P' G2 G1 f a z) = z) = (z = z).
Proof. exact (MK_COMB (@lem8271257 A B P P' G2 G1 z p f a h1) (@lem8271258 A z)). Qed.
Lemma lem8271261 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8271262 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem8271261 A x). Qed.
Lemma lem8271263 {A : Type'} (z : A) : (z = z) = True.
Proof. exact (@lem8271262 A z). Qed.
Lemma lem8271264 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1284 A B P p P' G2 G1 f a z) = z) = True.
Proof. exact (TRANS (@lem8271259 A B P P' G2 G1 z p f a h1) (@lem8271263 A z)). Qed.
Lemma lem8271265 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271266 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2199 A B P p P' G2 G1 f a z) = (and True).
Proof. exact (MK_COMB (@lem8271265) (@lem8271264 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8271268 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271269 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8271270 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2043 A B P p f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8271269 B) (@lem8271268 A B P p f a h1)). Qed.
Lemma lem8271271 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8271272 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2044 A B P p P' H2 H1 f a) = (term2258 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8271270 A B P p f a h1) (@lem8271271 A B P P' H2 H1 f a)). Qed.
Lemma lem8271273 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271274 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = (term2259 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271272 A B P P' H2 H1 p f a h1) (@lem8271273 B w)). Qed.
Lemma lem8271276 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8271277 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8271276 B t1 t2). Qed.
Lemma lem8271278 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2259 A B P P' H2 H1 f a w) = w.
Proof. exact (@lem8271277 B (term1064 A B P P' H2 H1 f a) w). Qed.
Lemma lem8271279 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = w.
Proof. exact (TRANS (@lem8271274 A B P P' H2 H1 w p f a h1) (@lem8271278 A B P P' H2 H1 f a w)). Qed.
Lemma lem8271280 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8271281 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1333 A B P p P' H2 H1 f a w) = (@eq B w).
Proof. exact (MK_COMB (@lem8271280 B) (@lem8271279 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8271282 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271283 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1328 A B P p P' H2 H1 f a w) = w) = (w = w).
Proof. exact (MK_COMB (@lem8271281 A B P P' H2 H1 w p f a h1) (@lem8271282 B w)). Qed.
Lemma lem8271285 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8271286 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8271285 B x). Qed.
Lemma lem8271287 {B : Type'} (w : B) : (w = w) = True.
Proof. exact (@lem8271286 B w). Qed.
Lemma lem8271288 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1328 A B P p P' H2 H1 f a w) = w) = True.
Proof. exact (TRANS (@lem8271283 A B P P' H2 H1 w p f a h1) (@lem8271287 B w)). Qed.
Lemma lem8271289 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2201 A B P G2 G1 z p P' H2 H1 f a w) = (True /\ True).
Proof. exact (MK_COMB (@lem8271266 A B P P' G2 G1 z p f a h1) (@lem8271288 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8271291 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8271292 : (True /\ True) = True.
Proof. exact (@lem8271291 True). Qed.
Lemma lem8271293 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2201 A B P G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271289 A B P G2 G1 z P' H2 H1 w p f a h1) (@lem8271292)). Qed.
Lemma lem8271294 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = (True /\ True).
Proof. exact (MK_COMB (@lem8271242 A B P P' P2 P1 p f a h1) (@lem8271293 A B P G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271296 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8271297 : (True /\ True) = True.
Proof. exact (@lem8271296 True). Qed.
Lemma lem8271298 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271294 A B P P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271297)). Qed.
Lemma lem8271299 {A B P : Type'} (z : A) (P' : type560 A B P) (w : B) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2260 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271222 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271298 A B P P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271301 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8271302 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2260 A B P P1 G1 H1 P2 G2 f H2 g a) = True.
Proof. exact (@lem8271301 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271303 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271299 A B P z P' w P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271302 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271304 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8271305 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8271304 A B P lt2 s a f g) (@lem8271303 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271307 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8271308 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8271307 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8271309 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271305 A B P P2 P1 G2 G1 z P' H2 H1 w lt2 s g p f a h1) (@lem8271308 A B P lt2 s a f g)). Qed.
Lemma lem8271310 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2205 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8271309 A B P lt2 s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271311 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8271312 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2263 A).
Proof. exact (MK_COMB (@lem8271311 A) (@lem8271310 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271314 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271315 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8271314 (type1402 A) t). Qed.
Lemma lem8271316 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8271315 A True). Qed.
Lemma lem8271317 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271312 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271316 A)). Qed.
Lemma lem8271318 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2207 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8271317 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271319 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8271320 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2266 A P).
Proof. exact (MK_COMB (@lem8271319 A P) (@lem8271318 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271322 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271323 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8271322 (P -> A) t). Qed.
Lemma lem8271324 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8271323 A P True). Qed.
Lemma lem8271325 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271320 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271324 A P)). Qed.
Lemma lem8271326 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2209 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8271325 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271327 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271328 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8271327 A B P) (@lem8271326 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271330 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271331 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8271330 (type560 A B P) t). Qed.
Lemma lem8271332 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8271331 A B P True). Qed.
Lemma lem8271333 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271328 A B P g P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271332 A B P)). Qed.
Lemma lem8271334 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2211 A B P g G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8271333 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271335 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271336 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8271335 A B P) (@lem8271334 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271338 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271339 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8271338 (type560 A B P) t). Qed.
Lemma lem8271340 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8271339 A B P True). Qed.
Lemma lem8271341 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271336 A B P g G2 G1 z P' H2 H1 w p f a h1) (@lem8271340 A B P)). Qed.
Lemma lem8271342 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2213 A B P g G1 z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8271341 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271343 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271344 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2214 A B P g G1 z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8271343 A B P) (@lem8271342 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271346 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271347 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8271346 (type557 A B P) t). Qed.
Lemma lem8271348 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8271347 A B P True). Qed.
Lemma lem8271349 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2214 A B P g G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271344 A B P g G1 z P' H2 H1 w p f a h1) (@lem8271348 A B P)). Qed.
Lemma lem8271350 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2215 A B P g z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8271349 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271351 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271352 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2216 A B P g z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8271351 A B P) (@lem8271350 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271354 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271355 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8271354 (type557 A B P) t). Qed.
Lemma lem8271356 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8271355 A B P True). Qed.
Lemma lem8271357 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2216 A B P g z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271352 A B P g z P' H2 H1 w p f a h1) (@lem8271356 A B P)). Qed.
Lemma lem8271358 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2217 A B P g p P' H2 H1 f a w) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8271357 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271359 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8271360 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2218 A B P g p P' H2 H1 f a w) = (term1444 A).
Proof. exact (MK_COMB (@lem8271359 A) (@lem8271358 A B P g P' H2 H1 w p f a h1)). Qed.
Lemma lem8271362 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271363 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8271362 A t). Qed.
Lemma lem8271364 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8271363 A True). Qed.
Lemma lem8271365 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2218 A B P g p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271360 A B P g P' H2 H1 w p f a h1) (@lem8271364 A)). Qed.
Lemma lem8271366 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : term2274 A B P g p P' H2 H1 f a w.
Proof. exact (fun h0 : (p f a) = False => @lem8271365 A B P g P' H2 H1 w p f a h0). Qed.
Lemma lem8271376 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271377 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8271378 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term373 A B P p f a) = (~ True).
Proof. exact (MK_COMB (@lem8271377) (@lem8271376 A B P p f a h1)). Qed.
Lemma lem8271380 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem8271381 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term373 A B P p f a) = False.
Proof. exact (TRANS (@lem8271378 A B P p f a h1) (@lem8271380)). Qed.
Lemma lem8271382 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271383 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1559 A B P p f a) = (and False).
Proof. exact (MK_COMB (@lem8271382) (@lem8271381 A B P p f a h1)). Qed.
Lemma lem8271406 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271407 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2275 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271383 A B P p f a h1) (@lem8271406 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271409 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8271410 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2275 A B P P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (@lem8271409 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271411 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (TRANS (@lem8271407 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271410 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271412 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271413 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2194 A B P p P1 G1 H1 P2 G2 f H2 g a) = (imp False).
Proof. exact (MK_COMB (@lem8271412) (@lem8271411 A B P P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8271415 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271416 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8271417 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1432 A B P p f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8271416) (@lem8271415 A B P p f a h1)). Qed.
Lemma lem8271418 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8271419 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1434 A B P p P' P2 P1 f a) = (term1447 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271417 A B P p f a h1) (@lem8271418 A B P P' P2 P1 f a)). Qed.
Lemma lem8271420 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8271421 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1448 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271419 A B P P' P2 P1 p f a h1) (@lem8271420)). Qed.
Lemma lem8271423 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271424 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8271423 Prop t2 t1). Qed.
Lemma lem8271425 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1448 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (@lem8271424 False (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8271426 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (TRANS (@lem8271421 A B P P' P2 P1 p f a h1) (@lem8271425 A B P P' P2 P1 f a)). Qed.
Lemma lem8271427 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8271428 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2196 A B P p P' P2 P1 f a) = (term2276 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271427) (@lem8271426 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8271429 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271430 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2197 A B P p P' P2 P1 f a) = (term2277 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271429) (@lem8271428 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8271432 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271433 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8271434 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1437 A B P p f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8271433 A) (@lem8271432 A B P p f a h1)). Qed.
Lemma lem8271435 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8271436 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1439 A B P p P' G2 G1 f a) = (term1450 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8271434 A B P p f a h1) (@lem8271435 A B P P' G2 G1 f a)). Qed.
Lemma lem8271437 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271438 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1451 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8271436 A B P P' G2 G1 p f a h1) (@lem8271437 A z)). Qed.
Lemma lem8271440 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271441 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8271440 A t2 t1). Qed.
Lemma lem8271442 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1451 A B P P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (@lem8271441 A z (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8271443 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (TRANS (@lem8271438 A B P P' G2 G1 z p f a h1) (@lem8271442 A B P z P' G2 G1 f a)). Qed.
Lemma lem8271444 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8271445 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1315 A B P p P' G2 G1 f a z) = (term2278 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8271444 A) (@lem8271443 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8271446 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271447 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1284 A B P p P' G2 G1 f a z) = z) = ((term1438 A B P P' G2 G1 f a) = z).
Proof. exact (MK_COMB (@lem8271445 A B P z P' G2 G1 p f a h1) (@lem8271446 A z)). Qed.
Lemma lem8271450 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271451 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2199 A B P p P' G2 G1 f a z) = (term2279 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8271450) (@lem8271447 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8271453 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271454 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8271455 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2043 A B P p f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8271454 B) (@lem8271453 A B P p f a h1)). Qed.
Lemma lem8271456 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8271457 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2044 A B P p P' H2 H1 f a) = (term2045 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8271455 A B P p f a h1) (@lem8271456 A B P P' H2 H1 f a)). Qed.
Lemma lem8271458 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271459 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term2046 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271457 A B P P' H2 H1 p f a h1) (@lem8271458 B w)). Qed.
Lemma lem8271461 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271462 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8271461 B t2 t1). Qed.
Lemma lem8271463 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2046 A B P P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (@lem8271462 B w (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8271464 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (TRANS (@lem8271459 A B P P' H2 H1 w p f a h1) (@lem8271463 A B P w P' H2 H1 f a)). Qed.
Lemma lem8271465 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8271466 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1333 A B P p P' H2 H1 f a w) = (term1069 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8271465 B) (@lem8271464 A B P w P' H2 H1 p f a h1)). Qed.
Lemma lem8271467 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271468 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1328 A B P p P' H2 H1 f a w) = w) = ((term1064 A B P P' H2 H1 f a) = w).
Proof. exact (MK_COMB (@lem8271466 A B P w P' H2 H1 p f a h1) (@lem8271467 B w)). Qed.
Lemma lem8271471 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2201 A B P G2 G1 z p P' H2 H1 f a w) = (term2280 A B P G2 G1 z P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271451 A B P P' G2 G1 z p f a h1) (@lem8271468 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8271474 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2281 A B P P2 P1 G2 G1 z P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271430 A B P P' P2 P1 p f a h1) (@lem8271471 A B P G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271477 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2282 A B P P2 P1 G2 G1 z P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271413 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271474 A B P P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271479 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8271480 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2282 A B P P2 P1 G2 G1 z P' H2 H1 f a w) = True.
Proof. exact (@lem8271479 (term2281 A B P P2 P1 G2 G1 z P' H2 H1 f a w)). Qed.
Lemma lem8271481 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271477 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271480 A B P P2 P1 G2 G1 z P' H2 H1 f a w)). Qed.
Lemma lem8271482 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8271483 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8271482 A B P lt2 s a f g) (@lem8271481 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271485 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8271486 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8271485 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8271487 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271483 A B P P2 P1 G2 G1 z P' H2 H1 w lt2 s g p f a h1) (@lem8271486 A B P lt2 s a f g)). Qed.
Lemma lem8271488 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2205 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8271487 A B P lt2 s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271489 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8271490 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2263 A).
Proof. exact (MK_COMB (@lem8271489 A) (@lem8271488 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271492 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271493 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8271492 (type1402 A) t). Qed.
Lemma lem8271494 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8271493 A True). Qed.
Lemma lem8271495 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271490 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271494 A)). Qed.
Lemma lem8271496 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2207 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8271495 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271497 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8271498 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2266 A P).
Proof. exact (MK_COMB (@lem8271497 A P) (@lem8271496 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271500 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271501 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8271500 (P -> A) t). Qed.
Lemma lem8271502 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8271501 A P True). Qed.
Lemma lem8271503 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271498 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271502 A P)). Qed.
Lemma lem8271504 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2209 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8271503 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271505 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271506 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8271505 A B P) (@lem8271504 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271508 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271509 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8271508 (type560 A B P) t). Qed.
Lemma lem8271510 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8271509 A B P True). Qed.
Lemma lem8271511 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271506 A B P g P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8271510 A B P)). Qed.
Lemma lem8271512 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2211 A B P g G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8271511 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271513 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271514 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8271513 A B P) (@lem8271512 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271516 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271517 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8271516 (type560 A B P) t). Qed.
Lemma lem8271518 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8271517 A B P True). Qed.
Lemma lem8271519 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271514 A B P g G2 G1 z P' H2 H1 w p f a h1) (@lem8271518 A B P)). Qed.
Lemma lem8271520 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2213 A B P g G1 z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8271519 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271521 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271522 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2214 A B P g G1 z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8271521 A B P) (@lem8271520 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271524 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271525 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8271524 (type557 A B P) t). Qed.
Lemma lem8271526 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8271525 A B P True). Qed.
Lemma lem8271527 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2214 A B P g G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271522 A B P g G1 z P' H2 H1 w p f a h1) (@lem8271526 A B P)). Qed.
Lemma lem8271528 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2215 A B P g z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8271527 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271529 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271530 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2216 A B P g z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8271529 A B P) (@lem8271528 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271532 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271533 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8271532 (type557 A B P) t). Qed.
Lemma lem8271534 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8271533 A B P True). Qed.
Lemma lem8271535 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2216 A B P g z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271530 A B P g z P' H2 H1 w p f a h1) (@lem8271534 A B P)). Qed.
Lemma lem8271536 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2217 A B P g p P' H2 H1 f a w) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8271535 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8271537 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8271538 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2218 A B P g p P' H2 H1 f a w) = (term1444 A).
Proof. exact (MK_COMB (@lem8271537 A) (@lem8271536 A B P g P' H2 H1 w p f a h1)). Qed.
Lemma lem8271540 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271541 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8271540 A t). Qed.
Lemma lem8271542 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8271541 A True). Qed.
Lemma lem8271543 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2218 A B P g p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271538 A B P g P' H2 H1 w p f a h1) (@lem8271542 A)). Qed.
Lemma lem8271544 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : term2283 A B P g p P' H2 H1 f a w.
Proof. exact (fun h0 : (p f a) = True => @lem8271543 A B P g P' H2 H1 w p f a h0). Qed.
Lemma lem8271545 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : term2284 A B P g p P' H2 H1 f a w.
Proof. exact (conj (@lem8271366 A B P g p P' H2 H1 f a w) (@lem8271544 A B P g p P' H2 H1 f a w)). Qed.
Lemma lem8271547 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8271548 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) : term2285 A B P g P' H2 H1 w p f a.
Proof. exact (@lem8271547 (term2218 A B P g p P' H2 H1 f a w) True (p f a) True). Qed.
Lemma lem8271549 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) : (term2218 A B P g p P' H2 H1 f a w) = (term2286 A B P p f a).
Proof. exact (@lem8271548 A B P g P' H2 H1 w p f a (@lem8271545 A B P g p P' H2 H1 f a w)). Qed.
Lemma lem8271551 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8271552 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P p f a) = True.
Proof. exact (@lem8271551 (p f a)). Qed.
Lemma lem8271554 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8271555 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2287 A B P p f a) = True.
Proof. exact (@lem8271554 (term373 A B P p f a)). Qed.
Lemma lem8271556 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271557 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2288 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8271556) (@lem8271555 A B P p f a)). Qed.
Lemma lem8271558 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2286 A B P p f a) = (True /\ True).
Proof. exact (MK_COMB (@lem8271557 A B P p f a) (@lem8271552 A B P p f a)). Qed.
Lemma lem8271560 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8271561 : (True /\ True) = True.
Proof. exact (@lem8271560 True). Qed.
Lemma lem8271562 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2286 A B P p f a) = True.
Proof. exact (TRANS (@lem8271558 A B P p f a) (@lem8271561)). Qed.
Lemma lem8271567 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2218 A B P g p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8271549 A B P g P' H2 H1 w p f a) (@lem8271562 A B P p f a)). Qed.
Lemma lem8271568 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : (term2219 A B P g p P' H2 H1 a w) = (term2289 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8271567 A B P g p P' H2 H1 f a w)). Qed.
Lemma lem8271569 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8271570 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : (term2220 A B P g p P' H2 H1 a w) = (term2290 A B).
Proof. exact (MK_COMB (@lem8271569 A B) (@lem8271568 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8271573 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term628 A B P p g a) = (term628 A B P p g a).
Proof. exact (eq_refl (term628 A B P p g a)). Qed.
Lemma lem8271574 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) : (term2291 A B P g p P' H2 H1 a w) = (term2292 A B P p g a).
Proof. exact (MK_COMB (@lem8271573 A B P p g a) (@lem8271570 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8271586 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271587 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271588 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term327 A B P p f a) = (and False).
Proof. exact (MK_COMB (@lem8271587) (@lem8271586 A B P p f a h1)). Qed.
Lemma lem8271590 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271591 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271592 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1070 A B P p f a) = (imp False).
Proof. exact (MK_COMB (@lem8271591) (@lem8271590 A B P p f a h1)). Qed.
Lemma lem8271593 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (eq_refl (term373 A B P P' f a)). Qed.
Lemma lem8271594 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2222 A B P p P' f a) = (term2191 A B P P' f a).
Proof. exact (MK_COMB (@lem8271592 A B P p f a h1) (@lem8271593 A B P P' f a)). Qed.
Lemma lem8271596 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8271597 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2191 A B P P' f a) = True.
Proof. exact (@lem8271596 (term373 A B P P' f a)). Qed.
Lemma lem8271598 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2222 A B P p P' f a) = True.
Proof. exact (TRANS (@lem8271594 A B P P' p f a h1) (@lem8271597 A B P P' f a)). Qed.
Lemma lem8271599 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2223 A B P p P' f a) = (False /\ True).
Proof. exact (MK_COMB (@lem8271588 A B P p f a h1) (@lem8271598 A B P P' p f a h1)). Qed.
Lemma lem8271601 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8271602 : (False /\ True) = False.
Proof. exact (@lem8271601 True). Qed.
Lemma lem8271603 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2223 A B P p P' f a) = False.
Proof. exact (TRANS (@lem8271599 A B P P' p f a h1) (@lem8271602)). Qed.
Lemma lem8271604 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271605 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2224 A B P p P' f a) = (and False).
Proof. exact (MK_COMB (@lem8271604) (@lem8271603 A B P P' p f a h1)). Qed.
Lemma lem8271628 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271629 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2225 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2275 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271605 A B P P' p f a h1) (@lem8271628 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271631 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8271632 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2275 A B P P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (@lem8271631 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271633 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2225 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (TRANS (@lem8271629 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271632 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271634 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271635 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2226 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (imp False).
Proof. exact (MK_COMB (@lem8271634) (@lem8271633 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8271637 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271638 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8271639 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1432 A B P p f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8271638) (@lem8271637 A B P p f a h1)). Qed.
Lemma lem8271640 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8271641 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1434 A B P p P' P2 P1 f a) = (term1435 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271639 A B P p f a h1) (@lem8271640 A B P P' P2 P1 f a)). Qed.
Lemma lem8271642 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8271643 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = (term1436 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271641 A B P P' P2 P1 p f a h1) (@lem8271642)). Qed.
Lemma lem8271645 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8271646 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8271645 Prop t1 t2). Qed.
Lemma lem8271647 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1436 A B P P' P2 P1 f a) = False.
Proof. exact (@lem8271646 (term1433 A B P P' P2 P1 f a) False). Qed.
Lemma lem8271648 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = False.
Proof. exact (TRANS (@lem8271643 A B P P' P2 P1 p f a h1) (@lem8271647 A B P P' P2 P1 f a)). Qed.
Lemma lem8271649 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8271650 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1311 A B P p P' P2 P1 f a) = (@eq Prop False).
Proof. exact (MK_COMB (@lem8271649) (@lem8271648 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8271651 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8271652 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1267 A B P p P' P2 P1 f a) = (P1 g a)) = (False = (P1 g a)).
Proof. exact (MK_COMB (@lem8271650 A B P P' P2 P1 p f a h1) (@lem8271651 A B P P1 g a)). Qed.
Lemma lem8271654 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem8271655 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (False = (P1 g a)) = (term373 A B P P1 g a).
Proof. exact (@lem8271654 (P1 g a)). Qed.
Lemma lem8271656 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1267 A B P p P' P2 P1 f a) = (P1 g a)) = (term373 A B P P1 g a).
Proof. exact (TRANS (@lem8271652 A B P P' P2 P1 g p f a h1) (@lem8271655 A B P P1 g a)). Qed.
Lemma lem8271657 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271658 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2228 A B P p P' P2 f P1 g a) = (term1559 A B P P1 g a).
Proof. exact (MK_COMB (@lem8271657) (@lem8271656 A B P P' P2 P1 g p f a h1)). Qed.
Lemma lem8271660 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271661 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8271662 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1437 A B P p f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8271661 A) (@lem8271660 A B P p f a h1)). Qed.
Lemma lem8271663 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8271664 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1439 A B P p P' G2 G1 f a) = (term1440 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8271662 A B P p f a h1) (@lem8271663 A B P P' G2 G1 f a)). Qed.
Lemma lem8271665 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271666 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = (term1441 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8271664 A B P P' G2 G1 p f a h1) (@lem8271665 A z)). Qed.
Lemma lem8271668 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8271669 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8271668 A t1 t2). Qed.
Lemma lem8271670 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1441 A B P P' G2 G1 f a z) = z.
Proof. exact (@lem8271669 A (term1438 A B P P' G2 G1 f a) z). Qed.
Lemma lem8271671 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = z.
Proof. exact (TRANS (@lem8271666 A B P P' G2 G1 z p f a h1) (@lem8271670 A B P P' G2 G1 f a z)). Qed.
Lemma lem8271672 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8271673 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1315 A B P p P' G2 G1 f a z) = (@eq A z).
Proof. exact (MK_COMB (@lem8271672 A) (@lem8271671 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8271674 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8271675 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1284 A B P p P' G2 G1 f a z) = (G1 g a)) = (z = (G1 g a)).
Proof. exact (MK_COMB (@lem8271673 A B P P' G2 G1 z p f a h1) (@lem8271674 A B P G1 g a)). Qed.
Lemma lem8271678 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271679 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2230 A B P p P' G2 f z G1 g a) = (term2293 A B P z G1 g a).
Proof. exact (MK_COMB (@lem8271678) (@lem8271675 A B P P' G2 z G1 g p f a h1)). Qed.
Lemma lem8271681 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271682 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8271683 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2043 A B P p f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8271682 B) (@lem8271681 A B P p f a h1)). Qed.
Lemma lem8271684 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8271685 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2044 A B P p P' H2 H1 f a) = (term2258 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8271683 A B P p f a h1) (@lem8271684 A B P P' H2 H1 f a)). Qed.
Lemma lem8271686 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271687 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = (term2259 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271685 A B P P' H2 H1 p f a h1) (@lem8271686 B w)). Qed.
Lemma lem8271689 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8271690 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8271689 B t1 t2). Qed.
Lemma lem8271691 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2259 A B P P' H2 H1 f a w) = w.
Proof. exact (@lem8271690 B (term1064 A B P P' H2 H1 f a) w). Qed.
Lemma lem8271692 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = w.
Proof. exact (TRANS (@lem8271687 A B P P' H2 H1 w p f a h1) (@lem8271691 A B P P' H2 H1 f a w)). Qed.
Lemma lem8271693 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8271694 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1333 A B P p P' H2 H1 f a w) = (@eq B w).
Proof. exact (MK_COMB (@lem8271693 B) (@lem8271692 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8271695 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8271696 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1328 A B P p P' H2 H1 f a w) = (H1 g a)) = (w = (H1 g a)).
Proof. exact (MK_COMB (@lem8271694 A B P P' H2 H1 w p f a h1) (@lem8271695 A B P H1 g a)). Qed.
Lemma lem8271699 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (z : A) (G1 : type557 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2232 A B P G2 z G1 p P' H2 f w H1 g a) = (term2294 A B P z G1 w H1 g a).
Proof. exact (MK_COMB (@lem8271679 A B P P' G2 z G1 g p f a h1) (@lem8271696 A B P P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271702 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (z : A) (G1 : type557 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2233 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2295 A B P P1 z G1 w H1 g a).
Proof. exact (MK_COMB (@lem8271658 A B P P' P2 P1 g p f a h1) (@lem8271699 A B P G2 P' H2 z G1 w H1 g p f a h1)). Qed.
Lemma lem8271705 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (z : A) (G1 : type557 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2234 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2296 A B P P1 z G1 w H1 g a).
Proof. exact (MK_COMB (@lem8271635 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271702 A B P P2 G2 P' H2 P1 z G1 w H1 g p f a h1)). Qed.
Lemma lem8271707 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8271708 {A B P : Type'} (P1 : type560 A B P) (z : A) (G1 : type557 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2296 A B P P1 z G1 w H1 g a) = True.
Proof. exact (@lem8271707 (term2295 A B P P1 z G1 w H1 g a)). Qed.
Lemma lem8271709 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2234 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271705 A B P P2 G2 P' H2 P1 z G1 w H1 g p f a h1) (@lem8271708 A B P P1 z G1 w H1 g a)). Qed.
Lemma lem8271710 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8271711 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2235 A B P lt2 s P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8271710 A B P lt2 s a f g) (@lem8271709 A B P P2 P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271713 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8271714 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8271713 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8271715 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2235 A B P lt2 s P2 P1 G2 z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271711 A B P P2 P1 G2 z G1 P' H2 w H1 lt2 s g p f a h1) (@lem8271714 A B P lt2 s a f g)). Qed.
Lemma lem8271716 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2236 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8271715 A B P lt2 s P2 P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271717 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8271718 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2237 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2263 A).
Proof. exact (MK_COMB (@lem8271717 A) (@lem8271716 A B P s P2 P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271720 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271721 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8271720 (type1402 A) t). Qed.
Lemma lem8271722 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8271721 A True). Qed.
Lemma lem8271723 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2237 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271718 A B P s P2 P1 G2 z G1 P' H2 w H1 g p f a h1) (@lem8271722 A)). Qed.
Lemma lem8271724 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2238 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8271723 A B P s P2 P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271725 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8271726 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2239 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2266 A P).
Proof. exact (MK_COMB (@lem8271725 A P) (@lem8271724 A B P P2 P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271728 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271729 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8271728 (P -> A) t). Qed.
Lemma lem8271730 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8271729 A P True). Qed.
Lemma lem8271731 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2239 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271726 A B P P2 P1 G2 z G1 P' H2 w H1 g p f a h1) (@lem8271730 A P)). Qed.
Lemma lem8271732 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2240 A B P P1 G2 z G1 p P' H2 f w H1 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8271731 A B P P2 P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271733 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271734 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2241 A B P P1 G2 z G1 p P' H2 f w H1 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8271733 A B P) (@lem8271732 A B P P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271736 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271737 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8271736 (type560 A B P) t). Qed.
Lemma lem8271738 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8271737 A B P True). Qed.
Lemma lem8271739 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2241 A B P P1 G2 z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271734 A B P P1 G2 z G1 P' H2 w H1 g p f a h1) (@lem8271738 A B P)). Qed.
Lemma lem8271740 {A B P : Type'} (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2242 A B P G2 z G1 p P' H2 f w H1 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8271739 A B P P1 G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271741 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271742 {A B P : Type'} (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2243 A B P G2 z G1 p P' H2 f w H1 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8271741 A B P) (@lem8271740 A B P G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271744 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271745 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8271744 (type560 A B P) t). Qed.
Lemma lem8271746 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8271745 A B P True). Qed.
Lemma lem8271747 {A B P : Type'} (G2 : type557 A B P) (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2243 A B P G2 z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271742 A B P G2 z G1 P' H2 w H1 g p f a h1) (@lem8271746 A B P)). Qed.
Lemma lem8271748 {A B P : Type'} (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2244 A B P z G1 p P' H2 f w H1 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8271747 A B P G2 z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271749 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271750 {A B P : Type'} (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2245 A B P z G1 p P' H2 f w H1 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8271749 A B P) (@lem8271748 A B P z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271752 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271753 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8271752 (type557 A B P) t). Qed.
Lemma lem8271754 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8271753 A B P True). Qed.
Lemma lem8271755 {A B P : Type'} (z : A) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2245 A B P z G1 p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271750 A B P z G1 P' H2 w H1 g p f a h1) (@lem8271754 A B P)). Qed.
Lemma lem8271756 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2246 A B P z p P' H2 f w H1 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8271755 A B P z G1 P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271757 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271758 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2247 A B P z p P' H2 f w H1 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8271757 A B P) (@lem8271756 A B P z P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271760 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271761 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8271760 (type557 A B P) t). Qed.
Lemma lem8271762 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8271761 A B P True). Qed.
Lemma lem8271763 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2247 A B P z p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271758 A B P z P' H2 w H1 g p f a h1) (@lem8271762 A B P)). Qed.
Lemma lem8271764 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2248 A B P p P' H2 f w H1 g a) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8271763 A B P z P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271765 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8271766 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2249 A B P p P' H2 f w H1 g a) = (term1444 A).
Proof. exact (MK_COMB (@lem8271765 A) (@lem8271764 A B P P' H2 w H1 g p f a h1)). Qed.
Lemma lem8271768 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271769 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8271768 A t). Qed.
Lemma lem8271770 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8271769 A True). Qed.
Lemma lem8271771 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (w : B) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2249 A B P p P' H2 f w H1 g a) = True.
Proof. exact (TRANS (@lem8271766 A B P P' H2 w H1 g p f a h1) (@lem8271770 A)). Qed.
Lemma lem8271772 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2297 A B P p P' H2 f w H1 g a.
Proof. exact (fun h0 : (p f a) = False => @lem8271771 A B P P' H2 w H1 g p f a h0). Qed.
Lemma lem8271782 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271783 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271784 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term327 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8271783) (@lem8271782 A B P p f a h1)). Qed.
Lemma lem8271786 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271787 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271788 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1070 A B P p f a) = (imp True).
Proof. exact (MK_COMB (@lem8271787) (@lem8271786 A B P p f a h1)). Qed.
Lemma lem8271789 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (eq_refl (term373 A B P P' f a)). Qed.
Lemma lem8271790 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2222 A B P p P' f a) = (term2298 A B P P' f a).
Proof. exact (MK_COMB (@lem8271788 A B P p f a h1) (@lem8271789 A B P P' f a)). Qed.
Lemma lem8271792 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8271793 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2298 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (@lem8271792 (term373 A B P P' f a)). Qed.
Lemma lem8271794 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2222 A B P p P' f a) = (term373 A B P P' f a).
Proof. exact (TRANS (@lem8271790 A B P P' p f a h1) (@lem8271793 A B P P' f a)). Qed.
Lemma lem8271795 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2223 A B P p P' f a) = (term2032 A B P P' f a).
Proof. exact (MK_COMB (@lem8271784 A B P p f a h1) (@lem8271794 A B P P' p f a h1)). Qed.
Lemma lem8271797 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8271798 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2032 A B P P' f a) = (term373 A B P P' f a).
Proof. exact (@lem8271797 (term373 A B P P' f a)). Qed.
Lemma lem8271799 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2223 A B P p P' f a) = (term373 A B P P' f a).
Proof. exact (TRANS (@lem8271795 A B P P' p f a h1) (@lem8271798 A B P P' f a)). Qed.
Lemma lem8271800 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271801 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2224 A B P p P' f a) = (term1559 A B P P' f a).
Proof. exact (MK_COMB (@lem8271800) (@lem8271799 A B P P' p f a h1)). Qed.
Lemma lem8271824 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271825 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2225 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2193 A B P P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271801 A B P P' p f a h1) (@lem8271824 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8271828 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8271829 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2226 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2194 A B P P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271828) (@lem8271825 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8271831 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271832 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8271833 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1432 A B P p f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8271832) (@lem8271831 A B P p f a h1)). Qed.
Lemma lem8271834 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8271835 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1434 A B P p P' P2 P1 f a) = (term1447 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271833 A B P p f a h1) (@lem8271834 A B P P' P2 P1 f a)). Qed.
Lemma lem8271836 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8271837 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1448 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271835 A B P P' P2 P1 p f a h1) (@lem8271836)). Qed.
Lemma lem8271839 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271840 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8271839 Prop t2 t1). Qed.
Lemma lem8271841 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1448 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (@lem8271840 False (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8271842 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (TRANS (@lem8271837 A B P P' P2 P1 p f a h1) (@lem8271841 A B P P' P2 P1 f a)). Qed.
Lemma lem8271843 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8271844 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1311 A B P p P' P2 P1 f a) = (term2299 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8271843) (@lem8271842 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8271845 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8271846 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1267 A B P p P' P2 P1 f a) = (P1 g a)) = ((term1433 A B P P' P2 P1 f a) = (P1 g a)).
Proof. exact (MK_COMB (@lem8271844 A B P P' P2 P1 p f a h1) (@lem8271845 A B P P1 g a)). Qed.
Lemma lem8271849 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271850 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2228 A B P p P' P2 f P1 g a) = (term2300 A B P P' P2 f P1 g a).
Proof. exact (MK_COMB (@lem8271849) (@lem8271846 A B P P' P2 P1 g p f a h1)). Qed.
Lemma lem8271852 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271853 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8271854 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1437 A B P p f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8271853 A) (@lem8271852 A B P p f a h1)). Qed.
Lemma lem8271855 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8271856 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1439 A B P p P' G2 G1 f a) = (term1450 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8271854 A B P p f a h1) (@lem8271855 A B P P' G2 G1 f a)). Qed.
Lemma lem8271857 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8271858 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1451 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8271856 A B P P' G2 G1 p f a h1) (@lem8271857 A z)). Qed.
Lemma lem8271860 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271861 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8271860 A t2 t1). Qed.
Lemma lem8271862 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1451 A B P P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (@lem8271861 A z (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8271863 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (TRANS (@lem8271858 A B P P' G2 G1 z p f a h1) (@lem8271862 A B P z P' G2 G1 f a)). Qed.
Lemma lem8271864 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8271865 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1315 A B P p P' G2 G1 f a z) = (term2278 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8271864 A) (@lem8271863 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8271866 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8271867 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1284 A B P p P' G2 G1 f a z) = (G1 g a)) = ((term1438 A B P P' G2 G1 f a) = (G1 g a)).
Proof. exact (MK_COMB (@lem8271865 A B P z P' G2 G1 p f a h1) (@lem8271866 A B P G1 g a)). Qed.
Lemma lem8271870 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271871 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2230 A B P p P' G2 f z G1 g a) = (term2301 A B P P' G2 f G1 g a).
Proof. exact (MK_COMB (@lem8271870) (@lem8271867 A B P z P' G2 G1 g p f a h1)). Qed.
Lemma lem8271873 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8271874 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8271875 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2043 A B P p f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8271874 B) (@lem8271873 A B P p f a h1)). Qed.
Lemma lem8271876 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8271877 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2044 A B P p P' H2 H1 f a) = (term2045 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8271875 A B P p f a h1) (@lem8271876 A B P P' H2 H1 f a)). Qed.
Lemma lem8271878 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8271879 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term2046 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8271877 A B P P' H2 H1 p f a h1) (@lem8271878 B w)). Qed.
Lemma lem8271881 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8271882 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8271881 B t2 t1). Qed.
Lemma lem8271883 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2046 A B P P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (@lem8271882 B w (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8271884 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (TRANS (@lem8271879 A B P P' H2 H1 w p f a h1) (@lem8271883 A B P w P' H2 H1 f a)). Qed.
Lemma lem8271885 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8271886 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1333 A B P p P' H2 H1 f a w) = (term1069 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8271885 B) (@lem8271884 A B P w P' H2 H1 p f a h1)). Qed.
Lemma lem8271887 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8271888 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1328 A B P p P' H2 H1 f a w) = (H1 g a)) = ((term1064 A B P P' H2 H1 f a) = (H1 g a)).
Proof. exact (MK_COMB (@lem8271886 A B P w P' H2 H1 p f a h1) (@lem8271887 A B P H1 g a)). Qed.
Lemma lem8271891 {A B P : Type'} (z : A) (w : B) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2232 A B P G2 z G1 p P' H2 f w H1 g a) = (term2302 A B P G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271871 A B P z P' G2 G1 g p f a h1) (@lem8271888 A B P w P' H2 H1 g p f a h1)). Qed.
Lemma lem8271894 {A B P : Type'} (z : A) (w : B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2233 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2303 A B P P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271850 A B P P' P2 P1 g p f a h1) (@lem8271891 A B P z w G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271897 {A B P : Type'} (z : A) (w : B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2234 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2304 A B P P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271829 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8271894 A B P z w P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271900 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8271901 {A B P : Type'} (z : A) (w : B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2235 A B P lt2 s P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2305 A B P lt2 s P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271900 A B P lt2 s a f g) (@lem8271897 A B P z w P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271904 {A B P : Type'} (z : A) (w : B) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2236 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2306 A B P s P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8271901 A B P z w lt2 s P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271905 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8271906 {A B P : Type'} (z : A) (w : B) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2237 A B P s P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2307 A B P s P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271905 A) (@lem8271904 A B P z w s P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271911 {A B P : Type'} (z : A) (w : B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2238 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2308 A B P P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8271906 A B P z w s P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271912 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8271913 {A B P : Type'} (z : A) (w : B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2239 A B P P2 P1 G2 z G1 p P' H2 f w H1 g a) = (term2309 A B P P2 P1 G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271912 A P) (@lem8271911 A B P z w P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271918 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2240 A B P P1 G2 z G1 p P' H2 f w H1 g a) = (term2310 A B P P1 G2 G1 P' H2 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8271913 A B P z w P2 P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271919 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271920 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2241 A B P P1 G2 z G1 p P' H2 f w H1 g a) = (term2311 A B P P1 G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271919 A B P) (@lem8271918 A B P z w P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271925 {A B P : Type'} (z : A) (w : B) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2242 A B P G2 z G1 p P' H2 f w H1 g a) = (term2312 A B P G2 G1 P' H2 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8271920 A B P z w P1 G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271926 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8271927 {A B P : Type'} (z : A) (w : B) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2243 A B P G2 z G1 p P' H2 f w H1 g a) = (term2313 A B P G2 G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271926 A B P) (@lem8271925 A B P z w G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271932 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2244 A B P z G1 p P' H2 f w H1 g a) = (term2314 A B P G1 P' H2 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8271927 A B P z w G2 G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271933 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271934 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2245 A B P z G1 p P' H2 f w H1 g a) = (term2315 A B P G1 P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271933 A B P) (@lem8271932 A B P z w G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271939 {A B P : Type'} (z : A) (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2246 A B P z p P' H2 f w H1 g a) = (term2316 A B P P' H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8271934 A B P z w G1 P' H2 H1 g p f a h1)). Qed.
Lemma lem8271940 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8271941 {A B P : Type'} (z : A) (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2247 A B P z p P' H2 f w H1 g a) = (term2317 A B P P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271940 A B P) (@lem8271939 A B P z w P' H2 H1 g p f a h1)). Qed.
Lemma lem8271946 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2248 A B P p P' H2 f w H1 g a) = (term2318 A B P P' H2 f H1 g a).
Proof. exact (fun_ext (fun z : A => @lem8271941 A B P z w P' H2 H1 g p f a h1)). Qed.
Lemma lem8271947 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8271948 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2249 A B P p P' H2 f w H1 g a) = (term2319 A B P P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271947 A) (@lem8271946 A B P w P' H2 H1 g p f a h1)). Qed.
Lemma lem8271950 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8271951 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8271950 A t). Qed.
Lemma lem8271952 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2319 A B P P' H2 f H1 g a) = (term2317 A B P P' H2 f H1 g a).
Proof. exact (@lem8271951 A (term2317 A B P P' H2 f H1 g a)). Qed.
Lemma lem8271957 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2249 A B P p P' H2 f w H1 g a) = (term2317 A B P P' H2 f H1 g a).
Proof. exact (TRANS (@lem8271948 A B P w P' H2 H1 g p f a h1) (@lem8271952 A B P P' H2 f H1 g a)). Qed.
Lemma lem8271958 {A B P : Type'} (p : type560 A B P) (w : B) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2320 A B P p w P' H2 f H1 g a.
Proof. exact (fun h0 : (p f a) = True => @lem8271957 A B P w P' H2 H1 g p f a h0). Qed.
Lemma lem8271959 {A B P : Type'} (p : type560 A B P) (w : B) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2321 A B P p w P' H2 f H1 g a.
Proof. exact (conj (@lem8271772 A B P p P' H2 f w H1 g a) (@lem8271958 A B P p w P' H2 f H1 g a)). Qed.
Lemma lem8271961 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8271962 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) : term2322 A B P w P' H2 H1 g p f a.
Proof. exact (@lem8271961 (term2249 A B P p P' H2 f w H1 g a) (term2317 A B P P' H2 f H1 g a) (p f a) True). Qed.
Lemma lem8271963 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) : (term2249 A B P p P' H2 f w H1 g a) = (term2323 A B P P' H2 H1 g p f a).
Proof. exact (@lem8271962 A B P w P' H2 H1 g p f a (@lem8271959 A B P p w P' H2 f H1 g a)). Qed.
Lemma lem8271965 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8271966 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P p f a) = True.
Proof. exact (@lem8271965 (p f a)). Qed.
Lemma lem8271971 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2324 A B P p P' H2 f H1 g a) = (term2324 A B P p P' H2 f H1 g a).
Proof. exact (eq_refl (term2324 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8271972 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2323 A B P P' H2 H1 g p f a) = (term2325 A B P p P' H2 f H1 g a).
Proof. exact (MK_COMB (@lem8271971 A B P p P' H2 f H1 g a) (@lem8271966 A B P p f a)). Qed.
Lemma lem8271974 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8271975 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2325 A B P p P' H2 f H1 g a) = (term2326 A B P p P' H2 f H1 g a).
Proof. exact (@lem8271974 (term2326 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8271976 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2323 A B P P' H2 H1 g p f a) = (term2326 A B P p P' H2 f H1 g a).
Proof. exact (TRANS (@lem8271972 A B P p P' H2 f H1 g a) (@lem8271975 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8271977 {A B P : Type'} (w : B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2249 A B P p P' H2 f w H1 g a) = (term2326 A B P p P' H2 f H1 g a).
Proof. exact (TRANS (@lem8271963 A B P w P' H2 H1 g p f a) (@lem8271976 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8271989 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8271990 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8271991 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term373 A B P P' f a) = (~ False).
Proof. exact (MK_COMB (@lem8271990) (@lem8271989 A B P P' f a h1)). Qed.
Lemma lem8271993 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8271994 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term373 A B P P' f a) = True.
Proof. exact (TRANS (@lem8271991 A B P P' f a h1) (@lem8271993)). Qed.
Lemma lem8271995 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8271996 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1559 A B P P' f a) = (and True).
Proof. exact (MK_COMB (@lem8271995) (@lem8271994 A B P P' f a h1)). Qed.
Lemma lem8272019 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272020 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2193 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2256 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8271996 A B P P' f a h1) (@lem8272019 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272022 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8272023 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2256 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8272022 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272026 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2193 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8272020 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8272023 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272027 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272028 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2194 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2257 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272027) (@lem8272026 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8272030 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272031 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8272032 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1432 A B P P' f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8272031) (@lem8272030 A B P P' f a h1)). Qed.
Lemma lem8272033 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8272034 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1467 A B P P' P2 f a) = (term1468 A B P P2 f a).
Proof. exact (MK_COMB (@lem8272032 A B P P' f a h1) (@lem8272033 A B P P2 f a)). Qed.
Lemma lem8272035 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8272036 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (term1469 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8272034 A B P P2 P' f a h1) (@lem8272035 A B P P1 f a)). Qed.
Lemma lem8272038 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272039 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8272038 Prop t1 t2). Qed.
Lemma lem8272040 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1469 A B P P2 P1 f a) = (P1 f a).
Proof. exact (@lem8272039 (P2 f a) (P1 f a)). Qed.
Lemma lem8272041 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (P1 f a).
Proof. exact (TRANS (@lem8272036 A B P P2 P1 P' f a h1) (@lem8272040 A B P P2 P1 f a)). Qed.
Lemma lem8272042 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8272043 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2299 A B P P' P2 P1 f a) = (term2118 A B P P1 f a).
Proof. exact (MK_COMB (@lem8272042) (@lem8272041 A B P P2 P1 P' f a h1)). Qed.
Lemma lem8272044 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8272045 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1433 A B P P' P2 P1 f a) = (P1 g a)) = ((P1 f a) = (P1 g a)).
Proof. exact (MK_COMB (@lem8272043 A B P P2 P1 P' f a h1) (@lem8272044 A B P P1 g a)). Qed.
Lemma lem8272048 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272049 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2300 A B P P' P2 f P1 g a) = (term2017 A B P f P1 g a).
Proof. exact (MK_COMB (@lem8272048) (@lem8272045 A B P P2 P1 g P' f a h1)). Qed.
Lemma lem8272051 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272052 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8272053 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1437 A B P P' f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8272052 A) (@lem8272051 A B P P' f a h1)). Qed.
Lemma lem8272054 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8272055 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1470 A B P P' G2 f a) = (term1471 A B P G2 f a).
Proof. exact (MK_COMB (@lem8272053 A B P P' f a h1) (@lem8272054 A B P G2 f a)). Qed.
Lemma lem8272056 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8272057 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (term1472 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8272055 A B P G2 P' f a h1) (@lem8272056 A B P G1 f a)). Qed.
Lemma lem8272059 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272060 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8272059 A t1 t2). Qed.
Lemma lem8272061 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1472 A B P G2 G1 f a) = (G1 f a).
Proof. exact (@lem8272060 A (G2 f a) (G1 f a)). Qed.
Lemma lem8272062 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (G1 f a).
Proof. exact (TRANS (@lem8272057 A B P G2 G1 P' f a h1) (@lem8272061 A B P G2 G1 f a)). Qed.
Lemma lem8272063 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8272064 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2278 A B P P' G2 G1 f a) = (term2327 A B P G1 f a).
Proof. exact (MK_COMB (@lem8272063 A) (@lem8272062 A B P G2 G1 P' f a h1)). Qed.
Lemma lem8272065 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8272066 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1438 A B P P' G2 G1 f a) = (G1 g a)) = ((G1 f a) = (G1 g a)).
Proof. exact (MK_COMB (@lem8272064 A B P G2 G1 P' f a h1) (@lem8272065 A B P G1 g a)). Qed.
Lemma lem8272069 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272070 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2301 A B P P' G2 f G1 g a) = (term2328 A B P f G1 g a).
Proof. exact (MK_COMB (@lem8272069) (@lem8272066 A B P G2 G1 g P' f a h1)). Qed.
Lemma lem8272072 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272073 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8272074 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2043 A B P P' f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8272073 B) (@lem8272072 A B P P' f a h1)). Qed.
Lemma lem8272075 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8272076 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2128 A B P P' H2 f a) = (term2129 A B P H2 f a).
Proof. exact (MK_COMB (@lem8272074 A B P P' f a h1) (@lem8272075 A B P H2 f a)). Qed.
Lemma lem8272077 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (H1 f a) = (H1 f a).
Proof. exact (eq_refl (H1 f a)). Qed.
Lemma lem8272078 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' H2 H1 f a) = (term2130 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8272076 A B P H2 P' f a h1) (@lem8272077 A B P H1 f a)). Qed.
Lemma lem8272080 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272081 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8272080 B t1 t2). Qed.
Lemma lem8272082 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2130 A B P H2 H1 f a) = (H1 f a).
Proof. exact (@lem8272081 B (H2 f a) (H1 f a)). Qed.
Lemma lem8272083 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' H2 H1 f a) = (H1 f a).
Proof. exact (TRANS (@lem8272078 A B P H2 H1 P' f a h1) (@lem8272082 A B P H2 H1 f a)). Qed.
Lemma lem8272084 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8272085 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1069 A B P P' H2 H1 f a) = (term2329 A B P H1 f a).
Proof. exact (MK_COMB (@lem8272084 B) (@lem8272083 A B P H2 H1 P' f a h1)). Qed.
Lemma lem8272086 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8272087 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1064 A B P P' H2 H1 f a) = (H1 g a)) = ((H1 f a) = (H1 g a)).
Proof. exact (MK_COMB (@lem8272085 A B P H2 H1 P' f a h1) (@lem8272086 A B P H1 g a)). Qed.
Lemma lem8272090 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2302 A B P G2 G1 P' H2 f H1 g a) = (term2330 A B P G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272070 A B P G2 G1 g P' f a h1) (@lem8272087 A B P H2 H1 g P' f a h1)). Qed.
Lemma lem8272093 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2303 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2024 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272049 A B P P2 P1 g P' f a h1) (@lem8272090 A B P G2 H2 G1 H1 g P' f a h1)). Qed.
Lemma lem8272096 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2304 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2331 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272028 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8272093 A B P P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272099 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8272100 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2305 A B P lt2 s P2 P1 G2 G1 P' H2 f H1 g a) = (term2332 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272099 A B P lt2 s a f g) (@lem8272096 A B P P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272103 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2306 A B P s P2 P1 G2 G1 P' H2 f H1 g a) = (term2333 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8272100 A B P lt2 s P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272104 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8272105 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2307 A B P s P2 P1 G2 G1 P' H2 f H1 g a) = (term2334 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272104 A) (@lem8272103 A B P s P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272110 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2308 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2335 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8272105 A B P s P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272111 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8272112 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2309 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2336 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272111 A P) (@lem8272110 A B P P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272117 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2310 A B P P1 G2 G1 P' H2 f H1 g a) = (term2337 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8272112 A B P P2 G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272118 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272119 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2311 A B P P1 G2 G1 P' H2 f H1 g a) = (term2338 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272118 A B P) (@lem8272117 A B P G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272124 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2312 A B P G2 G1 P' H2 f H1 g a) = (term2339 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8272119 A B P G2 H2 P1 G1 H1 g P' f a h1)). Qed.
Lemma lem8272125 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272126 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2313 A B P G2 G1 P' H2 f H1 g a) = (term2340 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272125 A B P) (@lem8272124 A B P G2 H2 G1 H1 g P' f a h1)). Qed.
Lemma lem8272131 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2314 A B P G1 P' H2 f H1 g a) = (term2341 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8272126 A B P G2 H2 G1 H1 g P' f a h1)). Qed.
Lemma lem8272132 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272133 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2315 A B P G1 P' H2 f H1 g a) = (term2342 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272132 A B P) (@lem8272131 A B P H2 G1 H1 g P' f a h1)). Qed.
Lemma lem8272138 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2316 A B P P' H2 f H1 g a) = (term2343 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8272133 A B P H2 G1 H1 g P' f a h1)). Qed.
Lemma lem8272139 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272140 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2317 A B P P' H2 f H1 g a) = (term2344 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272139 A B P) (@lem8272138 A B P H2 H1 g P' f a h1)). Qed.
Lemma lem8272145 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8272146 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2326 A B P p P' H2 f H1 g a) = (term2345 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272145 A B P p f a) (@lem8272140 A B P H2 H1 g P' f a h1)). Qed.
Lemma lem8272149 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2346 A B P P' p H2 f H1 g a.
Proof. exact (fun h0 : (P' f a) = False => @lem8272146 A B P p H2 H1 g P' f a h0). Qed.
Lemma lem8272159 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8272160 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8272161 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term373 A B P P' f a) = (~ True).
Proof. exact (MK_COMB (@lem8272160) (@lem8272159 A B P P' f a h1)). Qed.
Lemma lem8272163 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem8272164 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term373 A B P P' f a) = False.
Proof. exact (TRANS (@lem8272161 A B P P' f a h1) (@lem8272163)). Qed.
Lemma lem8272165 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272166 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1559 A B P P' f a) = (and False).
Proof. exact (MK_COMB (@lem8272165) (@lem8272164 A B P P' f a h1)). Qed.
Lemma lem8272189 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272190 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2193 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2275 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272166 A B P P' f a h1) (@lem8272189 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272192 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8272193 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2275 A B P P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (@lem8272192 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272194 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2193 A B P P' P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (TRANS (@lem8272190 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8272193 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272195 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272196 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2194 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (imp False).
Proof. exact (MK_COMB (@lem8272195) (@lem8272194 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8272198 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8272199 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8272200 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1432 A B P P' f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8272199) (@lem8272198 A B P P' f a h1)). Qed.
Lemma lem8272201 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8272202 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1467 A B P P' P2 f a) = (term1481 A B P P2 f a).
Proof. exact (MK_COMB (@lem8272200 A B P P' f a h1) (@lem8272201 A B P P2 f a)). Qed.
Lemma lem8272203 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8272204 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (term1482 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8272202 A B P P2 P' f a h1) (@lem8272203 A B P P1 f a)). Qed.
Lemma lem8272206 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8272207 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8272206 Prop t2 t1). Qed.
Lemma lem8272208 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) : (term1482 A B P P2 P1 f a) = (P2 f a).
Proof. exact (@lem8272207 (P1 f a) (P2 f a)). Qed.
Lemma lem8272209 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (P2 f a).
Proof. exact (TRANS (@lem8272204 A B P P2 P1 P' f a h1) (@lem8272208 A B P P1 P2 f a)). Qed.
Lemma lem8272210 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8272211 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2299 A B P P' P2 P1 f a) = (term2118 A B P P2 f a).
Proof. exact (MK_COMB (@lem8272210) (@lem8272209 A B P P1 P2 P' f a h1)). Qed.
Lemma lem8272212 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (P1 g a) = (P1 g a).
Proof. exact (eq_refl (P1 g a)). Qed.
Lemma lem8272213 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1433 A B P P' P2 P1 f a) = (P1 g a)) = ((P2 f a) = (P1 g a)).
Proof. exact (MK_COMB (@lem8272211 A B P P1 P2 P' f a h1) (@lem8272212 A B P P1 g a)). Qed.
Lemma lem8272216 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272217 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2300 A B P P' P2 f P1 g a) = (term2347 A B P P2 f P1 g a).
Proof. exact (MK_COMB (@lem8272216) (@lem8272213 A B P P2 P1 g P' f a h1)). Qed.
Lemma lem8272219 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8272220 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8272221 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1437 A B P P' f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8272220 A) (@lem8272219 A B P P' f a h1)). Qed.
Lemma lem8272222 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8272223 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1470 A B P P' G2 f a) = (term1483 A B P G2 f a).
Proof. exact (MK_COMB (@lem8272221 A B P P' f a h1) (@lem8272222 A B P G2 f a)). Qed.
Lemma lem8272224 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8272225 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (term1484 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8272223 A B P G2 P' f a h1) (@lem8272224 A B P G1 f a)). Qed.
Lemma lem8272227 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8272228 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8272227 A t2 t1). Qed.
Lemma lem8272229 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1484 A B P G2 G1 f a) = (G2 f a).
Proof. exact (@lem8272228 A (G1 f a) (G2 f a)). Qed.
Lemma lem8272230 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (G2 f a).
Proof. exact (TRANS (@lem8272225 A B P G2 G1 P' f a h1) (@lem8272229 A B P G1 G2 f a)). Qed.
Lemma lem8272231 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8272232 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2278 A B P P' G2 G1 f a) = (term2327 A B P G2 f a).
Proof. exact (MK_COMB (@lem8272231 A) (@lem8272230 A B P G1 G2 P' f a h1)). Qed.
Lemma lem8272233 {A B P : Type'} (G1 : type557 A B P) (g : A -> B) (a : P) : (G1 g a) = (G1 g a).
Proof. exact (eq_refl (G1 g a)). Qed.
Lemma lem8272234 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1438 A B P P' G2 G1 f a) = (G1 g a)) = ((G2 f a) = (G1 g a)).
Proof. exact (MK_COMB (@lem8272232 A B P G1 G2 P' f a h1) (@lem8272233 A B P G1 g a)). Qed.
Lemma lem8272237 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272238 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2301 A B P P' G2 f G1 g a) = (term2348 A B P G2 f G1 g a).
Proof. exact (MK_COMB (@lem8272237) (@lem8272234 A B P G2 G1 g P' f a h1)). Qed.
Lemma lem8272240 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8272241 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8272242 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2043 A B P P' f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8272241 B) (@lem8272240 A B P P' f a h1)). Qed.
Lemma lem8272243 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8272244 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2128 A B P P' H2 f a) = (term2162 A B P H2 f a).
Proof. exact (MK_COMB (@lem8272242 A B P P' f a h1) (@lem8272243 A B P H2 f a)). Qed.
Lemma lem8272245 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (H1 f a) = (H1 f a).
Proof. exact (eq_refl (H1 f a)). Qed.
Lemma lem8272246 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' H2 H1 f a) = (term2163 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8272244 A B P H2 P' f a h1) (@lem8272245 A B P H1 f a)). Qed.
Lemma lem8272248 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8272249 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8272248 B t2 t1). Qed.
Lemma lem8272250 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term2163 A B P H2 H1 f a) = (H2 f a).
Proof. exact (@lem8272249 B (H1 f a) (H2 f a)). Qed.
Lemma lem8272251 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' H2 H1 f a) = (H2 f a).
Proof. exact (TRANS (@lem8272246 A B P H2 H1 P' f a h1) (@lem8272250 A B P H1 H2 f a)). Qed.
Lemma lem8272252 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8272253 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1069 A B P P' H2 H1 f a) = (term2329 A B P H2 f a).
Proof. exact (MK_COMB (@lem8272252 B) (@lem8272251 A B P H1 H2 P' f a h1)). Qed.
Lemma lem8272254 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (H1 g a) = (H1 g a).
Proof. exact (eq_refl (H1 g a)). Qed.
Lemma lem8272255 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1064 A B P P' H2 H1 f a) = (H1 g a)) = ((H2 f a) = (H1 g a)).
Proof. exact (MK_COMB (@lem8272253 A B P H1 H2 P' f a h1) (@lem8272254 A B P H1 g a)). Qed.
Lemma lem8272258 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2302 A B P G2 G1 P' H2 f H1 g a) = (term2349 A B P G2 G1 H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272238 A B P G2 G1 g P' f a h1) (@lem8272255 A B P H2 H1 g P' f a h1)). Qed.
Lemma lem8272261 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2303 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2350 A B P P2 P1 G2 G1 H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272217 A B P P2 P1 g P' f a h1) (@lem8272258 A B P G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272264 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2304 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2351 A B P P2 P1 G2 G1 H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272196 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8272261 A B P P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272266 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8272267 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2351 A B P P2 P1 G2 G1 H2 f H1 g a) = True.
Proof. exact (@lem8272266 (term2350 A B P P2 P1 G2 G1 H2 f H1 g a)). Qed.
Lemma lem8272268 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2304 A B P P2 P1 G2 G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272264 A B P P2 P1 G2 G1 H2 H1 g P' f a h1) (@lem8272267 A B P P2 P1 G2 G1 H2 f H1 g a)). Qed.
Lemma lem8272269 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8272270 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2305 A B P lt2 s P2 P1 G2 G1 P' H2 f H1 g a) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8272269 A B P lt2 s a f g) (@lem8272268 A B P P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272272 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8272273 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8272272 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8272274 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2305 A B P lt2 s P2 P1 G2 G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272270 A B P P2 P1 G2 G1 H2 H1 lt2 s g P' f a h1) (@lem8272273 A B P lt2 s a f g)). Qed.
Lemma lem8272275 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2306 A B P s P2 P1 G2 G1 P' H2 f H1 g a) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8272274 A B P lt2 s P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272276 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8272277 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2307 A B P s P2 P1 G2 G1 P' H2 f H1 g a) = (term2263 A).
Proof. exact (MK_COMB (@lem8272276 A) (@lem8272275 A B P s P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272279 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8272280 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8272279 (type1402 A) t). Qed.
Lemma lem8272281 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8272280 A True). Qed.
Lemma lem8272282 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2307 A B P s P2 P1 G2 G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272277 A B P s P2 P1 G2 G1 H2 H1 g P' f a h1) (@lem8272281 A)). Qed.
Lemma lem8272283 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2308 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8272282 A B P s P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272284 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8272285 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2309 A B P P2 P1 G2 G1 P' H2 f H1 g a) = (term2266 A P).
Proof. exact (MK_COMB (@lem8272284 A P) (@lem8272283 A B P P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272287 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8272288 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8272287 (P -> A) t). Qed.
Lemma lem8272289 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8272288 A P True). Qed.
Lemma lem8272290 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2309 A B P P2 P1 G2 G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272285 A B P P2 P1 G2 G1 H2 H1 g P' f a h1) (@lem8272289 A P)). Qed.
Lemma lem8272291 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2310 A B P P1 G2 G1 P' H2 f H1 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8272290 A B P P2 P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272292 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272293 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2311 A B P P1 G2 G1 P' H2 f H1 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8272292 A B P) (@lem8272291 A B P P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272295 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8272296 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8272295 (type560 A B P) t). Qed.
Lemma lem8272297 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8272296 A B P True). Qed.
Lemma lem8272298 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2311 A B P P1 G2 G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272293 A B P P1 G2 G1 H2 H1 g P' f a h1) (@lem8272297 A B P)). Qed.
Lemma lem8272299 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2312 A B P G2 G1 P' H2 f H1 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8272298 A B P P1 G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272300 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272301 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2313 A B P G2 G1 P' H2 f H1 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8272300 A B P) (@lem8272299 A B P G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272303 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8272304 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8272303 (type560 A B P) t). Qed.
Lemma lem8272305 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8272304 A B P True). Qed.
Lemma lem8272306 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2313 A B P G2 G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272301 A B P G2 G1 H2 H1 g P' f a h1) (@lem8272305 A B P)). Qed.
Lemma lem8272307 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2314 A B P G1 P' H2 f H1 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8272306 A B P G2 G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272308 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272309 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2315 A B P G1 P' H2 f H1 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8272308 A B P) (@lem8272307 A B P G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272311 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8272312 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8272311 (type557 A B P) t). Qed.
Lemma lem8272313 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8272312 A B P True). Qed.
Lemma lem8272314 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2315 A B P G1 P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272309 A B P G1 H2 H1 g P' f a h1) (@lem8272313 A B P)). Qed.
Lemma lem8272315 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2316 A B P P' H2 f H1 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8272314 A B P G1 H2 H1 g P' f a h1)). Qed.
Lemma lem8272316 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272317 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2317 A B P P' H2 f H1 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8272316 A B P) (@lem8272315 A B P H2 H1 g P' f a h1)). Qed.
Lemma lem8272319 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8272320 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8272319 (type557 A B P) t). Qed.
Lemma lem8272321 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8272320 A B P True). Qed.
Lemma lem8272322 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2317 A B P P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272317 A B P H2 H1 g P' f a h1) (@lem8272321 A B P)). Qed.
Lemma lem8272323 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8272324 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2326 A B P p P' H2 f H1 g a) = (term2287 A B P p f a).
Proof. exact (MK_COMB (@lem8272323 A B P p f a) (@lem8272322 A B P H2 H1 g P' f a h1)). Qed.
Lemma lem8272326 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8272327 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2287 A B P p f a) = True.
Proof. exact (@lem8272326 (term373 A B P p f a)). Qed.
Lemma lem8272328 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2326 A B P p P' H2 f H1 g a) = True.
Proof. exact (TRANS (@lem8272324 A B P H2 H1 g p P' f a h1) (@lem8272327 A B P p f a)). Qed.
Lemma lem8272329 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2352 A B P p P' H2 f H1 g a.
Proof. exact (fun h0 : (P' f a) = True => @lem8272328 A B P p H2 H1 g P' f a h0). Qed.
Lemma lem8272330 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2353 A B P p P' H2 f H1 g a.
Proof. exact (conj (@lem8272149 A B P P' p H2 f H1 g a) (@lem8272329 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8272332 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8272333 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : term2354 A B P P' p H2 f H1 g a.
Proof. exact (@lem8272332 (term2326 A B P p P' H2 f H1 g a) True (P' f a) (term2345 A B P p H2 f H1 g a)). Qed.
Lemma lem8272334 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2326 A B P p P' H2 f H1 g a) = (term2355 A B P P' p H2 f H1 g a).
Proof. exact (@lem8272333 A B P P' p H2 f H1 g a (@lem8272330 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8272337 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2356 A B P P' p H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term2356 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272339 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8272340 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2287 A B P P' f a) = True.
Proof. exact (@lem8272339 (term373 A B P P' f a)). Qed.
Lemma lem8272341 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272342 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2288 A B P P' f a) = (and True).
Proof. exact (MK_COMB (@lem8272341) (@lem8272340 A B P P' f a)). Qed.
Lemma lem8272343 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2355 A B P P' p H2 f H1 g a) = (term2357 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272342 A B P P' f a) (@lem8272337 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272345 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8272346 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2357 A B P P' p H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (@lem8272345 (term2356 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272347 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2355 A B P P' p H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8272343 A B P P' p H2 f H1 g a) (@lem8272346 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272348 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2326 A B P p P' H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8272334 A B P P' p H2 f H1 g a) (@lem8272347 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272393 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2331 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2331 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2331 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272398 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8272399 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8272398 A B P lt2 s a f g z)). Qed.
Lemma lem8272400 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8272401 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8272400 A) (@lem8272399 A B P lt2 s a f g)). Qed.
Lemma lem8272402 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272403 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8272402) (@lem8272401 A B P lt2 s a f g)). Qed.
Lemma lem8272404 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2332 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term2332 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272403 A B P lt2 s a f g) (@lem8272393 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272405 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2333 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2333 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8272404 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272406 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8272407 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2334 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2334 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272406 A) (@lem8272405 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272408 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2335 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2335 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8272407 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272409 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8272410 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2336 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2336 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272409 A P) (@lem8272408 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272411 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2337 A B P G2 H2 P1 G1 f H1 g a) = (term2337 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8272410 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272412 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272413 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2338 A B P G2 H2 P1 G1 f H1 g a) = (term2338 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272412 A B P) (@lem8272411 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272414 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2339 A B P G2 H2 G1 f H1 g a) = (term2339 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8272413 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8272415 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272416 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2340 A B P G2 H2 G1 f H1 g a) = (term2340 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272415 A B P) (@lem8272414 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8272417 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2341 A B P H2 G1 f H1 g a) = (term2341 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8272416 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8272418 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272419 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2342 A B P H2 G1 f H1 g a) = (term2342 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8272418 A B P) (@lem8272417 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8272420 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2343 A B P H2 f H1 g a) = (term2343 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8272419 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8272421 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272422 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2344 A B P H2 f H1 g a) = (term2344 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272421 A B P) (@lem8272420 A B P H2 f H1 g a)). Qed.
Lemma lem8272427 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8272428 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2345 A B P p H2 f H1 g a) = (term2345 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272427 A B P p f a) (@lem8272422 A B P H2 f H1 g a)). Qed.
Lemma lem8272431 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term628 A B P P' f a) = (term628 A B P P' f a).
Proof. exact (eq_refl (term628 A B P P' f a)). Qed.
Lemma lem8272432 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2356 A B P P' p H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8272431 A B P P' f a) (@lem8272428 A B P p H2 f H1 g a)). Qed.
Lemma lem8272433 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2358 A B P p P' H2 f H1 g a) = (term2358 A B P p P' H2 f H1 g a).
Proof. exact (eq_refl (term2358 A B P p P' H2 f H1 g a)). Qed.
Lemma lem8272434 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2326 A B P p P' H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a)) = ((term2326 A B P p P' H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8272433 A B P p P' H2 f H1 g a) (@lem8272432 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272435 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2326 A B P p P' H2 f H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8272434 A B P P' p H2 f H1 g a) (@lem8272348 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272436 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (f : A -> B) (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2359 A B P p P' H2 f w H1 g a) = (term2359 A B P p P' H2 f w H1 g a).
Proof. exact (eq_refl (term2359 A B P p P' H2 f w H1 g a)). Qed.
Lemma lem8272437 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2249 A B P p P' H2 f w H1 g a) = (term2326 A B P p P' H2 f H1 g a)) = ((term2249 A B P p P' H2 f w H1 g a) = (term2356 A B P P' p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8272436 A B P p P' H2 f w H1 g a) (@lem8272435 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8272438 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2249 A B P p P' H2 f w H1 g a) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8272437 A B P w P' p H2 f H1 g a) (@lem8271977 A B P w p P' H2 f H1 g a)). Qed.
Lemma lem8272439 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2250 A B P p P' H2 w H1 g a) = (term2360 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8272438 A B P w P' p H2 f H1 g a)). Qed.
Lemma lem8272440 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8272441 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2251 A B P p P' H2 w H1 g a) = (term2361 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8272440 A B) (@lem8272439 A B P w P' p H2 H1 g a)). Qed.
Lemma lem8272446 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8272447 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2362 A B P p P' H2 w H1 g a) = (term2363 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8272446 A B P p g a) (@lem8272441 A B P w P' p H2 H1 g a)). Qed.
Lemma lem8272448 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272449 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2364 A B P p P' H2 w H1 g a) = (term2365 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8272448) (@lem8272447 A B P w P' p H2 H1 g a)). Qed.
Lemma lem8272450 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) : (term2255 A B P g p P' H2 H1 a w) = (term2366 A B P P' H2 H1 p g a).
Proof. exact (MK_COMB (@lem8272449 A B P w P' p H2 H1 g a) (@lem8271574 A B P P' H2 H1 w p g a)). Qed.
Lemma lem8272451 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (p : type560 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2367 A B P P' H2 p H1 g a w) = (term2367 A B P P' H2 p H1 g a w).
Proof. exact (eq_refl (term2367 A B P P' H2 p H1 g a w)). Qed.
Lemma lem8272452 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) : ((term2151 A B P P' H2 p H1 g a w) = (term2255 A B P g p P' H2 H1 a w)) = ((term2151 A B P P' H2 p H1 g a w) = (term2366 A B P P' H2 H1 p g a)).
Proof. exact (MK_COMB (@lem8272451 A B P P' H2 p H1 g a w) (@lem8272450 A B P w P' H2 H1 p g a)). Qed.
Lemma lem8272453 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) : (term2151 A B P P' H2 p H1 g a w) = (term2366 A B P P' H2 H1 p g a).
Proof. exact (EQ_MP (@lem8272452 A B P w P' H2 H1 p g a) (@lem8271171 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8272454 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2152 A B P P' H2 H1 g a w) = (term2368 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8272453 A B P w P' H2 H1 p g a)). Qed.
Lemma lem8272455 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272456 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2153 A B P P' H2 H1 g a w) = (term2369 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8272455 A B P) (@lem8272454 A B P w P' H2 H1 g a)). Qed.
Lemma lem8272459 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term628 A B P P' g a) = (term628 A B P P' g a).
Proof. exact (eq_refl (term628 A B P P' g a)). Qed.
Lemma lem8272460 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2370 A B P P' H2 H1 g a w) = (term2371 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8272459 A B P P' g a) (@lem8272456 A B P w P' H2 H1 g a)). Qed.
Lemma lem8272472 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8272473 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2118 A B P p f a) = (term2118 A B P p f a).
Proof. exact (eq_refl (term2118 A B P p f a)). Qed.
Lemma lem8272474 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((p f a) = (p g a)) = ((p f a) = False).
Proof. exact (MK_COMB (@lem8272473 A B P p f a) (@lem8272472 A B P p g a h1)). Qed.
Lemma lem8272476 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem8272477 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : ((p f a) = False) = (term373 A B P p f a).
Proof. exact (@lem8272476 (p f a)). Qed.
Lemma lem8272478 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((p f a) = (p g a)) = (term373 A B P p f a).
Proof. exact (TRANS (@lem8272474 A B P f p g a h1) (@lem8272477 A B P p f a)). Qed.
Lemma lem8272479 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272480 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2017 A B P f p g a) = (term1559 A B P p f a).
Proof. exact (MK_COMB (@lem8272479) (@lem8272478 A B P f p g a h1)). Qed.
Lemma lem8272482 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8272483 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8272484 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2019 A B P f p g a) = (term2190 A B P p f a).
Proof. exact (MK_COMB (@lem8272483 A B P p f a) (@lem8272482 A B P p g a h1)). Qed.
Lemma lem8272486 (t : Prop) : (t /\ False) = False.
Proof. exact (proj1 (@lem1845 t)). Qed.
Lemma lem8272487 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2190 A B P p f a) = False.
Proof. exact (@lem8272486 (p f a)). Qed.
Lemma lem8272488 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2019 A B P f p g a) = False.
Proof. exact (TRANS (@lem8272484 A B P f p g a h1) (@lem8272487 A B P p f a)). Qed.
Lemma lem8272489 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272490 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2020 A B P f p g a) = (imp False).
Proof. exact (MK_COMB (@lem8272489) (@lem8272488 A B P f p g a h1)). Qed.
Lemma lem8272491 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (P' f a).
Proof. exact (eq_refl (P' f a)). Qed.
Lemma lem8272492 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2155 A B P p g P' f a) = (term2372 A B P P' f a).
Proof. exact (MK_COMB (@lem8272490 A B P f p g a h1) (@lem8272491 A B P P' f a)). Qed.
Lemma lem8272494 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8272495 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2372 A B P P' f a) = True.
Proof. exact (@lem8272494 (P' f a)). Qed.
Lemma lem8272496 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2155 A B P p g P' f a) = True.
Proof. exact (TRANS (@lem8272492 A B P P' f p g a h1) (@lem8272495 A B P P' f a)). Qed.
Lemma lem8272497 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2156 A B P p g P' f a) = (term2192 A B P p f a).
Proof. exact (MK_COMB (@lem8272480 A B P f p g a h1) (@lem8272496 A B P P' f p g a h1)). Qed.
Lemma lem8272499 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8272500 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2192 A B P p f a) = (term373 A B P p f a).
Proof. exact (@lem8272499 (term373 A B P p f a)). Qed.
Lemma lem8272501 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2156 A B P p g P' f a) = (term373 A B P p f a).
Proof. exact (TRANS (@lem8272497 A B P P' f p g a h1) (@lem8272500 A B P p f a)). Qed.
Lemma lem8272502 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272503 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2157 A B P p g P' f a) = (term1559 A B P p f a).
Proof. exact (MK_COMB (@lem8272502) (@lem8272501 A B P P' f p g a h1)). Qed.
Lemma lem8272526 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272527 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2158 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272503 A B P P' f p g a h1) (@lem8272526 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272530 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272531 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2159 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2194 A B P p P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272530) (@lem8272527 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1)). Qed.
Lemma lem8272533 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8272534 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8272535 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1432 A B P p g a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8272534) (@lem8272533 A B P p g a h1)). Qed.
Lemma lem8272536 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8272537 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1467 A B P p P2 g a) = (term1468 A B P P2 g a).
Proof. exact (MK_COMB (@lem8272535 A B P p g a h1) (@lem8272536 A B P P2 g a)). Qed.
Lemma lem8272538 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8272539 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2124 A B P p P2 g a) = (term2195 A B P P2 g a).
Proof. exact (MK_COMB (@lem8272537 A B P P2 p g a h1) (@lem8272538)). Qed.
Lemma lem8272541 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272542 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8272541 Prop t1 t2). Qed.
Lemma lem8272543 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term2195 A B P P2 g a) = False.
Proof. exact (@lem8272542 (P2 g a) False). Qed.
Lemma lem8272544 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2124 A B P p P2 g a) = False.
Proof. exact (TRANS (@lem8272539 A B P P2 p g a h1) (@lem8272543 A B P P2 g a)). Qed.
Lemma lem8272545 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1311 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1311 A B P p P' P2 P1 f a)). Qed.
Lemma lem8272546 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P2 g a)) = ((term1267 A B P p P' P2 P1 f a) = False).
Proof. exact (MK_COMB (@lem8272545 A B P p P' P2 P1 f a) (@lem8272544 A B P P2 p g a h1)). Qed.
Lemma lem8272548 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem8272549 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : ((term1267 A B P p P' P2 P1 f a) = False) = (term2196 A B P p P' P2 P1 f a).
Proof. exact (@lem8272548 (term1267 A B P p P' P2 P1 f a)). Qed.
Lemma lem8272550 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P2 g a)) = (term2196 A B P p P' P2 P1 f a).
Proof. exact (TRANS (@lem8272546 A B P P' P2 P1 f p g a h1) (@lem8272549 A B P p P' P2 P1 f a)). Qed.
Lemma lem8272551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272552 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2160 A B P P' P1 f p P2 g a) = (term2197 A B P p P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8272551) (@lem8272550 A B P P' P2 P1 f p g a h1)). Qed.
Lemma lem8272554 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8272555 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8272556 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1437 A B P p g a) = (@COND A False).
Proof. exact (MK_COMB (@lem8272555 A) (@lem8272554 A B P p g a h1)). Qed.
Lemma lem8272557 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8272558 {A B P : Type'} (G2 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term1470 A B P p G2 g a) = (term1471 A B P G2 g a).
Proof. exact (MK_COMB (@lem8272556 A B P p g a h1) (@lem8272557 A B P G2 g a)). Qed.
Lemma lem8272559 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8272560 {A B P : Type'} (G2 : type557 A B P) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2126 A B P p G2 g a z) = (term2198 A B P G2 g a z).
Proof. exact (MK_COMB (@lem8272558 A B P G2 p g a h1) (@lem8272559 A z)). Qed.
Lemma lem8272562 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272563 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8272562 A t1 t2). Qed.
Lemma lem8272564 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) (z : A) : (term2198 A B P G2 g a z) = z.
Proof. exact (@lem8272563 A (G2 g a) z). Qed.
Lemma lem8272565 {A B P : Type'} (G2 : type557 A B P) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2126 A B P p G2 g a z) = z.
Proof. exact (TRANS (@lem8272560 A B P G2 z p g a h1) (@lem8272564 A B P G2 g a z)). Qed.
Lemma lem8272566 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1315 A B P p P' G2 G1 f a z) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1315 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8272567 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1284 A B P p P' G2 G1 f a z) = (term2126 A B P p G2 g a z)) = ((term1284 A B P p P' G2 G1 f a z) = z).
Proof. exact (MK_COMB (@lem8272566 A B P p P' G2 G1 f a z) (@lem8272565 A B P G2 z p g a h1)). Qed.
Lemma lem8272570 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272571 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2161 A B P P' G1 f p G2 g a z) = (term2199 A B P p P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8272570) (@lem8272567 A B P P' G2 G1 f z p g a h1)). Qed.
Lemma lem8272573 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (p g a) = False.
Proof. exact (h1). Qed.
Lemma lem8272574 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8272575 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2043 A B P p g a) = (@COND B False).
Proof. exact (MK_COMB (@lem8272574 B) (@lem8272573 A B P p g a h1)). Qed.
Lemma lem8272576 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8272577 {A B P : Type'} (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2128 A B P p H2 g a) = (term2129 A B P H2 g a).
Proof. exact (MK_COMB (@lem8272575 A B P p g a h1) (@lem8272576 A B P H2 g a)). Qed.
Lemma lem8272578 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8272579 {A B P : Type'} (H2 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2131 A B P p H2 g a w) = (term2200 A B P H2 g a w).
Proof. exact (MK_COMB (@lem8272577 A B P H2 p g a h1) (@lem8272578 B w)). Qed.
Lemma lem8272581 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272582 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8272581 B t1 t2). Qed.
Lemma lem8272583 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2200 A B P H2 g a w) = w.
Proof. exact (@lem8272582 B (H2 g a) w). Qed.
Lemma lem8272584 {A B P : Type'} (H2 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2131 A B P p H2 g a w) = w.
Proof. exact (TRANS (@lem8272579 A B P H2 w p g a h1) (@lem8272583 A B P H2 g a w)). Qed.
Lemma lem8272585 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1333 A B P p P' H2 H1 f a w) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1333 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8272586 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : ((term1328 A B P p P' H2 H1 f a w) = (term2131 A B P p H2 g a w)) = ((term1328 A B P p P' H2 H1 f a w) = w).
Proof. exact (MK_COMB (@lem8272585 A B P p P' H2 H1 f a w) (@lem8272584 A B P H2 w p g a h1)). Qed.
Lemma lem8272589 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2164 A B P G1 G2 z P' H1 f p H2 g a w) = (term2201 A B P G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272571 A B P P' G2 G1 f z p g a h1) (@lem8272586 A B P P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272592 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2165 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272552 A B P P' P2 P1 f p g a h1) (@lem8272589 A B P G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272595 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2166 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272531 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1) (@lem8272592 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272598 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8272599 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2167 A B P lt2 s P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272598 A B P lt2 s a f g) (@lem8272595 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272602 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2168 A B P s P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2205 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8272599 A B P lt2 s P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272603 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8272604 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2169 A B P s P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272603 A) (@lem8272602 A B P s P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272609 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2170 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2207 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun s : P -> A => @lem8272604 A B P s P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272610 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8272611 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2171 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272610 A P) (@lem8272609 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272616 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2172 A B P P1 G1 G2 z P' H1 f p H2 g a w) = (term2209 A B P g P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8272611 A B P P2 P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272617 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272618 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2173 A B P P1 G1 G2 z P' H1 f p H2 g a w) = (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272617 A B P) (@lem8272616 A B P P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272623 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2174 A B P G1 G2 z P' H1 f p H2 g a w) = (term2211 A B P g G2 G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8272618 A B P P1 G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272624 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272625 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2175 A B P G1 G2 z P' H1 f p H2 g a w) = (term2212 A B P g G2 G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272624 A B P) (@lem8272623 A B P G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272630 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2176 A B P G1 z P' H1 f p H2 g a w) = (term2213 A B P g G1 z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8272625 A B P G2 G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272631 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272632 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2177 A B P G1 z P' H1 f p H2 g a w) = (term2214 A B P g G1 z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272631 A B P) (@lem8272630 A B P G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272637 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2178 A B P z P' H1 f p H2 g a w) = (term2215 A B P g z p P' H2 H1 f a w).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8272632 A B P G1 z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272638 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272639 {A B P : Type'} (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2179 A B P z P' H1 f p H2 g a w) = (term2216 A B P g z p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272638 A B P) (@lem8272637 A B P z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272644 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2180 A B P P' H1 f p H2 g a w) = (term2217 A B P g p P' H2 H1 f a w).
Proof. exact (fun_ext (fun z : A => @lem8272639 A B P z P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272645 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8272646 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2181 A B P P' H1 f p H2 g a w) = (term2218 A B P g p P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272645 A) (@lem8272644 A B P P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272651 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2182 A B P P' H1 p H2 g a w) = (term2219 A B P g p P' H2 H1 a w).
Proof. exact (fun_ext (fun f : A -> B => @lem8272646 A B P P' H2 H1 f w p g a h1)). Qed.
Lemma lem8272652 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8272653 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = False) : (term2183 A B P P' H1 p H2 g a w) = (term2220 A B P g p P' H2 H1 a w).
Proof. exact (MK_COMB (@lem8272652 A B) (@lem8272651 A B P P' H2 H1 w p g a h1)). Qed.
Lemma lem8272658 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : term2373 A B P g p P' H2 H1 a w.
Proof. exact (fun h0 : (p g a) = False => @lem8272653 A B P P' H2 H1 w p g a h0). Qed.
Lemma lem8272668 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8272669 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2118 A B P p f a) = (term2118 A B P p f a).
Proof. exact (eq_refl (term2118 A B P p f a)). Qed.
Lemma lem8272670 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((p f a) = (p g a)) = ((p f a) = True).
Proof. exact (MK_COMB (@lem8272669 A B P p f a) (@lem8272668 A B P p g a h1)). Qed.
Lemma lem8272672 (t : Prop) : (t = True) = t.
Proof. exact (proj1 (@lem1856 t)). Qed.
Lemma lem8272673 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : ((p f a) = True) = (p f a).
Proof. exact (@lem8272672 (p f a)). Qed.
Lemma lem8272674 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((p f a) = (p g a)) = (p f a).
Proof. exact (TRANS (@lem8272670 A B P f p g a h1) (@lem8272673 A B P p f a)). Qed.
Lemma lem8272675 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272676 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2017 A B P f p g a) = (term327 A B P p f a).
Proof. exact (MK_COMB (@lem8272675) (@lem8272674 A B P f p g a h1)). Qed.
Lemma lem8272678 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8272679 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8272680 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2019 A B P f p g a) = (term2018 A B P p f a).
Proof. exact (MK_COMB (@lem8272679 A B P p f a) (@lem8272678 A B P p g a h1)). Qed.
Lemma lem8272682 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8272683 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2018 A B P p f a) = (p f a).
Proof. exact (@lem8272682 (p f a)). Qed.
Lemma lem8272684 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2019 A B P f p g a) = (p f a).
Proof. exact (TRANS (@lem8272680 A B P f p g a h1) (@lem8272683 A B P p f a)). Qed.
Lemma lem8272685 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272686 {A B P : Type'} (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2020 A B P f p g a) = (term1070 A B P p f a).
Proof. exact (MK_COMB (@lem8272685) (@lem8272684 A B P f p g a h1)). Qed.
Lemma lem8272687 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (P' f a).
Proof. exact (eq_refl (P' f a)). Qed.
Lemma lem8272688 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2155 A B P p g P' f a) = (term2374 A B P p P' f a).
Proof. exact (MK_COMB (@lem8272686 A B P f p g a h1) (@lem8272687 A B P P' f a)). Qed.
Lemma lem8272691 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2156 A B P p g P' f a) = (term2375 A B P p P' f a).
Proof. exact (MK_COMB (@lem8272676 A B P f p g a h1) (@lem8272688 A B P P' f p g a h1)). Qed.
Lemma lem8272694 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272695 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2157 A B P p g P' f a) = (term2376 A B P p P' f a).
Proof. exact (MK_COMB (@lem8272694) (@lem8272691 A B P P' f p g a h1)). Qed.
Lemma lem8272718 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272719 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2158 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2377 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272695 A B P P' f p g a h1) (@lem8272718 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272722 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272723 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2159 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2378 A B P p P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272722) (@lem8272719 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1)). Qed.
Lemma lem8272725 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8272726 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8272727 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1432 A B P p g a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8272726) (@lem8272725 A B P p g a h1)). Qed.
Lemma lem8272728 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8272729 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1467 A B P p P2 g a) = (term1481 A B P P2 g a).
Proof. exact (MK_COMB (@lem8272727 A B P p g a h1) (@lem8272728 A B P P2 g a)). Qed.
Lemma lem8272730 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8272731 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2124 A B P p P2 g a) = (term2227 A B P P2 g a).
Proof. exact (MK_COMB (@lem8272729 A B P P2 p g a h1) (@lem8272730)). Qed.
Lemma lem8272733 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8272734 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8272733 Prop t2 t1). Qed.
Lemma lem8272735 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term2227 A B P P2 g a) = (P2 g a).
Proof. exact (@lem8272734 False (P2 g a)). Qed.
Lemma lem8272736 {A B P : Type'} (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2124 A B P p P2 g a) = (P2 g a).
Proof. exact (TRANS (@lem8272731 A B P P2 p g a h1) (@lem8272735 A B P P2 g a)). Qed.
Lemma lem8272737 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1311 A B P p P' P2 P1 f a) = (term1311 A B P p P' P2 P1 f a).
Proof. exact (eq_refl (term1311 A B P p P' P2 P1 f a)). Qed.
Lemma lem8272738 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (f : A -> B) (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((term1267 A B P p P' P2 P1 f a) = (term2124 A B P p P2 g a)) = ((term1267 A B P p P' P2 P1 f a) = (P2 g a)).
Proof. exact (MK_COMB (@lem8272737 A B P p P' P2 P1 f a) (@lem8272736 A B P P2 p g a h1)). Qed.
Lemma lem8272741 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272742 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (f : A -> B) (P2 : type560 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2160 A B P P' P1 f p P2 g a) = (term2379 A B P p P' P1 f P2 g a).
Proof. exact (MK_COMB (@lem8272741) (@lem8272738 A B P P' P1 f P2 p g a h1)). Qed.
Lemma lem8272744 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8272745 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8272746 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1437 A B P p g a) = (@COND A True).
Proof. exact (MK_COMB (@lem8272745 A) (@lem8272744 A B P p g a h1)). Qed.
Lemma lem8272747 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8272748 {A B P : Type'} (G2 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term1470 A B P p G2 g a) = (term1483 A B P G2 g a).
Proof. exact (MK_COMB (@lem8272746 A B P p g a h1) (@lem8272747 A B P G2 g a)). Qed.
Lemma lem8272749 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8272750 {A B P : Type'} (G2 : type557 A B P) (z : A) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2126 A B P p G2 g a z) = (term2229 A B P G2 g a z).
Proof. exact (MK_COMB (@lem8272748 A B P G2 p g a h1) (@lem8272749 A z)). Qed.
Lemma lem8272752 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8272753 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8272752 A t2 t1). Qed.
Lemma lem8272754 {A B P : Type'} (z : A) (G2 : type557 A B P) (g : A -> B) (a : P) : (term2229 A B P G2 g a z) = (G2 g a).
Proof. exact (@lem8272753 A z (G2 g a)). Qed.
Lemma lem8272755 {A B P : Type'} (z : A) (G2 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2126 A B P p G2 g a z) = (G2 g a).
Proof. exact (TRANS (@lem8272750 A B P G2 z p g a h1) (@lem8272754 A B P z G2 g a)). Qed.
Lemma lem8272756 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1315 A B P p P' G2 G1 f a z) = (term1315 A B P p P' G2 G1 f a z).
Proof. exact (eq_refl (term1315 A B P p P' G2 G1 f a z)). Qed.
Lemma lem8272757 {A B P : Type'} (P' : type560 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (G2 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((term1284 A B P p P' G2 G1 f a z) = (term2126 A B P p G2 g a z)) = ((term1284 A B P p P' G2 G1 f a z) = (G2 g a)).
Proof. exact (MK_COMB (@lem8272756 A B P p P' G2 G1 f a z) (@lem8272755 A B P z G2 p g a h1)). Qed.
Lemma lem8272760 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272761 {A B P : Type'} (P' : type560 A B P) (G1 : type557 A B P) (f : A -> B) (z : A) (G2 : type557 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2161 A B P P' G1 f p G2 g a z) = (term2380 A B P p P' G1 f z G2 g a).
Proof. exact (MK_COMB (@lem8272760) (@lem8272757 A B P P' G1 f z G2 p g a h1)). Qed.
Lemma lem8272763 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (p g a) = True.
Proof. exact (h1). Qed.
Lemma lem8272764 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8272765 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2043 A B P p g a) = (@COND B True).
Proof. exact (MK_COMB (@lem8272764 B) (@lem8272763 A B P p g a h1)). Qed.
Lemma lem8272766 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8272767 {A B P : Type'} (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2128 A B P p H2 g a) = (term2162 A B P H2 g a).
Proof. exact (MK_COMB (@lem8272765 A B P p g a h1) (@lem8272766 A B P H2 g a)). Qed.
Lemma lem8272768 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8272769 {A B P : Type'} (H2 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2131 A B P p H2 g a w) = (term2231 A B P H2 g a w).
Proof. exact (MK_COMB (@lem8272767 A B P H2 p g a h1) (@lem8272768 B w)). Qed.
Lemma lem8272771 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8272772 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8272771 B t2 t1). Qed.
Lemma lem8272773 {A B P : Type'} (w : B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2231 A B P H2 g a w) = (H2 g a).
Proof. exact (@lem8272772 B w (H2 g a)). Qed.
Lemma lem8272774 {A B P : Type'} (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2131 A B P p H2 g a w) = (H2 g a).
Proof. exact (TRANS (@lem8272769 A B P H2 w p g a h1) (@lem8272773 A B P w H2 g a)). Qed.
Lemma lem8272775 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term1333 A B P p P' H2 H1 f a w) = (term1333 A B P p P' H2 H1 f a w).
Proof. exact (eq_refl (term1333 A B P p P' H2 H1 f a w)). Qed.
Lemma lem8272776 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : ((term1328 A B P p P' H2 H1 f a w) = (term2131 A B P p H2 g a w)) = ((term1328 A B P p P' H2 H1 f a w) = (H2 g a)).
Proof. exact (MK_COMB (@lem8272775 A B P p P' H2 H1 f a w) (@lem8272774 A B P w H2 p g a h1)). Qed.
Lemma lem8272779 {A B P : Type'} (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2164 A B P G1 G2 z P' H1 f p H2 g a w) = (term2381 A B P G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272761 A B P P' G1 f z G2 p g a h1) (@lem8272776 A B P P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272782 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2165 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2382 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272742 A B P P' P1 f P2 p g a h1) (@lem8272779 A B P G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272785 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2166 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2383 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272723 A B P P' P1 G1 H1 P2 G2 f H2 p g a h1) (@lem8272782 A B P P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272788 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8272789 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2167 A B P lt2 s P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2384 A B P lt2 s P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272788 A B P lt2 s a f g) (@lem8272785 A B P P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272792 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2168 A B P s P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2385 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8272789 A B P lt2 s P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272793 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8272794 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2169 A B P s P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2386 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272793 A) (@lem8272792 A B P s P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272799 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2170 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2387 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8272794 A B P s P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272800 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8272801 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2171 A B P P1 P2 G1 G2 z P' H1 f p H2 g a w) = (term2388 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272800 A P) (@lem8272799 A B P P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272806 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2172 A B P P1 G1 G2 z P' H1 f p H2 g a w) = (term2389 A B P P1 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8272801 A B P P1 P2 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272807 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272808 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2173 A B P P1 G1 G2 z P' H1 f p H2 g a w) = (term2390 A B P P1 G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272807 A B P) (@lem8272806 A B P P1 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272813 {A B P : Type'} (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2174 A B P G1 G2 z P' H1 f p H2 g a w) = (term2391 A B P G1 z G2 p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8272808 A B P P1 G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272814 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8272815 {A B P : Type'} (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2175 A B P G1 G2 z P' H1 f p H2 g a w) = (term2392 A B P G1 z G2 p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272814 A B P) (@lem8272813 A B P G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272820 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2176 A B P G1 z P' H1 f p H2 g a w) = (term2393 A B P G1 z p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8272815 A B P G1 z G2 P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272821 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272822 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2177 A B P G1 z P' H1 f p H2 g a w) = (term2394 A B P G1 z p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272821 A B P) (@lem8272820 A B P G1 z P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272827 {A B P : Type'} (z : A) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2178 A B P z P' H1 f p H2 g a w) = (term2395 A B P z p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8272822 A B P G1 z P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272828 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8272829 {A B P : Type'} (z : A) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2179 A B P z P' H1 f p H2 g a w) = (term2396 A B P z p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272828 A B P) (@lem8272827 A B P z P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272834 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2180 A B P P' H1 f p H2 g a w) = (term2397 A B P p P' H1 f w H2 g a).
Proof. exact (fun_ext (fun z : A => @lem8272829 A B P z P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272835 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8272836 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2181 A B P P' H1 f p H2 g a w) = (term2398 A B P p P' H1 f w H2 g a).
Proof. exact (MK_COMB (@lem8272835 A) (@lem8272834 A B P P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272841 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2182 A B P P' H1 p H2 g a w) = (term2399 A B P p P' H1 w H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8272836 A B P P' H1 f w H2 p g a h1)). Qed.
Lemma lem8272842 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8272843 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) (h1 : (p g a) = True) : (term2183 A B P P' H1 p H2 g a w) = (term2400 A B P p P' H1 w H2 g a).
Proof. exact (MK_COMB (@lem8272842 A B) (@lem8272841 A B P P' H1 w H2 p g a h1)). Qed.
Lemma lem8272848 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2401 A B P p P' H1 w H2 g a.
Proof. exact (fun h0 : (p g a) = True => @lem8272843 A B P P' H1 w H2 p g a h0). Qed.
Lemma lem8272849 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2402 A B P p P' H1 w H2 g a.
Proof. exact (conj (@lem8272658 A B P g p P' H2 H1 a w) (@lem8272848 A B P p P' H1 w H2 g a)). Qed.
Lemma lem8272851 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8272852 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : term2403 A B P g p P' H2 H1 a w.
Proof. exact (@lem8272851 (term2183 A B P P' H1 p H2 g a w) (term2400 A B P p P' H1 w H2 g a) (p g a) (term2220 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8272867 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : (term2183 A B P P' H1 p H2 g a w) = (term2404 A B P g p P' H2 H1 a w).
Proof. exact (@lem8272852 A B P g p P' H2 H1 a w (@lem8272849 A B P p P' H1 w H2 g a)). Qed.
Lemma lem8272879 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272880 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8272881 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term373 A B P p f a) = (~ False).
Proof. exact (MK_COMB (@lem8272880) (@lem8272879 A B P p f a h1)). Qed.
Lemma lem8272883 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8272884 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term373 A B P p f a) = True.
Proof. exact (TRANS (@lem8272881 A B P p f a h1) (@lem8272883)). Qed.
Lemma lem8272885 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272886 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1559 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8272885) (@lem8272884 A B P p f a h1)). Qed.
Lemma lem8272909 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272910 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2256 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272886 A B P p f a h1) (@lem8272909 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272912 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8272913 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2256 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8272912 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272916 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8272910 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8272913 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272917 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8272918 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2194 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2257 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272917) (@lem8272916 A B P P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8272920 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272921 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8272922 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1432 A B P p f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8272921) (@lem8272920 A B P p f a h1)). Qed.
Lemma lem8272923 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8272924 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1434 A B P p P' P2 P1 f a) = (term1435 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8272922 A B P p f a h1) (@lem8272923 A B P P' P2 P1 f a)). Qed.
Lemma lem8272925 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8272926 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = (term1436 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8272924 A B P P' P2 P1 p f a h1) (@lem8272925)). Qed.
Lemma lem8272928 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272929 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8272928 Prop t1 t2). Qed.
Lemma lem8272930 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1436 A B P P' P2 P1 f a) = False.
Proof. exact (@lem8272929 (term1433 A B P P' P2 P1 f a) False). Qed.
Lemma lem8272931 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = False.
Proof. exact (TRANS (@lem8272926 A B P P' P2 P1 p f a h1) (@lem8272930 A B P P' P2 P1 f a)). Qed.
Lemma lem8272932 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8272933 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2196 A B P p P' P2 P1 f a) = (~ False).
Proof. exact (MK_COMB (@lem8272932) (@lem8272931 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8272935 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8272936 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2196 A B P p P' P2 P1 f a) = True.
Proof. exact (TRANS (@lem8272933 A B P P' P2 P1 p f a h1) (@lem8272935)). Qed.
Lemma lem8272937 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272938 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2197 A B P p P' P2 P1 f a) = (and True).
Proof. exact (MK_COMB (@lem8272937) (@lem8272936 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8272940 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272941 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8272942 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1437 A B P p f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8272941 A) (@lem8272940 A B P p f a h1)). Qed.
Lemma lem8272943 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8272944 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1439 A B P p P' G2 G1 f a) = (term1440 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8272942 A B P p f a h1) (@lem8272943 A B P P' G2 G1 f a)). Qed.
Lemma lem8272945 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8272946 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = (term1441 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8272944 A B P P' G2 G1 p f a h1) (@lem8272945 A z)). Qed.
Lemma lem8272948 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272949 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8272948 A t1 t2). Qed.
Lemma lem8272950 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1441 A B P P' G2 G1 f a z) = z.
Proof. exact (@lem8272949 A (term1438 A B P P' G2 G1 f a) z). Qed.
Lemma lem8272951 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = z.
Proof. exact (TRANS (@lem8272946 A B P P' G2 G1 z p f a h1) (@lem8272950 A B P P' G2 G1 f a z)). Qed.
Lemma lem8272952 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8272953 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1315 A B P p P' G2 G1 f a z) = (@eq A z).
Proof. exact (MK_COMB (@lem8272952 A) (@lem8272951 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8272954 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8272955 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1284 A B P p P' G2 G1 f a z) = z) = (z = z).
Proof. exact (MK_COMB (@lem8272953 A B P P' G2 G1 z p f a h1) (@lem8272954 A z)). Qed.
Lemma lem8272957 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8272958 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem8272957 A x). Qed.
Lemma lem8272959 {A : Type'} (z : A) : (z = z) = True.
Proof. exact (@lem8272958 A z). Qed.
Lemma lem8272960 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1284 A B P p P' G2 G1 f a z) = z) = True.
Proof. exact (TRANS (@lem8272955 A B P P' G2 G1 z p f a h1) (@lem8272959 A z)). Qed.
Lemma lem8272961 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8272962 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2199 A B P p P' G2 G1 f a z) = (and True).
Proof. exact (MK_COMB (@lem8272961) (@lem8272960 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8272964 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8272965 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8272966 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2043 A B P p f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8272965 B) (@lem8272964 A B P p f a h1)). Qed.
Lemma lem8272967 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8272968 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2044 A B P p P' H2 H1 f a) = (term2258 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8272966 A B P p f a h1) (@lem8272967 A B P P' H2 H1 f a)). Qed.
Lemma lem8272969 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8272970 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = (term2259 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8272968 A B P P' H2 H1 p f a h1) (@lem8272969 B w)). Qed.
Lemma lem8272972 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8272973 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8272972 B t1 t2). Qed.
Lemma lem8272974 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2259 A B P P' H2 H1 f a w) = w.
Proof. exact (@lem8272973 B (term1064 A B P P' H2 H1 f a) w). Qed.
Lemma lem8272975 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = w.
Proof. exact (TRANS (@lem8272970 A B P P' H2 H1 w p f a h1) (@lem8272974 A B P P' H2 H1 f a w)). Qed.
Lemma lem8272976 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8272977 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1333 A B P p P' H2 H1 f a w) = (@eq B w).
Proof. exact (MK_COMB (@lem8272976 B) (@lem8272975 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8272978 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8272979 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1328 A B P p P' H2 H1 f a w) = w) = (w = w).
Proof. exact (MK_COMB (@lem8272977 A B P P' H2 H1 w p f a h1) (@lem8272978 B w)). Qed.
Lemma lem8272981 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8272982 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8272981 B x). Qed.
Lemma lem8272983 {B : Type'} (w : B) : (w = w) = True.
Proof. exact (@lem8272982 B w). Qed.
Lemma lem8272984 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1328 A B P p P' H2 H1 f a w) = w) = True.
Proof. exact (TRANS (@lem8272979 A B P P' H2 H1 w p f a h1) (@lem8272983 B w)). Qed.
Lemma lem8272985 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2201 A B P G2 G1 z p P' H2 H1 f a w) = (True /\ True).
Proof. exact (MK_COMB (@lem8272962 A B P P' G2 G1 z p f a h1) (@lem8272984 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8272987 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8272988 : (True /\ True) = True.
Proof. exact (@lem8272987 True). Qed.
Lemma lem8272989 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2201 A B P G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8272985 A B P G2 G1 z P' H2 H1 w p f a h1) (@lem8272988)). Qed.
Lemma lem8272990 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = (True /\ True).
Proof. exact (MK_COMB (@lem8272938 A B P P' P2 P1 p f a h1) (@lem8272989 A B P G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8272992 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8272993 : (True /\ True) = True.
Proof. exact (@lem8272992 True). Qed.
Lemma lem8272994 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8272990 A B P P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8272993)). Qed.
Lemma lem8272995 {A B P : Type'} (z : A) (P' : type560 A B P) (w : B) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2260 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8272918 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8272994 A B P P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8272997 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8272998 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2260 A B P P1 G1 H1 P2 G2 f H2 g a) = True.
Proof. exact (@lem8272997 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8272999 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8272995 A B P z P' w P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8272998 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273000 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8273001 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8273000 A B P lt2 s a f g) (@lem8272999 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273003 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8273004 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8273003 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8273005 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273001 A B P P2 P1 G2 G1 z P' H2 H1 w lt2 s g p f a h1) (@lem8273004 A B P lt2 s a f g)). Qed.
Lemma lem8273006 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2205 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8273005 A B P lt2 s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273007 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8273008 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2263 A).
Proof. exact (MK_COMB (@lem8273007 A) (@lem8273006 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273010 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273011 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8273010 (type1402 A) t). Qed.
Lemma lem8273012 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8273011 A True). Qed.
Lemma lem8273013 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273008 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273012 A)). Qed.
Lemma lem8273014 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2207 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8273013 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273015 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8273016 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2266 A P).
Proof. exact (MK_COMB (@lem8273015 A P) (@lem8273014 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273018 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273019 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8273018 (P -> A) t). Qed.
Lemma lem8273020 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8273019 A P True). Qed.
Lemma lem8273021 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273016 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273020 A P)). Qed.
Lemma lem8273022 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2209 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8273021 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273023 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273024 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273023 A B P) (@lem8273022 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273026 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273027 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273026 (type560 A B P) t). Qed.
Lemma lem8273028 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273027 A B P True). Qed.
Lemma lem8273029 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273024 A B P g P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273028 A B P)). Qed.
Lemma lem8273030 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2211 A B P g G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8273029 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273031 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273032 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273031 A B P) (@lem8273030 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273034 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273035 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273034 (type560 A B P) t). Qed.
Lemma lem8273036 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273035 A B P True). Qed.
Lemma lem8273037 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273032 A B P g G2 G1 z P' H2 H1 w p f a h1) (@lem8273036 A B P)). Qed.
Lemma lem8273038 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2213 A B P g G1 z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8273037 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273039 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273040 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2214 A B P g G1 z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273039 A B P) (@lem8273038 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273042 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273043 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273042 (type557 A B P) t). Qed.
Lemma lem8273044 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273043 A B P True). Qed.
Lemma lem8273045 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2214 A B P g G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273040 A B P g G1 z P' H2 H1 w p f a h1) (@lem8273044 A B P)). Qed.
Lemma lem8273046 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2215 A B P g z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8273045 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273047 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273048 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2216 A B P g z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273047 A B P) (@lem8273046 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273050 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273051 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273050 (type557 A B P) t). Qed.
Lemma lem8273052 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273051 A B P True). Qed.
Lemma lem8273053 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2216 A B P g z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273048 A B P g z P' H2 H1 w p f a h1) (@lem8273052 A B P)). Qed.
Lemma lem8273054 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2217 A B P g p P' H2 H1 f a w) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8273053 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273055 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8273056 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2218 A B P g p P' H2 H1 f a w) = (term1444 A).
Proof. exact (MK_COMB (@lem8273055 A) (@lem8273054 A B P g P' H2 H1 w p f a h1)). Qed.
Lemma lem8273058 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273059 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8273058 A t). Qed.
Lemma lem8273060 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8273059 A True). Qed.
Lemma lem8273061 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2218 A B P g p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273056 A B P g P' H2 H1 w p f a h1) (@lem8273060 A)). Qed.
Lemma lem8273062 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : term2274 A B P g p P' H2 H1 f a w.
Proof. exact (fun h0 : (p f a) = False => @lem8273061 A B P g P' H2 H1 w p f a h0). Qed.
Lemma lem8273072 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273073 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8273074 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term373 A B P p f a) = (~ True).
Proof. exact (MK_COMB (@lem8273073) (@lem8273072 A B P p f a h1)). Qed.
Lemma lem8273076 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem8273077 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term373 A B P p f a) = False.
Proof. exact (TRANS (@lem8273074 A B P p f a h1) (@lem8273076)). Qed.
Lemma lem8273078 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273079 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1559 A B P p f a) = (and False).
Proof. exact (MK_COMB (@lem8273078) (@lem8273077 A B P p f a h1)). Qed.
Lemma lem8273102 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273103 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = (term2275 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273079 A B P p f a h1) (@lem8273102 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273105 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8273106 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2275 A B P P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (@lem8273105 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273107 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2193 A B P p P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (TRANS (@lem8273103 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8273106 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273108 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273109 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2194 A B P p P1 G1 H1 P2 G2 f H2 g a) = (imp False).
Proof. exact (MK_COMB (@lem8273108) (@lem8273107 A B P P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8273111 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273112 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8273113 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1432 A B P p f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8273112) (@lem8273111 A B P p f a h1)). Qed.
Lemma lem8273114 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8273115 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1434 A B P p P' P2 P1 f a) = (term1447 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273113 A B P p f a h1) (@lem8273114 A B P P' P2 P1 f a)). Qed.
Lemma lem8273116 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8273117 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1448 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273115 A B P P' P2 P1 p f a h1) (@lem8273116)). Qed.
Lemma lem8273119 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273120 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8273119 Prop t2 t1). Qed.
Lemma lem8273121 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1448 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (@lem8273120 False (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8273122 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (TRANS (@lem8273117 A B P P' P2 P1 p f a h1) (@lem8273121 A B P P' P2 P1 f a)). Qed.
Lemma lem8273123 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8273124 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2196 A B P p P' P2 P1 f a) = (term2276 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273123) (@lem8273122 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8273125 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273126 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2197 A B P p P' P2 P1 f a) = (term2277 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273125) (@lem8273124 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8273128 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273129 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8273130 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1437 A B P p f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8273129 A) (@lem8273128 A B P p f a h1)). Qed.
Lemma lem8273131 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8273132 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1439 A B P p P' G2 G1 f a) = (term1450 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8273130 A B P p f a h1) (@lem8273131 A B P P' G2 G1 f a)). Qed.
Lemma lem8273133 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8273134 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1451 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8273132 A B P P' G2 G1 p f a h1) (@lem8273133 A z)). Qed.
Lemma lem8273136 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273137 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8273136 A t2 t1). Qed.
Lemma lem8273138 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1451 A B P P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (@lem8273137 A z (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8273139 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (TRANS (@lem8273134 A B P P' G2 G1 z p f a h1) (@lem8273138 A B P z P' G2 G1 f a)). Qed.
Lemma lem8273140 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8273141 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1315 A B P p P' G2 G1 f a z) = (term2278 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8273140 A) (@lem8273139 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8273142 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8273143 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1284 A B P p P' G2 G1 f a z) = z) = ((term1438 A B P P' G2 G1 f a) = z).
Proof. exact (MK_COMB (@lem8273141 A B P z P' G2 G1 p f a h1) (@lem8273142 A z)). Qed.
Lemma lem8273146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273147 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2199 A B P p P' G2 G1 f a z) = (term2279 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8273146) (@lem8273143 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8273149 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273150 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8273151 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2043 A B P p f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8273150 B) (@lem8273149 A B P p f a h1)). Qed.
Lemma lem8273152 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8273153 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2044 A B P p P' H2 H1 f a) = (term2045 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8273151 A B P p f a h1) (@lem8273152 A B P P' H2 H1 f a)). Qed.
Lemma lem8273154 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8273155 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term2046 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8273153 A B P P' H2 H1 p f a h1) (@lem8273154 B w)). Qed.
Lemma lem8273157 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273158 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8273157 B t2 t1). Qed.
Lemma lem8273159 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2046 A B P P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (@lem8273158 B w (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8273160 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (TRANS (@lem8273155 A B P P' H2 H1 w p f a h1) (@lem8273159 A B P w P' H2 H1 f a)). Qed.
Lemma lem8273161 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8273162 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1333 A B P p P' H2 H1 f a w) = (term1069 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8273161 B) (@lem8273160 A B P w P' H2 H1 p f a h1)). Qed.
Lemma lem8273163 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8273164 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1328 A B P p P' H2 H1 f a w) = w) = ((term1064 A B P P' H2 H1 f a) = w).
Proof. exact (MK_COMB (@lem8273162 A B P w P' H2 H1 p f a h1) (@lem8273163 B w)). Qed.
Lemma lem8273167 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2201 A B P G2 G1 z p P' H2 H1 f a w) = (term2280 A B P G2 G1 z P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8273147 A B P P' G2 G1 z p f a h1) (@lem8273164 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8273170 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2202 A B P P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2281 A B P P2 P1 G2 G1 z P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8273126 A B P P' P2 P1 p f a h1) (@lem8273167 A B P G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273173 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2282 A B P P2 P1 G2 G1 z P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8273109 A B P P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8273170 A B P P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273175 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8273176 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2282 A B P P2 P1 G2 G1 z P' H2 H1 f a w) = True.
Proof. exact (@lem8273175 (term2281 A B P P2 P1 G2 G1 z P' H2 H1 f a w)). Qed.
Lemma lem8273177 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2203 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273173 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273176 A B P P2 P1 G2 G1 z P' H2 H1 f a w)). Qed.
Lemma lem8273178 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8273179 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8273178 A B P lt2 s a f g) (@lem8273177 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273181 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8273182 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8273181 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8273183 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2204 A B P lt2 s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273179 A B P P2 P1 G2 G1 z P' H2 H1 w lt2 s g p f a h1) (@lem8273182 A B P lt2 s a f g)). Qed.
Lemma lem8273184 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2205 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8273183 A B P lt2 s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273185 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8273186 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2263 A).
Proof. exact (MK_COMB (@lem8273185 A) (@lem8273184 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273188 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273189 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8273188 (type1402 A) t). Qed.
Lemma lem8273190 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8273189 A True). Qed.
Lemma lem8273191 {A B P : Type'} (s : P -> A) (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2206 A B P s g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273186 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273190 A)). Qed.
Lemma lem8273192 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2207 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8273191 A B P s g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273193 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8273194 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = (term2266 A P).
Proof. exact (MK_COMB (@lem8273193 A P) (@lem8273192 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273196 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273197 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8273196 (P -> A) t). Qed.
Lemma lem8273198 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8273197 A P True). Qed.
Lemma lem8273199 {A B P : Type'} (g : A -> B) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2208 A B P g P2 P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273194 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273198 A P)). Qed.
Lemma lem8273200 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2209 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8273199 A B P g P2 P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273201 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273202 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273201 A B P) (@lem8273200 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273204 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273205 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273204 (type560 A B P) t). Qed.
Lemma lem8273206 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273205 A B P True). Qed.
Lemma lem8273207 {A B P : Type'} (g : A -> B) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2210 A B P g P1 G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273202 A B P g P1 G2 G1 z P' H2 H1 w p f a h1) (@lem8273206 A B P)). Qed.
Lemma lem8273208 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2211 A B P g G2 G1 z p P' H2 H1 f a w) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8273207 A B P g P1 G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273209 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273210 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273209 A B P) (@lem8273208 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273212 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273213 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273212 (type560 A B P) t). Qed.
Lemma lem8273214 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273213 A B P True). Qed.
Lemma lem8273215 {A B P : Type'} (g : A -> B) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2212 A B P g G2 G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273210 A B P g G2 G1 z P' H2 H1 w p f a h1) (@lem8273214 A B P)). Qed.
Lemma lem8273216 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2213 A B P g G1 z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8273215 A B P g G2 G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273217 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273218 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2214 A B P g G1 z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273217 A B P) (@lem8273216 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273220 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273221 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273220 (type557 A B P) t). Qed.
Lemma lem8273222 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273221 A B P True). Qed.
Lemma lem8273223 {A B P : Type'} (g : A -> B) (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2214 A B P g G1 z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273218 A B P g G1 z P' H2 H1 w p f a h1) (@lem8273222 A B P)). Qed.
Lemma lem8273224 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2215 A B P g z p P' H2 H1 f a w) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8273223 A B P g G1 z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273225 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273226 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2216 A B P g z p P' H2 H1 f a w) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273225 A B P) (@lem8273224 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273228 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273229 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273228 (type557 A B P) t). Qed.
Lemma lem8273230 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273229 A B P True). Qed.
Lemma lem8273231 {A B P : Type'} (g : A -> B) (z : A) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2216 A B P g z p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273226 A B P g z P' H2 H1 w p f a h1) (@lem8273230 A B P)). Qed.
Lemma lem8273232 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2217 A B P g p P' H2 H1 f a w) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8273231 A B P g z P' H2 H1 w p f a h1)). Qed.
Lemma lem8273233 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8273234 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2218 A B P g p P' H2 H1 f a w) = (term1444 A).
Proof. exact (MK_COMB (@lem8273233 A) (@lem8273232 A B P g P' H2 H1 w p f a h1)). Qed.
Lemma lem8273236 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273237 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8273236 A t). Qed.
Lemma lem8273238 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8273237 A True). Qed.
Lemma lem8273239 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2218 A B P g p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273234 A B P g P' H2 H1 w p f a h1) (@lem8273238 A)). Qed.
Lemma lem8273240 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : term2283 A B P g p P' H2 H1 f a w.
Proof. exact (fun h0 : (p f a) = True => @lem8273239 A B P g P' H2 H1 w p f a h0). Qed.
Lemma lem8273241 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : term2284 A B P g p P' H2 H1 f a w.
Proof. exact (conj (@lem8273062 A B P g p P' H2 H1 f a w) (@lem8273240 A B P g p P' H2 H1 f a w)). Qed.
Lemma lem8273243 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8273244 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) : term2285 A B P g P' H2 H1 w p f a.
Proof. exact (@lem8273243 (term2218 A B P g p P' H2 H1 f a w) True (p f a) True). Qed.
Lemma lem8273245 {A B P : Type'} (g : A -> B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) : (term2218 A B P g p P' H2 H1 f a w) = (term2286 A B P p f a).
Proof. exact (@lem8273244 A B P g P' H2 H1 w p f a (@lem8273241 A B P g p P' H2 H1 f a w)). Qed.
Lemma lem8273247 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8273248 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P p f a) = True.
Proof. exact (@lem8273247 (p f a)). Qed.
Lemma lem8273250 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8273251 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2287 A B P p f a) = True.
Proof. exact (@lem8273250 (term373 A B P p f a)). Qed.
Lemma lem8273252 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273253 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2288 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8273252) (@lem8273251 A B P p f a)). Qed.
Lemma lem8273254 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2286 A B P p f a) = (True /\ True).
Proof. exact (MK_COMB (@lem8273253 A B P p f a) (@lem8273248 A B P p f a)). Qed.
Lemma lem8273256 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8273257 : (True /\ True) = True.
Proof. exact (@lem8273256 True). Qed.
Lemma lem8273258 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2286 A B P p f a) = True.
Proof. exact (TRANS (@lem8273254 A B P p f a) (@lem8273257)). Qed.
Lemma lem8273263 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2218 A B P g p P' H2 H1 f a w) = True.
Proof. exact (TRANS (@lem8273245 A B P g P' H2 H1 w p f a) (@lem8273258 A B P p f a)). Qed.
Lemma lem8273264 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : (term2219 A B P g p P' H2 H1 a w) = (term2289 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8273263 A B P g p P' H2 H1 f a w)). Qed.
Lemma lem8273265 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8273266 {A B P : Type'} (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (a : P) (w : B) : (term2220 A B P g p P' H2 H1 a w) = (term2290 A B).
Proof. exact (MK_COMB (@lem8273265 A B) (@lem8273264 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8273269 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term628 A B P p g a) = (term628 A B P p g a).
Proof. exact (eq_refl (term628 A B P p g a)). Qed.
Lemma lem8273270 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (g : A -> B) (a : P) : (term2291 A B P g p P' H2 H1 a w) = (term2292 A B P p g a).
Proof. exact (MK_COMB (@lem8273269 A B P p g a) (@lem8273266 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8273282 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273283 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273284 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term327 A B P p f a) = (and False).
Proof. exact (MK_COMB (@lem8273283) (@lem8273282 A B P p f a h1)). Qed.
Lemma lem8273286 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273287 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273288 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1070 A B P p f a) = (imp False).
Proof. exact (MK_COMB (@lem8273287) (@lem8273286 A B P p f a h1)). Qed.
Lemma lem8273289 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (P' f a).
Proof. exact (eq_refl (P' f a)). Qed.
Lemma lem8273290 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2374 A B P p P' f a) = (term2372 A B P P' f a).
Proof. exact (MK_COMB (@lem8273288 A B P p f a h1) (@lem8273289 A B P P' f a)). Qed.
Lemma lem8273292 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8273293 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2372 A B P P' f a) = True.
Proof. exact (@lem8273292 (P' f a)). Qed.
Lemma lem8273294 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2374 A B P p P' f a) = True.
Proof. exact (TRANS (@lem8273290 A B P P' p f a h1) (@lem8273293 A B P P' f a)). Qed.
Lemma lem8273295 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2375 A B P p P' f a) = (False /\ True).
Proof. exact (MK_COMB (@lem8273284 A B P p f a h1) (@lem8273294 A B P P' p f a h1)). Qed.
Lemma lem8273297 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8273298 : (False /\ True) = False.
Proof. exact (@lem8273297 True). Qed.
Lemma lem8273299 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2375 A B P p P' f a) = False.
Proof. exact (TRANS (@lem8273295 A B P P' p f a h1) (@lem8273298)). Qed.
Lemma lem8273300 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273301 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2376 A B P p P' f a) = (and False).
Proof. exact (MK_COMB (@lem8273300) (@lem8273299 A B P P' p f a h1)). Qed.
Lemma lem8273324 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273325 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2377 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2275 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273301 A B P P' p f a h1) (@lem8273324 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273327 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8273328 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2275 A B P P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (@lem8273327 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273329 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2377 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (TRANS (@lem8273325 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8273328 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273330 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273331 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2378 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (imp False).
Proof. exact (MK_COMB (@lem8273330) (@lem8273329 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8273333 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273334 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8273335 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1432 A B P p f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8273334) (@lem8273333 A B P p f a h1)). Qed.
Lemma lem8273336 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8273337 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1434 A B P p P' P2 P1 f a) = (term1435 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273335 A B P p f a h1) (@lem8273336 A B P P' P2 P1 f a)). Qed.
Lemma lem8273338 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8273339 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = (term1436 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273337 A B P P' P2 P1 p f a h1) (@lem8273338)). Qed.
Lemma lem8273341 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8273342 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8273341 Prop t1 t2). Qed.
Lemma lem8273343 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1436 A B P P' P2 P1 f a) = False.
Proof. exact (@lem8273342 (term1433 A B P P' P2 P1 f a) False). Qed.
Lemma lem8273344 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1267 A B P p P' P2 P1 f a) = False.
Proof. exact (TRANS (@lem8273339 A B P P' P2 P1 p f a h1) (@lem8273343 A B P P' P2 P1 f a)). Qed.
Lemma lem8273345 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8273346 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1311 A B P p P' P2 P1 f a) = (@eq Prop False).
Proof. exact (MK_COMB (@lem8273345) (@lem8273344 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8273347 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8273348 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1267 A B P p P' P2 P1 f a) = (P2 g a)) = (False = (P2 g a)).
Proof. exact (MK_COMB (@lem8273346 A B P P' P2 P1 p f a h1) (@lem8273347 A B P P2 g a)). Qed.
Lemma lem8273350 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem8273351 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (False = (P2 g a)) = (term373 A B P P2 g a).
Proof. exact (@lem8273350 (P2 g a)). Qed.
Lemma lem8273352 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1267 A B P p P' P2 P1 f a) = (P2 g a)) = (term373 A B P P2 g a).
Proof. exact (TRANS (@lem8273348 A B P P' P1 P2 g p f a h1) (@lem8273351 A B P P2 g a)). Qed.
Lemma lem8273353 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273354 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2379 A B P p P' P1 f P2 g a) = (term1559 A B P P2 g a).
Proof. exact (MK_COMB (@lem8273353) (@lem8273352 A B P P' P1 P2 g p f a h1)). Qed.
Lemma lem8273356 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273357 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8273358 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1437 A B P p f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8273357 A) (@lem8273356 A B P p f a h1)). Qed.
Lemma lem8273359 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8273360 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1439 A B P p P' G2 G1 f a) = (term1440 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8273358 A B P p f a h1) (@lem8273359 A B P P' G2 G1 f a)). Qed.
Lemma lem8273361 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8273362 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = (term1441 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8273360 A B P P' G2 G1 p f a h1) (@lem8273361 A z)). Qed.
Lemma lem8273364 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8273365 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8273364 A t1 t2). Qed.
Lemma lem8273366 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) (z : A) : (term1441 A B P P' G2 G1 f a z) = z.
Proof. exact (@lem8273365 A (term1438 A B P P' G2 G1 f a) z). Qed.
Lemma lem8273367 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1284 A B P p P' G2 G1 f a z) = z.
Proof. exact (TRANS (@lem8273362 A B P P' G2 G1 z p f a h1) (@lem8273366 A B P P' G2 G1 f a z)). Qed.
Lemma lem8273368 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8273369 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1315 A B P p P' G2 G1 f a z) = (@eq A z).
Proof. exact (MK_COMB (@lem8273368 A) (@lem8273367 A B P P' G2 G1 z p f a h1)). Qed.
Lemma lem8273370 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8273371 {A B P : Type'} (P' : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1284 A B P p P' G2 G1 f a z) = (G2 g a)) = (z = (G2 g a)).
Proof. exact (MK_COMB (@lem8273369 A B P P' G2 G1 z p f a h1) (@lem8273370 A B P G2 g a)). Qed.
Lemma lem8273374 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273375 {A B P : Type'} (P' : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2380 A B P p P' G1 f z G2 g a) = (term2293 A B P z G2 g a).
Proof. exact (MK_COMB (@lem8273374) (@lem8273371 A B P P' G1 z G2 g p f a h1)). Qed.
Lemma lem8273377 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (p f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273378 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8273379 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2043 A B P p f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8273378 B) (@lem8273377 A B P p f a h1)). Qed.
Lemma lem8273380 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8273381 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2044 A B P p P' H2 H1 f a) = (term2258 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8273379 A B P p f a h1) (@lem8273380 A B P P' H2 H1 f a)). Qed.
Lemma lem8273382 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8273383 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = (term2259 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8273381 A B P P' H2 H1 p f a h1) (@lem8273382 B w)). Qed.
Lemma lem8273385 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8273386 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8273385 B t1 t2). Qed.
Lemma lem8273387 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) : (term2259 A B P P' H2 H1 f a w) = w.
Proof. exact (@lem8273386 B (term1064 A B P P' H2 H1 f a) w). Qed.
Lemma lem8273388 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1328 A B P p P' H2 H1 f a w) = w.
Proof. exact (TRANS (@lem8273383 A B P P' H2 H1 w p f a h1) (@lem8273387 A B P P' H2 H1 f a w)). Qed.
Lemma lem8273389 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8273390 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term1333 A B P p P' H2 H1 f a w) = (@eq B w).
Proof. exact (MK_COMB (@lem8273389 B) (@lem8273388 A B P P' H2 H1 w p f a h1)). Qed.
Lemma lem8273391 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8273392 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : ((term1328 A B P p P' H2 H1 f a w) = (H2 g a)) = (w = (H2 g a)).
Proof. exact (MK_COMB (@lem8273390 A B P P' H2 H1 w p f a h1) (@lem8273391 A B P H2 g a)). Qed.
Lemma lem8273395 {A B P : Type'} (G1 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (z : A) (G2 : type557 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2381 A B P G1 z G2 p P' H1 f w H2 g a) = (term2294 A B P z G2 w H2 g a).
Proof. exact (MK_COMB (@lem8273375 A B P P' G1 z G2 g p f a h1) (@lem8273392 A B P P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273398 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (z : A) (G2 : type557 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2382 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2295 A B P P2 z G2 w H2 g a).
Proof. exact (MK_COMB (@lem8273354 A B P P' P1 P2 g p f a h1) (@lem8273395 A B P G1 P' H1 z G2 w H2 g p f a h1)). Qed.
Lemma lem8273401 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (z : A) (G2 : type557 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2383 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2296 A B P P2 z G2 w H2 g a).
Proof. exact (MK_COMB (@lem8273331 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8273398 A B P P1 G1 P' H1 P2 z G2 w H2 g p f a h1)). Qed.
Lemma lem8273403 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8273404 {A B P : Type'} (P2 : type560 A B P) (z : A) (G2 : type557 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2296 A B P P2 z G2 w H2 g a) = True.
Proof. exact (@lem8273403 (term2295 A B P P2 z G2 w H2 g a)). Qed.
Lemma lem8273405 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2383 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273401 A B P P1 G1 P' H1 P2 z G2 w H2 g p f a h1) (@lem8273404 A B P P2 z G2 w H2 g a)). Qed.
Lemma lem8273406 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8273407 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2384 A B P lt2 s P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8273406 A B P lt2 s a f g) (@lem8273405 A B P P1 P2 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273409 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8273410 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8273409 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8273411 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2384 A B P lt2 s P1 P2 G1 z G2 p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273407 A B P P1 P2 G1 z G2 P' H1 w H2 lt2 s g p f a h1) (@lem8273410 A B P lt2 s a f g)). Qed.
Lemma lem8273412 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2385 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8273411 A B P lt2 s P1 P2 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273413 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8273414 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2386 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2263 A).
Proof. exact (MK_COMB (@lem8273413 A) (@lem8273412 A B P s P1 P2 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273416 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273417 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8273416 (type1402 A) t). Qed.
Lemma lem8273418 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8273417 A True). Qed.
Lemma lem8273419 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2386 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273414 A B P s P1 P2 G1 z G2 P' H1 w H2 g p f a h1) (@lem8273418 A)). Qed.
Lemma lem8273420 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2387 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8273419 A B P s P1 P2 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273421 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8273422 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2388 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2266 A P).
Proof. exact (MK_COMB (@lem8273421 A P) (@lem8273420 A B P P1 P2 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273424 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273425 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8273424 (P -> A) t). Qed.
Lemma lem8273426 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8273425 A P True). Qed.
Lemma lem8273427 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2388 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273422 A B P P1 P2 G1 z G2 P' H1 w H2 g p f a h1) (@lem8273426 A P)). Qed.
Lemma lem8273428 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2389 A B P P1 G1 z G2 p P' H1 f w H2 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8273427 A B P P1 P2 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273429 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273430 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2390 A B P P1 G1 z G2 p P' H1 f w H2 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273429 A B P) (@lem8273428 A B P P1 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273432 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273433 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273432 (type560 A B P) t). Qed.
Lemma lem8273434 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273433 A B P True). Qed.
Lemma lem8273435 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2390 A B P P1 G1 z G2 p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273430 A B P P1 G1 z G2 P' H1 w H2 g p f a h1) (@lem8273434 A B P)). Qed.
Lemma lem8273436 {A B P : Type'} (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2391 A B P G1 z G2 p P' H1 f w H2 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8273435 A B P P1 G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273437 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273438 {A B P : Type'} (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2392 A B P G1 z G2 p P' H1 f w H2 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273437 A B P) (@lem8273436 A B P G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273440 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273441 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273440 (type560 A B P) t). Qed.
Lemma lem8273442 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273441 A B P True). Qed.
Lemma lem8273443 {A B P : Type'} (G1 : type557 A B P) (z : A) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2392 A B P G1 z G2 p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273438 A B P G1 z G2 P' H1 w H2 g p f a h1) (@lem8273442 A B P)). Qed.
Lemma lem8273444 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2393 A B P G1 z p P' H1 f w H2 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8273443 A B P G1 z G2 P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273445 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273446 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2394 A B P G1 z p P' H1 f w H2 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273445 A B P) (@lem8273444 A B P G1 z P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273448 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273449 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273448 (type557 A B P) t). Qed.
Lemma lem8273450 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273449 A B P True). Qed.
Lemma lem8273451 {A B P : Type'} (G1 : type557 A B P) (z : A) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2394 A B P G1 z p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273446 A B P G1 z P' H1 w H2 g p f a h1) (@lem8273450 A B P)). Qed.
Lemma lem8273452 {A B P : Type'} (z : A) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2395 A B P z p P' H1 f w H2 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8273451 A B P G1 z P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273453 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273454 {A B P : Type'} (z : A) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2396 A B P z p P' H1 f w H2 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273453 A B P) (@lem8273452 A B P z P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273456 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273457 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273456 (type557 A B P) t). Qed.
Lemma lem8273458 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273457 A B P True). Qed.
Lemma lem8273459 {A B P : Type'} (z : A) (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2396 A B P z p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273454 A B P z P' H1 w H2 g p f a h1) (@lem8273458 A B P)). Qed.
Lemma lem8273460 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2397 A B P p P' H1 f w H2 g a) = (term150 A).
Proof. exact (fun_ext (fun z : A => @lem8273459 A B P z P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273461 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8273462 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2398 A B P p P' H1 f w H2 g a) = (term1444 A).
Proof. exact (MK_COMB (@lem8273461 A) (@lem8273460 A B P P' H1 w H2 g p f a h1)). Qed.
Lemma lem8273464 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273465 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8273464 A t). Qed.
Lemma lem8273466 {A : Type'} : (term1444 A) = True.
Proof. exact (@lem8273465 A True). Qed.
Lemma lem8273467 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (w : B) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = False) : (term2398 A B P p P' H1 f w H2 g a) = True.
Proof. exact (TRANS (@lem8273462 A B P P' H1 w H2 g p f a h1) (@lem8273466 A)). Qed.
Lemma lem8273468 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2405 A B P p P' H1 f w H2 g a.
Proof. exact (fun h0 : (p f a) = False => @lem8273467 A B P P' H1 w H2 g p f a h0). Qed.
Lemma lem8273478 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273479 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273480 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term327 A B P p f a) = (and True).
Proof. exact (MK_COMB (@lem8273479) (@lem8273478 A B P p f a h1)). Qed.
Lemma lem8273482 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273483 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273484 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1070 A B P p f a) = (imp True).
Proof. exact (MK_COMB (@lem8273483) (@lem8273482 A B P p f a h1)). Qed.
Lemma lem8273485 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (P' f a) = (P' f a).
Proof. exact (eq_refl (P' f a)). Qed.
Lemma lem8273486 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2374 A B P p P' f a) = (term2406 A B P P' f a).
Proof. exact (MK_COMB (@lem8273484 A B P p f a h1) (@lem8273485 A B P P' f a)). Qed.
Lemma lem8273488 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8273489 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2406 A B P P' f a) = (P' f a).
Proof. exact (@lem8273488 (P' f a)). Qed.
Lemma lem8273490 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2374 A B P p P' f a) = (P' f a).
Proof. exact (TRANS (@lem8273486 A B P P' p f a h1) (@lem8273489 A B P P' f a)). Qed.
Lemma lem8273491 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2375 A B P p P' f a) = (term2036 A B P P' f a).
Proof. exact (MK_COMB (@lem8273480 A B P p f a h1) (@lem8273490 A B P P' p f a h1)). Qed.
Lemma lem8273493 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8273494 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2036 A B P P' f a) = (P' f a).
Proof. exact (@lem8273493 (P' f a)). Qed.
Lemma lem8273495 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2375 A B P p P' f a) = (P' f a).
Proof. exact (TRANS (@lem8273491 A B P P' p f a h1) (@lem8273494 A B P P' f a)). Qed.
Lemma lem8273496 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273497 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2376 A B P p P' f a) = (term327 A B P P' f a).
Proof. exact (MK_COMB (@lem8273496) (@lem8273495 A B P P' p f a h1)). Qed.
Lemma lem8273520 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273521 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2377 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2407 A B P P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273497 A B P P' p f a h1) (@lem8273520 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273524 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273525 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2378 A B P p P' P1 G1 H1 P2 G2 f H2 g a) = (term2408 A B P P' P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273524) (@lem8273521 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1)). Qed.
Lemma lem8273527 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273528 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8273529 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1432 A B P p f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8273528) (@lem8273527 A B P p f a h1)). Qed.
Lemma lem8273530 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1433 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (eq_refl (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8273531 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1434 A B P p P' P2 P1 f a) = (term1447 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273529 A B P p f a h1) (@lem8273530 A B P P' P2 P1 f a)). Qed.
Lemma lem8273532 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8273533 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1448 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273531 A B P P' P2 P1 p f a h1) (@lem8273532)). Qed.
Lemma lem8273535 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273536 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8273535 Prop t2 t1). Qed.
Lemma lem8273537 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1448 A B P P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (@lem8273536 False (term1433 A B P P' P2 P1 f a)). Qed.
Lemma lem8273538 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1267 A B P p P' P2 P1 f a) = (term1433 A B P P' P2 P1 f a).
Proof. exact (TRANS (@lem8273533 A B P P' P2 P1 p f a h1) (@lem8273537 A B P P' P2 P1 f a)). Qed.
Lemma lem8273539 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8273540 {A B P : Type'} (P' : type560 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1311 A B P p P' P2 P1 f a) = (term2299 A B P P' P2 P1 f a).
Proof. exact (MK_COMB (@lem8273539) (@lem8273538 A B P P' P2 P1 p f a h1)). Qed.
Lemma lem8273541 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8273542 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1267 A B P p P' P2 P1 f a) = (P2 g a)) = ((term1433 A B P P' P2 P1 f a) = (P2 g a)).
Proof. exact (MK_COMB (@lem8273540 A B P P' P2 P1 p f a h1) (@lem8273541 A B P P2 g a)). Qed.
Lemma lem8273545 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273546 {A B P : Type'} (P' : type560 A B P) (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2379 A B P p P' P1 f P2 g a) = (term2409 A B P P' P1 f P2 g a).
Proof. exact (MK_COMB (@lem8273545) (@lem8273542 A B P P' P1 P2 g p f a h1)). Qed.
Lemma lem8273548 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273549 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8273550 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1437 A B P p f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8273549 A) (@lem8273548 A B P p f a h1)). Qed.
Lemma lem8273551 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1438 A B P P' G2 G1 f a) = (term1438 A B P P' G2 G1 f a).
Proof. exact (eq_refl (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8273552 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1439 A B P p P' G2 G1 f a) = (term1450 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8273550 A B P p f a h1) (@lem8273551 A B P P' G2 G1 f a)). Qed.
Lemma lem8273553 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8273554 {A B P : Type'} (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1451 A B P P' G2 G1 f a z).
Proof. exact (MK_COMB (@lem8273552 A B P P' G2 G1 p f a h1) (@lem8273553 A z)). Qed.
Lemma lem8273556 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273557 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8273556 A t2 t1). Qed.
Lemma lem8273558 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1451 A B P P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (@lem8273557 A z (term1438 A B P P' G2 G1 f a)). Qed.
Lemma lem8273559 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1284 A B P p P' G2 G1 f a z) = (term1438 A B P P' G2 G1 f a).
Proof. exact (TRANS (@lem8273554 A B P P' G2 G1 z p f a h1) (@lem8273558 A B P z P' G2 G1 f a)). Qed.
Lemma lem8273560 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8273561 {A B P : Type'} (z : A) (P' : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1315 A B P p P' G2 G1 f a z) = (term2278 A B P P' G2 G1 f a).
Proof. exact (MK_COMB (@lem8273560 A) (@lem8273559 A B P z P' G2 G1 p f a h1)). Qed.
Lemma lem8273562 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8273563 {A B P : Type'} (z : A) (P' : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1284 A B P p P' G2 G1 f a z) = (G2 g a)) = ((term1438 A B P P' G2 G1 f a) = (G2 g a)).
Proof. exact (MK_COMB (@lem8273561 A B P z P' G2 G1 p f a h1) (@lem8273562 A B P G2 g a)). Qed.
Lemma lem8273566 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273567 {A B P : Type'} (z : A) (P' : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2380 A B P p P' G1 f z G2 g a) = (term2410 A B P P' G1 f G2 g a).
Proof. exact (MK_COMB (@lem8273566) (@lem8273563 A B P z P' G1 G2 g p f a h1)). Qed.
Lemma lem8273569 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (p f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273570 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8273571 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2043 A B P p f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8273570 B) (@lem8273569 A B P p f a h1)). Qed.
Lemma lem8273572 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term1064 A B P P' H2 H1 f a) = (term1064 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8273573 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2044 A B P p P' H2 H1 f a) = (term2045 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8273571 A B P p f a h1) (@lem8273572 A B P P' H2 H1 f a)). Qed.
Lemma lem8273574 {B : Type'} (w : B) : w = w.
Proof. exact (eq_refl w). Qed.
Lemma lem8273575 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term2046 A B P P' H2 H1 f a w).
Proof. exact (MK_COMB (@lem8273573 A B P P' H2 H1 p f a h1) (@lem8273574 B w)). Qed.
Lemma lem8273577 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273578 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8273577 B t2 t1). Qed.
Lemma lem8273579 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2046 A B P P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (@lem8273578 B w (term1064 A B P P' H2 H1 f a)). Qed.
Lemma lem8273580 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1328 A B P p P' H2 H1 f a w) = (term1064 A B P P' H2 H1 f a).
Proof. exact (TRANS (@lem8273575 A B P P' H2 H1 w p f a h1) (@lem8273579 A B P w P' H2 H1 f a)). Qed.
Lemma lem8273581 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8273582 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term1333 A B P p P' H2 H1 f a w) = (term1069 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8273581 B) (@lem8273580 A B P w P' H2 H1 p f a h1)). Qed.
Lemma lem8273583 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8273584 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : ((term1328 A B P p P' H2 H1 f a w) = (H2 g a)) = ((term1064 A B P P' H2 H1 f a) = (H2 g a)).
Proof. exact (MK_COMB (@lem8273582 A B P w P' H2 H1 p f a h1) (@lem8273583 A B P H2 g a)). Qed.
Lemma lem8273587 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2381 A B P G1 z G2 p P' H1 f w H2 g a) = (term2411 A B P G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273567 A B P z P' G1 G2 g p f a h1) (@lem8273584 A B P w P' H1 H2 g p f a h1)). Qed.
Lemma lem8273590 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2382 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2412 A B P P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273546 A B P P' P1 P2 g p f a h1) (@lem8273587 A B P z w G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273593 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2383 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2413 A B P P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273525 A B P P' P1 G1 H1 P2 G2 H2 g p f a h1) (@lem8273590 A B P z w P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273596 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8273597 {A B P : Type'} (z : A) (w : B) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2384 A B P lt2 s P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2414 A B P lt2 s P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273596 A B P lt2 s a f g) (@lem8273593 A B P z w P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273600 {A B P : Type'} (z : A) (w : B) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2385 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2415 A B P s P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8273597 A B P z w lt2 s P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273601 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8273602 {A B P : Type'} (z : A) (w : B) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2386 A B P s P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2416 A B P s P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273601 A) (@lem8273600 A B P z w s P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273607 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2387 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2417 A B P P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8273602 A B P z w s P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273608 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8273609 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2388 A B P P1 P2 G1 z G2 p P' H1 f w H2 g a) = (term2418 A B P P1 P2 G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273608 A P) (@lem8273607 A B P z w P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273614 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2389 A B P P1 G1 z G2 p P' H1 f w H2 g a) = (term2419 A B P P1 G1 G2 P' H1 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8273609 A B P z w P1 P2 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273615 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273616 {A B P : Type'} (z : A) (w : B) (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2390 A B P P1 G1 z G2 p P' H1 f w H2 g a) = (term2420 A B P P1 G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273615 A B P) (@lem8273614 A B P z w P1 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273621 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2391 A B P G1 z G2 p P' H1 f w H2 g a) = (term2421 A B P G1 G2 P' H1 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8273616 A B P z w P1 G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273622 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273623 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2392 A B P G1 z G2 p P' H1 f w H2 g a) = (term2422 A B P G1 G2 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273622 A B P) (@lem8273621 A B P z w G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273628 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2393 A B P G1 z p P' H1 f w H2 g a) = (term2423 A B P G1 P' H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8273623 A B P z w G1 G2 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273629 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273630 {A B P : Type'} (z : A) (w : B) (G1 : type557 A B P) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2394 A B P G1 z p P' H1 f w H2 g a) = (term2424 A B P G1 P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273629 A B P) (@lem8273628 A B P z w G1 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273635 {A B P : Type'} (z : A) (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2395 A B P z p P' H1 f w H2 g a) = (term2425 A B P P' H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8273630 A B P z w G1 P' H1 H2 g p f a h1)). Qed.
Lemma lem8273636 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273637 {A B P : Type'} (z : A) (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2396 A B P z p P' H1 f w H2 g a) = (term2426 A B P P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273636 A B P) (@lem8273635 A B P z w P' H1 H2 g p f a h1)). Qed.
Lemma lem8273642 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2397 A B P p P' H1 f w H2 g a) = (term2427 A B P P' H1 f H2 g a).
Proof. exact (fun_ext (fun z : A => @lem8273637 A B P z w P' H1 H2 g p f a h1)). Qed.
Lemma lem8273643 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8273644 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2398 A B P p P' H1 f w H2 g a) = (term2428 A B P P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273643 A) (@lem8273642 A B P w P' H1 H2 g p f a h1)). Qed.
Lemma lem8273646 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273647 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (@lem8273646 A t). Qed.
Lemma lem8273648 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2428 A B P P' H1 f H2 g a) = (term2426 A B P P' H1 f H2 g a).
Proof. exact (@lem8273647 A (term2426 A B P P' H1 f H2 g a)). Qed.
Lemma lem8273653 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) (h1 : (p f a) = True) : (term2398 A B P p P' H1 f w H2 g a) = (term2426 A B P P' H1 f H2 g a).
Proof. exact (TRANS (@lem8273644 A B P w P' H1 H2 g p f a h1) (@lem8273648 A B P P' H1 f H2 g a)). Qed.
Lemma lem8273654 {A B P : Type'} (p : type560 A B P) (w : B) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2429 A B P p w P' H1 f H2 g a.
Proof. exact (fun h0 : (p f a) = True => @lem8273653 A B P w P' H1 H2 g p f a h0). Qed.
Lemma lem8273655 {A B P : Type'} (p : type560 A B P) (w : B) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2430 A B P p w P' H1 f H2 g a.
Proof. exact (conj (@lem8273468 A B P p P' H1 f w H2 g a) (@lem8273654 A B P p w P' H1 f H2 g a)). Qed.
Lemma lem8273657 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8273658 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) : term2431 A B P w P' H1 H2 g p f a.
Proof. exact (@lem8273657 (term2398 A B P p P' H1 f w H2 g a) (term2426 A B P P' H1 f H2 g a) (p f a) True). Qed.
Lemma lem8273659 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (f : A -> B) (a : P) : (term2398 A B P p P' H1 f w H2 g a) = (term2432 A B P P' H1 H2 g p f a).
Proof. exact (@lem8273658 A B P w P' H1 H2 g p f a (@lem8273655 A B P p w P' H1 f H2 g a)). Qed.
Lemma lem8273661 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8273662 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P p f a) = True.
Proof. exact (@lem8273661 (p f a)). Qed.
Lemma lem8273667 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2433 A B P p P' H1 f H2 g a) = (term2433 A B P p P' H1 f H2 g a).
Proof. exact (eq_refl (term2433 A B P p P' H1 f H2 g a)). Qed.
Lemma lem8273668 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2432 A B P P' H1 H2 g p f a) = (term2434 A B P p P' H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273667 A B P p P' H1 f H2 g a) (@lem8273662 A B P p f a)). Qed.
Lemma lem8273670 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8273671 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2434 A B P p P' H1 f H2 g a) = (term2435 A B P p P' H1 f H2 g a).
Proof. exact (@lem8273670 (term2435 A B P p P' H1 f H2 g a)). Qed.
Lemma lem8273672 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2432 A B P P' H1 H2 g p f a) = (term2435 A B P p P' H1 f H2 g a).
Proof. exact (TRANS (@lem8273668 A B P p P' H1 f H2 g a) (@lem8273671 A B P p P' H1 f H2 g a)). Qed.
Lemma lem8273673 {A B P : Type'} (w : B) (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2398 A B P p P' H1 f w H2 g a) = (term2435 A B P p P' H1 f H2 g a).
Proof. exact (TRANS (@lem8273659 A B P w P' H1 H2 g p f a) (@lem8273672 A B P p P' H1 f H2 g a)). Qed.
Lemma lem8273685 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273686 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273687 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term327 A B P P' f a) = (and False).
Proof. exact (MK_COMB (@lem8273686) (@lem8273685 A B P P' f a h1)). Qed.
Lemma lem8273710 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273711 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2407 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2275 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273687 A B P P' f a h1) (@lem8273710 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273713 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8273714 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2275 A B P P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (@lem8273713 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273715 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2407 A B P P' P1 G1 H1 P2 G2 f H2 g a) = False.
Proof. exact (TRANS (@lem8273711 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8273714 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273716 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273717 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2408 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (imp False).
Proof. exact (MK_COMB (@lem8273716) (@lem8273715 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273719 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273720 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8273721 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1432 A B P P' f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8273720) (@lem8273719 A B P P' f a h1)). Qed.
Lemma lem8273722 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8273723 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1467 A B P P' P2 f a) = (term1468 A B P P2 f a).
Proof. exact (MK_COMB (@lem8273721 A B P P' f a h1) (@lem8273722 A B P P2 f a)). Qed.
Lemma lem8273724 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8273725 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (term1469 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8273723 A B P P2 P' f a h1) (@lem8273724 A B P P1 f a)). Qed.
Lemma lem8273727 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8273728 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8273727 Prop t1 t2). Qed.
Lemma lem8273729 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1469 A B P P2 P1 f a) = (P1 f a).
Proof. exact (@lem8273728 (P2 f a) (P1 f a)). Qed.
Lemma lem8273730 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (P1 f a).
Proof. exact (TRANS (@lem8273725 A B P P2 P1 P' f a h1) (@lem8273729 A B P P2 P1 f a)). Qed.
Lemma lem8273731 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8273732 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2299 A B P P' P2 P1 f a) = (term2118 A B P P1 f a).
Proof. exact (MK_COMB (@lem8273731) (@lem8273730 A B P P2 P1 P' f a h1)). Qed.
Lemma lem8273733 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8273734 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1433 A B P P' P2 P1 f a) = (P2 g a)) = ((P1 f a) = (P2 g a)).
Proof. exact (MK_COMB (@lem8273732 A B P P2 P1 P' f a h1) (@lem8273733 A B P P2 g a)). Qed.
Lemma lem8273737 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273738 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2409 A B P P' P1 f P2 g a) = (term2347 A B P P1 f P2 g a).
Proof. exact (MK_COMB (@lem8273737) (@lem8273734 A B P P1 P2 g P' f a h1)). Qed.
Lemma lem8273740 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273741 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8273742 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1437 A B P P' f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8273741 A) (@lem8273740 A B P P' f a h1)). Qed.
Lemma lem8273743 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8273744 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1470 A B P P' G2 f a) = (term1471 A B P G2 f a).
Proof. exact (MK_COMB (@lem8273742 A B P P' f a h1) (@lem8273743 A B P G2 f a)). Qed.
Lemma lem8273745 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8273746 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (term1472 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8273744 A B P G2 P' f a h1) (@lem8273745 A B P G1 f a)). Qed.
Lemma lem8273748 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8273749 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8273748 A t1 t2). Qed.
Lemma lem8273750 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1472 A B P G2 G1 f a) = (G1 f a).
Proof. exact (@lem8273749 A (G2 f a) (G1 f a)). Qed.
Lemma lem8273751 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (G1 f a).
Proof. exact (TRANS (@lem8273746 A B P G2 G1 P' f a h1) (@lem8273750 A B P G2 G1 f a)). Qed.
Lemma lem8273752 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8273753 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2278 A B P P' G2 G1 f a) = (term2327 A B P G1 f a).
Proof. exact (MK_COMB (@lem8273752 A) (@lem8273751 A B P G2 G1 P' f a h1)). Qed.
Lemma lem8273754 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8273755 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1438 A B P P' G2 G1 f a) = (G2 g a)) = ((G1 f a) = (G2 g a)).
Proof. exact (MK_COMB (@lem8273753 A B P G2 G1 P' f a h1) (@lem8273754 A B P G2 g a)). Qed.
Lemma lem8273758 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273759 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2410 A B P P' G1 f G2 g a) = (term2348 A B P G1 f G2 g a).
Proof. exact (MK_COMB (@lem8273758) (@lem8273755 A B P G1 G2 g P' f a h1)). Qed.
Lemma lem8273761 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8273762 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8273763 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2043 A B P P' f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8273762 B) (@lem8273761 A B P P' f a h1)). Qed.
Lemma lem8273764 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8273765 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2128 A B P P' H2 f a) = (term2129 A B P H2 f a).
Proof. exact (MK_COMB (@lem8273763 A B P P' f a h1) (@lem8273764 A B P H2 f a)). Qed.
Lemma lem8273766 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (H1 f a) = (H1 f a).
Proof. exact (eq_refl (H1 f a)). Qed.
Lemma lem8273767 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' H2 H1 f a) = (term2130 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8273765 A B P H2 P' f a h1) (@lem8273766 A B P H1 f a)). Qed.
Lemma lem8273769 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8273770 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8273769 B t1 t2). Qed.
Lemma lem8273771 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2130 A B P H2 H1 f a) = (H1 f a).
Proof. exact (@lem8273770 B (H2 f a) (H1 f a)). Qed.
Lemma lem8273772 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' H2 H1 f a) = (H1 f a).
Proof. exact (TRANS (@lem8273767 A B P H2 H1 P' f a h1) (@lem8273771 A B P H2 H1 f a)). Qed.
Lemma lem8273773 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8273774 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1069 A B P P' H2 H1 f a) = (term2329 A B P H1 f a).
Proof. exact (MK_COMB (@lem8273773 B) (@lem8273772 A B P H2 H1 P' f a h1)). Qed.
Lemma lem8273775 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8273776 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1064 A B P P' H2 H1 f a) = (H2 g a)) = ((H1 f a) = (H2 g a)).
Proof. exact (MK_COMB (@lem8273774 A B P H2 H1 P' f a h1) (@lem8273775 A B P H2 g a)). Qed.
Lemma lem8273779 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2411 A B P G1 G2 P' H1 f H2 g a) = (term2349 A B P G1 G2 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273759 A B P G1 G2 g P' f a h1) (@lem8273776 A B P H1 H2 g P' f a h1)). Qed.
Lemma lem8273782 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2412 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2350 A B P P1 P2 G1 G2 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273738 A B P P1 P2 g P' f a h1) (@lem8273779 A B P G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273785 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2413 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2351 A B P P1 P2 G1 G2 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273717 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8273782 A B P P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273787 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8273788 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2351 A B P P1 P2 G1 G2 H1 f H2 g a) = True.
Proof. exact (@lem8273787 (term2350 A B P P1 P2 G1 G2 H1 f H2 g a)). Qed.
Lemma lem8273789 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2413 A B P P1 P2 G1 G2 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273785 A B P P1 P2 G1 G2 H1 H2 g P' f a h1) (@lem8273788 A B P P1 P2 G1 G2 H1 f H2 g a)). Qed.
Lemma lem8273790 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8273791 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2414 A B P lt2 s P1 P2 G1 G2 P' H1 f H2 g a) = (term2261 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8273790 A B P lt2 s a f g) (@lem8273789 A B P P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273793 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8273794 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2261 A B P lt2 s a f g) = True.
Proof. exact (@lem8273793 (term162 A B P lt2 s a f g)). Qed.
Lemma lem8273795 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2414 A B P lt2 s P1 P2 G1 G2 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273791 A B P P1 P2 G1 G2 H1 H2 lt2 s g P' f a h1) (@lem8273794 A B P lt2 s a f g)). Qed.
Lemma lem8273796 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2415 A B P s P1 P2 G1 G2 P' H1 f H2 g a) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8273795 A B P lt2 s P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273797 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8273798 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2416 A B P s P1 P2 G1 G2 P' H1 f H2 g a) = (term2263 A).
Proof. exact (MK_COMB (@lem8273797 A) (@lem8273796 A B P s P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273800 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273801 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8273800 (type1402 A) t). Qed.
Lemma lem8273802 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8273801 A True). Qed.
Lemma lem8273803 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2416 A B P s P1 P2 G1 G2 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273798 A B P s P1 P2 G1 G2 H1 H2 g P' f a h1) (@lem8273802 A)). Qed.
Lemma lem8273804 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2417 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8273803 A B P s P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273805 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8273806 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2418 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2266 A P).
Proof. exact (MK_COMB (@lem8273805 A P) (@lem8273804 A B P P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273808 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273809 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8273808 (P -> A) t). Qed.
Lemma lem8273810 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8273809 A P True). Qed.
Lemma lem8273811 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2418 A B P P1 P2 G1 G2 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273806 A B P P1 P2 G1 G2 H1 H2 g P' f a h1) (@lem8273810 A P)). Qed.
Lemma lem8273812 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2419 A B P P1 G1 G2 P' H1 f H2 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8273811 A B P P1 P2 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273813 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273814 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2420 A B P P1 G1 G2 P' H1 f H2 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273813 A B P) (@lem8273812 A B P P1 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273816 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273817 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273816 (type560 A B P) t). Qed.
Lemma lem8273818 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273817 A B P True). Qed.
Lemma lem8273819 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2420 A B P P1 G1 G2 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273814 A B P P1 G1 G2 H1 H2 g P' f a h1) (@lem8273818 A B P)). Qed.
Lemma lem8273820 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2421 A B P G1 G2 P' H1 f H2 g a) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8273819 A B P P1 G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273821 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273822 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2422 A B P G1 G2 P' H1 f H2 g a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8273821 A B P) (@lem8273820 A B P G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273824 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273825 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8273824 (type560 A B P) t). Qed.
Lemma lem8273826 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8273825 A B P True). Qed.
Lemma lem8273827 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2422 A B P G1 G2 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273822 A B P G1 G2 H1 H2 g P' f a h1) (@lem8273826 A B P)). Qed.
Lemma lem8273828 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2423 A B P G1 P' H1 f H2 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8273827 A B P G1 G2 H1 H2 g P' f a h1)). Qed.
Lemma lem8273829 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273830 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2424 A B P G1 P' H1 f H2 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273829 A B P) (@lem8273828 A B P G1 H1 H2 g P' f a h1)). Qed.
Lemma lem8273832 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273833 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273832 (type557 A B P) t). Qed.
Lemma lem8273834 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273833 A B P True). Qed.
Lemma lem8273835 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2424 A B P G1 P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273830 A B P G1 H1 H2 g P' f a h1) (@lem8273834 A B P)). Qed.
Lemma lem8273836 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2425 A B P P' H1 f H2 g a) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8273835 A B P G1 H1 H2 g P' f a h1)). Qed.
Lemma lem8273837 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273838 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2426 A B P P' H1 f H2 g a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8273837 A B P) (@lem8273836 A B P H1 H2 g P' f a h1)). Qed.
Lemma lem8273840 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8273841 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8273840 (type557 A B P) t). Qed.
Lemma lem8273842 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8273841 A B P True). Qed.
Lemma lem8273843 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2426 A B P P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273838 A B P H1 H2 g P' f a h1) (@lem8273842 A B P)). Qed.
Lemma lem8273844 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8273845 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2435 A B P p P' H1 f H2 g a) = (term2287 A B P p f a).
Proof. exact (MK_COMB (@lem8273844 A B P p f a) (@lem8273843 A B P H1 H2 g P' f a h1)). Qed.
Lemma lem8273847 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8273848 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term2287 A B P p f a) = True.
Proof. exact (@lem8273847 (term373 A B P p f a)). Qed.
Lemma lem8273849 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2435 A B P p P' H1 f H2 g a) = True.
Proof. exact (TRANS (@lem8273845 A B P H1 H2 g p P' f a h1) (@lem8273848 A B P p f a)). Qed.
Lemma lem8273850 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2436 A B P p P' H1 f H2 g a.
Proof. exact (fun h0 : (P' f a) = False => @lem8273849 A B P p H1 H2 g P' f a h0). Qed.
Lemma lem8273860 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273861 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273862 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term327 A B P P' f a) = (and True).
Proof. exact (MK_COMB (@lem8273861) (@lem8273860 A B P P' f a h1)). Qed.
Lemma lem8273885 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273886 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2407 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2256 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273862 A B P P' f a h1) (@lem8273885 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273888 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8273889 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2256 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8273888 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273892 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2407 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2027 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8273886 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8273889 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8273893 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8273894 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2408 A B P P' P1 G1 H1 P2 G2 f H2 g a) = (term2257 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273893) (@lem8273892 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273896 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273897 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8273898 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1432 A B P P' f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8273897) (@lem8273896 A B P P' f a h1)). Qed.
Lemma lem8273899 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8273900 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1467 A B P P' P2 f a) = (term1481 A B P P2 f a).
Proof. exact (MK_COMB (@lem8273898 A B P P' f a h1) (@lem8273899 A B P P2 f a)). Qed.
Lemma lem8273901 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8273902 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (term1482 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8273900 A B P P2 P' f a h1) (@lem8273901 A B P P1 f a)). Qed.
Lemma lem8273904 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273905 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8273904 Prop t2 t1). Qed.
Lemma lem8273906 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) : (term1482 A B P P2 P1 f a) = (P2 f a).
Proof. exact (@lem8273905 (P1 f a) (P2 f a)). Qed.
Lemma lem8273907 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (P2 f a).
Proof. exact (TRANS (@lem8273902 A B P P2 P1 P' f a h1) (@lem8273906 A B P P1 P2 f a)). Qed.
Lemma lem8273908 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8273909 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2299 A B P P' P2 P1 f a) = (term2118 A B P P2 f a).
Proof. exact (MK_COMB (@lem8273908) (@lem8273907 A B P P1 P2 P' f a h1)). Qed.
Lemma lem8273910 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (P2 g a).
Proof. exact (eq_refl (P2 g a)). Qed.
Lemma lem8273911 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1433 A B P P' P2 P1 f a) = (P2 g a)) = ((P2 f a) = (P2 g a)).
Proof. exact (MK_COMB (@lem8273909 A B P P1 P2 P' f a h1) (@lem8273910 A B P P2 g a)). Qed.
Lemma lem8273914 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273915 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2409 A B P P' P1 f P2 g a) = (term2017 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8273914) (@lem8273911 A B P P1 P2 g P' f a h1)). Qed.
Lemma lem8273917 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273918 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8273919 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1437 A B P P' f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8273918 A) (@lem8273917 A B P P' f a h1)). Qed.
Lemma lem8273920 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8273921 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1470 A B P P' G2 f a) = (term1483 A B P G2 f a).
Proof. exact (MK_COMB (@lem8273919 A B P P' f a h1) (@lem8273920 A B P G2 f a)). Qed.
Lemma lem8273922 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8273923 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (term1484 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8273921 A B P G2 P' f a h1) (@lem8273922 A B P G1 f a)). Qed.
Lemma lem8273925 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273926 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8273925 A t2 t1). Qed.
Lemma lem8273927 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1484 A B P G2 G1 f a) = (G2 f a).
Proof. exact (@lem8273926 A (G1 f a) (G2 f a)). Qed.
Lemma lem8273928 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (G2 f a).
Proof. exact (TRANS (@lem8273923 A B P G2 G1 P' f a h1) (@lem8273927 A B P G1 G2 f a)). Qed.
Lemma lem8273929 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8273930 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2278 A B P P' G2 G1 f a) = (term2327 A B P G2 f a).
Proof. exact (MK_COMB (@lem8273929 A) (@lem8273928 A B P G1 G2 P' f a h1)). Qed.
Lemma lem8273931 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (G2 g a).
Proof. exact (eq_refl (G2 g a)). Qed.
Lemma lem8273932 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1438 A B P P' G2 G1 f a) = (G2 g a)) = ((G2 f a) = (G2 g a)).
Proof. exact (MK_COMB (@lem8273930 A B P G1 G2 P' f a h1) (@lem8273931 A B P G2 g a)). Qed.
Lemma lem8273935 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8273936 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2410 A B P P' G1 f G2 g a) = (term2328 A B P f G2 g a).
Proof. exact (MK_COMB (@lem8273935) (@lem8273932 A B P G1 G2 g P' f a h1)). Qed.
Lemma lem8273938 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8273939 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8273940 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2043 A B P P' f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8273939 B) (@lem8273938 A B P P' f a h1)). Qed.
Lemma lem8273941 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8273942 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2128 A B P P' H2 f a) = (term2162 A B P H2 f a).
Proof. exact (MK_COMB (@lem8273940 A B P P' f a h1) (@lem8273941 A B P H2 f a)). Qed.
Lemma lem8273943 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (H1 f a) = (H1 f a).
Proof. exact (eq_refl (H1 f a)). Qed.
Lemma lem8273944 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' H2 H1 f a) = (term2163 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8273942 A B P H2 P' f a h1) (@lem8273943 A B P H1 f a)). Qed.
Lemma lem8273946 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8273947 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8273946 B t2 t1). Qed.
Lemma lem8273948 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term2163 A B P H2 H1 f a) = (H2 f a).
Proof. exact (@lem8273947 B (H1 f a) (H2 f a)). Qed.
Lemma lem8273949 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' H2 H1 f a) = (H2 f a).
Proof. exact (TRANS (@lem8273944 A B P H2 H1 P' f a h1) (@lem8273948 A B P H1 H2 f a)). Qed.
Lemma lem8273950 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8273951 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1069 A B P P' H2 H1 f a) = (term2329 A B P H2 f a).
Proof. exact (MK_COMB (@lem8273950 B) (@lem8273949 A B P H1 H2 P' f a h1)). Qed.
Lemma lem8273952 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (H2 g a).
Proof. exact (eq_refl (H2 g a)). Qed.
Lemma lem8273953 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1064 A B P P' H2 H1 f a) = (H2 g a)) = ((H2 f a) = (H2 g a)).
Proof. exact (MK_COMB (@lem8273951 A B P H1 H2 P' f a h1) (@lem8273952 A B P H2 g a)). Qed.
Lemma lem8273956 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2411 A B P G1 G2 P' H1 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273936 A B P G1 G2 g P' f a h1) (@lem8273953 A B P H1 H2 g P' f a h1)). Qed.
Lemma lem8273959 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2412 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2024 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273915 A B P P1 P2 g P' f a h1) (@lem8273956 A B P G1 H1 G2 H2 g P' f a h1)). Qed.
Lemma lem8273962 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2413 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2437 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273894 A B P P1 G1 H1 P2 G2 H2 g P' f a h1) (@lem8273959 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273965 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (eq_refl (term167 A B P lt2 s a f g)). Qed.
Lemma lem8273966 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2414 A B P lt2 s P1 P2 G1 G2 P' H1 f H2 g a) = (term2438 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273965 A B P lt2 s a f g) (@lem8273962 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273969 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2415 A B P s P1 P2 G1 G2 P' H1 f H2 g a) = (term2439 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8273966 A B P lt2 s P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273970 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8273971 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2416 A B P s P1 P2 G1 G2 P' H1 f H2 g a) = (term2440 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273970 A) (@lem8273969 A B P s P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273976 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2417 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2441 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8273971 A B P s P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273977 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8273978 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2418 A B P P1 P2 G1 G2 P' H1 f H2 g a) = (term2442 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273977 A P) (@lem8273976 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273983 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2419 A B P P1 G1 G2 P' H1 f H2 g a) = (term2443 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8273978 A B P P1 G1 H1 P2 G2 H2 g P' f a h1)). Qed.
Lemma lem8273984 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273985 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2420 A B P P1 G1 G2 P' H1 f H2 g a) = (term2444 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273984 A B P) (@lem8273983 A B P P1 G1 H1 G2 H2 g P' f a h1)). Qed.
Lemma lem8273990 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2421 A B P G1 G2 P' H1 f H2 g a) = (term2445 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8273985 A B P P1 G1 H1 G2 H2 g P' f a h1)). Qed.
Lemma lem8273991 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8273992 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2422 A B P G1 G2 P' H1 f H2 g a) = (term2446 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8273991 A B P) (@lem8273990 A B P G1 H1 G2 H2 g P' f a h1)). Qed.
Lemma lem8273997 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2423 A B P G1 P' H1 f H2 g a) = (term2447 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8273992 A B P G1 H1 G2 H2 g P' f a h1)). Qed.
Lemma lem8273998 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8273999 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2424 A B P G1 P' H1 f H2 g a) = (term2448 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8273998 A B P) (@lem8273997 A B P G1 H1 H2 g P' f a h1)). Qed.
Lemma lem8274004 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2425 A B P P' H1 f H2 g a) = (term2449 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8273999 A B P G1 H1 H2 g P' f a h1)). Qed.
Lemma lem8274005 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8274006 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2426 A B P P' H1 f H2 g a) = (term2450 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274005 A B P) (@lem8274004 A B P H1 H2 g P' f a h1)). Qed.
Lemma lem8274011 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8274012 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2435 A B P p P' H1 f H2 g a) = (term2451 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274011 A B P p f a) (@lem8274006 A B P H1 H2 g P' f a h1)). Qed.
Lemma lem8274015 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2452 A B P P' p H1 f H2 g a.
Proof. exact (fun h0 : (P' f a) = True => @lem8274012 A B P p H1 H2 g P' f a h0). Qed.
Lemma lem8274016 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : term2453 A B P P' p H1 f H2 g a.
Proof. exact (conj (@lem8273850 A B P p P' H1 f H2 g a) (@lem8274015 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274018 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8274019 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) : term2454 A B P p H1 H2 g P' f a.
Proof. exact (@lem8274018 (term2435 A B P p P' H1 f H2 g a) (term2451 A B P p H1 f H2 g a) (P' f a) True). Qed.
Lemma lem8274020 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (P' : type560 A B P) (f : A -> B) (a : P) : (term2435 A B P p P' H1 f H2 g a) = (term2455 A B P p H1 H2 g P' f a).
Proof. exact (@lem8274019 A B P p H1 H2 g P' f a (@lem8274016 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274022 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8274023 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P P' f a) = True.
Proof. exact (@lem8274022 (P' f a)). Qed.
Lemma lem8274028 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2456 A B P P' p H1 f H2 g a) = (term2456 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term2456 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274029 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2455 A B P p H1 H2 g P' f a) = (term2457 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274028 A B P P' p H1 f H2 g a) (@lem8274023 A B P P' f a)). Qed.
Lemma lem8274031 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8274032 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2457 A B P P' p H1 f H2 g a) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (@lem8274031 (term2458 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274033 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2455 A B P p H1 H2 g P' f a) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8274029 A B P P' p H1 f H2 g a) (@lem8274032 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274034 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2435 A B P p P' H1 f H2 g a) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8274020 A B P p H1 H2 g P' f a) (@lem8274033 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274079 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2437 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2437 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2437 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274084 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term325 A B P lt2 s a f g z).
Proof. exact (eq_refl (term325 A B P lt2 s a f g z)). Qed.
Lemma lem8274085 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term326 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8274084 A B P lt2 s a f g z)). Qed.
Lemma lem8274086 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8274087 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term162 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8274086 A) (@lem8274085 A B P lt2 s a f g)). Qed.
Lemma lem8274088 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8274089 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term167 A B P lt2 s a f g) = (term167 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8274088) (@lem8274087 A B P lt2 s a f g)). Qed.
Lemma lem8274090 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2438 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term2438 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274089 A B P lt2 s a f g) (@lem8274079 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274091 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2439 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2439 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8274090 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274092 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8274093 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2440 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2440 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274092 A) (@lem8274091 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274094 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2441 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2441 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8274093 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274095 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8274096 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2442 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2442 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274095 A P) (@lem8274094 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274097 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2443 A B P P1 G1 H1 G2 f H2 g a) = (term2443 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8274096 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274098 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274099 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2444 A B P P1 G1 H1 G2 f H2 g a) = (term2444 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274098 A B P) (@lem8274097 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274100 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2445 A B P G1 H1 G2 f H2 g a) = (term2445 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8274099 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274101 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274102 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2446 A B P G1 H1 G2 f H2 g a) = (term2446 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274101 A B P) (@lem8274100 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274103 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2447 A B P G1 H1 f H2 g a) = (term2447 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8274102 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274104 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8274105 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2448 A B P G1 H1 f H2 g a) = (term2448 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274104 A B P) (@lem8274103 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274106 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2449 A B P H1 f H2 g a) = (term2449 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8274105 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274107 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8274108 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2450 A B P H1 f H2 g a) = (term2450 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274107 A B P) (@lem8274106 A B P H1 f H2 g a)). Qed.
Lemma lem8274113 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term351 A B P p f a) = (term351 A B P p f a).
Proof. exact (eq_refl (term351 A B P p f a)). Qed.
Lemma lem8274114 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2451 A B P p H1 f H2 g a) = (term2451 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274113 A B P p f a) (@lem8274108 A B P H1 f H2 g a)). Qed.
Lemma lem8274119 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term351 A B P P' f a) = (term351 A B P P' f a).
Proof. exact (eq_refl (term351 A B P P' f a)). Qed.
Lemma lem8274120 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2458 A B P P' p H1 f H2 g a) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274119 A B P P' f a) (@lem8274114 A B P p H1 f H2 g a)). Qed.
Lemma lem8274121 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2459 A B P p P' H1 f H2 g a) = (term2459 A B P p P' H1 f H2 g a).
Proof. exact (eq_refl (term2459 A B P p P' H1 f H2 g a)). Qed.
Lemma lem8274122 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2435 A B P p P' H1 f H2 g a) = (term2458 A B P P' p H1 f H2 g a)) = ((term2435 A B P p P' H1 f H2 g a) = (term2458 A B P P' p H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8274121 A B P p P' H1 f H2 g a) (@lem8274120 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274123 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2435 A B P p P' H1 f H2 g a) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (EQ_MP (@lem8274122 A B P P' p H1 f H2 g a) (@lem8274034 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274124 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2460 A B P p P' H1 f w H2 g a) = (term2460 A B P p P' H1 f w H2 g a).
Proof. exact (eq_refl (term2460 A B P p P' H1 f w H2 g a)). Qed.
Lemma lem8274125 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2398 A B P p P' H1 f w H2 g a) = (term2435 A B P p P' H1 f H2 g a)) = ((term2398 A B P p P' H1 f w H2 g a) = (term2458 A B P P' p H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8274124 A B P p P' H1 f w H2 g a) (@lem8274123 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274126 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2398 A B P p P' H1 f w H2 g a) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (EQ_MP (@lem8274125 A B P w P' p H1 f H2 g a) (@lem8273673 A B P w p P' H1 f H2 g a)). Qed.
Lemma lem8274127 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2399 A B P p P' H1 w H2 g a) = (term2461 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8274126 A B P w P' p H1 f H2 g a)). Qed.
Lemma lem8274128 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8274129 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2400 A B P p P' H1 w H2 g a) = (term2462 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274128 A B) (@lem8274127 A B P w P' p H1 H2 g a)). Qed.
Lemma lem8274134 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term351 A B P p g a) = (term351 A B P p g a).
Proof. exact (eq_refl (term351 A B P p g a)). Qed.
Lemma lem8274135 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2463 A B P p P' H1 w H2 g a) = (term2464 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274134 A B P p g a) (@lem8274129 A B P w P' p H1 H2 g a)). Qed.
Lemma lem8274136 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274137 {A B P : Type'} (w : B) (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2465 A B P p P' H1 w H2 g a) = (term2466 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274136) (@lem8274135 A B P w P' p H1 H2 g a)). Qed.
Lemma lem8274138 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) : (term2404 A B P g p P' H2 H1 a w) = (term2467 A B P P' H1 H2 p g a).
Proof. exact (MK_COMB (@lem8274137 A B P w P' p H1 H2 g a) (@lem8273270 A B P P' H2 H1 w p g a)). Qed.
Lemma lem8274139 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (p : type560 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2468 A B P P' H1 p H2 g a w) = (term2468 A B P P' H1 p H2 g a w).
Proof. exact (eq_refl (term2468 A B P P' H1 p H2 g a w)). Qed.
Lemma lem8274140 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) : ((term2183 A B P P' H1 p H2 g a w) = (term2404 A B P g p P' H2 H1 a w)) = ((term2183 A B P P' H1 p H2 g a w) = (term2467 A B P P' H1 H2 p g a)).
Proof. exact (MK_COMB (@lem8274139 A B P P' H1 p H2 g a w) (@lem8274138 A B P w P' H1 H2 p g a)). Qed.
Lemma lem8274141 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (p : type560 A B P) (g : A -> B) (a : P) : (term2183 A B P P' H1 p H2 g a w) = (term2467 A B P P' H1 H2 p g a).
Proof. exact (EQ_MP (@lem8274140 A B P w P' H1 H2 p g a) (@lem8272867 A B P g p P' H2 H1 a w)). Qed.
Lemma lem8274142 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2184 A B P P' H1 H2 g a w) = (term2469 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8274141 A B P w P' H1 H2 p g a)). Qed.
Lemma lem8274143 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274144 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2185 A B P P' H1 H2 g a w) = (term2470 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274143 A B P) (@lem8274142 A B P w P' H1 H2 g a)). Qed.
Lemma lem8274149 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term351 A B P P' g a) = (term351 A B P P' g a).
Proof. exact (eq_refl (term351 A B P P' g a)). Qed.
Lemma lem8274150 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2471 A B P P' H1 H2 g a w) = (term2472 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274149 A B P P' g a) (@lem8274144 A B P w P' H1 H2 g a)). Qed.
Lemma lem8274151 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274152 {A B P : Type'} (w : B) (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2473 A B P P' H1 H2 g a w) = (term2474 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274151) (@lem8274150 A B P w P' H1 H2 g a)). Qed.
Lemma lem8274153 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2189 A B P P' H2 H1 g a w) = (term2475 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8274152 A B P w P' H1 H2 g a) (@lem8272460 A B P w P' H2 H1 g a)). Qed.
Lemma lem8274154 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term2476 A B P P' H2 H1 g a w) = (term2476 A B P P' H2 H1 g a w).
Proof. exact (eq_refl (term2476 A B P P' H2 H1 g a w)). Qed.
Lemma lem8274155 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2093 A B P P' H2 H1 g a w) = (term2189 A B P P' H2 H1 g a w)) = ((term2093 A B P P' H2 H1 g a w) = (term2475 A B P P' H2 H1 g a)).
Proof. exact (MK_COMB (@lem8274154 A B P P' H2 H1 g a w) (@lem8274153 A B P w P' H2 H1 g a)). Qed.
Lemma lem8274156 {A B P : Type'} (w : B) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2093 A B P P' H2 H1 g a w) = (term2475 A B P P' H2 H1 g a).
Proof. exact (EQ_MP (@lem8274155 A B P w P' H2 H1 g a) (@lem8270764 A B P P' H2 H1 g a w)). Qed.
Lemma lem8274157 {A B P : Type'} (w : B) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2095 A B P H2 H1 g a w) = (term2477 A B P H2 H1 g a).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8274156 A B P w P' H2 H1 g a)). Qed.
Lemma lem8274158 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274159 {A B P : Type'} (w : B) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2097 A B P H2 H1 g a w) = (term2478 A B P H2 H1 g a).
Proof. exact (MK_COMB (@lem8274158 A B P) (@lem8274157 A B P w H2 H1 g a)). Qed.
Lemma lem8274160 {A B P : Type'} (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2099 A B P H1 g a w) = (term2479 A B P H1 g a).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8274159 A B P w H2 H1 g a)). Qed.
Lemma lem8274161 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8274162 {A B P : Type'} (w : B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2101 A B P H1 g a w) = (term2480 A B P H1 g a).
Proof. exact (MK_COMB (@lem8274161 A B P) (@lem8274160 A B P w H1 g a)). Qed.
Lemma lem8274163 {A B P : Type'} (w : B) (g : A -> B) (a : P) : (term2103 A B P g a w) = (term2481 A B P g a).
Proof. exact (fun_ext (fun H1 : type558 A B P => @lem8274162 A B P w H1 g a)). Qed.
Lemma lem8274164 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8274165 {A B P : Type'} (w : B) (g : A -> B) (a : P) : (term2105 A B P g a w) = (term2482 A B P g a).
Proof. exact (MK_COMB (@lem8274164 A B P) (@lem8274163 A B P w g a)). Qed.
Lemma lem8274166 {A B P : Type'} (w : B) (a : P) : (term2107 A B P a w) = (term2483 A B P a).
Proof. exact (fun_ext (fun g : A -> B => @lem8274165 A B P w g a)). Qed.
Lemma lem8274167 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8274168 {A B P : Type'} (w : B) (a : P) : (term2109 A B P a w) = (term2484 A B P a).
Proof. exact (MK_COMB (@lem8274167 A B) (@lem8274166 A B P w a)). Qed.
Lemma lem8274169 {A B P : Type'} (w : B) : (term2111 A B P w) = (term2485 A B P).
Proof. exact (fun_ext (fun a : P => @lem8274168 A B P w a)). Qed.
Lemma lem8274170 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8274171 {A B P : Type'} (w : B) : (term2113 A B P w) = (term2486 A B P).
Proof. exact (MK_COMB (@lem8274170 P) (@lem8274169 A B P w)). Qed.
Lemma lem8274172 {A B P : Type'} : (term2115 A B P) = (term2487 A B P).
Proof. exact (fun_ext (fun w : B => @lem8274171 A B P w)). Qed.
Lemma lem8274173 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem8274174 {A B P : Type'} : (term2117 A B P) = (term2488 A B P).
Proof. exact (MK_COMB (@lem8274173 B) (@lem8274172 A B P)). Qed.
Lemma lem8274175 {A B P : Type'} : (term2116 A B P) = (term2488 A B P).
Proof. exact (TRANS (@lem8270339 A B P) (@lem8274174 A B P)). Qed.
Lemma lem8274177 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8274178 {B : Type'} (t : Prop) : (term1445 B t) = t.
Proof. exact (@lem8274177 B t). Qed.
Lemma lem8274179 {A B P : Type'} : (term2488 A B P) = (term2486 A B P).
Proof. exact (@lem8274178 B (term2486 A B P)). Qed.
Lemma lem8274299 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8274300 {A B : Type'} (t : Prop) : (term2489 A B t) = t.
Proof. exact (@lem8274299 (A -> B) t). Qed.
Lemma lem8274301 {A B : Type'} : (term2290 A B) = True.
Proof. exact (@lem8274300 A B True). Qed.
Lemma lem8274302 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term628 A B P p g a) = (term628 A B P p g a).
Proof. exact (eq_refl (term628 A B P p g a)). Qed.
Lemma lem8274303 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2292 A B P p g a) = (term1463 A B P p g a).
Proof. exact (MK_COMB (@lem8274302 A B P p g a) (@lem8274301 A B)). Qed.
Lemma lem8274305 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem21750 t)). Qed.
Lemma lem8274306 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1463 A B P p g a) = True.
Proof. exact (@lem8274305 (p g a)). Qed.
Lemma lem8274307 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2292 A B P p g a) = True.
Proof. exact (TRANS (@lem8274303 A B P p g a) (@lem8274306 A B P p g a)). Qed.
Lemma lem8274308 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2466 A B P P' p H1 H2 g a) = (term2466 A B P P' p H1 H2 g a).
Proof. exact (eq_refl (term2466 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274309 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2467 A B P P' H1 H2 p g a) = (term2490 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274308 A B P P' p H1 H2 g a) (@lem8274307 A B P p g a)). Qed.
Lemma lem8274311 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem8274312 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2490 A B P P' p H1 H2 g a) = (term2464 A B P P' p H1 H2 g a).
Proof. exact (@lem8274311 (term2464 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274387 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2467 A B P P' H1 H2 p g a) = (term2464 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8274309 A B P P' p H1 H2 g a) (@lem8274312 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274388 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2469 A B P P' H1 H2 g a) = (term2491 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8274387 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274389 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274390 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2470 A B P P' H1 H2 g a) = (term2492 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274389 A B P) (@lem8274388 A B P P' H1 H2 g a)). Qed.
Lemma lem8274397 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term351 A B P P' g a) = (term351 A B P P' g a).
Proof. exact (eq_refl (term351 A B P P' g a)). Qed.
Lemma lem8274398 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2472 A B P P' H1 H2 g a) = (term2493 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274397 A B P P' g a) (@lem8274390 A B P P' H1 H2 g a)). Qed.
Lemma lem8274401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274402 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2474 A B P P' H1 H2 g a) = (term2494 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274401) (@lem8274398 A B P P' H1 H2 g a)). Qed.
Lemma lem8274490 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8274491 {A B : Type'} (t : Prop) : (term2489 A B t) = t.
Proof. exact (@lem8274490 (A -> B) t). Qed.
Lemma lem8274492 {A B : Type'} : (term2290 A B) = True.
Proof. exact (@lem8274491 A B True). Qed.
Lemma lem8274493 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term628 A B P p g a) = (term628 A B P p g a).
Proof. exact (eq_refl (term628 A B P p g a)). Qed.
Lemma lem8274494 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2292 A B P p g a) = (term1463 A B P p g a).
Proof. exact (MK_COMB (@lem8274493 A B P p g a) (@lem8274492 A B)). Qed.
Lemma lem8274496 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem21750 t)). Qed.
Lemma lem8274497 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1463 A B P p g a) = True.
Proof. exact (@lem8274496 (p g a)). Qed.
Lemma lem8274498 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term2292 A B P p g a) = True.
Proof. exact (TRANS (@lem8274494 A B P p g a) (@lem8274497 A B P p g a)). Qed.
Lemma lem8274499 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2365 A B P P' p H2 H1 g a) = (term2365 A B P P' p H2 H1 g a).
Proof. exact (eq_refl (term2365 A B P P' p H2 H1 g a)). Qed.
Lemma lem8274500 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2366 A B P P' H2 H1 p g a) = (term2495 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8274499 A B P P' p H2 H1 g a) (@lem8274498 A B P p g a)). Qed.
Lemma lem8274502 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem8274503 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2495 A B P P' p H2 H1 g a) = (term2363 A B P P' p H2 H1 g a).
Proof. exact (@lem8274502 (term2363 A B P P' p H2 H1 g a)). Qed.
Lemma lem8274578 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2366 A B P P' H2 H1 p g a) = (term2363 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8274500 A B P P' p H2 H1 g a) (@lem8274503 A B P P' p H2 H1 g a)). Qed.
Lemma lem8274579 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2368 A B P P' H2 H1 g a) = (term2496 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8274578 A B P P' p H2 H1 g a)). Qed.
Lemma lem8274580 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274581 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2369 A B P P' H2 H1 g a) = (term2497 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8274580 A B P) (@lem8274579 A B P P' H2 H1 g a)). Qed.
Lemma lem8274588 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term628 A B P P' g a) = (term628 A B P P' g a).
Proof. exact (eq_refl (term628 A B P P' g a)). Qed.
Lemma lem8274589 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2371 A B P P' H2 H1 g a) = (term2498 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8274588 A B P P' g a) (@lem8274581 A B P P' H2 H1 g a)). Qed.
Lemma lem8274592 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2475 A B P P' H2 H1 g a) = (term2499 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8274402 A B P P' H1 H2 g a) (@lem8274589 A B P P' H2 H1 g a)). Qed.
Lemma lem8274595 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2477 A B P H2 H1 g a) = (term2500 A B P H2 H1 g a).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8274592 A B P P' H2 H1 g a)). Qed.
Lemma lem8274596 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274597 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2478 A B P H2 H1 g a) = (term2501 A B P H2 H1 g a).
Proof. exact (MK_COMB (@lem8274596 A B P) (@lem8274595 A B P H2 H1 g a)). Qed.
Lemma lem8274604 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (term2479 A B P H1 g a) = (term2502 A B P H1 g a).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8274597 A B P H2 H1 g a)). Qed.
Lemma lem8274605 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8274606 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : (term2480 A B P H1 g a) = (term2503 A B P H1 g a).
Proof. exact (MK_COMB (@lem8274605 A B P) (@lem8274604 A B P H1 g a)). Qed.
Lemma lem8274613 {A B P : Type'} (g : A -> B) (a : P) : (term2481 A B P g a) = (term2504 A B P g a).
Proof. exact (fun_ext (fun H1 : type558 A B P => @lem8274606 A B P H1 g a)). Qed.
Lemma lem8274614 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8274615 {A B P : Type'} (g : A -> B) (a : P) : (term2482 A B P g a) = (term2505 A B P g a).
Proof. exact (MK_COMB (@lem8274614 A B P) (@lem8274613 A B P g a)). Qed.
Lemma lem8274622 {A B P : Type'} (a : P) : (term2483 A B P a) = (term2506 A B P a).
Proof. exact (fun_ext (fun g : A -> B => @lem8274615 A B P g a)). Qed.
Lemma lem8274623 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8274624 {A B P : Type'} (a : P) : (term2484 A B P a) = (term2507 A B P a).
Proof. exact (MK_COMB (@lem8274623 A B) (@lem8274622 A B P a)). Qed.
Lemma lem8274631 {A B P : Type'} : (term2485 A B P) = (term2508 A B P).
Proof. exact (fun_ext (fun a : P => @lem8274624 A B P a)). Qed.
Lemma lem8274632 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8274633 {A B P : Type'} : (term2486 A B P) = (term2509 A B P).
Proof. exact (MK_COMB (@lem8274632 P) (@lem8274631 A B P)). Qed.
Lemma lem8274640 {A B P : Type'} : (term2488 A B P) = (term2509 A B P).
Proof. exact (TRANS (@lem8274179 A B P) (@lem8274633 A B P)). Qed.
Lemma lem8274641 {A B P : Type'} : (term2116 A B P) = (term2509 A B P).
Proof. exact (TRANS (@lem8274175 A B P) (@lem8274640 A B P)). Qed.
Lemma lem8274642 {A B P : Type'} : (term2509 A B P) = (term2116 A B P).
Proof. exact (SYM (@lem8274641 A B P)). Qed.
Lemma lem8274644 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8274645 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2499 A B P P' H2 H1 g a) = (term2510 A B P P' H2 H1 g a).
Proof. exact (@lem8274644 (term2499 A B P P' H2 H1 g a)). Qed.
Lemma lem8274646 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2510 A B P P' H2 H1 g a) = (term2499 A B P P' H2 H1 g a).
Proof. exact (SYM (@lem8274645 A B P P' H2 H1 g a)). Qed.
Lemma lem8274647 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2511 A B P P' H2 H1 g a) : term2511 A B P P' H2 H1 g a.
Proof. exact (h1). Qed.
Lemma lem8274650 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term587 A B P P' g a) = (P' g a).
Proof. exact (@lem16933 (P' g a)). Qed.
Lemma lem8274653 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term587 A B P p g a) = (p g a).
Proof. exact (@lem16933 (p g a)). Qed.
Lemma lem8274656 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term587 A B P P' f a) = (P' f a).
Proof. exact (@lem16933 (P' f a)). Qed.
Lemma lem8274659 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term587 A B P p f a) = (p f a).
Proof. exact (@lem16933 (p f a)). Qed.
Lemma lem8274666 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term584 A B P lt2 s a f g z).
Proof. exact (@lem17265 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8274667 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term585 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8274666 A B P lt2 s a f g z)). Qed.
Lemma lem8274668 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8274669 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term586 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8274668 A) (@lem8274667 A B P lt2 s a f g)). Qed.
Lemma lem8274684 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) : ((P1 f a) = (P1 g a)) = (term2512 A B P f P1 g a).
Proof. exact (@lem17500 (P1 f a) (P1 g a)). Qed.
Lemma lem8274689 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G1 f H1 g a) = (term2330 A B P G1 f H1 g a).
Proof. exact (eq_refl (term2330 A B P G1 f H1 g a)). Qed.
Lemma lem8274690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274691 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) : (term2017 A B P f P1 g a) = (term2513 A B P f P1 g a).
Proof. exact (MK_COMB (@lem8274690) (@lem8274684 A B P f P1 g a)). Qed.
Lemma lem8274692 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2024 A B P P1 G1 f H1 g a) = (term2514 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274691 A B P f P1 g a) (@lem8274689 A B P G1 f H1 g a)). Qed.
Lemma lem8274707 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : ((P2 f a) = (P2 g a)) = (term2512 A B P f P2 g a).
Proof. exact (@lem17500 (P2 f a) (P2 g a)). Qed.
Lemma lem8274712 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8274713 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274714 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2017 A B P f P2 g a) = (term2513 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8274713) (@lem8274707 A B P f P2 g a)). Qed.
Lemma lem8274715 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2024 A B P P2 G2 f H2 g a) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274714 A B P f P2 g a) (@lem8274712 A B P G2 f H2 g a)). Qed.
Lemma lem8274716 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274717 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2026 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274716) (@lem8274692 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8274718 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274717 A B P P1 G1 f H1 g a) (@lem8274715 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8274733 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2517 A B P f P2 g a) = (term2518 A B P f P2 g a).
Proof. exact (@lem17646 (P2 f a) (P2 g a)). Qed.
Lemma lem8274740 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2519 A B P G2 f H2 g a) = (term2520 A B P G2 f H2 g a).
Proof. exact (@lem17045 ((G2 f a) = (G2 g a)) ((H2 f a) = (H2 g a))). Qed.
Lemma lem8274741 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8274742 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2521 A B P f P2 g a) = (term2522 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8274741) (@lem8274733 A B P f P2 g a)). Qed.
Lemma lem8274743 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2523 A B P P2 G2 f H2 g a) = (term2524 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274742 A B P f P2 g a) (@lem8274740 A B P G2 f H2 g a)). Qed.
Lemma lem8274744 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2525 A B P P2 G2 f H2 g a) = (term2523 A B P P2 G2 f H2 g a).
Proof. exact (@lem17045 ((P2 f a) = (P2 g a)) (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8274745 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2525 A B P P2 G2 f H2 g a) = (term2524 A B P P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274744 A B P P2 G2 f H2 g a) (@lem8274743 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8274746 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274747 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2526 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2527 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274746) (@lem8274718 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274748 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2528 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274747 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8274745 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8274749 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2530 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2528 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem17362 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) (term2024 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8274750 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2530 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274749 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8274748 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274751 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274752 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2531 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8274751) (@lem8274669 A B P lt2 s a f g)). Qed.
Lemma lem8274753 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2533 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274752 A B P lt2 s a f g) (@lem8274750 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274754 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2535 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term2533 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem17362 (term162 A B P lt2 s a f g) (term2437 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274755 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2535 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274754 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) (@lem8274753 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274756 {A : Type'} (P : type421 A) : (term2536 A P) = (term2537 A P).
Proof. exact (@lem18392 (type1402 A) P). Qed.
Lemma lem8274757 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2538 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2539 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8274756 A (term2439 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274758 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2540 A B P s P1 G1 H1 P2 G2 f H2 g a lt2) = (term2438 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2540 A B P s P1 G1 H1 P2 G2 f H2 g a lt2)). Qed.
Lemma lem8274759 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274760 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2541 A B P s P1 G1 H1 P2 G2 f H2 g a lt2) = (term2535 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274759) (@lem8274758 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274761 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2541 A B P s P1 G1 H1 P2 G2 f H2 g a lt2) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274760 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) (@lem8274755 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274762 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2542 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2543 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8274761 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274763 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8274764 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2539 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2544 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274763 A) (@lem8274762 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274765 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2538 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2544 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274757 A B P s P1 G1 H1 P2 G2 f H2 g a) (@lem8274764 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274766 {A P : Type'} (P' : type805 A P) : (term2545 A P P') = (term2546 A P P').
Proof. exact (@lem18392 (P -> A) P'). Qed.
Lemma lem8274767 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2547 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2548 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8274766 A P (term2441 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274768 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2549 A B P P1 G1 H1 P2 G2 f H2 g a s) = (term2440 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2549 A B P P1 G1 H1 P2 G2 f H2 g a s)). Qed.
Lemma lem8274769 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274770 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2550 A B P P1 G1 H1 P2 G2 f H2 g a s) = (term2538 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274769) (@lem8274768 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274771 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2550 A B P P1 G1 H1 P2 G2 f H2 g a s) = (term2544 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274770 A B P s P1 G1 H1 P2 G2 f H2 g a) (@lem8274765 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274772 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2551 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2552 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8274771 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274773 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8274774 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2548 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2553 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274773 A P) (@lem8274772 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274775 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2547 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2553 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274767 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8274774 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274776 {A B P : Type'} (P' : type117 A B P) : (term2554 A B P P') = (term2555 A B P P').
Proof. exact (@lem18392 (type560 A B P) P'). Qed.
Lemma lem8274777 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2556 A B P P1 G1 H1 G2 f H2 g a) = (term2557 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8274776 A B P (term2443 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274778 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2558 A B P P1 G1 H1 G2 f H2 g a P2) = (term2442 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2558 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8274779 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274780 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2559 A B P P1 G1 H1 G2 f H2 g a P2) = (term2547 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274779) (@lem8274778 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274781 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2559 A B P P1 G1 H1 G2 f H2 g a P2) = (term2553 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8274780 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8274775 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274782 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2560 A B P P1 G1 H1 G2 f H2 g a) = (term2561 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8274781 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274783 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274784 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2557 A B P P1 G1 H1 G2 f H2 g a) = (term2562 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274783 A B P) (@lem8274782 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274785 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2556 A B P P1 G1 H1 G2 f H2 g a) = (term2562 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8274777 A B P P1 G1 H1 G2 f H2 g a) (@lem8274784 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274786 {A B P : Type'} (P' : type117 A B P) : (term2554 A B P P') = (term2555 A B P P').
Proof. exact (@lem18392 (type560 A B P) P'). Qed.
Lemma lem8274787 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2563 A B P G1 H1 G2 f H2 g a) = (term2564 A B P G1 H1 G2 f H2 g a).
Proof. exact (@lem8274786 A B P (term2445 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274788 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2565 A B P G1 H1 G2 f H2 g a P1) = (term2444 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2565 A B P G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8274789 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274790 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2566 A B P G1 H1 G2 f H2 g a P1) = (term2556 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274789) (@lem8274788 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274791 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2566 A B P G1 H1 G2 f H2 g a P1) = (term2562 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8274790 A B P P1 G1 H1 G2 f H2 g a) (@lem8274785 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274792 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2567 A B P G1 H1 G2 f H2 g a) = (term2568 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8274791 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274793 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274794 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2564 A B P G1 H1 G2 f H2 g a) = (term2569 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274793 A B P) (@lem8274792 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274795 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2563 A B P G1 H1 G2 f H2 g a) = (term2569 A B P G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8274787 A B P G1 H1 G2 f H2 g a) (@lem8274794 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274796 {A B P : Type'} (P' : type113 A B P) : (term2570 A B P P') = (term2571 A B P P').
Proof. exact (@lem18392 (type557 A B P) P'). Qed.
Lemma lem8274797 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2572 A B P G1 H1 f H2 g a) = (term2573 A B P G1 H1 f H2 g a).
Proof. exact (@lem8274796 A B P (term2447 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274798 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2574 A B P G1 H1 f H2 g a G2) = (term2446 A B P G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2574 A B P G1 H1 f H2 g a G2)). Qed.
Lemma lem8274799 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274800 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2575 A B P G1 H1 f H2 g a G2) = (term2563 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274799) (@lem8274798 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274801 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2575 A B P G1 H1 f H2 g a G2) = (term2569 A B P G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8274800 A B P G1 H1 G2 f H2 g a) (@lem8274795 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274802 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2576 A B P G1 H1 f H2 g a) = (term2577 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8274801 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8274803 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8274804 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2573 A B P G1 H1 f H2 g a) = (term2578 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274803 A B P) (@lem8274802 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274805 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2572 A B P G1 H1 f H2 g a) = (term2578 A B P G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8274797 A B P G1 H1 f H2 g a) (@lem8274804 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274806 {A B P : Type'} (P' : type113 A B P) : (term2570 A B P P') = (term2571 A B P P').
Proof. exact (@lem18392 (type557 A B P) P'). Qed.
Lemma lem8274807 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2579 A B P H1 f H2 g a) = (term2580 A B P H1 f H2 g a).
Proof. exact (@lem8274806 A B P (term2449 A B P H1 f H2 g a)). Qed.
Lemma lem8274808 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2581 A B P H1 f H2 g a G1) = (term2448 A B P G1 H1 f H2 g a).
Proof. exact (eq_refl (term2581 A B P H1 f H2 g a G1)). Qed.
Lemma lem8274809 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274810 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2582 A B P H1 f H2 g a G1) = (term2572 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274809) (@lem8274808 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274811 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2582 A B P H1 f H2 g a G1) = (term2578 A B P G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8274810 A B P G1 H1 f H2 g a) (@lem8274805 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274812 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2583 A B P H1 f H2 g a) = (term2584 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8274811 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8274813 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8274814 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2580 A B P H1 f H2 g a) = (term2585 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274813 A B P) (@lem8274812 A B P H1 f H2 g a)). Qed.
Lemma lem8274815 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2579 A B P H1 f H2 g a) = (term2585 A B P H1 f H2 g a).
Proof. exact (TRANS (@lem8274807 A B P H1 f H2 g a) (@lem8274814 A B P H1 f H2 g a)). Qed.
Lemma lem8274816 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274817 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1552 A B P p f a) = (term327 A B P p f a).
Proof. exact (MK_COMB (@lem8274816) (@lem8274659 A B P p f a)). Qed.
Lemma lem8274818 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2586 A B P p H1 f H2 g a) = (term2587 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274817 A B P p f a) (@lem8274815 A B P H1 f H2 g a)). Qed.
Lemma lem8274819 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2588 A B P p H1 f H2 g a) = (term2586 A B P p H1 f H2 g a).
Proof. exact (@lem17160 (term373 A B P p f a) (term2450 A B P H1 f H2 g a)). Qed.
Lemma lem8274820 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2588 A B P p H1 f H2 g a) = (term2587 A B P p H1 f H2 g a).
Proof. exact (TRANS (@lem8274819 A B P p H1 f H2 g a) (@lem8274818 A B P p H1 f H2 g a)). Qed.
Lemma lem8274821 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274822 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1552 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (MK_COMB (@lem8274821) (@lem8274656 A B P P' f a)). Qed.
Lemma lem8274823 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2589 A B P P' p H1 f H2 g a) = (term2590 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274822 A B P P' f a) (@lem8274820 A B P p H1 f H2 g a)). Qed.
Lemma lem8274824 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2591 A B P P' p H1 f H2 g a) = (term2589 A B P P' p H1 f H2 g a).
Proof. exact (@lem17160 (term373 A B P P' f a) (term2451 A B P p H1 f H2 g a)). Qed.
Lemma lem8274825 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2591 A B P P' p H1 f H2 g a) = (term2590 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8274824 A B P P' p H1 f H2 g a) (@lem8274823 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274826 {A B : Type'} (P : type572 A B) : (term2592 A B P) = (term2593 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8274827 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2594 A B P P' p H1 H2 g a) = (term2595 A B P P' p H1 H2 g a).
Proof. exact (@lem8274826 A B (term2461 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274828 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2596 A B P P' p H1 H2 g a f) = (term2458 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term2596 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8274829 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274830 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2597 A B P P' p H1 H2 g a f) = (term2591 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8274829) (@lem8274828 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274831 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2597 A B P P' p H1 H2 g a f) = (term2590 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8274830 A B P P' p H1 f H2 g a) (@lem8274825 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274832 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2598 A B P P' p H1 H2 g a) = (term2599 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8274831 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8274833 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8274834 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2595 A B P P' p H1 H2 g a) = (term2600 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274833 A B) (@lem8274832 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274835 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2594 A B P P' p H1 H2 g a) = (term2600 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8274827 A B P P' p H1 H2 g a) (@lem8274834 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274836 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274837 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1552 A B P p g a) = (term327 A B P p g a).
Proof. exact (MK_COMB (@lem8274836) (@lem8274653 A B P p g a)). Qed.
Lemma lem8274838 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2601 A B P P' p H1 H2 g a) = (term2602 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274837 A B P p g a) (@lem8274835 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274839 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2603 A B P P' p H1 H2 g a) = (term2601 A B P P' p H1 H2 g a).
Proof. exact (@lem17160 (term373 A B P p g a) (term2462 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274840 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2603 A B P P' p H1 H2 g a) = (term2602 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8274839 A B P P' p H1 H2 g a) (@lem8274838 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274841 {A B P : Type'} (P' : type117 A B P) : (term2554 A B P P') = (term2555 A B P P').
Proof. exact (@lem18392 (type560 A B P) P'). Qed.
Lemma lem8274842 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2604 A B P P' H1 H2 g a) = (term2605 A B P P' H1 H2 g a).
Proof. exact (@lem8274841 A B P (term2491 A B P P' H1 H2 g a)). Qed.
Lemma lem8274843 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2606 A B P P' H1 H2 g a p) = (term2464 A B P P' p H1 H2 g a).
Proof. exact (eq_refl (term2606 A B P P' H1 H2 g a p)). Qed.
Lemma lem8274844 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274845 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2607 A B P P' H1 H2 g a p) = (term2603 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8274844) (@lem8274843 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274846 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2607 A B P P' H1 H2 g a p) = (term2602 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8274845 A B P P' p H1 H2 g a) (@lem8274840 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274847 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2608 A B P P' H1 H2 g a) = (term2609 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8274846 A B P P' p H1 H2 g a)). Qed.
Lemma lem8274848 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274849 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2605 A B P P' H1 H2 g a) = (term2610 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274848 A B P) (@lem8274847 A B P P' H1 H2 g a)). Qed.
Lemma lem8274850 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2604 A B P P' H1 H2 g a) = (term2610 A B P P' H1 H2 g a).
Proof. exact (TRANS (@lem8274842 A B P P' H1 H2 g a) (@lem8274849 A B P P' H1 H2 g a)). Qed.
Lemma lem8274851 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274852 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1552 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (MK_COMB (@lem8274851) (@lem8274650 A B P P' g a)). Qed.
Lemma lem8274853 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2611 A B P P' H1 H2 g a) = (term2612 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8274852 A B P P' g a) (@lem8274850 A B P P' H1 H2 g a)). Qed.
Lemma lem8274854 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2613 A B P P' H1 H2 g a) = (term2611 A B P P' H1 H2 g a).
Proof. exact (@lem17160 (term373 A B P P' g a) (term2492 A B P P' H1 H2 g a)). Qed.
Lemma lem8274855 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2613 A B P P' H1 H2 g a) = (term2612 A B P P' H1 H2 g a).
Proof. exact (TRANS (@lem8274854 A B P P' H1 H2 g a) (@lem8274853 A B P P' H1 H2 g a)). Qed.
Lemma lem8274859 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term587 A B P p g a) = (p g a).
Proof. exact (@lem16933 (p g a)). Qed.
Lemma lem8274863 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term587 A B P p f a) = (p f a).
Proof. exact (@lem16933 (p f a)). Qed.
Lemma lem8274870 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term325 A B P lt2 s a f g z) = (term584 A B P lt2 s a f g z).
Proof. exact (@lem17265 (term341 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8274871 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term326 A B P lt2 s a f g) = (term585 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8274870 A B P lt2 s a f g z)). Qed.
Lemma lem8274872 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8274873 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term162 A B P lt2 s a f g) = (term586 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8274872 A) (@lem8274871 A B P lt2 s a f g)). Qed.
Lemma lem8274888 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) : ((P1 f a) = (P1 g a)) = (term2512 A B P f P1 g a).
Proof. exact (@lem17500 (P1 f a) (P1 g a)). Qed.
Lemma lem8274893 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G1 f H1 g a) = (term2330 A B P G1 f H1 g a).
Proof. exact (eq_refl (term2330 A B P G1 f H1 g a)). Qed.
Lemma lem8274894 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274895 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) : (term2017 A B P f P1 g a) = (term2513 A B P f P1 g a).
Proof. exact (MK_COMB (@lem8274894) (@lem8274888 A B P f P1 g a)). Qed.
Lemma lem8274896 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2024 A B P P1 G1 f H1 g a) = (term2514 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274895 A B P f P1 g a) (@lem8274893 A B P G1 f H1 g a)). Qed.
Lemma lem8274911 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : ((P2 f a) = (P2 g a)) = (term2512 A B P f P2 g a).
Proof. exact (@lem17500 (P2 f a) (P2 g a)). Qed.
Lemma lem8274916 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8274917 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274918 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2017 A B P f P2 g a) = (term2513 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8274917) (@lem8274911 A B P f P2 g a)). Qed.
Lemma lem8274919 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2024 A B P P2 G2 f H2 g a) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274918 A B P f P2 g a) (@lem8274916 A B P G2 f H2 g a)). Qed.
Lemma lem8274920 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274921 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2026 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274920) (@lem8274896 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8274922 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274921 A B P P1 G1 f H1 g a) (@lem8274919 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8274937 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) : (term2517 A B P f P1 g a) = (term2518 A B P f P1 g a).
Proof. exact (@lem17646 (P1 f a) (P1 g a)). Qed.
Lemma lem8274944 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2519 A B P G1 f H1 g a) = (term2520 A B P G1 f H1 g a).
Proof. exact (@lem17045 ((G1 f a) = (G1 g a)) ((H1 f a) = (H1 g a))). Qed.
Lemma lem8274945 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8274946 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) : (term2521 A B P f P1 g a) = (term2522 A B P f P1 g a).
Proof. exact (MK_COMB (@lem8274945) (@lem8274937 A B P f P1 g a)). Qed.
Lemma lem8274947 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2523 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274946 A B P f P1 g a) (@lem8274944 A B P G1 f H1 g a)). Qed.
Lemma lem8274948 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2525 A B P P1 G1 f H1 g a) = (term2523 A B P P1 G1 f H1 g a).
Proof. exact (@lem17045 ((P1 f a) = (P1 g a)) (term2330 A B P G1 f H1 g a)). Qed.
Lemma lem8274949 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2525 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274948 A B P P1 G1 f H1 g a) (@lem8274947 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8274950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274951 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2526 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2527 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8274950) (@lem8274922 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8274952 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2614 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274951 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8274949 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8274953 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2616 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2614 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem17362 (term2027 A B P P1 G1 H1 P2 G2 f H2 g a) (term2024 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8274954 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2616 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274953 A B P P2 G2 H2 P1 G1 f H1 g a) (@lem8274952 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274955 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8274956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2531 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8274955) (@lem8274873 A B P lt2 s a f g)). Qed.
Lemma lem8274957 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2617 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274956 A B P lt2 s a f g) (@lem8274954 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2619 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term2617 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem17362 (term162 A B P lt2 s a f g) (term2331 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274959 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2619 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274958 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) (@lem8274957 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274960 {A : Type'} (P : type421 A) : (term2536 A P) = (term2537 A P).
Proof. exact (@lem18392 (type1402 A) P). Qed.
Lemma lem8274961 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2620 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2621 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8274960 A (term2333 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274962 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2622 A B P s P2 G2 H2 P1 G1 f H1 g a lt2) = (term2332 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2622 A B P s P2 G2 H2 P1 G1 f H1 g a lt2)). Qed.
Lemma lem8274963 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274964 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2623 A B P s P2 G2 H2 P1 G1 f H1 g a lt2) = (term2619 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274963) (@lem8274962 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274965 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2623 A B P s P2 G2 H2 P1 G1 f H1 g a lt2) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274964 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) (@lem8274959 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274966 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2624 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2625 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8274965 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274967 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8274968 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2621 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2626 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274967 A) (@lem8274966 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274969 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2620 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2626 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274961 A B P s P2 G2 H2 P1 G1 f H1 g a) (@lem8274968 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274970 {A P : Type'} (P' : type805 A P) : (term2545 A P P') = (term2546 A P P').
Proof. exact (@lem18392 (P -> A) P'). Qed.
Lemma lem8274971 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2627 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2628 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8274970 A P (term2335 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274972 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2629 A B P P2 G2 H2 P1 G1 f H1 g a s) = (term2334 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2629 A B P P2 G2 H2 P1 G1 f H1 g a s)). Qed.
Lemma lem8274973 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274974 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2630 A B P P2 G2 H2 P1 G1 f H1 g a s) = (term2620 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274973) (@lem8274972 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274975 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2630 A B P P2 G2 H2 P1 G1 f H1 g a s) = (term2626 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274974 A B P s P2 G2 H2 P1 G1 f H1 g a) (@lem8274969 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274976 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2631 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2632 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8274975 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274977 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8274978 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2628 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2633 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274977 A P) (@lem8274976 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274979 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2627 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2633 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274971 A B P P2 G2 H2 P1 G1 f H1 g a) (@lem8274978 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274980 {A B P : Type'} (P' : type117 A B P) : (term2554 A B P P') = (term2555 A B P P').
Proof. exact (@lem18392 (type560 A B P) P'). Qed.
Lemma lem8274981 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2634 A B P G2 H2 P1 G1 f H1 g a) = (term2635 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8274980 A B P (term2337 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274982 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2636 A B P G2 H2 P1 G1 f H1 g a P2) = (term2336 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2636 A B P G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8274983 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274984 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2637 A B P G2 H2 P1 G1 f H1 g a P2) = (term2627 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274983) (@lem8274982 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274985 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2637 A B P G2 H2 P1 G1 f H1 g a P2) = (term2633 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274984 A B P P2 G2 H2 P1 G1 f H1 g a) (@lem8274979 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274986 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2638 A B P G2 H2 P1 G1 f H1 g a) = (term2639 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8274985 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274987 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274988 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2635 A B P G2 H2 P1 G1 f H1 g a) = (term2640 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274987 A B P) (@lem8274986 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274989 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2634 A B P G2 H2 P1 G1 f H1 g a) = (term2640 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274981 A B P G2 H2 P1 G1 f H1 g a) (@lem8274988 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274990 {A B P : Type'} (P' : type117 A B P) : (term2554 A B P P') = (term2555 A B P P').
Proof. exact (@lem18392 (type560 A B P) P'). Qed.
Lemma lem8274991 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2641 A B P G2 H2 G1 f H1 g a) = (term2642 A B P G2 H2 G1 f H1 g a).
Proof. exact (@lem8274990 A B P (term2339 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8274992 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2643 A B P G2 H2 G1 f H1 g a P1) = (term2338 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2643 A B P G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8274993 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8274994 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2644 A B P G2 H2 G1 f H1 g a P1) = (term2634 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274993) (@lem8274992 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274995 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2644 A B P G2 H2 G1 f H1 g a P1) = (term2640 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8274994 A B P G2 H2 P1 G1 f H1 g a) (@lem8274989 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274996 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2645 A B P G2 H2 G1 f H1 g a) = (term2646 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8274995 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8274997 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8274998 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2642 A B P G2 H2 G1 f H1 g a) = (term2647 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8274997 A B P) (@lem8274996 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8274999 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2641 A B P G2 H2 G1 f H1 g a) = (term2647 A B P G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8274991 A B P G2 H2 G1 f H1 g a) (@lem8274998 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8275000 {A B P : Type'} (P' : type113 A B P) : (term2570 A B P P') = (term2571 A B P P').
Proof. exact (@lem18392 (type557 A B P) P'). Qed.
Lemma lem8275001 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2648 A B P H2 G1 f H1 g a) = (term2649 A B P H2 G1 f H1 g a).
Proof. exact (@lem8275000 A B P (term2341 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8275002 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2650 A B P H2 G1 f H1 g a G2) = (term2340 A B P G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term2650 A B P H2 G1 f H1 g a G2)). Qed.
Lemma lem8275003 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8275004 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2651 A B P H2 G1 f H1 g a G2) = (term2641 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8275003) (@lem8275002 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8275005 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2651 A B P H2 G1 f H1 g a G2) = (term2647 A B P G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8275004 A B P G2 H2 G1 f H1 g a) (@lem8274999 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8275006 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2652 A B P H2 G1 f H1 g a) = (term2653 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8275005 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8275007 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275008 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2649 A B P H2 G1 f H1 g a) = (term2654 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8275007 A B P) (@lem8275006 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8275009 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2648 A B P H2 G1 f H1 g a) = (term2654 A B P H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8275001 A B P H2 G1 f H1 g a) (@lem8275008 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8275010 {A B P : Type'} (P' : type113 A B P) : (term2570 A B P P') = (term2571 A B P P').
Proof. exact (@lem18392 (type557 A B P) P'). Qed.
Lemma lem8275011 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2655 A B P H2 f H1 g a) = (term2656 A B P H2 f H1 g a).
Proof. exact (@lem8275010 A B P (term2343 A B P H2 f H1 g a)). Qed.
Lemma lem8275012 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2657 A B P H2 f H1 g a G1) = (term2342 A B P H2 G1 f H1 g a).
Proof. exact (eq_refl (term2657 A B P H2 f H1 g a G1)). Qed.
Lemma lem8275013 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8275014 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2658 A B P H2 f H1 g a G1) = (term2648 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8275013) (@lem8275012 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8275015 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2658 A B P H2 f H1 g a G1) = (term2654 A B P H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8275014 A B P H2 G1 f H1 g a) (@lem8275009 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8275016 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2659 A B P H2 f H1 g a) = (term2660 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8275015 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8275017 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275018 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2656 A B P H2 f H1 g a) = (term2661 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8275017 A B P) (@lem8275016 A B P H2 f H1 g a)). Qed.
Lemma lem8275019 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2655 A B P H2 f H1 g a) = (term2661 A B P H2 f H1 g a).
Proof. exact (TRANS (@lem8275011 A B P H2 f H1 g a) (@lem8275018 A B P H2 f H1 g a)). Qed.
Lemma lem8275020 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8275021 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1552 A B P p f a) = (term327 A B P p f a).
Proof. exact (MK_COMB (@lem8275020) (@lem8274863 A B P p f a)). Qed.
Lemma lem8275022 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2662 A B P p H2 f H1 g a) = (term2663 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8275021 A B P p f a) (@lem8275019 A B P H2 f H1 g a)). Qed.
Lemma lem8275023 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2664 A B P p H2 f H1 g a) = (term2662 A B P p H2 f H1 g a).
Proof. exact (@lem17160 (term373 A B P p f a) (term2344 A B P H2 f H1 g a)). Qed.
Lemma lem8275024 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2664 A B P p H2 f H1 g a) = (term2663 A B P p H2 f H1 g a).
Proof. exact (TRANS (@lem8275023 A B P p H2 f H1 g a) (@lem8275022 A B P p H2 f H1 g a)). Qed.
Lemma lem8275026 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8275027 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2665 A B P P' p H2 f H1 g a) = (term2666 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8275026 A B P P' f a) (@lem8275024 A B P p H2 f H1 g a)). Qed.
Lemma lem8275028 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2667 A B P P' p H2 f H1 g a) = (term2665 A B P P' p H2 f H1 g a).
Proof. exact (@lem17160 (P' f a) (term2345 A B P p H2 f H1 g a)). Qed.
Lemma lem8275029 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2667 A B P P' p H2 f H1 g a) = (term2666 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8275028 A B P P' p H2 f H1 g a) (@lem8275027 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8275030 {A B : Type'} (P : type572 A B) : (term2592 A B P) = (term2593 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8275031 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2668 A B P P' p H2 H1 g a) = (term2669 A B P P' p H2 H1 g a).
Proof. exact (@lem8275030 A B (term2360 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275032 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2670 A B P P' p H2 H1 g a f) = (term2356 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term2670 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8275033 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8275034 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2671 A B P P' p H2 H1 g a f) = (term2667 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8275033) (@lem8275032 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8275035 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2671 A B P P' p H2 H1 g a f) = (term2666 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8275034 A B P P' p H2 f H1 g a) (@lem8275029 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8275036 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2672 A B P P' p H2 H1 g a) = (term2673 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8275035 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8275037 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8275038 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2669 A B P P' p H2 H1 g a) = (term2674 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8275037 A B) (@lem8275036 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275039 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2668 A B P P' p H2 H1 g a) = (term2674 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8275031 A B P P' p H2 H1 g a) (@lem8275038 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275040 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8275041 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term1552 A B P p g a) = (term327 A B P p g a).
Proof. exact (MK_COMB (@lem8275040) (@lem8274859 A B P p g a)). Qed.
Lemma lem8275042 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2675 A B P P' p H2 H1 g a) = (term2676 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8275041 A B P p g a) (@lem8275039 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275043 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2677 A B P P' p H2 H1 g a) = (term2675 A B P P' p H2 H1 g a).
Proof. exact (@lem17160 (term373 A B P p g a) (term2361 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275044 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2677 A B P P' p H2 H1 g a) = (term2676 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8275043 A B P P' p H2 H1 g a) (@lem8275042 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275045 {A B P : Type'} (P' : type117 A B P) : (term2554 A B P P') = (term2555 A B P P').
Proof. exact (@lem18392 (type560 A B P) P'). Qed.
Lemma lem8275046 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2678 A B P P' H2 H1 g a) = (term2679 A B P P' H2 H1 g a).
Proof. exact (@lem8275045 A B P (term2496 A B P P' H2 H1 g a)). Qed.
Lemma lem8275047 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2680 A B P P' H2 H1 g a p) = (term2363 A B P P' p H2 H1 g a).
Proof. exact (eq_refl (term2680 A B P P' H2 H1 g a p)). Qed.
Lemma lem8275048 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8275049 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2681 A B P P' H2 H1 g a p) = (term2677 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8275048) (@lem8275047 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275050 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2681 A B P P' H2 H1 g a p) = (term2676 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8275049 A B P P' p H2 H1 g a) (@lem8275044 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275051 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2682 A B P P' H2 H1 g a) = (term2683 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8275050 A B P P' p H2 H1 g a)). Qed.
Lemma lem8275052 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275053 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2679 A B P P' H2 H1 g a) = (term2684 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8275052 A B P) (@lem8275051 A B P P' H2 H1 g a)). Qed.
Lemma lem8275054 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2678 A B P P' H2 H1 g a) = (term2684 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8275046 A B P P' H2 H1 g a) (@lem8275053 A B P P' H2 H1 g a)). Qed.
Lemma lem8275056 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8275057 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2685 A B P P' H2 H1 g a) = (term2686 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8275056 A B P P' g a) (@lem8275054 A B P P' H2 H1 g a)). Qed.
Lemma lem8275058 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2687 A B P P' H2 H1 g a) = (term2685 A B P P' H2 H1 g a).
Proof. exact (@lem17160 (P' g a) (term2497 A B P P' H2 H1 g a)). Qed.
Lemma lem8275059 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2687 A B P P' H2 H1 g a) = (term2686 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8275058 A B P P' H2 H1 g a) (@lem8275057 A B P P' H2 H1 g a)). Qed.
Lemma lem8275060 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8275061 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2688 A B P P' H1 H2 g a) = (term2689 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8275060) (@lem8274855 A B P P' H1 H2 g a)). Qed.
Lemma lem8275062 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2690 A B P P' H2 H1 g a) = (term2691 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8275061 A B P P' H1 H2 g a) (@lem8275059 A B P P' H2 H1 g a)). Qed.
Lemma lem8275063 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2511 A B P P' H2 H1 g a) = (term2690 A B P P' H2 H1 g a).
Proof. exact (@lem17045 (term2493 A B P P' H1 H2 g a) (term2498 A B P P' H2 H1 g a)). Qed.
Lemma lem8275064 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2511 A B P P' H2 H1 g a) = (term2691 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8275063 A B P P' H2 H1 g a) (@lem8275062 A B P P' H2 H1 g a)). Qed.
Lemma lem8275202 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2692 A P Q) = (term2693 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem8275203 {A : Type'} (P : type421 A) (Q : Prop) : (term2694 A P Q) = (term2695 A P Q).
Proof. exact (@lem8275202 (type1402 A) P Q). Qed.
Lemma lem8275204 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2696 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2697 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8275203 A (term2698 A B P s a f g) (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275205 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8275206 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8275207 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2700 A B P s a f g lt2) = (term2532 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8275206) (@lem8275205 A B P lt2 s a f g)). Qed.
Lemma lem8275208 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2529 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275209 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2701 A B P s lt2 P1 G1 H1 P2 G2 f H2 g a) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275207 A B P lt2 s a f g) (@lem8275208 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275210 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2702 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2543 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8275209 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275211 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8275212 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2696 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2544 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275211 A) (@lem8275210 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275213 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8275214 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2703 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2704 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275213) (@lem8275212 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275215 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8275216 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2705 A B P s a f g) = (term2698 A B P s a f g).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8275215 A B P lt2 s a f g)). Qed.
Lemma lem8275217 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8275218 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2706 A B P s a f g) = (term2707 A B P s a f g).
Proof. exact (MK_COMB (@lem8275217 A) (@lem8275216 A B P s a f g)). Qed.
Lemma lem8275219 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8275220 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2708 A B P s a f g) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8275219) (@lem8275218 A B P s a f g)). Qed.
Lemma lem8275221 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2529 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275222 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2697 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2710 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275220 A B P s a f g) (@lem8275221 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275223 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2696 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2697 A B P s P1 G1 H1 P2 G2 f H2 g a)) = ((term2544 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2710 A B P s P1 G1 H1 P2 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8275214 A B P s P1 G1 H1 P2 G2 f H2 g a) (@lem8275222 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275224 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2544 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2710 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8275223 A B P s P1 G1 H1 P2 G2 f H2 g a) (@lem8275204 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275277 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2552 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2711 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8275224 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275278 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8275279 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2553 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2712 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275278 A P) (@lem8275277 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275301 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2692 A P Q) = (term2693 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem8275302 {A P : Type'} (P' : type805 A P) (Q : Prop) : (term2713 A P P' Q) = (term2714 A P P' Q).
Proof. exact (@lem8275301 (P -> A) P' Q). Qed.
Lemma lem8275303 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2715 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2716 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (@lem8275302 A P (term2717 A B P a f g) (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275304 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8275305 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8275306 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2719 A B P a f g s) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8275305) (@lem8275304 A B P s a f g)). Qed.
Lemma lem8275307 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2529 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275308 {A B P : Type'} (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2720 A B P s P1 G1 H1 P2 G2 f H2 g a) = (term2710 A B P s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275306 A B P s a f g) (@lem8275307 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275309 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2721 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2711 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8275308 A B P s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275310 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8275311 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2715 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2712 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275310 A P) (@lem8275309 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275312 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8275313 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2722 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2723 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275312) (@lem8275311 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275314 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8275315 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2724 A B P a f g) = (term2717 A B P a f g).
Proof. exact (fun_ext (fun s : P -> A => @lem8275314 A B P s a f g)). Qed.
Lemma lem8275316 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8275317 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2725 A B P a f g) = (term2726 A B P a f g).
Proof. exact (MK_COMB (@lem8275316 A P) (@lem8275315 A B P a f g)). Qed.
Lemma lem8275318 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8275319 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2727 A B P a f g) = (term2728 A B P a f g).
Proof. exact (MK_COMB (@lem8275318) (@lem8275317 A B P a f g)). Qed.
Lemma lem8275320 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2529 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275321 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2716 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2729 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275319 A B P a f g) (@lem8275320 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275322 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2715 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2716 A B P P1 G1 H1 P2 G2 f H2 g a)) = ((term2712 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2729 A B P P1 G1 H1 P2 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8275313 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8275321 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275323 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2712 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2729 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8275322 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8275303 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275380 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2553 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2729 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8275279 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8275323 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275381 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2561 A B P P1 G1 H1 G2 f H2 g a) = (term2730 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8275380 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275382 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275383 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2562 A B P P1 G1 H1 G2 f H2 g a) = (term2731 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275382 A B P) (@lem8275381 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275385 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8275386 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2732 A B P P' Q) = (term2733 A B P P' Q).
Proof. exact (@lem8275385 (type560 A B P) P' Q). Qed.
Lemma lem8275387 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2734 A B P P1 G1 H1 G2 f H2 g a) = (term2735 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8275386 A B P (term2726 A B P a f g) (term2736 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275388 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2737 A B P P1 G1 H1 G2 f H2 g a P2) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2737 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8275389 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275390 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2738 A B P P1 G1 H1 G2 f H2 g a P2) = (term2729 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275389 A B P a f g) (@lem8275388 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275391 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2739 A B P P1 G1 H1 G2 f H2 g a) = (term2730 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8275390 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275392 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275393 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2734 A B P P1 G1 H1 G2 f H2 g a) = (term2731 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275392 A B P) (@lem8275391 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275394 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8275395 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2740 A B P P1 G1 H1 G2 f H2 g a) = (term2741 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275394) (@lem8275393 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275396 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2737 A B P P1 G1 H1 G2 f H2 g a P2) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2737 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8275397 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2742 A B P P1 G1 H1 G2 f H2 g a) = (term2736 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8275396 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8275398 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275399 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2743 A B P P1 G1 H1 G2 f H2 g a) = (term2744 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275398 A B P) (@lem8275397 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275400 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275401 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2735 A B P P1 G1 H1 G2 f H2 g a) = (term2745 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275400 A B P a f g) (@lem8275399 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275402 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2734 A B P P1 G1 H1 G2 f H2 g a) = (term2735 A B P P1 G1 H1 G2 f H2 g a)) = ((term2731 A B P P1 G1 H1 G2 f H2 g a) = (term2745 A B P P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8275395 A B P P1 G1 H1 G2 f H2 g a) (@lem8275401 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275403 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2731 A B P P1 G1 H1 G2 f H2 g a) = (term2745 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8275402 A B P P1 G1 H1 G2 f H2 g a) (@lem8275387 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275508 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2562 A B P P1 G1 H1 G2 f H2 g a) = (term2745 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8275383 A B P P1 G1 H1 G2 f H2 g a) (@lem8275403 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275509 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2568 A B P G1 H1 G2 f H2 g a) = (term2746 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8275508 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275510 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275511 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2569 A B P G1 H1 G2 f H2 g a) = (term2747 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275510 A B P) (@lem8275509 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275513 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8275514 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2732 A B P P' Q) = (term2733 A B P P' Q).
Proof. exact (@lem8275513 (type560 A B P) P' Q). Qed.
Lemma lem8275515 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2748 A B P G1 H1 G2 f H2 g a) = (term2749 A B P G1 H1 G2 f H2 g a).
Proof. exact (@lem8275514 A B P (term2726 A B P a f g) (term2750 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275516 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2751 A B P G1 H1 G2 f H2 g a P1) = (term2744 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2751 A B P G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8275517 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275518 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2752 A B P G1 H1 G2 f H2 g a P1) = (term2745 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275517 A B P a f g) (@lem8275516 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275519 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2753 A B P G1 H1 G2 f H2 g a) = (term2746 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8275518 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275520 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275521 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2748 A B P G1 H1 G2 f H2 g a) = (term2747 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275520 A B P) (@lem8275519 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275522 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8275523 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2754 A B P G1 H1 G2 f H2 g a) = (term2755 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275522) (@lem8275521 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275524 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2751 A B P G1 H1 G2 f H2 g a P1) = (term2744 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2751 A B P G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8275525 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2756 A B P G1 H1 G2 f H2 g a) = (term2750 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8275524 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275526 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275527 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2757 A B P G1 H1 G2 f H2 g a) = (term2758 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275526 A B P) (@lem8275525 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275528 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275529 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2749 A B P G1 H1 G2 f H2 g a) = (term2759 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275528 A B P a f g) (@lem8275527 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275530 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2748 A B P G1 H1 G2 f H2 g a) = (term2749 A B P G1 H1 G2 f H2 g a)) = ((term2747 A B P G1 H1 G2 f H2 g a) = (term2759 A B P G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8275523 A B P G1 H1 G2 f H2 g a) (@lem8275529 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275531 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2747 A B P G1 H1 G2 f H2 g a) = (term2759 A B P G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8275530 A B P G1 H1 G2 f H2 g a) (@lem8275515 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275640 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2569 A B P G1 H1 G2 f H2 g a) = (term2759 A B P G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8275511 A B P G1 H1 G2 f H2 g a) (@lem8275531 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275641 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2577 A B P G1 H1 f H2 g a) = (term2760 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8275640 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275642 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275643 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2578 A B P G1 H1 f H2 g a) = (term2761 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275642 A B P) (@lem8275641 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275645 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8275646 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2762 A B P P' Q) = (term2763 A B P P' Q).
Proof. exact (@lem8275645 (type557 A B P) P' Q). Qed.
Lemma lem8275647 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2764 A B P G1 H1 f H2 g a) = (term2765 A B P G1 H1 f H2 g a).
Proof. exact (@lem8275646 A B P (term2726 A B P a f g) (term2766 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275648 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2767 A B P G1 H1 f H2 g a G2) = (term2758 A B P G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2767 A B P G1 H1 f H2 g a G2)). Qed.
Lemma lem8275649 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275650 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2768 A B P G1 H1 f H2 g a G2) = (term2759 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8275649 A B P a f g) (@lem8275648 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275651 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2769 A B P G1 H1 f H2 g a) = (term2760 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8275650 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275652 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275653 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2764 A B P G1 H1 f H2 g a) = (term2761 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275652 A B P) (@lem8275651 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275654 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8275655 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2770 A B P G1 H1 f H2 g a) = (term2771 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275654) (@lem8275653 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275656 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2767 A B P G1 H1 f H2 g a G2) = (term2758 A B P G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2767 A B P G1 H1 f H2 g a G2)). Qed.
Lemma lem8275657 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2772 A B P G1 H1 f H2 g a) = (term2766 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8275656 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8275658 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275659 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2773 A B P G1 H1 f H2 g a) = (term2774 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275658 A B P) (@lem8275657 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275660 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275661 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2765 A B P G1 H1 f H2 g a) = (term2775 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275660 A B P a f g) (@lem8275659 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275662 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2764 A B P G1 H1 f H2 g a) = (term2765 A B P G1 H1 f H2 g a)) = ((term2761 A B P G1 H1 f H2 g a) = (term2775 A B P G1 H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8275655 A B P G1 H1 f H2 g a) (@lem8275661 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275663 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2761 A B P G1 H1 f H2 g a) = (term2775 A B P G1 H1 f H2 g a).
Proof. exact (EQ_MP (@lem8275662 A B P G1 H1 f H2 g a) (@lem8275647 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275776 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2578 A B P G1 H1 f H2 g a) = (term2775 A B P G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8275643 A B P G1 H1 f H2 g a) (@lem8275663 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275777 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2584 A B P H1 f H2 g a) = (term2776 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8275776 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275778 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275779 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2585 A B P H1 f H2 g a) = (term2777 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275778 A B P) (@lem8275777 A B P H1 f H2 g a)). Qed.
Lemma lem8275781 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8275782 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2762 A B P P' Q) = (term2763 A B P P' Q).
Proof. exact (@lem8275781 (type557 A B P) P' Q). Qed.
Lemma lem8275783 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2778 A B P H1 f H2 g a) = (term2779 A B P H1 f H2 g a).
Proof. exact (@lem8275782 A B P (term2726 A B P a f g) (term2780 A B P H1 f H2 g a)). Qed.
Lemma lem8275784 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2781 A B P H1 f H2 g a G1) = (term2774 A B P G1 H1 f H2 g a).
Proof. exact (eq_refl (term2781 A B P H1 f H2 g a G1)). Qed.
Lemma lem8275785 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275786 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2782 A B P H1 f H2 g a G1) = (term2775 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275785 A B P a f g) (@lem8275784 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275787 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2783 A B P H1 f H2 g a) = (term2776 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8275786 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275788 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275789 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2778 A B P H1 f H2 g a) = (term2777 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275788 A B P) (@lem8275787 A B P H1 f H2 g a)). Qed.
Lemma lem8275790 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8275791 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2784 A B P H1 f H2 g a) = (term2785 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275790) (@lem8275789 A B P H1 f H2 g a)). Qed.
Lemma lem8275792 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2781 A B P H1 f H2 g a G1) = (term2774 A B P G1 H1 f H2 g a).
Proof. exact (eq_refl (term2781 A B P H1 f H2 g a G1)). Qed.
Lemma lem8275793 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2786 A B P H1 f H2 g a) = (term2780 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8275792 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8275794 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8275795 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2787 A B P H1 f H2 g a) = (term2788 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275794 A B P) (@lem8275793 A B P H1 f H2 g a)). Qed.
Lemma lem8275796 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8275797 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2779 A B P H1 f H2 g a) = (term2789 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275796 A B P a f g) (@lem8275795 A B P H1 f H2 g a)). Qed.
Lemma lem8275798 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2778 A B P H1 f H2 g a) = (term2779 A B P H1 f H2 g a)) = ((term2777 A B P H1 f H2 g a) = (term2789 A B P H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8275791 A B P H1 f H2 g a) (@lem8275797 A B P H1 f H2 g a)). Qed.
Lemma lem8275799 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2777 A B P H1 f H2 g a) = (term2789 A B P H1 f H2 g a).
Proof. exact (EQ_MP (@lem8275798 A B P H1 f H2 g a) (@lem8275783 A B P H1 f H2 g a)). Qed.
Lemma lem8275916 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2585 A B P H1 f H2 g a) = (term2789 A B P H1 f H2 g a).
Proof. exact (TRANS (@lem8275779 A B P H1 f H2 g a) (@lem8275799 A B P H1 f H2 g a)). Qed.
Lemma lem8275917 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8275918 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2587 A B P p H1 f H2 g a) = (term2790 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275917 A B P p f a) (@lem8275916 A B P H1 f H2 g a)). Qed.
Lemma lem8275919 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8275920 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2590 A B P P' p H1 f H2 g a) = (term2791 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8275919 A B P P' f a) (@lem8275918 A B P p H1 f H2 g a)). Qed.
Lemma lem8275921 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2599 A B P P' p H1 H2 g a) = (term2792 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8275920 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8275922 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8275923 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2600 A B P P' p H1 H2 g a) = (term2793 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8275922 A B) (@lem8275921 A B P P' p H1 H2 g a)). Qed.
Lemma lem8275972 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8275973 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2602 A B P P' p H1 H2 g a) = (term2794 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8275972 A B P p g a) (@lem8275923 A B P P' p H1 H2 g a)). Qed.
Lemma lem8275974 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2609 A B P P' H1 H2 g a) = (term2795 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8275973 A B P P' p H1 H2 g a)). Qed.
Lemma lem8275975 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8275976 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2610 A B P P' H1 H2 g a) = (term2796 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8275975 A B P) (@lem8275974 A B P P' H1 H2 g a)). Qed.
Lemma lem8276025 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8276026 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2612 A B P P' H1 H2 g a) = (term2797 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8276025 A B P P' g a) (@lem8275976 A B P P' H1 H2 g a)). Qed.
Lemma lem8276027 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8276028 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2689 A B P P' H1 H2 g a) = (term2798 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8276027) (@lem8276026 A B P P' H1 H2 g a)). Qed.
Lemma lem8276166 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2692 A P Q) = (term2693 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem8276167 {A : Type'} (P : type421 A) (Q : Prop) : (term2694 A P Q) = (term2695 A P Q).
Proof. exact (@lem8276166 (type1402 A) P Q). Qed.
Lemma lem8276168 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2799 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2800 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8276167 A (term2698 A B P s a f g) (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276169 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8276170 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276171 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2700 A B P s a f g lt2) = (term2532 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8276170) (@lem8276169 A B P lt2 s a f g)). Qed.
Lemma lem8276172 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2615 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276173 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2801 A B P s lt2 P2 G2 H2 P1 G1 f H1 g a) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276171 A B P lt2 s a f g) (@lem8276172 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276174 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2802 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2625 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8276173 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276175 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8276176 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2799 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2626 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276175 A) (@lem8276174 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276177 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276178 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2803 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2804 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276177) (@lem8276176 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276179 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8276180 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2705 A B P s a f g) = (term2698 A B P s a f g).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8276179 A B P lt2 s a f g)). Qed.
Lemma lem8276181 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8276182 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2706 A B P s a f g) = (term2707 A B P s a f g).
Proof. exact (MK_COMB (@lem8276181 A) (@lem8276180 A B P s a f g)). Qed.
Lemma lem8276183 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276184 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2708 A B P s a f g) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8276183) (@lem8276182 A B P s a f g)). Qed.
Lemma lem8276185 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2615 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276186 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2800 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2805 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276184 A B P s a f g) (@lem8276185 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276187 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2799 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2800 A B P s P2 G2 H2 P1 G1 f H1 g a)) = ((term2626 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2805 A B P s P2 G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8276178 A B P s P2 G2 H2 P1 G1 f H1 g a) (@lem8276186 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276188 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2626 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2805 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8276187 A B P s P2 G2 H2 P1 G1 f H1 g a) (@lem8276168 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276241 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2632 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2806 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8276188 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276242 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8276243 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2633 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2807 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276242 A P) (@lem8276241 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276265 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2692 A P Q) = (term2693 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem8276266 {A P : Type'} (P' : type805 A P) (Q : Prop) : (term2713 A P P' Q) = (term2714 A P P' Q).
Proof. exact (@lem8276265 (P -> A) P' Q). Qed.
Lemma lem8276267 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2808 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2809 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8276266 A P (term2717 A B P a f g) (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276268 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8276269 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276270 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2719 A B P a f g s) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8276269) (@lem8276268 A B P s a f g)). Qed.
Lemma lem8276271 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2615 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276272 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2810 A B P s P2 G2 H2 P1 G1 f H1 g a) = (term2805 A B P s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276270 A B P s a f g) (@lem8276271 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276273 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2811 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2806 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8276272 A B P s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276274 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8276275 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2808 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2807 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276274 A P) (@lem8276273 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276276 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276277 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2812 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2813 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276276) (@lem8276275 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276278 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8276279 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2724 A B P a f g) = (term2717 A B P a f g).
Proof. exact (fun_ext (fun s : P -> A => @lem8276278 A B P s a f g)). Qed.
Lemma lem8276280 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8276281 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2725 A B P a f g) = (term2726 A B P a f g).
Proof. exact (MK_COMB (@lem8276280 A P) (@lem8276279 A B P a f g)). Qed.
Lemma lem8276282 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276283 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2727 A B P a f g) = (term2728 A B P a f g).
Proof. exact (MK_COMB (@lem8276282) (@lem8276281 A B P a f g)). Qed.
Lemma lem8276284 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2615 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276285 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2809 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2814 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276283 A B P a f g) (@lem8276284 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276286 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2808 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2809 A B P P2 G2 H2 P1 G1 f H1 g a)) = ((term2807 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2814 A B P P2 G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8276277 A B P P2 G2 H2 P1 G1 f H1 g a) (@lem8276285 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276287 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2807 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2814 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8276286 A B P P2 G2 H2 P1 G1 f H1 g a) (@lem8276267 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276344 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2633 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2814 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8276243 A B P P2 G2 H2 P1 G1 f H1 g a) (@lem8276287 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276345 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2639 A B P G2 H2 P1 G1 f H1 g a) = (term2815 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276344 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276346 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276347 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2640 A B P G2 H2 P1 G1 f H1 g a) = (term2816 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276346 A B P) (@lem8276345 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276349 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8276350 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2732 A B P P' Q) = (term2733 A B P P' Q).
Proof. exact (@lem8276349 (type560 A B P) P' Q). Qed.
Lemma lem8276351 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2817 A B P G2 H2 P1 G1 f H1 g a) = (term2818 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8276350 A B P (term2726 A B P a f g) (term2819 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276352 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2820 A B P G2 H2 P1 G1 f H1 g a P2) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2820 A B P G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8276353 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276354 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2821 A B P G2 H2 P1 G1 f H1 g a P2) = (term2814 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276353 A B P a f g) (@lem8276352 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276355 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2822 A B P G2 H2 P1 G1 f H1 g a) = (term2815 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276354 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276356 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276357 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2817 A B P G2 H2 P1 G1 f H1 g a) = (term2816 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276356 A B P) (@lem8276355 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276359 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2823 A B P G2 H2 P1 G1 f H1 g a) = (term2824 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276358) (@lem8276357 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276360 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2820 A B P G2 H2 P1 G1 f H1 g a P2) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2820 A B P G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8276361 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2825 A B P G2 H2 P1 G1 f H1 g a) = (term2819 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276360 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276362 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276363 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2826 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276362 A B P) (@lem8276361 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276364 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276365 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2818 A B P G2 H2 P1 G1 f H1 g a) = (term2828 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276364 A B P a f g) (@lem8276363 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276366 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2817 A B P G2 H2 P1 G1 f H1 g a) = (term2818 A B P G2 H2 P1 G1 f H1 g a)) = ((term2816 A B P G2 H2 P1 G1 f H1 g a) = (term2828 A B P G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8276359 A B P G2 H2 P1 G1 f H1 g a) (@lem8276365 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276367 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2816 A B P G2 H2 P1 G1 f H1 g a) = (term2828 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8276366 A B P G2 H2 P1 G1 f H1 g a) (@lem8276351 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276445 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2692 A P Q) = (term2693 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem8276446 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term2829 A B P P' Q) = (term2830 A B P P' Q).
Proof. exact (@lem8276445 (type560 A B P) P' Q). Qed.
Lemma lem8276447 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2831 A B P G2 H2 P1 G1 f H1 g a) = (term2832 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8276446 A B P (term2833 A B P P1 G1 H1 G2 f H2 g a) (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276448 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2834 A B P P1 G1 H1 G2 f H2 g a P2) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2834 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8276449 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276450 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2835 A B P P1 G1 H1 G2 f H2 g a P2) = (term2527 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276449) (@lem8276448 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8276451 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2524 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276452 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2836 A B P G2 H2 P2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276450 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8276451 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276453 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2837 A B P G2 H2 P1 G1 f H1 g a) = (term2819 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276452 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276454 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276455 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2831 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276454 A B P) (@lem8276453 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276456 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276457 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2838 A B P G2 H2 P1 G1 f H1 g a) = (term2839 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276456) (@lem8276455 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276458 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2834 A B P P1 G1 H1 G2 f H2 g a P2) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2834 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8276459 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2840 A B P P1 G1 H1 G2 f H2 g a) = (term2833 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276458 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8276460 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276461 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2841 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276460 A B P) (@lem8276459 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276462 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276463 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2843 A B P P1 G1 H1 G2 f H2 g a) = (term2844 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276462) (@lem8276461 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276464 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2524 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276465 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2832 A B P G2 H2 P1 G1 f H1 g a) = (term2845 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276463 A B P P1 G1 H1 G2 f H2 g a) (@lem8276464 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276466 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2831 A B P G2 H2 P1 G1 f H1 g a) = (term2832 A B P G2 H2 P1 G1 f H1 g a)) = ((term2827 A B P G2 H2 P1 G1 f H1 g a) = (term2845 A B P G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8276457 A B P G2 H2 P1 G1 f H1 g a) (@lem8276465 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276467 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2827 A B P G2 H2 P1 G1 f H1 g a) = (term2845 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8276466 A B P G2 H2 P1 G1 f H1 g a) (@lem8276447 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276469 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8276470 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2732 A B P P' Q) = (term2733 A B P P' Q).
Proof. exact (@lem8276469 (type560 A B P) P' Q). Qed.
Lemma lem8276471 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2846 A B P P1 G1 H1 G2 f H2 g a) = (term2847 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8276470 A B P (term2514 A B P P1 G1 f H1 g a) (term2848 A B P G2 f H2 g a)). Qed.
Lemma lem8276472 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2849 A B P G2 f H2 g a P2) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2849 A B P G2 f H2 g a P2)). Qed.
Lemma lem8276473 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2515 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2515 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276474 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2850 A B P P1 G1 H1 G2 f H2 g a P2) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276473 A B P P1 G1 f H1 g a) (@lem8276472 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8276475 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2851 A B P P1 G1 H1 G2 f H2 g a) = (term2833 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276474 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8276476 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276477 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2846 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276476 A B P) (@lem8276475 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276478 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276479 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2852 A B P P1 G1 H1 G2 f H2 g a) = (term2853 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276478) (@lem8276477 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276480 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2849 A B P G2 f H2 g a P2) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2849 A B P G2 f H2 g a P2)). Qed.
Lemma lem8276481 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2854 A B P G2 f H2 g a) = (term2848 A B P G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276480 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8276482 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276483 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2855 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276482 A B P) (@lem8276481 A B P G2 f H2 g a)). Qed.
Lemma lem8276484 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2515 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2515 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276485 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2847 A B P P1 G1 H1 G2 f H2 g a) = (term2857 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276484 A B P P1 G1 f H1 g a) (@lem8276483 A B P G2 f H2 g a)). Qed.
Lemma lem8276486 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2846 A B P P1 G1 H1 G2 f H2 g a) = (term2847 A B P P1 G1 H1 G2 f H2 g a)) = ((term2842 A B P P1 G1 H1 G2 f H2 g a) = (term2857 A B P P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8276479 A B P P1 G1 H1 G2 f H2 g a) (@lem8276485 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276487 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2842 A B P P1 G1 H1 G2 f H2 g a) = (term2857 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8276486 A B P P1 G1 H1 G2 f H2 g a) (@lem8276471 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276509 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2692 A P Q) = (term2693 A P Q).
Proof. exact (EQ_MP (@lem18965 A P Q) (@lem18964 A P Q)). Qed.
Lemma lem8276510 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term2829 A B P P' Q) = (term2830 A B P P' Q).
Proof. exact (@lem8276509 (type560 A B P) P' Q). Qed.
Lemma lem8276511 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2858 A B P G2 f H2 g a) = (term2859 A B P G2 f H2 g a).
Proof. exact (@lem8276510 A B P (term2860 A B P f g a) (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8276512 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2861 A B P f g a P2) = (term2512 A B P f P2 g a).
Proof. exact (eq_refl (term2861 A B P f g a P2)). Qed.
Lemma lem8276513 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276514 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2862 A B P f g a P2) = (term2513 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8276513) (@lem8276512 A B P f P2 g a)). Qed.
Lemma lem8276515 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8276516 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2863 A B P P2 G2 f H2 g a) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276514 A B P f P2 g a) (@lem8276515 A B P G2 f H2 g a)). Qed.
Lemma lem8276517 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2864 A B P G2 f H2 g a) = (term2848 A B P G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276516 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8276518 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276519 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2858 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276518 A B P) (@lem8276517 A B P G2 f H2 g a)). Qed.
Lemma lem8276520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276521 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2865 A B P G2 f H2 g a) = (term2866 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276520) (@lem8276519 A B P G2 f H2 g a)). Qed.
Lemma lem8276522 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2861 A B P f g a P2) = (term2512 A B P f P2 g a).
Proof. exact (eq_refl (term2861 A B P f g a P2)). Qed.
Lemma lem8276523 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2867 A B P f g a) = (term2860 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276522 A B P f P2 g a)). Qed.
Lemma lem8276524 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276525 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2868 A B P f g a) = (term2869 A B P f g a).
Proof. exact (MK_COMB (@lem8276524 A B P) (@lem8276523 A B P f g a)). Qed.
Lemma lem8276526 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276527 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2870 A B P f g a) = (term2871 A B P f g a).
Proof. exact (MK_COMB (@lem8276526) (@lem8276525 A B P f g a)). Qed.
Lemma lem8276528 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8276529 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2859 A B P G2 f H2 g a) = (term2872 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276527 A B P f g a) (@lem8276528 A B P G2 f H2 g a)). Qed.
Lemma lem8276530 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2858 A B P G2 f H2 g a) = (term2859 A B P G2 f H2 g a)) = ((term2856 A B P G2 f H2 g a) = (term2872 A B P G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8276521 A B P G2 f H2 g a) (@lem8276529 A B P G2 f H2 g a)). Qed.
Lemma lem8276531 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2856 A B P G2 f H2 g a) = (term2872 A B P G2 f H2 g a).
Proof. exact (EQ_MP (@lem8276530 A B P G2 f H2 g a) (@lem8276511 A B P G2 f H2 g a)). Qed.
Lemma lem8276533 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1607 A P Q) = (term1606 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8276534 {A B P : Type'} (P' : type117 A B P) (Q : type117 A B P) : (term2873 A B P P' Q) = (term2874 A B P P' Q).
Proof. exact (@lem8276533 (type560 A B P) P' Q). Qed.
Lemma lem8276535 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2875 A B P f g a) = (term2876 A B P f g a).
Proof. exact (@lem8276534 A B P (term2877 A B P f g a) (term2878 A B P f g a)). Qed.
Lemma lem8276536 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2879 A B P f g a P2) = (term2019 A B P f P2 g a).
Proof. exact (eq_refl (term2879 A B P f g a P2)). Qed.
Lemma lem8276537 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8276538 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2880 A B P f g a P2) = (term2881 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8276537) (@lem8276536 A B P f P2 g a)). Qed.
Lemma lem8276539 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2882 A B P f g a P2) = (term2883 A B P f P2 g a).
Proof. exact (eq_refl (term2882 A B P f g a P2)). Qed.
Lemma lem8276540 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2884 A B P f g a P2) = (term2512 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8276538 A B P f P2 g a) (@lem8276539 A B P f P2 g a)). Qed.
Lemma lem8276541 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2885 A B P f g a) = (term2860 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276540 A B P f P2 g a)). Qed.
Lemma lem8276542 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276543 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2875 A B P f g a) = (term2869 A B P f g a).
Proof. exact (MK_COMB (@lem8276542 A B P) (@lem8276541 A B P f g a)). Qed.
Lemma lem8276544 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276545 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2886 A B P f g a) = (term2887 A B P f g a).
Proof. exact (MK_COMB (@lem8276544) (@lem8276543 A B P f g a)). Qed.
Lemma lem8276546 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2879 A B P f g a P2) = (term2019 A B P f P2 g a).
Proof. exact (eq_refl (term2879 A B P f g a P2)). Qed.
Lemma lem8276547 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2888 A B P f g a) = (term2877 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276546 A B P f P2 g a)). Qed.
Lemma lem8276548 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276549 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2889 A B P f g a) = (term2890 A B P f g a).
Proof. exact (MK_COMB (@lem8276548 A B P) (@lem8276547 A B P f g a)). Qed.
Lemma lem8276550 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8276551 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2891 A B P f g a) = (term2892 A B P f g a).
Proof. exact (MK_COMB (@lem8276550) (@lem8276549 A B P f g a)). Qed.
Lemma lem8276552 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2882 A B P f g a P2) = (term2883 A B P f P2 g a).
Proof. exact (eq_refl (term2882 A B P f g a P2)). Qed.
Lemma lem8276553 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2893 A B P f g a) = (term2878 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8276552 A B P f P2 g a)). Qed.
Lemma lem8276554 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276555 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2894 A B P f g a) = (term2895 A B P f g a).
Proof. exact (MK_COMB (@lem8276554 A B P) (@lem8276553 A B P f g a)). Qed.
Lemma lem8276556 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2876 A B P f g a) = (term2896 A B P f g a).
Proof. exact (MK_COMB (@lem8276551 A B P f g a) (@lem8276555 A B P f g a)). Qed.
Lemma lem8276557 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : ((term2875 A B P f g a) = (term2876 A B P f g a)) = ((term2869 A B P f g a) = (term2896 A B P f g a)).
Proof. exact (MK_COMB (@lem8276545 A B P f g a) (@lem8276556 A B P f g a)). Qed.
Lemma lem8276558 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2869 A B P f g a) = (term2896 A B P f g a).
Proof. exact (EQ_MP (@lem8276557 A B P f g a) (@lem8276535 A B P f g a)). Qed.
Lemma lem8276655 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276656 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2871 A B P f g a) = (term2897 A B P f g a).
Proof. exact (MK_COMB (@lem8276655) (@lem8276558 A B P f g a)). Qed.
Lemma lem8276657 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8276658 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2872 A B P G2 f H2 g a) = (term2898 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276656 A B P f g a) (@lem8276657 A B P G2 f H2 g a)). Qed.
Lemma lem8276659 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2856 A B P G2 f H2 g a) = (term2898 A B P G2 f H2 g a).
Proof. exact (TRANS (@lem8276531 A B P G2 f H2 g a) (@lem8276658 A B P G2 f H2 g a)). Qed.
Lemma lem8276660 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2515 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2515 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276661 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2857 A B P P1 G1 H1 G2 f H2 g a) = (term2899 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276660 A B P P1 G1 f H1 g a) (@lem8276659 A B P G2 f H2 g a)). Qed.
Lemma lem8276662 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2842 A B P P1 G1 H1 G2 f H2 g a) = (term2899 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8276487 A B P P1 G1 H1 G2 f H2 g a) (@lem8276661 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276663 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8276664 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2844 A B P P1 G1 H1 G2 f H2 g a) = (term2900 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8276663) (@lem8276662 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8276665 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2524 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276666 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2845 A B P G2 H2 P1 G1 f H1 g a) = (term2901 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276664 A B P P1 G1 H1 G2 f H2 g a) (@lem8276665 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8276667 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2827 A B P G2 H2 P1 G1 f H1 g a) = (term2901 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8276467 A B P G2 H2 P1 G1 f H1 g a) (@lem8276666 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276668 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276669 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2828 A B P G2 H2 P1 G1 f H1 g a) = (term2902 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276668 A B P a f g) (@lem8276667 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276670 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2816 A B P G2 H2 P1 G1 f H1 g a) = (term2902 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8276367 A B P G2 H2 P1 G1 f H1 g a) (@lem8276669 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276671 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2640 A B P G2 H2 P1 G1 f H1 g a) = (term2902 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8276347 A B P G2 H2 P1 G1 f H1 g a) (@lem8276670 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276672 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2646 A B P G2 H2 G1 f H1 g a) = (term2903 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8276671 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276673 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276674 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2647 A B P G2 H2 G1 f H1 g a) = (term2904 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276673 A B P) (@lem8276672 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276676 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8276677 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2732 A B P P' Q) = (term2733 A B P P' Q).
Proof. exact (@lem8276676 (type560 A B P) P' Q). Qed.
Lemma lem8276678 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2905 A B P G2 H2 G1 f H1 g a) = (term2906 A B P G2 H2 G1 f H1 g a).
Proof. exact (@lem8276677 A B P (term2726 A B P a f g) (term2907 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276679 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2908 A B P G2 H2 G1 f H1 g a P1) = (term2901 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2908 A B P G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8276680 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276681 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2909 A B P G2 H2 G1 f H1 g a P1) = (term2902 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276680 A B P a f g) (@lem8276679 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276682 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2910 A B P G2 H2 G1 f H1 g a) = (term2903 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8276681 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276683 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276684 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2905 A B P G2 H2 G1 f H1 g a) = (term2904 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276683 A B P) (@lem8276682 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276685 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276686 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2911 A B P G2 H2 G1 f H1 g a) = (term2912 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276685) (@lem8276684 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276687 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2908 A B P G2 H2 G1 f H1 g a P1) = (term2901 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2908 A B P G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8276688 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2913 A B P G2 H2 G1 f H1 g a) = (term2907 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8276687 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8276689 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8276690 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2914 A B P G2 H2 G1 f H1 g a) = (term2915 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276689 A B P) (@lem8276688 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276691 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276692 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2906 A B P G2 H2 G1 f H1 g a) = (term2916 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276691 A B P a f g) (@lem8276690 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276693 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2905 A B P G2 H2 G1 f H1 g a) = (term2906 A B P G2 H2 G1 f H1 g a)) = ((term2904 A B P G2 H2 G1 f H1 g a) = (term2916 A B P G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8276686 A B P G2 H2 G1 f H1 g a) (@lem8276692 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276694 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2904 A B P G2 H2 G1 f H1 g a) = (term2916 A B P G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8276693 A B P G2 H2 G1 f H1 g a) (@lem8276678 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276895 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2647 A B P G2 H2 G1 f H1 g a) = (term2916 A B P G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8276674 A B P G2 H2 G1 f H1 g a) (@lem8276694 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276896 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2653 A B P H2 G1 f H1 g a) = (term2917 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8276895 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276897 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8276898 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2654 A B P H2 G1 f H1 g a) = (term2918 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276897 A B P) (@lem8276896 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276900 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8276901 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2762 A B P P' Q) = (term2763 A B P P' Q).
Proof. exact (@lem8276900 (type557 A B P) P' Q). Qed.
Lemma lem8276902 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2919 A B P H2 G1 f H1 g a) = (term2920 A B P H2 G1 f H1 g a).
Proof. exact (@lem8276901 A B P (term2726 A B P a f g) (term2921 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276903 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2922 A B P H2 G1 f H1 g a G2) = (term2915 A B P G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term2922 A B P H2 G1 f H1 g a G2)). Qed.
Lemma lem8276904 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276905 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2923 A B P H2 G1 f H1 g a G2) = (term2916 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276904 A B P a f g) (@lem8276903 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276906 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2924 A B P H2 G1 f H1 g a) = (term2917 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8276905 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276907 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8276908 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2919 A B P H2 G1 f H1 g a) = (term2918 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276907 A B P) (@lem8276906 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276909 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8276910 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2925 A B P H2 G1 f H1 g a) = (term2926 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276909) (@lem8276908 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276911 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2922 A B P H2 G1 f H1 g a G2) = (term2915 A B P G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term2922 A B P H2 G1 f H1 g a G2)). Qed.
Lemma lem8276912 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2927 A B P H2 G1 f H1 g a) = (term2921 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8276911 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8276913 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8276914 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2928 A B P H2 G1 f H1 g a) = (term2929 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276913 A B P) (@lem8276912 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276915 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8276916 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2920 A B P H2 G1 f H1 g a) = (term2930 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8276915 A B P a f g) (@lem8276914 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276917 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2919 A B P H2 G1 f H1 g a) = (term2920 A B P H2 G1 f H1 g a)) = ((term2918 A B P H2 G1 f H1 g a) = (term2930 A B P H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8276910 A B P H2 G1 f H1 g a) (@lem8276916 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8276918 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2918 A B P H2 G1 f H1 g a) = (term2930 A B P H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8276917 A B P H2 G1 f H1 g a) (@lem8276902 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8277123 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2654 A B P H2 G1 f H1 g a) = (term2930 A B P H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8276898 A B P H2 G1 f H1 g a) (@lem8276918 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8277124 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2660 A B P H2 f H1 g a) = (term2931 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277123 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8277125 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277126 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2661 A B P H2 f H1 g a) = (term2932 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277125 A B P) (@lem8277124 A B P H2 f H1 g a)). Qed.
Lemma lem8277128 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1568 A P Q) = (term1567 A P Q).
Proof. exact (EQ_MP (@lem18959 A P Q) (@lem18958 A P Q)). Qed.
Lemma lem8277129 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2762 A B P P' Q) = (term2763 A B P P' Q).
Proof. exact (@lem8277128 (type557 A B P) P' Q). Qed.
Lemma lem8277130 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2933 A B P H2 f H1 g a) = (term2934 A B P H2 f H1 g a).
Proof. exact (@lem8277129 A B P (term2726 A B P a f g) (term2935 A B P H2 f H1 g a)). Qed.
Lemma lem8277131 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2936 A B P H2 f H1 g a G1) = (term2929 A B P H2 G1 f H1 g a).
Proof. exact (eq_refl (term2936 A B P H2 f H1 g a G1)). Qed.
Lemma lem8277132 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8277133 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2937 A B P H2 f H1 g a G1) = (term2930 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8277132 A B P a f g) (@lem8277131 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8277134 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2938 A B P H2 f H1 g a) = (term2931 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277133 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8277135 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277136 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2933 A B P H2 f H1 g a) = (term2932 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277135 A B P) (@lem8277134 A B P H2 f H1 g a)). Qed.
Lemma lem8277137 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277138 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2939 A B P H2 f H1 g a) = (term2940 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277137) (@lem8277136 A B P H2 f H1 g a)). Qed.
Lemma lem8277139 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2936 A B P H2 f H1 g a G1) = (term2929 A B P H2 G1 f H1 g a).
Proof. exact (eq_refl (term2936 A B P H2 f H1 g a G1)). Qed.
Lemma lem8277140 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2941 A B P H2 f H1 g a) = (term2935 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277139 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8277141 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277142 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2942 A B P H2 f H1 g a) = (term2943 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277141 A B P) (@lem8277140 A B P H2 f H1 g a)). Qed.
Lemma lem8277143 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8277144 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2934 A B P H2 f H1 g a) = (term2944 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277143 A B P a f g) (@lem8277142 A B P H2 f H1 g a)). Qed.
Lemma lem8277145 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2933 A B P H2 f H1 g a) = (term2934 A B P H2 f H1 g a)) = ((term2932 A B P H2 f H1 g a) = (term2944 A B P H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8277138 A B P H2 f H1 g a) (@lem8277144 A B P H2 f H1 g a)). Qed.
Lemma lem8277146 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2932 A B P H2 f H1 g a) = (term2944 A B P H2 f H1 g a).
Proof. exact (EQ_MP (@lem8277145 A B P H2 f H1 g a) (@lem8277130 A B P H2 f H1 g a)). Qed.
Lemma lem8277355 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2661 A B P H2 f H1 g a) = (term2944 A B P H2 f H1 g a).
Proof. exact (TRANS (@lem8277126 A B P H2 f H1 g a) (@lem8277146 A B P H2 f H1 g a)). Qed.
Lemma lem8277356 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277357 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2663 A B P p H2 f H1 g a) = (term2945 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277356 A B P p f a) (@lem8277355 A B P H2 f H1 g a)). Qed.
Lemma lem8277358 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8277359 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2666 A B P P' p H2 f H1 g a) = (term2946 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8277358 A B P P' f a) (@lem8277357 A B P p H2 f H1 g a)). Qed.
Lemma lem8277360 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2673 A B P P' p H2 H1 g a) = (term2947 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8277359 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8277361 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8277362 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2674 A B P P' p H2 H1 g a) = (term2948 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8277361 A B) (@lem8277360 A B P P' p H2 H1 g a)). Qed.
Lemma lem8277411 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277412 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2676 A B P P' p H2 H1 g a) = (term2949 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8277411 A B P p g a) (@lem8277362 A B P P' p H2 H1 g a)). Qed.
Lemma lem8277413 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2683 A B P P' H2 H1 g a) = (term2950 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8277412 A B P P' p H2 H1 g a)). Qed.
Lemma lem8277414 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277415 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2684 A B P P' H2 H1 g a) = (term2951 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8277414 A B P) (@lem8277413 A B P P' H2 H1 g a)). Qed.
Lemma lem8277464 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8277465 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2686 A B P P' H2 H1 g a) = (term2952 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8277464 A B P P' g a) (@lem8277415 A B P P' H2 H1 g a)). Qed.
Lemma lem8277466 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2691 A B P P' H2 H1 g a) = (term2953 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8276028 A B P P' H1 H2 g a) (@lem8277465 A B P P' H2 H1 g a)). Qed.
Lemma lem8277468 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2693 A P Q) = (term2692 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8277469 {A P : Type'} (P' : type805 A P) (Q : Prop) : (term2714 A P P' Q) = (term2713 A P P' Q).
Proof. exact (@lem8277468 (P -> A) P' Q). Qed.
Lemma lem8277470 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2954 A B P H1 f H2 g a) = (term2955 A B P H1 f H2 g a).
Proof. exact (@lem8277469 A P (term2717 A B P a f g) (term2788 A B P H1 f H2 g a)). Qed.
Lemma lem8277471 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8277472 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2724 A B P a f g) = (term2717 A B P a f g).
Proof. exact (fun_ext (fun s : P -> A => @lem8277471 A B P s a f g)). Qed.
Lemma lem8277473 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277474 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2725 A B P a f g) = (term2726 A B P a f g).
Proof. exact (MK_COMB (@lem8277473 A P) (@lem8277472 A B P a f g)). Qed.
Lemma lem8277475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8277476 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2727 A B P a f g) = (term2728 A B P a f g).
Proof. exact (MK_COMB (@lem8277475) (@lem8277474 A B P a f g)). Qed.
Lemma lem8277477 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2788 A B P H1 f H2 g a) = (term2788 A B P H1 f H2 g a).
Proof. exact (eq_refl (term2788 A B P H1 f H2 g a)). Qed.
Lemma lem8277478 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2954 A B P H1 f H2 g a) = (term2789 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277476 A B P a f g) (@lem8277477 A B P H1 f H2 g a)). Qed.
Lemma lem8277479 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277480 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2956 A B P H1 f H2 g a) = (term2957 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277479) (@lem8277478 A B P H1 f H2 g a)). Qed.
Lemma lem8277481 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8277482 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8277483 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2719 A B P a f g s) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8277482) (@lem8277481 A B P s a f g)). Qed.
Lemma lem8277484 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2788 A B P H1 f H2 g a) = (term2788 A B P H1 f H2 g a).
Proof. exact (eq_refl (term2788 A B P H1 f H2 g a)). Qed.
Lemma lem8277485 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2958 A B P s H1 f H2 g a) = (term2959 A B P s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277483 A B P s a f g) (@lem8277484 A B P H1 f H2 g a)). Qed.
Lemma lem8277486 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2960 A B P H1 f H2 g a) = (term2961 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277485 A B P s H1 f H2 g a)). Qed.
Lemma lem8277487 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277488 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2955 A B P H1 f H2 g a) = (term2962 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277487 A P) (@lem8277486 A B P H1 f H2 g a)). Qed.
Lemma lem8277489 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2954 A B P H1 f H2 g a) = (term2955 A B P H1 f H2 g a)) = ((term2789 A B P H1 f H2 g a) = (term2962 A B P H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277480 A B P H1 f H2 g a) (@lem8277488 A B P H1 f H2 g a)). Qed.
Lemma lem8277490 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2789 A B P H1 f H2 g a) = (term2962 A B P H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277489 A B P H1 f H2 g a) (@lem8277470 A B P H1 f H2 g a)). Qed.
Lemma lem8277492 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2693 A P Q) = (term2692 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8277493 {A : Type'} (P : type421 A) (Q : Prop) : (term2695 A P Q) = (term2694 A P Q).
Proof. exact (@lem8277492 (type1402 A) P Q). Qed.
Lemma lem8277494 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2963 A B P s H1 f H2 g a) = (term2964 A B P s H1 f H2 g a).
Proof. exact (@lem8277493 A (term2698 A B P s a f g) (term2788 A B P H1 f H2 g a)). Qed.
Lemma lem8277495 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8277496 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2705 A B P s a f g) = (term2698 A B P s a f g).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277495 A B P lt2 s a f g)). Qed.
Lemma lem8277497 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277498 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2706 A B P s a f g) = (term2707 A B P s a f g).
Proof. exact (MK_COMB (@lem8277497 A) (@lem8277496 A B P s a f g)). Qed.
Lemma lem8277499 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8277500 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2708 A B P s a f g) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8277499) (@lem8277498 A B P s a f g)). Qed.
Lemma lem8277501 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2788 A B P H1 f H2 g a) = (term2788 A B P H1 f H2 g a).
Proof. exact (eq_refl (term2788 A B P H1 f H2 g a)). Qed.
Lemma lem8277502 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2963 A B P s H1 f H2 g a) = (term2959 A B P s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277500 A B P s a f g) (@lem8277501 A B P H1 f H2 g a)). Qed.
Lemma lem8277503 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277504 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2965 A B P s H1 f H2 g a) = (term2966 A B P s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277503) (@lem8277502 A B P s H1 f H2 g a)). Qed.
Lemma lem8277505 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8277506 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8277507 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2700 A B P s a f g lt2) = (term2532 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8277506) (@lem8277505 A B P lt2 s a f g)). Qed.
Lemma lem8277508 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2788 A B P H1 f H2 g a) = (term2788 A B P H1 f H2 g a).
Proof. exact (eq_refl (term2788 A B P H1 f H2 g a)). Qed.
Lemma lem8277509 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2967 A B P s lt2 H1 f H2 g a) = (term2968 A B P lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277507 A B P lt2 s a f g) (@lem8277508 A B P H1 f H2 g a)). Qed.
Lemma lem8277510 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2969 A B P s H1 f H2 g a) = (term2970 A B P s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277509 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277511 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277512 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2964 A B P s H1 f H2 g a) = (term2971 A B P s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277511 A) (@lem8277510 A B P s H1 f H2 g a)). Qed.
Lemma lem8277513 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2963 A B P s H1 f H2 g a) = (term2964 A B P s H1 f H2 g a)) = ((term2959 A B P s H1 f H2 g a) = (term2971 A B P s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277504 A B P s H1 f H2 g a) (@lem8277512 A B P s H1 f H2 g a)). Qed.
Lemma lem8277514 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2959 A B P s H1 f H2 g a) = (term2971 A B P s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277513 A B P s H1 f H2 g a) (@lem8277494 A B P s H1 f H2 g a)). Qed.
Lemma lem8277516 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277517 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277516 (type557 A B P) P' Q). Qed.
Lemma lem8277518 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2972 A B P lt2 s H1 f H2 g a) = (term2973 A B P lt2 s H1 f H2 g a).
Proof. exact (@lem8277517 A B P (term586 A B P lt2 s a f g) (term2780 A B P H1 f H2 g a)). Qed.
Lemma lem8277519 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2781 A B P H1 f H2 g a G1) = (term2774 A B P G1 H1 f H2 g a).
Proof. exact (eq_refl (term2781 A B P H1 f H2 g a G1)). Qed.
Lemma lem8277520 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2786 A B P H1 f H2 g a) = (term2780 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277519 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8277521 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277522 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2787 A B P H1 f H2 g a) = (term2788 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277521 A B P) (@lem8277520 A B P H1 f H2 g a)). Qed.
Lemma lem8277523 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277524 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2972 A B P lt2 s H1 f H2 g a) = (term2968 A B P lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277523 A B P lt2 s a f g) (@lem8277522 A B P H1 f H2 g a)). Qed.
Lemma lem8277525 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277526 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2974 A B P lt2 s H1 f H2 g a) = (term2975 A B P lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277525) (@lem8277524 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277527 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2781 A B P H1 f H2 g a G1) = (term2774 A B P G1 H1 f H2 g a).
Proof. exact (eq_refl (term2781 A B P H1 f H2 g a G1)). Qed.
Lemma lem8277528 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277529 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2976 A B P lt2 s H1 f H2 g a G1) = (term2977 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277528 A B P lt2 s a f g) (@lem8277527 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8277530 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2978 A B P lt2 s H1 f H2 g a) = (term2979 A B P lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277529 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277531 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277532 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2973 A B P lt2 s H1 f H2 g a) = (term2980 A B P lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277531 A B P) (@lem8277530 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277533 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2972 A B P lt2 s H1 f H2 g a) = (term2973 A B P lt2 s H1 f H2 g a)) = ((term2968 A B P lt2 s H1 f H2 g a) = (term2980 A B P lt2 s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277526 A B P lt2 s H1 f H2 g a) (@lem8277532 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277534 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2968 A B P lt2 s H1 f H2 g a) = (term2980 A B P lt2 s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277533 A B P lt2 s H1 f H2 g a) (@lem8277518 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277536 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277537 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277536 (type557 A B P) P' Q). Qed.
Lemma lem8277538 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2981 A B P lt2 s G1 H1 f H2 g a) = (term2982 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (@lem8277537 A B P (term586 A B P lt2 s a f g) (term2766 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8277539 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2767 A B P G1 H1 f H2 g a G2) = (term2758 A B P G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2767 A B P G1 H1 f H2 g a G2)). Qed.
Lemma lem8277540 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2772 A B P G1 H1 f H2 g a) = (term2766 A B P G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277539 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277541 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277542 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2773 A B P G1 H1 f H2 g a) = (term2774 A B P G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277541 A B P) (@lem8277540 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8277543 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277544 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2981 A B P lt2 s G1 H1 f H2 g a) = (term2977 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277543 A B P lt2 s a f g) (@lem8277542 A B P G1 H1 f H2 g a)). Qed.
Lemma lem8277545 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277546 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2983 A B P lt2 s G1 H1 f H2 g a) = (term2984 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277545) (@lem8277544 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277547 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2767 A B P G1 H1 f H2 g a G2) = (term2758 A B P G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2767 A B P G1 H1 f H2 g a G2)). Qed.
Lemma lem8277548 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277549 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2985 A B P lt2 s G1 H1 f H2 g a G2) = (term2986 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277548 A B P lt2 s a f g) (@lem8277547 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277550 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2987 A B P lt2 s G1 H1 f H2 g a) = (term2988 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277549 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277551 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277552 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2982 A B P lt2 s G1 H1 f H2 g a) = (term2989 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277551 A B P) (@lem8277550 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277553 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2981 A B P lt2 s G1 H1 f H2 g a) = (term2982 A B P lt2 s G1 H1 f H2 g a)) = ((term2977 A B P lt2 s G1 H1 f H2 g a) = (term2989 A B P lt2 s G1 H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277546 A B P lt2 s G1 H1 f H2 g a) (@lem8277552 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277554 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2977 A B P lt2 s G1 H1 f H2 g a) = (term2989 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277553 A B P lt2 s G1 H1 f H2 g a) (@lem8277538 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277556 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277557 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8277556 (type560 A B P) P' Q). Qed.
Lemma lem8277558 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2990 A B P lt2 s G1 H1 G2 f H2 g a) = (term2991 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (@lem8277557 A B P (term586 A B P lt2 s a f g) (term2750 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277559 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2751 A B P G1 H1 G2 f H2 g a P1) = (term2744 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2751 A B P G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8277560 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2756 A B P G1 H1 G2 f H2 g a) = (term2750 A B P G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277559 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277561 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277562 {A B P : Type'} (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2757 A B P G1 H1 G2 f H2 g a) = (term2758 A B P G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277561 A B P) (@lem8277560 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277563 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277564 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2990 A B P lt2 s G1 H1 G2 f H2 g a) = (term2986 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277563 A B P lt2 s a f g) (@lem8277562 A B P G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277566 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2992 A B P lt2 s G1 H1 G2 f H2 g a) = (term2993 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277565) (@lem8277564 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277567 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2751 A B P G1 H1 G2 f H2 g a P1) = (term2744 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term2751 A B P G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8277568 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277569 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s G1 H1 G2 f H2 g a P1) = (term2995 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277568 A B P lt2 s a f g) (@lem8277567 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277570 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2996 A B P lt2 s G1 H1 G2 f H2 g a) = (term2997 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277569 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277571 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277572 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2991 A B P lt2 s G1 H1 G2 f H2 g a) = (term2998 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277571 A B P) (@lem8277570 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277573 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2990 A B P lt2 s G1 H1 G2 f H2 g a) = (term2991 A B P lt2 s G1 H1 G2 f H2 g a)) = ((term2986 A B P lt2 s G1 H1 G2 f H2 g a) = (term2998 A B P lt2 s G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8277566 A B P lt2 s G1 H1 G2 f H2 g a) (@lem8277572 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277574 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2986 A B P lt2 s G1 H1 G2 f H2 g a) = (term2998 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8277573 A B P lt2 s G1 H1 G2 f H2 g a) (@lem8277558 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277576 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277577 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8277576 (type560 A B P) P' Q). Qed.
Lemma lem8277578 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2999 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3000 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8277577 A B P (term586 A B P lt2 s a f g) (term2736 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277579 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2737 A B P P1 G1 H1 G2 f H2 g a P2) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2737 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8277580 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2742 A B P P1 G1 H1 G2 f H2 g a) = (term2736 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8277579 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277581 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277582 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2743 A B P P1 G1 H1 G2 f H2 g a) = (term2744 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277581 A B P) (@lem8277580 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277583 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277584 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2999 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term2995 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277583 A B P lt2 s a f g) (@lem8277582 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277585 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277586 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3001 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3002 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277585) (@lem8277584 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277587 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2737 A B P P1 G1 H1 G2 f H2 g a P2) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2737 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8277588 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8277589 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3003 A B P lt2 s P1 G1 H1 G2 f H2 g a P2) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277588 A B P lt2 s a f g) (@lem8277587 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277590 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3004 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3005 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8277589 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277591 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277592 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3000 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3006 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277591 A B P) (@lem8277590 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277593 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2999 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3000 A B P lt2 s P1 G1 H1 G2 f H2 g a)) = ((term2995 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3006 A B P lt2 s P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8277586 A B P lt2 s P1 G1 H1 G2 f H2 g a) (@lem8277592 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277594 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2995 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3006 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8277593 A B P lt2 s P1 G1 H1 G2 f H2 g a) (@lem8277578 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277595 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2997 A B P lt2 s G1 H1 G2 f H2 g a) = (term3007 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277594 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277596 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277597 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2998 A B P lt2 s G1 H1 G2 f H2 g a) = (term3008 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277596 A B P) (@lem8277595 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277598 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2986 A B P lt2 s G1 H1 G2 f H2 g a) = (term3008 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8277574 A B P lt2 s G1 H1 G2 f H2 g a) (@lem8277597 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277599 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2988 A B P lt2 s G1 H1 f H2 g a) = (term3009 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277598 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277600 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277601 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2989 A B P lt2 s G1 H1 f H2 g a) = (term3010 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277600 A B P) (@lem8277599 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277602 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2977 A B P lt2 s G1 H1 f H2 g a) = (term3010 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8277554 A B P lt2 s G1 H1 f H2 g a) (@lem8277601 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277603 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2979 A B P lt2 s H1 f H2 g a) = (term3011 A B P lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277602 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277604 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277605 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2980 A B P lt2 s H1 f H2 g a) = (term3012 A B P lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277604 A B P) (@lem8277603 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277606 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2968 A B P lt2 s H1 f H2 g a) = (term3012 A B P lt2 s H1 f H2 g a).
Proof. exact (TRANS (@lem8277534 A B P lt2 s H1 f H2 g a) (@lem8277605 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277607 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2970 A B P s H1 f H2 g a) = (term3013 A B P s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277606 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277608 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277609 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2971 A B P s H1 f H2 g a) = (term3014 A B P s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277608 A) (@lem8277607 A B P s H1 f H2 g a)). Qed.
Lemma lem8277610 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2959 A B P s H1 f H2 g a) = (term3014 A B P s H1 f H2 g a).
Proof. exact (TRANS (@lem8277514 A B P s H1 f H2 g a) (@lem8277609 A B P s H1 f H2 g a)). Qed.
Lemma lem8277611 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2961 A B P H1 f H2 g a) = (term3015 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277610 A B P s H1 f H2 g a)). Qed.
Lemma lem8277612 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277613 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2962 A B P H1 f H2 g a) = (term3016 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277612 A P) (@lem8277611 A B P H1 f H2 g a)). Qed.
Lemma lem8277614 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2789 A B P H1 f H2 g a) = (term3016 A B P H1 f H2 g a).
Proof. exact (TRANS (@lem8277490 A B P H1 f H2 g a) (@lem8277613 A B P H1 f H2 g a)). Qed.
Lemma lem8277615 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277616 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2790 A B P p H1 f H2 g a) = (term3017 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277615 A B P p f a) (@lem8277614 A B P H1 f H2 g a)). Qed.
Lemma lem8277618 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277619 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8277618 (P -> A) P' Q). Qed.
Lemma lem8277620 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3020 A B P p H1 f H2 g a) = (term3021 A B P p H1 f H2 g a).
Proof. exact (@lem8277619 A P (p f a) (term3015 A B P H1 f H2 g a)). Qed.
Lemma lem8277621 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3022 A B P H1 f H2 g a s) = (term3014 A B P s H1 f H2 g a).
Proof. exact (eq_refl (term3022 A B P H1 f H2 g a s)). Qed.
Lemma lem8277622 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3023 A B P H1 f H2 g a) = (term3015 A B P H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277621 A B P s H1 f H2 g a)). Qed.
Lemma lem8277623 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277624 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3024 A B P H1 f H2 g a) = (term3016 A B P H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277623 A P) (@lem8277622 A B P H1 f H2 g a)). Qed.
Lemma lem8277625 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277626 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3020 A B P p H1 f H2 g a) = (term3017 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277625 A B P p f a) (@lem8277624 A B P H1 f H2 g a)). Qed.
Lemma lem8277627 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277628 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3025 A B P p H1 f H2 g a) = (term3026 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277627) (@lem8277626 A B P p H1 f H2 g a)). Qed.
Lemma lem8277629 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3022 A B P H1 f H2 g a s) = (term3014 A B P s H1 f H2 g a).
Proof. exact (eq_refl (term3022 A B P H1 f H2 g a s)). Qed.
Lemma lem8277630 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277631 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3027 A B P p H1 f H2 g a s) = (term3028 A B P p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277630 A B P p f a) (@lem8277629 A B P s H1 f H2 g a)). Qed.
Lemma lem8277632 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3029 A B P p H1 f H2 g a) = (term3030 A B P p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277631 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277633 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277634 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3021 A B P p H1 f H2 g a) = (term3031 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277633 A P) (@lem8277632 A B P p H1 f H2 g a)). Qed.
Lemma lem8277635 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3020 A B P p H1 f H2 g a) = (term3021 A B P p H1 f H2 g a)) = ((term3017 A B P p H1 f H2 g a) = (term3031 A B P p H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277628 A B P p H1 f H2 g a) (@lem8277634 A B P p H1 f H2 g a)). Qed.
Lemma lem8277636 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3017 A B P p H1 f H2 g a) = (term3031 A B P p H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277635 A B P p H1 f H2 g a) (@lem8277620 A B P p H1 f H2 g a)). Qed.
Lemma lem8277638 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277639 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8277638 (type1402 A) P Q). Qed.
Lemma lem8277640 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3034 A B P p s H1 f H2 g a) = (term3035 A B P p s H1 f H2 g a).
Proof. exact (@lem8277639 A (p f a) (term3013 A B P s H1 f H2 g a)). Qed.
Lemma lem8277641 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3036 A B P s H1 f H2 g a lt2) = (term3012 A B P lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3036 A B P s H1 f H2 g a lt2)). Qed.
Lemma lem8277642 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3037 A B P s H1 f H2 g a) = (term3013 A B P s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277641 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277643 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277644 {A B P : Type'} (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3038 A B P s H1 f H2 g a) = (term3014 A B P s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277643 A) (@lem8277642 A B P s H1 f H2 g a)). Qed.
Lemma lem8277645 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277646 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3034 A B P p s H1 f H2 g a) = (term3028 A B P p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277645 A B P p f a) (@lem8277644 A B P s H1 f H2 g a)). Qed.
Lemma lem8277647 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277648 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3039 A B P p s H1 f H2 g a) = (term3040 A B P p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277647) (@lem8277646 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277649 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3036 A B P s H1 f H2 g a lt2) = (term3012 A B P lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3036 A B P s H1 f H2 g a lt2)). Qed.
Lemma lem8277650 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277651 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3041 A B P p s H1 f H2 g a lt2) = (term3042 A B P p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277650 A B P p f a) (@lem8277649 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277652 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3043 A B P p s H1 f H2 g a) = (term3044 A B P p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277651 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277653 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277654 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3035 A B P p s H1 f H2 g a) = (term3045 A B P p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277653 A) (@lem8277652 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277655 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3034 A B P p s H1 f H2 g a) = (term3035 A B P p s H1 f H2 g a)) = ((term3028 A B P p s H1 f H2 g a) = (term3045 A B P p s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277648 A B P p s H1 f H2 g a) (@lem8277654 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277656 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3028 A B P p s H1 f H2 g a) = (term3045 A B P p s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277655 A B P p s H1 f H2 g a) (@lem8277640 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277658 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277659 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277658 (type557 A B P) P' Q). Qed.
Lemma lem8277660 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3046 A B P p lt2 s H1 f H2 g a) = (term3047 A B P p lt2 s H1 f H2 g a).
Proof. exact (@lem8277659 A B P (p f a) (term3011 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277661 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3048 A B P lt2 s H1 f H2 g a G1) = (term3010 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3048 A B P lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8277662 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3049 A B P lt2 s H1 f H2 g a) = (term3011 A B P lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277661 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277663 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277664 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3050 A B P lt2 s H1 f H2 g a) = (term3012 A B P lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277663 A B P) (@lem8277662 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277665 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277666 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3046 A B P p lt2 s H1 f H2 g a) = (term3042 A B P p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277665 A B P p f a) (@lem8277664 A B P lt2 s H1 f H2 g a)). Qed.
Lemma lem8277667 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277668 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3051 A B P p lt2 s H1 f H2 g a) = (term3052 A B P p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277667) (@lem8277666 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277669 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3048 A B P lt2 s H1 f H2 g a G1) = (term3010 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3048 A B P lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8277670 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277671 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3053 A B P p lt2 s H1 f H2 g a G1) = (term3054 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277670 A B P p f a) (@lem8277669 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277672 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3055 A B P p lt2 s H1 f H2 g a) = (term3056 A B P p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277671 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277673 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277674 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3047 A B P p lt2 s H1 f H2 g a) = (term3057 A B P p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277673 A B P) (@lem8277672 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277675 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3046 A B P p lt2 s H1 f H2 g a) = (term3047 A B P p lt2 s H1 f H2 g a)) = ((term3042 A B P p lt2 s H1 f H2 g a) = (term3057 A B P p lt2 s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277668 A B P p lt2 s H1 f H2 g a) (@lem8277674 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277676 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3042 A B P p lt2 s H1 f H2 g a) = (term3057 A B P p lt2 s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277675 A B P p lt2 s H1 f H2 g a) (@lem8277660 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277678 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277679 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277678 (type557 A B P) P' Q). Qed.
Lemma lem8277680 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3058 A B P p lt2 s G1 H1 f H2 g a) = (term3059 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (@lem8277679 A B P (p f a) (term3009 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277681 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3060 A B P lt2 s G1 H1 f H2 g a G2) = (term3008 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3060 A B P lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8277682 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3061 A B P lt2 s G1 H1 f H2 g a) = (term3009 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277681 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277683 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277684 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3062 A B P lt2 s G1 H1 f H2 g a) = (term3010 A B P lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277683 A B P) (@lem8277682 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277685 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277686 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3058 A B P p lt2 s G1 H1 f H2 g a) = (term3054 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277685 A B P p f a) (@lem8277684 A B P lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277687 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277688 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3063 A B P p lt2 s G1 H1 f H2 g a) = (term3064 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277687) (@lem8277686 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277689 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3060 A B P lt2 s G1 H1 f H2 g a G2) = (term3008 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3060 A B P lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8277690 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277691 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3065 A B P p lt2 s G1 H1 f H2 g a G2) = (term3066 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277690 A B P p f a) (@lem8277689 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277692 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3067 A B P p lt2 s G1 H1 f H2 g a) = (term3068 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277691 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277693 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277694 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3059 A B P p lt2 s G1 H1 f H2 g a) = (term3069 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277693 A B P) (@lem8277692 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277695 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3058 A B P p lt2 s G1 H1 f H2 g a) = (term3059 A B P p lt2 s G1 H1 f H2 g a)) = ((term3054 A B P p lt2 s G1 H1 f H2 g a) = (term3069 A B P p lt2 s G1 H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277688 A B P p lt2 s G1 H1 f H2 g a) (@lem8277694 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277696 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3054 A B P p lt2 s G1 H1 f H2 g a) = (term3069 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277695 A B P p lt2 s G1 H1 f H2 g a) (@lem8277680 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277698 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277699 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8277698 (type560 A B P) P' Q). Qed.
Lemma lem8277700 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3070 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3071 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (@lem8277699 A B P (p f a) (term3007 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277701 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3072 A B P lt2 s G1 H1 G2 f H2 g a P1) = (term3006 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3072 A B P lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8277702 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3073 A B P lt2 s G1 H1 G2 f H2 g a) = (term3007 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277701 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277703 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277704 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s G1 H1 G2 f H2 g a) = (term3008 A B P lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277703 A B P) (@lem8277702 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277705 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277706 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3070 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3066 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277705 A B P p f a) (@lem8277704 A B P lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277707 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277708 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3075 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3076 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277707) (@lem8277706 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277709 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3072 A B P lt2 s G1 H1 G2 f H2 g a P1) = (term3006 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3072 A B P lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8277710 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277711 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3077 A B P p lt2 s G1 H1 G2 f H2 g a P1) = (term3078 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277710 A B P p f a) (@lem8277709 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277712 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3079 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3080 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277711 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277713 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277714 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3071 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3081 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277713 A B P) (@lem8277712 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277715 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3070 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3071 A B P p lt2 s G1 H1 G2 f H2 g a)) = ((term3066 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3081 A B P p lt2 s G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8277708 A B P p lt2 s G1 H1 G2 f H2 g a) (@lem8277714 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277716 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3066 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3081 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8277715 A B P p lt2 s G1 H1 G2 f H2 g a) (@lem8277700 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277718 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277719 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8277718 (type560 A B P) P' Q). Qed.
Lemma lem8277720 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3082 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3083 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8277719 A B P (p f a) (term3005 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277721 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3084 A B P lt2 s P1 G1 H1 G2 f H2 g a P2) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3084 A B P lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8277722 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3085 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3005 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8277721 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277723 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277724 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3086 A B P lt2 s P1 G1 H1 G2 f H2 g a) = (term3006 A B P lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277723 A B P) (@lem8277722 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277725 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277726 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3082 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3078 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277725 A B P p f a) (@lem8277724 A B P lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277727 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277728 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3087 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3088 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277727) (@lem8277726 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277729 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3084 A B P lt2 s P1 G1 H1 G2 f H2 g a P2) = (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3084 A B P lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8277730 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8277731 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3089 A B P p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3090 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277730 A B P p f a) (@lem8277729 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277732 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3091 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3092 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8277731 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277733 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277734 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3083 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3093 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277733 A B P) (@lem8277732 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277735 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3082 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3083 A B P p lt2 s P1 G1 H1 G2 f H2 g a)) = ((term3078 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3093 A B P p lt2 s P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8277728 A B P p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8277734 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277736 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3078 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3093 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8277735 A B P p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8277720 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277737 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3080 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3094 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277736 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277738 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277739 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3081 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3095 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277738 A B P) (@lem8277737 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277740 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3066 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3095 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8277716 A B P p lt2 s G1 H1 G2 f H2 g a) (@lem8277739 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277741 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3068 A B P p lt2 s G1 H1 f H2 g a) = (term3096 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277740 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277742 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277743 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3069 A B P p lt2 s G1 H1 f H2 g a) = (term3097 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277742 A B P) (@lem8277741 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277744 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3054 A B P p lt2 s G1 H1 f H2 g a) = (term3097 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8277696 A B P p lt2 s G1 H1 f H2 g a) (@lem8277743 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277745 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3056 A B P p lt2 s H1 f H2 g a) = (term3098 A B P p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277744 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277746 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277747 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3057 A B P p lt2 s H1 f H2 g a) = (term3099 A B P p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277746 A B P) (@lem8277745 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277748 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3042 A B P p lt2 s H1 f H2 g a) = (term3099 A B P p lt2 s H1 f H2 g a).
Proof. exact (TRANS (@lem8277676 A B P p lt2 s H1 f H2 g a) (@lem8277747 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277749 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3044 A B P p s H1 f H2 g a) = (term3100 A B P p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277748 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277750 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277751 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3045 A B P p s H1 f H2 g a) = (term3101 A B P p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277750 A) (@lem8277749 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277752 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3028 A B P p s H1 f H2 g a) = (term3101 A B P p s H1 f H2 g a).
Proof. exact (TRANS (@lem8277656 A B P p s H1 f H2 g a) (@lem8277751 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277753 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3030 A B P p H1 f H2 g a) = (term3102 A B P p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277752 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277754 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277755 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3031 A B P p H1 f H2 g a) = (term3103 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277754 A P) (@lem8277753 A B P p H1 f H2 g a)). Qed.
Lemma lem8277756 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3017 A B P p H1 f H2 g a) = (term3103 A B P p H1 f H2 g a).
Proof. exact (TRANS (@lem8277636 A B P p H1 f H2 g a) (@lem8277755 A B P p H1 f H2 g a)). Qed.
Lemma lem8277757 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2790 A B P p H1 f H2 g a) = (term3103 A B P p H1 f H2 g a).
Proof. exact (TRANS (@lem8277616 A B P p H1 f H2 g a) (@lem8277756 A B P p H1 f H2 g a)). Qed.
Lemma lem8277758 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277759 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2791 A B P P' p H1 f H2 g a) = (term3104 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277758 A B P P' f a) (@lem8277757 A B P p H1 f H2 g a)). Qed.
Lemma lem8277761 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277762 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8277761 (P -> A) P' Q). Qed.
Lemma lem8277763 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3105 A B P P' p H1 f H2 g a) = (term3106 A B P P' p H1 f H2 g a).
Proof. exact (@lem8277762 A P (P' f a) (term3102 A B P p H1 f H2 g a)). Qed.
Lemma lem8277764 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3107 A B P p H1 f H2 g a s) = (term3101 A B P p s H1 f H2 g a).
Proof. exact (eq_refl (term3107 A B P p H1 f H2 g a s)). Qed.
Lemma lem8277765 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3108 A B P p H1 f H2 g a) = (term3102 A B P p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277764 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277766 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277767 {A B P : Type'} (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3109 A B P p H1 f H2 g a) = (term3103 A B P p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277766 A P) (@lem8277765 A B P p H1 f H2 g a)). Qed.
Lemma lem8277768 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277769 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3105 A B P P' p H1 f H2 g a) = (term3104 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277768 A B P P' f a) (@lem8277767 A B P p H1 f H2 g a)). Qed.
Lemma lem8277770 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277771 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3110 A B P P' p H1 f H2 g a) = (term3111 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277770) (@lem8277769 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277772 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3107 A B P p H1 f H2 g a s) = (term3101 A B P p s H1 f H2 g a).
Proof. exact (eq_refl (term3107 A B P p H1 f H2 g a s)). Qed.
Lemma lem8277773 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277774 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3112 A B P P' p H1 f H2 g a s) = (term3113 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277773 A B P P' f a) (@lem8277772 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277775 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3114 A B P P' p H1 f H2 g a) = (term3115 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277774 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277776 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277777 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3106 A B P P' p H1 f H2 g a) = (term3116 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277776 A P) (@lem8277775 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277778 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3105 A B P P' p H1 f H2 g a) = (term3106 A B P P' p H1 f H2 g a)) = ((term3104 A B P P' p H1 f H2 g a) = (term3116 A B P P' p H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277771 A B P P' p H1 f H2 g a) (@lem8277777 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277779 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3104 A B P P' p H1 f H2 g a) = (term3116 A B P P' p H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277778 A B P P' p H1 f H2 g a) (@lem8277763 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277781 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277782 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8277781 (type1402 A) P Q). Qed.
Lemma lem8277783 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3117 A B P P' p s H1 f H2 g a) = (term3118 A B P P' p s H1 f H2 g a).
Proof. exact (@lem8277782 A (P' f a) (term3100 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277784 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3119 A B P p s H1 f H2 g a lt2) = (term3099 A B P p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3119 A B P p s H1 f H2 g a lt2)). Qed.
Lemma lem8277785 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3120 A B P p s H1 f H2 g a) = (term3100 A B P p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277784 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277786 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277787 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3121 A B P p s H1 f H2 g a) = (term3101 A B P p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277786 A) (@lem8277785 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277788 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277789 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3117 A B P P' p s H1 f H2 g a) = (term3113 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277788 A B P P' f a) (@lem8277787 A B P p s H1 f H2 g a)). Qed.
Lemma lem8277790 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277791 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3122 A B P P' p s H1 f H2 g a) = (term3123 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277790) (@lem8277789 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277792 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3119 A B P p s H1 f H2 g a lt2) = (term3099 A B P p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3119 A B P p s H1 f H2 g a lt2)). Qed.
Lemma lem8277793 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277794 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3124 A B P P' p s H1 f H2 g a lt2) = (term3125 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277793 A B P P' f a) (@lem8277792 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277795 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3126 A B P P' p s H1 f H2 g a) = (term3127 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277794 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277796 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277797 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3118 A B P P' p s H1 f H2 g a) = (term3128 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277796 A) (@lem8277795 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277798 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3117 A B P P' p s H1 f H2 g a) = (term3118 A B P P' p s H1 f H2 g a)) = ((term3113 A B P P' p s H1 f H2 g a) = (term3128 A B P P' p s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277791 A B P P' p s H1 f H2 g a) (@lem8277797 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277799 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3113 A B P P' p s H1 f H2 g a) = (term3128 A B P P' p s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277798 A B P P' p s H1 f H2 g a) (@lem8277783 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277801 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277802 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277801 (type557 A B P) P' Q). Qed.
Lemma lem8277803 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3129 A B P P' p lt2 s H1 f H2 g a) = (term3130 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (@lem8277802 A B P (P' f a) (term3098 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277804 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3131 A B P p lt2 s H1 f H2 g a G1) = (term3097 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3131 A B P p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8277805 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3132 A B P p lt2 s H1 f H2 g a) = (term3098 A B P p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277804 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277806 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277807 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3133 A B P p lt2 s H1 f H2 g a) = (term3099 A B P p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277806 A B P) (@lem8277805 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277808 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277809 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3129 A B P P' p lt2 s H1 f H2 g a) = (term3125 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277808 A B P P' f a) (@lem8277807 A B P p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277810 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277811 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3134 A B P P' p lt2 s H1 f H2 g a) = (term3135 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277810) (@lem8277809 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277812 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3131 A B P p lt2 s H1 f H2 g a G1) = (term3097 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3131 A B P p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8277813 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277814 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3136 A B P P' p lt2 s H1 f H2 g a G1) = (term3137 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277813 A B P P' f a) (@lem8277812 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277815 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3138 A B P P' p lt2 s H1 f H2 g a) = (term3139 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277814 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277816 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277817 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3130 A B P P' p lt2 s H1 f H2 g a) = (term3140 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277816 A B P) (@lem8277815 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277818 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3129 A B P P' p lt2 s H1 f H2 g a) = (term3130 A B P P' p lt2 s H1 f H2 g a)) = ((term3125 A B P P' p lt2 s H1 f H2 g a) = (term3140 A B P P' p lt2 s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277811 A B P P' p lt2 s H1 f H2 g a) (@lem8277817 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277819 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3125 A B P P' p lt2 s H1 f H2 g a) = (term3140 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277818 A B P P' p lt2 s H1 f H2 g a) (@lem8277803 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277821 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277822 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277821 (type557 A B P) P' Q). Qed.
Lemma lem8277823 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3141 A B P P' p lt2 s G1 H1 f H2 g a) = (term3142 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (@lem8277822 A B P (P' f a) (term3096 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277824 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3143 A B P p lt2 s G1 H1 f H2 g a G2) = (term3095 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3143 A B P p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8277825 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3144 A B P p lt2 s G1 H1 f H2 g a) = (term3096 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277824 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277826 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277827 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3145 A B P p lt2 s G1 H1 f H2 g a) = (term3097 A B P p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277826 A B P) (@lem8277825 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277828 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277829 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3141 A B P P' p lt2 s G1 H1 f H2 g a) = (term3137 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277828 A B P P' f a) (@lem8277827 A B P p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277830 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277831 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3146 A B P P' p lt2 s G1 H1 f H2 g a) = (term3147 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277830) (@lem8277829 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277832 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3143 A B P p lt2 s G1 H1 f H2 g a G2) = (term3095 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3143 A B P p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8277833 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277834 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3148 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3149 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277833 A B P P' f a) (@lem8277832 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277835 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3150 A B P P' p lt2 s G1 H1 f H2 g a) = (term3151 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277834 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277836 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277837 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3142 A B P P' p lt2 s G1 H1 f H2 g a) = (term3152 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277836 A B P) (@lem8277835 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277838 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3141 A B P P' p lt2 s G1 H1 f H2 g a) = (term3142 A B P P' p lt2 s G1 H1 f H2 g a)) = ((term3137 A B P P' p lt2 s G1 H1 f H2 g a) = (term3152 A B P P' p lt2 s G1 H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277831 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8277837 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277839 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3137 A B P P' p lt2 s G1 H1 f H2 g a) = (term3152 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277838 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8277823 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277841 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277842 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8277841 (type560 A B P) P' Q). Qed.
Lemma lem8277843 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3153 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3154 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (@lem8277842 A B P (P' f a) (term3094 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277844 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3155 A B P p lt2 s G1 H1 G2 f H2 g a P1) = (term3093 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3155 A B P p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8277845 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3156 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3094 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277844 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277846 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277847 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3157 A B P p lt2 s G1 H1 G2 f H2 g a) = (term3095 A B P p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277846 A B P) (@lem8277845 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277848 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277849 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3153 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3149 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277848 A B P P' f a) (@lem8277847 A B P p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277850 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277851 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3158 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3159 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277850) (@lem8277849 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277852 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3155 A B P p lt2 s G1 H1 G2 f H2 g a P1) = (term3093 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3155 A B P p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8277853 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277854 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3160 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3161 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277853 A B P P' f a) (@lem8277852 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277855 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3162 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3163 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277854 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277856 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277857 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3154 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3164 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277856 A B P) (@lem8277855 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277858 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3153 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3154 A B P P' p lt2 s G1 H1 G2 f H2 g a)) = ((term3149 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3164 A B P P' p lt2 s G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8277851 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8277857 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277859 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3149 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3164 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8277858 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8277843 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277861 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277862 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8277861 (type560 A B P) P' Q). Qed.
Lemma lem8277863 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3165 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3166 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8277862 A B P (P' f a) (term3092 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277864 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3167 A B P p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3090 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3167 A B P p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8277865 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3168 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3092 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8277864 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277866 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277867 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3169 A B P p lt2 s P1 G1 H1 G2 f H2 g a) = (term3093 A B P p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277866 A B P) (@lem8277865 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277868 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277869 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3165 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3161 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277868 A B P P' f a) (@lem8277867 A B P p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277870 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277871 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3170 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3171 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277870) (@lem8277869 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277872 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3167 A B P p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3090 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3167 A B P p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8277873 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8277874 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3172 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3173 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277873 A B P P' f a) (@lem8277872 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277875 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3174 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3175 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8277874 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8277876 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277877 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3166 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3176 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277876 A B P) (@lem8277875 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277878 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3165 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3166 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)) = ((term3161 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3176 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8277871 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8277877 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277879 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3161 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3176 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8277878 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8277863 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277880 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3163 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3177 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8277879 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277881 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8277882 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3164 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3178 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277881 A B P) (@lem8277880 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277883 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3149 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3178 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8277859 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8277882 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277884 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3151 A B P P' p lt2 s G1 H1 f H2 g a) = (term3179 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277883 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277885 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277886 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3152 A B P P' p lt2 s G1 H1 f H2 g a) = (term3180 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277885 A B P) (@lem8277884 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277887 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3137 A B P P' p lt2 s G1 H1 f H2 g a) = (term3180 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8277839 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8277886 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277888 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3139 A B P P' p lt2 s H1 f H2 g a) = (term3181 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277887 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277889 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277890 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3140 A B P P' p lt2 s H1 f H2 g a) = (term3182 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277889 A B P) (@lem8277888 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277891 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3125 A B P P' p lt2 s H1 f H2 g a) = (term3182 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (TRANS (@lem8277819 A B P P' p lt2 s H1 f H2 g a) (@lem8277890 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277892 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3127 A B P P' p s H1 f H2 g a) = (term3183 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277891 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277893 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277894 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3128 A B P P' p s H1 f H2 g a) = (term3184 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277893 A) (@lem8277892 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277895 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3113 A B P P' p s H1 f H2 g a) = (term3184 A B P P' p s H1 f H2 g a).
Proof. exact (TRANS (@lem8277799 A B P P' p s H1 f H2 g a) (@lem8277894 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277896 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3115 A B P P' p H1 f H2 g a) = (term3185 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277895 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277897 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277898 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3116 A B P P' p H1 f H2 g a) = (term3186 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277897 A P) (@lem8277896 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277899 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3104 A B P P' p H1 f H2 g a) = (term3186 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8277779 A B P P' p H1 f H2 g a) (@lem8277898 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277900 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2791 A B P P' p H1 f H2 g a) = (term3186 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8277759 A B P P' p H1 f H2 g a) (@lem8277899 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277901 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2792 A B P P' p H1 H2 g a) = (term3187 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8277900 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277902 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8277903 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2793 A B P P' p H1 H2 g a) = (term3188 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8277902 A B) (@lem8277901 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277904 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277905 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2794 A B P P' p H1 H2 g a) = (term3189 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8277904 A B P p g a) (@lem8277903 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277907 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277908 {A B : Type'} (P : Prop) (Q : type572 A B) : (term3190 A B P Q) = (term3191 A B P Q).
Proof. exact (@lem8277907 (A -> B) P Q). Qed.
Lemma lem8277909 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3192 A B P P' p H1 H2 g a) = (term3193 A B P P' p H1 H2 g a).
Proof. exact (@lem8277908 A B (p g a) (term3187 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277910 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3194 A B P P' p H1 H2 g a f) = (term3186 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term3194 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8277911 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3195 A B P P' p H1 H2 g a) = (term3187 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8277910 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277912 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8277913 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3196 A B P P' p H1 H2 g a) = (term3188 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8277912 A B) (@lem8277911 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277914 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277915 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3192 A B P P' p H1 H2 g a) = (term3189 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8277914 A B P p g a) (@lem8277913 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277917 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3197 A B P P' p H1 H2 g a) = (term3198 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8277916) (@lem8277915 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277918 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3194 A B P P' p H1 H2 g a f) = (term3186 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term3194 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8277919 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277920 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3199 A B P P' p H1 H2 g a f) = (term3200 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277919 A B P p g a) (@lem8277918 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277921 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3201 A B P P' p H1 H2 g a) = (term3202 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8277920 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277922 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8277923 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3193 A B P P' p H1 H2 g a) = (term3203 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8277922 A B) (@lem8277921 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277924 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3192 A B P P' p H1 H2 g a) = (term3193 A B P P' p H1 H2 g a)) = ((term3189 A B P P' p H1 H2 g a) = (term3203 A B P P' p H1 H2 g a)).
Proof. exact (MK_COMB (@lem8277917 A B P P' p H1 H2 g a) (@lem8277923 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277925 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3189 A B P P' p H1 H2 g a) = (term3203 A B P P' p H1 H2 g a).
Proof. exact (EQ_MP (@lem8277924 A B P P' p H1 H2 g a) (@lem8277909 A B P P' p H1 H2 g a)). Qed.
Lemma lem8277927 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277928 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8277927 (P -> A) P' Q). Qed.
Lemma lem8277929 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3204 A B P P' p H1 f H2 g a) = (term3205 A B P P' p H1 f H2 g a).
Proof. exact (@lem8277928 A P (p g a) (term3185 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277930 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3206 A B P P' p H1 f H2 g a s) = (term3184 A B P P' p s H1 f H2 g a).
Proof. exact (eq_refl (term3206 A B P P' p H1 f H2 g a s)). Qed.
Lemma lem8277931 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3207 A B P P' p H1 f H2 g a) = (term3185 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277930 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277932 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277933 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3208 A B P P' p H1 f H2 g a) = (term3186 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277932 A P) (@lem8277931 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277934 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277935 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3204 A B P P' p H1 f H2 g a) = (term3200 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277934 A B P p g a) (@lem8277933 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277936 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277937 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3209 A B P P' p H1 f H2 g a) = (term3210 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277936) (@lem8277935 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277938 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3206 A B P P' p H1 f H2 g a s) = (term3184 A B P P' p s H1 f H2 g a).
Proof. exact (eq_refl (term3206 A B P P' p H1 f H2 g a s)). Qed.
Lemma lem8277939 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277940 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3211 A B P P' p H1 f H2 g a s) = (term3212 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277939 A B P p g a) (@lem8277938 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277941 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3213 A B P P' p H1 f H2 g a) = (term3214 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8277940 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277942 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8277943 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3205 A B P P' p H1 f H2 g a) = (term3215 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277942 A P) (@lem8277941 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277944 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3204 A B P P' p H1 f H2 g a) = (term3205 A B P P' p H1 f H2 g a)) = ((term3200 A B P P' p H1 f H2 g a) = (term3215 A B P P' p H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277937 A B P P' p H1 f H2 g a) (@lem8277943 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277945 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3200 A B P P' p H1 f H2 g a) = (term3215 A B P P' p H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277944 A B P P' p H1 f H2 g a) (@lem8277929 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8277947 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277948 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8277947 (type1402 A) P Q). Qed.
Lemma lem8277949 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3216 A B P P' p s H1 f H2 g a) = (term3217 A B P P' p s H1 f H2 g a).
Proof. exact (@lem8277948 A (p g a) (term3183 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277950 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3218 A B P P' p s H1 f H2 g a lt2) = (term3182 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3218 A B P P' p s H1 f H2 g a lt2)). Qed.
Lemma lem8277951 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3219 A B P P' p s H1 f H2 g a) = (term3183 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277950 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277952 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277953 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3220 A B P P' p s H1 f H2 g a) = (term3184 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277952 A) (@lem8277951 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277954 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277955 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3216 A B P P' p s H1 f H2 g a) = (term3212 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277954 A B P p g a) (@lem8277953 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277956 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277957 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3221 A B P P' p s H1 f H2 g a) = (term3222 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277956) (@lem8277955 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277958 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3218 A B P P' p s H1 f H2 g a lt2) = (term3182 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3218 A B P P' p s H1 f H2 g a lt2)). Qed.
Lemma lem8277959 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277960 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3223 A B P P' p s H1 f H2 g a lt2) = (term3224 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277959 A B P p g a) (@lem8277958 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277961 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3225 A B P P' p s H1 f H2 g a) = (term3226 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8277960 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277962 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8277963 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3217 A B P P' p s H1 f H2 g a) = (term3227 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277962 A) (@lem8277961 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277964 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3216 A B P P' p s H1 f H2 g a) = (term3217 A B P P' p s H1 f H2 g a)) = ((term3212 A B P P' p s H1 f H2 g a) = (term3227 A B P P' p s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277957 A B P P' p s H1 f H2 g a) (@lem8277963 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277965 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3212 A B P P' p s H1 f H2 g a) = (term3227 A B P P' p s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277964 A B P P' p s H1 f H2 g a) (@lem8277949 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8277967 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277968 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277967 (type557 A B P) P' Q). Qed.
Lemma lem8277969 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3228 A B P P' p lt2 s H1 f H2 g a) = (term3229 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (@lem8277968 A B P (p g a) (term3181 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277970 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3230 A B P P' p lt2 s H1 f H2 g a G1) = (term3180 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3230 A B P P' p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8277971 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3231 A B P P' p lt2 s H1 f H2 g a) = (term3181 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277970 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277972 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277973 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3232 A B P P' p lt2 s H1 f H2 g a) = (term3182 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277972 A B P) (@lem8277971 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277974 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277975 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3228 A B P P' p lt2 s H1 f H2 g a) = (term3224 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277974 A B P p g a) (@lem8277973 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277976 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277977 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3233 A B P P' p lt2 s H1 f H2 g a) = (term3234 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277976) (@lem8277975 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277978 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3230 A B P P' p lt2 s H1 f H2 g a G1) = (term3180 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3230 A B P P' p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8277979 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277980 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3235 A B P P' p lt2 s H1 f H2 g a G1) = (term3236 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277979 A B P p g a) (@lem8277978 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277981 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3237 A B P P' p lt2 s H1 f H2 g a) = (term3238 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8277980 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277982 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277983 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3229 A B P P' p lt2 s H1 f H2 g a) = (term3239 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277982 A B P) (@lem8277981 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277984 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3228 A B P P' p lt2 s H1 f H2 g a) = (term3229 A B P P' p lt2 s H1 f H2 g a)) = ((term3224 A B P P' p lt2 s H1 f H2 g a) = (term3239 A B P P' p lt2 s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277977 A B P P' p lt2 s H1 f H2 g a) (@lem8277983 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277985 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3224 A B P P' p lt2 s H1 f H2 g a) = (term3239 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8277984 A B P P' p lt2 s H1 f H2 g a) (@lem8277969 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8277987 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8277988 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8277987 (type557 A B P) P' Q). Qed.
Lemma lem8277989 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3240 A B P P' p lt2 s G1 H1 f H2 g a) = (term3241 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (@lem8277988 A B P (p g a) (term3179 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277990 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3242 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3178 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3242 A B P P' p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8277991 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3243 A B P P' p lt2 s G1 H1 f H2 g a) = (term3179 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8277990 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8277992 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8277993 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3244 A B P P' p lt2 s G1 H1 f H2 g a) = (term3180 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277992 A B P) (@lem8277991 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277994 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8277995 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3240 A B P P' p lt2 s G1 H1 f H2 g a) = (term3236 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277994 A B P p g a) (@lem8277993 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277996 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8277997 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3245 A B P P' p lt2 s G1 H1 f H2 g a) = (term3246 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8277996) (@lem8277995 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8277998 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3242 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3178 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3242 A B P P' p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8277999 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278000 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3247 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3248 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8277999 A B P p g a) (@lem8277998 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278001 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3249 A B P P' p lt2 s G1 H1 f H2 g a) = (term3250 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278000 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278002 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278003 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3241 A B P P' p lt2 s G1 H1 f H2 g a) = (term3251 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278002 A B P) (@lem8278001 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278004 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3240 A B P P' p lt2 s G1 H1 f H2 g a) = (term3241 A B P P' p lt2 s G1 H1 f H2 g a)) = ((term3236 A B P P' p lt2 s G1 H1 f H2 g a) = (term3251 A B P P' p lt2 s G1 H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8277997 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8278003 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278005 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3236 A B P P' p lt2 s G1 H1 f H2 g a) = (term3251 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (EQ_MP (@lem8278004 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8277989 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278007 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278008 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278007 (type560 A B P) P' Q). Qed.
Lemma lem8278009 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3252 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3253 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (@lem8278008 A B P (p g a) (term3177 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278010 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3254 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3176 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3254 A B P P' p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8278011 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3255 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3177 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278010 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278012 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278013 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3256 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3178 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278012 A B P) (@lem8278011 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278014 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278015 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3252 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3248 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278014 A B P p g a) (@lem8278013 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278016 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278017 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3257 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3258 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278016) (@lem8278015 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278018 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3254 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3176 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3254 A B P P' p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8278019 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278020 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3259 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3260 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278019 A B P p g a) (@lem8278018 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278021 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3261 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3262 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278020 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278022 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278023 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3253 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3263 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278022 A B P) (@lem8278021 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278024 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3252 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3253 A B P P' p lt2 s G1 H1 G2 f H2 g a)) = ((term3248 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3263 A B P P' p lt2 s G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8278017 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8278023 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278025 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3248 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3263 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8278024 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8278009 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278027 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278028 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278027 (type560 A B P) P' Q). Qed.
Lemma lem8278029 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3264 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3265 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8278028 A B P (p g a) (term3175 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278030 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3266 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3173 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3266 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8278031 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3267 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3175 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278030 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278032 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278033 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3268 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3176 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278032 A B P) (@lem8278031 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278034 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278035 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3264 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3260 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278034 A B P p g a) (@lem8278033 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278036 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278037 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3269 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3270 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278036) (@lem8278035 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278038 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3266 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3173 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3266 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8278039 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278040 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3271 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3272 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278039 A B P p g a) (@lem8278038 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278041 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3273 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3274 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278040 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278042 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278043 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3265 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3275 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278042 A B P) (@lem8278041 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278044 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3264 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3265 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)) = ((term3260 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3275 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8278037 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8278043 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278045 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3260 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3275 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8278044 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8278029 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278046 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3262 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3276 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278045 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278047 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278048 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3263 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3277 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278047 A B P) (@lem8278046 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278049 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3248 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3277 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8278025 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8278048 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278050 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3250 A B P P' p lt2 s G1 H1 f H2 g a) = (term3278 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278049 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278051 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278052 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3251 A B P P' p lt2 s G1 H1 f H2 g a) = (term3279 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278051 A B P) (@lem8278050 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278053 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3236 A B P P' p lt2 s G1 H1 f H2 g a) = (term3279 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8278005 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8278052 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278054 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3238 A B P P' p lt2 s H1 f H2 g a) = (term3280 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278053 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278055 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278056 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3239 A B P P' p lt2 s H1 f H2 g a) = (term3281 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278055 A B P) (@lem8278054 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278057 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3224 A B P P' p lt2 s H1 f H2 g a) = (term3281 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (TRANS (@lem8277985 A B P P' p lt2 s H1 f H2 g a) (@lem8278056 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278058 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3226 A B P P' p s H1 f H2 g a) = (term3282 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278057 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278059 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278060 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3227 A B P P' p s H1 f H2 g a) = (term3283 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278059 A) (@lem8278058 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278061 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3212 A B P P' p s H1 f H2 g a) = (term3283 A B P P' p s H1 f H2 g a).
Proof. exact (TRANS (@lem8277965 A B P P' p s H1 f H2 g a) (@lem8278060 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278062 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3214 A B P P' p H1 f H2 g a) = (term3284 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278061 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278063 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278064 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3215 A B P P' p H1 f H2 g a) = (term3285 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278063 A P) (@lem8278062 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278065 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3200 A B P P' p H1 f H2 g a) = (term3285 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8277945 A B P P' p H1 f H2 g a) (@lem8278064 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278066 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3202 A B P P' p H1 H2 g a) = (term3286 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278065 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278067 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278068 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3203 A B P P' p H1 H2 g a) = (term3287 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278067 A B) (@lem8278066 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278069 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3189 A B P P' p H1 H2 g a) = (term3287 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8277925 A B P P' p H1 H2 g a) (@lem8278068 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278070 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2794 A B P P' p H1 H2 g a) = (term3287 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8277905 A B P P' p H1 H2 g a) (@lem8278069 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278071 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2795 A B P P' H1 H2 g a) = (term3288 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8278070 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278072 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278073 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2796 A B P P' H1 H2 g a) = (term3289 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278072 A B P) (@lem8278071 A B P P' H1 H2 g a)). Qed.
Lemma lem8278074 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278075 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2797 A B P P' H1 H2 g a) = (term3290 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278074 A B P P' g a) (@lem8278073 A B P P' H1 H2 g a)). Qed.
Lemma lem8278077 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278078 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278077 (type560 A B P) P' Q). Qed.
Lemma lem8278079 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3291 A B P P' H1 H2 g a) = (term3292 A B P P' H1 H2 g a).
Proof. exact (@lem8278078 A B P (P' g a) (term3288 A B P P' H1 H2 g a)). Qed.
Lemma lem8278080 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3293 A B P P' H1 H2 g a p) = (term3287 A B P P' p H1 H2 g a).
Proof. exact (eq_refl (term3293 A B P P' H1 H2 g a p)). Qed.
Lemma lem8278081 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3294 A B P P' H1 H2 g a) = (term3288 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8278080 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278082 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278083 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3295 A B P P' H1 H2 g a) = (term3289 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278082 A B P) (@lem8278081 A B P P' H1 H2 g a)). Qed.
Lemma lem8278084 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278085 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3291 A B P P' H1 H2 g a) = (term3290 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278084 A B P P' g a) (@lem8278083 A B P P' H1 H2 g a)). Qed.
Lemma lem8278086 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278087 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3296 A B P P' H1 H2 g a) = (term3297 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278086) (@lem8278085 A B P P' H1 H2 g a)). Qed.
Lemma lem8278088 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3293 A B P P' H1 H2 g a p) = (term3287 A B P P' p H1 H2 g a).
Proof. exact (eq_refl (term3293 A B P P' H1 H2 g a p)). Qed.
Lemma lem8278089 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278090 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3298 A B P P' H1 H2 g a p) = (term3299 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278089 A B P P' g a) (@lem8278088 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278091 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3300 A B P P' H1 H2 g a) = (term3301 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8278090 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278092 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278093 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3292 A B P P' H1 H2 g a) = (term3302 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278092 A B P) (@lem8278091 A B P P' H1 H2 g a)). Qed.
Lemma lem8278094 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3291 A B P P' H1 H2 g a) = (term3292 A B P P' H1 H2 g a)) = ((term3290 A B P P' H1 H2 g a) = (term3302 A B P P' H1 H2 g a)).
Proof. exact (MK_COMB (@lem8278087 A B P P' H1 H2 g a) (@lem8278093 A B P P' H1 H2 g a)). Qed.
Lemma lem8278095 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3290 A B P P' H1 H2 g a) = (term3302 A B P P' H1 H2 g a).
Proof. exact (EQ_MP (@lem8278094 A B P P' H1 H2 g a) (@lem8278079 A B P P' H1 H2 g a)). Qed.
Lemma lem8278097 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278098 {A B : Type'} (P : Prop) (Q : type572 A B) : (term3190 A B P Q) = (term3191 A B P Q).
Proof. exact (@lem8278097 (A -> B) P Q). Qed.
Lemma lem8278099 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3303 A B P P' p H1 H2 g a) = (term3304 A B P P' p H1 H2 g a).
Proof. exact (@lem8278098 A B (P' g a) (term3286 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278100 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3305 A B P P' p H1 H2 g a f) = (term3285 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term3305 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8278101 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3306 A B P P' p H1 H2 g a) = (term3286 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278100 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278102 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278103 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3307 A B P P' p H1 H2 g a) = (term3287 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278102 A B) (@lem8278101 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278104 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278105 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3303 A B P P' p H1 H2 g a) = (term3299 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278104 A B P P' g a) (@lem8278103 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278106 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278107 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3308 A B P P' p H1 H2 g a) = (term3309 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278106) (@lem8278105 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278108 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3305 A B P P' p H1 H2 g a f) = (term3285 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term3305 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8278109 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278110 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3310 A B P P' p H1 H2 g a f) = (term3311 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278109 A B P P' g a) (@lem8278108 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278111 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3312 A B P P' p H1 H2 g a) = (term3313 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278110 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278112 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278113 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3304 A B P P' p H1 H2 g a) = (term3314 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278112 A B) (@lem8278111 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278114 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3303 A B P P' p H1 H2 g a) = (term3304 A B P P' p H1 H2 g a)) = ((term3299 A B P P' p H1 H2 g a) = (term3314 A B P P' p H1 H2 g a)).
Proof. exact (MK_COMB (@lem8278107 A B P P' p H1 H2 g a) (@lem8278113 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278115 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3299 A B P P' p H1 H2 g a) = (term3314 A B P P' p H1 H2 g a).
Proof. exact (EQ_MP (@lem8278114 A B P P' p H1 H2 g a) (@lem8278099 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278117 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278118 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8278117 (P -> A) P' Q). Qed.
Lemma lem8278119 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3315 A B P P' p H1 f H2 g a) = (term3316 A B P P' p H1 f H2 g a).
Proof. exact (@lem8278118 A P (P' g a) (term3284 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278120 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3317 A B P P' p H1 f H2 g a s) = (term3283 A B P P' p s H1 f H2 g a).
Proof. exact (eq_refl (term3317 A B P P' p H1 f H2 g a s)). Qed.
Lemma lem8278121 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3318 A B P P' p H1 f H2 g a) = (term3284 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278120 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278122 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278123 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3319 A B P P' p H1 f H2 g a) = (term3285 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278122 A P) (@lem8278121 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278124 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278125 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3315 A B P P' p H1 f H2 g a) = (term3311 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278124 A B P P' g a) (@lem8278123 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278126 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278127 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3320 A B P P' p H1 f H2 g a) = (term3321 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278126) (@lem8278125 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278128 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3317 A B P P' p H1 f H2 g a s) = (term3283 A B P P' p s H1 f H2 g a).
Proof. exact (eq_refl (term3317 A B P P' p H1 f H2 g a s)). Qed.
Lemma lem8278129 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278130 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3322 A B P P' p H1 f H2 g a s) = (term3323 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278129 A B P P' g a) (@lem8278128 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278131 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3324 A B P P' p H1 f H2 g a) = (term3325 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278130 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278132 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278133 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3316 A B P P' p H1 f H2 g a) = (term3326 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278132 A P) (@lem8278131 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278134 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3315 A B P P' p H1 f H2 g a) = (term3316 A B P P' p H1 f H2 g a)) = ((term3311 A B P P' p H1 f H2 g a) = (term3326 A B P P' p H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8278127 A B P P' p H1 f H2 g a) (@lem8278133 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278135 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3311 A B P P' p H1 f H2 g a) = (term3326 A B P P' p H1 f H2 g a).
Proof. exact (EQ_MP (@lem8278134 A B P P' p H1 f H2 g a) (@lem8278119 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278137 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278138 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8278137 (type1402 A) P Q). Qed.
Lemma lem8278139 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3327 A B P P' p s H1 f H2 g a) = (term3328 A B P P' p s H1 f H2 g a).
Proof. exact (@lem8278138 A (P' g a) (term3282 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278140 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3329 A B P P' p s H1 f H2 g a lt2) = (term3281 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3329 A B P P' p s H1 f H2 g a lt2)). Qed.
Lemma lem8278141 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3330 A B P P' p s H1 f H2 g a) = (term3282 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278140 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278142 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278143 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3331 A B P P' p s H1 f H2 g a) = (term3283 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278142 A) (@lem8278141 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278144 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278145 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3327 A B P P' p s H1 f H2 g a) = (term3323 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278144 A B P P' g a) (@lem8278143 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278147 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3332 A B P P' p s H1 f H2 g a) = (term3333 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278146) (@lem8278145 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278148 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3329 A B P P' p s H1 f H2 g a lt2) = (term3281 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3329 A B P P' p s H1 f H2 g a lt2)). Qed.
Lemma lem8278149 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278150 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3334 A B P P' p s H1 f H2 g a lt2) = (term3335 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278149 A B P P' g a) (@lem8278148 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278151 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3336 A B P P' p s H1 f H2 g a) = (term3337 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278150 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278152 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278153 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3328 A B P P' p s H1 f H2 g a) = (term3338 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278152 A) (@lem8278151 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278154 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3327 A B P P' p s H1 f H2 g a) = (term3328 A B P P' p s H1 f H2 g a)) = ((term3323 A B P P' p s H1 f H2 g a) = (term3338 A B P P' p s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8278147 A B P P' p s H1 f H2 g a) (@lem8278153 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278155 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3323 A B P P' p s H1 f H2 g a) = (term3338 A B P P' p s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8278154 A B P P' p s H1 f H2 g a) (@lem8278139 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278157 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278158 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278157 (type557 A B P) P' Q). Qed.
Lemma lem8278159 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3339 A B P P' p lt2 s H1 f H2 g a) = (term3340 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (@lem8278158 A B P (P' g a) (term3280 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278160 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3341 A B P P' p lt2 s H1 f H2 g a G1) = (term3279 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3341 A B P P' p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8278161 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3342 A B P P' p lt2 s H1 f H2 g a) = (term3280 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278160 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278162 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278163 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3343 A B P P' p lt2 s H1 f H2 g a) = (term3281 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278162 A B P) (@lem8278161 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278164 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278165 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3339 A B P P' p lt2 s H1 f H2 g a) = (term3335 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278164 A B P P' g a) (@lem8278163 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278166 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278167 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3344 A B P P' p lt2 s H1 f H2 g a) = (term3345 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278166) (@lem8278165 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278168 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3341 A B P P' p lt2 s H1 f H2 g a G1) = (term3279 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3341 A B P P' p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8278169 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278170 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3346 A B P P' p lt2 s H1 f H2 g a G1) = (term3347 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278169 A B P P' g a) (@lem8278168 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278171 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3348 A B P P' p lt2 s H1 f H2 g a) = (term3349 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278170 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278172 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278173 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3340 A B P P' p lt2 s H1 f H2 g a) = (term3350 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278172 A B P) (@lem8278171 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278174 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3339 A B P P' p lt2 s H1 f H2 g a) = (term3340 A B P P' p lt2 s H1 f H2 g a)) = ((term3335 A B P P' p lt2 s H1 f H2 g a) = (term3350 A B P P' p lt2 s H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8278167 A B P P' p lt2 s H1 f H2 g a) (@lem8278173 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278175 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3335 A B P P' p lt2 s H1 f H2 g a) = (term3350 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (EQ_MP (@lem8278174 A B P P' p lt2 s H1 f H2 g a) (@lem8278159 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278177 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278178 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278177 (type557 A B P) P' Q). Qed.
Lemma lem8278179 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3351 A B P P' p lt2 s G1 H1 f H2 g a) = (term3352 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (@lem8278178 A B P (P' g a) (term3278 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278180 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3353 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3277 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3353 A B P P' p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8278181 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3354 A B P P' p lt2 s G1 H1 f H2 g a) = (term3278 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278180 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278182 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278183 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3355 A B P P' p lt2 s G1 H1 f H2 g a) = (term3279 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278182 A B P) (@lem8278181 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278184 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278185 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3351 A B P P' p lt2 s G1 H1 f H2 g a) = (term3347 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278184 A B P P' g a) (@lem8278183 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278186 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278187 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3356 A B P P' p lt2 s G1 H1 f H2 g a) = (term3357 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278186) (@lem8278185 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278188 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3353 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3277 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3353 A B P P' p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8278189 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278190 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3358 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3359 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278189 A B P P' g a) (@lem8278188 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278191 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3360 A B P P' p lt2 s G1 H1 f H2 g a) = (term3361 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278190 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278192 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278193 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3352 A B P P' p lt2 s G1 H1 f H2 g a) = (term3362 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278192 A B P) (@lem8278191 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278194 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3351 A B P P' p lt2 s G1 H1 f H2 g a) = (term3352 A B P P' p lt2 s G1 H1 f H2 g a)) = ((term3347 A B P P' p lt2 s G1 H1 f H2 g a) = (term3362 A B P P' p lt2 s G1 H1 f H2 g a)).
Proof. exact (MK_COMB (@lem8278187 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8278193 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278195 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3347 A B P P' p lt2 s G1 H1 f H2 g a) = (term3362 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (EQ_MP (@lem8278194 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8278179 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278197 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278198 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278197 (type560 A B P) P' Q). Qed.
Lemma lem8278199 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3363 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3364 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (@lem8278198 A B P (P' g a) (term3276 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278200 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3365 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3275 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3365 A B P P' p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8278201 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3366 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3276 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278200 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278202 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278203 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3367 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3277 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278202 A B P) (@lem8278201 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278204 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278205 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3363 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3359 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278204 A B P P' g a) (@lem8278203 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278206 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278207 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3368 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3369 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278206) (@lem8278205 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278208 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3365 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3275 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3365 A B P P' p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8278209 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278210 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3370 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3371 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278209 A B P P' g a) (@lem8278208 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278211 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3372 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3373 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278210 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278212 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278213 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3364 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3374 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278212 A B P) (@lem8278211 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278214 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3363 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3364 A B P P' p lt2 s G1 H1 G2 f H2 g a)) = ((term3359 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3374 A B P P' p lt2 s G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8278207 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8278213 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278215 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3359 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3374 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8278214 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8278199 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278217 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278218 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278217 (type560 A B P) P' Q). Qed.
Lemma lem8278219 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3375 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3376 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8278218 A B P (P' g a) (term3274 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278220 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3377 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3272 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3377 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8278221 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3378 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3274 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278220 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278222 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278223 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3379 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3275 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278222 A B P) (@lem8278221 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278224 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278225 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3375 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3371 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278224 A B P P' g a) (@lem8278223 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278226 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278227 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3380 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3381 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278226) (@lem8278225 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278228 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3377 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3272 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term3377 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8278229 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8278230 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3382 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3383 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278229 A B P P' g a) (@lem8278228 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278231 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3384 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3385 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278230 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278232 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278233 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3376 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3386 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278232 A B P) (@lem8278231 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278234 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term3375 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3376 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)) = ((term3371 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3386 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8278227 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8278233 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278235 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3371 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3386 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8278234 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8278219 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278236 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3373 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3387 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278235 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278237 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278238 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3374 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3388 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278237 A B P) (@lem8278236 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278239 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3359 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3388 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8278215 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8278238 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278240 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3361 A B P P' p lt2 s G1 H1 f H2 g a) = (term3389 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278239 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278241 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278242 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3362 A B P P' p lt2 s G1 H1 f H2 g a) = (term3390 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278241 A B P) (@lem8278240 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278243 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3347 A B P P' p lt2 s G1 H1 f H2 g a) = (term3390 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (TRANS (@lem8278195 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8278242 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278244 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3349 A B P P' p lt2 s H1 f H2 g a) = (term3391 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278243 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8278245 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278246 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3350 A B P P' p lt2 s H1 f H2 g a) = (term3392 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278245 A B P) (@lem8278244 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278247 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3335 A B P P' p lt2 s H1 f H2 g a) = (term3392 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (TRANS (@lem8278175 A B P P' p lt2 s H1 f H2 g a) (@lem8278246 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278248 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3337 A B P P' p s H1 f H2 g a) = (term3393 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278247 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8278249 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278250 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3338 A B P P' p s H1 f H2 g a) = (term3394 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278249 A) (@lem8278248 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278251 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3323 A B P P' p s H1 f H2 g a) = (term3394 A B P P' p s H1 f H2 g a).
Proof. exact (TRANS (@lem8278155 A B P P' p s H1 f H2 g a) (@lem8278250 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278252 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3325 A B P P' p H1 f H2 g a) = (term3395 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278251 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8278253 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278254 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3326 A B P P' p H1 f H2 g a) = (term3396 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8278253 A P) (@lem8278252 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278255 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3311 A B P P' p H1 f H2 g a) = (term3396 A B P P' p H1 f H2 g a).
Proof. exact (TRANS (@lem8278135 A B P P' p H1 f H2 g a) (@lem8278254 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278256 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3313 A B P P' p H1 H2 g a) = (term3397 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278255 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8278257 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278258 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3314 A B P P' p H1 H2 g a) = (term3398 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8278257 A B) (@lem8278256 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278259 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3299 A B P P' p H1 H2 g a) = (term3398 A B P P' p H1 H2 g a).
Proof. exact (TRANS (@lem8278115 A B P P' p H1 H2 g a) (@lem8278258 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278260 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3301 A B P P' H1 H2 g a) = (term3399 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8278259 A B P P' p H1 H2 g a)). Qed.
Lemma lem8278261 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278262 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3302 A B P P' H1 H2 g a) = (term3400 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278261 A B P) (@lem8278260 A B P P' H1 H2 g a)). Qed.
Lemma lem8278263 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3290 A B P P' H1 H2 g a) = (term3400 A B P P' H1 H2 g a).
Proof. exact (TRANS (@lem8278095 A B P P' H1 H2 g a) (@lem8278262 A B P P' H1 H2 g a)). Qed.
Lemma lem8278264 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2797 A B P P' H1 H2 g a) = (term3400 A B P P' H1 H2 g a).
Proof. exact (TRANS (@lem8278075 A B P P' H1 H2 g a) (@lem8278263 A B P P' H1 H2 g a)). Qed.
Lemma lem8278265 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8278266 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2798 A B P P' H1 H2 g a) = (term3401 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8278265) (@lem8278264 A B P P' H1 H2 g a)). Qed.
Lemma lem8278268 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8278269 {A B P : Type'} (P' : type117 A B P) (Q : type117 A B P) : (term2874 A B P P' Q) = (term2873 A B P P' Q).
Proof. exact (@lem8278268 (type560 A B P) P' Q). Qed.
Lemma lem8278270 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2876 A B P f g a) = (term2875 A B P f g a).
Proof. exact (@lem8278269 A B P (term2877 A B P f g a) (term2878 A B P f g a)). Qed.
Lemma lem8278271 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2879 A B P f g a P2) = (term2019 A B P f P2 g a).
Proof. exact (eq_refl (term2879 A B P f g a P2)). Qed.
Lemma lem8278272 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2888 A B P f g a) = (term2877 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278271 A B P f P2 g a)). Qed.
Lemma lem8278273 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278274 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2889 A B P f g a) = (term2890 A B P f g a).
Proof. exact (MK_COMB (@lem8278273 A B P) (@lem8278272 A B P f g a)). Qed.
Lemma lem8278275 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8278276 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2891 A B P f g a) = (term2892 A B P f g a).
Proof. exact (MK_COMB (@lem8278275) (@lem8278274 A B P f g a)). Qed.
Lemma lem8278277 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2882 A B P f g a P2) = (term2883 A B P f P2 g a).
Proof. exact (eq_refl (term2882 A B P f g a P2)). Qed.
Lemma lem8278278 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2893 A B P f g a) = (term2878 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278277 A B P f P2 g a)). Qed.
Lemma lem8278279 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278280 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2894 A B P f g a) = (term2895 A B P f g a).
Proof. exact (MK_COMB (@lem8278279 A B P) (@lem8278278 A B P f g a)). Qed.
Lemma lem8278281 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2876 A B P f g a) = (term2896 A B P f g a).
Proof. exact (MK_COMB (@lem8278276 A B P f g a) (@lem8278280 A B P f g a)). Qed.
Lemma lem8278282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278283 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term3402 A B P f g a) = (term3403 A B P f g a).
Proof. exact (MK_COMB (@lem8278282) (@lem8278281 A B P f g a)). Qed.
Lemma lem8278284 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2879 A B P f g a P2) = (term2019 A B P f P2 g a).
Proof. exact (eq_refl (term2879 A B P f g a P2)). Qed.
Lemma lem8278285 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8278286 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2880 A B P f g a P2) = (term2881 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8278285) (@lem8278284 A B P f P2 g a)). Qed.
Lemma lem8278287 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2882 A B P f g a P2) = (term2883 A B P f P2 g a).
Proof. exact (eq_refl (term2882 A B P f g a P2)). Qed.
Lemma lem8278288 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2884 A B P f g a P2) = (term2512 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8278286 A B P f P2 g a) (@lem8278287 A B P f P2 g a)). Qed.
Lemma lem8278289 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2885 A B P f g a) = (term2860 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278288 A B P f P2 g a)). Qed.
Lemma lem8278290 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278291 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2875 A B P f g a) = (term2869 A B P f g a).
Proof. exact (MK_COMB (@lem8278290 A B P) (@lem8278289 A B P f g a)). Qed.
Lemma lem8278292 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : ((term2876 A B P f g a) = (term2875 A B P f g a)) = ((term2896 A B P f g a) = (term2869 A B P f g a)).
Proof. exact (MK_COMB (@lem8278283 A B P f g a) (@lem8278291 A B P f g a)). Qed.
Lemma lem8278293 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2896 A B P f g a) = (term2869 A B P f g a).
Proof. exact (EQ_MP (@lem8278292 A B P f g a) (@lem8278270 A B P f g a)). Qed.
Lemma lem8278294 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278295 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2897 A B P f g a) = (term2871 A B P f g a).
Proof. exact (MK_COMB (@lem8278294) (@lem8278293 A B P f g a)). Qed.
Lemma lem8278296 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8278297 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2898 A B P G2 f H2 g a) = (term2872 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278295 A B P f g a) (@lem8278296 A B P G2 f H2 g a)). Qed.
Lemma lem8278299 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2693 A P Q) = (term2692 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8278300 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term2830 A B P P' Q) = (term2829 A B P P' Q).
Proof. exact (@lem8278299 (type560 A B P) P' Q). Qed.
Lemma lem8278301 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2859 A B P G2 f H2 g a) = (term2858 A B P G2 f H2 g a).
Proof. exact (@lem8278300 A B P (term2860 A B P f g a) (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8278302 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2861 A B P f g a P2) = (term2512 A B P f P2 g a).
Proof. exact (eq_refl (term2861 A B P f g a P2)). Qed.
Lemma lem8278303 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2867 A B P f g a) = (term2860 A B P f g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278302 A B P f P2 g a)). Qed.
Lemma lem8278304 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278305 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2868 A B P f g a) = (term2869 A B P f g a).
Proof. exact (MK_COMB (@lem8278304 A B P) (@lem8278303 A B P f g a)). Qed.
Lemma lem8278306 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278307 {A B P : Type'} (f : A -> B) (g : A -> B) (a : P) : (term2870 A B P f g a) = (term2871 A B P f g a).
Proof. exact (MK_COMB (@lem8278306) (@lem8278305 A B P f g a)). Qed.
Lemma lem8278308 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8278309 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2859 A B P G2 f H2 g a) = (term2872 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278307 A B P f g a) (@lem8278308 A B P G2 f H2 g a)). Qed.
Lemma lem8278310 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278311 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3404 A B P G2 f H2 g a) = (term3405 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278310) (@lem8278309 A B P G2 f H2 g a)). Qed.
Lemma lem8278312 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2861 A B P f g a P2) = (term2512 A B P f P2 g a).
Proof. exact (eq_refl (term2861 A B P f g a P2)). Qed.
Lemma lem8278313 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278314 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2862 A B P f g a P2) = (term2513 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8278313) (@lem8278312 A B P f P2 g a)). Qed.
Lemma lem8278315 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2330 A B P G2 f H2 g a) = (term2330 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2330 A B P G2 f H2 g a)). Qed.
Lemma lem8278316 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2863 A B P P2 G2 f H2 g a) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278314 A B P f P2 g a) (@lem8278315 A B P G2 f H2 g a)). Qed.
Lemma lem8278317 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2864 A B P G2 f H2 g a) = (term2848 A B P G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278316 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8278318 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278319 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2858 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278318 A B P) (@lem8278317 A B P G2 f H2 g a)). Qed.
Lemma lem8278320 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2859 A B P G2 f H2 g a) = (term2858 A B P G2 f H2 g a)) = ((term2872 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8278311 A B P G2 f H2 g a) (@lem8278319 A B P G2 f H2 g a)). Qed.
Lemma lem8278321 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2872 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a).
Proof. exact (EQ_MP (@lem8278320 A B P G2 f H2 g a) (@lem8278301 A B P G2 f H2 g a)). Qed.
Lemma lem8278322 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2898 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a).
Proof. exact (TRANS (@lem8278297 A B P G2 f H2 g a) (@lem8278321 A B P G2 f H2 g a)). Qed.
Lemma lem8278323 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2515 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2515 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278324 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2899 A B P P1 G1 H1 G2 f H2 g a) = (term2857 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278323 A B P P1 G1 f H1 g a) (@lem8278322 A B P G2 f H2 g a)). Qed.
Lemma lem8278326 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278327 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278326 (type560 A B P) P' Q). Qed.
Lemma lem8278328 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2847 A B P P1 G1 H1 G2 f H2 g a) = (term2846 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (@lem8278327 A B P (term2514 A B P P1 G1 f H1 g a) (term2848 A B P G2 f H2 g a)). Qed.
Lemma lem8278329 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2849 A B P G2 f H2 g a P2) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2849 A B P G2 f H2 g a P2)). Qed.
Lemma lem8278330 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2854 A B P G2 f H2 g a) = (term2848 A B P G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278329 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8278331 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278332 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2855 A B P G2 f H2 g a) = (term2856 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278331 A B P) (@lem8278330 A B P G2 f H2 g a)). Qed.
Lemma lem8278333 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2515 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2515 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278334 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2847 A B P P1 G1 H1 G2 f H2 g a) = (term2857 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278333 A B P P1 G1 f H1 g a) (@lem8278332 A B P G2 f H2 g a)). Qed.
Lemma lem8278335 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278336 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3406 A B P P1 G1 H1 G2 f H2 g a) = (term3407 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278335) (@lem8278334 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278337 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2849 A B P G2 f H2 g a P2) = (term2514 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2849 A B P G2 f H2 g a P2)). Qed.
Lemma lem8278338 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2515 A B P P1 G1 f H1 g a) = (term2515 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2515 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278339 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2850 A B P P1 G1 H1 G2 f H2 g a P2) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278338 A B P P1 G1 f H1 g a) (@lem8278337 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8278340 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2851 A B P P1 G1 H1 G2 f H2 g a) = (term2833 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278339 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278341 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278342 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2846 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278341 A B P) (@lem8278340 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278343 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2847 A B P P1 G1 H1 G2 f H2 g a) = (term2846 A B P P1 G1 H1 G2 f H2 g a)) = ((term2857 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8278336 A B P P1 G1 H1 G2 f H2 g a) (@lem8278342 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278344 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2857 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8278343 A B P P1 G1 H1 G2 f H2 g a) (@lem8278328 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278345 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2899 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (TRANS (@lem8278324 A B P P1 G1 H1 G2 f H2 g a) (@lem8278344 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278346 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278347 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2900 A B P P1 G1 H1 G2 f H2 g a) = (term2844 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278346) (@lem8278345 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278348 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2524 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278349 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2901 A B P G2 H2 P1 G1 f H1 g a) = (term2845 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278347 A B P P1 G1 H1 G2 f H2 g a) (@lem8278348 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278351 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2693 A P Q) = (term2692 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8278352 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term2830 A B P P' Q) = (term2829 A B P P' Q).
Proof. exact (@lem8278351 (type560 A B P) P' Q). Qed.
Lemma lem8278353 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2832 A B P G2 H2 P1 G1 f H1 g a) = (term2831 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8278352 A B P (term2833 A B P P1 G1 H1 G2 f H2 g a) (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278354 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2834 A B P P1 G1 H1 G2 f H2 g a P2) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2834 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8278355 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2840 A B P P1 G1 H1 G2 f H2 g a) = (term2833 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278354 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278356 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278357 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2841 A B P P1 G1 H1 G2 f H2 g a) = (term2842 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278356 A B P) (@lem8278355 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278358 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278359 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2843 A B P P1 G1 H1 G2 f H2 g a) = (term2844 A B P P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278358) (@lem8278357 A B P P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8278360 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2524 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278361 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2832 A B P G2 H2 P1 G1 f H1 g a) = (term2845 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278359 A B P P1 G1 H1 G2 f H2 g a) (@lem8278360 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278362 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278363 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3408 A B P G2 H2 P1 G1 f H1 g a) = (term3409 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278362) (@lem8278361 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278364 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2834 A B P P1 G1 H1 G2 f H2 g a P2) = (term2516 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2834 A B P P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8278365 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278366 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2835 A B P P1 G1 H1 G2 f H2 g a P2) = (term2527 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8278365) (@lem8278364 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8278367 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2524 A B P P1 G1 f H1 g a) = (term2524 A B P P1 G1 f H1 g a).
Proof. exact (eq_refl (term2524 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278368 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2836 A B P G2 H2 P2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278366 A B P P1 G1 H1 P2 G2 f H2 g a) (@lem8278367 A B P P1 G1 f H1 g a)). Qed.
Lemma lem8278369 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2837 A B P G2 H2 P1 G1 f H1 g a) = (term2819 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278368 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278370 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278371 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2831 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278370 A B P) (@lem8278369 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278372 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term2832 A B P G2 H2 P1 G1 f H1 g a) = (term2831 A B P G2 H2 P1 G1 f H1 g a)) = ((term2845 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278363 A B P G2 H2 P1 G1 f H1 g a) (@lem8278371 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278373 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2845 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278372 A B P G2 H2 P1 G1 f H1 g a) (@lem8278353 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278374 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2901 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (TRANS (@lem8278349 A B P G2 H2 P1 G1 f H1 g a) (@lem8278373 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278375 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2907 A B P G2 H2 G1 f H1 g a) = (term3410 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278374 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278376 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278377 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2915 A B P G2 H2 G1 f H1 g a) = (term3411 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278376 A B P) (@lem8278375 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278378 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2921 A B P H2 G1 f H1 g a) = (term3412 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278377 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278379 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278380 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2929 A B P H2 G1 f H1 g a) = (term3413 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278379 A B P) (@lem8278378 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278381 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2935 A B P H2 f H1 g a) = (term3414 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278380 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278382 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278383 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2943 A B P H2 f H1 g a) = (term3415 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278382 A B P) (@lem8278381 A B P H2 f H1 g a)). Qed.
Lemma lem8278384 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2728 A B P a f g) = (term2728 A B P a f g).
Proof. exact (eq_refl (term2728 A B P a f g)). Qed.
Lemma lem8278385 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2944 A B P H2 f H1 g a) = (term3416 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278384 A B P a f g) (@lem8278383 A B P H2 f H1 g a)). Qed.
Lemma lem8278387 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2693 A P Q) = (term2692 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8278388 {A P : Type'} (P' : type805 A P) (Q : Prop) : (term2714 A P P' Q) = (term2713 A P P' Q).
Proof. exact (@lem8278387 (P -> A) P' Q). Qed.
Lemma lem8278389 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3417 A B P H2 f H1 g a) = (term3418 A B P H2 f H1 g a).
Proof. exact (@lem8278388 A P (term2717 A B P a f g) (term3415 A B P H2 f H1 g a)). Qed.
Lemma lem8278390 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8278391 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2724 A B P a f g) = (term2717 A B P a f g).
Proof. exact (fun_ext (fun s : P -> A => @lem8278390 A B P s a f g)). Qed.
Lemma lem8278392 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278393 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2725 A B P a f g) = (term2726 A B P a f g).
Proof. exact (MK_COMB (@lem8278392 A P) (@lem8278391 A B P a f g)). Qed.
Lemma lem8278394 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278395 {A B P : Type'} (a : P) (f : A -> B) (g : A -> B) : (term2727 A B P a f g) = (term2728 A B P a f g).
Proof. exact (MK_COMB (@lem8278394) (@lem8278393 A B P a f g)). Qed.
Lemma lem8278396 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3415 A B P H2 f H1 g a) = (term3415 A B P H2 f H1 g a).
Proof. exact (eq_refl (term3415 A B P H2 f H1 g a)). Qed.
Lemma lem8278397 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3417 A B P H2 f H1 g a) = (term3416 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278395 A B P a f g) (@lem8278396 A B P H2 f H1 g a)). Qed.
Lemma lem8278398 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278399 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3419 A B P H2 f H1 g a) = (term3420 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278398) (@lem8278397 A B P H2 f H1 g a)). Qed.
Lemma lem8278400 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2718 A B P a f g s) = (term2707 A B P s a f g).
Proof. exact (eq_refl (term2718 A B P a f g s)). Qed.
Lemma lem8278401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278402 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2719 A B P a f g s) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8278401) (@lem8278400 A B P s a f g)). Qed.
Lemma lem8278403 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3415 A B P H2 f H1 g a) = (term3415 A B P H2 f H1 g a).
Proof. exact (eq_refl (term3415 A B P H2 f H1 g a)). Qed.
Lemma lem8278404 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3421 A B P s H2 f H1 g a) = (term3422 A B P s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278402 A B P s a f g) (@lem8278403 A B P H2 f H1 g a)). Qed.
Lemma lem8278405 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3423 A B P H2 f H1 g a) = (term3424 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278404 A B P s H2 f H1 g a)). Qed.
Lemma lem8278406 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278407 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3418 A B P H2 f H1 g a) = (term3425 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278406 A P) (@lem8278405 A B P H2 f H1 g a)). Qed.
Lemma lem8278408 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3417 A B P H2 f H1 g a) = (term3418 A B P H2 f H1 g a)) = ((term3416 A B P H2 f H1 g a) = (term3425 A B P H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278399 A B P H2 f H1 g a) (@lem8278407 A B P H2 f H1 g a)). Qed.
Lemma lem8278409 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3416 A B P H2 f H1 g a) = (term3425 A B P H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278408 A B P H2 f H1 g a) (@lem8278389 A B P H2 f H1 g a)). Qed.
Lemma lem8278411 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2693 A P Q) = (term2692 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8278412 {A : Type'} (P : type421 A) (Q : Prop) : (term2695 A P Q) = (term2694 A P Q).
Proof. exact (@lem8278411 (type1402 A) P Q). Qed.
Lemma lem8278413 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3426 A B P s H2 f H1 g a) = (term3427 A B P s H2 f H1 g a).
Proof. exact (@lem8278412 A (term2698 A B P s a f g) (term3415 A B P H2 f H1 g a)). Qed.
Lemma lem8278414 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8278415 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2705 A B P s a f g) = (term2698 A B P s a f g).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278414 A B P lt2 s a f g)). Qed.
Lemma lem8278416 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278417 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2706 A B P s a f g) = (term2707 A B P s a f g).
Proof. exact (MK_COMB (@lem8278416 A) (@lem8278415 A B P s a f g)). Qed.
Lemma lem8278418 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278419 {A B P : Type'} (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2708 A B P s a f g) = (term2709 A B P s a f g).
Proof. exact (MK_COMB (@lem8278418) (@lem8278417 A B P s a f g)). Qed.
Lemma lem8278420 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3415 A B P H2 f H1 g a) = (term3415 A B P H2 f H1 g a).
Proof. exact (eq_refl (term3415 A B P H2 f H1 g a)). Qed.
Lemma lem8278421 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3426 A B P s H2 f H1 g a) = (term3422 A B P s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278419 A B P s a f g) (@lem8278420 A B P H2 f H1 g a)). Qed.
Lemma lem8278422 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278423 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3428 A B P s H2 f H1 g a) = (term3429 A B P s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278422) (@lem8278421 A B P s H2 f H1 g a)). Qed.
Lemma lem8278424 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2699 A B P s a f g lt2) = (term586 A B P lt2 s a f g).
Proof. exact (eq_refl (term2699 A B P s a f g lt2)). Qed.
Lemma lem8278425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8278426 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2700 A B P s a f g lt2) = (term2532 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8278425) (@lem8278424 A B P lt2 s a f g)). Qed.
Lemma lem8278427 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3415 A B P H2 f H1 g a) = (term3415 A B P H2 f H1 g a).
Proof. exact (eq_refl (term3415 A B P H2 f H1 g a)). Qed.
Lemma lem8278428 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3430 A B P s lt2 H2 f H1 g a) = (term3431 A B P lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278426 A B P lt2 s a f g) (@lem8278427 A B P H2 f H1 g a)). Qed.
Lemma lem8278429 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3432 A B P s H2 f H1 g a) = (term3433 A B P s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278428 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278430 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278431 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3427 A B P s H2 f H1 g a) = (term3434 A B P s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278430 A) (@lem8278429 A B P s H2 f H1 g a)). Qed.
Lemma lem8278432 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3426 A B P s H2 f H1 g a) = (term3427 A B P s H2 f H1 g a)) = ((term3422 A B P s H2 f H1 g a) = (term3434 A B P s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278423 A B P s H2 f H1 g a) (@lem8278431 A B P s H2 f H1 g a)). Qed.
Lemma lem8278433 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3422 A B P s H2 f H1 g a) = (term3434 A B P s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278432 A B P s H2 f H1 g a) (@lem8278413 A B P s H2 f H1 g a)). Qed.
Lemma lem8278435 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278436 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278435 (type557 A B P) P' Q). Qed.
Lemma lem8278437 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3435 A B P lt2 s H2 f H1 g a) = (term3436 A B P lt2 s H2 f H1 g a).
Proof. exact (@lem8278436 A B P (term586 A B P lt2 s a f g) (term3414 A B P H2 f H1 g a)). Qed.
Lemma lem8278438 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3437 A B P H2 f H1 g a G1) = (term3413 A B P H2 G1 f H1 g a).
Proof. exact (eq_refl (term3437 A B P H2 f H1 g a G1)). Qed.
Lemma lem8278439 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3438 A B P H2 f H1 g a) = (term3414 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278438 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278440 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278441 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3439 A B P H2 f H1 g a) = (term3415 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278440 A B P) (@lem8278439 A B P H2 f H1 g a)). Qed.
Lemma lem8278442 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278443 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3435 A B P lt2 s H2 f H1 g a) = (term3431 A B P lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278442 A B P lt2 s a f g) (@lem8278441 A B P H2 f H1 g a)). Qed.
Lemma lem8278444 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278445 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3440 A B P lt2 s H2 f H1 g a) = (term3441 A B P lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278444) (@lem8278443 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278446 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3437 A B P H2 f H1 g a G1) = (term3413 A B P H2 G1 f H1 g a).
Proof. exact (eq_refl (term3437 A B P H2 f H1 g a G1)). Qed.
Lemma lem8278447 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278448 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3442 A B P lt2 s H2 f H1 g a G1) = (term3443 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278447 A B P lt2 s a f g) (@lem8278446 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278449 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3444 A B P lt2 s H2 f H1 g a) = (term3445 A B P lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278448 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278450 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278451 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3436 A B P lt2 s H2 f H1 g a) = (term3446 A B P lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278450 A B P) (@lem8278449 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278452 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3435 A B P lt2 s H2 f H1 g a) = (term3436 A B P lt2 s H2 f H1 g a)) = ((term3431 A B P lt2 s H2 f H1 g a) = (term3446 A B P lt2 s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278445 A B P lt2 s H2 f H1 g a) (@lem8278451 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278453 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3431 A B P lt2 s H2 f H1 g a) = (term3446 A B P lt2 s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278452 A B P lt2 s H2 f H1 g a) (@lem8278437 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278455 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278456 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278455 (type557 A B P) P' Q). Qed.
Lemma lem8278457 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3447 A B P lt2 s H2 G1 f H1 g a) = (term3448 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (@lem8278456 A B P (term586 A B P lt2 s a f g) (term3412 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278458 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3449 A B P H2 G1 f H1 g a G2) = (term3411 A B P G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3449 A B P H2 G1 f H1 g a G2)). Qed.
Lemma lem8278459 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3450 A B P H2 G1 f H1 g a) = (term3412 A B P H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278458 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278460 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278461 {A B P : Type'} (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3451 A B P H2 G1 f H1 g a) = (term3413 A B P H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278460 A B P) (@lem8278459 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278462 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278463 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3447 A B P lt2 s H2 G1 f H1 g a) = (term3443 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278462 A B P lt2 s a f g) (@lem8278461 A B P H2 G1 f H1 g a)). Qed.
Lemma lem8278464 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278465 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3452 A B P lt2 s H2 G1 f H1 g a) = (term3453 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278464) (@lem8278463 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278466 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3449 A B P H2 G1 f H1 g a G2) = (term3411 A B P G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3449 A B P H2 G1 f H1 g a G2)). Qed.
Lemma lem8278467 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278468 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3454 A B P lt2 s H2 G1 f H1 g a G2) = (term3455 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278467 A B P lt2 s a f g) (@lem8278466 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278469 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3456 A B P lt2 s H2 G1 f H1 g a) = (term3457 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278468 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278470 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278471 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3448 A B P lt2 s H2 G1 f H1 g a) = (term3458 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278470 A B P) (@lem8278469 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278472 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3447 A B P lt2 s H2 G1 f H1 g a) = (term3448 A B P lt2 s H2 G1 f H1 g a)) = ((term3443 A B P lt2 s H2 G1 f H1 g a) = (term3458 A B P lt2 s H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278465 A B P lt2 s H2 G1 f H1 g a) (@lem8278471 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278473 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3443 A B P lt2 s H2 G1 f H1 g a) = (term3458 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278472 A B P lt2 s H2 G1 f H1 g a) (@lem8278457 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278475 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278476 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278475 (type560 A B P) P' Q). Qed.
Lemma lem8278477 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3459 A B P lt2 s G2 H2 G1 f H1 g a) = (term3460 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (@lem8278476 A B P (term586 A B P lt2 s a f g) (term3410 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278478 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3461 A B P G2 H2 G1 f H1 g a P1) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3461 A B P G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278479 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3462 A B P G2 H2 G1 f H1 g a) = (term3410 A B P G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278478 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278480 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278481 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3463 A B P G2 H2 G1 f H1 g a) = (term3411 A B P G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278480 A B P) (@lem8278479 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278482 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278483 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3459 A B P lt2 s G2 H2 G1 f H1 g a) = (term3455 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278482 A B P lt2 s a f g) (@lem8278481 A B P G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278484 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278485 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3464 A B P lt2 s G2 H2 G1 f H1 g a) = (term3465 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278484) (@lem8278483 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278486 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3461 A B P G2 H2 G1 f H1 g a P1) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3461 A B P G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278487 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278488 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3466 A B P lt2 s G2 H2 G1 f H1 g a P1) = (term3467 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278487 A B P lt2 s a f g) (@lem8278486 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278489 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3468 A B P lt2 s G2 H2 G1 f H1 g a) = (term3469 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278488 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278490 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278491 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3460 A B P lt2 s G2 H2 G1 f H1 g a) = (term3470 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278490 A B P) (@lem8278489 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278492 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3459 A B P lt2 s G2 H2 G1 f H1 g a) = (term3460 A B P lt2 s G2 H2 G1 f H1 g a)) = ((term3455 A B P lt2 s G2 H2 G1 f H1 g a) = (term3470 A B P lt2 s G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278485 A B P lt2 s G2 H2 G1 f H1 g a) (@lem8278491 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278493 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3455 A B P lt2 s G2 H2 G1 f H1 g a) = (term3470 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278492 A B P lt2 s G2 H2 G1 f H1 g a) (@lem8278477 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278495 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278496 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278495 (type560 A B P) P' Q). Qed.
Lemma lem8278497 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3471 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3472 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8278496 A B P (term586 A B P lt2 s a f g) (term2819 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278498 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2820 A B P G2 H2 P1 G1 f H1 g a P2) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2820 A B P G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278499 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2825 A B P G2 H2 P1 G1 f H1 g a) = (term2819 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278498 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278500 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278501 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2826 A B P G2 H2 P1 G1 f H1 g a) = (term2827 A B P G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278500 A B P) (@lem8278499 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278502 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278503 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3471 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3467 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278502 A B P lt2 s a f g) (@lem8278501 A B P G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278504 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278505 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3473 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3474 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278504) (@lem8278503 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278506 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2820 A B P G2 H2 P1 G1 f H1 g a P2) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2820 A B P G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278507 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term2532 A B P lt2 s a f g).
Proof. exact (eq_refl (term2532 A B P lt2 s a f g)). Qed.
Lemma lem8278508 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3475 A B P lt2 s G2 H2 P1 G1 f H1 g a P2) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278507 A B P lt2 s a f g) (@lem8278506 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278509 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3476 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3477 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278508 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278510 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278511 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3472 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3478 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278510 A B P) (@lem8278509 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278512 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3471 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3472 A B P lt2 s G2 H2 P1 G1 f H1 g a)) = ((term3467 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3478 A B P lt2 s G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278505 A B P lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278511 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278513 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3467 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3478 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278512 A B P lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278497 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278514 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3469 A B P lt2 s G2 H2 G1 f H1 g a) = (term3479 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278513 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278515 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278516 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3470 A B P lt2 s G2 H2 G1 f H1 g a) = (term3480 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278515 A B P) (@lem8278514 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278517 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3455 A B P lt2 s G2 H2 G1 f H1 g a) = (term3480 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278493 A B P lt2 s G2 H2 G1 f H1 g a) (@lem8278516 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278518 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3457 A B P lt2 s H2 G1 f H1 g a) = (term3481 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278517 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278519 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278520 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3458 A B P lt2 s H2 G1 f H1 g a) = (term3482 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278519 A B P) (@lem8278518 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278521 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3443 A B P lt2 s H2 G1 f H1 g a) = (term3482 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278473 A B P lt2 s H2 G1 f H1 g a) (@lem8278520 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278522 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3445 A B P lt2 s H2 f H1 g a) = (term3483 A B P lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278521 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278523 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278524 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3446 A B P lt2 s H2 f H1 g a) = (term3484 A B P lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278523 A B P) (@lem8278522 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278525 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3431 A B P lt2 s H2 f H1 g a) = (term3484 A B P lt2 s H2 f H1 g a).
Proof. exact (TRANS (@lem8278453 A B P lt2 s H2 f H1 g a) (@lem8278524 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278526 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3433 A B P s H2 f H1 g a) = (term3485 A B P s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278525 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278527 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278528 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3434 A B P s H2 f H1 g a) = (term3486 A B P s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278527 A) (@lem8278526 A B P s H2 f H1 g a)). Qed.
Lemma lem8278529 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3422 A B P s H2 f H1 g a) = (term3486 A B P s H2 f H1 g a).
Proof. exact (TRANS (@lem8278433 A B P s H2 f H1 g a) (@lem8278528 A B P s H2 f H1 g a)). Qed.
Lemma lem8278530 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3424 A B P H2 f H1 g a) = (term3487 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278529 A B P s H2 f H1 g a)). Qed.
Lemma lem8278531 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278532 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3425 A B P H2 f H1 g a) = (term3488 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278531 A P) (@lem8278530 A B P H2 f H1 g a)). Qed.
Lemma lem8278533 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3416 A B P H2 f H1 g a) = (term3488 A B P H2 f H1 g a).
Proof. exact (TRANS (@lem8278409 A B P H2 f H1 g a) (@lem8278532 A B P H2 f H1 g a)). Qed.
Lemma lem8278534 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2944 A B P H2 f H1 g a) = (term3488 A B P H2 f H1 g a).
Proof. exact (TRANS (@lem8278385 A B P H2 f H1 g a) (@lem8278533 A B P H2 f H1 g a)). Qed.
Lemma lem8278535 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278536 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2945 A B P p H2 f H1 g a) = (term3489 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278535 A B P p f a) (@lem8278534 A B P H2 f H1 g a)). Qed.
Lemma lem8278538 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278539 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8278538 (P -> A) P' Q). Qed.
Lemma lem8278540 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3490 A B P p H2 f H1 g a) = (term3491 A B P p H2 f H1 g a).
Proof. exact (@lem8278539 A P (p f a) (term3487 A B P H2 f H1 g a)). Qed.
Lemma lem8278541 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3492 A B P H2 f H1 g a s) = (term3486 A B P s H2 f H1 g a).
Proof. exact (eq_refl (term3492 A B P H2 f H1 g a s)). Qed.
Lemma lem8278542 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3493 A B P H2 f H1 g a) = (term3487 A B P H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278541 A B P s H2 f H1 g a)). Qed.
Lemma lem8278543 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278544 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3494 A B P H2 f H1 g a) = (term3488 A B P H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278543 A P) (@lem8278542 A B P H2 f H1 g a)). Qed.
Lemma lem8278545 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278546 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3490 A B P p H2 f H1 g a) = (term3489 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278545 A B P p f a) (@lem8278544 A B P H2 f H1 g a)). Qed.
Lemma lem8278547 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278548 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3495 A B P p H2 f H1 g a) = (term3496 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278547) (@lem8278546 A B P p H2 f H1 g a)). Qed.
Lemma lem8278549 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3492 A B P H2 f H1 g a s) = (term3486 A B P s H2 f H1 g a).
Proof. exact (eq_refl (term3492 A B P H2 f H1 g a s)). Qed.
Lemma lem8278550 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278551 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3497 A B P p H2 f H1 g a s) = (term3498 A B P p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278550 A B P p f a) (@lem8278549 A B P s H2 f H1 g a)). Qed.
Lemma lem8278552 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3499 A B P p H2 f H1 g a) = (term3500 A B P p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278551 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278553 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278554 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3491 A B P p H2 f H1 g a) = (term3501 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278553 A P) (@lem8278552 A B P p H2 f H1 g a)). Qed.
Lemma lem8278555 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3490 A B P p H2 f H1 g a) = (term3491 A B P p H2 f H1 g a)) = ((term3489 A B P p H2 f H1 g a) = (term3501 A B P p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278548 A B P p H2 f H1 g a) (@lem8278554 A B P p H2 f H1 g a)). Qed.
Lemma lem8278556 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3489 A B P p H2 f H1 g a) = (term3501 A B P p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278555 A B P p H2 f H1 g a) (@lem8278540 A B P p H2 f H1 g a)). Qed.
Lemma lem8278558 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278559 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8278558 (type1402 A) P Q). Qed.
Lemma lem8278560 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3502 A B P p s H2 f H1 g a) = (term3503 A B P p s H2 f H1 g a).
Proof. exact (@lem8278559 A (p f a) (term3485 A B P s H2 f H1 g a)). Qed.
Lemma lem8278561 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3504 A B P s H2 f H1 g a lt2) = (term3484 A B P lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3504 A B P s H2 f H1 g a lt2)). Qed.
Lemma lem8278562 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3505 A B P s H2 f H1 g a) = (term3485 A B P s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278561 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278563 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278564 {A B P : Type'} (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3506 A B P s H2 f H1 g a) = (term3486 A B P s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278563 A) (@lem8278562 A B P s H2 f H1 g a)). Qed.
Lemma lem8278565 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278566 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3502 A B P p s H2 f H1 g a) = (term3498 A B P p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278565 A B P p f a) (@lem8278564 A B P s H2 f H1 g a)). Qed.
Lemma lem8278567 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278568 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3507 A B P p s H2 f H1 g a) = (term3508 A B P p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278567) (@lem8278566 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278569 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3504 A B P s H2 f H1 g a lt2) = (term3484 A B P lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3504 A B P s H2 f H1 g a lt2)). Qed.
Lemma lem8278570 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278571 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3509 A B P p s H2 f H1 g a lt2) = (term3510 A B P p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278570 A B P p f a) (@lem8278569 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278572 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3511 A B P p s H2 f H1 g a) = (term3512 A B P p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278571 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278573 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278574 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3503 A B P p s H2 f H1 g a) = (term3513 A B P p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278573 A) (@lem8278572 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278575 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3502 A B P p s H2 f H1 g a) = (term3503 A B P p s H2 f H1 g a)) = ((term3498 A B P p s H2 f H1 g a) = (term3513 A B P p s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278568 A B P p s H2 f H1 g a) (@lem8278574 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278576 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3498 A B P p s H2 f H1 g a) = (term3513 A B P p s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278575 A B P p s H2 f H1 g a) (@lem8278560 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278578 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278579 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278578 (type557 A B P) P' Q). Qed.
Lemma lem8278580 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3514 A B P p lt2 s H2 f H1 g a) = (term3515 A B P p lt2 s H2 f H1 g a).
Proof. exact (@lem8278579 A B P (p f a) (term3483 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278581 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3516 A B P lt2 s H2 f H1 g a G1) = (term3482 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3516 A B P lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8278582 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3517 A B P lt2 s H2 f H1 g a) = (term3483 A B P lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278581 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278583 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278584 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3518 A B P lt2 s H2 f H1 g a) = (term3484 A B P lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278583 A B P) (@lem8278582 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278585 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278586 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3514 A B P p lt2 s H2 f H1 g a) = (term3510 A B P p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278585 A B P p f a) (@lem8278584 A B P lt2 s H2 f H1 g a)). Qed.
Lemma lem8278587 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278588 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3519 A B P p lt2 s H2 f H1 g a) = (term3520 A B P p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278587) (@lem8278586 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278589 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3516 A B P lt2 s H2 f H1 g a G1) = (term3482 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3516 A B P lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8278590 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278591 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3521 A B P p lt2 s H2 f H1 g a G1) = (term3522 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278590 A B P p f a) (@lem8278589 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278592 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3523 A B P p lt2 s H2 f H1 g a) = (term3524 A B P p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278591 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278593 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278594 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3515 A B P p lt2 s H2 f H1 g a) = (term3525 A B P p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278593 A B P) (@lem8278592 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278595 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3514 A B P p lt2 s H2 f H1 g a) = (term3515 A B P p lt2 s H2 f H1 g a)) = ((term3510 A B P p lt2 s H2 f H1 g a) = (term3525 A B P p lt2 s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278588 A B P p lt2 s H2 f H1 g a) (@lem8278594 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278596 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3510 A B P p lt2 s H2 f H1 g a) = (term3525 A B P p lt2 s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278595 A B P p lt2 s H2 f H1 g a) (@lem8278580 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278598 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278599 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278598 (type557 A B P) P' Q). Qed.
Lemma lem8278600 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3526 A B P p lt2 s H2 G1 f H1 g a) = (term3527 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (@lem8278599 A B P (p f a) (term3481 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278601 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3528 A B P lt2 s H2 G1 f H1 g a G2) = (term3480 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3528 A B P lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8278602 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3529 A B P lt2 s H2 G1 f H1 g a) = (term3481 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278601 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278603 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278604 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3530 A B P lt2 s H2 G1 f H1 g a) = (term3482 A B P lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278603 A B P) (@lem8278602 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278605 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278606 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3526 A B P p lt2 s H2 G1 f H1 g a) = (term3522 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278605 A B P p f a) (@lem8278604 A B P lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278607 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278608 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3531 A B P p lt2 s H2 G1 f H1 g a) = (term3532 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278607) (@lem8278606 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278609 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3528 A B P lt2 s H2 G1 f H1 g a G2) = (term3480 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3528 A B P lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8278610 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278611 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3533 A B P p lt2 s H2 G1 f H1 g a G2) = (term3534 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278610 A B P p f a) (@lem8278609 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278612 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3535 A B P p lt2 s H2 G1 f H1 g a) = (term3536 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278611 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278613 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278614 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3527 A B P p lt2 s H2 G1 f H1 g a) = (term3537 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278613 A B P) (@lem8278612 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278615 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3526 A B P p lt2 s H2 G1 f H1 g a) = (term3527 A B P p lt2 s H2 G1 f H1 g a)) = ((term3522 A B P p lt2 s H2 G1 f H1 g a) = (term3537 A B P p lt2 s H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278608 A B P p lt2 s H2 G1 f H1 g a) (@lem8278614 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278616 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3522 A B P p lt2 s H2 G1 f H1 g a) = (term3537 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278615 A B P p lt2 s H2 G1 f H1 g a) (@lem8278600 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278618 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278619 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278618 (type560 A B P) P' Q). Qed.
Lemma lem8278620 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3538 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3539 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (@lem8278619 A B P (p f a) (term3479 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278621 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3540 A B P lt2 s G2 H2 G1 f H1 g a P1) = (term3478 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3540 A B P lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278622 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3541 A B P lt2 s G2 H2 G1 f H1 g a) = (term3479 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278621 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278623 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278624 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3542 A B P lt2 s G2 H2 G1 f H1 g a) = (term3480 A B P lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278623 A B P) (@lem8278622 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278625 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278626 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3538 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3534 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278625 A B P p f a) (@lem8278624 A B P lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278627 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278628 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3543 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3544 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278627) (@lem8278626 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278629 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3540 A B P lt2 s G2 H2 G1 f H1 g a P1) = (term3478 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3540 A B P lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278630 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278631 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3545 A B P p lt2 s G2 H2 G1 f H1 g a P1) = (term3546 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278630 A B P p f a) (@lem8278629 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278632 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3547 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3548 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278631 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278633 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278634 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3539 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3549 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278633 A B P) (@lem8278632 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278635 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3538 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3539 A B P p lt2 s G2 H2 G1 f H1 g a)) = ((term3534 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3549 A B P p lt2 s G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278628 A B P p lt2 s G2 H2 G1 f H1 g a) (@lem8278634 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278636 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3534 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3549 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278635 A B P p lt2 s G2 H2 G1 f H1 g a) (@lem8278620 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278638 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278639 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278638 (type560 A B P) P' Q). Qed.
Lemma lem8278640 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3550 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3551 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8278639 A B P (p f a) (term3477 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278641 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3552 A B P lt2 s G2 H2 P1 G1 f H1 g a P2) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3552 A B P lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278642 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3553 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3477 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278641 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278643 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278644 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3554 A B P lt2 s G2 H2 P1 G1 f H1 g a) = (term3478 A B P lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278643 A B P) (@lem8278642 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278645 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278646 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3550 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3546 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278645 A B P p f a) (@lem8278644 A B P lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278647 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278648 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3555 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3556 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278647) (@lem8278646 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278649 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3552 A B P lt2 s G2 H2 P1 G1 f H1 g a P2) = (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3552 A B P lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278650 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8278651 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3557 A B P p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3558 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278650 A B P p f a) (@lem8278649 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278652 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3559 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3560 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278651 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278653 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278654 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3551 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3561 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278653 A B P) (@lem8278652 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278655 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3550 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3551 A B P p lt2 s G2 H2 P1 G1 f H1 g a)) = ((term3546 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3561 A B P p lt2 s G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278648 A B P p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278654 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278656 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3546 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3561 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278655 A B P p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278640 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278657 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3548 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3562 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278656 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278658 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278659 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3549 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3563 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278658 A B P) (@lem8278657 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278660 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3534 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3563 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278636 A B P p lt2 s G2 H2 G1 f H1 g a) (@lem8278659 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278661 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3536 A B P p lt2 s H2 G1 f H1 g a) = (term3564 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278660 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278662 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278663 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3537 A B P p lt2 s H2 G1 f H1 g a) = (term3565 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278662 A B P) (@lem8278661 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278664 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3522 A B P p lt2 s H2 G1 f H1 g a) = (term3565 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278616 A B P p lt2 s H2 G1 f H1 g a) (@lem8278663 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278665 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3524 A B P p lt2 s H2 f H1 g a) = (term3566 A B P p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278664 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278666 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278667 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3525 A B P p lt2 s H2 f H1 g a) = (term3567 A B P p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278666 A B P) (@lem8278665 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278668 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3510 A B P p lt2 s H2 f H1 g a) = (term3567 A B P p lt2 s H2 f H1 g a).
Proof. exact (TRANS (@lem8278596 A B P p lt2 s H2 f H1 g a) (@lem8278667 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278669 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3512 A B P p s H2 f H1 g a) = (term3568 A B P p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278668 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278670 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278671 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3513 A B P p s H2 f H1 g a) = (term3569 A B P p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278670 A) (@lem8278669 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278672 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3498 A B P p s H2 f H1 g a) = (term3569 A B P p s H2 f H1 g a).
Proof. exact (TRANS (@lem8278576 A B P p s H2 f H1 g a) (@lem8278671 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278673 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3500 A B P p H2 f H1 g a) = (term3570 A B P p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278672 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278674 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278675 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3501 A B P p H2 f H1 g a) = (term3571 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278674 A P) (@lem8278673 A B P p H2 f H1 g a)). Qed.
Lemma lem8278676 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3489 A B P p H2 f H1 g a) = (term3571 A B P p H2 f H1 g a).
Proof. exact (TRANS (@lem8278556 A B P p H2 f H1 g a) (@lem8278675 A B P p H2 f H1 g a)). Qed.
Lemma lem8278677 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2945 A B P p H2 f H1 g a) = (term3571 A B P p H2 f H1 g a).
Proof. exact (TRANS (@lem8278536 A B P p H2 f H1 g a) (@lem8278676 A B P p H2 f H1 g a)). Qed.
Lemma lem8278678 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278679 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2946 A B P P' p H2 f H1 g a) = (term3572 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278678 A B P P' f a) (@lem8278677 A B P p H2 f H1 g a)). Qed.
Lemma lem8278681 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278682 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8278681 (P -> A) P' Q). Qed.
Lemma lem8278683 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3573 A B P P' p H2 f H1 g a) = (term3574 A B P P' p H2 f H1 g a).
Proof. exact (@lem8278682 A P (term373 A B P P' f a) (term3570 A B P p H2 f H1 g a)). Qed.
Lemma lem8278684 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3575 A B P p H2 f H1 g a s) = (term3569 A B P p s H2 f H1 g a).
Proof. exact (eq_refl (term3575 A B P p H2 f H1 g a s)). Qed.
Lemma lem8278685 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3576 A B P p H2 f H1 g a) = (term3570 A B P p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278684 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278686 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278687 {A B P : Type'} (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3577 A B P p H2 f H1 g a) = (term3571 A B P p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278686 A P) (@lem8278685 A B P p H2 f H1 g a)). Qed.
Lemma lem8278688 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278689 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3573 A B P P' p H2 f H1 g a) = (term3572 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278688 A B P P' f a) (@lem8278687 A B P p H2 f H1 g a)). Qed.
Lemma lem8278690 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278691 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3578 A B P P' p H2 f H1 g a) = (term3579 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278690) (@lem8278689 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278692 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3575 A B P p H2 f H1 g a s) = (term3569 A B P p s H2 f H1 g a).
Proof. exact (eq_refl (term3575 A B P p H2 f H1 g a s)). Qed.
Lemma lem8278693 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278694 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3580 A B P P' p H2 f H1 g a s) = (term3581 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278693 A B P P' f a) (@lem8278692 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278695 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3582 A B P P' p H2 f H1 g a) = (term3583 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278694 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278696 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278697 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3574 A B P P' p H2 f H1 g a) = (term3584 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278696 A P) (@lem8278695 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278698 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3573 A B P P' p H2 f H1 g a) = (term3574 A B P P' p H2 f H1 g a)) = ((term3572 A B P P' p H2 f H1 g a) = (term3584 A B P P' p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278691 A B P P' p H2 f H1 g a) (@lem8278697 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278699 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3572 A B P P' p H2 f H1 g a) = (term3584 A B P P' p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278698 A B P P' p H2 f H1 g a) (@lem8278683 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278701 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278702 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8278701 (type1402 A) P Q). Qed.
Lemma lem8278703 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3585 A B P P' p s H2 f H1 g a) = (term3586 A B P P' p s H2 f H1 g a).
Proof. exact (@lem8278702 A (term373 A B P P' f a) (term3568 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278704 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3587 A B P p s H2 f H1 g a lt2) = (term3567 A B P p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3587 A B P p s H2 f H1 g a lt2)). Qed.
Lemma lem8278705 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3588 A B P p s H2 f H1 g a) = (term3568 A B P p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278704 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278706 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278707 {A B P : Type'} (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3589 A B P p s H2 f H1 g a) = (term3569 A B P p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278706 A) (@lem8278705 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278708 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278709 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3585 A B P P' p s H2 f H1 g a) = (term3581 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278708 A B P P' f a) (@lem8278707 A B P p s H2 f H1 g a)). Qed.
Lemma lem8278710 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278711 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3590 A B P P' p s H2 f H1 g a) = (term3591 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278710) (@lem8278709 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278712 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3587 A B P p s H2 f H1 g a lt2) = (term3567 A B P p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3587 A B P p s H2 f H1 g a lt2)). Qed.
Lemma lem8278713 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278714 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3592 A B P P' p s H2 f H1 g a lt2) = (term3593 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278713 A B P P' f a) (@lem8278712 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278715 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3594 A B P P' p s H2 f H1 g a) = (term3595 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278714 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278716 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278717 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3586 A B P P' p s H2 f H1 g a) = (term3596 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278716 A) (@lem8278715 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278718 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3585 A B P P' p s H2 f H1 g a) = (term3586 A B P P' p s H2 f H1 g a)) = ((term3581 A B P P' p s H2 f H1 g a) = (term3596 A B P P' p s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278711 A B P P' p s H2 f H1 g a) (@lem8278717 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278719 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3581 A B P P' p s H2 f H1 g a) = (term3596 A B P P' p s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278718 A B P P' p s H2 f H1 g a) (@lem8278703 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278721 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278722 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278721 (type557 A B P) P' Q). Qed.
Lemma lem8278723 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3597 A B P P' p lt2 s H2 f H1 g a) = (term3598 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (@lem8278722 A B P (term373 A B P P' f a) (term3566 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278724 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3599 A B P p lt2 s H2 f H1 g a G1) = (term3565 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3599 A B P p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8278725 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3600 A B P p lt2 s H2 f H1 g a) = (term3566 A B P p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278724 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278726 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278727 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3601 A B P p lt2 s H2 f H1 g a) = (term3567 A B P p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278726 A B P) (@lem8278725 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278728 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278729 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3597 A B P P' p lt2 s H2 f H1 g a) = (term3593 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278728 A B P P' f a) (@lem8278727 A B P p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278730 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278731 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3602 A B P P' p lt2 s H2 f H1 g a) = (term3603 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278730) (@lem8278729 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278732 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3599 A B P p lt2 s H2 f H1 g a G1) = (term3565 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3599 A B P p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8278733 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278734 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3604 A B P P' p lt2 s H2 f H1 g a G1) = (term3605 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278733 A B P P' f a) (@lem8278732 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278735 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3606 A B P P' p lt2 s H2 f H1 g a) = (term3607 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278734 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278736 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278737 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3598 A B P P' p lt2 s H2 f H1 g a) = (term3608 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278736 A B P) (@lem8278735 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278738 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3597 A B P P' p lt2 s H2 f H1 g a) = (term3598 A B P P' p lt2 s H2 f H1 g a)) = ((term3593 A B P P' p lt2 s H2 f H1 g a) = (term3608 A B P P' p lt2 s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278731 A B P P' p lt2 s H2 f H1 g a) (@lem8278737 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278739 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3593 A B P P' p lt2 s H2 f H1 g a) = (term3608 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278738 A B P P' p lt2 s H2 f H1 g a) (@lem8278723 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278741 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278742 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278741 (type557 A B P) P' Q). Qed.
Lemma lem8278743 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3609 A B P P' p lt2 s H2 G1 f H1 g a) = (term3610 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (@lem8278742 A B P (term373 A B P P' f a) (term3564 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278744 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3611 A B P p lt2 s H2 G1 f H1 g a G2) = (term3563 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3611 A B P p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8278745 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3612 A B P p lt2 s H2 G1 f H1 g a) = (term3564 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278744 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278746 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278747 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3613 A B P p lt2 s H2 G1 f H1 g a) = (term3565 A B P p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278746 A B P) (@lem8278745 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278748 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278749 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3609 A B P P' p lt2 s H2 G1 f H1 g a) = (term3605 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278748 A B P P' f a) (@lem8278747 A B P p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278750 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278751 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3614 A B P P' p lt2 s H2 G1 f H1 g a) = (term3615 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278750) (@lem8278749 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278752 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3611 A B P p lt2 s H2 G1 f H1 g a G2) = (term3563 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3611 A B P p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8278753 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278754 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3616 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3617 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278753 A B P P' f a) (@lem8278752 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278755 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3618 A B P P' p lt2 s H2 G1 f H1 g a) = (term3619 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278754 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278756 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278757 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3610 A B P P' p lt2 s H2 G1 f H1 g a) = (term3620 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278756 A B P) (@lem8278755 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278758 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3609 A B P P' p lt2 s H2 G1 f H1 g a) = (term3610 A B P P' p lt2 s H2 G1 f H1 g a)) = ((term3605 A B P P' p lt2 s H2 G1 f H1 g a) = (term3620 A B P P' p lt2 s H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278751 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8278757 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278759 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3605 A B P P' p lt2 s H2 G1 f H1 g a) = (term3620 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278758 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8278743 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278761 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278762 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278761 (type560 A B P) P' Q). Qed.
Lemma lem8278763 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3621 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3622 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (@lem8278762 A B P (term373 A B P P' f a) (term3562 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278764 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3623 A B P p lt2 s G2 H2 G1 f H1 g a P1) = (term3561 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3623 A B P p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278765 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3624 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3562 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278764 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278766 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278767 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3625 A B P p lt2 s G2 H2 G1 f H1 g a) = (term3563 A B P p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278766 A B P) (@lem8278765 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278768 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278769 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3621 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3617 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278768 A B P P' f a) (@lem8278767 A B P p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278770 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278771 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3626 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3627 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278770) (@lem8278769 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278772 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3623 A B P p lt2 s G2 H2 G1 f H1 g a P1) = (term3561 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3623 A B P p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278773 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278774 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3628 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3629 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278773 A B P P' f a) (@lem8278772 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278775 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3630 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3631 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278774 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278776 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278777 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3622 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3632 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278776 A B P) (@lem8278775 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278778 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3621 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3622 A B P P' p lt2 s G2 H2 G1 f H1 g a)) = ((term3617 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3632 A B P P' p lt2 s G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278771 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8278777 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278779 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3617 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3632 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278778 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8278763 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278781 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278782 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278781 (type560 A B P) P' Q). Qed.
Lemma lem8278783 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3633 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3634 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8278782 A B P (term373 A B P P' f a) (term3560 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278784 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3635 A B P p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3558 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3635 A B P p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278785 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3636 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3560 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278784 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278786 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278787 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3637 A B P p lt2 s G2 H2 P1 G1 f H1 g a) = (term3561 A B P p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278786 A B P) (@lem8278785 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278788 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278789 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3633 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3629 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278788 A B P P' f a) (@lem8278787 A B P p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278790 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278791 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3638 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3639 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278790) (@lem8278789 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278792 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3635 A B P p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3558 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3635 A B P p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278793 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8278794 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3640 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3641 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278793 A B P P' f a) (@lem8278792 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278795 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3642 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3643 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278794 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278796 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278797 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3634 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3644 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278796 A B P) (@lem8278795 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278798 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3633 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3634 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)) = ((term3629 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3644 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278791 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278797 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278799 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3629 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3644 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278798 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278783 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278800 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3631 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3645 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278799 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278801 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278802 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3632 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3646 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278801 A B P) (@lem8278800 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278803 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3617 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3646 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278779 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8278802 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278804 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3619 A B P P' p lt2 s H2 G1 f H1 g a) = (term3647 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278803 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278805 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278806 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3620 A B P P' p lt2 s H2 G1 f H1 g a) = (term3648 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278805 A B P) (@lem8278804 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278807 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3605 A B P P' p lt2 s H2 G1 f H1 g a) = (term3648 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278759 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8278806 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278808 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3607 A B P P' p lt2 s H2 f H1 g a) = (term3649 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278807 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278809 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278810 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3608 A B P P' p lt2 s H2 f H1 g a) = (term3650 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278809 A B P) (@lem8278808 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278811 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3593 A B P P' p lt2 s H2 f H1 g a) = (term3650 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (TRANS (@lem8278739 A B P P' p lt2 s H2 f H1 g a) (@lem8278810 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278812 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3595 A B P P' p s H2 f H1 g a) = (term3651 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278811 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278813 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278814 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3596 A B P P' p s H2 f H1 g a) = (term3652 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278813 A) (@lem8278812 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278815 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3581 A B P P' p s H2 f H1 g a) = (term3652 A B P P' p s H2 f H1 g a).
Proof. exact (TRANS (@lem8278719 A B P P' p s H2 f H1 g a) (@lem8278814 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278816 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3583 A B P P' p H2 f H1 g a) = (term3653 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278815 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278817 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278818 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3584 A B P P' p H2 f H1 g a) = (term3654 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278817 A P) (@lem8278816 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278819 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3572 A B P P' p H2 f H1 g a) = (term3654 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8278699 A B P P' p H2 f H1 g a) (@lem8278818 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278820 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2946 A B P P' p H2 f H1 g a) = (term3654 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8278679 A B P P' p H2 f H1 g a) (@lem8278819 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278821 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2947 A B P P' p H2 H1 g a) = (term3655 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278820 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278822 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278823 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2948 A B P P' p H2 H1 g a) = (term3656 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278822 A B) (@lem8278821 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278824 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278825 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2949 A B P P' p H2 H1 g a) = (term3657 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278824 A B P p g a) (@lem8278823 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278827 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278828 {A B : Type'} (P : Prop) (Q : type572 A B) : (term3190 A B P Q) = (term3191 A B P Q).
Proof. exact (@lem8278827 (A -> B) P Q). Qed.
Lemma lem8278829 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3658 A B P P' p H2 H1 g a) = (term3659 A B P P' p H2 H1 g a).
Proof. exact (@lem8278828 A B (p g a) (term3655 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278830 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3660 A B P P' p H2 H1 g a f) = (term3654 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term3660 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8278831 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3661 A B P P' p H2 H1 g a) = (term3655 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278830 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278832 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278833 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3662 A B P P' p H2 H1 g a) = (term3656 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278832 A B) (@lem8278831 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278834 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278835 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3658 A B P P' p H2 H1 g a) = (term3657 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278834 A B P p g a) (@lem8278833 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278836 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278837 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3663 A B P P' p H2 H1 g a) = (term3664 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278836) (@lem8278835 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278838 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3660 A B P P' p H2 H1 g a f) = (term3654 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term3660 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8278839 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278840 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3665 A B P P' p H2 H1 g a f) = (term3666 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278839 A B P p g a) (@lem8278838 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278841 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3667 A B P P' p H2 H1 g a) = (term3668 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278840 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278842 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278843 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3659 A B P P' p H2 H1 g a) = (term3669 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278842 A B) (@lem8278841 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278844 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3658 A B P P' p H2 H1 g a) = (term3659 A B P P' p H2 H1 g a)) = ((term3657 A B P P' p H2 H1 g a) = (term3669 A B P P' p H2 H1 g a)).
Proof. exact (MK_COMB (@lem8278837 A B P P' p H2 H1 g a) (@lem8278843 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278845 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3657 A B P P' p H2 H1 g a) = (term3669 A B P P' p H2 H1 g a).
Proof. exact (EQ_MP (@lem8278844 A B P P' p H2 H1 g a) (@lem8278829 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278847 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278848 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8278847 (P -> A) P' Q). Qed.
Lemma lem8278849 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3670 A B P P' p H2 f H1 g a) = (term3671 A B P P' p H2 f H1 g a).
Proof. exact (@lem8278848 A P (p g a) (term3653 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278850 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3672 A B P P' p H2 f H1 g a s) = (term3652 A B P P' p s H2 f H1 g a).
Proof. exact (eq_refl (term3672 A B P P' p H2 f H1 g a s)). Qed.
Lemma lem8278851 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3673 A B P P' p H2 f H1 g a) = (term3653 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278850 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278852 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278853 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3674 A B P P' p H2 f H1 g a) = (term3654 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278852 A P) (@lem8278851 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278854 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278855 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3670 A B P P' p H2 f H1 g a) = (term3666 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278854 A B P p g a) (@lem8278853 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278856 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278857 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3675 A B P P' p H2 f H1 g a) = (term3676 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278856) (@lem8278855 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278858 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3672 A B P P' p H2 f H1 g a s) = (term3652 A B P P' p s H2 f H1 g a).
Proof. exact (eq_refl (term3672 A B P P' p H2 f H1 g a s)). Qed.
Lemma lem8278859 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278860 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3677 A B P P' p H2 f H1 g a s) = (term3678 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278859 A B P p g a) (@lem8278858 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278861 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3679 A B P P' p H2 f H1 g a) = (term3680 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278860 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278862 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278863 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3671 A B P P' p H2 f H1 g a) = (term3681 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278862 A P) (@lem8278861 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278864 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3670 A B P P' p H2 f H1 g a) = (term3671 A B P P' p H2 f H1 g a)) = ((term3666 A B P P' p H2 f H1 g a) = (term3681 A B P P' p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278857 A B P P' p H2 f H1 g a) (@lem8278863 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278865 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3666 A B P P' p H2 f H1 g a) = (term3681 A B P P' p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278864 A B P P' p H2 f H1 g a) (@lem8278849 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278867 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278868 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8278867 (type1402 A) P Q). Qed.
Lemma lem8278869 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3682 A B P P' p s H2 f H1 g a) = (term3683 A B P P' p s H2 f H1 g a).
Proof. exact (@lem8278868 A (p g a) (term3651 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278870 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3684 A B P P' p s H2 f H1 g a lt2) = (term3650 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3684 A B P P' p s H2 f H1 g a lt2)). Qed.
Lemma lem8278871 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3685 A B P P' p s H2 f H1 g a) = (term3651 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278870 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278872 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278873 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3686 A B P P' p s H2 f H1 g a) = (term3652 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278872 A) (@lem8278871 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278874 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278875 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3682 A B P P' p s H2 f H1 g a) = (term3678 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278874 A B P p g a) (@lem8278873 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278876 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278877 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3687 A B P P' p s H2 f H1 g a) = (term3688 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278876) (@lem8278875 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278878 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3684 A B P P' p s H2 f H1 g a lt2) = (term3650 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3684 A B P P' p s H2 f H1 g a lt2)). Qed.
Lemma lem8278879 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278880 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3689 A B P P' p s H2 f H1 g a lt2) = (term3690 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278879 A B P p g a) (@lem8278878 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278881 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3691 A B P P' p s H2 f H1 g a) = (term3692 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278880 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278882 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278883 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3683 A B P P' p s H2 f H1 g a) = (term3693 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278882 A) (@lem8278881 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278884 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3682 A B P P' p s H2 f H1 g a) = (term3683 A B P P' p s H2 f H1 g a)) = ((term3678 A B P P' p s H2 f H1 g a) = (term3693 A B P P' p s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278877 A B P P' p s H2 f H1 g a) (@lem8278883 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278885 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3678 A B P P' p s H2 f H1 g a) = (term3693 A B P P' p s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278884 A B P P' p s H2 f H1 g a) (@lem8278869 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278887 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278888 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278887 (type557 A B P) P' Q). Qed.
Lemma lem8278889 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3694 A B P P' p lt2 s H2 f H1 g a) = (term3695 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (@lem8278888 A B P (p g a) (term3649 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278890 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3696 A B P P' p lt2 s H2 f H1 g a G1) = (term3648 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3696 A B P P' p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8278891 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3697 A B P P' p lt2 s H2 f H1 g a) = (term3649 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278890 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278892 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278893 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3698 A B P P' p lt2 s H2 f H1 g a) = (term3650 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278892 A B P) (@lem8278891 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278894 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278895 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3694 A B P P' p lt2 s H2 f H1 g a) = (term3690 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278894 A B P p g a) (@lem8278893 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278896 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278897 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3699 A B P P' p lt2 s H2 f H1 g a) = (term3700 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278896) (@lem8278895 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278898 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3696 A B P P' p lt2 s H2 f H1 g a G1) = (term3648 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3696 A B P P' p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8278899 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278900 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3701 A B P P' p lt2 s H2 f H1 g a G1) = (term3702 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278899 A B P p g a) (@lem8278898 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278901 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3703 A B P P' p lt2 s H2 f H1 g a) = (term3704 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278900 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278902 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278903 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3695 A B P P' p lt2 s H2 f H1 g a) = (term3705 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278902 A B P) (@lem8278901 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278904 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3694 A B P P' p lt2 s H2 f H1 g a) = (term3695 A B P P' p lt2 s H2 f H1 g a)) = ((term3690 A B P P' p lt2 s H2 f H1 g a) = (term3705 A B P P' p lt2 s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8278897 A B P P' p lt2 s H2 f H1 g a) (@lem8278903 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278905 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3690 A B P P' p lt2 s H2 f H1 g a) = (term3705 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8278904 A B P P' p lt2 s H2 f H1 g a) (@lem8278889 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278907 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278908 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8278907 (type557 A B P) P' Q). Qed.
Lemma lem8278909 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3706 A B P P' p lt2 s H2 G1 f H1 g a) = (term3707 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (@lem8278908 A B P (p g a) (term3647 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278910 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3708 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3646 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3708 A B P P' p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8278911 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3709 A B P P' p lt2 s H2 G1 f H1 g a) = (term3647 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278910 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278912 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278913 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3710 A B P P' p lt2 s H2 G1 f H1 g a) = (term3648 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278912 A B P) (@lem8278911 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278914 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278915 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3706 A B P P' p lt2 s H2 G1 f H1 g a) = (term3702 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278914 A B P p g a) (@lem8278913 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278917 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3711 A B P P' p lt2 s H2 G1 f H1 g a) = (term3712 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278916) (@lem8278915 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278918 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3708 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3646 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3708 A B P P' p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8278919 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278920 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3713 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3714 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278919 A B P p g a) (@lem8278918 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278921 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3715 A B P P' p lt2 s H2 G1 f H1 g a) = (term3716 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278920 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278922 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278923 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3707 A B P P' p lt2 s H2 G1 f H1 g a) = (term3717 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278922 A B P) (@lem8278921 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278924 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3706 A B P P' p lt2 s H2 G1 f H1 g a) = (term3707 A B P P' p lt2 s H2 G1 f H1 g a)) = ((term3702 A B P P' p lt2 s H2 G1 f H1 g a) = (term3717 A B P P' p lt2 s H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278917 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8278923 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278925 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3702 A B P P' p lt2 s H2 G1 f H1 g a) = (term3717 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278924 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8278909 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278927 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278928 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278927 (type560 A B P) P' Q). Qed.
Lemma lem8278929 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3718 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3719 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (@lem8278928 A B P (p g a) (term3645 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278930 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3720 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3644 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3720 A B P P' p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278931 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3721 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3645 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278930 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278932 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278933 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3722 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3646 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278932 A B P) (@lem8278931 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278934 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278935 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3718 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3714 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278934 A B P p g a) (@lem8278933 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278936 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278937 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3723 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3724 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278936) (@lem8278935 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278938 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3720 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3644 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3720 A B P P' p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8278939 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278940 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3725 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3726 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278939 A B P p g a) (@lem8278938 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278941 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3727 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3728 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278940 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278942 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278943 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3719 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3729 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278942 A B P) (@lem8278941 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278944 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3718 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3719 A B P P' p lt2 s G2 H2 G1 f H1 g a)) = ((term3714 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3729 A B P P' p lt2 s G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278937 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8278943 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278945 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3714 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3729 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278944 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8278929 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278947 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278948 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278947 (type560 A B P) P' Q). Qed.
Lemma lem8278949 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3730 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3731 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8278948 A B P (p g a) (term3643 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278950 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3732 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3641 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3732 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278951 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3733 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3643 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278950 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278952 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278953 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3734 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3644 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278952 A B P) (@lem8278951 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278954 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278955 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3730 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3726 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278954 A B P p g a) (@lem8278953 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278956 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8278957 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3735 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3736 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278956) (@lem8278955 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278958 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3732 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3641 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3732 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8278959 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8278960 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3737 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3738 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278959 A B P p g a) (@lem8278958 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278961 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3739 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3740 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8278960 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278962 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278963 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3731 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3741 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278962 A B P) (@lem8278961 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278964 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3730 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3731 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)) = ((term3726 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3741 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8278957 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278963 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278965 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3726 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3741 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8278964 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8278949 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278966 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3728 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3742 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8278965 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8278967 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278968 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3729 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3743 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278967 A B P) (@lem8278966 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278969 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3714 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3743 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278945 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8278968 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278970 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3716 A B P P' p lt2 s H2 G1 f H1 g a) = (term3744 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8278969 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8278971 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278972 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3717 A B P P' p lt2 s H2 G1 f H1 g a) = (term3745 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8278971 A B P) (@lem8278970 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278973 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3702 A B P P' p lt2 s H2 G1 f H1 g a) = (term3745 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8278925 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8278972 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278974 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3704 A B P P' p lt2 s H2 f H1 g a) = (term3746 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8278973 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8278975 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8278976 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3705 A B P P' p lt2 s H2 f H1 g a) = (term3747 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278975 A B P) (@lem8278974 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278977 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3690 A B P P' p lt2 s H2 f H1 g a) = (term3747 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (TRANS (@lem8278905 A B P P' p lt2 s H2 f H1 g a) (@lem8278976 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278978 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3692 A B P P' p s H2 f H1 g a) = (term3748 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8278977 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8278979 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8278980 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3693 A B P P' p s H2 f H1 g a) = (term3749 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278979 A) (@lem8278978 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278981 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3678 A B P P' p s H2 f H1 g a) = (term3749 A B P P' p s H2 f H1 g a).
Proof. exact (TRANS (@lem8278885 A B P P' p s H2 f H1 g a) (@lem8278980 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278982 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3680 A B P P' p H2 f H1 g a) = (term3750 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8278981 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8278983 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8278984 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3681 A B P P' p H2 f H1 g a) = (term3751 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8278983 A P) (@lem8278982 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278985 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3666 A B P P' p H2 f H1 g a) = (term3751 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8278865 A B P P' p H2 f H1 g a) (@lem8278984 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278986 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3668 A B P P' p H2 H1 g a) = (term3752 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8278985 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8278987 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8278988 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3669 A B P P' p H2 H1 g a) = (term3753 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8278987 A B) (@lem8278986 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278989 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3657 A B P P' p H2 H1 g a) = (term3753 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8278845 A B P P' p H2 H1 g a) (@lem8278988 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278990 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2949 A B P P' p H2 H1 g a) = (term3753 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8278825 A B P P' p H2 H1 g a) (@lem8278989 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278991 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2950 A B P P' H2 H1 g a) = (term3754 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8278990 A B P P' p H2 H1 g a)). Qed.
Lemma lem8278992 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8278993 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2951 A B P P' H2 H1 g a) = (term3755 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8278992 A B P) (@lem8278991 A B P P' H2 H1 g a)). Qed.
Lemma lem8278994 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8278995 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2952 A B P P' H2 H1 g a) = (term3756 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8278994 A B P P' g a) (@lem8278993 A B P P' H2 H1 g a)). Qed.
Lemma lem8278997 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8278998 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8278997 (type560 A B P) P' Q). Qed.
Lemma lem8278999 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3757 A B P P' H2 H1 g a) = (term3758 A B P P' H2 H1 g a).
Proof. exact (@lem8278998 A B P (term373 A B P P' g a) (term3754 A B P P' H2 H1 g a)). Qed.
Lemma lem8279000 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3759 A B P P' H2 H1 g a p) = (term3753 A B P P' p H2 H1 g a).
Proof. exact (eq_refl (term3759 A B P P' H2 H1 g a p)). Qed.
Lemma lem8279001 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3760 A B P P' H2 H1 g a) = (term3754 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279000 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279002 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279003 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3761 A B P P' H2 H1 g a) = (term3755 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279002 A B P) (@lem8279001 A B P P' H2 H1 g a)). Qed.
Lemma lem8279004 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279005 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3757 A B P P' H2 H1 g a) = (term3756 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279004 A B P P' g a) (@lem8279003 A B P P' H2 H1 g a)). Qed.
Lemma lem8279006 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279007 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3762 A B P P' H2 H1 g a) = (term3763 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279006) (@lem8279005 A B P P' H2 H1 g a)). Qed.
Lemma lem8279008 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3759 A B P P' H2 H1 g a p) = (term3753 A B P P' p H2 H1 g a).
Proof. exact (eq_refl (term3759 A B P P' H2 H1 g a p)). Qed.
Lemma lem8279009 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279010 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3764 A B P P' H2 H1 g a p) = (term3765 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279009 A B P P' g a) (@lem8279008 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279011 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3766 A B P P' H2 H1 g a) = (term3767 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279010 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279012 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279013 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3758 A B P P' H2 H1 g a) = (term3768 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279012 A B P) (@lem8279011 A B P P' H2 H1 g a)). Qed.
Lemma lem8279014 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3757 A B P P' H2 H1 g a) = (term3758 A B P P' H2 H1 g a)) = ((term3756 A B P P' H2 H1 g a) = (term3768 A B P P' H2 H1 g a)).
Proof. exact (MK_COMB (@lem8279007 A B P P' H2 H1 g a) (@lem8279013 A B P P' H2 H1 g a)). Qed.
Lemma lem8279015 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3756 A B P P' H2 H1 g a) = (term3768 A B P P' H2 H1 g a).
Proof. exact (EQ_MP (@lem8279014 A B P P' H2 H1 g a) (@lem8278999 A B P P' H2 H1 g a)). Qed.
Lemma lem8279017 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279018 {A B : Type'} (P : Prop) (Q : type572 A B) : (term3190 A B P Q) = (term3191 A B P Q).
Proof. exact (@lem8279017 (A -> B) P Q). Qed.
Lemma lem8279019 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3769 A B P P' p H2 H1 g a) = (term3770 A B P P' p H2 H1 g a).
Proof. exact (@lem8279018 A B (term373 A B P P' g a) (term3752 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279020 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3771 A B P P' p H2 H1 g a f) = (term3751 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term3771 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8279021 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3772 A B P P' p H2 H1 g a) = (term3752 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279020 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279022 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279023 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3773 A B P P' p H2 H1 g a) = (term3753 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279022 A B) (@lem8279021 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279024 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279025 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3769 A B P P' p H2 H1 g a) = (term3765 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279024 A B P P' g a) (@lem8279023 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279026 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279027 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3774 A B P P' p H2 H1 g a) = (term3775 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279026) (@lem8279025 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279028 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3771 A B P P' p H2 H1 g a f) = (term3751 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term3771 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8279029 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279030 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3776 A B P P' p H2 H1 g a f) = (term3777 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279029 A B P P' g a) (@lem8279028 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279031 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3778 A B P P' p H2 H1 g a) = (term3779 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279030 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279032 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279033 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3770 A B P P' p H2 H1 g a) = (term3780 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279032 A B) (@lem8279031 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279034 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3769 A B P P' p H2 H1 g a) = (term3770 A B P P' p H2 H1 g a)) = ((term3765 A B P P' p H2 H1 g a) = (term3780 A B P P' p H2 H1 g a)).
Proof. exact (MK_COMB (@lem8279027 A B P P' p H2 H1 g a) (@lem8279033 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279035 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3765 A B P P' p H2 H1 g a) = (term3780 A B P P' p H2 H1 g a).
Proof. exact (EQ_MP (@lem8279034 A B P P' p H2 H1 g a) (@lem8279019 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279037 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279038 {A P : Type'} (P' : Prop) (Q : type805 A P) : (term3018 A P P' Q) = (term3019 A P P' Q).
Proof. exact (@lem8279037 (P -> A) P' Q). Qed.
Lemma lem8279039 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3781 A B P P' p H2 f H1 g a) = (term3782 A B P P' p H2 f H1 g a).
Proof. exact (@lem8279038 A P (term373 A B P P' g a) (term3750 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279040 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3783 A B P P' p H2 f H1 g a s) = (term3749 A B P P' p s H2 f H1 g a).
Proof. exact (eq_refl (term3783 A B P P' p H2 f H1 g a s)). Qed.
Lemma lem8279041 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3784 A B P P' p H2 f H1 g a) = (term3750 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279040 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279042 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279043 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3785 A B P P' p H2 f H1 g a) = (term3751 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279042 A P) (@lem8279041 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279044 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279045 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3781 A B P P' p H2 f H1 g a) = (term3777 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279044 A B P P' g a) (@lem8279043 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279046 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279047 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3786 A B P P' p H2 f H1 g a) = (term3787 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279046) (@lem8279045 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279048 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3783 A B P P' p H2 f H1 g a s) = (term3749 A B P P' p s H2 f H1 g a).
Proof. exact (eq_refl (term3783 A B P P' p H2 f H1 g a s)). Qed.
Lemma lem8279049 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279050 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3788 A B P P' p H2 f H1 g a s) = (term3789 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279049 A B P P' g a) (@lem8279048 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279051 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3790 A B P P' p H2 f H1 g a) = (term3791 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279050 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279052 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279053 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3782 A B P P' p H2 f H1 g a) = (term3792 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279052 A P) (@lem8279051 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279054 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3781 A B P P' p H2 f H1 g a) = (term3782 A B P P' p H2 f H1 g a)) = ((term3777 A B P P' p H2 f H1 g a) = (term3792 A B P P' p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8279047 A B P P' p H2 f H1 g a) (@lem8279053 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279055 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3777 A B P P' p H2 f H1 g a) = (term3792 A B P P' p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8279054 A B P P' p H2 f H1 g a) (@lem8279039 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279057 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279058 {A : Type'} (P : Prop) (Q : type421 A) : (term3032 A P Q) = (term3033 A P Q).
Proof. exact (@lem8279057 (type1402 A) P Q). Qed.
Lemma lem8279059 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3793 A B P P' p s H2 f H1 g a) = (term3794 A B P P' p s H2 f H1 g a).
Proof. exact (@lem8279058 A (term373 A B P P' g a) (term3748 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279060 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3795 A B P P' p s H2 f H1 g a lt2) = (term3747 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3795 A B P P' p s H2 f H1 g a lt2)). Qed.
Lemma lem8279061 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3796 A B P P' p s H2 f H1 g a) = (term3748 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279060 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279062 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279063 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3797 A B P P' p s H2 f H1 g a) = (term3749 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279062 A) (@lem8279061 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279064 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279065 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3793 A B P P' p s H2 f H1 g a) = (term3789 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279064 A B P P' g a) (@lem8279063 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279066 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279067 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3798 A B P P' p s H2 f H1 g a) = (term3799 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279066) (@lem8279065 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279068 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3795 A B P P' p s H2 f H1 g a lt2) = (term3747 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3795 A B P P' p s H2 f H1 g a lt2)). Qed.
Lemma lem8279069 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279070 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3800 A B P P' p s H2 f H1 g a lt2) = (term3801 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279069 A B P P' g a) (@lem8279068 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279071 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3802 A B P P' p s H2 f H1 g a) = (term3803 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279070 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279072 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279073 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3794 A B P P' p s H2 f H1 g a) = (term3804 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279072 A) (@lem8279071 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279074 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3793 A B P P' p s H2 f H1 g a) = (term3794 A B P P' p s H2 f H1 g a)) = ((term3789 A B P P' p s H2 f H1 g a) = (term3804 A B P P' p s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8279067 A B P P' p s H2 f H1 g a) (@lem8279073 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279075 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3789 A B P P' p s H2 f H1 g a) = (term3804 A B P P' p s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8279074 A B P P' p s H2 f H1 g a) (@lem8279059 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279077 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279078 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8279077 (type557 A B P) P' Q). Qed.
Lemma lem8279079 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3805 A B P P' p lt2 s H2 f H1 g a) = (term3806 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (@lem8279078 A B P (term373 A B P P' g a) (term3746 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279080 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3807 A B P P' p lt2 s H2 f H1 g a G1) = (term3745 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3807 A B P P' p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8279081 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3808 A B P P' p lt2 s H2 f H1 g a) = (term3746 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279080 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279082 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279083 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3809 A B P P' p lt2 s H2 f H1 g a) = (term3747 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279082 A B P) (@lem8279081 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279084 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279085 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3805 A B P P' p lt2 s H2 f H1 g a) = (term3801 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279084 A B P P' g a) (@lem8279083 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279086 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279087 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3810 A B P P' p lt2 s H2 f H1 g a) = (term3811 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279086) (@lem8279085 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279088 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3807 A B P P' p lt2 s H2 f H1 g a G1) = (term3745 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3807 A B P P' p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8279089 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279090 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3812 A B P P' p lt2 s H2 f H1 g a G1) = (term3813 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279089 A B P P' g a) (@lem8279088 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279091 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3814 A B P P' p lt2 s H2 f H1 g a) = (term3815 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279090 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279092 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279093 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3806 A B P P' p lt2 s H2 f H1 g a) = (term3816 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279092 A B P) (@lem8279091 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279094 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3805 A B P P' p lt2 s H2 f H1 g a) = (term3806 A B P P' p lt2 s H2 f H1 g a)) = ((term3801 A B P P' p lt2 s H2 f H1 g a) = (term3816 A B P P' p lt2 s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8279087 A B P P' p lt2 s H2 f H1 g a) (@lem8279093 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279095 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3801 A B P P' p lt2 s H2 f H1 g a) = (term3816 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8279094 A B P P' p lt2 s H2 f H1 g a) (@lem8279079 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279097 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279098 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term2763 A B P P' Q) = (term2762 A B P P' Q).
Proof. exact (@lem8279097 (type557 A B P) P' Q). Qed.
Lemma lem8279099 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3817 A B P P' p lt2 s H2 G1 f H1 g a) = (term3818 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (@lem8279098 A B P (term373 A B P P' g a) (term3744 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279100 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3819 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3743 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3819 A B P P' p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8279101 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3820 A B P P' p lt2 s H2 G1 f H1 g a) = (term3744 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279100 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279102 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279103 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3821 A B P P' p lt2 s H2 G1 f H1 g a) = (term3745 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279102 A B P) (@lem8279101 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279104 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279105 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3817 A B P P' p lt2 s H2 G1 f H1 g a) = (term3813 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279104 A B P P' g a) (@lem8279103 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279106 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279107 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3822 A B P P' p lt2 s H2 G1 f H1 g a) = (term3823 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279106) (@lem8279105 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279108 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3819 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3743 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3819 A B P P' p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8279109 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279110 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3824 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3825 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279109 A B P P' g a) (@lem8279108 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279111 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3826 A B P P' p lt2 s H2 G1 f H1 g a) = (term3827 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279110 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279112 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279113 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3818 A B P P' p lt2 s H2 G1 f H1 g a) = (term3828 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279112 A B P) (@lem8279111 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279114 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3817 A B P P' p lt2 s H2 G1 f H1 g a) = (term3818 A B P P' p lt2 s H2 G1 f H1 g a)) = ((term3813 A B P P' p lt2 s H2 G1 f H1 g a) = (term3828 A B P P' p lt2 s H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8279107 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8279113 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279115 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3813 A B P P' p lt2 s H2 G1 f H1 g a) = (term3828 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8279114 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8279099 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279117 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279118 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8279117 (type560 A B P) P' Q). Qed.
Lemma lem8279119 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3829 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3830 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (@lem8279118 A B P (term373 A B P P' g a) (term3742 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279120 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3831 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3741 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3831 A B P P' p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8279121 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3832 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3742 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279120 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279122 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279123 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3833 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3743 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279122 A B P) (@lem8279121 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279124 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279125 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3829 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3825 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279124 A B P P' g a) (@lem8279123 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279126 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279127 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3834 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3835 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279126) (@lem8279125 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279128 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3831 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3741 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3831 A B P P' p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8279129 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279130 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3836 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3837 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279129 A B P P' g a) (@lem8279128 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279131 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3838 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3839 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279130 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279132 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279133 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3830 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3840 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279132 A B P) (@lem8279131 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279134 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3829 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3830 A B P P' p lt2 s G2 H2 G1 f H1 g a)) = ((term3825 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3840 A B P P' p lt2 s G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8279127 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8279133 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279135 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3825 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3840 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8279134 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8279119 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279137 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1567 A P Q) = (term1568 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8279138 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term2733 A B P P' Q) = (term2732 A B P P' Q).
Proof. exact (@lem8279137 (type560 A B P) P' Q). Qed.
Lemma lem8279139 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3841 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3842 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8279138 A B P (term373 A B P P' g a) (term3740 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279140 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3843 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3738 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3843 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8279141 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3844 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3740 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8279140 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279142 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279143 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3845 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3741 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279142 A B P) (@lem8279141 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279144 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279145 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3841 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3837 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279144 A B P P' g a) (@lem8279143 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279146 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279147 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3846 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3847 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279146) (@lem8279145 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279148 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3843 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3738 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3843 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8279149 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279150 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3848 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3849 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279149 A B P P' g a) (@lem8279148 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279151 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3850 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3851 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8279150 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279152 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279153 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3842 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3852 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279152 A B P) (@lem8279151 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279154 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3841 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3842 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)) = ((term3837 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3852 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8279147 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8279153 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279155 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3837 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3852 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8279154 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8279139 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279156 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3839 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3853 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279155 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279157 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279158 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3840 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3854 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279157 A B P) (@lem8279156 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279159 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3825 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3854 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8279135 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8279158 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279160 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3827 A B P P' p lt2 s H2 G1 f H1 g a) = (term3855 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279159 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279161 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279162 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3828 A B P P' p lt2 s H2 G1 f H1 g a) = (term3856 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279161 A B P) (@lem8279160 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279163 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3813 A B P P' p lt2 s H2 G1 f H1 g a) = (term3856 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8279115 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8279162 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279164 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3815 A B P P' p lt2 s H2 f H1 g a) = (term3857 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279163 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279165 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279166 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3816 A B P P' p lt2 s H2 f H1 g a) = (term3858 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279165 A B P) (@lem8279164 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279167 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3801 A B P P' p lt2 s H2 f H1 g a) = (term3858 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (TRANS (@lem8279095 A B P P' p lt2 s H2 f H1 g a) (@lem8279166 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279168 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3803 A B P P' p s H2 f H1 g a) = (term3859 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279167 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279169 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279170 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3804 A B P P' p s H2 f H1 g a) = (term3860 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279169 A) (@lem8279168 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279171 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3789 A B P P' p s H2 f H1 g a) = (term3860 A B P P' p s H2 f H1 g a).
Proof. exact (TRANS (@lem8279075 A B P P' p s H2 f H1 g a) (@lem8279170 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279172 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3791 A B P P' p H2 f H1 g a) = (term3861 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279171 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279173 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279174 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3792 A B P P' p H2 f H1 g a) = (term3862 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279173 A P) (@lem8279172 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279175 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3777 A B P P' p H2 f H1 g a) = (term3862 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8279055 A B P P' p H2 f H1 g a) (@lem8279174 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279176 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3779 A B P P' p H2 H1 g a) = (term3863 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279175 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279177 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279178 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3780 A B P P' p H2 H1 g a) = (term3864 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279177 A B) (@lem8279176 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279179 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3765 A B P P' p H2 H1 g a) = (term3864 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8279035 A B P P' p H2 H1 g a) (@lem8279178 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279180 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3767 A B P P' H2 H1 g a) = (term3865 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279179 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279181 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279182 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3768 A B P P' H2 H1 g a) = (term3866 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279181 A B P) (@lem8279180 A B P P' H2 H1 g a)). Qed.
Lemma lem8279183 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3756 A B P P' H2 H1 g a) = (term3866 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8279015 A B P P' H2 H1 g a) (@lem8279182 A B P P' H2 H1 g a)). Qed.
Lemma lem8279184 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2952 A B P P' H2 H1 g a) = (term3866 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8278995 A B P P' H2 H1 g a) (@lem8279183 A B P P' H2 H1 g a)). Qed.
Lemma lem8279185 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2953 A B P P' H2 H1 g a) = (term3867 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8278266 A B P P' H1 H2 g a) (@lem8279184 A B P P' H2 H1 g a)). Qed.
Lemma lem8279187 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279188 {A B P : Type'} (P' : type117 A B P) (Q : type117 A B P) : (term2874 A B P P' Q) = (term2873 A B P P' Q).
Proof. exact (@lem8279187 (type560 A B P) P' Q). Qed.
Lemma lem8279189 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3868 A B P P' H2 H1 g a) = (term3869 A B P P' H2 H1 g a).
Proof. exact (@lem8279188 A B P (term3399 A B P P' H1 H2 g a) (term3865 A B P P' H2 H1 g a)). Qed.
Lemma lem8279190 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3870 A B P P' H1 H2 g a p) = (term3398 A B P P' p H1 H2 g a).
Proof. exact (eq_refl (term3870 A B P P' H1 H2 g a p)). Qed.
Lemma lem8279191 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3871 A B P P' H1 H2 g a) = (term3399 A B P P' H1 H2 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279190 A B P P' p H1 H2 g a)). Qed.
Lemma lem8279192 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279193 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3872 A B P P' H1 H2 g a) = (term3400 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8279192 A B P) (@lem8279191 A B P P' H1 H2 g a)). Qed.
Lemma lem8279194 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279195 {A B P : Type'} (P' : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3873 A B P P' H1 H2 g a) = (term3401 A B P P' H1 H2 g a).
Proof. exact (MK_COMB (@lem8279194) (@lem8279193 A B P P' H1 H2 g a)). Qed.
Lemma lem8279196 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3874 A B P P' H2 H1 g a p) = (term3864 A B P P' p H2 H1 g a).
Proof. exact (eq_refl (term3874 A B P P' H2 H1 g a p)). Qed.
Lemma lem8279197 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3875 A B P P' H2 H1 g a) = (term3865 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279196 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279198 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279199 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3876 A B P P' H2 H1 g a) = (term3866 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279198 A B P) (@lem8279197 A B P P' H2 H1 g a)). Qed.
Lemma lem8279200 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3868 A B P P' H2 H1 g a) = (term3867 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279195 A B P P' H1 H2 g a) (@lem8279199 A B P P' H2 H1 g a)). Qed.
Lemma lem8279201 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279202 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3877 A B P P' H2 H1 g a) = (term3878 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279201) (@lem8279200 A B P P' H2 H1 g a)). Qed.
Lemma lem8279203 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3870 A B P P' H1 H2 g a p) = (term3398 A B P P' p H1 H2 g a).
Proof. exact (eq_refl (term3870 A B P P' H1 H2 g a p)). Qed.
Lemma lem8279204 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279205 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3879 A B P P' H1 H2 g a p) = (term3880 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8279204) (@lem8279203 A B P P' p H1 H2 g a)). Qed.
Lemma lem8279206 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3874 A B P P' H2 H1 g a p) = (term3864 A B P P' p H2 H1 g a).
Proof. exact (eq_refl (term3874 A B P P' H2 H1 g a p)). Qed.
Lemma lem8279207 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3881 A B P P' H2 H1 g a p) = (term3882 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279205 A B P P' p H1 H2 g a) (@lem8279206 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279208 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3883 A B P P' H2 H1 g a) = (term3884 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279207 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279209 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279210 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3869 A B P P' H2 H1 g a) = (term3885 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279209 A B P) (@lem8279208 A B P P' H2 H1 g a)). Qed.
Lemma lem8279211 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3868 A B P P' H2 H1 g a) = (term3869 A B P P' H2 H1 g a)) = ((term3867 A B P P' H2 H1 g a) = (term3885 A B P P' H2 H1 g a)).
Proof. exact (MK_COMB (@lem8279202 A B P P' H2 H1 g a) (@lem8279210 A B P P' H2 H1 g a)). Qed.
Lemma lem8279212 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3867 A B P P' H2 H1 g a) = (term3885 A B P P' H2 H1 g a).
Proof. exact (EQ_MP (@lem8279211 A B P P' H2 H1 g a) (@lem8279189 A B P P' H2 H1 g a)). Qed.
Lemma lem8279214 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279215 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term3886 A B P Q) = (term3887 A B P Q).
Proof. exact (@lem8279214 (A -> B) P Q). Qed.
Lemma lem8279216 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3888 A B P P' p H2 H1 g a) = (term3889 A B P P' p H2 H1 g a).
Proof. exact (@lem8279215 A B (term3397 A B P P' p H1 H2 g a) (term3863 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279217 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3890 A B P P' p H1 H2 g a f) = (term3396 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term3890 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8279218 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3891 A B P P' p H1 H2 g a) = (term3397 A B P P' p H1 H2 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279217 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8279219 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279220 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3892 A B P P' p H1 H2 g a) = (term3398 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8279219 A B) (@lem8279218 A B P P' p H1 H2 g a)). Qed.
Lemma lem8279221 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279222 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3893 A B P P' p H1 H2 g a) = (term3880 A B P P' p H1 H2 g a).
Proof. exact (MK_COMB (@lem8279221) (@lem8279220 A B P P' p H1 H2 g a)). Qed.
Lemma lem8279223 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3894 A B P P' p H2 H1 g a f) = (term3862 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term3894 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8279224 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3895 A B P P' p H2 H1 g a) = (term3863 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279223 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279225 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279226 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3896 A B P P' p H2 H1 g a) = (term3864 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279225 A B) (@lem8279224 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279227 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3888 A B P P' p H2 H1 g a) = (term3882 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279222 A B P P' p H1 H2 g a) (@lem8279226 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279228 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279229 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3897 A B P P' p H2 H1 g a) = (term3898 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279228) (@lem8279227 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279230 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3890 A B P P' p H1 H2 g a f) = (term3396 A B P P' p H1 f H2 g a).
Proof. exact (eq_refl (term3890 A B P P' p H1 H2 g a f)). Qed.
Lemma lem8279231 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279232 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3899 A B P P' p H1 H2 g a f) = (term3900 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279231) (@lem8279230 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8279233 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3894 A B P P' p H2 H1 g a f) = (term3862 A B P P' p H2 f H1 g a).
Proof. exact (eq_refl (term3894 A B P P' p H2 H1 g a f)). Qed.
Lemma lem8279234 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3901 A B P P' p H2 H1 g a f) = (term3902 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279232 A B P P' p H1 f H2 g a) (@lem8279233 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279235 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3903 A B P P' p H2 H1 g a) = (term3904 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279234 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279236 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279237 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3889 A B P P' p H2 H1 g a) = (term3905 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279236 A B) (@lem8279235 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279238 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3888 A B P P' p H2 H1 g a) = (term3889 A B P P' p H2 H1 g a)) = ((term3882 A B P P' p H2 H1 g a) = (term3905 A B P P' p H2 H1 g a)).
Proof. exact (MK_COMB (@lem8279229 A B P P' p H2 H1 g a) (@lem8279237 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279239 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3882 A B P P' p H2 H1 g a) = (term3905 A B P P' p H2 H1 g a).
Proof. exact (EQ_MP (@lem8279238 A B P P' p H2 H1 g a) (@lem8279216 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279241 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279242 {A P : Type'} (P' : type805 A P) (Q : type805 A P) : (term3906 A P P' Q) = (term3907 A P P' Q).
Proof. exact (@lem8279241 (P -> A) P' Q). Qed.
Lemma lem8279243 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3908 A B P P' p H2 f H1 g a) = (term3909 A B P P' p H2 f H1 g a).
Proof. exact (@lem8279242 A P (term3395 A B P P' p H1 f H2 g a) (term3861 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279244 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3910 A B P P' p H1 f H2 g a s) = (term3394 A B P P' p s H1 f H2 g a).
Proof. exact (eq_refl (term3910 A B P P' p H1 f H2 g a s)). Qed.
Lemma lem8279245 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3911 A B P P' p H1 f H2 g a) = (term3395 A B P P' p H1 f H2 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279244 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8279246 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279247 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3912 A B P P' p H1 f H2 g a) = (term3396 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279246 A P) (@lem8279245 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8279248 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279249 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3913 A B P P' p H1 f H2 g a) = (term3900 A B P P' p H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279248) (@lem8279247 A B P P' p H1 f H2 g a)). Qed.
Lemma lem8279250 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3914 A B P P' p H2 f H1 g a s) = (term3860 A B P P' p s H2 f H1 g a).
Proof. exact (eq_refl (term3914 A B P P' p H2 f H1 g a s)). Qed.
Lemma lem8279251 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3915 A B P P' p H2 f H1 g a) = (term3861 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279250 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279252 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279253 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3916 A B P P' p H2 f H1 g a) = (term3862 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279252 A P) (@lem8279251 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279254 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3908 A B P P' p H2 f H1 g a) = (term3902 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279249 A B P P' p H1 f H2 g a) (@lem8279253 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279255 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279256 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3917 A B P P' p H2 f H1 g a) = (term3918 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279255) (@lem8279254 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279257 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3910 A B P P' p H1 f H2 g a s) = (term3394 A B P P' p s H1 f H2 g a).
Proof. exact (eq_refl (term3910 A B P P' p H1 f H2 g a s)). Qed.
Lemma lem8279258 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279259 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3919 A B P P' p H1 f H2 g a s) = (term3920 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279258) (@lem8279257 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8279260 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3914 A B P P' p H2 f H1 g a s) = (term3860 A B P P' p s H2 f H1 g a).
Proof. exact (eq_refl (term3914 A B P P' p H2 f H1 g a s)). Qed.
Lemma lem8279261 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3921 A B P P' p H2 f H1 g a s) = (term3922 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279259 A B P P' p s H1 f H2 g a) (@lem8279260 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279262 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3923 A B P P' p H2 f H1 g a) = (term3924 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279261 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279263 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279264 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3909 A B P P' p H2 f H1 g a) = (term3925 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279263 A P) (@lem8279262 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279265 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3908 A B P P' p H2 f H1 g a) = (term3909 A B P P' p H2 f H1 g a)) = ((term3902 A B P P' p H2 f H1 g a) = (term3925 A B P P' p H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8279256 A B P P' p H2 f H1 g a) (@lem8279264 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279266 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3902 A B P P' p H2 f H1 g a) = (term3925 A B P P' p H2 f H1 g a).
Proof. exact (EQ_MP (@lem8279265 A B P P' p H2 f H1 g a) (@lem8279243 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279268 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279269 {A : Type'} (P : type421 A) (Q : type421 A) : (term3926 A P Q) = (term3927 A P Q).
Proof. exact (@lem8279268 (type1402 A) P Q). Qed.
Lemma lem8279270 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3928 A B P P' p s H2 f H1 g a) = (term3929 A B P P' p s H2 f H1 g a).
Proof. exact (@lem8279269 A (term3393 A B P P' p s H1 f H2 g a) (term3859 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279271 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3930 A B P P' p s H1 f H2 g a lt2) = (term3392 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3930 A B P P' p s H1 f H2 g a lt2)). Qed.
Lemma lem8279272 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3931 A B P P' p s H1 f H2 g a) = (term3393 A B P P' p s H1 f H2 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279271 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8279273 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279274 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3932 A B P P' p s H1 f H2 g a) = (term3394 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279273 A) (@lem8279272 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8279275 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279276 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3933 A B P P' p s H1 f H2 g a) = (term3920 A B P P' p s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279275) (@lem8279274 A B P P' p s H1 f H2 g a)). Qed.
Lemma lem8279277 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3934 A B P P' p s H2 f H1 g a lt2) = (term3858 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3934 A B P P' p s H2 f H1 g a lt2)). Qed.
Lemma lem8279278 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3935 A B P P' p s H2 f H1 g a) = (term3859 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279277 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279279 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279280 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3936 A B P P' p s H2 f H1 g a) = (term3860 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279279 A) (@lem8279278 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279281 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3928 A B P P' p s H2 f H1 g a) = (term3922 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279276 A B P P' p s H1 f H2 g a) (@lem8279280 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279282 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279283 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3937 A B P P' p s H2 f H1 g a) = (term3938 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279282) (@lem8279281 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279284 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3930 A B P P' p s H1 f H2 g a lt2) = (term3392 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (eq_refl (term3930 A B P P' p s H1 f H2 g a lt2)). Qed.
Lemma lem8279285 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279286 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3939 A B P P' p s H1 f H2 g a lt2) = (term3940 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279285) (@lem8279284 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8279287 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3934 A B P P' p s H2 f H1 g a lt2) = (term3858 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (eq_refl (term3934 A B P P' p s H2 f H1 g a lt2)). Qed.
Lemma lem8279288 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3941 A B P P' p s H2 f H1 g a lt2) = (term3942 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279286 A B P P' p lt2 s H1 f H2 g a) (@lem8279287 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279289 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3943 A B P P' p s H2 f H1 g a) = (term3944 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279288 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279290 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279291 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3929 A B P P' p s H2 f H1 g a) = (term3945 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279290 A) (@lem8279289 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279292 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3928 A B P P' p s H2 f H1 g a) = (term3929 A B P P' p s H2 f H1 g a)) = ((term3922 A B P P' p s H2 f H1 g a) = (term3945 A B P P' p s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8279283 A B P P' p s H2 f H1 g a) (@lem8279291 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279293 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3922 A B P P' p s H2 f H1 g a) = (term3945 A B P P' p s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8279292 A B P P' p s H2 f H1 g a) (@lem8279270 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279295 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279296 {A B P : Type'} (P' : type113 A B P) (Q : type113 A B P) : (term3946 A B P P' Q) = (term3947 A B P P' Q).
Proof. exact (@lem8279295 (type557 A B P) P' Q). Qed.
Lemma lem8279297 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3948 A B P P' p lt2 s H2 f H1 g a) = (term3949 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (@lem8279296 A B P (term3391 A B P P' p lt2 s H1 f H2 g a) (term3857 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279298 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3950 A B P P' p lt2 s H1 f H2 g a G1) = (term3390 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3950 A B P P' p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8279299 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3951 A B P P' p lt2 s H1 f H2 g a) = (term3391 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279298 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8279300 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279301 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3952 A B P P' p lt2 s H1 f H2 g a) = (term3392 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279300 A B P) (@lem8279299 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8279302 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279303 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3953 A B P P' p lt2 s H1 f H2 g a) = (term3940 A B P P' p lt2 s H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279302) (@lem8279301 A B P P' p lt2 s H1 f H2 g a)). Qed.
Lemma lem8279304 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3954 A B P P' p lt2 s H2 f H1 g a G1) = (term3856 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3954 A B P P' p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8279305 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3955 A B P P' p lt2 s H2 f H1 g a) = (term3857 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279304 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279306 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279307 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3956 A B P P' p lt2 s H2 f H1 g a) = (term3858 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279306 A B P) (@lem8279305 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279308 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3948 A B P P' p lt2 s H2 f H1 g a) = (term3942 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279303 A B P P' p lt2 s H1 f H2 g a) (@lem8279307 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279309 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279310 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3957 A B P P' p lt2 s H2 f H1 g a) = (term3958 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279309) (@lem8279308 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279311 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3950 A B P P' p lt2 s H1 f H2 g a G1) = (term3390 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (eq_refl (term3950 A B P P' p lt2 s H1 f H2 g a G1)). Qed.
Lemma lem8279312 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279313 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3959 A B P P' p lt2 s H1 f H2 g a G1) = (term3960 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279312) (@lem8279311 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8279314 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3954 A B P P' p lt2 s H2 f H1 g a G1) = (term3856 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (eq_refl (term3954 A B P P' p lt2 s H2 f H1 g a G1)). Qed.
Lemma lem8279315 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3961 A B P P' p lt2 s H2 f H1 g a G1) = (term3962 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279313 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8279314 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279316 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3963 A B P P' p lt2 s H2 f H1 g a) = (term3964 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279315 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279317 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279318 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3949 A B P P' p lt2 s H2 f H1 g a) = (term3965 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279317 A B P) (@lem8279316 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279319 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3948 A B P P' p lt2 s H2 f H1 g a) = (term3949 A B P P' p lt2 s H2 f H1 g a)) = ((term3942 A B P P' p lt2 s H2 f H1 g a) = (term3965 A B P P' p lt2 s H2 f H1 g a)).
Proof. exact (MK_COMB (@lem8279310 A B P P' p lt2 s H2 f H1 g a) (@lem8279318 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279320 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3942 A B P P' p lt2 s H2 f H1 g a) = (term3965 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (EQ_MP (@lem8279319 A B P P' p lt2 s H2 f H1 g a) (@lem8279297 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279322 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279323 {A B P : Type'} (P' : type113 A B P) (Q : type113 A B P) : (term3946 A B P P' Q) = (term3947 A B P P' Q).
Proof. exact (@lem8279322 (type557 A B P) P' Q). Qed.
Lemma lem8279324 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3966 A B P P' p lt2 s H2 G1 f H1 g a) = (term3967 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (@lem8279323 A B P (term3389 A B P P' p lt2 s G1 H1 f H2 g a) (term3855 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279325 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3968 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3388 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3968 A B P P' p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8279326 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3969 A B P P' p lt2 s G1 H1 f H2 g a) = (term3389 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279325 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279327 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279328 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3970 A B P P' p lt2 s G1 H1 f H2 g a) = (term3390 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279327 A B P) (@lem8279326 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8279329 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279330 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3971 A B P P' p lt2 s G1 H1 f H2 g a) = (term3960 A B P P' p lt2 s G1 H1 f H2 g a).
Proof. exact (MK_COMB (@lem8279329) (@lem8279328 A B P P' p lt2 s G1 H1 f H2 g a)). Qed.
Lemma lem8279331 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3972 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3854 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3972 A B P P' p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8279332 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3973 A B P P' p lt2 s H2 G1 f H1 g a) = (term3855 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279331 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279333 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279334 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3974 A B P P' p lt2 s H2 G1 f H1 g a) = (term3856 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279333 A B P) (@lem8279332 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279335 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3966 A B P P' p lt2 s H2 G1 f H1 g a) = (term3962 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279330 A B P P' p lt2 s G1 H1 f H2 g a) (@lem8279334 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279336 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279337 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3975 A B P P' p lt2 s H2 G1 f H1 g a) = (term3976 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279336) (@lem8279335 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279338 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3968 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3388 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3968 A B P P' p lt2 s G1 H1 f H2 g a G2)). Qed.
Lemma lem8279339 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279340 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3977 A B P P' p lt2 s G1 H1 f H2 g a G2) = (term3978 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279339) (@lem8279338 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279341 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3972 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3854 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (eq_refl (term3972 A B P P' p lt2 s H2 G1 f H1 g a G2)). Qed.
Lemma lem8279342 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3979 A B P P' p lt2 s H2 G1 f H1 g a G2) = (term3980 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279340 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8279341 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279343 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3981 A B P P' p lt2 s H2 G1 f H1 g a) = (term3982 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279342 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279344 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279345 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3967 A B P P' p lt2 s H2 G1 f H1 g a) = (term3983 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279344 A B P) (@lem8279343 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279346 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3966 A B P P' p lt2 s H2 G1 f H1 g a) = (term3967 A B P P' p lt2 s H2 G1 f H1 g a)) = ((term3962 A B P P' p lt2 s H2 G1 f H1 g a) = (term3983 A B P P' p lt2 s H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8279337 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8279345 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279347 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3962 A B P P' p lt2 s H2 G1 f H1 g a) = (term3983 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8279346 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8279324 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279349 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279350 {A B P : Type'} (P' : type117 A B P) (Q : type117 A B P) : (term2874 A B P P' Q) = (term2873 A B P P' Q).
Proof. exact (@lem8279349 (type560 A B P) P' Q). Qed.
Lemma lem8279351 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3984 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3985 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (@lem8279350 A B P (term3387 A B P P' p lt2 s G1 H1 G2 f H2 g a) (term3853 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279352 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3986 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3386 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3986 A B P P' p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8279353 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3987 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3387 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279352 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279354 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279355 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3988 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3388 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279354 A B P) (@lem8279353 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279356 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279357 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3989 A B P P' p lt2 s G1 H1 G2 f H2 g a) = (term3978 A B P P' p lt2 s G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279356) (@lem8279355 A B P P' p lt2 s G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279358 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3990 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3852 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3990 A B P P' p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8279359 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3991 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3853 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279358 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279360 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279361 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3992 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3854 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279360 A B P) (@lem8279359 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279362 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3984 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3980 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279357 A B P P' p lt2 s G1 H1 G2 f H2 g a) (@lem8279361 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279363 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279364 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3993 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3994 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279363) (@lem8279362 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279365 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3986 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3386 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (eq_refl (term3986 A B P P' p lt2 s G1 H1 G2 f H2 g a P1)). Qed.
Lemma lem8279366 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279367 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3995 A B P P' p lt2 s G1 H1 G2 f H2 g a P1) = (term3996 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279366) (@lem8279365 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279368 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3990 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3852 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term3990 A B P P' p lt2 s G2 H2 G1 f H1 g a P1)). Qed.
Lemma lem8279369 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3997 A B P P' p lt2 s G2 H2 G1 f H1 g a P1) = (term3998 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279367 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8279368 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279370 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3999 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4000 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279369 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279371 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279372 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3985 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4001 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279371 A B P) (@lem8279370 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279373 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term3984 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term3985 A B P P' p lt2 s G2 H2 G1 f H1 g a)) = ((term3980 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4001 A B P P' p lt2 s G2 H2 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8279364 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8279372 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279374 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3980 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4001 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8279373 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8279351 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279376 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1606 A P Q) = (term1607 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8279377 {A B P : Type'} (P' : type117 A B P) (Q : type117 A B P) : (term2874 A B P P' Q) = (term2873 A B P P' Q).
Proof. exact (@lem8279376 (type560 A B P) P' Q). Qed.
Lemma lem8279378 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4002 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4003 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (@lem8279377 A B P (term3385 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (term3851 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279379 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4004 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3383 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term4004 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8279380 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4005 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3385 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8279379 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279381 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279382 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4006 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3386 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279381 A B P) (@lem8279380 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279383 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279384 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4007 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) = (term3996 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279383) (@lem8279382 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a)). Qed.
Lemma lem8279385 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4008 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3849 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term4008 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8279386 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4009 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3851 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8279385 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279387 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279388 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4010 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3852 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279387 A B P) (@lem8279386 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279389 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4002 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term3998 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279384 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a) (@lem8279388 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279390 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8279391 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4011 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4012 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279390) (@lem8279389 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279392 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4004 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term3383 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term4004 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2)). Qed.
Lemma lem8279393 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279394 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4013 A B P P' p lt2 s P1 G1 H1 G2 f H2 g a P2) = (term4014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279393) (@lem8279392 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279395 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4008 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term3849 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term4008 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2)). Qed.
Lemma lem8279396 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4015 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2) = (term4016 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279394 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (@lem8279395 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279397 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4017 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4018 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8279396 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279398 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279399 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4003 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4019 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279398 A B P) (@lem8279397 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279400 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : ((term4002 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4003 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)) = ((term3998 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4019 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)).
Proof. exact (MK_COMB (@lem8279391 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8279399 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279401 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3998 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) = (term4019 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a).
Proof. exact (EQ_MP (@lem8279400 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) (@lem8279378 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279402 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4000 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4020 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8279401 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279403 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279404 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4001 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4021 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279403 A B P) (@lem8279402 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279405 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3980 A B P P' p lt2 s G2 H2 G1 f H1 g a) = (term4021 A B P P' p lt2 s G2 H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8279374 A B P P' p lt2 s G2 H2 G1 f H1 g a) (@lem8279404 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279406 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3982 A B P P' p lt2 s H2 G1 f H1 g a) = (term4022 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8279405 A B P P' p lt2 s G2 H2 G1 f H1 g a)). Qed.
Lemma lem8279407 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279408 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3983 A B P P' p lt2 s H2 G1 f H1 g a) = (term4023 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279407 A B P) (@lem8279406 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279409 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3962 A B P P' p lt2 s H2 G1 f H1 g a) = (term4023 A B P P' p lt2 s H2 G1 f H1 g a).
Proof. exact (TRANS (@lem8279347 A B P P' p lt2 s H2 G1 f H1 g a) (@lem8279408 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279410 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3964 A B P P' p lt2 s H2 f H1 g a) = (term4024 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8279409 A B P P' p lt2 s H2 G1 f H1 g a)). Qed.
Lemma lem8279411 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8279412 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3965 A B P P' p lt2 s H2 f H1 g a) = (term4025 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279411 A B P) (@lem8279410 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279413 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3942 A B P P' p lt2 s H2 f H1 g a) = (term4025 A B P P' p lt2 s H2 f H1 g a).
Proof. exact (TRANS (@lem8279320 A B P P' p lt2 s H2 f H1 g a) (@lem8279412 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279414 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3944 A B P P' p s H2 f H1 g a) = (term4026 A B P P' p s H2 f H1 g a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8279413 A B P P' p lt2 s H2 f H1 g a)). Qed.
Lemma lem8279415 {A : Type'} : (@ex (A -> A -> Prop)) = (@ex (A -> A -> Prop)).
Proof. exact (eq_refl (@ex (A -> A -> Prop))). Qed.
Lemma lem8279416 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3945 A B P P' p s H2 f H1 g a) = (term4027 A B P P' p s H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279415 A) (@lem8279414 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279417 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3922 A B P P' p s H2 f H1 g a) = (term4027 A B P P' p s H2 f H1 g a).
Proof. exact (TRANS (@lem8279293 A B P P' p s H2 f H1 g a) (@lem8279416 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279418 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3924 A B P P' p H2 f H1 g a) = (term4028 A B P P' p H2 f H1 g a).
Proof. exact (fun_ext (fun s : P -> A => @lem8279417 A B P P' p s H2 f H1 g a)). Qed.
Lemma lem8279419 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8279420 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3925 A B P P' p H2 f H1 g a) = (term4029 A B P P' p H2 f H1 g a).
Proof. exact (MK_COMB (@lem8279419 A P) (@lem8279418 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279421 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3902 A B P P' p H2 f H1 g a) = (term4029 A B P P' p H2 f H1 g a).
Proof. exact (TRANS (@lem8279266 A B P P' p H2 f H1 g a) (@lem8279420 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279422 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3904 A B P P' p H2 H1 g a) = (term4030 A B P P' p H2 H1 g a).
Proof. exact (fun_ext (fun f : A -> B => @lem8279421 A B P P' p H2 f H1 g a)). Qed.
Lemma lem8279423 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8279424 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3905 A B P P' p H2 H1 g a) = (term4031 A B P P' p H2 H1 g a).
Proof. exact (MK_COMB (@lem8279423 A B) (@lem8279422 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279425 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3882 A B P P' p H2 H1 g a) = (term4031 A B P P' p H2 H1 g a).
Proof. exact (TRANS (@lem8279239 A B P P' p H2 H1 g a) (@lem8279424 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279426 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3884 A B P P' H2 H1 g a) = (term4032 A B P P' H2 H1 g a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8279425 A B P P' p H2 H1 g a)). Qed.
Lemma lem8279427 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8279428 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3885 A B P P' H2 H1 g a) = (term4033 A B P P' H2 H1 g a).
Proof. exact (MK_COMB (@lem8279427 A B P) (@lem8279426 A B P P' H2 H1 g a)). Qed.
Lemma lem8279429 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3867 A B P P' H2 H1 g a) = (term4033 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8279212 A B P P' H2 H1 g a) (@lem8279428 A B P P' H2 H1 g a)). Qed.
Lemma lem8279430 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2953 A B P P' H2 H1 g a) = (term4033 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8279185 A B P P' H2 H1 g a) (@lem8279429 A B P P' H2 H1 g a)). Qed.
Lemma lem8279431 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2691 A B P P' H2 H1 g a) = (term4033 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8277466 A B P P' H2 H1 g a) (@lem8279430 A B P P' H2 H1 g a)). Qed.
Lemma lem8279432 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2511 A B P P' H2 H1 g a) = (term4033 A B P P' H2 H1 g a).
Proof. exact (TRANS (@lem8275064 A B P P' H2 H1 g a) (@lem8279431 A B P P' H2 H1 g a)). Qed.
Lemma lem8279433 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2511 A B P P' H2 H1 g a) : term4033 A B P P' H2 H1 g a.
Proof. exact (EQ_MP (@lem8279432 A B P P' H2 H1 g a) (@lem8274647 A B P P' H2 H1 g a h1)). Qed.
Lemma lem8279434 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4031 A B P P' p H2 H1 g a) : term4031 A B P P' p H2 H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279435 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4029 A B P P' p H2 f H1 g a) : term4029 A B P P' p H2 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279436 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4027 A B P P' p s H2 f H1 g a) : term4027 A B P P' p s H2 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279437 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4025 A B P P' p lt2 s H2 f H1 g a) : term4025 A B P P' p lt2 s H2 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279438 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4023 A B P P' p lt2 s H2 G1 f H1 g a) : term4023 A B P P' p lt2 s H2 G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279439 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4021 A B P P' p lt2 s G2 H2 G1 f H1 g a) : term4021 A B P P' p lt2 s G2 H2 G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279440 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4019 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) : term4019 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279441 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4016 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4016 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8279646 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2615 A B P P2 G2 H2 P1 G1 f H1 g a) = (term2615 A B P P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (eq_refl (term2615 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279647 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8279652 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8279653 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8279652 A B f x). Qed.
Lemma lem8279655 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8279653 A B f z). Qed.
Lemma lem8279660 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8279661 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8279660 A B f x). Qed.
Lemma lem8279663 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8279661 A B g z). Qed.
Lemma lem8279664 {A B : Type'} (f : A -> B) (z : A) : (term602 A B f z) = (term603 A B f z).
Proof. exact (MK_COMB (@lem8279647 B) (@lem8279655 A B f z)). Qed.
Lemma lem8279665 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8279664 A B f z) (@lem8279663 A B g z)). Qed.
Lemma lem8279676 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term609 A P lt2 z s a) = (term609 A P lt2 z s a).
Proof. exact (eq_refl (term609 A P lt2 z s a)). Qed.
Lemma lem8279677 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term584 A B P lt2 s a f g z) = (term4034 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8279676 A P lt2 z s a) (@lem8279665 A B f g z)). Qed.
Lemma lem8279678 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term585 A B P lt2 s a f g) = (term4035 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8279677 A B P lt2 s a f g z)). Qed.
Lemma lem8279679 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8279680 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term586 A B P lt2 s a f g) = (term4036 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8279679 A) (@lem8279678 A B P lt2 s a f g)). Qed.
Lemma lem8279681 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8279682 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term4037 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8279681) (@lem8279680 A B P lt2 s a f g)). Qed.
Lemma lem8279683 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term2618 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term4038 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279682 A B P lt2 s a f g) (@lem8279646 A B P P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279690 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8279691 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3558 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term4039 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279690 A B P p f a) (@lem8279683 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279700 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1559 A B P P' f a) = (term1559 A B P P' f a).
Proof. exact (eq_refl (term1559 A B P P' f a)). Qed.
Lemma lem8279701 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3641 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term4040 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279700 A B P P' f a) (@lem8279691 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279708 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8279709 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3738 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term4041 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279708 A B P p g a) (@lem8279701 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279718 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term1559 A B P P' g a) = (term1559 A B P P' g a).
Proof. exact (eq_refl (term1559 A B P P' g a)). Qed.
Lemma lem8279719 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term3849 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279718 A B P P' g a) (@lem8279709 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279924 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2529 A B P P1 G1 H1 P2 G2 f H2 g a) = (term2529 A B P P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (eq_refl (term2529 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279925 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8279930 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8279931 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8279930 A B f x). Qed.
Lemma lem8279933 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8279931 A B f z). Qed.
Lemma lem8279938 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8279939 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8279938 A B f x). Qed.
Lemma lem8279941 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8279939 A B g z). Qed.
Lemma lem8279942 {A B : Type'} (f : A -> B) (z : A) : (term602 A B f z) = (term603 A B f z).
Proof. exact (MK_COMB (@lem8279925 B) (@lem8279933 A B f z)). Qed.
Lemma lem8279943 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8279942 A B f z) (@lem8279941 A B g z)). Qed.
Lemma lem8279954 {A P : Type'} (lt2 : type1402 A) (z : A) (s : P -> A) (a : P) : (term609 A P lt2 z s a) = (term609 A P lt2 z s a).
Proof. exact (eq_refl (term609 A P lt2 z s a)). Qed.
Lemma lem8279955 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term584 A B P lt2 s a f g z) = (term4034 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8279954 A P lt2 z s a) (@lem8279943 A B f g z)). Qed.
Lemma lem8279956 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term585 A B P lt2 s a f g) = (term4035 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8279955 A B P lt2 s a f g z)). Qed.
Lemma lem8279957 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8279958 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term586 A B P lt2 s a f g) = (term4036 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8279957 A) (@lem8279956 A B P lt2 s a f g)). Qed.
Lemma lem8279959 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8279960 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2532 A B P lt2 s a f g) = (term4037 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8279959) (@lem8279958 A B P lt2 s a f g)). Qed.
Lemma lem8279961 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2534 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term4043 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279960 A B P lt2 s a f g) (@lem8279924 A B P P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279968 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term327 A B P p f a) = (term327 A B P p f a).
Proof. exact (eq_refl (term327 A B P p f a)). Qed.
Lemma lem8279969 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3090 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term4044 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279968 A B P p f a) (@lem8279961 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279976 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term327 A B P P' f a) = (term327 A B P P' f a).
Proof. exact (eq_refl (term327 A B P P' f a)). Qed.
Lemma lem8279977 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3173 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term4045 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279976 A B P P' f a) (@lem8279969 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279984 {A B P : Type'} (p : type560 A B P) (g : A -> B) (a : P) : (term327 A B P p g a) = (term327 A B P p g a).
Proof. exact (eq_refl (term327 A B P p g a)). Qed.
Lemma lem8279985 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3272 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term4046 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279984 A B P p g a) (@lem8279977 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279992 {A B P : Type'} (P' : type560 A B P) (g : A -> B) (a : P) : (term327 A B P P' g a) = (term327 A B P P' g a).
Proof. exact (eq_refl (term327 A B P P' g a)). Qed.
Lemma lem8279993 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3383 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279992 A B P P' g a) (@lem8279985 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279994 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8279995 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) = (term4048 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8279994) (@lem8279993 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a)). Qed.
Lemma lem8279996 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4016 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) = (term4049 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a).
Proof. exact (MK_COMB (@lem8279995 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (@lem8279719 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a)). Qed.
Lemma lem8279997 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4016 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4049 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (EQ_MP (@lem8279996 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (@lem8279441 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8279998 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8279999 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8280000 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4046 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8279998 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280002 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4045 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280000 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280004 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4044 A B P p lt2 s P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280002 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280006 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4043 A B P lt2 s P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280004 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280008 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2529 A B P P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280006 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280010 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2524 A B P P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280008 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280011 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2516 A B P P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj1 (@lem8280008 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280012 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2514 A B P P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280011 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280013 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2514 A B P P1 G1 f H1 g a.
Proof. exact (proj1 (@lem8280011 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280014 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2330 A B P G2 f H2 g a.
Proof. exact (proj2 (@lem8280012 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280015 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2512 A B P f P2 g a.
Proof. exact (proj1 (@lem8280012 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280019 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term2512 A B P f P1 g a.
Proof. exact (proj1 (@lem8280013 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8280026 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : term2019 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280027 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term2883 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280030 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P2 g a) : term2518 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280031 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G2 f H2 g a) : term2520 A B P G2 f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8280032 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4050 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280033 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4051 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280042 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P2 g a) : term2518 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280043 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G2 f H2 g a) : term2520 A B P G2 f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8280044 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4050 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280045 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4051 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280054 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : term2019 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280055 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term2883 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280058 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P2 g a) : term2518 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280059 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G2 f H2 g a) : term2520 A B P G2 f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8280060 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4050 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280061 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4051 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280070 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P2 g a) : term2518 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280071 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G2 f H2 g a) : term2520 A B P G2 f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8280072 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4050 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280073 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4051 A B P f P2 g a.
Proof. exact (h1). Qed.
Lemma lem8280080 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4041 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (proj2 (@lem8279999 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280082 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4040 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (proj2 (@lem8280080 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280084 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4039 A B P p lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (proj2 (@lem8280082 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280086 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4038 A B P lt2 s P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (proj2 (@lem8280084 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280088 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2615 A B P P2 G2 H2 P1 G1 f H1 g a.
Proof. exact (proj2 (@lem8280086 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280090 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2524 A B P P1 G1 f H1 g a.
Proof. exact (proj2 (@lem8280088 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280091 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2516 A B P P1 G1 H1 P2 G2 f H2 g a.
Proof. exact (proj1 (@lem8280088 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280092 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2514 A B P P2 G2 f H2 g a.
Proof. exact (proj2 (@lem8280091 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280093 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2514 A B P P1 G1 f H1 g a.
Proof. exact (proj1 (@lem8280091 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280095 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2512 A B P f P2 g a.
Proof. exact (proj1 (@lem8280092 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280098 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2330 A B P G1 f H1 g a.
Proof. exact (proj2 (@lem8280093 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280099 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term2512 A B P f P1 g a.
Proof. exact (proj1 (@lem8280093 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8280102 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : term2019 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280103 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term2883 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280110 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P1 g a) : term2518 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280111 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G1 f H1 g a) : term2520 A B P G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8280112 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4050 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280113 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4051 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280122 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P1 g a) : term2518 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280123 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G1 f H1 g a) : term2520 A B P G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8280124 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4050 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280125 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4051 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280138 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P1 g a) : term2518 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280139 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G1 f H1 g a) : term2520 A B P G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8280140 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4050 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280141 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4051 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280150 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2518 A B P f P1 g a) : term2518 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280151 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2520 A B P G1 f H1 g a) : term2520 A B P G1 f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8280152 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4050 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280153 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4051 A B P f P1 g a.
Proof. exact (h1). Qed.
Lemma lem8280362 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8280427 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8280630 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8280695 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8280898 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8280963 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8281166 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8281231 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8281434 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8281499 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8281702 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8281767 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8281970 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8282035 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8282238 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8282303 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8282433 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term373 A B P P2 g a.
Proof. exact (proj2 (@lem8280032 A B P f P2 g a h1)). Qed.
Lemma lem8282465 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term373 A B P P2 f a.
Proof. exact (proj1 (@lem8280033 A B P f P2 g a h1)). Qed.
Lemma lem8282499 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8282531 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8282559 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term373 A B P P2 f a.
Proof. exact (proj1 (@lem8280027 A B P f P2 g a h1)). Qed.
Lemma lem8282595 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term373 A B P P2 g a.
Proof. exact (proj2 (@lem8280027 A B P f P2 g a h1)). Qed.
Lemma lem8282631 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8282663 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8282697 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term373 A B P P2 g a.
Proof. exact (proj2 (@lem8280060 A B P f P2 g a h1)). Qed.
Lemma lem8282729 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term373 A B P P2 f a.
Proof. exact (proj1 (@lem8280061 A B P f P2 g a h1)). Qed.
Lemma lem8282763 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8282795 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8282823 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term373 A B P P2 f a.
Proof. exact (proj1 (@lem8280055 A B P f P2 g a h1)). Qed.
Lemma lem8282859 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term373 A B P P2 g a.
Proof. exact (proj2 (@lem8280055 A B P f P2 g a h1)). Qed.
Lemma lem8282895 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4052 A B P f G2 g a.
Proof. exact (h1). Qed.
Lemma lem8282927 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4053 A B P f H2 g a.
Proof. exact (h1). Qed.
Lemma lem8282961 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term373 A B P P1 g a.
Proof. exact (proj2 (@lem8280112 A B P f P1 g a h1)). Qed.
Lemma lem8282993 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term373 A B P P1 f a.
Proof. exact (proj1 (@lem8280113 A B P f P1 g a h1)). Qed.
Lemma lem8283027 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8283059 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8283093 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term373 A B P P1 g a.
Proof. exact (proj2 (@lem8280124 A B P f P1 g a h1)). Qed.
Lemma lem8283125 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term373 A B P P1 f a.
Proof. exact (proj1 (@lem8280125 A B P f P1 g a h1)). Qed.
Lemma lem8283159 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8283191 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8283215 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term373 A B P P1 f a.
Proof. exact (proj1 (@lem8280103 A B P f P1 g a h1)). Qed.
Lemma lem8283251 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term373 A B P P1 g a.
Proof. exact (proj2 (@lem8280103 A B P f P1 g a h1)). Qed.
Lemma lem8283291 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8283323 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8283347 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term373 A B P P1 f a.
Proof. exact (proj1 (@lem8280103 A B P f P1 g a h1)). Qed.
Lemma lem8283383 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term373 A B P P1 g a.
Proof. exact (proj2 (@lem8280103 A B P f P1 g a h1)). Qed.
Lemma lem8283423 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4052 A B P f G1 g a.
Proof. exact (h1). Qed.
Lemma lem8283455 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4053 A B P f H1 g a.
Proof. exact (h1). Qed.
Lemma lem8283643 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 g a.
Proof. exact (proj2 (@lem8280026 A B P f P2 g a h1)). Qed.
Lemma lem8283644 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : term4054 A B P P2 g a.
Proof. exact (fun h0 : term373 A B P P2 g a => @lem8283643 A B P f P2 g a h1). Qed.
Lemma lem8283646 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8283647 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P2 g a) = (P2 g a).
Proof. exact (@lem8283646 (P2 g a)). Qed.
Lemma lem8283648 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 g a.
Proof. exact (EQ_MP (@lem8283647 A B P P2 g a) (@lem8283644 A B P f P2 g a h1)). Qed.
Lemma lem8283651 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8283653 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P2 g a) = (term4055 A B P P2 g a).
Proof. exact (@lem8283651 (P2 g a)). Qed.
Lemma lem8283656 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4055 A B P P2 g a.
Proof. exact (EQ_MP (@lem8283653 A B P P2 g a) (@lem8282433 A B P f P2 g a h1)). Qed.
Lemma lem8283659 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (@lem8283656 A B P f P2 g a h1 (@lem8283648 A B P f P2 g a h2)). Qed.
Lemma lem8283660 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8283659 A B P f P2 g a h1 h2). Qed.
Lemma lem8283662 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8283663 : term802 = False.
Proof. exact (@lem8283662 False). Qed.
Lemma lem8283664 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8283663) (@lem8283660 A B P f P2 g a h1 h2)). Qed.
Lemma lem8283852 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 f a.
Proof. exact (proj1 (@lem8280026 A B P f P2 g a h1)). Qed.
Lemma lem8283853 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : term4054 A B P P2 f a.
Proof. exact (fun h0 : term373 A B P P2 f a => @lem8283852 A B P f P2 g a h1). Qed.
Lemma lem8283855 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8283856 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P2 f a) = (P2 f a).
Proof. exact (@lem8283855 (P2 f a)). Qed.
Lemma lem8283857 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 f a.
Proof. exact (EQ_MP (@lem8283856 A B P P2 f a) (@lem8283853 A B P f P2 g a h1)). Qed.
Lemma lem8283860 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8283862 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P2 f a) = (term4055 A B P P2 f a).
Proof. exact (@lem8283860 (P2 f a)). Qed.
Lemma lem8283865 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4055 A B P P2 f a.
Proof. exact (EQ_MP (@lem8283862 A B P P2 f a) (@lem8282465 A B P f P2 g a h1)). Qed.
Lemma lem8283868 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (@lem8283865 A B P f P2 g a h1 (@lem8283857 A B P f P2 g a h2)). Qed.
Lemma lem8283869 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8283868 A B P f P2 g a h1 h2). Qed.
Lemma lem8283871 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8283872 : term802 = False.
Proof. exact (@lem8283871 False). Qed.
Lemma lem8283873 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8283872) (@lem8283869 A B P f P2 g a h1 h2)). Qed.
Lemma lem8284061 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (proj1 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8284062 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4056 A B P f G2 g a.
Proof. exact (fun h0 : term4052 A B P f G2 g a => @lem8284061 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8284064 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284065 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G2 g a) = ((G2 f a) = (G2 g a)).
Proof. exact (@lem8284064 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8284066 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (EQ_MP (@lem8284065 A B P f G2 g a) (@lem8284062 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8284069 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8284071 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G2 g a) = (term4057 A B P f G2 g a).
Proof. exact (@lem8284069 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8284074 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4057 A B P f G2 g a.
Proof. exact (EQ_MP (@lem8284071 A B P f G2 g a) (@lem8282499 A B P f G2 g a h1)). Qed.
Lemma lem8284077 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8284074 A B P f G2 g a h1 (@lem8284066 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8284078 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8284077 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8284080 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284081 : term802 = False.
Proof. exact (@lem8284080 False). Qed.
Lemma lem8284082 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8284081) (@lem8284078 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8284270 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (proj2 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8284271 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4058 A B P f H2 g a.
Proof. exact (fun h0 : term4053 A B P f H2 g a => @lem8284270 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8284273 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284274 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H2 g a) = ((H2 f a) = (H2 g a)).
Proof. exact (@lem8284273 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8284275 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (EQ_MP (@lem8284274 A B P f H2 g a) (@lem8284271 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8284278 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8284280 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H2 g a) = (term4059 A B P f H2 g a).
Proof. exact (@lem8284278 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8284283 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4059 A B P f H2 g a.
Proof. exact (EQ_MP (@lem8284280 A B P f H2 g a) (@lem8282531 A B P f H2 g a h1)). Qed.
Lemma lem8284286 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8284283 A B P f H2 g a h1 (@lem8284275 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8284287 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8284286 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8284289 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284290 : term802 = False.
Proof. exact (@lem8284289 False). Qed.
Lemma lem8284291 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8284290) (@lem8284287 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8284479 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : P2 f a.
Proof. exact (proj1 (@lem8280044 A B P f P2 g a h1)). Qed.
Lemma lem8284480 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4054 A B P P2 f a.
Proof. exact (fun h0 : term373 A B P P2 f a => @lem8284479 A B P f P2 g a h1). Qed.
Lemma lem8284482 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284483 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P2 f a) = (P2 f a).
Proof. exact (@lem8284482 (P2 f a)). Qed.
Lemma lem8284484 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : P2 f a.
Proof. exact (EQ_MP (@lem8284483 A B P P2 f a) (@lem8284480 A B P f P2 g a h1)). Qed.
Lemma lem8284487 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8284489 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P2 f a) = (term4055 A B P P2 f a).
Proof. exact (@lem8284487 (P2 f a)). Qed.
Lemma lem8284492 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term4055 A B P P2 f a.
Proof. exact (EQ_MP (@lem8284489 A B P P2 f a) (@lem8282559 A B P f P2 g a h1)). Qed.
Lemma lem8284495 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4050 A B P f P2 g a) : False.
Proof. exact (@lem8284492 A B P f P2 g a h1 (@lem8284484 A B P f P2 g a h2)). Qed.
Lemma lem8284496 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4050 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8284495 A B P f P2 g a h1 h2). Qed.
Lemma lem8284498 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284499 : term802 = False.
Proof. exact (@lem8284498 False). Qed.
Lemma lem8284500 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4050 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8284499) (@lem8284496 A B P f P2 g a h1 h2)). Qed.
Lemma lem8284688 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : P2 g a.
Proof. exact (proj2 (@lem8280045 A B P f P2 g a h1)). Qed.
Lemma lem8284689 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4054 A B P P2 g a.
Proof. exact (fun h0 : term373 A B P P2 g a => @lem8284688 A B P f P2 g a h1). Qed.
Lemma lem8284691 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284692 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P2 g a) = (P2 g a).
Proof. exact (@lem8284691 (P2 g a)). Qed.
Lemma lem8284693 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : P2 g a.
Proof. exact (EQ_MP (@lem8284692 A B P P2 g a) (@lem8284689 A B P f P2 g a h1)). Qed.
Lemma lem8284696 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8284698 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P2 g a) = (term4055 A B P P2 g a).
Proof. exact (@lem8284696 (P2 g a)). Qed.
Lemma lem8284701 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term4055 A B P P2 g a.
Proof. exact (EQ_MP (@lem8284698 A B P P2 g a) (@lem8282595 A B P f P2 g a h1)). Qed.
Lemma lem8284704 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4051 A B P f P2 g a) : False.
Proof. exact (@lem8284701 A B P f P2 g a h1 (@lem8284693 A B P f P2 g a h2)). Qed.
Lemma lem8284705 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4051 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8284704 A B P f P2 g a h1 h2). Qed.
Lemma lem8284707 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284708 : term802 = False.
Proof. exact (@lem8284707 False). Qed.
Lemma lem8284709 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4051 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8284708) (@lem8284705 A B P f P2 g a h1 h2)). Qed.
Lemma lem8284897 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (proj1 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8284898 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4056 A B P f G2 g a.
Proof. exact (fun h0 : term4052 A B P f G2 g a => @lem8284897 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8284900 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284901 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G2 g a) = ((G2 f a) = (G2 g a)).
Proof. exact (@lem8284900 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8284902 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (EQ_MP (@lem8284901 A B P f G2 g a) (@lem8284898 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8284905 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8284907 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G2 g a) = (term4057 A B P f G2 g a).
Proof. exact (@lem8284905 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8284910 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4057 A B P f G2 g a.
Proof. exact (EQ_MP (@lem8284907 A B P f G2 g a) (@lem8282631 A B P f G2 g a h1)). Qed.
Lemma lem8284913 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8284910 A B P f G2 g a h1 (@lem8284902 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8284914 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8284913 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8284916 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8284917 : term802 = False.
Proof. exact (@lem8284916 False). Qed.
Lemma lem8284918 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8284917) (@lem8284914 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8285106 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (proj2 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8285107 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4058 A B P f H2 g a.
Proof. exact (fun h0 : term4053 A B P f H2 g a => @lem8285106 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8285109 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285110 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H2 g a) = ((H2 f a) = (H2 g a)).
Proof. exact (@lem8285109 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8285111 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (EQ_MP (@lem8285110 A B P f H2 g a) (@lem8285107 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8285114 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8285116 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H2 g a) = (term4059 A B P f H2 g a).
Proof. exact (@lem8285114 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8285119 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4059 A B P f H2 g a.
Proof. exact (EQ_MP (@lem8285116 A B P f H2 g a) (@lem8282663 A B P f H2 g a h1)). Qed.
Lemma lem8285122 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8285119 A B P f H2 g a h1 (@lem8285111 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8285123 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8285122 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8285125 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285126 : term802 = False.
Proof. exact (@lem8285125 False). Qed.
Lemma lem8285127 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8285126) (@lem8285123 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8285315 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 g a.
Proof. exact (proj2 (@lem8280054 A B P f P2 g a h1)). Qed.
Lemma lem8285316 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : term4054 A B P P2 g a.
Proof. exact (fun h0 : term373 A B P P2 g a => @lem8285315 A B P f P2 g a h1). Qed.
Lemma lem8285318 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285319 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P2 g a) = (P2 g a).
Proof. exact (@lem8285318 (P2 g a)). Qed.
Lemma lem8285320 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 g a.
Proof. exact (EQ_MP (@lem8285319 A B P P2 g a) (@lem8285316 A B P f P2 g a h1)). Qed.
Lemma lem8285323 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8285325 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P2 g a) = (term4055 A B P P2 g a).
Proof. exact (@lem8285323 (P2 g a)). Qed.
Lemma lem8285328 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4055 A B P P2 g a.
Proof. exact (EQ_MP (@lem8285325 A B P P2 g a) (@lem8282697 A B P f P2 g a h1)). Qed.
Lemma lem8285331 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (@lem8285328 A B P f P2 g a h1 (@lem8285320 A B P f P2 g a h2)). Qed.
Lemma lem8285332 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8285331 A B P f P2 g a h1 h2). Qed.
Lemma lem8285334 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285335 : term802 = False.
Proof. exact (@lem8285334 False). Qed.
Lemma lem8285336 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8285335) (@lem8285332 A B P f P2 g a h1 h2)). Qed.
Lemma lem8285524 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 f a.
Proof. exact (proj1 (@lem8280054 A B P f P2 g a h1)). Qed.
Lemma lem8285525 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : term4054 A B P P2 f a.
Proof. exact (fun h0 : term373 A B P P2 f a => @lem8285524 A B P f P2 g a h1). Qed.
Lemma lem8285527 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285528 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P2 f a) = (P2 f a).
Proof. exact (@lem8285527 (P2 f a)). Qed.
Lemma lem8285529 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) : P2 f a.
Proof. exact (EQ_MP (@lem8285528 A B P P2 f a) (@lem8285525 A B P f P2 g a h1)). Qed.
Lemma lem8285532 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8285534 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P2 f a) = (term4055 A B P P2 f a).
Proof. exact (@lem8285532 (P2 f a)). Qed.
Lemma lem8285537 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4055 A B P P2 f a.
Proof. exact (EQ_MP (@lem8285534 A B P P2 f a) (@lem8282729 A B P f P2 g a h1)). Qed.
Lemma lem8285540 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (@lem8285537 A B P f P2 g a h1 (@lem8285529 A B P f P2 g a h2)). Qed.
Lemma lem8285541 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8285540 A B P f P2 g a h1 h2). Qed.
Lemma lem8285543 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285544 : term802 = False.
Proof. exact (@lem8285543 False). Qed.
Lemma lem8285545 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8285544) (@lem8285541 A B P f P2 g a h1 h2)). Qed.
Lemma lem8285733 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (proj1 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8285734 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4056 A B P f G2 g a.
Proof. exact (fun h0 : term4052 A B P f G2 g a => @lem8285733 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8285736 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285737 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G2 g a) = ((G2 f a) = (G2 g a)).
Proof. exact (@lem8285736 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8285738 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (EQ_MP (@lem8285737 A B P f G2 g a) (@lem8285734 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8285741 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8285743 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G2 g a) = (term4057 A B P f G2 g a).
Proof. exact (@lem8285741 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8285746 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4057 A B P f G2 g a.
Proof. exact (EQ_MP (@lem8285743 A B P f G2 g a) (@lem8282763 A B P f G2 g a h1)). Qed.
Lemma lem8285749 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8285746 A B P f G2 g a h1 (@lem8285738 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8285750 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8285749 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8285752 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285753 : term802 = False.
Proof. exact (@lem8285752 False). Qed.
Lemma lem8285754 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8285753) (@lem8285750 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8285942 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (proj2 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8285943 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4058 A B P f H2 g a.
Proof. exact (fun h0 : term4053 A B P f H2 g a => @lem8285942 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8285945 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285946 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H2 g a) = ((H2 f a) = (H2 g a)).
Proof. exact (@lem8285945 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8285947 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (EQ_MP (@lem8285946 A B P f H2 g a) (@lem8285943 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8285950 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8285952 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H2 g a) = (term4059 A B P f H2 g a).
Proof. exact (@lem8285950 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8285955 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4059 A B P f H2 g a.
Proof. exact (EQ_MP (@lem8285952 A B P f H2 g a) (@lem8282795 A B P f H2 g a h1)). Qed.
Lemma lem8285958 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8285955 A B P f H2 g a h1 (@lem8285947 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8285959 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8285958 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8285961 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8285962 : term802 = False.
Proof. exact (@lem8285961 False). Qed.
Lemma lem8285963 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8285962) (@lem8285959 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8286151 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : P2 f a.
Proof. exact (proj1 (@lem8280072 A B P f P2 g a h1)). Qed.
Lemma lem8286152 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : term4054 A B P P2 f a.
Proof. exact (fun h0 : term373 A B P P2 f a => @lem8286151 A B P f P2 g a h1). Qed.
Lemma lem8286154 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286155 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P2 f a) = (P2 f a).
Proof. exact (@lem8286154 (P2 f a)). Qed.
Lemma lem8286156 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P2 g a) : P2 f a.
Proof. exact (EQ_MP (@lem8286155 A B P P2 f a) (@lem8286152 A B P f P2 g a h1)). Qed.
Lemma lem8286159 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8286161 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P2 f a) = (term4055 A B P P2 f a).
Proof. exact (@lem8286159 (P2 f a)). Qed.
Lemma lem8286164 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term4055 A B P P2 f a.
Proof. exact (EQ_MP (@lem8286161 A B P P2 f a) (@lem8282823 A B P f P2 g a h1)). Qed.
Lemma lem8286167 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4050 A B P f P2 g a) : False.
Proof. exact (@lem8286164 A B P f P2 g a h1 (@lem8286156 A B P f P2 g a h2)). Qed.
Lemma lem8286168 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4050 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8286167 A B P f P2 g a h1 h2). Qed.
Lemma lem8286170 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286171 : term802 = False.
Proof. exact (@lem8286170 False). Qed.
Lemma lem8286172 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4050 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8286171) (@lem8286168 A B P f P2 g a h1 h2)). Qed.
Lemma lem8286360 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : P2 g a.
Proof. exact (proj2 (@lem8280073 A B P f P2 g a h1)). Qed.
Lemma lem8286361 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : term4054 A B P P2 g a.
Proof. exact (fun h0 : term373 A B P P2 g a => @lem8286360 A B P f P2 g a h1). Qed.
Lemma lem8286363 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286364 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P2 g a) = (P2 g a).
Proof. exact (@lem8286363 (P2 g a)). Qed.
Lemma lem8286365 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P2 g a) : P2 g a.
Proof. exact (EQ_MP (@lem8286364 A B P P2 g a) (@lem8286361 A B P f P2 g a h1)). Qed.
Lemma lem8286368 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8286370 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P2 g a) = (term4055 A B P P2 g a).
Proof. exact (@lem8286368 (P2 g a)). Qed.
Lemma lem8286373 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) : term4055 A B P P2 g a.
Proof. exact (EQ_MP (@lem8286370 A B P P2 g a) (@lem8282859 A B P f P2 g a h1)). Qed.
Lemma lem8286376 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4051 A B P f P2 g a) : False.
Proof. exact (@lem8286373 A B P f P2 g a h1 (@lem8286365 A B P f P2 g a h2)). Qed.
Lemma lem8286377 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4051 A B P f P2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8286376 A B P f P2 g a h1 h2). Qed.
Lemma lem8286379 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286380 : term802 = False.
Proof. exact (@lem8286379 False). Qed.
Lemma lem8286381 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4051 A B P f P2 g a) : False.
Proof. exact (EQ_MP (@lem8286380) (@lem8286377 A B P f P2 g a h1 h2)). Qed.
Lemma lem8286569 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (proj1 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8286570 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4056 A B P f G2 g a.
Proof. exact (fun h0 : term4052 A B P f G2 g a => @lem8286569 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8286572 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286573 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G2 g a) = ((G2 f a) = (G2 g a)).
Proof. exact (@lem8286572 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8286574 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (G2 f a) = (G2 g a).
Proof. exact (EQ_MP (@lem8286573 A B P f G2 g a) (@lem8286570 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8286577 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8286579 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G2 g a) = (term4057 A B P f G2 g a).
Proof. exact (@lem8286577 ((G2 f a) = (G2 g a))). Qed.
Lemma lem8286582 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) : term4057 A B P f G2 g a.
Proof. exact (EQ_MP (@lem8286579 A B P f G2 g a) (@lem8282895 A B P f G2 g a h1)). Qed.
Lemma lem8286585 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8286582 A B P f G2 g a h1 (@lem8286574 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8286586 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8286585 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8286588 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286589 : term802 = False.
Proof. exact (@lem8286588 False). Qed.
Lemma lem8286590 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8286589) (@lem8286586 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8286778 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (proj2 (@lem8280014 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8286779 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term4058 A B P f H2 g a.
Proof. exact (fun h0 : term4053 A B P f H2 g a => @lem8286778 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1). Qed.
Lemma lem8286781 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286782 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H2 g a) = ((H2 f a) = (H2 g a)).
Proof. exact (@lem8286781 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8286783 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (H2 f a) = (H2 g a).
Proof. exact (EQ_MP (@lem8286782 A B P f H2 g a) (@lem8286779 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8286786 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8286788 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H2 g a) = (term4059 A B P f H2 g a).
Proof. exact (@lem8286786 ((H2 f a) = (H2 g a))). Qed.
Lemma lem8286791 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) : term4059 A B P f H2 g a.
Proof. exact (EQ_MP (@lem8286788 A B P f H2 g a) (@lem8282927 A B P f H2 g a h1)). Qed.
Lemma lem8286794 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (@lem8286791 A B P f H2 g a h1 (@lem8286783 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2)). Qed.
Lemma lem8286795 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8286794 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2). Qed.
Lemma lem8286797 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286798 : term802 = False.
Proof. exact (@lem8286797 False). Qed.
Lemma lem8286799 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8286798) (@lem8286795 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2)). Qed.
Lemma lem8286987 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 g a.
Proof. exact (proj2 (@lem8280102 A B P f P1 g a h1)). Qed.
Lemma lem8286988 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : term4054 A B P P1 g a.
Proof. exact (fun h0 : term373 A B P P1 g a => @lem8286987 A B P f P1 g a h1). Qed.
Lemma lem8286990 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8286991 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P1 g a) = (P1 g a).
Proof. exact (@lem8286990 (P1 g a)). Qed.
Lemma lem8286992 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 g a.
Proof. exact (EQ_MP (@lem8286991 A B P P1 g a) (@lem8286988 A B P f P1 g a h1)). Qed.
Lemma lem8286995 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8286997 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P1 g a) = (term4055 A B P P1 g a).
Proof. exact (@lem8286995 (P1 g a)). Qed.
Lemma lem8287000 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4055 A B P P1 g a.
Proof. exact (EQ_MP (@lem8286997 A B P P1 g a) (@lem8282961 A B P f P1 g a h1)). Qed.
Lemma lem8287003 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (@lem8287000 A B P f P1 g a h1 (@lem8286992 A B P f P1 g a h2)). Qed.
Lemma lem8287004 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8287003 A B P f P1 g a h1 h2). Qed.
Lemma lem8287006 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287007 : term802 = False.
Proof. exact (@lem8287006 False). Qed.
Lemma lem8287008 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8287007) (@lem8287004 A B P f P1 g a h1 h2)). Qed.
Lemma lem8287196 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 f a.
Proof. exact (proj1 (@lem8280102 A B P f P1 g a h1)). Qed.
Lemma lem8287197 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : term4054 A B P P1 f a.
Proof. exact (fun h0 : term373 A B P P1 f a => @lem8287196 A B P f P1 g a h1). Qed.
Lemma lem8287199 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287200 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P1 f a) = (P1 f a).
Proof. exact (@lem8287199 (P1 f a)). Qed.
Lemma lem8287201 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 f a.
Proof. exact (EQ_MP (@lem8287200 A B P P1 f a) (@lem8287197 A B P f P1 g a h1)). Qed.
Lemma lem8287204 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8287206 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P1 f a) = (term4055 A B P P1 f a).
Proof. exact (@lem8287204 (P1 f a)). Qed.
Lemma lem8287209 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4055 A B P P1 f a.
Proof. exact (EQ_MP (@lem8287206 A B P P1 f a) (@lem8282993 A B P f P1 g a h1)). Qed.
Lemma lem8287212 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (@lem8287209 A B P f P1 g a h1 (@lem8287201 A B P f P1 g a h2)). Qed.
Lemma lem8287213 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8287212 A B P f P1 g a h1 h2). Qed.
Lemma lem8287215 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287216 : term802 = False.
Proof. exact (@lem8287215 False). Qed.
Lemma lem8287217 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8287216) (@lem8287213 A B P f P1 g a h1 h2)). Qed.
Lemma lem8287405 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (proj1 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8287406 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4056 A B P f G1 g a.
Proof. exact (fun h0 : term4052 A B P f G1 g a => @lem8287405 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8287408 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287409 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G1 g a) = ((G1 f a) = (G1 g a)).
Proof. exact (@lem8287408 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8287410 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (EQ_MP (@lem8287409 A B P f G1 g a) (@lem8287406 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8287413 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8287415 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G1 g a) = (term4057 A B P f G1 g a).
Proof. exact (@lem8287413 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8287418 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4057 A B P f G1 g a.
Proof. exact (EQ_MP (@lem8287415 A B P f G1 g a) (@lem8283027 A B P f G1 g a h1)). Qed.
Lemma lem8287421 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8287418 A B P f G1 g a h1 (@lem8287410 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8287422 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8287421 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8287424 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287425 : term802 = False.
Proof. exact (@lem8287424 False). Qed.
Lemma lem8287426 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8287425) (@lem8287422 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8287614 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (proj2 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8287615 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4058 A B P f H1 g a.
Proof. exact (fun h0 : term4053 A B P f H1 g a => @lem8287614 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8287617 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287618 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H1 g a) = ((H1 f a) = (H1 g a)).
Proof. exact (@lem8287617 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8287619 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (EQ_MP (@lem8287618 A B P f H1 g a) (@lem8287615 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8287622 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8287624 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H1 g a) = (term4059 A B P f H1 g a).
Proof. exact (@lem8287622 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8287627 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4059 A B P f H1 g a.
Proof. exact (EQ_MP (@lem8287624 A B P f H1 g a) (@lem8283059 A B P f H1 g a h1)). Qed.
Lemma lem8287630 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8287627 A B P f H1 g a h1 (@lem8287619 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8287631 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8287630 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8287633 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287634 : term802 = False.
Proof. exact (@lem8287633 False). Qed.
Lemma lem8287635 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8287634) (@lem8287631 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8287823 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 g a.
Proof. exact (proj2 (@lem8280102 A B P f P1 g a h1)). Qed.
Lemma lem8287824 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : term4054 A B P P1 g a.
Proof. exact (fun h0 : term373 A B P P1 g a => @lem8287823 A B P f P1 g a h1). Qed.
Lemma lem8287826 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287827 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P1 g a) = (P1 g a).
Proof. exact (@lem8287826 (P1 g a)). Qed.
Lemma lem8287828 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 g a.
Proof. exact (EQ_MP (@lem8287827 A B P P1 g a) (@lem8287824 A B P f P1 g a h1)). Qed.
Lemma lem8287831 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8287833 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P1 g a) = (term4055 A B P P1 g a).
Proof. exact (@lem8287831 (P1 g a)). Qed.
Lemma lem8287836 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4055 A B P P1 g a.
Proof. exact (EQ_MP (@lem8287833 A B P P1 g a) (@lem8283093 A B P f P1 g a h1)). Qed.
Lemma lem8287839 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (@lem8287836 A B P f P1 g a h1 (@lem8287828 A B P f P1 g a h2)). Qed.
Lemma lem8287840 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8287839 A B P f P1 g a h1 h2). Qed.
Lemma lem8287842 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8287843 : term802 = False.
Proof. exact (@lem8287842 False). Qed.
Lemma lem8287844 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8287843) (@lem8287840 A B P f P1 g a h1 h2)). Qed.
Lemma lem8288032 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 f a.
Proof. exact (proj1 (@lem8280102 A B P f P1 g a h1)). Qed.
Lemma lem8288033 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : term4054 A B P P1 f a.
Proof. exact (fun h0 : term373 A B P P1 f a => @lem8288032 A B P f P1 g a h1). Qed.
Lemma lem8288035 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288036 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P1 f a) = (P1 f a).
Proof. exact (@lem8288035 (P1 f a)). Qed.
Lemma lem8288037 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) : P1 f a.
Proof. exact (EQ_MP (@lem8288036 A B P P1 f a) (@lem8288033 A B P f P1 g a h1)). Qed.
Lemma lem8288040 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8288042 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P1 f a) = (term4055 A B P P1 f a).
Proof. exact (@lem8288040 (P1 f a)). Qed.
Lemma lem8288045 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4055 A B P P1 f a.
Proof. exact (EQ_MP (@lem8288042 A B P P1 f a) (@lem8283125 A B P f P1 g a h1)). Qed.
Lemma lem8288048 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (@lem8288045 A B P f P1 g a h1 (@lem8288037 A B P f P1 g a h2)). Qed.
Lemma lem8288049 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8288048 A B P f P1 g a h1 h2). Qed.
Lemma lem8288051 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288052 : term802 = False.
Proof. exact (@lem8288051 False). Qed.
Lemma lem8288053 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8288052) (@lem8288049 A B P f P1 g a h1 h2)). Qed.
Lemma lem8288241 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (proj1 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8288242 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4056 A B P f G1 g a.
Proof. exact (fun h0 : term4052 A B P f G1 g a => @lem8288241 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8288244 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288245 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G1 g a) = ((G1 f a) = (G1 g a)).
Proof. exact (@lem8288244 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8288246 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (EQ_MP (@lem8288245 A B P f G1 g a) (@lem8288242 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8288249 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8288251 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G1 g a) = (term4057 A B P f G1 g a).
Proof. exact (@lem8288249 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8288254 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4057 A B P f G1 g a.
Proof. exact (EQ_MP (@lem8288251 A B P f G1 g a) (@lem8283159 A B P f G1 g a h1)). Qed.
Lemma lem8288257 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8288254 A B P f G1 g a h1 (@lem8288246 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8288258 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8288257 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8288260 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288261 : term802 = False.
Proof. exact (@lem8288260 False). Qed.
Lemma lem8288262 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8288261) (@lem8288258 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8288450 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (proj2 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8288451 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4058 A B P f H1 g a.
Proof. exact (fun h0 : term4053 A B P f H1 g a => @lem8288450 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8288453 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288454 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H1 g a) = ((H1 f a) = (H1 g a)).
Proof. exact (@lem8288453 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8288455 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (EQ_MP (@lem8288454 A B P f H1 g a) (@lem8288451 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8288458 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8288460 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H1 g a) = (term4059 A B P f H1 g a).
Proof. exact (@lem8288458 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8288463 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4059 A B P f H1 g a.
Proof. exact (EQ_MP (@lem8288460 A B P f H1 g a) (@lem8283191 A B P f H1 g a h1)). Qed.
Lemma lem8288466 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8288463 A B P f H1 g a h1 (@lem8288455 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8288467 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8288466 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8288469 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288470 : term802 = False.
Proof. exact (@lem8288469 False). Qed.
Lemma lem8288471 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8288470) (@lem8288467 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8288659 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : P1 f a.
Proof. exact (proj1 (@lem8280140 A B P f P1 g a h1)). Qed.
Lemma lem8288660 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4054 A B P P1 f a.
Proof. exact (fun h0 : term373 A B P P1 f a => @lem8288659 A B P f P1 g a h1). Qed.
Lemma lem8288662 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288663 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P1 f a) = (P1 f a).
Proof. exact (@lem8288662 (P1 f a)). Qed.
Lemma lem8288664 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : P1 f a.
Proof. exact (EQ_MP (@lem8288663 A B P P1 f a) (@lem8288660 A B P f P1 g a h1)). Qed.
Lemma lem8288667 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8288669 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P1 f a) = (term4055 A B P P1 f a).
Proof. exact (@lem8288667 (P1 f a)). Qed.
Lemma lem8288672 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term4055 A B P P1 f a.
Proof. exact (EQ_MP (@lem8288669 A B P P1 f a) (@lem8283215 A B P f P1 g a h1)). Qed.
Lemma lem8288675 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4050 A B P f P1 g a) : False.
Proof. exact (@lem8288672 A B P f P1 g a h1 (@lem8288664 A B P f P1 g a h2)). Qed.
Lemma lem8288676 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4050 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8288675 A B P f P1 g a h1 h2). Qed.
Lemma lem8288678 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288679 : term802 = False.
Proof. exact (@lem8288678 False). Qed.
Lemma lem8288680 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4050 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8288679) (@lem8288676 A B P f P1 g a h1 h2)). Qed.
Lemma lem8288868 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : P1 g a.
Proof. exact (proj2 (@lem8280141 A B P f P1 g a h1)). Qed.
Lemma lem8288869 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4054 A B P P1 g a.
Proof. exact (fun h0 : term373 A B P P1 g a => @lem8288868 A B P f P1 g a h1). Qed.
Lemma lem8288871 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288872 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P1 g a) = (P1 g a).
Proof. exact (@lem8288871 (P1 g a)). Qed.
Lemma lem8288873 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : P1 g a.
Proof. exact (EQ_MP (@lem8288872 A B P P1 g a) (@lem8288869 A B P f P1 g a h1)). Qed.
Lemma lem8288876 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8288878 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P1 g a) = (term4055 A B P P1 g a).
Proof. exact (@lem8288876 (P1 g a)). Qed.
Lemma lem8288881 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term4055 A B P P1 g a.
Proof. exact (EQ_MP (@lem8288878 A B P P1 g a) (@lem8283251 A B P f P1 g a h1)). Qed.
Lemma lem8288884 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4051 A B P f P1 g a) : False.
Proof. exact (@lem8288881 A B P f P1 g a h1 (@lem8288873 A B P f P1 g a h2)). Qed.
Lemma lem8288885 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4051 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8288884 A B P f P1 g a h1 h2). Qed.
Lemma lem8288887 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8288888 : term802 = False.
Proof. exact (@lem8288887 False). Qed.
Lemma lem8288889 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4051 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8288888) (@lem8288885 A B P f P1 g a h1 h2)). Qed.
Lemma lem8289077 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (proj1 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8289078 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4056 A B P f G1 g a.
Proof. exact (fun h0 : term4052 A B P f G1 g a => @lem8289077 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8289080 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289081 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G1 g a) = ((G1 f a) = (G1 g a)).
Proof. exact (@lem8289080 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8289082 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (EQ_MP (@lem8289081 A B P f G1 g a) (@lem8289078 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8289085 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8289087 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G1 g a) = (term4057 A B P f G1 g a).
Proof. exact (@lem8289085 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8289090 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4057 A B P f G1 g a.
Proof. exact (EQ_MP (@lem8289087 A B P f G1 g a) (@lem8283291 A B P f G1 g a h1)). Qed.
Lemma lem8289093 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8289090 A B P f G1 g a h1 (@lem8289082 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8289094 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8289093 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8289096 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289097 : term802 = False.
Proof. exact (@lem8289096 False). Qed.
Lemma lem8289098 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8289097) (@lem8289094 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8289286 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (proj2 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8289287 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4058 A B P f H1 g a.
Proof. exact (fun h0 : term4053 A B P f H1 g a => @lem8289286 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8289289 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289290 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H1 g a) = ((H1 f a) = (H1 g a)).
Proof. exact (@lem8289289 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8289291 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (EQ_MP (@lem8289290 A B P f H1 g a) (@lem8289287 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8289294 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8289296 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H1 g a) = (term4059 A B P f H1 g a).
Proof. exact (@lem8289294 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8289299 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4059 A B P f H1 g a.
Proof. exact (EQ_MP (@lem8289296 A B P f H1 g a) (@lem8283323 A B P f H1 g a h1)). Qed.
Lemma lem8289302 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8289299 A B P f H1 g a h1 (@lem8289291 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8289303 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8289302 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8289305 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289306 : term802 = False.
Proof. exact (@lem8289305 False). Qed.
Lemma lem8289307 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8289306) (@lem8289303 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8289495 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : P1 f a.
Proof. exact (proj1 (@lem8280152 A B P f P1 g a h1)). Qed.
Lemma lem8289496 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : term4054 A B P P1 f a.
Proof. exact (fun h0 : term373 A B P P1 f a => @lem8289495 A B P f P1 g a h1). Qed.
Lemma lem8289498 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289499 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term4054 A B P P1 f a) = (P1 f a).
Proof. exact (@lem8289498 (P1 f a)). Qed.
Lemma lem8289500 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4050 A B P f P1 g a) : P1 f a.
Proof. exact (EQ_MP (@lem8289499 A B P P1 f a) (@lem8289496 A B P f P1 g a h1)). Qed.
Lemma lem8289503 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8289505 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (term373 A B P P1 f a) = (term4055 A B P P1 f a).
Proof. exact (@lem8289503 (P1 f a)). Qed.
Lemma lem8289508 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term4055 A B P P1 f a.
Proof. exact (EQ_MP (@lem8289505 A B P P1 f a) (@lem8283347 A B P f P1 g a h1)). Qed.
Lemma lem8289511 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4050 A B P f P1 g a) : False.
Proof. exact (@lem8289508 A B P f P1 g a h1 (@lem8289500 A B P f P1 g a h2)). Qed.
Lemma lem8289512 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4050 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8289511 A B P f P1 g a h1 h2). Qed.
Lemma lem8289514 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289515 : term802 = False.
Proof. exact (@lem8289514 False). Qed.
Lemma lem8289516 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4050 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8289515) (@lem8289512 A B P f P1 g a h1 h2)). Qed.
Lemma lem8289704 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : P1 g a.
Proof. exact (proj2 (@lem8280153 A B P f P1 g a h1)). Qed.
Lemma lem8289705 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : term4054 A B P P1 g a.
Proof. exact (fun h0 : term373 A B P P1 g a => @lem8289704 A B P f P1 g a h1). Qed.
Lemma lem8289707 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289708 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term4054 A B P P1 g a) = (P1 g a).
Proof. exact (@lem8289707 (P1 g a)). Qed.
Lemma lem8289709 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4051 A B P f P1 g a) : P1 g a.
Proof. exact (EQ_MP (@lem8289708 A B P P1 g a) (@lem8289705 A B P f P1 g a h1)). Qed.
Lemma lem8289712 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8289714 {A B P : Type'} (P1 : type560 A B P) (g : A -> B) (a : P) : (term373 A B P P1 g a) = (term4055 A B P P1 g a).
Proof. exact (@lem8289712 (P1 g a)). Qed.
Lemma lem8289717 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) : term4055 A B P P1 g a.
Proof. exact (EQ_MP (@lem8289714 A B P P1 g a) (@lem8283383 A B P f P1 g a h1)). Qed.
Lemma lem8289720 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4051 A B P f P1 g a) : False.
Proof. exact (@lem8289717 A B P f P1 g a h1 (@lem8289709 A B P f P1 g a h2)). Qed.
Lemma lem8289721 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4051 A B P f P1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8289720 A B P f P1 g a h1 h2). Qed.
Lemma lem8289723 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289724 : term802 = False.
Proof. exact (@lem8289723 False). Qed.
Lemma lem8289725 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term4051 A B P f P1 g a) : False.
Proof. exact (EQ_MP (@lem8289724) (@lem8289721 A B P f P1 g a h1 h2)). Qed.
Lemma lem8289913 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (proj1 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8289914 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4056 A B P f G1 g a.
Proof. exact (fun h0 : term4052 A B P f G1 g a => @lem8289913 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8289916 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289917 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4056 A B P f G1 g a) = ((G1 f a) = (G1 g a)).
Proof. exact (@lem8289916 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8289918 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (G1 f a) = (G1 g a).
Proof. exact (EQ_MP (@lem8289917 A B P f G1 g a) (@lem8289914 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8289921 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8289923 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) : (term4052 A B P f G1 g a) = (term4057 A B P f G1 g a).
Proof. exact (@lem8289921 ((G1 f a) = (G1 g a))). Qed.
Lemma lem8289926 {A B P : Type'} (f : A -> B) (G1 : type557 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) : term4057 A B P f G1 g a.
Proof. exact (EQ_MP (@lem8289923 A B P f G1 g a) (@lem8283423 A B P f G1 g a h1)). Qed.
Lemma lem8289929 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8289926 A B P f G1 g a h1 (@lem8289918 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8289930 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8289929 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8289932 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8289933 : term802 = False.
Proof. exact (@lem8289932 False). Qed.
Lemma lem8289934 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8289933) (@lem8289930 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8290122 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (proj2 (@lem8280098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8290123 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term4058 A B P f H1 g a.
Proof. exact (fun h0 : term4053 A B P f H1 g a => @lem8290122 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1). Qed.
Lemma lem8290125 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8290126 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4058 A B P f H1 g a) = ((H1 f a) = (H1 g a)).
Proof. exact (@lem8290125 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8290127 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (H1 f a) = (H1 g a).
Proof. exact (EQ_MP (@lem8290126 A B P f H1 g a) (@lem8290123 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1)). Qed.
Lemma lem8290130 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8290132 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) : (term4053 A B P f H1 g a) = (term4059 A B P f H1 g a).
Proof. exact (@lem8290130 ((H1 f a) = (H1 g a))). Qed.
Lemma lem8290135 {A B P : Type'} (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) : term4059 A B P f H1 g a.
Proof. exact (EQ_MP (@lem8290132 A B P f H1 g a) (@lem8283455 A B P f H1 g a h1)). Qed.
Lemma lem8290138 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (@lem8290135 A B P f H1 g a h1 (@lem8290127 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h2)). Qed.
Lemma lem8290139 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : term802.
Proof. exact (fun h0 : ~ False => @lem8290138 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2). Qed.
Lemma lem8290141 (p : Prop) : (term758 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8290142 : term802 = False.
Proof. exact (@lem8290141 False). Qed.
Lemma lem8290143 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290142) (@lem8290139 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2)). Qed.
Lemma lem8290144 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290143 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283455 A B P f H1 g a h1)). Qed.
Lemma lem8290145 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290144 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283455 A B P f H1 g a h1)). Qed.
Lemma lem8290146 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8289934 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283423 A B P f G1 g a h1)). Qed.
Lemma lem8290147 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290146 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283423 A B P f G1 g a h1)). Qed.
Lemma lem8290148 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8289307 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283323 A B P f H1 g a h1)). Qed.
Lemma lem8290149 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290148 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283323 A B P f H1 g a h1)). Qed.
Lemma lem8290150 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8289098 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283291 A B P f G1 g a h1)). Qed.
Lemma lem8290151 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290150 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283291 A B P f G1 g a h1)). Qed.
Lemma lem8290152 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8288471 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283191 A B P f H1 g a h1)). Qed.
Lemma lem8290153 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290152 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283191 A B P f H1 g a h1)). Qed.
Lemma lem8290154 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8288262 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283159 A B P f G1 g a h1)). Qed.
Lemma lem8290155 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290154 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283159 A B P f G1 g a h1)). Qed.
Lemma lem8290156 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8287635 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283059 A B P f H1 g a h1)). Qed.
Lemma lem8290157 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290156 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283059 A B P f H1 g a h1)). Qed.
Lemma lem8290158 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8287426 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8283027 A B P f G1 g a h1)). Qed.
Lemma lem8290159 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290158 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8283027 A B P f G1 g a h1)). Qed.
Lemma lem8290160 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8286799 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282927 A B P f H2 g a h1)). Qed.
Lemma lem8290161 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290160 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282927 A B P f H2 g a h1)). Qed.
Lemma lem8290162 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8286590 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282895 A B P f G2 g a h1)). Qed.
Lemma lem8290163 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290162 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282895 A B P f G2 g a h1)). Qed.
Lemma lem8290164 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8285963 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282795 A B P f H2 g a h1)). Qed.
Lemma lem8290165 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290164 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282795 A B P f H2 g a h1)). Qed.
Lemma lem8290166 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8285754 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282763 A B P f G2 g a h1)). Qed.
Lemma lem8290167 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290166 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282763 A B P f G2 g a h1)). Qed.
Lemma lem8290168 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8285127 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282663 A B P f H2 g a h1)). Qed.
Lemma lem8290169 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290168 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282663 A B P f H2 g a h1)). Qed.
Lemma lem8290170 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8284918 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282631 A B P f G2 g a h1)). Qed.
Lemma lem8290171 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290170 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282631 A B P f G2 g a h1)). Qed.
Lemma lem8290172 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8284291 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282531 A B P f H2 g a h1)). Qed.
Lemma lem8290173 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290172 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282531 A B P f H2 g a h1)). Qed.
Lemma lem8290174 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8284082 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8282499 A B P f G2 g a h1)). Qed.
Lemma lem8290175 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290174 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8282499 A B P f G2 g a h1)). Qed.
Lemma lem8290176 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290145 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8282303 A B P f H1 g a h1)). Qed.
Lemma lem8290177 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290176 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8282303 A B P f H1 g a h1)). Qed.
Lemma lem8290178 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290147 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8282238 A B P f G1 g a h1)). Qed.
Lemma lem8290179 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290178 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8282238 A B P f G1 g a h1)). Qed.
Lemma lem8290180 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290149 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8282035 A B P f H1 g a h1)). Qed.
Lemma lem8290181 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290180 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8282035 A B P f H1 g a h1)). Qed.
Lemma lem8290182 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290151 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281970 A B P f G1 g a h1)). Qed.
Lemma lem8290183 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290182 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281970 A B P f G1 g a h1)). Qed.
Lemma lem8290184 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290153 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281767 A B P f H1 g a h1)). Qed.
Lemma lem8290185 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290184 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281767 A B P f H1 g a h1)). Qed.
Lemma lem8290186 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290155 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281702 A B P f G1 g a h1)). Qed.
Lemma lem8290187 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290186 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281702 A B P f G1 g a h1)). Qed.
Lemma lem8290188 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290157 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281499 A B P f H1 g a h1)). Qed.
Lemma lem8290189 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290188 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281499 A B P f H1 g a h1)). Qed.
Lemma lem8290190 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290159 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281434 A B P f G1 g a h1)). Qed.
Lemma lem8290191 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290190 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281434 A B P f G1 g a h1)). Qed.
Lemma lem8290192 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290161 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8281231 A B P f H2 g a h1)). Qed.
Lemma lem8290193 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290192 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8281231 A B P f H2 g a h1)). Qed.
Lemma lem8290194 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290163 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8281166 A B P f G2 g a h1)). Qed.
Lemma lem8290195 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290194 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8281166 A B P f G2 g a h1)). Qed.
Lemma lem8290196 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290165 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280963 A B P f H2 g a h1)). Qed.
Lemma lem8290197 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290196 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280963 A B P f H2 g a h1)). Qed.
Lemma lem8290198 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290167 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280898 A B P f G2 g a h1)). Qed.
Lemma lem8290199 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290198 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280898 A B P f G2 g a h1)). Qed.
Lemma lem8290200 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290169 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280695 A B P f H2 g a h1)). Qed.
Lemma lem8290201 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290200 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280695 A B P f H2 g a h1)). Qed.
Lemma lem8290202 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290171 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280630 A B P f G2 g a h1)). Qed.
Lemma lem8290203 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290202 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280630 A B P f G2 g a h1)). Qed.
Lemma lem8290204 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290173 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280427 A B P f H2 g a h1)). Qed.
Lemma lem8290205 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290204 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280427 A B P f H2 g a h1)). Qed.
Lemma lem8290206 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290175 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280362 A B P f G2 g a h1)). Qed.
Lemma lem8290207 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290206 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280362 A B P f G2 g a h1)). Qed.
Lemma lem8290208 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290177 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8282303 A B P f H1 g a h1)). Qed.
Lemma lem8290209 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290208 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8282303 A B P f H1 g a h1)). Qed.
Lemma lem8290210 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290179 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8282238 A B P f G1 g a h1)). Qed.
Lemma lem8290211 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290210 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8282238 A B P f G1 g a h1)). Qed.
Lemma lem8290212 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290181 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8282035 A B P f H1 g a h1)). Qed.
Lemma lem8290213 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290212 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8282035 A B P f H1 g a h1)). Qed.
Lemma lem8290214 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290183 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281970 A B P f G1 g a h1)). Qed.
Lemma lem8290215 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290214 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281970 A B P f G1 g a h1)). Qed.
Lemma lem8290216 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290185 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281767 A B P f H1 g a h1)). Qed.
Lemma lem8290217 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290216 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281767 A B P f H1 g a h1)). Qed.
Lemma lem8290218 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290187 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281702 A B P f G1 g a h1)). Qed.
Lemma lem8290219 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290218 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281702 A B P f G1 g a h1)). Qed.
Lemma lem8290220 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4053 A B P f H1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H1 g a => @lem8290189 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281499 A B P f H1 g a h1)). Qed.
Lemma lem8290221 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290220 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281499 A B P f H1 g a h1)). Qed.
Lemma lem8290222 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : (term4052 A B P f G1 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G1 g a => @lem8290191 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (fun h3 : False => @lem8281434 A B P f G1 g a h1)). Qed.
Lemma lem8290223 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G1 g a) (h2 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (EQ_MP (@lem8290222 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h2) (@lem8281434 A B P f G1 g a h1)). Qed.
Lemma lem8290224 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290193 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8281231 A B P f H2 g a h1)). Qed.
Lemma lem8290225 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290224 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8281231 A B P f H2 g a h1)). Qed.
Lemma lem8290226 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290195 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8281166 A B P f G2 g a h1)). Qed.
Lemma lem8290227 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290226 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8281166 A B P f G2 g a h1)). Qed.
Lemma lem8290228 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290197 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280963 A B P f H2 g a h1)). Qed.
Lemma lem8290229 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290228 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280963 A B P f H2 g a h1)). Qed.
Lemma lem8290230 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290199 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280898 A B P f G2 g a h1)). Qed.
Lemma lem8290231 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290230 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280898 A B P f G2 g a h1)). Qed.
Lemma lem8290232 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290201 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280695 A B P f H2 g a h1)). Qed.
Lemma lem8290233 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290232 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280695 A B P f H2 g a h1)). Qed.
Lemma lem8290234 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290203 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280630 A B P f G2 g a h1)). Qed.
Lemma lem8290235 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290234 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280630 A B P f G2 g a h1)). Qed.
Lemma lem8290236 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4053 A B P f H2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4053 A B P f H2 g a => @lem8290205 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280427 A B P f H2 g a h1)). Qed.
Lemma lem8290237 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4053 A B P f H2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290236 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280427 A B P f H2 g a h1)). Qed.
Lemma lem8290238 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : (term4052 A B P f G2 g a) = False.
Proof. exact (prop_ext (fun h3 : term4052 A B P f G2 g a => @lem8290207 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (fun h3 : False => @lem8280362 A B P f G2 g a h1)). Qed.
Lemma lem8290239 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4052 A B P f G2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (EQ_MP (@lem8290238 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h2) (@lem8280362 A B P f G2 g a h1)). Qed.
Lemma lem8290240 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2520 A B P G1 f H1 g a) : False.
Proof. exact (or_elim (@lem8280151 A B P G1 f H1 g a h2) (fun h0 : term4052 A B P f G1 g a => @lem8290211 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1) (fun h0 : term4053 A B P f H1 g a => @lem8290209 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1)). Qed.
Lemma lem8290241 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term2518 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280150 A B P f P1 g a h2) (fun h0 : term4050 A B P f P1 g a => @lem8289516 A B P f P1 g a h1 h0) (fun h0 : term4051 A B P f P1 g a => @lem8289725 A B P f P1 g a h1 h0)). Qed.
Lemma lem8290242 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2883 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280090 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2518 A B P f P1 g a => @lem8290241 A B P f P1 g a h2 h0) (fun h0 : term2520 A B P G1 f H1 g a => @lem8290240 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h0)). Qed.
Lemma lem8290243 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2520 A B P G1 f H1 g a) : False.
Proof. exact (or_elim (@lem8280139 A B P G1 f H1 g a h2) (fun h0 : term4052 A B P f G1 g a => @lem8290215 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1) (fun h0 : term4053 A B P f H1 g a => @lem8290213 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1)). Qed.
Lemma lem8290244 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P1 g a) (h2 : term2518 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280138 A B P f P1 g a h2) (fun h0 : term4050 A B P f P1 g a => @lem8288680 A B P f P1 g a h1 h0) (fun h0 : term4051 A B P f P1 g a => @lem8288889 A B P f P1 g a h1 h0)). Qed.
Lemma lem8290245 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2883 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280090 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2518 A B P f P1 g a => @lem8290244 A B P f P1 g a h2 h0) (fun h0 : term2520 A B P G1 f H1 g a => @lem8290243 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h0)). Qed.
Lemma lem8290246 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2883 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280095 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2019 A B P f P2 g a => @lem8290245 A B P P' p lt2 s P2 G2 H2 G1 H1 f P1 g a h1 h2) (fun h0 : term2883 A B P f P2 g a => @lem8290242 A B P P' p lt2 s P2 G2 H2 G1 H1 f P1 g a h1 h2)). Qed.
Lemma lem8290247 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2520 A B P G1 f H1 g a) : False.
Proof. exact (or_elim (@lem8280123 A B P G1 f H1 g a h2) (fun h0 : term4052 A B P f G1 g a => @lem8290219 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1) (fun h0 : term4053 A B P f H1 g a => @lem8290217 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1)). Qed.
Lemma lem8290248 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) (h2 : term2518 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280122 A B P f P1 g a h2) (fun h0 : term4050 A B P f P1 g a => @lem8287844 A B P f P1 g a h0 h1) (fun h0 : term4051 A B P f P1 g a => @lem8288053 A B P f P1 g a h0 h1)). Qed.
Lemma lem8290249 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280090 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2518 A B P f P1 g a => @lem8290248 A B P f P1 g a h2 h0) (fun h0 : term2520 A B P G1 f H1 g a => @lem8290247 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h0)). Qed.
Lemma lem8290250 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2520 A B P G1 f H1 g a) : False.
Proof. exact (or_elim (@lem8280111 A B P G1 f H1 g a h2) (fun h0 : term4052 A B P f G1 g a => @lem8290223 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1) (fun h0 : term4053 A B P f H1 g a => @lem8290221 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0 h1)). Qed.
Lemma lem8290251 {A B P : Type'} (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P1 g a) (h2 : term2518 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280110 A B P f P1 g a h2) (fun h0 : term4050 A B P f P1 g a => @lem8287008 A B P f P1 g a h0 h1) (fun h0 : term4051 A B P f P1 g a => @lem8287217 A B P f P1 g a h0 h1)). Qed.
Lemma lem8290252 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280090 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2518 A B P f P1 g a => @lem8290251 A B P f P1 g a h2 h0) (fun h0 : term2520 A B P G1 f H1 g a => @lem8290250 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1 h0)). Qed.
Lemma lem8290253 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (P1 : type560 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) (h2 : term2019 A B P f P1 g a) : False.
Proof. exact (or_elim (@lem8280095 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2019 A B P f P2 g a => @lem8290252 A B P P' p lt2 s P2 G2 H2 G1 H1 f P1 g a h1 h2) (fun h0 : term2883 A B P f P2 g a => @lem8290249 A B P P' p lt2 s P2 G2 H2 G1 H1 f P1 g a h1 h2)). Qed.
Lemma lem8290254 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (or_elim (@lem8280099 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term2019 A B P f P1 g a => @lem8290253 A B P P' p lt2 s P2 G2 H2 G1 H1 f P1 g a h1 h0) (fun h0 : term2883 A B P f P1 g a => @lem8290246 A B P P' p lt2 s P2 G2 H2 G1 H1 f P1 g a h1 h0)). Qed.
Lemma lem8290255 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (h2 : term2520 A B P G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280071 A B P G2 f H2 g a h2) (fun h0 : term4052 A B P f G2 g a => @lem8290227 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1) (fun h0 : term4053 A B P f H2 g a => @lem8290225 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1)). Qed.
Lemma lem8290256 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term2518 A B P f P2 g a) : False.
Proof. exact (or_elim (@lem8280070 A B P f P2 g a h2) (fun h0 : term4050 A B P f P2 g a => @lem8286172 A B P f P2 g a h1 h0) (fun h0 : term4051 A B P f P2 g a => @lem8286381 A B P f P2 g a h1 h0)). Qed.
Lemma lem8290257 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280010 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2) (fun h0 : term2518 A B P f P2 g a => @lem8290256 A B P f P2 g a h1 h0) (fun h0 : term2520 A B P G2 f H2 g a => @lem8290255 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2 h0)). Qed.
Lemma lem8290258 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (h2 : term2520 A B P G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280059 A B P G2 f H2 g a h2) (fun h0 : term4052 A B P f G2 g a => @lem8290231 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1) (fun h0 : term4053 A B P f H2 g a => @lem8290229 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1)). Qed.
Lemma lem8290259 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) (h2 : term2518 A B P f P2 g a) : False.
Proof. exact (or_elim (@lem8280058 A B P f P2 g a h2) (fun h0 : term4050 A B P f P2 g a => @lem8285336 A B P f P2 g a h0 h1) (fun h0 : term4051 A B P f P2 g a => @lem8285545 A B P f P2 g a h0 h1)). Qed.
Lemma lem8290260 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (or_elim (@lem8280010 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1) (fun h0 : term2518 A B P f P2 g a => @lem8290259 A B P f P2 g a h2 h0) (fun h0 : term2520 A B P G2 f H2 g a => @lem8290258 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h0)). Qed.
Lemma lem8290261 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280015 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1) (fun h0 : term2019 A B P f P2 g a => @lem8290260 A B P P' p lt2 s P1 G1 H1 G2 H2 f P2 g a h1 h0) (fun h0 : term2883 A B P f P2 g a => @lem8290257 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1)). Qed.
Lemma lem8290262 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (h2 : term2520 A B P G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280043 A B P G2 f H2 g a h2) (fun h0 : term4052 A B P f G2 g a => @lem8290235 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1) (fun h0 : term4053 A B P f H2 g a => @lem8290233 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1)). Qed.
Lemma lem8290263 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term2518 A B P f P2 g a) : False.
Proof. exact (or_elim (@lem8280042 A B P f P2 g a h2) (fun h0 : term4050 A B P f P2 g a => @lem8284500 A B P f P2 g a h1 h0) (fun h0 : term4051 A B P f P2 g a => @lem8284709 A B P f P2 g a h1 h0)). Qed.
Lemma lem8290264 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term2883 A B P f P2 g a) (h2 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280010 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2) (fun h0 : term2518 A B P f P2 g a => @lem8290263 A B P f P2 g a h1 h0) (fun h0 : term2520 A B P G2 f H2 g a => @lem8290262 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h2 h0)). Qed.
Lemma lem8290265 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (h2 : term2520 A B P G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280031 A B P G2 f H2 g a h2) (fun h0 : term4052 A B P f G2 g a => @lem8290239 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1) (fun h0 : term4053 A B P f H2 g a => @lem8290237 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1)). Qed.
Lemma lem8290266 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term2019 A B P f P2 g a) (h2 : term2518 A B P f P2 g a) : False.
Proof. exact (or_elim (@lem8280030 A B P f P2 g a h2) (fun h0 : term4050 A B P f P2 g a => @lem8283664 A B P f P2 g a h0 h1) (fun h0 : term4051 A B P f P2 g a => @lem8283873 A B P f P2 g a h0 h1)). Qed.
Lemma lem8290267 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) (h2 : term2019 A B P f P2 g a) : False.
Proof. exact (or_elim (@lem8280010 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1) (fun h0 : term2518 A B P f P2 g a => @lem8290266 A B P f P2 g a h2 h0) (fun h0 : term2520 A B P G2 f H2 g a => @lem8290265 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1 h0)). Qed.
Lemma lem8290268 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280015 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1) (fun h0 : term2019 A B P f P2 g a => @lem8290267 A B P P' p lt2 s P1 G1 H1 G2 H2 f P2 g a h1 h0) (fun h0 : term2883 A B P f P2 g a => @lem8290264 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0 h1)). Qed.
Lemma lem8290269 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a) : False.
Proof. exact (or_elim (@lem8280019 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1) (fun h0 : term2019 A B P f P1 g a => @lem8290268 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1) (fun h0 : term2883 A B P f P1 g a => @lem8290261 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h1)). Qed.
Lemma lem8290270 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4016 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (or_elim (@lem8279997 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h1) (fun h0 : term4047 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a => @lem8290269 A B P P' p lt2 s P1 G1 H1 P2 G2 f H2 g a h0) (fun h0 : term4042 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a => @lem8290254 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0)). Qed.
Lemma lem8290271 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4019 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a) : False.
Proof. exact (ex_elim (@lem8279440 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a h1) (fun P2 : type560 A B P => fun h0 : term4018 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a P2 => @lem8290270 A B P P' p lt2 s P2 G2 H2 P1 G1 f H1 g a h0)). Qed.
Lemma lem8290272 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (G2 : type557 A B P) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4021 A B P P' p lt2 s G2 H2 G1 f H1 g a) : False.
Proof. exact (ex_elim (@lem8279439 A B P P' p lt2 s G2 H2 G1 f H1 g a h1) (fun P1 : type560 A B P => fun h0 : term4020 A B P P' p lt2 s G2 H2 G1 f H1 g a P1 => @lem8290271 A B P P' p lt2 s G2 H2 P1 G1 f H1 g a h0)). Qed.
Lemma lem8290273 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (G1 : type557 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4023 A B P P' p lt2 s H2 G1 f H1 g a) : False.
Proof. exact (ex_elim (@lem8279438 A B P P' p lt2 s H2 G1 f H1 g a h1) (fun G2 : type557 A B P => fun h0 : term4022 A B P P' p lt2 s H2 G1 f H1 g a G2 => @lem8290272 A B P P' p lt2 s G2 H2 G1 f H1 g a h0)). Qed.
Lemma lem8290274 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4025 A B P P' p lt2 s H2 f H1 g a) : False.
Proof. exact (ex_elim (@lem8279437 A B P P' p lt2 s H2 f H1 g a h1) (fun G1 : type557 A B P => fun h0 : term4024 A B P P' p lt2 s H2 f H1 g a G1 => @lem8290273 A B P P' p lt2 s H2 G1 f H1 g a h0)). Qed.
Lemma lem8290275 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (s : P -> A) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4027 A B P P' p s H2 f H1 g a) : False.
Proof. exact (ex_elim (@lem8279436 A B P P' p s H2 f H1 g a h1) (fun lt2 : type1402 A => fun h0 : term4026 A B P P' p s H2 f H1 g a lt2 => @lem8290274 A B P P' p lt2 s H2 f H1 g a h0)). Qed.
Lemma lem8290276 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (f : A -> B) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4029 A B P P' p H2 f H1 g a) : False.
Proof. exact (ex_elim (@lem8279435 A B P P' p H2 f H1 g a h1) (fun s : P -> A => fun h0 : term4028 A B P P' p H2 f H1 g a s => @lem8290275 A B P P' p s H2 f H1 g a h0)). Qed.
Lemma lem8290277 {A B P : Type'} (P' : type560 A B P) (p : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term4031 A B P P' p H2 H1 g a) : False.
Proof. exact (ex_elim (@lem8279434 A B P P' p H2 H1 g a h1) (fun f : A -> B => fun h0 : term4030 A B P P' p H2 H1 g a f => @lem8290276 A B P P' p H2 f H1 g a h0)). Qed.
Lemma lem8290278 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2511 A B P P' H2 H1 g a) : False.
Proof. exact (ex_elim (@lem8279433 A B P P' H2 H1 g a h1) (fun p : type560 A B P => fun h0 : term4032 A B P P' H2 H1 g a p => @lem8290277 A B P P' p H2 H1 g a h0)). Qed.
Lemma lem8290279 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2511 A B P P' H2 H1 g a) : (term2511 A B P P' H2 H1 g a) = False.
Proof. exact (prop_ext (fun h2 : term2511 A B P P' H2 H1 g a => @lem8290278 A B P P' H2 H1 g a h1) (fun h2 : False => @lem8274647 A B P P' H2 H1 g a h1)). Qed.
Lemma lem8290280 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (h1 : term2511 A B P P' H2 H1 g a) : False.
Proof. exact (EQ_MP (@lem8290279 A B P P' H2 H1 g a h1) (@lem8274647 A B P P' H2 H1 g a h1)). Qed.
Lemma lem8290281 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : term2510 A B P P' H2 H1 g a.
Proof. exact (fun h0 : term2511 A B P P' H2 H1 g a => @lem8290280 A B P P' H2 H1 g a h0). Qed.
Lemma lem8290282 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : term2499 A B P P' H2 H1 g a.
Proof. exact (EQ_MP (@lem8274646 A B P P' H2 H1 g a) (@lem8290281 A B P P' H2 H1 g a)). Qed.
Lemma lem8290287 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) : term2501 A B P H2 H1 g a.
Proof. exact (fun P' : type560 A B P => @lem8290282 A B P P' H2 H1 g a). Qed.
Lemma lem8290292 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) : term2503 A B P H1 g a.
Proof. exact (fun H2 : type558 A B P => @lem8290287 A B P H2 H1 g a). Qed.
Lemma lem8290297 {A B P : Type'} (g : A -> B) (a : P) : term2505 A B P g a.
Proof. exact (fun H1 : type558 A B P => @lem8290292 A B P H1 g a). Qed.
Lemma lem8290302 {A B P : Type'} (a : P) : term2507 A B P a.
Proof. exact (fun g : A -> B => @lem8290297 A B P g a). Qed.
Lemma lem8290307 {A B P : Type'} : term2509 A B P.
Proof. exact (fun a : P => @lem8290302 A B P a). Qed.
Lemma lem8290308 {A B P : Type'} : term2116 A B P.
Proof. exact (EQ_MP (@lem8274642 A B P) (@lem8290307 A B P)). Qed.
Lemma lem8290309 {A B P : Type'} (w : B) : term4060 A B P w.
Proof. exact (@lem8290308 A B P w). Qed.
Lemma lem8290310 {A B P : Type'} (w : B) : (term4060 A B P w) = (term2112 A B P w).
Proof. exact (eq_refl (term4060 A B P w)). Qed.
Lemma lem8290311 {A B P : Type'} (w : B) : term2112 A B P w.
Proof. exact (EQ_MP (@lem8290310 A B P w) (@lem8290309 A B P w)). Qed.
Lemma lem8290312 {A B P : Type'} (w : B) (a : P) : term4061 A B P w a.
Proof. exact (@lem8290311 A B P w a). Qed.
Lemma lem8290313 {A B P : Type'} (a : P) (w : B) : (term4061 A B P w a) = (term2108 A B P a w).
Proof. exact (eq_refl (term4061 A B P w a)). Qed.
Lemma lem8290314 {A B P : Type'} (a : P) (w : B) : term2108 A B P a w.
Proof. exact (EQ_MP (@lem8290313 A B P a w) (@lem8290312 A B P w a)). Qed.
Lemma lem8290315 {A B P : Type'} (a : P) (w : B) (g : A -> B) : term4062 A B P a w g.
Proof. exact (@lem8290314 A B P a w g). Qed.
Lemma lem8290316 {A B P : Type'} (g : A -> B) (a : P) (w : B) : (term4062 A B P a w g) = (term2104 A B P g a w).
Proof. exact (eq_refl (term4062 A B P a w g)). Qed.
Lemma lem8290317 {A B P : Type'} (g : A -> B) (a : P) (w : B) : term2104 A B P g a w.
Proof. exact (EQ_MP (@lem8290316 A B P g a w) (@lem8290315 A B P a w g)). Qed.
Lemma lem8290318 {A B P : Type'} (g : A -> B) (a : P) (w : B) (H1 : type558 A B P) : term4063 A B P g a w H1.
Proof. exact (@lem8290317 A B P g a w H1). Qed.
Lemma lem8290319 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4063 A B P g a w H1) = (term2100 A B P H1 g a w).
Proof. exact (eq_refl (term4063 A B P g a w H1)). Qed.
Lemma lem8290320 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2100 A B P H1 g a w.
Proof. exact (EQ_MP (@lem8290319 A B P H1 g a w) (@lem8290318 A B P g a w H1)). Qed.
Lemma lem8290321 {A B P : Type'} (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (H2 : type558 A B P) : term4064 A B P H1 g a w H2.
Proof. exact (@lem8290320 A B P H1 g a w H2). Qed.
Lemma lem8290322 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4064 A B P H1 g a w H2) = (term2096 A B P H2 H1 g a w).
Proof. exact (eq_refl (term4064 A B P H1 g a w H2)). Qed.
Lemma lem8290323 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2096 A B P H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290322 A B P H2 H1 g a w) (@lem8290321 A B P H1 g a w H2)). Qed.
Lemma lem8290324 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (P' : type560 A B P) : term4065 A B P H2 H1 g a w P'.
Proof. exact (@lem8290323 A B P H2 H1 g a w P'). Qed.
Lemma lem8290325 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4065 A B P H2 H1 g a w P') = (term2092 A B P P' H2 H1 g a w).
Proof. exact (eq_refl (term4065 A B P H2 H1 g a w P')). Qed.
Lemma lem8290326 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2092 A B P P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290325 A B P P' H2 H1 g a w) (@lem8290324 A B P H2 H1 g a w P')). Qed.
Lemma lem8290327 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (p : type560 A B P) : term4066 A B P P' H2 H1 g a w p.
Proof. exact (@lem8290326 A B P P' H2 H1 g a w p). Qed.
Lemma lem8290328 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4066 A B P P' H2 H1 g a w p) = (term2088 A B P p P' H2 H1 g a w).
Proof. exact (eq_refl (term4066 A B P P' H2 H1 g a w p)). Qed.
Lemma lem8290329 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2088 A B P p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290328 A B P p P' H2 H1 g a w) (@lem8290327 A B P P' H2 H1 g a w p)). Qed.
Lemma lem8290330 {A B P : Type'} (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (f : A -> B) : term4067 A B P p P' H2 H1 g a w f.
Proof. exact (@lem8290329 A B P p P' H2 H1 g a w f). Qed.
Lemma lem8290331 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4067 A B P p P' H2 H1 g a w f) = (term2084 A B P f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4067 A B P p P' H2 H1 g a w f)). Qed.
Lemma lem8290332 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2084 A B P f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290331 A B P f p P' H2 H1 g a w) (@lem8290330 A B P p P' H2 H1 g a w f)). Qed.
Lemma lem8290333 {A B P : Type'} (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (z : A) : term4068 A B P f p P' H2 H1 g a w z.
Proof. exact (@lem8290332 A B P f p P' H2 H1 g a w z). Qed.
Lemma lem8290334 {A B P : Type'} (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4068 A B P f p P' H2 H1 g a w z) = (term2080 A B P z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4068 A B P f p P' H2 H1 g a w z)). Qed.
Lemma lem8290335 {A B P : Type'} (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2080 A B P z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290334 A B P z f p P' H2 H1 g a w) (@lem8290333 A B P f p P' H2 H1 g a w z)). Qed.
Lemma lem8290336 {A B P : Type'} (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (G1 : type557 A B P) : term4069 A B P z f p P' H2 H1 g a w G1.
Proof. exact (@lem8290335 A B P z f p P' H2 H1 g a w G1). Qed.
Lemma lem8290337 {A B P : Type'} (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4069 A B P z f p P' H2 H1 g a w G1) = (term2076 A B P G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4069 A B P z f p P' H2 H1 g a w G1)). Qed.
Lemma lem8290338 {A B P : Type'} (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2076 A B P G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290337 A B P G1 z f p P' H2 H1 g a w) (@lem8290336 A B P z f p P' H2 H1 g a w G1)). Qed.
Lemma lem8290339 {A B P : Type'} (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (G2 : type557 A B P) : term4070 A B P G1 z f p P' H2 H1 g a w G2.
Proof. exact (@lem8290338 A B P G1 z f p P' H2 H1 g a w G2). Qed.
Lemma lem8290340 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4070 A B P G1 z f p P' H2 H1 g a w G2) = (term2072 A B P G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4070 A B P G1 z f p P' H2 H1 g a w G2)). Qed.
Lemma lem8290341 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2072 A B P G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290340 A B P G2 G1 z f p P' H2 H1 g a w) (@lem8290339 A B P G1 z f p P' H2 H1 g a w G2)). Qed.
Lemma lem8290342 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (P1 : type560 A B P) : term4071 A B P G2 G1 z f p P' H2 H1 g a w P1.
Proof. exact (@lem8290341 A B P G2 G1 z f p P' H2 H1 g a w P1). Qed.
Lemma lem8290343 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4071 A B P G2 G1 z f p P' H2 H1 g a w P1) = (term2068 A B P P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4071 A B P G2 G1 z f p P' H2 H1 g a w P1)). Qed.
Lemma lem8290344 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2068 A B P P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290343 A B P P1 G2 G1 z f p P' H2 H1 g a w) (@lem8290342 A B P G2 G1 z f p P' H2 H1 g a w P1)). Qed.
Lemma lem8290345 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (P2 : type560 A B P) : term4072 A B P P1 G2 G1 z f p P' H2 H1 g a w P2.
Proof. exact (@lem8290344 A B P P1 G2 G1 z f p P' H2 H1 g a w P2). Qed.
Lemma lem8290346 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4072 A B P P1 G2 G1 z f p P' H2 H1 g a w P2) = (term2064 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4072 A B P P1 G2 G1 z f p P' H2 H1 g a w P2)). Qed.
Lemma lem8290347 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2064 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290346 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) (@lem8290345 A B P P1 G2 G1 z f p P' H2 H1 g a w P2)). Qed.
Lemma lem8290348 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (s : P -> A) : term4073 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w s.
Proof. exact (@lem8290347 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w s). Qed.
Lemma lem8290349 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4073 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w s) = (term2060 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4073 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w s)). Qed.
Lemma lem8290350 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2060 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290349 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w) (@lem8290348 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w s)). Qed.
Lemma lem8290351 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (lt2 : type1402 A) : term4074 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w lt2.
Proof. exact (@lem8290350 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w lt2). Qed.
Lemma lem8290352 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : (term4074 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w lt2) = (term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w).
Proof. exact (eq_refl (term4074 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w lt2)). Qed.
Lemma lem8290353 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8290352 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w) (@lem8290351 A B P s P2 P1 G2 G1 z f p P' H2 H1 g a w lt2)). Qed.
Lemma lem8290355 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term2052 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8270127 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w (@lem8290353 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w)). Qed.
Lemma lem8290356 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term2050 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8290355 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w (@lem8269767 A B P lt2 s a f g h1)). Qed.
Lemma lem8290357 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term162 A B P lt2 s a f g) (h2 : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) : False.
Proof. exact (@lem8290356 A B P P2 P1 G2 G1 z p P' H2 H1 w lt2 s a f g h1 (@lem8270111 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w h2)). Qed.
Lemma lem8290358 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term162 A B P lt2 s a f g) (h2 : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) : (term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) = False.
Proof. exact (prop_ext (fun h3 : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w => @lem8290357 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h1 h2) (fun h3 : False => @lem8270111 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w h2)). Qed.
Lemma lem8290359 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) (h1 : term162 A B P lt2 s a f g) (h2 : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) : False.
Proof. exact (EQ_MP (@lem8290358 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h1 h2) (@lem8270111 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w h2)). Qed.
Lemma lem8290360 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term2050 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term2051 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w => @lem8290359 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w h1 h0). Qed.
Lemma lem8290361 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term2031 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8270110 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w) (@lem8290360 A B P P2 P1 G2 G1 z p P' H2 H1 w lt2 s a f g h1)). Qed.
Lemma lem8290363 (p : Prop) : p = (term296 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8290364 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term4075 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (@lem8290363 (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290365 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4075 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (SYM (@lem8290364 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290366 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a) : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (h1). Qed.
Lemma lem8290369 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (h1). Qed.
Lemma lem8290370 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (fun h0 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a => @lem8290369 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h0). Qed.
Lemma lem8290371 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (h1). Qed.
Lemma lem8290372 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (h1). Qed.
Lemma lem8290373 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) (h2 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8290371 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h2 (@lem8290372 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h1)). Qed.
Lemma lem8290374 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4079 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (fun h0 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a => @lem8290373 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h1 h0). Qed.
Lemma lem8290375 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (h1). Qed.
Lemma lem8290376 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) (h2 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8290374 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h1 (@lem8290375 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h2)). Qed.
Lemma lem8290377 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h1 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (fun h0 : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a => @lem8290376 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h0 h1). Qed.
Lemma lem8290378 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4080 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (fun h0 : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a => @lem8290377 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a h0). Qed.
Lemma lem8290381 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8290378 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a (@lem8290370 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290382 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4078 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8290381 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a). Qed.
Lemma lem8290490 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8290491 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4075 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term4081 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (@lem8290490 (term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290493 (t : Prop) : (term304 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8290494 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4081 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (@lem8290493 (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290497 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4075 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (TRANS (@lem8290491 A B P h k P2 P1 G2 G1 P' H2 H1 f a) (@lem8290494 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290504 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1070 A B P p f a) = (term1070 A B P p f a).
Proof. exact (eq_refl (term1070 A B P p f a)). Qed.
Lemma lem8290505 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4082 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4083 A B P p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290504 A B P p f a) (@lem8290497 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290508 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (eq_refl (term264 A B P lt2 s p)). Qed.
Lemma lem8290509 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4084 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4085 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290508 A B P lt2 s p) (@lem8290505 A B P p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290512 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (eq_refl (term307 A B P p lt2 s P')). Qed.
Lemma lem8290513 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4086 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290512 A B P p lt2 s P') (@lem8290509 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290516 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4087 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4088 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8290513 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290517 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8290518 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4089 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4090 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290517 A) (@lem8290516 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290523 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4091 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4092 A B P p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun s : P -> A => @lem8290518 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290524 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8290525 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4093 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4094 A B P p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290524 A P) (@lem8290523 A B P p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290530 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4095 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term4096 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8290525 A B P p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290531 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290532 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4097 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term4098 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290531 A B P) (@lem8290530 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290537 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4099 A B P k P2 P1 G2 G1 P' H2 H1 f a) = (term4100 A B P k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun h : type558 A B P => @lem8290532 A B P h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290538 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8290539 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4101 A B P k P2 P1 G2 G1 P' H2 H1 f a) = (term4102 A B P k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290538 A B P) (@lem8290537 A B P k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290544 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4103 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term4104 A B P P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun k : type558 A B P => @lem8290539 A B P k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290545 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8290546 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4105 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term4106 A B P P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290545 A B P) (@lem8290544 A B P P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290551 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4107 A B P P1 G2 G1 P' H2 H1 f a) = (term4108 A B P P1 G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8290546 A B P P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290552 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290553 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4109 A B P P1 G2 G1 P' H2 H1 f a) = (term4110 A B P P1 G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290552 A B P) (@lem8290551 A B P P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290558 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4111 A B P G2 G1 P' H2 H1 f a) = (term4112 A B P G2 G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8290553 A B P P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290559 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290560 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4113 A B P G2 G1 P' H2 H1 f a) = (term4114 A B P G2 G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290559 A B P) (@lem8290558 A B P G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290565 {A B P : Type'} (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4115 A B P G1 P' H2 H1 f a) = (term4116 A B P G1 P' H2 H1 f a).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8290560 A B P G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8290566 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8290567 {A B P : Type'} (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4117 A B P G1 P' H2 H1 f a) = (term4118 A B P G1 P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290566 A B P) (@lem8290565 A B P G1 P' H2 H1 f a)). Qed.
Lemma lem8290572 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4119 A B P P' H2 H1 f a) = (term4120 A B P P' H2 H1 f a).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8290567 A B P G1 P' H2 H1 f a)). Qed.
Lemma lem8290573 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8290574 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4121 A B P P' H2 H1 f a) = (term4122 A B P P' H2 H1 f a).
Proof. exact (MK_COMB (@lem8290573 A B P) (@lem8290572 A B P P' H2 H1 f a)). Qed.
Lemma lem8290579 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4123 A B P H2 H1 f a) = (term4124 A B P H2 H1 f a).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8290574 A B P P' H2 H1 f a)). Qed.
Lemma lem8290580 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290581 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4125 A B P H2 H1 f a) = (term4126 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8290580 A B P) (@lem8290579 A B P H2 H1 f a)). Qed.
Lemma lem8290586 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (term4127 A B P H1 f a) = (term4128 A B P H1 f a).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8290581 A B P H2 H1 f a)). Qed.
Lemma lem8290587 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8290588 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (term4129 A B P H1 f a) = (term4130 A B P H1 f a).
Proof. exact (MK_COMB (@lem8290587 A B P) (@lem8290586 A B P H1 f a)). Qed.
Lemma lem8290593 {A B P : Type'} (f : A -> B) (a : P) : (term4131 A B P f a) = (term4132 A B P f a).
Proof. exact (fun_ext (fun H1 : type558 A B P => @lem8290588 A B P H1 f a)). Qed.
Lemma lem8290594 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8290595 {A B P : Type'} (f : A -> B) (a : P) : (term4133 A B P f a) = (term4134 A B P f a).
Proof. exact (MK_COMB (@lem8290594 A B P) (@lem8290593 A B P f a)). Qed.
Lemma lem8290600 {A B P : Type'} (a : P) : (term4135 A B P a) = (term4136 A B P a).
Proof. exact (fun_ext (fun f : A -> B => @lem8290595 A B P f a)). Qed.
Lemma lem8290601 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8290602 {A B P : Type'} (a : P) : (term4137 A B P a) = (term4138 A B P a).
Proof. exact (MK_COMB (@lem8290601 A B) (@lem8290600 A B P a)). Qed.
Lemma lem8290607 {A B P : Type'} : (term4139 A B P) = (term4140 A B P).
Proof. exact (fun_ext (fun a : P => @lem8290602 A B P a)). Qed.
Lemma lem8290608 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8290617 {A B P : Type'} : (term4141 A B P) = (term4142 A B P).
Proof. exact (MK_COMB (@lem8290608 P) (@lem8290607 A B P)). Qed.
Lemma lem8290699 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8290700 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8290701 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term373 A B P P' f a) = (~ False).
Proof. exact (MK_COMB (@lem8290700) (@lem8290699 A B P P' f a h1)). Qed.
Lemma lem8290703 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8290704 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term373 A B P P' f a) = True.
Proof. exact (TRANS (@lem8290701 A B P P' f a h1) (@lem8290703)). Qed.
Lemma lem8290705 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8290706 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2033 A B P P' f a) = (imp True).
Proof. exact (MK_COMB (@lem8290705) (@lem8290704 A B P P' f a h1)). Qed.
Lemma lem8290709 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : ((k f a) = (term992 A B P P1 G1 H1 f a)) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (eq_refl ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8290710 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2034 A B P P' k P1 G1 H1 f a) = (term4143 A B P k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290706 A B P P' f a h1) (@lem8290709 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8290712 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8290713 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4143 A B P k P1 G1 H1 f a) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (@lem8290712 ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8290716 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2034 A B P P' k P1 G1 H1 f a) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (TRANS (@lem8290710 A B P k P1 G1 H1 P' f a h1) (@lem8290713 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8290717 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8290718 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2035 A B P P' k P1 G1 H1 f a) = (term4144 A B P k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290717) (@lem8290716 A B P k P1 G1 H1 P' f a h1)). Qed.
Lemma lem8290720 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8290721 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8290722 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1070 A B P P' f a) = (imp False).
Proof. exact (MK_COMB (@lem8290721) (@lem8290720 A B P P' f a h1)). Qed.
Lemma lem8290725 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : ((h f a) = (term992 A B P P2 G2 H2 f a)) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (eq_refl ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8290726 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2037 A B P P' h P2 G2 H2 f a) = (term4145 A B P h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8290722 A B P P' f a h1) (@lem8290725 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8290728 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8290729 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term4145 A B P h P2 G2 H2 f a) = True.
Proof. exact (@lem8290728 ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8290730 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2037 A B P P' h P2 G2 H2 f a) = True.
Proof. exact (TRANS (@lem8290726 A B P h P2 G2 H2 P' f a h1) (@lem8290729 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8290731 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2038 A B P k P1 G1 H1 P' h P2 G2 H2 f a) = (term4146 A B P k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290718 A B P k P1 G1 H1 P' f a h1) (@lem8290730 A B P h P2 G2 H2 P' f a h1)). Qed.
Lemma lem8290733 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem1843 t)). Qed.
Lemma lem8290734 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4146 A B P k P1 G1 H1 f a) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (@lem8290733 ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8290737 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2038 A B P k P1 G1 H1 P' h P2 G2 H2 f a) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (TRANS (@lem8290731 A B P h P2 G2 H2 k P1 G1 H1 P' f a h1) (@lem8290734 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8290738 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8290739 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2039 A B P k P1 G1 H1 P' h P2 G2 H2 f a) = (term4147 A B P k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290738) (@lem8290737 A B P h P2 G2 H2 k P1 G1 H1 P' f a h1)). Qed.
Lemma lem8290741 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8290742 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8290743 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2043 A B P P' f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8290742 B) (@lem8290741 A B P P' f a h1)). Qed.
Lemma lem8290744 {A B P : Type'} (h : type558 A B P) (f : A -> B) (a : P) : (h f a) = (h f a).
Proof. exact (eq_refl (h f a)). Qed.
Lemma lem8290745 {A B P : Type'} (h : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2128 A B P P' h f a) = (term2129 A B P h f a).
Proof. exact (MK_COMB (@lem8290743 A B P P' f a h1) (@lem8290744 A B P h f a)). Qed.
Lemma lem8290746 {A B P : Type'} (k : type558 A B P) (f : A -> B) (a : P) : (k f a) = (k f a).
Proof. exact (eq_refl (k f a)). Qed.
Lemma lem8290747 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' h k f a) = (term2130 A B P h k f a).
Proof. exact (MK_COMB (@lem8290745 A B P h P' f a h1) (@lem8290746 A B P k f a)). Qed.
Lemma lem8290749 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8290750 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8290749 B t1 t2). Qed.
Lemma lem8290751 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (f : A -> B) (a : P) : (term2130 A B P h k f a) = (k f a).
Proof. exact (@lem8290750 B (h f a) (k f a)). Qed.
Lemma lem8290752 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' h k f a) = (k f a).
Proof. exact (TRANS (@lem8290747 A B P h k P' f a h1) (@lem8290751 A B P h k f a)). Qed.
Lemma lem8290753 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8290754 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1069 A B P P' h k f a) = (term2329 A B P k f a).
Proof. exact (MK_COMB (@lem8290753 B) (@lem8290752 A B P h k P' f a h1)). Qed.
Lemma lem8290756 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8290757 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8290758 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1432 A B P P' f a) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8290757) (@lem8290756 A B P P' f a h1)). Qed.
Lemma lem8290759 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8290760 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1467 A B P P' P2 f a) = (term1468 A B P P2 f a).
Proof. exact (MK_COMB (@lem8290758 A B P P' f a h1) (@lem8290759 A B P P2 f a)). Qed.
Lemma lem8290761 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8290762 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (term1469 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8290760 A B P P2 P' f a h1) (@lem8290761 A B P P1 f a)). Qed.
Lemma lem8290764 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8290765 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8290764 Prop t1 t2). Qed.
Lemma lem8290766 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (f : A -> B) (a : P) : (term1469 A B P P2 P1 f a) = (P1 f a).
Proof. exact (@lem8290765 (P2 f a) (P1 f a)). Qed.
Lemma lem8290767 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1433 A B P P' P2 P1 f a) = (P1 f a).
Proof. exact (TRANS (@lem8290762 A B P P2 P1 P' f a h1) (@lem8290766 A B P P2 P1 f a)). Qed.
Lemma lem8290768 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8290769 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2040 A B P P' P2 P1 f a) = (term2043 A B P P1 f a).
Proof. exact (MK_COMB (@lem8290768 B) (@lem8290767 A B P P2 P1 P' f a h1)). Qed.
Lemma lem8290771 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8290772 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8290773 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1437 A B P P' f a) = (@COND A False).
Proof. exact (MK_COMB (@lem8290772 A) (@lem8290771 A B P P' f a h1)). Qed.
Lemma lem8290774 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8290775 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1470 A B P P' G2 f a) = (term1471 A B P G2 f a).
Proof. exact (MK_COMB (@lem8290773 A B P P' f a h1) (@lem8290774 A B P G2 f a)). Qed.
Lemma lem8290776 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8290777 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (term1472 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8290775 A B P G2 P' f a h1) (@lem8290776 A B P G1 f a)). Qed.
Lemma lem8290779 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8290780 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8290779 A t1 t2). Qed.
Lemma lem8290781 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (f : A -> B) (a : P) : (term1472 A B P G2 G1 f a) = (G1 f a).
Proof. exact (@lem8290780 A (G2 f a) (G1 f a)). Qed.
Lemma lem8290782 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1438 A B P P' G2 G1 f a) = (G1 f a).
Proof. exact (TRANS (@lem8290777 A B P G2 G1 P' f a h1) (@lem8290781 A B P G2 G1 f a)). Qed.
Lemma lem8290783 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8290784 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2041 A B P P' G2 G1 f a) = (term4148 A B P G1 f a).
Proof. exact (MK_COMB (@lem8290783 A B f) (@lem8290782 A B P G2 G1 P' f a h1)). Qed.
Lemma lem8290785 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2042 A B P P2 P1 P' G2 G1 f a) = (term4149 A B P P1 G1 f a).
Proof. exact (MK_COMB (@lem8290769 A B P P2 P1 P' f a h1) (@lem8290784 A B P G2 G1 P' f a h1)). Qed.
Lemma lem8290787 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (P' f a) = False.
Proof. exact (h1). Qed.
Lemma lem8290788 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8290789 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2043 A B P P' f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8290788 B) (@lem8290787 A B P P' f a h1)). Qed.
Lemma lem8290790 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8290791 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2128 A B P P' H2 f a) = (term2129 A B P H2 f a).
Proof. exact (MK_COMB (@lem8290789 A B P P' f a h1) (@lem8290790 A B P H2 f a)). Qed.
Lemma lem8290792 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (H1 f a) = (H1 f a).
Proof. exact (eq_refl (H1 f a)). Qed.
Lemma lem8290793 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' H2 H1 f a) = (term2130 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8290791 A B P H2 P' f a h1) (@lem8290792 A B P H1 f a)). Qed.
Lemma lem8290795 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8290796 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8290795 B t1 t2). Qed.
Lemma lem8290797 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term2130 A B P H2 H1 f a) = (H1 f a).
Proof. exact (@lem8290796 B (H2 f a) (H1 f a)). Qed.
Lemma lem8290798 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term1064 A B P P' H2 H1 f a) = (H1 f a).
Proof. exact (TRANS (@lem8290793 A B P H2 H1 P' f a h1) (@lem8290797 A B P H2 H1 f a)). Qed.
Lemma lem8290799 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2047 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term992 A B P P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290785 A B P P2 G2 P1 G1 P' f a h1) (@lem8290798 A B P H2 H1 P' f a h1)). Qed.
Lemma lem8290800 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : ((term1064 A B P P' h k f a) = (term2047 A B P P2 P1 G2 G1 P' H2 H1 f a)) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (MK_COMB (@lem8290754 A B P h k P' f a h1) (@lem8290799 A B P P2 G2 H2 P1 G1 H1 P' f a h1)). Qed.
Lemma lem8290803 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term4150 A B P k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290739 A B P h P2 G2 H2 k P1 G1 H1 P' f a h1) (@lem8290800 A B P h P2 G2 H2 k P1 G1 H1 P' f a h1)). Qed.
Lemma lem8290807 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem8290808 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4150 A B P k P1 G1 H1 f a) = True.
Proof. exact (@lem8290807 ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8290809 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290803 A B P h P2 G2 H2 k P1 G1 H1 P' f a h1) (@lem8290808 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8290810 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1070 A B P p f a) = (term1070 A B P p f a).
Proof. exact (eq_refl (term1070 A B P p f a)). Qed.
Lemma lem8290811 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4083 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4151 A B P p f a).
Proof. exact (MK_COMB (@lem8290810 A B P p f a) (@lem8290809 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290813 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8290814 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term4151 A B P p f a) = True.
Proof. exact (@lem8290813 (p f a)). Qed.
Lemma lem8290815 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4083 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290811 A B P h k P2 P1 G2 G1 H2 H1 p P' f a h1) (@lem8290814 A B P p f a)). Qed.
Lemma lem8290816 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (eq_refl (term264 A B P lt2 s p)). Qed.
Lemma lem8290817 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4085 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4152 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8290816 A B P lt2 s p) (@lem8290815 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290819 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8290820 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term4152 A B P lt2 s p) = True.
Proof. exact (@lem8290819 (term262 A B P lt2 s p)). Qed.
Lemma lem8290821 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4085 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290817 A B P h k P2 P1 G2 G1 H2 H1 lt2 s p P' f a h1) (@lem8290820 A B P lt2 s p)). Qed.
Lemma lem8290822 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (eq_refl (term307 A B P p lt2 s P')). Qed.
Lemma lem8290823 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4086 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4153 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8290822 A B P p lt2 s P') (@lem8290821 A B P lt2 s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290825 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8290826 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term4153 A B P p lt2 s P') = True.
Proof. exact (@lem8290825 (term137 A B P p lt2 s P')). Qed.
Lemma lem8290827 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4086 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290823 A B P h k P2 P1 G2 G1 H2 H1 p lt2 s P' f a h1) (@lem8290826 A B P p lt2 s P')). Qed.
Lemma lem8290828 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4088 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8290827 A B P lt2 s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290829 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8290830 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4090 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2263 A).
Proof. exact (MK_COMB (@lem8290829 A) (@lem8290828 A B P s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290832 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290833 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8290832 (type1402 A) t). Qed.
Lemma lem8290834 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8290833 A True). Qed.
Lemma lem8290835 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4090 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290830 A B P s p h k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8290834 A)). Qed.
Lemma lem8290836 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4092 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8290835 A B P s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290837 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8290838 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4094 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2266 A P).
Proof. exact (MK_COMB (@lem8290837 A P) (@lem8290836 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290840 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290841 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8290840 (P -> A) t). Qed.
Lemma lem8290842 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8290841 A P True). Qed.
Lemma lem8290843 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4094 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290838 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8290842 A P)). Qed.
Lemma lem8290844 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4096 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8290843 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290845 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290846 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4098 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8290845 A B P) (@lem8290844 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290848 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290849 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8290848 (type560 A B P) t). Qed.
Lemma lem8290850 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8290849 A B P True). Qed.
Lemma lem8290851 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4098 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290846 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8290850 A B P)). Qed.
Lemma lem8290852 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4100 A B P k P2 P1 G2 G1 P' H2 H1 f a) = (term4154 A B P).
Proof. exact (fun_ext (fun h : type558 A B P => @lem8290851 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290853 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8290854 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4102 A B P k P2 P1 G2 G1 P' H2 H1 f a) = (term4155 A B P).
Proof. exact (MK_COMB (@lem8290853 A B P) (@lem8290852 A B P k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290856 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290857 {A B P : Type'} (t : Prop) : (term4156 A B P t) = t.
Proof. exact (@lem8290856 (type558 A B P) t). Qed.
Lemma lem8290858 {A B P : Type'} : (term4155 A B P) = True.
Proof. exact (@lem8290857 A B P True). Qed.
Lemma lem8290859 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4102 A B P k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290854 A B P k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8290858 A B P)). Qed.
Lemma lem8290860 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4104 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term4154 A B P).
Proof. exact (fun_ext (fun k : type558 A B P => @lem8290859 A B P k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290861 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8290862 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4106 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term4155 A B P).
Proof. exact (MK_COMB (@lem8290861 A B P) (@lem8290860 A B P P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290864 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290865 {A B P : Type'} (t : Prop) : (term4156 A B P t) = t.
Proof. exact (@lem8290864 (type558 A B P) t). Qed.
Lemma lem8290866 {A B P : Type'} : (term4155 A B P) = True.
Proof. exact (@lem8290865 A B P True). Qed.
Lemma lem8290867 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4106 A B P P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290862 A B P P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8290866 A B P)). Qed.
Lemma lem8290868 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4108 A B P P1 G2 G1 P' H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8290867 A B P P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290869 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290870 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4110 A B P P1 G2 G1 P' H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8290869 A B P) (@lem8290868 A B P P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290872 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290873 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8290872 (type560 A B P) t). Qed.
Lemma lem8290874 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8290873 A B P True). Qed.
Lemma lem8290875 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4110 A B P P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290870 A B P P1 G2 G1 H2 H1 P' f a h1) (@lem8290874 A B P)). Qed.
Lemma lem8290876 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4112 A B P G2 G1 P' H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8290875 A B P P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290877 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8290878 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4114 A B P G2 G1 P' H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8290877 A B P) (@lem8290876 A B P G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290880 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290881 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8290880 (type560 A B P) t). Qed.
Lemma lem8290882 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8290881 A B P True). Qed.
Lemma lem8290883 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4114 A B P G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290878 A B P G2 G1 H2 H1 P' f a h1) (@lem8290882 A B P)). Qed.
Lemma lem8290884 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4116 A B P G1 P' H2 H1 f a) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8290883 A B P G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290885 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8290886 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4118 A B P G1 P' H2 H1 f a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8290885 A B P) (@lem8290884 A B P G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290888 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290889 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8290888 (type557 A B P) t). Qed.
Lemma lem8290890 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8290889 A B P True). Qed.
Lemma lem8290891 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4118 A B P G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290886 A B P G1 H2 H1 P' f a h1) (@lem8290890 A B P)). Qed.
Lemma lem8290892 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4120 A B P P' H2 H1 f a) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8290891 A B P G1 H2 H1 P' f a h1)). Qed.
Lemma lem8290893 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8290894 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4122 A B P P' H2 H1 f a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8290893 A B P) (@lem8290892 A B P H2 H1 P' f a h1)). Qed.
Lemma lem8290896 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8290897 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8290896 (type557 A B P) t). Qed.
Lemma lem8290898 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8290897 A B P True). Qed.
Lemma lem8290899 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = False) : (term4122 A B P P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8290894 A B P H2 H1 P' f a h1) (@lem8290898 A B P)). Qed.
Lemma lem8290900 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4157 A B P P' H2 H1 f a.
Proof. exact (fun h0 : (P' f a) = False => @lem8290899 A B P H2 H1 P' f a h0). Qed.
Lemma lem8290980 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8290981 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8290982 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term373 A B P P' f a) = (~ True).
Proof. exact (MK_COMB (@lem8290981) (@lem8290980 A B P P' f a h1)). Qed.
Lemma lem8290984 : (~ True) = False.
Proof. exact (proj1 (@lem1504)). Qed.
Lemma lem8290985 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term373 A B P P' f a) = False.
Proof. exact (TRANS (@lem8290982 A B P P' f a h1) (@lem8290984)). Qed.
Lemma lem8290986 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8290987 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2033 A B P P' f a) = (imp False).
Proof. exact (MK_COMB (@lem8290986) (@lem8290985 A B P P' f a h1)). Qed.
Lemma lem8290990 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : ((k f a) = (term992 A B P P1 G1 H1 f a)) = ((k f a) = (term992 A B P P1 G1 H1 f a)).
Proof. exact (eq_refl ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8290991 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2034 A B P P' k P1 G1 H1 f a) = (term4145 A B P k P1 G1 H1 f a).
Proof. exact (MK_COMB (@lem8290987 A B P P' f a h1) (@lem8290990 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8290993 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8290994 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4145 A B P k P1 G1 H1 f a) = True.
Proof. exact (@lem8290993 ((k f a) = (term992 A B P P1 G1 H1 f a))). Qed.
Lemma lem8290995 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2034 A B P P' k P1 G1 H1 f a) = True.
Proof. exact (TRANS (@lem8290991 A B P k P1 G1 H1 P' f a h1) (@lem8290994 A B P k P1 G1 H1 f a)). Qed.
Lemma lem8290996 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8290997 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2035 A B P P' k P1 G1 H1 f a) = (and True).
Proof. exact (MK_COMB (@lem8290996) (@lem8290995 A B P k P1 G1 H1 P' f a h1)). Qed.
Lemma lem8290999 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8291000 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8291001 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1070 A B P P' f a) = (imp True).
Proof. exact (MK_COMB (@lem8291000) (@lem8290999 A B P P' f a h1)). Qed.
Lemma lem8291004 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : ((h f a) = (term992 A B P P2 G2 H2 f a)) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (eq_refl ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8291005 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2037 A B P P' h P2 G2 H2 f a) = (term4143 A B P h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8291001 A B P P' f a h1) (@lem8291004 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8291007 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8291008 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term4143 A B P h P2 G2 H2 f a) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (@lem8291007 ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8291011 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2037 A B P P' h P2 G2 H2 f a) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (TRANS (@lem8291005 A B P h P2 G2 H2 P' f a h1) (@lem8291008 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8291012 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2038 A B P k P1 G1 H1 P' h P2 G2 H2 f a) = (term4158 A B P h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8290997 A B P k P1 G1 H1 P' f a h1) (@lem8291011 A B P h P2 G2 H2 P' f a h1)). Qed.
Lemma lem8291014 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8291015 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term4158 A B P h P2 G2 H2 f a) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (@lem8291014 ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8291018 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2038 A B P k P1 G1 H1 P' h P2 G2 H2 f a) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (TRANS (@lem8291012 A B P k P1 G1 H1 h P2 G2 H2 P' f a h1) (@lem8291015 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8291019 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8291020 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2039 A B P k P1 G1 H1 P' h P2 G2 H2 f a) = (term4147 A B P h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8291019) (@lem8291018 A B P k P1 G1 H1 h P2 G2 H2 P' f a h1)). Qed.
Lemma lem8291022 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8291023 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8291024 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2043 A B P P' f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8291023 B) (@lem8291022 A B P P' f a h1)). Qed.
Lemma lem8291025 {A B P : Type'} (h : type558 A B P) (f : A -> B) (a : P) : (h f a) = (h f a).
Proof. exact (eq_refl (h f a)). Qed.
Lemma lem8291026 {A B P : Type'} (h : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2128 A B P P' h f a) = (term2162 A B P h f a).
Proof. exact (MK_COMB (@lem8291024 A B P P' f a h1) (@lem8291025 A B P h f a)). Qed.
Lemma lem8291027 {A B P : Type'} (k : type558 A B P) (f : A -> B) (a : P) : (k f a) = (k f a).
Proof. exact (eq_refl (k f a)). Qed.
Lemma lem8291028 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' h k f a) = (term2163 A B P h k f a).
Proof. exact (MK_COMB (@lem8291026 A B P h P' f a h1) (@lem8291027 A B P k f a)). Qed.
Lemma lem8291030 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8291031 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8291030 B t2 t1). Qed.
Lemma lem8291032 {A B P : Type'} (k : type558 A B P) (h : type558 A B P) (f : A -> B) (a : P) : (term2163 A B P h k f a) = (h f a).
Proof. exact (@lem8291031 B (k f a) (h f a)). Qed.
Lemma lem8291033 {A B P : Type'} (k : type558 A B P) (h : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' h k f a) = (h f a).
Proof. exact (TRANS (@lem8291028 A B P h k P' f a h1) (@lem8291032 A B P k h f a)). Qed.
Lemma lem8291034 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8291035 {A B P : Type'} (k : type558 A B P) (h : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1069 A B P P' h k f a) = (term2329 A B P h f a).
Proof. exact (MK_COMB (@lem8291034 B) (@lem8291033 A B P k h P' f a h1)). Qed.
Lemma lem8291037 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8291038 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8291039 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1432 A B P P' f a) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8291038) (@lem8291037 A B P P' f a h1)). Qed.
Lemma lem8291040 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (P2 f a).
Proof. exact (eq_refl (P2 f a)). Qed.
Lemma lem8291041 {A B P : Type'} (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1467 A B P P' P2 f a) = (term1481 A B P P2 f a).
Proof. exact (MK_COMB (@lem8291039 A B P P' f a h1) (@lem8291040 A B P P2 f a)). Qed.
Lemma lem8291042 {A B P : Type'} (P1 : type560 A B P) (f : A -> B) (a : P) : (P1 f a) = (P1 f a).
Proof. exact (eq_refl (P1 f a)). Qed.
Lemma lem8291043 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (term1482 A B P P2 P1 f a).
Proof. exact (MK_COMB (@lem8291041 A B P P2 P' f a h1) (@lem8291042 A B P P1 f a)). Qed.
Lemma lem8291045 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8291046 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8291045 Prop t2 t1). Qed.
Lemma lem8291047 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) : (term1482 A B P P2 P1 f a) = (P2 f a).
Proof. exact (@lem8291046 (P1 f a) (P2 f a)). Qed.
Lemma lem8291048 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1433 A B P P' P2 P1 f a) = (P2 f a).
Proof. exact (TRANS (@lem8291043 A B P P2 P1 P' f a h1) (@lem8291047 A B P P1 P2 f a)). Qed.
Lemma lem8291049 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8291050 {A B P : Type'} (P1 : type560 A B P) (P2 : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2040 A B P P' P2 P1 f a) = (term2043 A B P P2 f a).
Proof. exact (MK_COMB (@lem8291049 B) (@lem8291048 A B P P1 P2 P' f a h1)). Qed.
Lemma lem8291052 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8291053 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8291054 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1437 A B P P' f a) = (@COND A True).
Proof. exact (MK_COMB (@lem8291053 A) (@lem8291052 A B P P' f a h1)). Qed.
Lemma lem8291055 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (G2 f a).
Proof. exact (eq_refl (G2 f a)). Qed.
Lemma lem8291056 {A B P : Type'} (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1470 A B P P' G2 f a) = (term1483 A B P G2 f a).
Proof. exact (MK_COMB (@lem8291054 A B P P' f a h1) (@lem8291055 A B P G2 f a)). Qed.
Lemma lem8291057 {A B P : Type'} (G1 : type557 A B P) (f : A -> B) (a : P) : (G1 f a) = (G1 f a).
Proof. exact (eq_refl (G1 f a)). Qed.
Lemma lem8291058 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (term1484 A B P G2 G1 f a).
Proof. exact (MK_COMB (@lem8291056 A B P G2 P' f a h1) (@lem8291057 A B P G1 f a)). Qed.
Lemma lem8291060 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8291061 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8291060 A t2 t1). Qed.
Lemma lem8291062 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1484 A B P G2 G1 f a) = (G2 f a).
Proof. exact (@lem8291061 A (G1 f a) (G2 f a)). Qed.
Lemma lem8291063 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1438 A B P P' G2 G1 f a) = (G2 f a).
Proof. exact (TRANS (@lem8291058 A B P G2 G1 P' f a h1) (@lem8291062 A B P G1 G2 f a)). Qed.
Lemma lem8291064 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8291065 {A B P : Type'} (G1 : type557 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2041 A B P P' G2 G1 f a) = (term4148 A B P G2 f a).
Proof. exact (MK_COMB (@lem8291064 A B f) (@lem8291063 A B P G1 G2 P' f a h1)). Qed.
Lemma lem8291066 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2042 A B P P2 P1 P' G2 G1 f a) = (term4149 A B P P2 G2 f a).
Proof. exact (MK_COMB (@lem8291050 A B P P1 P2 P' f a h1) (@lem8291065 A B P G1 G2 P' f a h1)). Qed.
Lemma lem8291068 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (P' f a) = True.
Proof. exact (h1). Qed.
Lemma lem8291069 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8291070 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2043 A B P P' f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8291069 B) (@lem8291068 A B P P' f a h1)). Qed.
Lemma lem8291071 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8291072 {A B P : Type'} (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2128 A B P P' H2 f a) = (term2162 A B P H2 f a).
Proof. exact (MK_COMB (@lem8291070 A B P P' f a h1) (@lem8291071 A B P H2 f a)). Qed.
Lemma lem8291073 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (H1 f a) = (H1 f a).
Proof. exact (eq_refl (H1 f a)). Qed.
Lemma lem8291074 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' H2 H1 f a) = (term2163 A B P H2 H1 f a).
Proof. exact (MK_COMB (@lem8291072 A B P H2 P' f a h1) (@lem8291073 A B P H1 f a)). Qed.
Lemma lem8291076 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8291077 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8291076 B t2 t1). Qed.
Lemma lem8291078 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term2163 A B P H2 H1 f a) = (H2 f a).
Proof. exact (@lem8291077 B (H1 f a) (H2 f a)). Qed.
Lemma lem8291079 {A B P : Type'} (H1 : type558 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term1064 A B P P' H2 H1 f a) = (H2 f a).
Proof. exact (TRANS (@lem8291074 A B P H2 H1 P' f a h1) (@lem8291078 A B P H1 H2 f a)). Qed.
Lemma lem8291080 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2047 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term992 A B P P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8291066 A B P P1 G1 P2 G2 P' f a h1) (@lem8291079 A B P H1 H2 P' f a h1)). Qed.
Lemma lem8291081 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : ((term1064 A B P P' h k f a) = (term2047 A B P P2 P1 G2 G1 P' H2 H1 f a)) = ((h f a) = (term992 A B P P2 G2 H2 f a)).
Proof. exact (MK_COMB (@lem8291035 A B P k h P' f a h1) (@lem8291080 A B P P1 G1 H1 P2 G2 H2 P' f a h1)). Qed.
Lemma lem8291084 {A B P : Type'} (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term4150 A B P h P2 G2 H2 f a).
Proof. exact (MK_COMB (@lem8291020 A B P k P1 G1 H1 h P2 G2 H2 P' f a h1) (@lem8291081 A B P k P1 G1 H1 h P2 G2 H2 P' f a h1)). Qed.
Lemma lem8291088 (t : Prop) : (t -> t) = True.
Proof. exact (proj1 (@lem1823 t)). Qed.
Lemma lem8291089 {A B P : Type'} (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term4150 A B P h P2 G2 H2 f a) = True.
Proof. exact (@lem8291088 ((h f a) = (term992 A B P P2 G2 H2 f a))). Qed.
Lemma lem8291090 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291084 A B P k P1 G1 H1 h P2 G2 H2 P' f a h1) (@lem8291089 A B P h P2 G2 H2 f a)). Qed.
Lemma lem8291091 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term1070 A B P p f a) = (term1070 A B P p f a).
Proof. exact (eq_refl (term1070 A B P p f a)). Qed.
Lemma lem8291092 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4083 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4151 A B P p f a).
Proof. exact (MK_COMB (@lem8291091 A B P p f a) (@lem8291090 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291094 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8291095 {A B P : Type'} (p : type560 A B P) (f : A -> B) (a : P) : (term4151 A B P p f a) = True.
Proof. exact (@lem8291094 (p f a)). Qed.
Lemma lem8291096 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4083 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291092 A B P h k P2 P1 G2 G1 H2 H1 p P' f a h1) (@lem8291095 A B P p f a)). Qed.
Lemma lem8291097 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term264 A B P lt2 s p) = (term264 A B P lt2 s p).
Proof. exact (eq_refl (term264 A B P lt2 s p)). Qed.
Lemma lem8291098 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4085 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4152 A B P lt2 s p).
Proof. exact (MK_COMB (@lem8291097 A B P lt2 s p) (@lem8291096 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291100 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8291101 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) : (term4152 A B P lt2 s p) = True.
Proof. exact (@lem8291100 (term262 A B P lt2 s p)). Qed.
Lemma lem8291102 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4085 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291098 A B P h k P2 P1 G2 G1 H2 H1 lt2 s p P' f a h1) (@lem8291101 A B P lt2 s p)). Qed.
Lemma lem8291103 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term307 A B P p lt2 s P') = (term307 A B P p lt2 s P').
Proof. exact (eq_refl (term307 A B P p lt2 s P')). Qed.
Lemma lem8291104 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4086 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term4153 A B P p lt2 s P').
Proof. exact (MK_COMB (@lem8291103 A B P p lt2 s P') (@lem8291102 A B P lt2 s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291106 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8291107 {A B P : Type'} (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) : (term4153 A B P p lt2 s P') = True.
Proof. exact (@lem8291106 (term137 A B P p lt2 s P')). Qed.
Lemma lem8291108 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4086 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291104 A B P h k P2 P1 G2 G1 H2 H1 p lt2 s P' f a h1) (@lem8291107 A B P p lt2 s P')). Qed.
Lemma lem8291109 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4088 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2262 A).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8291108 A B P lt2 s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291110 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8291111 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4090 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2263 A).
Proof. exact (MK_COMB (@lem8291110 A) (@lem8291109 A B P s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291113 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291114 {A : Type'} (t : Prop) : (term2264 A t) = t.
Proof. exact (@lem8291113 (type1402 A) t). Qed.
Lemma lem8291115 {A : Type'} : (term2263 A) = True.
Proof. exact (@lem8291114 A True). Qed.
Lemma lem8291116 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4090 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291111 A B P s p h k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8291115 A)). Qed.
Lemma lem8291117 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4092 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2265 A P).
Proof. exact (fun_ext (fun s : P -> A => @lem8291116 A B P s p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291118 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8291119 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4094 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = (term2266 A P).
Proof. exact (MK_COMB (@lem8291118 A P) (@lem8291117 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291121 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291122 {A P : Type'} (t : Prop) : (term2267 A P t) = t.
Proof. exact (@lem8291121 (P -> A) t). Qed.
Lemma lem8291123 {A P : Type'} : (term2266 A P) = True.
Proof. exact (@lem8291122 A P True). Qed.
Lemma lem8291124 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4094 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291119 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8291123 A P)). Qed.
Lemma lem8291125 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4096 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun p : type560 A B P => @lem8291124 A B P p h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291126 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8291127 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4098 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8291126 A B P) (@lem8291125 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291129 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291130 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8291129 (type560 A B P) t). Qed.
Lemma lem8291131 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8291130 A B P True). Qed.
Lemma lem8291132 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4098 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291127 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8291131 A B P)). Qed.
Lemma lem8291133 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4100 A B P k P2 P1 G2 G1 P' H2 H1 f a) = (term4154 A B P).
Proof. exact (fun_ext (fun h : type558 A B P => @lem8291132 A B P h k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291134 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8291135 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4102 A B P k P2 P1 G2 G1 P' H2 H1 f a) = (term4155 A B P).
Proof. exact (MK_COMB (@lem8291134 A B P) (@lem8291133 A B P k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291137 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291138 {A B P : Type'} (t : Prop) : (term4156 A B P t) = t.
Proof. exact (@lem8291137 (type558 A B P) t). Qed.
Lemma lem8291139 {A B P : Type'} : (term4155 A B P) = True.
Proof. exact (@lem8291138 A B P True). Qed.
Lemma lem8291140 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4102 A B P k P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291135 A B P k P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8291139 A B P)). Qed.
Lemma lem8291141 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4104 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term4154 A B P).
Proof. exact (fun_ext (fun k : type558 A B P => @lem8291140 A B P k P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291142 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8291143 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4106 A B P P2 P1 G2 G1 P' H2 H1 f a) = (term4155 A B P).
Proof. exact (MK_COMB (@lem8291142 A B P) (@lem8291141 A B P P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291145 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291146 {A B P : Type'} (t : Prop) : (term4156 A B P t) = t.
Proof. exact (@lem8291145 (type558 A B P) t). Qed.
Lemma lem8291147 {A B P : Type'} : (term4155 A B P) = True.
Proof. exact (@lem8291146 A B P True). Qed.
Lemma lem8291148 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4106 A B P P2 P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291143 A B P P2 P1 G2 G1 H2 H1 P' f a h1) (@lem8291147 A B P)). Qed.
Lemma lem8291149 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4108 A B P P1 G2 G1 P' H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8291148 A B P P2 P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291150 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8291151 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4110 A B P P1 G2 G1 P' H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8291150 A B P) (@lem8291149 A B P P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291153 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291154 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8291153 (type560 A B P) t). Qed.
Lemma lem8291155 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8291154 A B P True). Qed.
Lemma lem8291156 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4110 A B P P1 G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291151 A B P P1 G2 G1 H2 H1 P' f a h1) (@lem8291155 A B P)). Qed.
Lemma lem8291157 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4112 A B P G2 G1 P' H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun P1 : type560 A B P => @lem8291156 A B P P1 G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291158 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8291159 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4114 A B P G2 G1 P' H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8291158 A B P) (@lem8291157 A B P G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291161 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291162 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8291161 (type560 A B P) t). Qed.
Lemma lem8291163 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8291162 A B P True). Qed.
Lemma lem8291164 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4114 A B P G2 G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291159 A B P G2 G1 H2 H1 P' f a h1) (@lem8291163 A B P)). Qed.
Lemma lem8291165 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4116 A B P G1 P' H2 H1 f a) = (term2271 A B P).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8291164 A B P G2 G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291166 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8291167 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4118 A B P G1 P' H2 H1 f a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8291166 A B P) (@lem8291165 A B P G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291169 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291170 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8291169 (type557 A B P) t). Qed.
Lemma lem8291171 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8291170 A B P True). Qed.
Lemma lem8291172 {A B P : Type'} (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4118 A B P G1 P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291167 A B P G1 H2 H1 P' f a h1) (@lem8291171 A B P)). Qed.
Lemma lem8291173 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4120 A B P P' H2 H1 f a) = (term2271 A B P).
Proof. exact (fun_ext (fun G1 : type557 A B P => @lem8291172 A B P G1 H2 H1 P' f a h1)). Qed.
Lemma lem8291174 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8291175 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4122 A B P P' H2 H1 f a) = (term2272 A B P).
Proof. exact (MK_COMB (@lem8291174 A B P) (@lem8291173 A B P H2 H1 P' f a h1)). Qed.
Lemma lem8291177 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8291178 {A B P : Type'} (t : Prop) : (term2273 A B P t) = t.
Proof. exact (@lem8291177 (type557 A B P) t). Qed.
Lemma lem8291179 {A B P : Type'} : (term2272 A B P) = True.
Proof. exact (@lem8291178 A B P True). Qed.
Lemma lem8291180 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) (h1 : (P' f a) = True) : (term4122 A B P P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291175 A B P H2 H1 P' f a h1) (@lem8291179 A B P)). Qed.
Lemma lem8291181 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4159 A B P P' H2 H1 f a.
Proof. exact (fun h0 : (P' f a) = True => @lem8291180 A B P H2 H1 P' f a h0). Qed.
Lemma lem8291182 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4160 A B P P' H2 H1 f a.
Proof. exact (conj (@lem8290900 A B P P' H2 H1 f a) (@lem8291181 A B P P' H2 H1 f a)). Qed.
Lemma lem8291184 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term1460 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8291185 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : term4161 A B P H2 H1 P' f a.
Proof. exact (@lem8291184 (term4122 A B P P' H2 H1 f a) True (P' f a) True). Qed.
Lemma lem8291186 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (P' : type560 A B P) (f : A -> B) (a : P) : (term4122 A B P P' H2 H1 f a) = (term2286 A B P P' f a).
Proof. exact (@lem8291185 A B P H2 H1 P' f a (@lem8291182 A B P P' H2 H1 f a)). Qed.
Lemma lem8291188 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8291189 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term1463 A B P P' f a) = True.
Proof. exact (@lem8291188 (P' f a)). Qed.
Lemma lem8291191 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8291192 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2287 A B P P' f a) = True.
Proof. exact (@lem8291191 (term373 A B P P' f a)). Qed.
Lemma lem8291193 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8291194 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2288 A B P P' f a) = (and True).
Proof. exact (MK_COMB (@lem8291193) (@lem8291192 A B P P' f a)). Qed.
Lemma lem8291195 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2286 A B P P' f a) = (True /\ True).
Proof. exact (MK_COMB (@lem8291194 A B P P' f a) (@lem8291189 A B P P' f a)). Qed.
Lemma lem8291197 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8291198 : (True /\ True) = True.
Proof. exact (@lem8291197 True). Qed.
Lemma lem8291199 {A B P : Type'} (P' : type560 A B P) (f : A -> B) (a : P) : (term2286 A B P P' f a) = True.
Proof. exact (TRANS (@lem8291195 A B P P' f a) (@lem8291198)). Qed.
Lemma lem8291204 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4122 A B P P' H2 H1 f a) = True.
Proof. exact (TRANS (@lem8291186 A B P H2 H1 P' f a) (@lem8291199 A B P P' f a)). Qed.
Lemma lem8291205 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4124 A B P H2 H1 f a) = (term2268 A B P).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8291204 A B P P' H2 H1 f a)). Qed.
Lemma lem8291206 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8291207 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4126 A B P H2 H1 f a) = (term2269 A B P).
Proof. exact (MK_COMB (@lem8291206 A B P) (@lem8291205 A B P H2 H1 f a)). Qed.
Lemma lem8291208 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (term4128 A B P H1 f a) = (term4162 A B P).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8291207 A B P H2 H1 f a)). Qed.
Lemma lem8291209 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8291210 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (term4130 A B P H1 f a) = (term4163 A B P).
Proof. exact (MK_COMB (@lem8291209 A B P) (@lem8291208 A B P H1 f a)). Qed.
Lemma lem8291211 {A B P : Type'} (f : A -> B) (a : P) : (term4132 A B P f a) = (term4164 A B P).
Proof. exact (fun_ext (fun H1 : type558 A B P => @lem8291210 A B P H1 f a)). Qed.
Lemma lem8291212 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8291213 {A B P : Type'} (f : A -> B) (a : P) : (term4134 A B P f a) = (term4165 A B P).
Proof. exact (MK_COMB (@lem8291212 A B P) (@lem8291211 A B P f a)). Qed.
Lemma lem8291214 {A B P : Type'} (a : P) : (term4136 A B P a) = (term4166 A B P).
Proof. exact (fun_ext (fun f : A -> B => @lem8291213 A B P f a)). Qed.
Lemma lem8291215 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8291216 {A B P : Type'} (a : P) : (term4138 A B P a) = (term4167 A B P).
Proof. exact (MK_COMB (@lem8291215 A B) (@lem8291214 A B P a)). Qed.
Lemma lem8291217 {A B P : Type'} : (term4140 A B P) = (term4168 A B P).
Proof. exact (fun_ext (fun a : P => @lem8291216 A B P a)). Qed.
Lemma lem8291218 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8291219 {A B P : Type'} : (term4142 A B P) = (term4169 A B P).
Proof. exact (MK_COMB (@lem8291218 P) (@lem8291217 A B P)). Qed.
Lemma lem8291220 {A B P : Type'} : (term4141 A B P) = (term4169 A B P).
Proof. exact (TRANS (@lem8290617 A B P) (@lem8291219 A B P)). Qed.
Lemma lem8291222 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8291223 {P : Type'} (t : Prop) : (term1445 P t) = t.
Proof. exact (@lem8291222 P t). Qed.
Lemma lem8291224 {A B P : Type'} : (term4169 A B P) = (term4167 A B P).
Proof. exact (@lem8291223 P (term4167 A B P)). Qed.
Lemma lem8291226 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8291227 {A B : Type'} (t : Prop) : (term2489 A B t) = t.
Proof. exact (@lem8291226 (A -> B) t). Qed.
Lemma lem8291228 {A B P : Type'} : (term4167 A B P) = (term4165 A B P).
Proof. exact (@lem8291227 A B (term4165 A B P)). Qed.
Lemma lem8291230 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8291231 {A B P : Type'} (t : Prop) : (term4156 A B P t) = t.
Proof. exact (@lem8291230 (type558 A B P) t). Qed.
Lemma lem8291232 {A B P : Type'} : (term4165 A B P) = (term4163 A B P).
Proof. exact (@lem8291231 A B P (term4163 A B P)). Qed.
Lemma lem8291234 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8291235 {A B P : Type'} (t : Prop) : (term4156 A B P t) = t.
Proof. exact (@lem8291234 (type558 A B P) t). Qed.
Lemma lem8291236 {A B P : Type'} : (term4163 A B P) = (term2269 A B P).
Proof. exact (@lem8291235 A B P (term2269 A B P)). Qed.
Lemma lem8291238 {A : Type'} (t : Prop) : (term1445 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8291239 {A B P : Type'} (t : Prop) : (term2270 A B P t) = t.
Proof. exact (@lem8291238 (type560 A B P) t). Qed.
Lemma lem8291240 {A B P : Type'} : (term2269 A B P) = True.
Proof. exact (@lem8291239 A B P True). Qed.
Lemma lem8291241 {A B P : Type'} : (term4163 A B P) = True.
Proof. exact (TRANS (@lem8291236 A B P) (@lem8291240 A B P)). Qed.
Lemma lem8291242 {A B P : Type'} : (term4165 A B P) = True.
Proof. exact (TRANS (@lem8291232 A B P) (@lem8291241 A B P)). Qed.
Lemma lem8291243 {A B P : Type'} : (term4167 A B P) = True.
Proof. exact (TRANS (@lem8291228 A B P) (@lem8291242 A B P)). Qed.
Lemma lem8291244 {A B P : Type'} : (term4169 A B P) = True.
Proof. exact (TRANS (@lem8291224 A B P) (@lem8291243 A B P)). Qed.
Lemma lem8291245 {A B P : Type'} : (term4141 A B P) = True.
Proof. exact (TRANS (@lem8291220 A B P) (@lem8291244 A B P)). Qed.
Lemma lem8291246 {A B P : Type'} : True = (term4141 A B P).
Proof. exact (SYM (@lem8291245 A B P)). Qed.
Lemma lem8291247 {A B P : Type'} : term4141 A B P.
Proof. exact (EQ_MP (@lem8291246 A B P) (@lem0)). Qed.
Lemma lem8291248 {A B P : Type'} (a : P) : term4170 A B P a.
Proof. exact (@lem8291247 A B P a). Qed.
Lemma lem8291249 {A B P : Type'} (a : P) : (term4170 A B P a) = (term4137 A B P a).
Proof. exact (eq_refl (term4170 A B P a)). Qed.
Lemma lem8291250 {A B P : Type'} (a : P) : term4137 A B P a.
Proof. exact (EQ_MP (@lem8291249 A B P a) (@lem8291248 A B P a)). Qed.
Lemma lem8291251 {A B P : Type'} (a : P) (f : A -> B) : term4171 A B P a f.
Proof. exact (@lem8291250 A B P a f). Qed.
Lemma lem8291252 {A B P : Type'} (f : A -> B) (a : P) : (term4171 A B P a f) = (term4133 A B P f a).
Proof. exact (eq_refl (term4171 A B P a f)). Qed.
Lemma lem8291253 {A B P : Type'} (f : A -> B) (a : P) : term4133 A B P f a.
Proof. exact (EQ_MP (@lem8291252 A B P f a) (@lem8291251 A B P a f)). Qed.
Lemma lem8291254 {A B P : Type'} (f : A -> B) (a : P) (H1 : type558 A B P) : term4172 A B P f a H1.
Proof. exact (@lem8291253 A B P f a H1). Qed.
Lemma lem8291255 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : (term4172 A B P f a H1) = (term4129 A B P H1 f a).
Proof. exact (eq_refl (term4172 A B P f a H1)). Qed.
Lemma lem8291256 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) : term4129 A B P H1 f a.
Proof. exact (EQ_MP (@lem8291255 A B P H1 f a) (@lem8291254 A B P f a H1)). Qed.
Lemma lem8291257 {A B P : Type'} (H1 : type558 A B P) (f : A -> B) (a : P) (H2 : type558 A B P) : term4173 A B P H1 f a H2.
Proof. exact (@lem8291256 A B P H1 f a H2). Qed.
Lemma lem8291258 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4173 A B P H1 f a H2) = (term4125 A B P H2 H1 f a).
Proof. exact (eq_refl (term4173 A B P H1 f a H2)). Qed.
Lemma lem8291259 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4125 A B P H2 H1 f a.
Proof. exact (EQ_MP (@lem8291258 A B P H2 H1 f a) (@lem8291257 A B P H1 f a H2)). Qed.
Lemma lem8291260 {A B P : Type'} (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (P' : type560 A B P) : term4174 A B P H2 H1 f a P'.
Proof. exact (@lem8291259 A B P H2 H1 f a P'). Qed.
Lemma lem8291261 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4174 A B P H2 H1 f a P') = (term4121 A B P P' H2 H1 f a).
Proof. exact (eq_refl (term4174 A B P H2 H1 f a P')). Qed.
Lemma lem8291262 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4121 A B P P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291261 A B P P' H2 H1 f a) (@lem8291260 A B P H2 H1 f a P')). Qed.
Lemma lem8291263 {A B P : Type'} (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (G1 : type557 A B P) : term4175 A B P P' H2 H1 f a G1.
Proof. exact (@lem8291262 A B P P' H2 H1 f a G1). Qed.
Lemma lem8291264 {A B P : Type'} (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4175 A B P P' H2 H1 f a G1) = (term4117 A B P G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4175 A B P P' H2 H1 f a G1)). Qed.
Lemma lem8291265 {A B P : Type'} (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4117 A B P G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291264 A B P G1 P' H2 H1 f a) (@lem8291263 A B P P' H2 H1 f a G1)). Qed.
Lemma lem8291266 {A B P : Type'} (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (G2 : type557 A B P) : term4176 A B P G1 P' H2 H1 f a G2.
Proof. exact (@lem8291265 A B P G1 P' H2 H1 f a G2). Qed.
Lemma lem8291267 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4176 A B P G1 P' H2 H1 f a G2) = (term4113 A B P G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4176 A B P G1 P' H2 H1 f a G2)). Qed.
Lemma lem8291268 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4113 A B P G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291267 A B P G2 G1 P' H2 H1 f a) (@lem8291266 A B P G1 P' H2 H1 f a G2)). Qed.
Lemma lem8291269 {A B P : Type'} (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (P1 : type560 A B P) : term4177 A B P G2 G1 P' H2 H1 f a P1.
Proof. exact (@lem8291268 A B P G2 G1 P' H2 H1 f a P1). Qed.
Lemma lem8291270 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4177 A B P G2 G1 P' H2 H1 f a P1) = (term4109 A B P P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4177 A B P G2 G1 P' H2 H1 f a P1)). Qed.
Lemma lem8291271 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4109 A B P P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291270 A B P P1 G2 G1 P' H2 H1 f a) (@lem8291269 A B P G2 G1 P' H2 H1 f a P1)). Qed.
Lemma lem8291272 {A B P : Type'} (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (P2 : type560 A B P) : term4178 A B P P1 G2 G1 P' H2 H1 f a P2.
Proof. exact (@lem8291271 A B P P1 G2 G1 P' H2 H1 f a P2). Qed.
Lemma lem8291273 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4178 A B P P1 G2 G1 P' H2 H1 f a P2) = (term4105 A B P P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4178 A B P P1 G2 G1 P' H2 H1 f a P2)). Qed.
Lemma lem8291274 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4105 A B P P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291273 A B P P2 P1 G2 G1 P' H2 H1 f a) (@lem8291272 A B P P1 G2 G1 P' H2 H1 f a P2)). Qed.
Lemma lem8291275 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (k : type558 A B P) : term4179 A B P P2 P1 G2 G1 P' H2 H1 f a k.
Proof. exact (@lem8291274 A B P P2 P1 G2 G1 P' H2 H1 f a k). Qed.
Lemma lem8291276 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4179 A B P P2 P1 G2 G1 P' H2 H1 f a k) = (term4101 A B P k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4179 A B P P2 P1 G2 G1 P' H2 H1 f a k)). Qed.
Lemma lem8291277 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4101 A B P k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291276 A B P k P2 P1 G2 G1 P' H2 H1 f a) (@lem8291275 A B P P2 P1 G2 G1 P' H2 H1 f a k)). Qed.
Lemma lem8291278 {A B P : Type'} (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (h : type558 A B P) : term4180 A B P k P2 P1 G2 G1 P' H2 H1 f a h.
Proof. exact (@lem8291277 A B P k P2 P1 G2 G1 P' H2 H1 f a h). Qed.
Lemma lem8291279 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4180 A B P k P2 P1 G2 G1 P' H2 H1 f a h) = (term4097 A B P h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4180 A B P k P2 P1 G2 G1 P' H2 H1 f a h)). Qed.
Lemma lem8291280 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4097 A B P h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291279 A B P h k P2 P1 G2 G1 P' H2 H1 f a) (@lem8291278 A B P k P2 P1 G2 G1 P' H2 H1 f a h)). Qed.
Lemma lem8291281 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (p : type560 A B P) : term4181 A B P h k P2 P1 G2 G1 P' H2 H1 f a p.
Proof. exact (@lem8291280 A B P h k P2 P1 G2 G1 P' H2 H1 f a p). Qed.
Lemma lem8291282 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4181 A B P h k P2 P1 G2 G1 P' H2 H1 f a p) = (term4093 A B P p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4181 A B P h k P2 P1 G2 G1 P' H2 H1 f a p)). Qed.
Lemma lem8291283 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4093 A B P p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291282 A B P p h k P2 P1 G2 G1 P' H2 H1 f a) (@lem8291281 A B P h k P2 P1 G2 G1 P' H2 H1 f a p)). Qed.
Lemma lem8291284 {A B P : Type'} (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (s : P -> A) : term4182 A B P p h k P2 P1 G2 G1 P' H2 H1 f a s.
Proof. exact (@lem8291283 A B P p h k P2 P1 G2 G1 P' H2 H1 f a s). Qed.
Lemma lem8291285 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4182 A B P p h k P2 P1 G2 G1 P' H2 H1 f a s) = (term4089 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4182 A B P p h k P2 P1 G2 G1 P' H2 H1 f a s)). Qed.
Lemma lem8291286 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4089 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291285 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a) (@lem8291284 A B P p h k P2 P1 G2 G1 P' H2 H1 f a s)). Qed.
Lemma lem8291287 {A B P : Type'} (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (lt2 : type1402 A) : term4183 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a lt2.
Proof. exact (@lem8291286 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a lt2). Qed.
Lemma lem8291288 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : (term4183 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a lt2) = (term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a).
Proof. exact (eq_refl (term4183 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a lt2)). Qed.
Lemma lem8291289 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8291288 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a) (@lem8291287 A B P s p h k P2 P1 G2 G1 P' H2 H1 f a lt2)). Qed.
Lemma lem8291291 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (p : type560 A B P) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) : term4077 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8290382 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a (@lem8291289 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a)). Qed.
Lemma lem8291292 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term4084 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8291291 A B P lt2 s p h k P2 P1 G2 G1 P' H2 H1 f a (@lem8249446 A B P p lt2 s P' h1)). Qed.
Lemma lem8291293 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4082 A B P p h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8291292 A B P h k P2 P1 G2 G1 H2 H1 f a p lt2 s P' h2 (@lem8249448 A B P lt2 s p h1)). Qed.
Lemma lem8291294 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : p f a) : term4075 A B P h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (@lem8291293 A B P h k P2 P1 G2 G1 H2 H1 f a p lt2 s P' h1 h2 (@lem8269769 A B P p f a h3)). Qed.
Lemma lem8291295 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a) (h4 : p f a) : False.
Proof. exact (@lem8291294 A B P h k P2 P1 G2 G1 H2 H1 lt2 s P' p f a h1 h2 h4 (@lem8290366 A B P h k P2 P1 G2 G1 P' H2 H1 f a h3)). Qed.
Lemma lem8291296 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a) (h4 : p f a) : (term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a) = False.
Proof. exact (prop_ext (fun h5 : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a => @lem8291295 A B P lt2 s h k P2 P1 G2 G1 P' H2 H1 p f a h1 h2 h3 h4) (fun h5 : False => @lem8290366 A B P h k P2 P1 G2 G1 P' H2 H1 f a h3)). Qed.
Lemma lem8291297 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a) (h4 : p f a) : False.
Proof. exact (EQ_MP (@lem8291296 A B P lt2 s h k P2 P1 G2 G1 P' H2 H1 p f a h1 h2 h3 h4) (@lem8290366 A B P h k P2 P1 G2 G1 P' H2 H1 f a h3)). Qed.
Lemma lem8291298 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : p f a) : term4075 A B P h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (fun h0 : term4076 A B P h k P2 P1 G2 G1 P' H2 H1 f a => @lem8291297 A B P lt2 s h k P2 P1 G2 G1 P' H2 H1 p f a h1 h2 h0 h3). Qed.
Lemma lem8291299 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : p f a) : term2049 A B P h k P2 P1 G2 G1 P' H2 H1 f a.
Proof. exact (EQ_MP (@lem8290365 A B P h k P2 P1 G2 G1 P' H2 H1 f a) (@lem8291298 A B P h k P2 P1 G2 G1 H2 H1 lt2 s P' p f a h1 h2 h3)). Qed.
Lemma lem8291300 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : p f a) : term2048 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w.
Proof. exact (EQ_MP (@lem8270106 A B P h k P2 P1 G2 G1 z P' H2 H1 w p f a h3) (@lem8291299 A B P h k P2 P1 G2 G1 H2 H1 lt2 s P' p f a h1 h2 h3)). Qed.
Lemma lem8291301 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (h1 : term162 A B P lt2 s a f g) : term2030 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (EQ_MP (@lem8269972 A B P P2 P1 G2 G1 z p P' H2 H1 w lt2 s a f g h1) (@lem8290361 A B P P2 P1 G2 G1 z p P' H2 H1 w lt2 s a f g h1)). Qed.
Lemma lem8291302 {A B P : Type'} (z : A) (w : B) (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (p : type560 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) (h4 : p f a) : (term1064 A B P P' h k f a) = (term1361 A B P P2 P1 G2 G1 z p P' H2 H1 f a w).
Proof. exact (@lem8291300 A B P h k P2 P1 G2 G1 z H2 H1 w lt2 s P' p f a h1 h2 h4 (@lem8269768 A B P k P1 G1 H1 p P' h P2 G2 H2 f a h3)). Qed.
Lemma lem8291303 {A B P : Type'} (z : A) (w : B) (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a) : term1363 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w.
Proof. exact (fun h0 : p f a => @lem8291302 A B P z w lt2 s k P1 G1 H1 P' h P2 G2 H2 p f a h1 h2 h3 h0). Qed.
Lemma lem8291304 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (a : P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term2002 A B P h k P2 P1 G2 G1 z p P' H2 H1 f a w.
Proof. exact (fun h0 : term1905 A B P k P1 G1 H1 p P' h P2 G2 H2 f a => @lem8291303 A B P z w lt2 s k P1 G1 H1 p P' h P2 G2 H2 f a h1 h2 h0). Qed.
Lemma lem8291305 {A B P : Type'} (z : A) (w : B) (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term162 A B P lt2 s a f g) (h2 : term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) : term1337 A B P P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (@lem8291301 A B P P2 P1 G2 G1 z p P' H2 H1 w lt2 s a f g h1 (@lem8269766 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a h2)). Qed.
Lemma lem8291306 {A B P : Type'} (z : A) (w : B) (p : type560 A B P) (P' : type560 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (h1 : term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a) : term1339 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term162 A B P lt2 s a f g => @lem8291305 A B P z w p P' P1 G1 H1 lt2 s P2 G2 f H2 g a h0 h1). Qed.
Lemma lem8291307 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (a : P) (w : B) : term1962 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w.
Proof. exact (fun h0 : term1861 A B P p P' P1 G1 H1 lt2 s P2 G2 f H2 g a => @lem8291306 A B P z w p P' P1 G1 H1 lt2 s P2 G2 f H2 g a h0). Qed.
Lemma lem8291312 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term2006 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w.
Proof. exact (fun a : P => @lem8291304 A B P h k P2 P1 G2 G1 z H2 H1 f a w p lt2 s P' h1 h2). Qed.
Lemma lem8291313 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (f : A -> B) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1982 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w.
Proof. exact (@lem8269763 A B P h k P2 P1 G2 G1 z p P' H2 H1 f w (@lem8291312 A B P h k P2 P1 G2 G1 z H2 H1 f w p lt2 s P' h1 h2)). Qed.
Lemma lem8291318 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1986 A B P h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (fun f : A -> B => @lem8291313 A B P h k P2 P1 G2 G1 z H2 H1 f w p lt2 s P' h1 h2). Qed.
Lemma lem8291319 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1914 A B P h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8269736 A B P h k P2 P1 G2 G1 z p P' H2 H1 w (@lem8291318 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291324 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : term1966 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w.
Proof. exact (fun a : P => @lem8291307 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g a w). Qed.
Lemma lem8291325 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (g : A -> B) (w : B) : term1942 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w.
Proof. exact (@lem8269707 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w (@lem8291324 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w)). Qed.
Lemma lem8291330 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1946 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w.
Proof. exact (fun g : A -> B => @lem8291325 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 g w). Qed.
Lemma lem8291331 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (f : A -> B) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1922 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w.
Proof. exact (@lem8269680 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w (@lem8291330 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w)). Qed.
Lemma lem8291336 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1926 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (fun f : A -> B => @lem8291331 A B P lt2 s P2 P1 G2 G1 z f p P' H2 H1 w). Qed.
Lemma lem8291337 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1871 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8269653 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w (@lem8291336 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8291338 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1913 A B P h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (EQ_MP (@lem8269626 A B P h k P2 P1 G2 G1 z p P' H2 H1 w) (@lem8291319 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291339 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (p : type560 A B P) (P' : type560 A B P) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) : term1689 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (EQ_MP (@lem8269521 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w) (@lem8291337 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w)). Qed.
Lemma lem8291340 {A B P : Type'} (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4184 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8291339 A B P lt2 s P2 P1 G2 G1 z p P' H2 H1 w (@lem8268997 A B P p lt2 s P' h1 h2)). Qed.
Lemma lem8291341 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4185 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (conj (@lem8291340 A B P P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2) (@lem8291338 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291342 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4186 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8264510 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w (@lem8291341 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291343 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4187 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (conj (@lem8268996 A B P P2 P1 G2 G1 z p lt2 s P' h1 h2) (@lem8291342 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291344 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1378 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8264505 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w (@lem8291343 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291345 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (P2 : type560 A B P) (P1 : type560 A B P) (G2 : type557 A B P) (G1 : type557 A B P) (z : A) (H2 : type558 A B P) (H1 : type558 A B P) (w : B) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1377 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (EQ_MP (@lem8264502 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w) (@lem8291344 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2)). Qed.
Lemma lem8291346 {A B P : Type'} (z : A) (w : B) (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) : term1374 A B P lt2 s h k P2 P1 G2 G1 z p P' H2 H1 w.
Proof. exact (@lem8291345 A B P h k P2 P1 G2 G1 z H2 H1 w p lt2 s P' h1 h2 (@lem8263856 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2 h3)). Qed.
Lemma lem8291347 {A B P : Type'} (z : A) (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) : term4188 A B P lt2 s h k P2 P1 p P' G2 G1 z.
Proof. exact (ex_intro (term4189 A B P lt2 s h k P2 P1 p P' G2 G1 z) (term4190 A B P p P' H2 H1) (@lem8291346 A B P z (@el B) lt2 s k P1 G1 H1 p P' h P2 G2 H2 h1 h2 h3)). Qed.
Lemma lem8291348 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) : term4191 A B P lt2 s h k p P' P2 P1.
Proof. exact (ex_intro (term4192 A B P lt2 s h k p P' P2 P1) (term4193 A B P p P' G2 G1) (@lem8291347 A B P (@el A) lt2 s k P1 G1 H1 p P' h P2 G2 H2 h1 h2 h3)). Qed.
Lemma lem8291349 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (k : type558 A B P) (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (p : type560 A B P) (P' : type560 A B P) (h : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2) : term1095 A B P lt2 s p P' h k.
Proof. exact (ex_intro (term1094 A B P lt2 s p P' h k) (term1259 A B P p P' P2 P1) (@lem8291348 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2 h1 h2 h3)). Qed.
Lemma lem8291350 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1253 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k.
Proof. exact (fun h0 : term1256 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2 => @lem8291349 A B P lt2 s k P1 G1 H1 p P' h P2 G2 H2 h1 h2 h0). Qed.
Lemma lem8291351 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1239 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k.
Proof. exact (EQ_MP (@lem8263855 A B P P1 G1 H1 P2 G2 H2 lt2 s p P' h k) (@lem8291350 A B P P1 G1 H1 P2 G2 H2 h k p lt2 s P' h1 h2)). Qed.
Lemma lem8291356 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1242 A B P P1 G1 H1 P2 G2 lt2 s p P' h k.
Proof. exact (fun H2 : type558 A B P => @lem8291351 A B P P1 G1 H1 P2 G2 H2 h k p lt2 s P' h1 h2). Qed.
Lemma lem8291361 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (P2 : type560 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1244 A B P P1 G1 H1 P2 lt2 s p P' h k.
Proof. exact (fun G2 : type557 A B P => @lem8291356 A B P P1 G1 H1 P2 G2 h k p lt2 s P' h1 h2). Qed.
Lemma lem8291366 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (H1 : type558 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1246 A B P P1 G1 H1 lt2 s p P' h k.
Proof. exact (fun P2 : type560 A B P => @lem8291361 A B P P1 G1 H1 P2 h k p lt2 s P' h1 h2). Qed.
Lemma lem8291371 {A B P : Type'} (P1 : type560 A B P) (G1 : type557 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1248 A B P P1 G1 lt2 s p P' h k.
Proof. exact (fun H1 : type558 A B P => @lem8291366 A B P P1 G1 H1 h k p lt2 s P' h1 h2). Qed.
Lemma lem8291376 {A B P : Type'} (P1 : type560 A B P) (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1250 A B P P1 lt2 s p P' h k.
Proof. exact (fun G1 : type557 A B P => @lem8291371 A B P P1 G1 h k p lt2 s P' h1 h2). Qed.
Lemma lem8291381 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1252 A B P lt2 s p P' h k.
Proof. exact (fun P1 : type560 A B P => @lem8291376 A B P P1 h k p lt2 s P' h1 h2). Qed.
Lemma lem8291382 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1099 A B P lt2 s p P' h k.
Proof. exact (EQ_MP (@lem8263639 A B P lt2 s p P' h k) (@lem8291381 A B P h k p lt2 s P' h1 h2)). Qed.
Lemma lem8291383 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term1098 A B P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8262915 A B P lt2 p s P' h k) (@lem8291382 A B P h k p lt2 s P' h1 h2)). Qed.
Lemma lem8291384 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term237 A B P lt2 p P' s k) : term1096 A B P lt2 p s P' h k.
Proof. exact (@lem8291383 A B P h k p lt2 s P' h1 h2 (@lem8255930 A B P lt2 p P' s k h3)). Qed.
Lemma lem8291385 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term237 A B P lt2 p P' s k) : term4194 A B P lt2 p s P' h k.
Proof. exact (conj (@lem8262411 A B P p lt2 s P' h1 h2) (@lem8291384 A B P h lt2 p P' s k h1 h2 h3)). Qed.
Lemma lem8291386 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term237 A B P lt2 p P' s k) : term295 A B P lt2 p s P' h k.
Proof. exact (@lem8255943 A B P lt2 p s P' h k (@lem8291385 A B P h lt2 p P' s k h1 h2 h3)). Qed.
Lemma lem8291387 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4195 A B P lt2 p s P' h k.
Proof. exact (fun h0 : term237 A B P lt2 p P' s k => @lem8291386 A B P h lt2 p P' s k h1 h2 h0). Qed.
Lemma lem8291388 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4196 A B P lt2 p s P' h k.
Proof. exact (conj (@lem8255929 A B P p lt2 s P' h1 h2) (@lem8291387 A B P h k p lt2 s P' h1 h2)). Qed.
Lemma lem8291389 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') : term4197 A B P lt2 p s P' h k.
Proof. exact (@lem8249453 A B P lt2 p s P' h k (@lem8291388 A B P h k p lt2 s P' h1 h2)). Qed.
Lemma lem8291390 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term240 A B P h lt2 p P' s k) : term238 A B P lt2 p P' s k.
Proof. exact (proj2 (@lem8249447 A B P h lt2 p P' s k h1)). Qed.
Lemma lem8291391 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term240 A B P h lt2 p P' s k) : term199 A B P lt2 p P' s h.
Proof. exact (proj1 (@lem8249447 A B P h lt2 p P' s k h1)). Qed.
Lemma lem8291392 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term238 A B P lt2 p P' s k) : term295 A B P lt2 p s P' h k.
Proof. exact (@lem8291389 A B P h k p lt2 s P' h1 h2 (@lem8249449 A B P lt2 p P' s k h3)). Qed.
Lemma lem8291393 {A B P : Type'} (k : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term238 A B P lt2 p P' s k) (h4 : term199 A B P lt2 p P' s h) : term265 A B P lt2 p s P' h k.
Proof. exact (@lem8291392 A B P h lt2 p P' s k h1 h2 h3 (@lem8249450 A B P lt2 p P' s h h4)). Qed.
Lemma lem8291394 {A B P : Type'} (k : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term240 A B P h lt2 p P' s k) (h4 : term199 A B P lt2 p P' s h) : (term238 A B P lt2 p P' s k) = (term265 A B P lt2 p s P' h k).
Proof. exact (prop_ext (fun h5 : term238 A B P lt2 p P' s k => @lem8291393 A B P k lt2 p P' s h h1 h2 h5 h4) (fun h5 : term265 A B P lt2 p s P' h k => @lem8291390 A B P h lt2 p P' s k h3)). Qed.
Lemma lem8291395 {A B P : Type'} (k : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (h : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term240 A B P h lt2 p P' s k) (h4 : term199 A B P lt2 p P' s h) : term265 A B P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8291394 A B P k lt2 p P' s h h1 h2 h3 h4) (@lem8291390 A B P h lt2 p P' s k h3)). Qed.
Lemma lem8291396 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term240 A B P h lt2 p P' s k) : (term199 A B P lt2 p P' s h) = (term265 A B P lt2 p s P' h k).
Proof. exact (prop_ext (fun h4 : term199 A B P lt2 p P' s h => @lem8291395 A B P k lt2 p P' s h h1 h2 h3 h4) (fun h4 : term265 A B P lt2 p s P' h k => @lem8291391 A B P h lt2 p P' s k h3)). Qed.
Lemma lem8291397 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term262 A B P lt2 s p) (h2 : term137 A B P p lt2 s P') (h3 : term240 A B P h lt2 p P' s k) : term265 A B P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8291396 A B P h lt2 p P' s k h1 h2 h3) (@lem8291391 A B P h lt2 p P' s k h3)). Qed.
Lemma lem8291398 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term137 A B P p lt2 s P') (h2 : term240 A B P h lt2 p P' s k) : term266 A B P lt2 p s P' h k.
Proof. exact (fun h0 : term262 A B P lt2 s p => @lem8291397 A B P h lt2 p P' s k h0 h1 h2). Qed.
Lemma lem8291399 {A B P : Type'} (h : type558 A B P) (k : type558 A B P) (p : type560 A B P) (lt2 : type1402 A) (s : P -> A) (P' : type560 A B P) (h1 : term137 A B P p lt2 s P') : term4198 A B P lt2 p s P' h k.
Proof. exact (fun h0 : term240 A B P h lt2 p P' s k => @lem8291398 A B P h lt2 p P' s k h1 h0). Qed.
Lemma lem8291400 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term242 A B P h lt2 p P' s k) : term240 A B P h lt2 p P' s k.
Proof. exact (proj2 (@lem8249444 A B P h lt2 p P' s k h1)). Qed.
Lemma lem8291401 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term242 A B P h lt2 p P' s k) : term137 A B P p lt2 s P'.
Proof. exact (proj1 (@lem8249444 A B P h lt2 p P' s k h1)). Qed.
Lemma lem8291402 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term137 A B P p lt2 s P') (h2 : term240 A B P h lt2 p P' s k) : term266 A B P lt2 p s P' h k.
Proof. exact (@lem8291399 A B P h k p lt2 s P' h1 (@lem8249445 A B P h lt2 p P' s k h2)). Qed.
Lemma lem8291403 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term137 A B P p lt2 s P') (h2 : term240 A B P h lt2 p P' s k) : (term137 A B P p lt2 s P') = (term266 A B P lt2 p s P' h k).
Proof. exact (prop_ext (fun h3 : term137 A B P p lt2 s P' => @lem8291402 A B P h lt2 p P' s k h1 h2) (fun h3 : term266 A B P lt2 p s P' h k => @lem8249446 A B P p lt2 s P' h1)). Qed.
Lemma lem8291404 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term137 A B P p lt2 s P') (h2 : term240 A B P h lt2 p P' s k) : term266 A B P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8291403 A B P h lt2 p P' s k h1 h2) (@lem8249446 A B P p lt2 s P' h1)). Qed.
Lemma lem8291405 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term137 A B P p lt2 s P') (h2 : term242 A B P h lt2 p P' s k) : (term240 A B P h lt2 p P' s k) = (term266 A B P lt2 p s P' h k).
Proof. exact (prop_ext (fun h3 : term240 A B P h lt2 p P' s k => @lem8291404 A B P h lt2 p P' s k h1 h3) (fun h3 : term266 A B P lt2 p s P' h k => @lem8291400 A B P h lt2 p P' s k h2)). Qed.
Lemma lem8291406 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term137 A B P p lt2 s P') (h2 : term242 A B P h lt2 p P' s k) : term266 A B P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8291405 A B P h lt2 p P' s k h1 h2) (@lem8291400 A B P h lt2 p P' s k h2)). Qed.
Lemma lem8291407 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term242 A B P h lt2 p P' s k) : (term137 A B P p lt2 s P') = (term266 A B P lt2 p s P' h k).
Proof. exact (prop_ext (fun h2 : term137 A B P p lt2 s P' => @lem8291406 A B P h lt2 p P' s k h2 h1) (fun h2 : term266 A B P lt2 p s P' h k => @lem8291401 A B P h lt2 p P' s k h1)). Qed.
Lemma lem8291408 {A B P : Type'} (h : type558 A B P) (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) (s : P -> A) (k : type558 A B P) (h1 : term242 A B P h lt2 p P' s k) : term266 A B P lt2 p s P' h k.
Proof. exact (EQ_MP (@lem8291407 A B P h lt2 p P' s k h1) (@lem8291401 A B P h lt2 p P' s k h1)). Qed.
Lemma lem8291409 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) (k : type558 A B P) : term268 A B P lt2 p s P' h k.
Proof. exact (fun h0 : term242 A B P h lt2 p P' s k => @lem8291408 A B P h lt2 p P' s k h0). Qed.
Lemma lem8291414 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) (h : type558 A B P) : term272 A B P lt2 p s P' h.
Proof. exact (fun k : type558 A B P => @lem8291409 A B P lt2 p s P' h k). Qed.
Lemma lem8291419 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (s : P -> A) (P' : type560 A B P) : term276 A B P lt2 p s P'.
Proof. exact (fun h : type558 A B P => @lem8291414 A B P lt2 p s P' h). Qed.
Lemma lem8291424 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) (P' : type560 A B P) : term280 A B P lt2 p P'.
Proof. exact (fun s : P -> A => @lem8291419 A B P lt2 p s P'). Qed.
Lemma lem8291429 {A B P : Type'} (lt2 : type1402 A) (p : type560 A B P) : term284 A B P lt2 p.
Proof. exact (fun P' : type560 A B P => @lem8291424 A B P lt2 p P'). Qed.
Lemma lem8291434 {A B P : Type'} (lt2 : type1402 A) : term288 A B P lt2.
Proof. exact (fun p : type560 A B P => @lem8291429 A B P lt2 p). Qed.
Lemma lem8291439 {A B P : Type'} : term292 A B P.
Proof. exact (fun lt2 : type1402 A => @lem8291434 A B P lt2). Qed.
Lemma lem8291440 {A B P : Type'} : term291 A B P.
Proof. exact (EQ_MP (@lem8249443 A B P) (@lem8291439 A B P)). Qed.
