require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem1106112 [_25594] : Prf ((λ FILTER' : El (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun _25594 bool) (fun (list _25594) (list _25594)))), (∀ (λ _18022 : El (prod num (prod num (prod num (prod num (prod num num))))), (∧ (∀ (λ P : El (fun _25594 bool), (= (FILTER' _18022 P (@NIL _25594)) (@NIL _25594)))) (∀ (λ h : El _25594, (∀ (λ P : El (fun _25594 bool), (∀ (λ t : El (list _25594), (= (FILTER' _18022 P ((@CONS _25594) h t)) ((@COND (list _25594)) (P h) ((@CONS _25594) h (FILTER' _18022 P t)) (FILTER' _18022 P t))))))))))))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun _25594 bool) (fun (list _25594) (list _25594))))) (λ FILTER' : El (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun _25594 bool) (fun (list _25594) (list _25594)))), (∀ (λ _18022 : El (prod num (prod num (prod num (prod num (prod num num))))), (∧ (∀ (λ P : El (fun _25594 bool), (= (FILTER' _18022 P (@NIL _25594)) (@NIL _25594)))) (∀ (λ h : El _25594, (∀ (λ P : El (fun _25594 bool), (∀ (λ t : El (list _25594), (= (FILTER' _18022 P ((@CONS _25594) h t)) ((@COND (list _25594)) (P h) ((@CONS _25594) h (FILTER' _18022 P t)) (FILTER' _18022 P t)))))))))))))));
