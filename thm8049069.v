Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm8049069_term_abbrevs.
Require Import thm13473_spec.
Lemma lem8049052 {_143061 _143062 _143063 : Type'} (_474 : type16 _143061 _143062 _143063) (_475 : Prop) (_476 : type51 _143061 _143062 _143063) (_477 : type16 _143061 _143062 _143063) : (term0 _143061 _143062 _143063 _476 _475 _474 _477) = (term1 _143061 _143062 _143063 _474 _475 _476 _477).
Proof. exact (@lem13473 (type16 _143061 _143062 _143063) _474 _475 _476 _477). Qed.
Lemma lem8049053 {_143061 _143062 _143063 : Type'} (_474 : type16 _143061 _143062 _143063) (_475 : Prop) (f : type56 _143061 _143062) (t : type24 _143061 _143063) (_477 : type16 _143061 _143062 _143063) : (term2 _143061 _143062 _143063 f t _475 _474 _477) = (term3 _143061 _143062 _143063 _474 _475 f t _477).
Proof. exact (@lem8049052 _143061 _143062 _143063 _474 _475 (term4 _143061 _143062 _143063 f t) _477). Qed.
Lemma lem8049054 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term5 _143061 _143062 _143063 f t) = (term6 _143061 _143062 _143063 f t).
Proof. exact (@lem8049053 _143061 _143062 _143063 (@PCROSS _143061 _143062 _143063 (@UNIV (cart _143061 _143062)) t) (f = (@EMPTY ((cart _143061 _143062) -> Prop))) f t (term7 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049055 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term8 _143061 _143062 _143063 f t) = ((term9 _143061 _143062 _143063 f t) = (term7 _143061 _143062 _143063 f t)).
Proof. exact (eq_refl (term8 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049056 {_143061 _143062 : Type'} (f : type56 _143061 _143062) : (term10 _143061 _143062 f) = (term10 _143061 _143062 f).
Proof. exact (eq_refl (term10 _143061 _143062 f)). Qed.
Lemma lem8049057 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term11 _143061 _143062 _143063 f t) = (term12 _143061 _143062 _143063 f t).
Proof. exact (MK_COMB (@lem8049056 _143061 _143062 f) (@lem8049055 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049058 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term13 _143061 _143062 _143063 f t) = ((term9 _143061 _143062 _143063 f t) = (@PCROSS _143061 _143062 _143063 (@UNIV (cart _143061 _143062)) t)).
Proof. exact (eq_refl (term13 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049059 {_143061 _143062 : Type'} (f : type56 _143061 _143062) : (term14 _143061 _143062 f) = (term14 _143061 _143062 f).
Proof. exact (eq_refl (term14 _143061 _143062 f)). Qed.
Lemma lem8049060 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term15 _143061 _143062 _143063 f t) = (term16 _143061 _143062 _143063 f t).
Proof. exact (MK_COMB (@lem8049059 _143061 _143062 f) (@lem8049058 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049061 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8049062 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term17 _143061 _143062 _143063 f t) = (term18 _143061 _143062 _143063 f t).
Proof. exact (MK_COMB (@lem8049061) (@lem8049060 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049063 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term6 _143061 _143062 _143063 f t) = (term19 _143061 _143062 _143063 f t).
Proof. exact (MK_COMB (@lem8049062 _143061 _143062 _143063 f t) (@lem8049057 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049064 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term5 _143061 _143062 _143063 f t) = ((term9 _143061 _143062 _143063 f t) = (term20 _143061 _143062 _143063 f t)).
Proof. exact (eq_refl (term5 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049065 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8049066 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term21 _143061 _143062 _143063 f t) = (term22 _143061 _143062 _143063 f t).
Proof. exact (MK_COMB (@lem8049065) (@lem8049064 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049067 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : ((term5 _143061 _143062 _143063 f t) = (term6 _143061 _143062 _143063 f t)) = (((term9 _143061 _143062 _143063 f t) = (term20 _143061 _143062 _143063 f t)) = (term19 _143061 _143062 _143063 f t)).
Proof. exact (MK_COMB (@lem8049066 _143061 _143062 _143063 f t) (@lem8049063 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049068 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : ((term9 _143061 _143062 _143063 f t) = (term20 _143061 _143062 _143063 f t)) = (term19 _143061 _143062 _143063 f t).
Proof. exact (EQ_MP (@lem8049067 _143061 _143062 _143063 f t) (@lem8049054 _143061 _143062 _143063 f t)). Qed.
Lemma lem8049069 {_143061 _143062 _143063 : Type'} (f : type56 _143061 _143062) (t : type24 _143061 _143063) : (term19 _143061 _143062 _143063 f t) = ((term9 _143061 _143062 _143063 f t) = (term20 _143061 _143062 _143063 f t)).
Proof. exact (SYM (@lem8049068 _143061 _143062 _143063 f t)). Qed.
