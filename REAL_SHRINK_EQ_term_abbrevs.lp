require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term23 (x0: El real) ≔ (∀ (λ y0 : El real, (= (= (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0)))) (= x0 y0))));
symbol term10 (x0: El real) ≔ (∀ (λ y0 : El real, (= (real_le (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0)))) (real_le x0 y0))));
symbol term3 (x0: El real) ≔ (∀ (λ y0 : El real, (= (∧ (real_le x0 y0) (real_le y0 x0)) (= x0 y0))));
symbol term2 (x0: El real) ≔ (λ y0 : El real, (= (= x0 y0) (∧ (real_le x0 y0) (real_le y0 x0))));
symbol term25 a0 (x0: El bool) ≔ (∀ (λ y0 : El a0, x0));
symbol term22 ≔ (λ y0 : El real, T);
symbol term21 (x0: El real) ≔ (λ y0 : El real, (= (= (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0)))) (= x0 y0)));
symbol term14 (x0: El real) (x1: El real) ≔ ((λ y0 : El real, (= (= x0 y0) (∧ (real_le x0 y0) (real_le y0 x0)))) x1);
symbol term24 ≔ (∀ (λ y0 : El real, T));
symbol term26 (x0: El bool) ≔ (∀ (λ y0 : El real, x0));
symbol term28 ≔ (∀ (λ y0 : El real, (∀ (λ y1 : El real, (= (= (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0))) (real_div y1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y1)))) (= y0 y1))))));
symbol term8 ≔ (∀ (λ y0 : El real, (∀ (λ y1 : El real, (= (= y0 y1) (∧ (real_le y0 y1) (real_le y1 y0)))))));
symbol term7 ≔ (∀ (λ y0 : El real, (∀ (λ y1 : El real, (= (∧ (real_le y0 y1) (real_le y1 y0)) (= y0 y1))))));
symbol term6 ≔ (λ y0 : El real, (∀ (λ y1 : El real, (= (= y0 y1) (∧ (real_le y0 y1) (real_le y1 y0))))));
symbol term0 (x0: El real) (x1: El real) ≔ (∧ (real_le x1 x0) (real_le x0 x1));
symbol term27 ≔ (λ y0 : El real, (∀ (λ y1 : El real, (= (= (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0))) (real_div y1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y1)))) (= y0 y1)))));
symbol term5 ≔ (λ y0 : El real, (∀ (λ y1 : El real, (= (∧ (real_le y0 y1) (real_le y1 y0)) (= y0 y1)))));
symbol term13 (x0: El real) ≔ ((λ y0 : El real, (∀ (λ y1 : El real, (= (= y0 y1) (∧ (real_le y0 y1) (real_le y1 y0)))))) x0);
symbol term9 (x0: El real) ≔ ((λ y0 : El real, (∀ (λ y1 : El real, (= (real_le (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0))) (real_div y1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y1)))) (real_le y0 y1))))) x0);
symbol term15 (x0: El real) ≔ (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0)));
symbol term1 (x0: El real) ≔ (λ y0 : El real, (= (∧ (real_le x0 y0) (real_le y0 x0)) (= x0 y0)));
symbol term19 (x0: El real) (x1: El real) ≔ ((@= bool) (= (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div x1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x1)))));
symbol term18 (x0: El real) (x1: El real) ≔ (∧ (real_le x0 x1));
symbol term4 (x0: El real) ≔ (∀ (λ y0 : El real, (= (= x0 y0) (∧ (real_le x0 y0) (real_le y0 x0)))));
symbol term20 (x0: El real) (x1: El real) ≔ ((@= bool) (∧ (real_le x1 x0) (real_le x0 x1)));
symbol term11 (x0: El real) (x1: El real) ≔ ((λ y0 : El real, (= (real_le (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div y0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs y0)))) (real_le x0 y0))) x1);
symbol term17 (x0: El real) (x1: El real) ≔ (∧ (real_le (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div x1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x1)))));
symbol term12 (x0: El real) (x1: El real) ≔ (real_le (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div x1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x1))));
symbol term16 (x0: El real) (x1: El real) ≔ (∧ (real_le (real_div x1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x1))) (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0)))) (real_le (real_div x0 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x0))) (real_div x1 (real_add (real_of_num (NUMERAL (BIT1 _0))) (real_abs x1)))));
