Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0.
Definition term47 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := forall y0 : type1633 a0 a1 a2 a3, forall y1 : a3, forall y2 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (@CASEWISE a0 a1 a2 a3 y0 y1 y2)).
Definition term46 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := forall y0 : type1633 a0 a1 a2 a3, forall y1 : a3, forall y2 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y3 : type1248 a0 a1 a2 a3 => forall y4 : type1669, (forall y5 : a3, forall y6 : a2, (y3 y4 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y5 y6) = (@ε a0 (fun y7 : a0 => True))) /\ (forall y5 : type1644 a0 a1 a2 a3, forall y6 : type1633 a0 a1 a2 a3, forall y7 : a3, forall y8 : a2, (y3 y4 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y5 y6) y7 y8) = (@COND a0 (exists y9 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8) (@snd (a1 -> a2) (a3 -> a1 -> a0) y5 y7 (@ε a1 (fun y9 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8))) (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y3 : type1248 a0 a1 a2 a3 => forall y4 : type1669, (forall y5 : a3, forall y6 : a2, (y3 y4 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y5 y6) = (@ε a0 (fun y7 : a0 => True))) /\ (forall y5 : type1644 a0 a1 a2 a3, forall y6 : type1633 a0 a1 a2 a3, forall y7 : a3, forall y8 : a2, (y3 y4 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y5 y6) y7 y8) = (@COND a0 (exists y9 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8) (@snd (a1 -> a2) (a3 -> a1 -> a0) y5 y7 (@ε a1 (fun y9 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8))) (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) y0 y1 y2)).
Definition term39 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := forall y0 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (@CASEWISE a0 a1 a2 a3 x1 x2 y0)).
Definition term38 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := forall y0 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y1 : type1248 a0 a1 a2 a3 => forall y2 : type1669, (forall y3 : a3, forall y4 : a2, (y1 y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y1 y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y1 : type1248 a0 a1 a2 a3 => forall y2 : type1669, (forall y3 : a3, forall y4 : a2, (y1 y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y1 y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x1 x2 y0)).
Definition term26 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 x3.
Definition term35 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := @COND a0 (exists y0 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y0) = x3) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y0 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y0) = x3))) (@CASEWISE a0 a1 a2 a3 x1 x2 x3).
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) (x1 : a2) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 x1.
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := (fun y0 : type1669 => (forall y1 : a3, forall y2 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y3 : type1248 a0 a1 a2 a3 => forall y4 : type1669, (forall y5 : a3, forall y6 : a2, (y3 y4 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y5 y6) = (@ε a0 (fun y7 : a0 => True))) /\ (forall y5 : type1644 a0 a1 a2 a3, forall y6 : type1633 a0 a1 a2 a3, forall y7 : a3, forall y8 : a2, (y3 y4 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y5 y6) y7 y8) = (@COND a0 (exists y9 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8) (@snd (a1 -> a2) (a3 -> a1 -> a0) y5 y7 (@ε a1 (fun y9 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8))) (y3 y4 y6 y7 y8)))) y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y5 : type1248 a0 a1 a2 a3 => forall y6 : type1669, (forall y7 : a3, forall y8 : a2, (y5 y6 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y7 y8) = (@ε a0 (fun y9 : a0 => True))) /\ (forall y7 : type1644 a0 a1 a2 a3, forall y8 : type1633 a0 a1 a2 a3, forall y9 : a3, forall y10 : a2, (y5 y6 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y7 y8) y9 y10) = (@COND a0 (exists y11 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10) (@snd (a1 -> a2) (a3 -> a1 -> a0) y7 y9 (@ε a1 (fun y11 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10))) (y5 y6 y8 y9 y10)))) y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y5 : type1248 a0 a1 a2 a3 => forall y6 : type1669, (forall y7 : a3, forall y8 : a2, (y5 y6 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y7 y8) = (@ε a0 (fun y9 : a0 => True))) /\ (forall y7 : type1644 a0 a1 a2 a3, forall y8 : type1633 a0 a1 a2 a3, forall y9 : a3, forall y10 : a2, (y5 y6 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y7 y8) y9 y10) = (@COND a0 (exists y11 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10) (@snd (a1 -> a2) (a3 -> a1 -> a0) y7 y9 (@ε a1 (fun y11 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10))) (y5 y6 y8 y9 y10)))) y0 y2 y3 y4)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))).
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5))))).
Definition term11 (a0 : Type') := @ε a0 (fun y0 : a0 => True).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : type1669, (forall y1 : a3, forall y2 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y3 : type1248 a0 a1 a2 a3 => forall y4 : type1669, (forall y5 : a3, forall y6 : a2, (y3 y4 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y5 y6) = (@ε a0 (fun y7 : a0 => True))) /\ (forall y5 : type1644 a0 a1 a2 a3, forall y6 : type1633 a0 a1 a2 a3, forall y7 : a3, forall y8 : a2, (y3 y4 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y5 y6) y7 y8) = (@COND a0 (exists y9 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8) (@snd (a1 -> a2) (a3 -> a1 -> a0) y5 y7 (@ε a1 (fun y9 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8))) (y3 y4 y6 y7 y8)))) y0 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y1 y2) = (@ε a0 (fun y3 : a0 => True))) /\ (forall y1 : type1644 a0 a1 a2 a3, forall y2 : type1633 a0 a1 a2 a3, forall y3 : a3, forall y4 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y5 : type1248 a0 a1 a2 a3 => forall y6 : type1669, (forall y7 : a3, forall y8 : a2, (y5 y6 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y7 y8) = (@ε a0 (fun y9 : a0 => True))) /\ (forall y7 : type1644 a0 a1 a2 a3, forall y8 : type1633 a0 a1 a2 a3, forall y9 : a3, forall y10 : a2, (y5 y6 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y7 y8) y9 y10) = (@COND a0 (exists y11 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10) (@snd (a1 -> a2) (a3 -> a1 -> a0) y7 y9 (@ε a1 (fun y11 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10))) (y5 y6 y8 y9 y10)))) y0 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y1 y2) y3 y4) = (@COND a0 (exists y5 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4) (@snd (a1 -> a2) (a3 -> a1 -> a0) y1 y3 (@ε a1 (fun y5 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y1 y5) = y4))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y5 : type1248 a0 a1 a2 a3 => forall y6 : type1669, (forall y7 : a3, forall y8 : a2, (y5 y6 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y7 y8) = (@ε a0 (fun y9 : a0 => True))) /\ (forall y7 : type1644 a0 a1 a2 a3, forall y8 : type1633 a0 a1 a2 a3, forall y9 : a3, forall y10 : a2, (y5 y6 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y7 y8) y9 y10) = (@COND a0 (exists y11 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10) (@snd (a1 -> a2) (a3 -> a1 -> a0) y7 y9 (@ε a1 (fun y11 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y7 y11) = y10))) (y5 y6 y8 y9 y10)))) y0 y2 y3 y4))).
Definition term30 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1633 a0 a1 a2 a3) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x0.
Definition term34 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := @COND a0 (exists y0 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y0) = x3) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y0 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y0) = x3))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x1 x2 x3).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))).
Definition term49 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1644 a0 a1 a2 a3 => forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@CASEWISE a0 a1 a2 a3 y1 y2 y3)).
Definition term48 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type1644 a0 a1 a2 a3 => forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y4 : type1248 a0 a1 a2 a3 => forall y5 : type1669, (forall y6 : a3, forall y7 : a2, (y4 y5 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y6 y7) = (@ε a0 (fun y8 : a0 => True))) /\ (forall y6 : type1644 a0 a1 a2 a3, forall y7 : type1633 a0 a1 a2 a3, forall y8 : a3, forall y9 : a2, (y4 y5 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y6 y7) y8 y9) = (@COND a0 (exists y10 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9) (@snd (a1 -> a2) (a3 -> a1 -> a0) y6 y8 (@ε a1 (fun y10 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9))) (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y4 : type1248 a0 a1 a2 a3 => forall y5 : type1669, (forall y6 : a3, forall y7 : a2, (y4 y5 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y6 y7) = (@ε a0 (fun y8 : a0 => True))) /\ (forall y6 : type1644 a0 a1 a2 a3, forall y7 : type1633 a0 a1 a2 a3, forall y8 : a3, forall y9 : a2, (y4 y5 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y6 y7) y8 y9) = (@COND a0 (exists y10 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9) (@snd (a1 -> a2) (a3 -> a1 -> a0) y6 y8 (@ε a1 (fun y10 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9))) (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) y1 y2 y3)).
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) := fun y0 : a2 => (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y1 : type1248 a0 a1 a2 a3 => forall y2 : type1669, (forall y3 : a3, forall y4 : a2, (y1 y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y1 y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 y0) = (@ε a0 (fun y1 : a0 => True)).
Definition term27 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := @CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 x3.
Definition term24 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2.
Definition term37 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := fun y0 : a2 => (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (@CASEWISE a0 a1 a2 a3 x1 x2 y0)).
Definition term28 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := @eq a0 (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 x3).
Definition term51 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@CASEWISE a0 a1 a2 a3 y1 y2 y3)).
Definition term50 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y4 : type1248 a0 a1 a2 a3 => forall y5 : type1669, (forall y6 : a3, forall y7 : a2, (y4 y5 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y6 y7) = (@ε a0 (fun y8 : a0 => True))) /\ (forall y6 : type1644 a0 a1 a2 a3, forall y7 : type1633 a0 a1 a2 a3, forall y8 : a3, forall y9 : a2, (y4 y5 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y6 y7) y8 y9) = (@COND a0 (exists y10 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9) (@snd (a1 -> a2) (a3 -> a1 -> a0) y6 y8 (@ε a1 (fun y10 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9))) (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y4 : type1248 a0 a1 a2 a3 => forall y5 : type1669, (forall y6 : a3, forall y7 : a2, (y4 y5 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y6 y7) = (@ε a0 (fun y8 : a0 => True))) /\ (forall y6 : type1644 a0 a1 a2 a3, forall y7 : type1633 a0 a1 a2 a3, forall y8 : a3, forall y9 : a2, (y4 y5 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y6 y7) y8 y9) = (@COND a0 (exists y10 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9) (@snd (a1 -> a2) (a3 -> a1 -> a0) y6 y8 (@ε a1 (fun y10 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9))) (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) y1 y2 y3)).
Definition term3 := @pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))))))))).
Definition term33 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) (x1 : type1644 a0 a1 a2 a3) (x2 : a2) := @COND a0 (exists y0 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x1 y0) = x2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x1 x0 (@ε a1 (fun y0 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x1 y0) = x2))).
Definition term32 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1633 a0 a1 a2 a3) (x1 : a3) (x2 : a2) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x0 x1 x2.
Definition term45 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := fun y0 : type1633 a0 a1 a2 a3 => forall y1 : a3, forall y2 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (@CASEWISE a0 a1 a2 a3 y0 y1 y2)).
Definition term44 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) := fun y0 : type1633 a0 a1 a2 a3 => forall y1 : a3, forall y2 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y3 : type1248 a0 a1 a2 a3 => forall y4 : type1669, (forall y5 : a3, forall y6 : a2, (y3 y4 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y5 y6) = (@ε a0 (fun y7 : a0 => True))) /\ (forall y5 : type1644 a0 a1 a2 a3, forall y6 : type1633 a0 a1 a2 a3, forall y7 : a3, forall y8 : a2, (y3 y4 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y5 y6) y7 y8) = (@COND a0 (exists y9 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8) (@snd (a1 -> a2) (a3 -> a1 -> a0) y5 y7 (@ε a1 (fun y9 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8))) (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 y0) y1 y2) = (@COND a0 (exists y3 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y1 (@ε a1 (fun y3 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y3) = y2))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y3 : type1248 a0 a1 a2 a3 => forall y4 : type1669, (forall y5 : a3, forall y6 : a2, (y3 y4 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y5 y6) = (@ε a0 (fun y7 : a0 => True))) /\ (forall y5 : type1644 a0 a1 a2 a3, forall y6 : type1633 a0 a1 a2 a3, forall y7 : a3, forall y8 : a2, (y3 y4 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y5 y6) y7 y8) = (@COND a0 (exists y9 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8) (@snd (a1 -> a2) (a3 -> a1 -> a0) y5 y7 (@ε a1 (fun y9 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y5 y9) = y8))) (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) y0 y1 y2)).
Definition term29 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) (x3 : a2) := @eq a0 (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 x3).
Definition term25 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := @CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2.
Definition term31 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1633 a0 a1 a2 a3) (x1 : a3) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x0 x1.
Definition term41 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := fun y0 : a3 => forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (@CASEWISE a0 a1 a2 a3 x1 y0 y1)).
Definition term40 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := fun y0 : a3 => forall y1 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x1 y0 y1)).
Definition term22 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1).
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) (x1 : a2) := @eq a0 (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 x1).
Definition term43 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := forall y0 : a3, forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (@CASEWISE a0 a1 a2 a3 x1 y0 y1)).
Definition term42 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := forall y0 : a3, forall y1 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) y0 y1) = (@COND a0 (exists y2 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 y0 (@ε a1 (fun y2 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y2) = y1))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x1 y0 y1)).
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : a3, forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True)).
Definition term18 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : a3, forall y1 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True)).
Definition term52 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := (forall y0 : a3, forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True))) /\ (forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@CASEWISE a0 a1 a2 a3 y1 y2 y3))).
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := (forall y0 : a3, forall y1 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True))) /\ (forall y0 : type1644 a0 a1 a2 a3, forall y1 : type1633 a0 a1 a2 a3, forall y2 : a3, forall y3 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y4 : type1248 a0 a1 a2 a3 => forall y5 : type1669, (forall y6 : a3, forall y7 : a2, (y4 y5 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y6 y7) = (@ε a0 (fun y8 : a0 => True))) /\ (forall y6 : type1644 a0 a1 a2 a3, forall y7 : type1633 a0 a1 a2 a3, forall y8 : a3, forall y9 : a2, (y4 y5 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y6 y7) y8 y9) = (@COND a0 (exists y10 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9) (@snd (a1 -> a2) (a3 -> a1 -> a0) y6 y8 (@ε a1 (fun y10 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9))) (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y0 y1) y2 y3) = (@COND a0 (exists y4 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3) (@snd (a1 -> a2) (a3 -> a1 -> a0) y0 y2 (@ε a1 (fun y4 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y0 y4) = y3))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y4 : type1248 a0 a1 a2 a3 => forall y5 : type1669, (forall y6 : a3, forall y7 : a2, (y4 y5 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y6 y7) = (@ε a0 (fun y8 : a0 => True))) /\ (forall y6 : type1644 a0 a1 a2 a3, forall y7 : type1633 a0 a1 a2 a3, forall y8 : a3, forall y9 : a2, (y4 y5 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y6 y7) y8 y9) = (@COND a0 (exists y10 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9) (@snd (a1 -> a2) (a3 -> a1 -> a0) y6 y8 (@ε a1 (fun y10 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y6 y10) = y9))) (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) y1 y2 y3))).
Definition term21 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := and (forall y0 : a3, forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True))).
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := and (forall y0 : a3, forall y1 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True))).
Definition term17 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : a3 => forall y1 : a2, (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True)).
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : a3 => forall y1 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y2 : type1248 a0 a1 a2 a3 => forall y3 : type1669, (forall y4 : a3, forall y5 : a2, (y2 y3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y4 y5) = (@ε a0 (fun y6 : a0 => True))) /\ (forall y4 : type1644 a0 a1 a2 a3, forall y5 : type1633 a0 a1 a2 a3, forall y6 : a3, forall y7 : a2, (y2 y3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y4 y5) y6 y7) = (@COND a0 (exists y8 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7) (@snd (a1 -> a2) (a3 -> a1 -> a0) y4 y6 (@ε a1 (fun y8 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y4 y8) = y7))) (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y0 y1) = (@ε a0 (fun y2 : a0 => True)).
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) := fun y0 : a2 => (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 y0) = (@ε a0 (fun y1 : a0 => True)).
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) (x1 : a2) := @eq a0 (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 x1).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y0 : type1248 a0 a1 a2 a3 => forall y1 : type1669, (forall y2 : a3, forall y3 : a2, (y0 y1 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y2 y3) = (@ε a0 (fun y4 : a0 => True))) /\ (forall y2 : type1644 a0 a1 a2 a3, forall y3 : type1633 a0 a1 a2 a3, forall y4 : a3, forall y5 : a2, (y0 y1 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y2 y3) y4 y5) = (@COND a0 (exists y6 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5) (@snd (a1 -> a2) (a3 -> a1 -> a0) y2 y4 (@ε a1 (fun y6 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y2 y6) = y5))) (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))).
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) := forall y0 : a2, (@CASEWISE a0 a1 a2 a3 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 y0) = (@ε a0 (fun y1 : a0 => True)).
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : a3) := forall y0 : a2, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y1 : type1248 a0 a1 a2 a3 => forall y2 : type1669, (forall y3 : a3, forall y4 : a2, (y1 y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y1 y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) x0 y0) = (@ε a0 (fun y1 : a0 => True)).
Definition term23 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) := @CASEWISE a0 a1 a2 a3 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1).
Definition term36 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : type1644 a0 a1 a2 a3) (x1 : type1633 a0 a1 a2 a3) (x2 : a3) := fun y0 : a2 => (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y1 : type1248 a0 a1 a2 a3 => forall y2 : type1669, (forall y3 : a3, forall y4 : a2, (y1 y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y1 y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) x0 x1) x2 y0) = (@COND a0 (exists y1 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0) (@snd (a1 -> a2) (a3 -> a1 -> a0) x0 x2 (@ε a1 (fun y1 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) x0 y1) = y0))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (list (prod (a1 -> a2) (a3 -> a1 -> a0))) -> a3 -> a2 -> a0) (fun y1 : type1248 a0 a1 a2 a3 => forall y2 : type1669, (forall y3 : a3, forall y4 : a2, (y1 y2 (@nil (prod (a1 -> a2) (a3 -> a1 -> a0))) y3 y4) = (@ε a0 (fun y5 : a0 => True))) /\ (forall y3 : type1644 a0 a1 a2 a3, forall y4 : type1633 a0 a1 a2 a3, forall y5 : a3, forall y6 : a2, (y1 y2 (@cons (prod (a1 -> a2) (a3 -> a1 -> a0)) y3 y4) y5 y6) = (@COND a0 (exists y7 : a1, (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6) (@snd (a1 -> a2) (a3 -> a1 -> a0) y3 y5 (@ε a1 (fun y7 : a1 => (@fst (a1 -> a2) (a3 -> a1 -> a0) y3 y7) = y6))) (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0))))))))))))))) x1 x2 y0)).
