require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem1240281 (char' : El (fun (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) bool)) (_22730' : El (fun bool (fun bool (fun bool (fun bool (fun bool (fun bool (fun bool (fun bool (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool))))))))))))))))) (h1 : Prf (= _22730' (λ a0 : El bool, (λ a1 : El bool, (λ a2 : El bool, (λ a3 : El bool, (λ a4 : El bool, (λ a5 : El bool, (λ a6 : El bool, (λ a7 : El bool, ((@CONSTR (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) (NUMERAL _0) ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool))))))) a0 ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))) a1 ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool bool))))) a2 ((@̦‚ bool (prod bool (prod bool (prod bool bool)))) a3 ((@̦‚ bool (prod bool (prod bool bool))) a4 ((@̦‚ bool (prod bool bool)) a5 ((@̦‚ bool bool) a6 a7))))))) (λ n : El num, (@BOTTOM (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))))))))))))))) (h2 : Prf (= char' (λ a : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))), (∀ (λ char'' : El (fun (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) bool), (⇒ (∀ (λ a' : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))), (⇒ (∃ (λ a0 : El bool, (∃ (λ a1 : El bool, (∃ (λ a2 : El bool, (∃ (λ a3 : El bool, (∃ (λ a4 : El bool, (∃ (λ a5 : El bool, (∃ (λ a6 : El bool, (∃ (λ a7 : El bool, (= a' (_22730' a0 a1 a2 a3 a4 a5 a6 a7)))))))))))))))))) (char'' a')))) (char'' a))))))) : Prf (= char' (λ a : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))), (∀ (λ char'' : El (fun (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) bool), (⇒ (∀ (λ a' : El (recspace (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))), (⇒ (∃ (λ a0 : El bool, (∃ (λ a1 : El bool, (∃ (λ a2 : El bool, (∃ (λ a3 : El bool, (∃ (λ a4 : El bool, (∃ (λ a5 : El bool, (∃ (λ a6 : El bool, (∃ (λ a7 : El bool, (= a' ((λ a0' : El bool, (λ a1' : El bool, (λ a2' : El bool, (λ a3' : El bool, (λ a4' : El bool, (λ a5' : El bool, (λ a6' : El bool, (λ a7' : El bool, ((@CONSTR (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))) (NUMERAL _0) ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool))))))) a0' ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))) a1' ((@̦‚ bool (prod bool (prod bool (prod bool (prod bool bool))))) a2' ((@̦‚ bool (prod bool (prod bool (prod bool bool)))) a3' ((@̦‚ bool (prod bool (prod bool bool))) a4' ((@̦‚ bool (prod bool bool)) a5' ((@̦‚ bool bool) a6' a7'))))))) (λ n : El num, (@BOTTOM (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool (prod bool bool)))))))))))))))))) a0 a1 a2 a3 a4 a5 a6 a7)))))))))))))))))) (char'' a')))) (char'' a))))));
