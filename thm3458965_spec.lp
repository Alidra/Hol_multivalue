require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem3458965 [_89578 _89597 _89598 _89646 _89670 _89671 _89672] : Prf (∧ (∀ (λ P : El (fun _89598 (fun _89597 bool)), (∀ (λ f : El (fun _89598 (fun _89597 (fun _89578 bool))), (= ((@UNIONS _89578) ((@GSPEC (fun _89578 bool)) (λ GEN_PVAR_51 : El (fun _89578 bool), (∃ (λ x : El _89598, (∃ (λ y : El _89597, ((@SETSPEC (fun _89578 bool)) GEN_PVAR_51 (P x y) (f x y))))))))) ((@GSPEC _89578) (λ GEN_PVAR_52 : El _89578, (∃ (λ a : El _89578, ((@SETSPEC _89578) GEN_PVAR_52 (∃ (λ x : El _89598, (∃ (λ y : El _89597, (∧ (P x y) ((@IN _89578) a (f x y))))))) a)))))))))) (∀ (λ P : El (fun _89672 (fun _89671 (fun _89670 bool))), (∀ (λ f : El (fun _89672 (fun _89671 (fun _89670 (fun _89646 bool)))), (= ((@UNIONS _89646) ((@GSPEC (fun _89646 bool)) (λ GEN_PVAR_53 : El (fun _89646 bool), (∃ (λ x : El _89672, (∃ (λ y : El _89671, (∃ (λ z : El _89670, ((@SETSPEC (fun _89646 bool)) GEN_PVAR_53 (P x y z) (f x y z))))))))))) ((@GSPEC _89646) (λ GEN_PVAR_54 : El _89646, (∃ (λ a : El _89646, ((@SETSPEC _89646) GEN_PVAR_54 (∃ (λ x : El _89672, (∃ (λ y : El _89671, (∃ (λ z : El _89670, (∧ (P x y z) ((@IN _89646) a (f x y z))))))))) a)))))))))));
