Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term39 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : list a0, forall y2 : list a1, (@ZIP a0 a1 (@cons a0 y0 y1) y2) = (@cons (prod a0 a1) (@pair a0 a1 y0 (@hd a1 y2)) (@ZIP a0 a1 y1 (@tl a1 y2))).
Definition term38 (a0 : Type') (a1 : Type') := forall y0 : a0, forall y1 : list a0, forall y2 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y3 : type1303 a0 a1 => forall y4 : type1674, (forall y5 : list a1, (y3 y4 (@nil a0) y5) = (@nil (prod a0 a1))) /\ (forall y5 : a0, forall y6 : list a0, forall y7 : list a1, (y3 y4 (@cons a0 y5 y6) y7) = (@cons (prod a0 a1) (@pair a0 a1 y5 (@hd a1 y7)) (y3 y4 y6 (@tl a1 y7))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 y0 y1) y2) = (@cons (prod a0 a1) (@pair a0 a1 y0 (@hd a1 y2)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y3 : type1303 a0 a1 => forall y4 : type1674, (forall y5 : list a1, (y3 y4 (@nil a0) y5) = (@nil (prod a0 a1))) /\ (forall y5 : a0, forall y6 : list a0, forall y7 : list a1, (y3 y4 (@cons a0 y5 y6) y7) = (@cons (prod a0 a1) (@pair a0 a1 y5 (@hd a1 y7)) (y3 y4 y6 (@tl a1 y7))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) y1 (@tl a1 y2))).
Definition term9 (a0 : Type') (a1 : Type') (x0 : list a1) := @eq (list (prod a0 a1)) (@ZIP a0 a1 (@nil a0) x0).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) (x2 : list a1) := @cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 x2)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) x1 (@tl a1 x2)).
Definition term35 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : list a0, forall y1 : list a1, (@ZIP a0 a1 (@cons a0 x0 y0) y1) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y1)) (@ZIP a0 a1 y0 (@tl a1 y1))).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : list a0, forall y1 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y2 : type1303 a0 a1 => forall y3 : type1674, (forall y4 : list a1, (y2 y3 (@nil a0) y4) = (@nil (prod a0 a1))) /\ (forall y4 : a0, forall y5 : list a0, forall y6 : list a1, (y2 y3 (@cons a0 y4 y5) y6) = (@cons (prod a0 a1) (@pair a0 a1 y4 (@hd a1 y6)) (y2 y3 y5 (@tl a1 y6))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 y0) y1) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y1)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y2 : type1303 a0 a1 => forall y3 : type1674, (forall y4 : list a1, (y2 y3 (@nil a0) y4) = (@nil (prod a0 a1))) /\ (forall y4 : a0, forall y5 : list a0, forall y6 : list a1, (y2 y3 (@cons a0 y4 y5) y6) = (@cons (prod a0 a1) (@pair a0 a1 y4 (@hd a1 y6)) (y2 y3 y5 (@tl a1 y6))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) y0 (@tl a1 y1))).
Definition term13 (a0 : Type') (a1 : Type') := forall y0 : list a1, (@ZIP a0 a1 (@nil a0) y0) = (@nil (prod a0 a1)).
Definition term12 (a0 : Type') (a1 : Type') := forall y0 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0) y0) = (@nil (prod a0 a1)).
Definition term29 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) := fun y0 : list a1 => (@ZIP a0 a1 (@cons a0 x0 x1) y0) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y0)) (@ZIP a0 a1 x1 (@tl a1 y0))).
Definition term0 (a0 : Type') (a1 : Type') := (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4)))))).
Definition term1 (a0 : Type') (a1 : Type') := forall y0 : type1674, (forall y1 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y2 : type1303 a0 a1 => forall y3 : type1674, (forall y4 : list a1, (y2 y3 (@nil a0) y4) = (@nil (prod a0 a1))) /\ (forall y4 : a0, forall y5 : list a0, forall y6 : list a1, (y2 y3 (@cons a0 y4 y5) y6) = (@cons (prod a0 a1) (@pair a0 a1 y4 (@hd a1 y6)) (y2 y3 y5 (@tl a1 y6))))) y0 (@nil a0) y1) = (@nil (prod a0 a1))) /\ (forall y1 : a0, forall y2 : list a0, forall y3 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y4 : type1303 a0 a1 => forall y5 : type1674, (forall y6 : list a1, (y4 y5 (@nil a0) y6) = (@nil (prod a0 a1))) /\ (forall y6 : a0, forall y7 : list a0, forall y8 : list a1, (y4 y5 (@cons a0 y6 y7) y8) = (@cons (prod a0 a1) (@pair a0 a1 y6 (@hd a1 y8)) (y4 y5 y7 (@tl a1 y8))))) y0 (@cons a0 y1 y2) y3) = (@cons (prod a0 a1) (@pair a0 a1 y1 (@hd a1 y3)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y4 : type1303 a0 a1 => forall y5 : type1674, (forall y6 : list a1, (y4 y5 (@nil a0) y6) = (@nil (prod a0 a1))) /\ (forall y6 : a0, forall y7 : list a0, forall y8 : list a1, (y4 y5 (@cons a0 y6 y7) y8) = (@cons (prod a0 a1) (@pair a0 a1 y6 (@hd a1 y8)) (y4 y5 y7 (@tl a1 y8))))) y0 y2 (@tl a1 y3)))).
Definition term23 (a0 : Type') (a1 : Type') (x0 : list a0) (x1 : list a1) := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) x0 (@tl a1 x1).
Definition term40 (a0 : Type') (a1 : Type') := (forall y0 : list a1, (@ZIP a0 a1 (@nil a0) y0) = (@nil (prod a0 a1))) /\ (forall y0 : a0, forall y1 : list a0, forall y2 : list a1, (@ZIP a0 a1 (@cons a0 y0 y1) y2) = (@cons (prod a0 a1) (@pair a0 a1 y0 (@hd a1 y2)) (@ZIP a0 a1 y1 (@tl a1 y2)))).
Definition term4 (a0 : Type') (a1 : Type') := (forall y0 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0) y0) = (@nil (prod a0 a1))) /\ (forall y0 : a0, forall y1 : list a0, forall y2 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y3 : type1303 a0 a1 => forall y4 : type1674, (forall y5 : list a1, (y3 y4 (@nil a0) y5) = (@nil (prod a0 a1))) /\ (forall y5 : a0, forall y6 : list a0, forall y7 : list a1, (y3 y4 (@cons a0 y5 y6) y7) = (@cons (prod a0 a1) (@pair a0 a1 y5 (@hd a1 y7)) (y3 y4 y6 (@tl a1 y7))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 y0 y1) y2) = (@cons (prod a0 a1) (@pair a0 a1 y0 (@hd a1 y2)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y3 : type1303 a0 a1 => forall y4 : type1674, (forall y5 : list a1, (y3 y4 (@nil a0) y5) = (@nil (prod a0 a1))) /\ (forall y5 : a0, forall y6 : list a0, forall y7 : list a1, (y3 y4 (@cons a0 y5 y6) y7) = (@cons (prod a0 a1) (@pair a0 a1 y5 (@hd a1 y7)) (y3 y4 y6 (@tl a1 y7))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) y1 (@tl a1 y2)))).
Definition term31 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a1, (@ZIP a0 a1 (@cons a0 x0 x1) y0) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y0)) (@ZIP a0 a1 x1 (@tl a1 y0))).
Definition term30 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) := forall y0 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 x1) y0) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y0)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) x1 (@tl a1 y0))).
Definition term28 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) := fun y0 : list a1 => (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 x1) y0) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y0)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) x1 (@tl a1 y0))).
Definition term10 (a0 : Type') (a1 : Type') := fun y0 : list a1 => (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0) y0) = (@nil (prod a0 a1)).
Definition term15 (a0 : Type') (a1 : Type') := and (forall y0 : list a1, (@ZIP a0 a1 (@nil a0) y0) = (@nil (prod a0 a1))).
Definition term14 (a0 : Type') (a1 : Type') := and (forall y0 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y1 : type1303 a0 a1 => forall y2 : type1674, (forall y3 : list a1, (y1 y2 (@nil a0) y3) = (@nil (prod a0 a1))) /\ (forall y3 : a0, forall y4 : list a0, forall y5 : list a1, (y1 y2 (@cons a0 y3 y4) y5) = (@cons (prod a0 a1) (@pair a0 a1 y3 (@hd a1 y5)) (y1 y2 y4 (@tl a1 y5))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0) y0) = (@nil (prod a0 a1))).
Definition term11 (a0 : Type') (a1 : Type') := fun y0 : list a1 => (@ZIP a0 a1 (@nil a0) y0) = (@nil (prod a0 a1)).
Definition term21 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) (x2 : list a1) := @eq (list (prod a0 a1)) (@ZIP a0 a1 (@cons a0 x0 x1) x2).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a1) := @cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 x1)).
Definition term3 := @pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))).
Definition term27 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) (x2 : list a1) := @cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 x2)) (@ZIP a0 a1 x1 (@tl a1 x2)).
Definition term33 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : list a0 => forall y1 : list a1, (@ZIP a0 a1 (@cons a0 x0 y0) y1) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y1)) (@ZIP a0 a1 y0 (@tl a1 y1))).
Definition term32 (a0 : Type') (a1 : Type') (x0 : a0) := fun y0 : list a0 => forall y1 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y2 : type1303 a0 a1 => forall y3 : type1674, (forall y4 : list a1, (y2 y3 (@nil a0) y4) = (@nil (prod a0 a1))) /\ (forall y4 : a0, forall y5 : list a0, forall y6 : list a1, (y2 y3 (@cons a0 y4 y5) y6) = (@cons (prod a0 a1) (@pair a0 a1 y4 (@hd a1 y6)) (y2 y3 y5 (@tl a1 y6))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 y0) y1) = (@cons (prod a0 a1) (@pair a0 a1 x0 (@hd a1 y1)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y2 : type1303 a0 a1 => forall y3 : type1674, (forall y4 : list a1, (y2 y3 (@nil a0) y4) = (@nil (prod a0 a1))) /\ (forall y4 : a0, forall y5 : list a0, forall y6 : list a1, (y2 y3 (@cons a0 y4 y5) y6) = (@cons (prod a0 a1) (@pair a0 a1 y4 (@hd a1 y6)) (y2 y3 y5 (@tl a1 y6))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) y0 (@tl a1 y1))).
Definition term22 (a0 : Type') (a1 : Type') (x0 : list a0) := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) x0.
Definition term19 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) (x2 : list a1) := @ZIP a0 a1 (@cons a0 x0 x1) x2.
Definition term8 (a0 : Type') (a1 : Type') (x0 : list a1) := @eq (list (prod a0 a1)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0) x0).
Definition term2 (a0 : Type') (a1 : Type') := (fun y0 : type1674 => (forall y1 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y2 : type1303 a0 a1 => forall y3 : type1674, (forall y4 : list a1, (y2 y3 (@nil a0) y4) = (@nil (prod a0 a1))) /\ (forall y4 : a0, forall y5 : list a0, forall y6 : list a1, (y2 y3 (@cons a0 y4 y5) y6) = (@cons (prod a0 a1) (@pair a0 a1 y4 (@hd a1 y6)) (y2 y3 y5 (@tl a1 y6))))) y0 (@nil a0) y1) = (@nil (prod a0 a1))) /\ (forall y1 : a0, forall y2 : list a0, forall y3 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y4 : type1303 a0 a1 => forall y5 : type1674, (forall y6 : list a1, (y4 y5 (@nil a0) y6) = (@nil (prod a0 a1))) /\ (forall y6 : a0, forall y7 : list a0, forall y8 : list a1, (y4 y5 (@cons a0 y6 y7) y8) = (@cons (prod a0 a1) (@pair a0 a1 y6 (@hd a1 y8)) (y4 y5 y7 (@tl a1 y8))))) y0 (@cons a0 y1 y2) y3) = (@cons (prod a0 a1) (@pair a0 a1 y1 (@hd a1 y3)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y4 : type1303 a0 a1 => forall y5 : type1674, (forall y6 : list a1, (y4 y5 (@nil a0) y6) = (@nil (prod a0 a1))) /\ (forall y6 : a0, forall y7 : list a0, forall y8 : list a1, (y4 y5 (@cons a0 y6 y7) y8) = (@cons (prod a0 a1) (@pair a0 a1 y6 (@hd a1 y8)) (y4 y5 y7 (@tl a1 y8))))) y0 y2 (@tl a1 y3))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))).
Definition term18 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) (x2 : list a1) := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 x1) x2.
Definition term6 (a0 : Type') (a1 : Type') := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0).
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) := @ZIP a0 a1 (@cons a0 x0 x1).
Definition term20 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) (x2 : list a1) := @eq (list (prod a0 a1)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 x1) x2).
Definition term5 (a0 : Type') (a1 : Type') := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))).
Definition term16 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : list a0) := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 x0 x1).
Definition term24 (a0 : Type') (a1 : Type') (x0 : list a0) (x1 : list a1) := @ZIP a0 a1 x0 (@tl a1 x1).
Definition term7 (a0 : Type') (a1 : Type') (x0 : list a1) := @ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y0 : type1303 a0 a1 => forall y1 : type1674, (forall y2 : list a1, (y0 y1 (@nil a0) y2) = (@nil (prod a0 a1))) /\ (forall y2 : a0, forall y3 : list a0, forall y4 : list a1, (y0 y1 (@cons a0 y2 y3) y4) = (@cons (prod a0 a1) (@pair a0 a1 y2 (@hd a1 y4)) (y0 y1 y3 (@tl a1 y4))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@nil a0) x0.
Definition term37 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : list a0, forall y2 : list a1, (@ZIP a0 a1 (@cons a0 y0 y1) y2) = (@cons (prod a0 a1) (@pair a0 a1 y0 (@hd a1 y2)) (@ZIP a0 a1 y1 (@tl a1 y2))).
Definition term36 (a0 : Type') (a1 : Type') := fun y0 : a0 => forall y1 : list a0, forall y2 : list a1, (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y3 : type1303 a0 a1 => forall y4 : type1674, (forall y5 : list a1, (y3 y4 (@nil a0) y5) = (@nil (prod a0 a1))) /\ (forall y5 : a0, forall y6 : list a0, forall y7 : list a1, (y3 y4 (@cons a0 y5 y6) y7) = (@cons (prod a0 a1) (@pair a0 a1 y5 (@hd a1 y7)) (y3 y4 y6 (@tl a1 y7))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) (@cons a0 y0 y1) y2) = (@cons (prod a0 a1) (@pair a0 a1 y0 (@hd a1 y2)) (@ε ((prod nat (prod nat nat)) -> (list a0) -> (list a1) -> list (prod a0 a1)) (fun y3 : type1303 a0 a1 => forall y4 : type1674, (forall y5 : list a1, (y3 y4 (@nil a0) y5) = (@nil (prod a0 a1))) /\ (forall y5 : a0, forall y6 : list a0, forall y7 : list a1, (y3 y4 (@cons a0 y5 y6) y7) = (@cons (prod a0 a1) (@pair a0 a1 y5 (@hd a1 y7)) (y3 y4 y6 (@tl a1 y7))))) (@pair nat (prod nat nat) (NUMERAL (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))) y1 (@tl a1 y2))).
