Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term151 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (fun y0 : Prop => (@neutral nat Nat.add) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) False.
Definition term186 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := (((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) x3) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> (fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@INSERT a0 x2 x3).
Definition term4 (x0 : nat) (x1 : nat) (x2 : nat) := (fun y0 : nat => (Nat.mul x1 (Nat.add x0 y0)) = (Nat.add (Nat.mul x1 x0) (Nat.mul x1 y0))) x2.
Definition term60 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)).
Definition term11 (a0 : Type') := forall y0 : a0, forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@nsum a0 (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@nsum a0 y2 y1) (Nat.add (y1 y0) (@nsum a0 y2 y1))).
Definition term65 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))) (@neutral nat Nat.add).
Definition term138 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := ((@FINITE a0 (@support a0 nat Nat.add x2 x1)) -> (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) /\ ((~ (@FINITE a0 (@support a0 nat Nat.add x2 x1))) -> (@neutral nat Nat.add) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))).
Definition term59 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @COND nat (@FINITE a0 (@support a0 nat Nat.add x1 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x0) x1) (@neutral nat Nat.add).
Definition term176 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := and ((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) x2).
Definition term149 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := fun y0 : Prop => (@neutral nat Nat.add) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add))).
Definition term153 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := @eq Prop ((fun y0 : Prop => (@neutral nat Nat.add) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@FINITE a0 (@support a0 nat Nat.add x1 x2))).
Definition term145 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := @eq Prop ((fun y0 : Prop => (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@FINITE a0 (@support a0 nat Nat.add x1 x2))).
Definition term155 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @COND nat True (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x0) x1) (@neutral nat Nat.add).
Definition term212 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) (x4 : Prop) (x5 : Prop) := ((((@nsum a0 x2 (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) = x4) -> (x4 -> ((@nsum a0 (@INSERT a0 x1 x2) (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = x5) -> ((((@nsum a0 x2 (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> (@nsum a0 (@INSERT a0 x1 x2) (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = (x4 -> x5).
Definition term122 (a0 : Type') (x0 : nat) (x1 : Prop) (x2 : nat) (x3 : a0 -> Prop) (x4 : a0 -> nat) (x5 : nat) := (x1 -> (fun y0 : nat => y0 = (Nat.mul x2 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x4 x3)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x4 x3) x4) (@neutral nat Nat.add)))) x0) /\ ((~ x1) -> (fun y0 : nat => y0 = (Nat.mul x2 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x4 x3)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x4 x3) x4) (@neutral nat Nat.add)))) x5).
Definition term163 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 x1) -> (@nsum a0 x1 (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@nsum a0 x1 x2)).
Definition term157 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul x0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2).
Definition term249 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) (x4 : nat) := (fun y0 : nat => forall y1 : nat, ((@IN a0 x0 x1) = x3) -> (x3 -> (@nsum a0 x1 x2) = y0) -> ((~ x3) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = y1) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat x3 y0 y1)) x4.
Definition term161 (a0 : Type') (x0 : a0 -> Prop) := imp (@FINITE a0 x0).
Definition term230 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : Prop) (x5 : nat) (x6 : nat) := (fun y0 : nat => ((@IN a0 x0 x1) = x4) -> (x4 -> (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1))) = x5) -> ((~ x4) -> (Nat.add ((fun y1 : a0 => Nat.mul x2 (x3 y1)) x0) (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1)))) = y0) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1))) (Nat.add ((fun y1 : a0 => Nat.mul x2 (x3 y1)) x0) (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1))))) = (@COND nat x4 x5 y0)) x6.
Definition term55 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul x0 (@iterate nat a0 Nat.add x1 x2).
Definition term50 := @eq nat (NUMERAL 0).
Definition term271 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@iterate nat a0 Nat.add y0 x1))) (@support a0 nat Nat.add x1 x2).
Definition term250 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) (x4 : nat) := forall y0 : nat, ((@IN a0 x0 x1) = x3) -> (x3 -> (@nsum a0 x1 x2) = x4) -> ((~ x3) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = y0) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat x3 x4 y0).
Definition term229 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : Prop) (x5 : nat) := forall y0 : nat, ((@IN a0 x0 x1) = x4) -> (x4 -> (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1))) = x5) -> ((~ x4) -> (Nat.add ((fun y1 : a0 => Nat.mul x2 (x3 y1)) x0) (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1)))) = y0) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1))) (Nat.add ((fun y1 : a0 => Nat.mul x2 (x3 y1)) x0) (@nsum a0 x1 (fun y1 : a0 => Nat.mul x2 (x3 y1))))) = (@COND nat x4 x5 y0).
Definition term40 := forall y0 : nat, (Nat.mul (NUMERAL 0) y0) = (NUMERAL 0).
Definition term0 (x0 : nat) := (fun y0 : nat => forall y1 : nat, forall y2 : nat, (Nat.mul y0 (Nat.add y1 y2)) = (Nat.add (Nat.mul y0 y1) (Nat.mul y0 y2))) x0.
Definition term242 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) := @COND nat False (Nat.mul x1 (@nsum a0 x2 x3)) (Nat.add (Nat.mul x1 (x3 x0)) (Nat.mul x1 (@nsum a0 x2 x3))).
Definition term74 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : type1400 a1, (@support a0 a1 y1 y0 x0) = (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (~ ((y0 y3) = (@neutral a1 y1)))) y3))) x1.
Definition term108 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := @eq (a0 -> Prop) (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x0 (x1 y0)) x2).
Definition term51 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul x0 (@nsum a0 x1 x2).
Definition term231 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : Prop) (x5 : nat) (x6 : nat) := ((@IN a0 x0 x1) = x4) -> (x4 -> (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) = x5) -> ((~ x4) -> (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0)))) = x6) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))))) = (@COND nat x4 x5 x6).
Definition term184 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := @nsum a0 (@INSERT a0 x0 x1) (fun y0 : a0 => Nat.mul x2 (x3 y0)).
Definition term179 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := ((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) x3) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3)).
Definition term267 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term172 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := Nat.mul x0 (@nsum a0 (@EMPTY a0) x1).
Definition term18 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @nsum a0 (@INSERT a0 x0 x1) x2.
Definition term116 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ ((x2 y0) = (@neutral nat Nat.add)))) y0.
Definition term102 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ ((x2 y0) = (NUMERAL 0)))) y0.
Definition term101 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ (((fun y1 : a0 => Nat.mul x2 (x3 y1)) y0) = (@neutral nat Nat.add)))) y0.
Definition term275 (a0 : Type') := forall y0 : a0 -> nat, forall y1 : nat, forall y2 : a0 -> Prop, (@nsum a0 y2 (fun y3 : a0 => Nat.mul y1 (y0 y3))) = (Nat.mul y1 (@nsum a0 y2 y0)).
Definition term238 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := Nat.add (Nat.mul x0 (x1 x2)).
Definition term147 (a0 : Type') (x0 : a0 -> nat) (x1 : a0 -> Prop) := ~ (@FINITE a0 (@support a0 nat Nat.add x0 x1)).
Definition term264 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := (((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> True.
Definition term158 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @eq nat (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))).
Definition term64 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@COND nat (@FINITE a0 y0) (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) (@neutral nat Nat.add)) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x1 x2)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@support a0 nat Nat.add x1 x2).
Definition term150 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : Prop => (@neutral nat Nat.add) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@FINITE a0 (@support a0 nat Nat.add x1 x2)).
Definition term88 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := @eq nat (Nat.mul x0 (x1 x2)).
Definition term180 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := ((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3)).
Definition term159 := @eq nat (@neutral nat Nat.add).
Definition term41 (x0 : nat) := (fun y0 : nat => (Nat.mul (NUMERAL 0) y0) = (NUMERAL 0)) x0.
Definition term144 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul x0 (@COND nat True (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)).
Definition term47 (a0 : Type') := fun y0 : a0 => NUMERAL 0.
Definition term270 (a0 : Type') := forall y0 : a0, True.
Definition term72 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> a1, forall y2 : type1400 a1, (@support a0 a1 y2 y1 y0) = (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y0) /\ (~ ((y1 y4) = (@neutral a1 y2)))) y4))) x0.
Definition term29 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := (fun y0 : type1400 a0 => forall y1 : a1 -> a0, forall y2 : a1 -> Prop, (@iterate a0 a1 y0 y2 y1) = (@COND a0 (@FINITE a1 (@support a1 a0 y0 y1 y2)) (@iterate a0 a1 y0 (@support a1 a0 y0 y1 y2) y1) (@neutral a0 y0))) x0.
Definition term183 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@INSERT a0 x2 x3).
Definition term135 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 (@support a0 nat Nat.add x2 x1)) -> (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add))).
Definition term220 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) := forall y0 : a0, (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = y0) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 y0).
Definition term143 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (fun y0 : Prop => (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y1 : a0 => Nat.mul x0 (x2 y1))) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) True.
Definition term268 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, x0.
Definition term173 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := and ((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@EMPTY a0)).
Definition term53 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @iterate nat a0 Nat.add x0 (fun y0 : a0 => Nat.mul x1 (x2 y0)).
Definition term115 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (~ ((x2 x3) = (@neutral nat Nat.add)))) x3.
Definition term100 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (~ ((x2 x3) = (NUMERAL 0)))) x3.
Definition term192 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 => forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) (@INSERT a0 y0 y1).
Definition term215 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := ~ (@IN a0 x0 x1).
Definition term119 (x0 : nat -> Prop) (x1 : Prop) (x2 : nat) (x3 : nat) := x0 (@COND nat x1 x2 x3).
Definition term261 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) := Nat.mul x0 (Nat.add (x3 x1) (@nsum a0 x2 x3)).
Definition term175 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) x2.
Definition term241 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) := ((~ False) -> (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0)))) = (Nat.add (Nat.mul x1 (x3 x0)) (Nat.mul x1 (@nsum a0 x2 x3)))) -> (@COND nat (@IN a0 x0 x2) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))))) = (@COND nat False (Nat.mul x1 (@nsum a0 x2 x3)) (Nat.add (Nat.mul x1 (x3 x0)) (Nat.mul x1 (@nsum a0 x2 x3)))).
Definition term256 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : nat) := (False -> (@nsum a0 x1 x2) = (@nsum a0 x1 x2)) -> ((~ False) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = x3) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat False (@nsum a0 x1 x2) x3).
Definition term243 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := @eq nat (@nsum a0 (@INSERT a0 x0 x1) (fun y0 : a0 => Nat.mul x2 (x3 y0))).
Definition term191 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> nat) := forall y0 : a0 -> Prop, (((@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x2 y1))) = (Nat.mul x0 (@nsum a0 y0 x2))) /\ ((~ (@IN a0 x1 y0)) /\ (@FINITE a0 y0))) -> (@nsum a0 (@INSERT a0 x1 y0) (fun y1 : a0 => Nat.mul x0 (x2 y1))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 y0) x2)).
Definition term86 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := @eq nat ((fun y0 : a0 => (fun y1 : a0 => Nat.mul x0 (x1 y1)) y0) x2).
Definition term136 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := and ((@FINITE a0 (@support a0 nat Nat.add x2 x0)) -> (fun y0 : nat => y0 = (Nat.mul x1 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) x2) (@neutral nat Nat.add)))) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0)))).
Definition term111 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := @eq nat (x0 x1).
Definition term123 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := fun y0 : nat => y0 = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add))).
Definition term130 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (~ (@FINITE a0 (@support a0 nat Nat.add x2 x1))) -> (fun y0 : nat => y0 = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) (@neutral nat Nat.add).
Definition term140 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @eq Prop ((@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) (@neutral nat Nat.add)) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))).
Definition term67 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @eq Prop ((@COND nat (@FINITE a0 (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x0 (x2 y0)) x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x0 (x2 y0)) x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) (@neutral nat Nat.add)) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))).
Definition term127 (a0 : Type') (x0 : a0 -> nat) (x1 : a0 -> Prop) := @FINITE a0 (@support a0 nat Nat.add x0 x1).
Definition term31 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) := (fun y0 : a1 -> a0 => forall y1 : a1 -> Prop, (@iterate a0 a1 x0 y1 y0) = (@COND a0 (@FINITE a1 (@support a1 a0 x0 y0 y1)) (@iterate a0 a1 x0 (@support a1 a0 x0 y0 y1) y0) (@neutral a0 x0))) x1.
Definition term69 (x0 : nat) := forall y0 : nat, ((Nat.mul x0 y0) = (NUMERAL 0)) = ((x0 = (NUMERAL 0)) \/ (y0 = (NUMERAL 0))).
Definition term2 (x0 : nat) (x1 : nat) := (fun y0 : nat => forall y1 : nat, (Nat.mul x0 (Nat.add y0 y1)) = (Nat.add (Nat.mul x0 y0) (Nat.mul x0 y1))) x1.
Definition term14 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := (fun y0 : a0 -> nat => forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@nsum a0 (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@nsum a0 y1 y0) (Nat.add (y0 x0) (@nsum a0 y1 y0)))) x1.
Definition term109 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @eq (a0 -> Prop) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (NUMERAL 0)))) y1)).
Definition term17 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 x1) -> (@nsum a0 (@INSERT a0 x0 x1) x2) = (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))).
Definition term200 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (@FINITE a0 x2) -> (fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) x2.
Definition term92 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := ~ (((fun y0 : a0 => Nat.mul x0 (x1 y0)) x2) = (@neutral nat Nat.add)).
Definition term37 (x0 : nat) := ~ (x0 = (NUMERAL 0)).
Definition term70 (x0 : nat) (x1 : nat) := (fun y0 : nat => ((Nat.mul x0 y0) = (NUMERAL 0)) = ((x0 = (NUMERAL 0)) \/ (y0 = (NUMERAL 0)))) x1.
Definition term239 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) := Nat.add (Nat.mul x1 (x3 x0)) (Nat.mul x1 (@nsum a0 x2 x3)).
Definition term56 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) (x2 : type1606) := @COND nat (@FINITE a0 (@support a0 nat x2 x1 x0)) (@iterate nat a0 x2 (@support a0 nat x2 x1 x0) x1) (@neutral nat x2).
Definition term272 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 (@support a0 nat Nat.add x2 x1)) -> (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2)).
Definition term120 (x0 : nat) (x1 : Prop) (x2 : nat -> Prop) (x3 : nat) := (x1 -> x2 x0) /\ ((~ x1) -> x2 x3).
Definition term76 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : type1400 a1) := (fun y0 : type1400 a1 => (@support a0 a1 y0 x1 x0) = (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ ((x1 y2) = (@neutral a1 y0)))) y2))) x2.
Definition term197 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := ((@nsum a0 (@EMPTY a0) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@EMPTY a0) x1))) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (@nsum a0 (@INSERT a0 y0 y1) (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 y0 y1) x1))).
Definition term233 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : nat) (x5 : nat) := (False -> (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) = x4) -> ((~ False) -> (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0)))) = x5) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))))) = (@COND nat False x4 x5).
Definition term205 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term131 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (~ (@FINITE a0 (@support a0 nat Nat.add x2 x1))) -> (@neutral nat Nat.add) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add))).
Definition term168 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := (((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) (@INSERT a0 y0 y1))) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) y0.
Definition term48 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @nsum a0 x0 (fun y0 : a0 => Nat.mul x1 (x2 y0)).
Definition term113 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) (x2 : a0) := (@IN a0 x2 x0) /\ (~ ((x1 x2) = (@neutral nat Nat.add))).
Definition term255 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := False -> (@nsum a0 x0 x1) = (@nsum a0 x0 x1).
Definition term58 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @eq nat (@COND nat (@FINITE a0 (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x1 (x2 y0)) x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x1 (x2 y0)) x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))) (@neutral nat Nat.add)).
Definition term83 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := (fun y0 : a0 => (fun y1 : a0 => Nat.mul x0 (x1 y1)) y0) x2.
Definition term174 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := and ((@nsum a0 (@EMPTY a0) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@EMPTY a0) x1))).
Definition term148 (a0 : Type') (x0 : a0 -> nat) (x1 : a0 -> Prop) := (~ (@FINITE a0 (@support a0 nat Nat.add x0 x1))) -> (@FINITE a0 (@support a0 nat Nat.add x0 x1)) = False.
Definition term9 (x0 : nat) := (fun y0 : nat => (Nat.mul y0 (NUMERAL 0)) = (NUMERAL 0)) x0.
Definition term94 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := and (@IN a0 x0 x1).
Definition term20 (a0 : Type') := forall y0 : a0 -> nat, (@nsum a0 (@EMPTY a0) y0) = (NUMERAL 0).
Definition term228 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : Prop) (x5 : nat) := (fun y0 : nat => forall y1 : nat, ((@IN a0 x0 x1) = x4) -> (x4 -> (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2))) = y0) -> ((~ x4) -> (Nat.add ((fun y2 : a0 => Nat.mul x2 (x3 y2)) x0) (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2)))) = y1) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2))) (Nat.add ((fun y2 : a0 => Nat.mul x2 (x3 y2)) x0) (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2))))) = (@COND nat x4 y0 y1)) x5.
Definition term89 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := (x0 = (NUMERAL 0)) \/ ((x1 x2) = (NUMERAL 0)).
Definition term226 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : Prop) := (fun y0 : Prop => forall y1 : nat, forall y2 : nat, ((@IN a0 x0 x1) = y0) -> (y0 -> (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3))) = y1) -> ((~ y0) -> (Nat.add ((fun y3 : a0 => Nat.mul x2 (x3 y3)) x0) (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3)))) = y2) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3))) (Nat.add ((fun y3 : a0 => Nat.mul x2 (x3 y3)) x0) (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3))))) = (@COND nat y0 y1 y2)) x4.
Definition term253 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : nat) (x4 : nat) := ((@IN a0 x0 x1) = False) -> (False -> (@nsum a0 x1 x2) = x3) -> ((~ False) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = x4) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat False x3 x4).
Definition term232 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : nat) (x5 : nat) := ((@IN a0 x0 x1) = False) -> (False -> (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) = x4) -> ((~ False) -> (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0)))) = x5) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))))) = (@COND nat False x4 x5).
Definition term112 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := ~ ((x0 x1) = (@neutral nat Nat.add)).
Definition term46 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 => Nat.mul x0 (x1 y0).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : a1 -> a0) (x2 : type1400 a0) := @COND a0 (@FINITE a1 (@support a1 a0 x2 x1 x0)) (@iterate a0 a1 x2 (@support a1 a0 x2 x1 x0) x1) (@neutral a0 x2).
Definition term6 (x0 : nat) (x1 : nat) (x2 : nat) := Nat.add (Nat.mul x1 x0) (Nat.mul x1 x2).
Definition term237 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := Nat.add ((fun y0 : a0 => Nat.mul x0 (x1 y0)) x2).
Definition term91 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := False \/ ((x0 x1) = (NUMERAL 0)).
Definition term81 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term129 (a0 : Type') (x0 : a0 -> nat) (x1 : a0 -> Prop) := imp (~ (@FINITE a0 (@support a0 nat Nat.add x0 x1))).
Definition term87 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := @eq nat ((fun y0 : a0 => Nat.mul x0 (x1 y0)) x2).
Definition term203 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := (((@nsum a0 (@EMPTY a0) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@EMPTY a0) x1))) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (@nsum a0 (@INSERT a0 y0 y1) (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 y0 y1) x1)))) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1)).
Definition term110 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (@neutral nat Nat.add)))) y1).
Definition term107 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (NUMERAL 0)))) y1).
Definition term80 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (((fun y2 : a0 => Nat.mul x1 (x2 y2)) y1) = (@neutral nat Nat.add)))) y1).
Definition term79 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) (x2 : type1606) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (@neutral nat x2)))) y1).
Definition term77 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : type1400 a1) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (@neutral a1 x2)))) y1).
Definition term167 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1)).
Definition term166 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@iterate nat a0 Nat.add y0 x1)).
Definition term15 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (@nsum a0 (@INSERT a0 x0 y0) x1) = (@COND nat (@IN a0 x0 y0) (@nsum a0 y0 x1) (Nat.add (x1 x0) (@nsum a0 y0 x1))).
Definition term216 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (~ (@IN a0 x0 x1)) -> (@IN a0 x0 x1) = False.
Definition term90 (x0 : nat) := or (x0 = (NUMERAL 0)).
Definition term263 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> ((@nsum a0 (@INSERT a0 x2 x3) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x2 x3) x1))) = True) -> ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> (@nsum a0 (@INSERT a0 x2 x3) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x2 x3) x1))) = ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> True).
Definition term274 (a0 : Type') (x0 : a0 -> nat) := forall y0 : nat, forall y1 : a0 -> Prop, (@nsum a0 y1 (fun y2 : a0 => Nat.mul y0 (x0 y2))) = (Nat.mul y0 (@nsum a0 y1 x0)).
Definition term248 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) := forall y0 : nat, forall y1 : nat, ((@IN a0 x0 x1) = x3) -> (x3 -> (@nsum a0 x1 x2) = y0) -> ((~ x3) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = y1) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat x3 y0 y1).
Definition term227 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : Prop) := forall y0 : nat, forall y1 : nat, ((@IN a0 x0 x1) = x4) -> (x4 -> (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2))) = y0) -> ((~ x4) -> (Nat.add ((fun y2 : a0 => Nat.mul x2 (x3 y2)) x0) (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2)))) = y1) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2))) (Nat.add ((fun y2 : a0 => Nat.mul x2 (x3 y2)) x0) (@nsum a0 x1 (fun y2 : a0 => Nat.mul x2 (x3 y2))))) = (@COND nat x4 y0 y1).
Definition term1 (x0 : nat) := forall y0 : nat, forall y1 : nat, (Nat.mul x0 (Nat.add y0 y1)) = (Nat.add (Nat.mul x0 y0) (Nat.mul x0 y1)).
Definition term57 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @COND nat (@FINITE a0 (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x1 (x2 y0)) x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x1 (x2 y0)) x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))) (@neutral nat Nat.add).
Definition term269 (a0 : Type') := fun y0 : a0 => True.
Definition term82 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term165 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1)).
Definition term164 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@iterate nat a0 Nat.add y0 x1)).
Definition term71 (x0 : nat) (x1 : nat) := (x0 = (NUMERAL 0)) \/ (x1 = (NUMERAL 0)).
Definition term114 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (~ ((x2 x3) = (@neutral nat Nat.add)))).
Definition term98 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (~ ((x2 x3) = (NUMERAL 0)))).
Definition term97 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : a0) := @SETSPEC a0 x0 ((@IN a0 x4 x1) /\ (~ (((fun y0 : a0 => Nat.mul x2 (x3 y0)) x4) = (@neutral nat Nat.add)))).
Definition term36 (x0 : nat) := (x0 = (NUMERAL 0)) \/ (~ (x0 = (NUMERAL 0))).
Definition term49 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @eq nat (@nsum a0 x0 (fun y0 : a0 => Nat.mul x1 (x2 y0))).
Definition term146 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @eq Prop ((@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))).
Definition term185 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) := Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3).
Definition term117 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ ((x2 y0) = (@neutral nat Nat.add)))) y0.
Definition term104 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ ((x2 y0) = (NUMERAL 0)))) y0.
Definition term103 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ (((fun y1 : a0 => Nat.mul x2 (x3 y1)) y0) = (@neutral nat Nat.add)))) y0.
Definition term169 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1)).
Definition term154 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @eq Prop ((@neutral nat Nat.add) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))).
Definition term204 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := @eq nat (@nsum a0 (@EMPTY a0) (fun y0 : a0 => Nat.mul x0 (x1 y0))).
Definition term137 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := and ((@FINITE a0 (@support a0 nat Nat.add x2 x1)) -> (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))).
Definition term16 (a0 : Type') (x0 : a0) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (@nsum a0 (@INSERT a0 x0 y0) x1) = (@COND nat (@IN a0 x0 y0) (@nsum a0 y0 x1) (Nat.add (x1 x0) (@nsum a0 y0 x1)))) x2.
Definition term66 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := @eq Prop ((fun y0 : a0 -> Prop => (@COND nat (@FINITE a0 y0) (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) (@neutral nat Nat.add)) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x1 x2)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x0 (x1 y0)) x2)).
Definition term258 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (~ False) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = (Nat.add (x2 x0) (@nsum a0 x1 x2)).
Definition term156 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x0) x1.
Definition term128 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (fun y0 : nat => y0 = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) (@neutral nat Nat.add).
Definition term24 (a0 : Type') (x0 : type686 a0) := ((x0 (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((x0 y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> x0 (@INSERT a0 y0 y1))) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> x0 y0.
Definition term32 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : type1400 a0) := forall y0 : a1 -> Prop, (@iterate a0 a1 x1 y0 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 x1 x0 y0)) (@iterate a0 a1 x1 (@support a1 a0 x1 x0 y0) x0) (@neutral a0 x1)).
Definition term3 (x0 : nat) (x1 : nat) := forall y0 : nat, (Nat.mul x1 (Nat.add x0 y0)) = (Nat.add (Nat.mul x1 x0) (Nat.mul x1 y0)).
Definition term193 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 => forall y1 : a0 -> Prop, (((@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (@nsum a0 (@INSERT a0 y0 y1) (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 y0 y1) x1)).
Definition term63 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@COND nat (@FINITE a0 y0) (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) (@neutral nat Nat.add)) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x1 x2)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@support a0 nat Nat.add (fun y0 : a0 => Nat.mul x0 (x1 y0)) x2).
Definition term162 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := (@FINITE a0 x1) -> (@iterate nat a0 Nat.add x1 (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@iterate nat a0 Nat.add x1 x2)).
Definition term201 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 -> Prop => (@FINITE a0 y0) -> (fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) y0.
Definition term189 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> nat) := fun y0 : a0 -> Prop => (((@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x2 y1))) = (Nat.mul x0 (@nsum a0 y0 x2))) /\ ((~ (@IN a0 x1 y0)) /\ (@FINITE a0 y0))) -> (@nsum a0 (@INSERT a0 x1 y0) (fun y1 : a0 => Nat.mul x0 (x2 y1))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 y0) x2)).
Definition term214 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) (x4 : Prop) := ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> ((@nsum a0 (@INSERT a0 x2 x3) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x2 x3) x1))) = x4) -> ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> (@nsum a0 (@INSERT a0 x2 x3) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x2 x3) x1))) = ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> x4).
Definition term33 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : type1400 a0) (x2 : a1 -> Prop) := (fun y0 : a1 -> Prop => (@iterate a0 a1 x1 y0 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 x1 x0 y0)) (@iterate a0 a1 x1 (@support a1 a0 x1 x0 y0) x0) (@neutral a0 x1))) x2.
Definition term210 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) (x4 : Prop) := forall y0 : Prop, ((((@nsum a0 x2 (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) = x4) -> (x4 -> ((@nsum a0 (@INSERT a0 x1 x2) (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = y0) -> ((((@nsum a0 x2 (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> (@nsum a0 (@INSERT a0 x1 x2) (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = (x4 -> y0).
Definition term206 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term265 (a0 : Type') := fun y0 : a0 -> Prop => True.
Definition term152 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.mul x0 (@COND nat False (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)).
Definition term190 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := forall y0 : a0 -> Prop, (((fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) y0) /\ ((~ (@IN a0 x2 y0)) /\ (@FINITE a0 y0))) -> (fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) (@INSERT a0 x2 y0).
Definition term118 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (@neutral nat Nat.add)))) y1.
Definition term106 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ ((x1 y1) = (NUMERAL 0)))) y1.
Definition term105 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (((fun y2 : a0 => Nat.mul x1 (x2 y2)) y1) = (@neutral nat Nat.add)))) y1.
Definition term245 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := forall y0 : Prop, forall y1 : nat, forall y2 : nat, ((@IN a0 x0 x1) = y0) -> (y0 -> (@nsum a0 x1 x2) = y1) -> ((~ y0) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = y2) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat y0 y1 y2).
Definition term224 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := forall y0 : Prop, forall y1 : nat, forall y2 : nat, ((@IN a0 x0 x1) = y0) -> (y0 -> (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3))) = y1) -> ((~ y0) -> (Nat.add ((fun y3 : a0 => Nat.mul x2 (x3 y3)) x0) (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3)))) = y2) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3))) (Nat.add ((fun y3 : a0 => Nat.mul x2 (x3 y3)) x0) (@nsum a0 x1 (fun y3 : a0 => Nat.mul x2 (x3 y3))))) = (@COND nat y0 y1 y2).
Definition term223 (x0 : Prop) (x1 : nat) (x2 : nat) := forall y0 : Prop, forall y1 : nat, forall y2 : nat, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND nat x0 x1 x2) = (@COND nat y0 y1 y2).
Definition term222 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) := forall y0 : Prop, forall y1 : a0, forall y2 : a0, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND a0 x0 x1 x2) = (@COND a0 y0 y1 y2).
Definition term208 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) := forall y0 : Prop, forall y1 : Prop, ((((@nsum a0 x2 (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) = y0) -> (y0 -> ((@nsum a0 (@INSERT a0 x1 x2) (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = y1) -> ((((@nsum a0 x2 (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> (@nsum a0 (@INSERT a0 x1 x2) (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = (y0 -> y1).
Definition term207 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term133 (a0 : Type') (x0 : a0 -> nat) (x1 : a0 -> Prop) := imp (@FINITE a0 (@support a0 nat Nat.add x0 x1)).
Definition term22 (a0 : Type') := forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1.
Definition term73 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> a1, forall y1 : type1400 a1, (@support a0 a1 y1 y0 x0) = (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (~ ((y0 y3) = (@neutral a1 y1)))) y3)).
Definition term30 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := forall y0 : a1 -> a0, forall y1 : a1 -> Prop, (@iterate a0 a1 x0 y1 y0) = (@COND a0 (@FINITE a1 (@support a1 a0 x0 y0 y1)) (@iterate a0 a1 x0 (@support a1 a0 x0 y0 y1) y0) (@neutral a0 x0)).
Definition term13 (a0 : Type') (x0 : a0) := forall y0 : a0 -> nat, forall y1 : a0 -> Prop, (@FINITE a0 y1) -> (@nsum a0 (@INSERT a0 x0 y1) y0) = (@COND nat (@IN a0 x0 y1) (@nsum a0 y1 y0) (Nat.add (y0 x0) (@nsum a0 y1 y0))).
Definition term217 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := (@FINITE a0 x1) -> (@nsum a0 (@INSERT a0 x0 x1) (fun y0 : a0 => Nat.mul x2 (x3 y0))) = (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))))).
Definition term99 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) (x4 : a0) := @SETSPEC a0 x0 ((@IN a0 x4 x1) /\ (~ (((fun y0 : a0 => Nat.mul x2 (x3 y0)) x4) = (@neutral nat Nat.add)))) x4.
Definition term141 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := fun y0 : Prop => (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y1 : a0 => Nat.mul x0 (x2 y1))) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add))).
Definition term61 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := @support a0 nat Nat.add (fun y0 : a0 => Nat.mul x0 (x1 y0)) x2.
Definition term235 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) (x4 : nat) := (False -> (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))) = (Nat.mul x1 (@nsum a0 x2 x3))) -> ((~ False) -> (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0)))) = x4) -> (@COND nat (@IN a0 x0 x2) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))))) = (@COND nat False (Nat.mul x1 (@nsum a0 x2 x3)) x4).
Definition term211 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) (x4 : Prop) (x5 : Prop) := (fun y0 : Prop => ((((@nsum a0 x2 (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) = x4) -> (x4 -> ((@nsum a0 (@INSERT a0 x1 x2) (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = y0) -> ((((@nsum a0 x2 (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> (@nsum a0 (@INSERT a0 x1 x2) (fun y1 : a0 => Nat.mul x0 (x3 y1))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = (x4 -> y0)) x5.
Definition term142 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0 -> Prop) := (fun y0 : Prop => (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@COND nat y0 (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x2) x1) (@neutral nat Nat.add)))) (@FINITE a0 (@support a0 nat Nat.add x1 x2)).
Definition term75 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) := forall y0 : type1400 a1, (@support a0 a1 y0 x1 x0) = (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ ((x1 y2) = (@neutral a1 y0)))) y2)).
Definition term19 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2)).
Definition term246 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := Nat.add (x2 x0) (@nsum a0 x1 x2).
Definition term160 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := @COND nat False (@iterate nat a0 Nat.add (@support a0 nat Nat.add x1 x0) x1) (@neutral nat Nat.add).
Definition term96 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) (x2 : a0) := (@IN a0 x2 x0) /\ (~ ((x1 x2) = (NUMERAL 0))).
Definition term23 (a0 : Type') (x0 : type686 a0) := (fun y0 : type686 a0 => ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1) x0.
Definition term240 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) := (~ False) -> (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0)))) = (Nat.add (Nat.mul x1 (x3 x0)) (Nat.mul x1 (@nsum a0 x2 x3))).
Definition term21 (a0 : Type') (x0 : a0 -> nat) := (fun y0 : a0 -> nat => (@nsum a0 (@EMPTY a0) y0) = (NUMERAL 0)) x0.
Definition term68 (x0 : nat) := (fun y0 : nat => forall y1 : nat, ((Nat.mul y0 y1) = (NUMERAL 0)) = ((y0 = (NUMERAL 0)) \/ (y1 = (NUMERAL 0)))) x0.
Definition term84 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := (fun y0 : a0 => Nat.mul x0 (x1 y0)) x2.
Definition term38 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => NUMERAL 0)) = (NUMERAL 0)) x0.
Definition term62 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := fun y0 : a0 -> Prop => (@COND nat (@FINITE a0 y0) (@iterate nat a0 Nat.add y0 (fun y1 : a0 => Nat.mul x0 (x2 y1))) (@neutral nat Nat.add)) = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add))).
Definition term126 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0)).
Definition term8 := forall y0 : nat, (Nat.mul y0 (NUMERAL 0)) = (NUMERAL 0).
Definition term252 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) (x4 : nat) (x5 : nat) := ((@IN a0 x0 x1) = x3) -> (x3 -> (@nsum a0 x1 x2) = x4) -> ((~ x3) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = x5) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat x3 x4 x5).
Definition term124 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := (fun y0 : nat => y0 = (Nat.mul x1 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) x2) (@neutral nat Nat.add)))) (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))) (@neutral nat Nat.add)).
Definition term188 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := fun y0 : a0 -> Prop => (((fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) y0) /\ ((~ (@IN a0 x2 y0)) /\ (@FINITE a0 y0))) -> (fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) (@INSERT a0 x2 y0).
Definition term125 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := ((@FINITE a0 (@support a0 nat Nat.add x2 x1)) -> (fun y0 : nat => y0 = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) (fun y0 : a0 => Nat.mul x0 (x2 y0)))) /\ ((~ (@FINITE a0 (@support a0 nat Nat.add x2 x1))) -> (fun y0 : nat => y0 = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) (@neutral nat Nat.add)).
Definition term26 (a0 : Type') (x0 : type686 a0) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> x0 y0.
Definition term221 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) := forall y0 : a0, forall y1 : a0, (x0 = x3) -> (x3 -> x1 = y0) -> ((~ x3) -> x2 = y1) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 y0 y1).
Definition term244 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) := @eq nat (Nat.add (Nat.mul x1 (x3 x0)) (Nat.mul x1 (@nsum a0 x2 x3))).
Definition term132 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := (fun y0 : nat => y0 = (Nat.mul x1 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) x2) (@neutral nat Nat.add)))) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))).
Definition term10 (x0 : nat) := Nat.mul x0 (NUMERAL 0).
Definition term213 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) (x4 : Prop) := ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) = (((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3)))) -> ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> ((@nsum a0 (@INSERT a0 x2 x3) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x2 x3) x1))) = x4) -> ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> (@nsum a0 (@INSERT a0 x2 x3) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x2 x3) x1))) = ((((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))) -> x4).
Definition term225 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))).
Definition term259 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := ((~ False) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = (Nat.add (x2 x0) (@nsum a0 x1 x2))) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat False (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))).
Definition term85 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := fun y0 : a0 => (fun y1 : a0 => Nat.mul x0 (x1 y1)) y0.
Definition term27 (a0 : Type') (x0 : type686 a0) := (forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1) -> forall y0 : a0 -> Prop, (@FINITE a0 y0) -> x0 y0.
Definition term134 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := (@FINITE a0 (@support a0 nat Nat.add x2 x0)) -> (fun y0 : nat => y0 = (Nat.mul x1 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) x2) (@neutral nat Nat.add)))) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))).
Definition term257 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : nat) := ((~ False) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = x3) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat False (@nsum a0 x1 x2) x3).
Definition term78 (x0 : nat) := (~ (x0 = (NUMERAL 0))) -> (x0 = (NUMERAL 0)) = False.
Definition term44 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) := Nat.mul x0 (x1 x2).
Definition term177 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := and ((@nsum a0 x1 (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@nsum a0 x1 x2))).
Definition term199 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := imp (((@nsum a0 (@EMPTY a0) (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 (@EMPTY a0) x1))) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (@nsum a0 (@INSERT a0 y0 y1) (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 y0 y1) x1)))).
Definition term95 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) (x3 : a0) := (@IN a0 x3 x0) /\ (~ (((fun y0 : a0 => Nat.mul x1 (x2 y0)) x3) = (@neutral nat Nat.add))).
Definition term262 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) := (((@nsum a0 x2 (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> ((@nsum a0 (@INSERT a0 x1 x2) (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = True.
Definition term5 (x0 : nat) (x1 : nat) (x2 : nat) := Nat.mul x0 (Nat.add x1 x2).
Definition term43 := Nat.mul (NUMERAL 0).
Definition term218 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : nat) (x3 : a0 -> nat) := @COND nat (@IN a0 x0 x1) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x2 (x3 y0)) x0) (@nsum a0 x1 (fun y0 : a0 => Nat.mul x2 (x3 y0)))).
Definition term42 (x0 : nat) := Nat.mul (NUMERAL 0) x0.
Definition term45 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := Nat.mul (NUMERAL 0) (x0 x1).
Definition term28 (a0 : Type') := (forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1) -> forall y0 : type686 a0, ((y0 (@EMPTY a0)) /\ (forall y1 : a0, forall y2 : a0 -> Prop, ((y0 y2) /\ ((~ (@IN a0 y1 y2)) /\ (@FINITE a0 y2))) -> y0 (@INSERT a0 y1 y2))) -> forall y1 : a0 -> Prop, (@FINITE a0 y1) -> y0 y1.
Definition term171 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := @nsum a0 (@EMPTY a0) (fun y0 : a0 => Nat.mul x0 (x1 y0)).
Definition term182 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := imp (((@nsum a0 x3 (fun y0 : a0 => Nat.mul x0 (x1 y0))) = (Nat.mul x0 (@nsum a0 x3 x1))) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))).
Definition term178 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := (~ (@IN a0 x0 x1)) /\ (@FINITE a0 x1).
Definition term139 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @eq Prop ((fun y0 : nat => y0 = (Nat.mul x1 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) x2) (@neutral nat Nat.add)))) (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x0)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x0) (fun y0 : a0 => Nat.mul x1 (x2 y0))) (@neutral nat Nat.add))).
Definition term121 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) (x4 : nat) (x5 : nat) := (fun y0 : nat => y0 = (Nat.mul x0 (@COND nat (@FINITE a0 (@support a0 nat Nat.add x2 x1)) (@iterate nat a0 Nat.add (@support a0 nat Nat.add x2 x1) x2) (@neutral nat Nat.add)))) (@COND nat x3 x4 x5).
Definition term52 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> nat) := Nat.mul (NUMERAL 0) (@nsum a0 x0 x1).
Definition term209 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) (x4 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((((@nsum a0 x2 (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) = y0) -> (y0 -> ((@nsum a0 (@INSERT a0 x1 x2) (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = y1) -> ((((@nsum a0 x2 (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> (@nsum a0 (@INSERT a0 x1 x2) (fun y2 : a0 => Nat.mul x0 (x3 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3))) = (y0 -> y1)) x4.
Definition term247 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) := (fun y0 : Prop => forall y1 : nat, forall y2 : nat, ((@IN a0 x0 x1) = y0) -> (y0 -> (@nsum a0 x1 x2) = y1) -> ((~ y0) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = y2) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat y0 y1 y2)) x3.
Definition term25 (a0 : Type') (x0 : type686 a0) := (x0 (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, ((x0 y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> x0 (@INSERT a0 y0 y1)).
Definition term7 := (forall y0 : nat, (Nat.mul y0 (NUMERAL 0)) = (NUMERAL 0)) /\ ((forall y0 : nat, (Nat.mul (NUMERAL (BIT1 0)) y0) = y0) /\ ((forall y0 : nat, (Nat.mul y0 (NUMERAL (BIT1 0))) = y0) /\ ((forall y0 : nat, forall y1 : nat, (Nat.mul (S y0) y1) = (Nat.add (Nat.mul y0 y1) y1)) /\ (forall y0 : nat, forall y1 : nat, (Nat.mul y0 (S y1)) = (Nat.add y0 (Nat.mul y0 y1)))))).
Definition term195 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := forall y0 : a0, forall y1 : a0 -> Prop, (((@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (@nsum a0 (@INSERT a0 y0 y1) (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 y0 y1) x1)).
Definition term194 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) (@INSERT a0 y0 y1).
Definition term198 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := imp (((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) (@INSERT a0 y0 y1))).
Definition term273 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1)).
Definition term219 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) (x5 : a0) := (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = x5) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 x5).
Definition term12 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0 -> nat, forall y2 : a0 -> Prop, (@FINITE a0 y2) -> (@nsum a0 (@INSERT a0 y0 y2) y1) = (@COND nat (@IN a0 y0 y2) (@nsum a0 y2 y1) (Nat.add (y1 y0) (@nsum a0 y2 y1)))) x0.
Definition term254 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : nat) (x4 : nat) := (False -> (@nsum a0 x1 x2) = x3) -> ((~ False) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = x4) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat False x3 x4).
Definition term202 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := forall y0 : a0 -> Prop, (@FINITE a0 y0) -> (fun y1 : a0 -> Prop => (@nsum a0 y1 (fun y2 : a0 => Nat.mul x0 (x1 y2))) = (Nat.mul x0 (@nsum a0 y1 x1))) y0.
Definition term251 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) (x3 : Prop) (x4 : nat) (x5 : nat) := (fun y0 : nat => ((@IN a0 x0 x1) = x3) -> (x3 -> (@nsum a0 x1 x2) = x4) -> ((~ x3) -> (Nat.add (x2 x0) (@nsum a0 x1 x2)) = y0) -> (@COND nat (@IN a0 x0 x1) (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2))) = (@COND nat x3 x4 y0)) x5.
Definition term39 (a0 : Type') (x0 : a0 -> Prop) := @nsum a0 x0 (fun y0 : a0 => NUMERAL 0).
Definition term35 (x0 : nat) := (fun y0 : Prop => y0 \/ (~ y0)) (x0 = (NUMERAL 0)).
Definition term93 (a0 : Type') (x0 : a0 -> nat) (x1 : a0) := ~ ((x0 x1) = (NUMERAL 0)).
Definition term236 (a0 : Type') (x0 : a0) (x1 : nat) (x2 : a0 -> Prop) (x3 : a0 -> nat) (x4 : nat) := ((~ False) -> (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0)))) = x4) -> (@COND nat (@IN a0 x0 x2) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))) (Nat.add ((fun y0 : a0 => Nat.mul x1 (x3 y0)) x0) (@nsum a0 x2 (fun y0 : a0 => Nat.mul x1 (x3 y0))))) = (@COND nat False (Nat.mul x1 (@nsum a0 x2 x3)) x4).
Definition term234 (a0 : Type') (x0 : nat) (x1 : a0 -> Prop) (x2 : a0 -> nat) := False -> (@nsum a0 x1 (fun y0 : a0 => Nat.mul x0 (x2 y0))) = (Nat.mul x0 (@nsum a0 x1 x2)).
Definition term260 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> nat) := @COND nat False (@nsum a0 x1 x2) (Nat.add (x2 x0) (@nsum a0 x1 x2)).
Definition term170 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := (fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@EMPTY a0).
Definition term187 (a0 : Type') (x0 : nat) (x1 : a0) (x2 : a0 -> Prop) (x3 : a0 -> nat) := (((@nsum a0 x2 (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 x2 x3))) /\ ((~ (@IN a0 x1 x2)) /\ (@FINITE a0 x2))) -> (@nsum a0 (@INSERT a0 x1 x2) (fun y0 : a0 => Nat.mul x0 (x3 y0))) = (Nat.mul x0 (@nsum a0 (@INSERT a0 x1 x2) x3)).
Definition term266 (a0 : Type') := forall y0 : a0 -> Prop, True.
Definition term54 (a0 : Type') (x0 : a0 -> Prop) (x1 : nat) (x2 : a0 -> nat) := @eq nat (@iterate nat a0 Nat.add x0 (fun y0 : a0 => Nat.mul x1 (x2 y0))).
Definition term196 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) := ((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) (@EMPTY a0)) /\ (forall y0 : a0, forall y1 : a0 -> Prop, (((fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) y1) /\ ((~ (@IN a0 y0 y1)) /\ (@FINITE a0 y1))) -> (fun y2 : a0 -> Prop => (@nsum a0 y2 (fun y3 : a0 => Nat.mul x0 (x1 y3))) = (Nat.mul x0 (@nsum a0 y2 x1))) (@INSERT a0 y0 y1)).
Definition term181 (a0 : Type') (x0 : nat) (x1 : a0 -> nat) (x2 : a0) (x3 : a0 -> Prop) := imp (((fun y0 : a0 -> Prop => (@nsum a0 y0 (fun y1 : a0 => Nat.mul x0 (x1 y1))) = (Nat.mul x0 (@nsum a0 y0 x1))) x3) /\ ((~ (@IN a0 x2 x3)) /\ (@FINITE a0 x3))).
