require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term4 ≔ (λ y0 : El num, (= (EXP y0 (NUMERAL _0)) (NUMERAL (BIT1 _0))));
symbol term2 (x0: El num) ≔ ((@= num) (EXP x0 _0));
symbol term0 (x0: El num) ≔ (EXP x0 (NUMERAL _0));
symbol term9 ≔ (∧ (∀ (λ y0 : El num, (= (EXP y0 _0) (BIT1 _0)))));
symbol term8 ≔ (∧ (∀ (λ y0 : El num, (= (EXP y0 (NUMERAL _0)) (NUMERAL (BIT1 _0))))));
symbol term10 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (EXP y0 (SUC y1)) (* y0 (EXP y0 y1)))))));
symbol term12 ≔ (∧ (∀ (λ y0 : El num, (= (EXP y0 _0) (BIT1 _0)))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (EXP y0 (SUC y1)) (* y0 (EXP y0 y1))))))));
symbol term11 ≔ (∧ (∀ (λ y0 : El num, (= (EXP y0 (NUMERAL _0)) (NUMERAL (BIT1 _0))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (EXP y0 (SUC y1)) (* y0 (EXP y0 y1))))))));
symbol term5 ≔ (λ y0 : El num, (= (EXP y0 _0) (BIT1 _0)));
symbol term6 ≔ (∀ (λ y0 : El num, (= (EXP y0 (NUMERAL _0)) (NUMERAL (BIT1 _0)))));
symbol term7 ≔ (∀ (λ y0 : El num, (= (EXP y0 _0) (BIT1 _0))));
symbol term1 (x0: El num) ≔ ((@= num) (EXP x0 (NUMERAL _0)));
symbol term3 ≔ (NUMERAL (BIT1 _0));
