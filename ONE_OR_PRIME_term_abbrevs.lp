require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term2 (x0: El num) ≔ (∨ (= x0 (NUMERAL (BIT1 _0))) (¬ (= x0 (NUMERAL (BIT1 _0)))));
symbol term17 (x0: El num) ≔ (⇒ (= x0 (NUMERAL (BIT1 _0))));
symbol term27 (x0: El num) ≔ (⇒ (¬ (= x0 (NUMERAL (BIT1 _0)))) (= (= x0 (NUMERAL (BIT1 _0))) F));
symbol term3 (x0: El num) ≔ (¬ (= x0 (NUMERAL (BIT1 _0))));
symbol term25 a0 (x0: El bool) ≔ (∀ (λ y0 : El a0, x0));
symbol term20 (x0: El num) (x1: El num) ≔ (⇒ (num_divides x0 x1) (∨ (= x0 (NUMERAL (BIT1 _0))) (= x0 x1)));
symbol term16 (x0: El num) (x1: El num) ≔ (⇒ (num_divides x0 x1));
symbol term18 (x0: El num) (x1: El num) ≔ (∨ (= x0 (NUMERAL (BIT1 _0))) (= x0 x1));
symbol term30 (x0: El num) ≔ ((@= bool) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))));
symbol term13 (x0: El num) ≔ (num_divides x0 (NUMERAL (BIT1 _0)));
symbol term22 (x0: El num) ≔ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))));
symbol term33 (x0: El num) ≔ ((@= bool) (= (= (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0)))))) T));
symbol term6 (x0: El num) ≔ (∨ (= x0 (NUMERAL (BIT1 _0))));
symbol term11 (x0: El num) ≔ (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0)))));
symbol term5 (x0: El num) ≔ (∧ (¬ (= x0 (NUMERAL (BIT1 _0)))) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))));
symbol term34 ≔ (∀ (λ y0 : El num, (= (∨ (= y0 (NUMERAL (BIT1 _0))) (prime y0)) (∀ (λ y1 : El num, (⇒ (num_divides y1 y0) (∨ (= y1 (NUMERAL (BIT1 _0))) (= y1 y0))))))));
symbol term28 (x0: El num) ≔ (∧ T (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))));
symbol term32 (x0: El num) ≔ ((@= bool) ((λ y0 : El bool, (= y0 T)) (= (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))))));
symbol term0 (x0: El num) ≔ ((λ y0 : El bool, (∨ y0 (¬ y0))) (= x0 (NUMERAL (BIT1 _0))));
symbol term24 ≔ (∀ (λ y0 : El num, T));
symbol term10 (x0: El num) ≔ ((@= bool) (∨ (= x0 (NUMERAL (BIT1 _0))) (∧ (¬ (= x0 (NUMERAL (BIT1 _0)))) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))))));
symbol term15 (x0: El num) ≔ (∧ (¬ (= x0 (NUMERAL (BIT1 _0)))));
symbol term23 ≔ (λ y0 : El num, T);
symbol term29 (x0: El num) ≔ (∨ F (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))));
symbol term19 (x0: El num) ≔ (∨ (= x0 (NUMERAL (BIT1 _0))) (= x0 (NUMERAL (BIT1 _0))));
symbol term4 (x0: El num) ≔ ((λ y0 : El num, (= (prime y0) (∧ (¬ (= y0 (NUMERAL (BIT1 _0)))) (∀ (λ y1 : El num, (⇒ (num_divides y1 y0) (∨ (= y1 (NUMERAL (BIT1 _0))) (= y1 y0)))))))) x0);
symbol term14 ≔ ((@= num) (NUMERAL (BIT1 _0)));
symbol term12 (x0: El num) ≔ ((λ y0 : El num, (= (num_divides y0 (NUMERAL (BIT1 _0))) (= y0 (NUMERAL (BIT1 _0))))) x0);
symbol term7 (x0: El num) ≔ (∨ (= x0 (NUMERAL (BIT1 _0))) (prime x0));
symbol term8 (x0: El num) ≔ (∨ (= x0 (NUMERAL (BIT1 _0))) (∧ (¬ (= x0 (NUMERAL (BIT1 _0)))) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0)))))));
symbol term9 (x0: El num) ≔ ((@= bool) (∨ (= x0 (NUMERAL (BIT1 _0))) (prime x0)));
symbol term21 (x0: El num) ≔ (⇒ (= x0 (NUMERAL (BIT1 _0))) (= x0 (NUMERAL (BIT1 _0))));
symbol term26 (x0: El bool) ≔ (∀ (λ y0 : El num, x0));
symbol term31 (x0: El num) ≔ ((λ y0 : El bool, (= y0 T)) (= (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0))))) (∀ (λ y0 : El num, (⇒ (num_divides y0 x0) (∨ (= y0 (NUMERAL (BIT1 _0))) (= y0 x0)))))));
symbol term1 ≔ (NUMERAL (BIT1 _0));
