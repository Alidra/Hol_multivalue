Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term12 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := fun y0 : list a0 => (@ALLPAIRS a0 a1 x0 (@nil a1) y0) = True.
Definition term11 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := fun y0 : list a0 => (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y1 : type1245 a0 a1 => forall y2 : type1669, (forall y3 : type1470 a0 a1, forall y4 : list a0, (y1 y2 y3 (@nil a1) y4) = True) /\ (forall y3 : a1, forall y4 : type1470 a0 a1, forall y5 : list a1, forall y6 : list a0, (y1 y2 y4 (@cons a1 y3 y5) y6) = ((@List.Forall a0 (y4 y3) y6) /\ (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@nil a1) y0) = True.
Definition term25 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a1) (x3 : list a0) := @eq Prop (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@cons a1 x1 x2) x3).
Definition term30 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : list a1) (x3 : list a0) := (@List.Forall a0 (x1 x0) x3) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 x2 x3).
Definition term33 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : list a1) := fun y0 : list a0 => (@ALLPAIRS a0 a1 x1 (@cons a1 x0 x2) y0) = ((@List.Forall a0 (x1 x0) y0) /\ (@ALLPAIRS a0 a1 x1 x2 y0)).
Definition term16 (a0 : Type') (a1 : Type') := fun y0 : type1470 a0 a1 => forall y1 : list a0, (@ALLPAIRS a0 a1 y0 (@nil a1) y1) = True.
Definition term15 (a0 : Type') (a1 : Type') := fun y0 : type1470 a0 a1 => forall y1 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 (@nil a1) y1) = True.
Definition term43 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : type1470 a0 a1, forall y1 : list a1, forall y2 : list a0, (@ALLPAIRS a0 a1 y0 (@cons a1 x0 y1) y2) = ((@List.Forall a0 (y0 x0) y2) /\ (@ALLPAIRS a0 a1 y0 y1 y2)).
Definition term42 (a0 : Type') (a1 : Type') (x0 : a1) := forall y0 : type1470 a0 a1, forall y1 : list a1, forall y2 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y3 : type1245 a0 a1 => forall y4 : type1669, (forall y5 : type1470 a0 a1, forall y6 : list a0, (y3 y4 y5 (@nil a1) y6) = True) /\ (forall y5 : a1, forall y6 : type1470 a0 a1, forall y7 : list a1, forall y8 : list a0, (y3 y4 y6 (@cons a1 y5 y7) y8) = ((@List.Forall a0 (y6 y5) y8) /\ (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 (@cons a1 x0 y1) y2) = ((@List.Forall a0 (y0 x0) y2) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y3 : type1245 a0 a1 => forall y4 : type1669, (forall y5 : type1470 a0 a1, forall y6 : list a0, (y3 y4 y5 (@nil a1) y6) = True) /\ (forall y5 : a1, forall y6 : type1470 a0 a1, forall y7 : list a1, forall y8 : list a0, (y3 y4 y6 (@cons a1 y5 y7) y8) = ((@List.Forall a0 (y6 y5) y8) /\ (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 y1 y2)).
Definition term2 (a0 : Type') (a1 : Type') := (fun y0 : type1669 => (forall y1 : type1470 a0 a1, forall y2 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y3 : type1245 a0 a1 => forall y4 : type1669, (forall y5 : type1470 a0 a1, forall y6 : list a0, (y3 y4 y5 (@nil a1) y6) = True) /\ (forall y5 : a1, forall y6 : type1470 a0 a1, forall y7 : list a1, forall y8 : list a0, (y3 y4 y6 (@cons a1 y5 y7) y8) = ((@List.Forall a0 (y6 y5) y8) /\ (y3 y4 y6 y7 y8)))) y0 y1 (@nil a1) y2) = True) /\ (forall y1 : a1, forall y2 : type1470 a0 a1, forall y3 : list a1, forall y4 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y5 : type1245 a0 a1 => forall y6 : type1669, (forall y7 : type1470 a0 a1, forall y8 : list a0, (y5 y6 y7 (@nil a1) y8) = True) /\ (forall y7 : a1, forall y8 : type1470 a0 a1, forall y9 : list a1, forall y10 : list a0, (y5 y6 y8 (@cons a1 y7 y9) y10) = ((@List.Forall a0 (y8 y7) y10) /\ (y5 y6 y8 y9 y10)))) y0 y2 (@cons a1 y1 y3) y4) = ((@List.Forall a0 (y2 y1) y4) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y5 : type1245 a0 a1 => forall y6 : type1669, (forall y7 : type1470 a0 a1, forall y8 : list a0, (y5 y6 y7 (@nil a1) y8) = True) /\ (forall y7 : a1, forall y8 : type1470 a0 a1, forall y9 : list a1, forall y10 : list a0, (y5 y6 y8 (@cons a1 y7 y9) y10) = ((@List.Forall a0 (y8 y7) y10) /\ (y5 y6 y8 y9 y10)))) y0 y2 y3 y4)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))).
Definition term39 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) := forall y0 : list a1, forall y1 : list a0, (@ALLPAIRS a0 a1 x1 (@cons a1 x0 y0) y1) = ((@List.Forall a0 (x1 x0) y1) /\ (@ALLPAIRS a0 a1 x1 y0 y1)).
Definition term38 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) := forall y0 : list a1, forall y1 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 (@cons a1 x0 y0) y1) = ((@List.Forall a0 (x1 x0) y1) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 y0 y1)).
Definition term28 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : list a1) (x2 : list a0) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 x1 x2.
Definition term22 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a1) := @ALLPAIRS a0 a1 x0 (@cons a1 x1 x2).
Definition term32 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : list a1) := fun y0 : list a0 => (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y1 : type1245 a0 a1 => forall y2 : type1669, (forall y3 : type1470 a0 a1, forall y4 : list a0, (y1 y2 y3 (@nil a1) y4) = True) /\ (forall y3 : a1, forall y4 : type1470 a0 a1, forall y5 : list a1, forall y6 : list a0, (y1 y2 y4 (@cons a1 y3 y5) y6) = ((@List.Forall a0 (y4 y3) y6) /\ (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 (@cons a1 x0 x2) y0) = ((@List.Forall a0 (x1 x0) y0) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y1 : type1245 a0 a1 => forall y2 : type1669, (forall y3 : type1470 a0 a1, forall y4 : list a0, (y1 y2 y3 (@nil a1) y4) = True) /\ (forall y3 : a1, forall y4 : type1470 a0 a1, forall y5 : list a1, forall y6 : list a0, (y1 y2 y4 (@cons a1 y3 y5) y6) = ((@List.Forall a0 (y4 y3) y6) /\ (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 x2 y0)).
Definition term0 (a0 : Type') (a1 : Type') := (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5))))).
Definition term1 (a0 : Type') (a1 : Type') := forall y0 : type1669, (forall y1 : type1470 a0 a1, forall y2 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y3 : type1245 a0 a1 => forall y4 : type1669, (forall y5 : type1470 a0 a1, forall y6 : list a0, (y3 y4 y5 (@nil a1) y6) = True) /\ (forall y5 : a1, forall y6 : type1470 a0 a1, forall y7 : list a1, forall y8 : list a0, (y3 y4 y6 (@cons a1 y5 y7) y8) = ((@List.Forall a0 (y6 y5) y8) /\ (y3 y4 y6 y7 y8)))) y0 y1 (@nil a1) y2) = True) /\ (forall y1 : a1, forall y2 : type1470 a0 a1, forall y3 : list a1, forall y4 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y5 : type1245 a0 a1 => forall y6 : type1669, (forall y7 : type1470 a0 a1, forall y8 : list a0, (y5 y6 y7 (@nil a1) y8) = True) /\ (forall y7 : a1, forall y8 : type1470 a0 a1, forall y9 : list a1, forall y10 : list a0, (y5 y6 y8 (@cons a1 y7 y9) y10) = ((@List.Forall a0 (y8 y7) y10) /\ (y5 y6 y8 y9 y10)))) y0 y2 (@cons a1 y1 y3) y4) = ((@List.Forall a0 (y2 y1) y4) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y5 : type1245 a0 a1 => forall y6 : type1669, (forall y7 : type1470 a0 a1, forall y8 : list a0, (y5 y6 y7 (@nil a1) y8) = True) /\ (forall y7 : a1, forall y8 : type1470 a0 a1, forall y9 : list a1, forall y10 : list a0, (y5 y6 y8 (@cons a1 y7 y9) y10) = ((@List.Forall a0 (y8 y7) y10) /\ (y5 y6 y8 y9 y10)))) y0 y2 y3 y4))).
Definition term41 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : type1470 a0 a1 => forall y1 : list a1, forall y2 : list a0, (@ALLPAIRS a0 a1 y0 (@cons a1 x0 y1) y2) = ((@List.Forall a0 (y0 x0) y2) /\ (@ALLPAIRS a0 a1 y0 y1 y2)).
Definition term40 (a0 : Type') (a1 : Type') (x0 : a1) := fun y0 : type1470 a0 a1 => forall y1 : list a1, forall y2 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y3 : type1245 a0 a1 => forall y4 : type1669, (forall y5 : type1470 a0 a1, forall y6 : list a0, (y3 y4 y5 (@nil a1) y6) = True) /\ (forall y5 : a1, forall y6 : type1470 a0 a1, forall y7 : list a1, forall y8 : list a0, (y3 y4 y6 (@cons a1 y5 y7) y8) = ((@List.Forall a0 (y6 y5) y8) /\ (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 (@cons a1 x0 y1) y2) = ((@List.Forall a0 (y0 x0) y2) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y3 : type1245 a0 a1 => forall y4 : type1669, (forall y5 : type1470 a0 a1, forall y6 : list a0, (y3 y4 y5 (@nil a1) y6) = True) /\ (forall y5 : a1, forall y6 : type1470 a0 a1, forall y7 : list a1, forall y8 : list a0, (y3 y4 y6 (@cons a1 y5 y7) y8) = ((@List.Forall a0 (y6 y5) y8) /\ (y3 y4 y6 y7 y8)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 y1 y2)).
Definition term8 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : list a0) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@nil a1) x1.
Definition term10 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : list a0) := @eq Prop (@ALLPAIRS a0 a1 x0 (@nil a1) x1).
Definition term24 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a1) (x3 : list a0) := @ALLPAIRS a0 a1 x0 (@cons a1 x1 x2) x3.
Definition term29 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a0) := and (@List.Forall a0 (x0 x1) x2).
Definition term31 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : list a1) (x3 : list a0) := (@List.Forall a0 (x1 x0) x3) /\ (@ALLPAIRS a0 a1 x1 x2 x3).
Definition term20 (a0 : Type') (a1 : Type') := and (forall y0 : type1470 a0 a1, forall y1 : list a0, (@ALLPAIRS a0 a1 y0 (@nil a1) y1) = True).
Definition term19 (a0 : Type') (a1 : Type') := and (forall y0 : type1470 a0 a1, forall y1 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 (@nil a1) y1) = True).
Definition term7 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@nil a1).
Definition term45 (a0 : Type') (a1 : Type') := fun y0 : a1 => forall y1 : type1470 a0 a1, forall y2 : list a1, forall y3 : list a0, (@ALLPAIRS a0 a1 y1 (@cons a1 y0 y2) y3) = ((@List.Forall a0 (y1 y0) y3) /\ (@ALLPAIRS a0 a1 y1 y2 y3)).
Definition term44 (a0 : Type') (a1 : Type') := fun y0 : a1 => forall y1 : type1470 a0 a1, forall y2 : list a1, forall y3 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y4 : type1245 a0 a1 => forall y5 : type1669, (forall y6 : type1470 a0 a1, forall y7 : list a0, (y4 y5 y6 (@nil a1) y7) = True) /\ (forall y6 : a1, forall y7 : type1470 a0 a1, forall y8 : list a1, forall y9 : list a0, (y4 y5 y7 (@cons a1 y6 y8) y9) = ((@List.Forall a0 (y7 y6) y9) /\ (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y1 (@cons a1 y0 y2) y3) = ((@List.Forall a0 (y1 y0) y3) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y4 : type1245 a0 a1 => forall y5 : type1669, (forall y6 : type1470 a0 a1, forall y7 : list a0, (y4 y5 y6 (@nil a1) y7) = True) /\ (forall y6 : a1, forall y7 : type1470 a0 a1, forall y8 : list a1, forall y9 : list a0, (y4 y5 y7 (@cons a1 y6 y8) y9) = ((@List.Forall a0 (y7 y6) y9) /\ (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y1 y2 y3)).
Definition term18 (a0 : Type') (a1 : Type') := forall y0 : type1470 a0 a1, forall y1 : list a0, (@ALLPAIRS a0 a1 y0 (@nil a1) y1) = True.
Definition term17 (a0 : Type') (a1 : Type') := forall y0 : type1470 a0 a1, forall y1 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 (@nil a1) y1) = True.
Definition term35 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : list a1) := forall y0 : list a0, (@ALLPAIRS a0 a1 x1 (@cons a1 x0 x2) y0) = ((@List.Forall a0 (x1 x0) y0) /\ (@ALLPAIRS a0 a1 x1 x2 y0)).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : list a1) := forall y0 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y1 : type1245 a0 a1 => forall y2 : type1669, (forall y3 : type1470 a0 a1, forall y4 : list a0, (y1 y2 y3 (@nil a1) y4) = True) /\ (forall y3 : a1, forall y4 : type1470 a0 a1, forall y5 : list a1, forall y6 : list a0, (y1 y2 y4 (@cons a1 y3 y5) y6) = ((@List.Forall a0 (y4 y3) y6) /\ (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 (@cons a1 x0 x2) y0) = ((@List.Forall a0 (x1 x0) y0) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y1 : type1245 a0 a1 => forall y2 : type1669, (forall y3 : type1470 a0 a1, forall y4 : list a0, (y1 y2 y3 (@nil a1) y4) = True) /\ (forall y3 : a1, forall y4 : type1470 a0 a1, forall y5 : list a1, forall y6 : list a0, (y1 y2 y4 (@cons a1 y3 y5) y6) = ((@List.Forall a0 (y4 y3) y6) /\ (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 x2 y0)).
Definition term3 := @pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))))))).
Definition term14 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := forall y0 : list a0, (@ALLPAIRS a0 a1 x0 (@nil a1) y0) = True.
Definition term13 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := forall y0 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y1 : type1245 a0 a1 => forall y2 : type1669, (forall y3 : type1470 a0 a1, forall y4 : list a0, (y1 y2 y3 (@nil a1) y4) = True) /\ (forall y3 : a1, forall y4 : type1470 a0 a1, forall y5 : list a1, forall y6 : list a0, (y1 y2 y4 (@cons a1 y3 y5) y6) = ((@List.Forall a0 (y4 y3) y6) /\ (y1 y2 y4 y5 y6)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@nil a1) y0) = True.
Definition term21 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a1) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@cons a1 x1 x2).
Definition term26 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a1) (x3 : list a0) := @eq Prop (@ALLPAIRS a0 a1 x0 (@cons a1 x1 x2) x3).
Definition term47 (a0 : Type') (a1 : Type') := forall y0 : a1, forall y1 : type1470 a0 a1, forall y2 : list a1, forall y3 : list a0, (@ALLPAIRS a0 a1 y1 (@cons a1 y0 y2) y3) = ((@List.Forall a0 (y1 y0) y3) /\ (@ALLPAIRS a0 a1 y1 y2 y3)).
Definition term46 (a0 : Type') (a1 : Type') := forall y0 : a1, forall y1 : type1470 a0 a1, forall y2 : list a1, forall y3 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y4 : type1245 a0 a1 => forall y5 : type1669, (forall y6 : type1470 a0 a1, forall y7 : list a0, (y4 y5 y6 (@nil a1) y7) = True) /\ (forall y6 : a1, forall y7 : type1470 a0 a1, forall y8 : list a1, forall y9 : list a0, (y4 y5 y7 (@cons a1 y6 y8) y9) = ((@List.Forall a0 (y7 y6) y9) /\ (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y1 (@cons a1 y0 y2) y3) = ((@List.Forall a0 (y1 y0) y3) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y4 : type1245 a0 a1 => forall y5 : type1669, (forall y6 : type1470 a0 a1, forall y7 : list a0, (y4 y5 y6 (@nil a1) y7) = True) /\ (forall y6 : a1, forall y7 : type1470 a0 a1, forall y8 : list a1, forall y9 : list a0, (y4 y5 y7 (@cons a1 y6 y8) y9) = ((@List.Forall a0 (y7 y6) y9) /\ (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y1 y2 y3)).
Definition term23 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : list a1) (x3 : list a0) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@cons a1 x1 x2) x3.
Definition term48 (a0 : Type') (a1 : Type') := (forall y0 : type1470 a0 a1, forall y1 : list a0, (@ALLPAIRS a0 a1 y0 (@nil a1) y1) = True) /\ (forall y0 : a1, forall y1 : type1470 a0 a1, forall y2 : list a1, forall y3 : list a0, (@ALLPAIRS a0 a1 y1 (@cons a1 y0 y2) y3) = ((@List.Forall a0 (y1 y0) y3) /\ (@ALLPAIRS a0 a1 y1 y2 y3))).
Definition term4 (a0 : Type') (a1 : Type') := (forall y0 : type1470 a0 a1, forall y1 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y0 (@nil a1) y1) = True) /\ (forall y0 : a1, forall y1 : type1470 a0 a1, forall y2 : list a1, forall y3 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y4 : type1245 a0 a1 => forall y5 : type1669, (forall y6 : type1470 a0 a1, forall y7 : list a0, (y4 y5 y6 (@nil a1) y7) = True) /\ (forall y6 : a1, forall y7 : type1470 a0 a1, forall y8 : list a1, forall y9 : list a0, (y4 y5 y7 (@cons a1 y6 y8) y9) = ((@List.Forall a0 (y7 y6) y9) /\ (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y1 (@cons a1 y0 y2) y3) = ((@List.Forall a0 (y1 y0) y3) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y4 : type1245 a0 a1 => forall y5 : type1669, (forall y6 : type1470 a0 a1, forall y7 : list a0, (y4 y5 y6 (@nil a1) y7) = True) /\ (forall y6 : a1, forall y7 : type1470 a0 a1, forall y8 : list a1, forall y9 : list a0, (y4 y5 y7 (@cons a1 y6 y8) y9) = ((@List.Forall a0 (y7 y6) y9) /\ (y4 y5 y7 y8 y9)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) y1 y2 y3))).
Definition term9 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : list a0) := @eq Prop (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 (@nil a1) x1).
Definition term5 (a0 : Type') (a1 : Type') := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))).
Definition term27 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : list a1) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0 x1.
Definition term37 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) := fun y0 : list a1 => forall y1 : list a0, (@ALLPAIRS a0 a1 x1 (@cons a1 x0 y0) y1) = ((@List.Forall a0 (x1 x0) y1) /\ (@ALLPAIRS a0 a1 x1 y0 y1)).
Definition term36 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) := fun y0 : list a1 => forall y1 : list a0, (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 (@cons a1 x0 y0) y1) = ((@List.Forall a0 (x1 x0) y1) /\ (@ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y2 : type1245 a0 a1 => forall y3 : type1669, (forall y4 : type1470 a0 a1, forall y5 : list a0, (y2 y3 y4 (@nil a1) y5) = True) /\ (forall y4 : a1, forall y5 : type1470 a0 a1, forall y6 : list a1, forall y7 : list a0, (y2 y3 y5 (@cons a1 y4 y6) y7) = ((@List.Forall a0 (y5 y4) y7) /\ (y2 y3 y5 y6 y7)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x1 y0 y1)).
Definition term6 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) := @ε ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) -> (a1 -> a0 -> Prop) -> (list a1) -> (list a0) -> Prop) (fun y0 : type1245 a0 a1 => forall y1 : type1669, (forall y2 : type1470 a0 a1, forall y3 : list a0, (y0 y1 y2 (@nil a1) y3) = True) /\ (forall y2 : a1, forall y3 : type1470 a0 a1, forall y4 : list a1, forall y5 : list a0, (y0 y1 y3 (@cons a1 y2 y4) y5) = ((@List.Forall a0 (y3 y2) y5) /\ (y0 y1 y3 y4 y5)))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat (prod nat nat)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat (prod nat nat))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))))))) x0.
