require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term45 ≔ (λ y0 : El int, (∀ (λ y1 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) y0 y1))) (∧ (int_divides (int_gcd ((@̦‚ int int) y0 y1)) y0) (∧ (int_divides (int_gcd ((@̦‚ int int) y0 y1)) y1) (∃ (λ y2 : El int, (∃ (λ y3 : El int, (= (int_gcd ((@̦‚ int int) y0 y1)) (int_add (int_mul y0 y2) (int_mul y1 y3)))))))))))));
symbol term44 ≔ (λ y0 : El int, (∀ (λ y1 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1)) y0) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1)) y1) (∃ (λ y2 : El int, (∃ (λ y3 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y4 : El type1259, (∀ (λ y5 : El type1670, (∀ (λ y6 : El int, (∀ (λ y7 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y4 y5 ((@̦‚ int int) y6 y7))) (∧ (int_divides (y4 y5 ((@̦‚ int int) y6 y7)) y6) (∧ (int_divides (y4 y5 ((@̦‚ int int) y6 y7)) y7) (∃ (λ y8 : El int, (∃ (λ y9 : El int, (= (y4 y5 ((@̦‚ int int) y6 y7)) (int_add (int_mul y6 y8) (int_mul y7 y9))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1)) (int_add (int_mul y0 y2) (int_mul y1 y3)))))))))))));
symbol term19 (x0: El int) (x1: El int) ≔ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x1);
symbol term25 (x0: El int) (x1: El int) (x2: El int) (x3: El int) ≔ (int_add (int_mul x0 x1) (int_mul x2 x3));
symbol term22 (x0: El int) (x1: El int) ≔ (∧ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x1));
symbol term18 (x0: El int) (x1: El int) ≔ (∧ (int_divides (int_gcd ((@̦‚ int int) x1 x0)) x1));
symbol term43 (x0: El int) ≔ (∀ (λ y0 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) x0 y0))) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 y0)) x0) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 y0)) y0) (∃ (λ y1 : El int, (∃ (λ y2 : El int, (= (int_gcd ((@̦‚ int int) x0 y0)) (int_add (int_mul x0 y1) (int_mul y0 y2))))))))))));
symbol term42 (x0: El int) ≔ (∀ (λ y0 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0)) x0) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0)) y0) (∃ (λ y1 : El int, (∃ (λ y2 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0)) (int_add (int_mul x0 y1) (int_mul y0 y2))))))))))));
symbol term24 (x0: El int) (x1: El int) ≔ ((@= int) (int_gcd ((@̦‚ int int) x0 x1)));
symbol term36 (x0: El int) (x1: El int) ≔ (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x0) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x1) (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1)))))))));
symbol term35 (x0: El int) (x1: El int) ≔ (∧ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x1) (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= (int_gcd ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1))))))));
symbol term39 (x0: El int) (x1: El int) ≔ (∧ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) x0 x1))) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x0) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x1) (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= (int_gcd ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1))))))))));
symbol term37 (x0: El int) (x1: El int) ≔ (∧ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x0) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x1) (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= (int_gcd ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1)))))))));
symbol term27 (x0: El int) (x1: El int) (x2: El int) ≔ (λ y0 : El int, (= (int_gcd ((@̦‚ int int) x0 x2)) (int_add (int_mul x0 x1) (int_mul x2 y0))));
symbol term21 (x0: El int) (x1: El int) ≔ (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x1));
symbol term17 (x0: El int) (x1: El int) ≔ (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x1 x0)) x1));
symbol term41 (x0: El int) ≔ (λ y0 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) x0 y0))) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 y0)) x0) (∧ (int_divides (int_gcd ((@̦‚ int int) x0 y0)) y0) (∃ (λ y1 : El int, (∃ (λ y2 : El int, (= (int_gcd ((@̦‚ int int) x0 y0)) (int_add (int_mul x0 y1) (int_mul y0 y2)))))))))));
symbol term15 (x0: El int) (x1: El int) ≔ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x1 x0)) x1);
symbol term10 (x0: El int) (x1: El int) ≔ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) x0 x1)));
symbol term16 (x0: El int) (x1: El int) ≔ (int_divides (int_gcd ((@̦‚ int int) x1 x0)) x1);
symbol term9 (x0: El int) (x1: El int) ≔ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)));
symbol term1 ≔ (∀ (λ y0 : El type1670, (∀ (λ y1 : El int, (∀ (λ y2 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) y0 ((@̦‚ int int) y1 y2))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) y0 ((@̦‚ int int) y1 y2)) y1) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) y0 ((@̦‚ int int) y1 y2)) y2) (∃ (λ y3 : El int, (∃ (λ y4 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y5 : El type1259, (∀ (λ y6 : El type1670, (∀ (λ y7 : El int, (∀ (λ y8 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y5 y6 ((@̦‚ int int) y7 y8))) (∧ (int_divides (y5 y6 ((@̦‚ int int) y7 y8)) y7) (∧ (int_divides (y5 y6 ((@̦‚ int int) y7 y8)) y8) (∃ (λ y9 : El int, (∃ (λ y10 : El int, (= (y5 y6 ((@̦‚ int int) y7 y8)) (int_add (int_mul y7 y9) (int_mul y8 y10))))))))))))))))) y0 ((@̦‚ int int) y1 y2)) (int_add (int_mul y1 y3) (int_mul y2 y4))))))))))))))));
symbol term12 (x0: El int) (x1: El int) ≔ (∧ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) x0 x1))));
symbol term0 ≔ ((λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5)))))))))))))))))));
symbol term3 ≔ ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))))));
symbol term46 ≔ (∀ (λ y0 : El int, (∀ (λ y1 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (int_gcd ((@̦‚ int int) y0 y1))) (∧ (int_divides (int_gcd ((@̦‚ int int) y0 y1)) y0) (∧ (int_divides (int_gcd ((@̦‚ int int) y0 y1)) y1) (∃ (λ y2 : El int, (∃ (λ y3 : El int, (= (int_gcd ((@̦‚ int int) y0 y1)) (int_add (int_mul y0 y2) (int_mul y1 y3))))))))))))));
symbol term4 ≔ (∀ (λ y0 : El int, (∀ (λ y1 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1)) y0) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1)) y1) (∃ (λ y2 : El int, (∃ (λ y3 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y4 : El type1259, (∀ (λ y5 : El type1670, (∀ (λ y6 : El int, (∀ (λ y7 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y4 y5 ((@̦‚ int int) y6 y7))) (∧ (int_divides (y4 y5 ((@̦‚ int int) y6 y7)) y6) (∧ (int_divides (y4 y5 ((@̦‚ int int) y6 y7)) y7) (∃ (λ y8 : El int, (∃ (λ y9 : El int, (= (y4 y5 ((@̦‚ int int) y6 y7)) (int_add (int_mul y6 y8) (int_mul y7 y9))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) y0 y1)) (int_add (int_mul y0 y2) (int_mul y1 y3))))))))))))));
symbol term28 (x0: El int) (x1: El int) (x2: El int) ≔ (∃ (λ y0 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x2)) (int_add (int_mul x0 x1) (int_mul x2 y0)))));
symbol term29 (x0: El int) (x1: El int) (x2: El int) ≔ (∃ (λ y0 : El int, (= (int_gcd ((@̦‚ int int) x0 x2)) (int_add (int_mul x0 x1) (int_mul x2 y0)))));
symbol term38 (x0: El int) (x1: El int) ≔ (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x0) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x1) (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1))))))))));
symbol term20 (x0: El int) (x1: El int) ≔ (int_divides (int_gcd ((@̦‚ int int) x0 x1)) x1);
symbol term6 (x0: El int) (x1: El int) ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1));
symbol term2 ≔ ((λ y0 : El type1670, (∀ (λ y1 : El int, (∀ (λ y2 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) y0 ((@̦‚ int int) y1 y2))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) y0 ((@̦‚ int int) y1 y2)) y1) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) y0 ((@̦‚ int int) y1 y2)) y2) (∃ (λ y3 : El int, (∃ (λ y4 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y5 : El type1259, (∀ (λ y6 : El type1670, (∀ (λ y7 : El int, (∀ (λ y8 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y5 y6 ((@̦‚ int int) y7 y8))) (∧ (int_divides (y5 y6 ((@̦‚ int int) y7 y8)) y7) (∧ (int_divides (y5 y6 ((@̦‚ int int) y7 y8)) y8) (∃ (λ y9 : El int, (∃ (λ y10 : El int, (= (y5 y6 ((@̦‚ int int) y7 y8)) (int_add (int_mul y7 y9) (int_mul y8 y10))))))))))))))))) y0 ((@̦‚ int int) y1 y2)) (int_add (int_mul y1 y3) (int_mul y2 y4))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))));
symbol term40 (x0: El int) ≔ (λ y0 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0))) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0)) x0) (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0)) y0) (∃ (λ y1 : El int, (∃ (λ y2 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y3 : El type1259, (∀ (λ y4 : El type1670, (∀ (λ y5 : El int, (∀ (λ y6 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y3 y4 ((@̦‚ int int) y5 y6))) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y5) (∧ (int_divides (y3 y4 ((@̦‚ int int) y5 y6)) y6) (∃ (λ y7 : El int, (∃ (λ y8 : El int, (= (y3 y4 ((@̦‚ int int) y5 y6)) (int_add (int_mul y5 y7) (int_mul y6 y8))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 y0)) (int_add (int_mul x0 y1) (int_mul y0 y2)))))))))));
symbol term26 (x0: El int) (x1: El int) (x2: El int) ≔ (λ y0 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y1 : El type1259, (∀ (λ y2 : El type1670, (∀ (λ y3 : El int, (∀ (λ y4 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y1 y2 ((@̦‚ int int) y3 y4))) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y3) (∧ (int_divides (y1 y2 ((@̦‚ int int) y3 y4)) y4) (∃ (λ y5 : El int, (∃ (λ y6 : El int, (= (y1 y2 ((@̦‚ int int) y3 y4)) (int_add (int_mul y3 y5) (int_mul y4 y6))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x2)) (int_add (int_mul x0 x1) (int_mul x2 y0))));
symbol term13 (x0: El int) (x1: El int) ≔ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)));
symbol term34 (x0: El int) (x1: El int) ≔ (∧ (int_divides ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) x1) (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1))))))));
symbol term11 (x0: El int) (x1: El int) ≔ (∧ (int_le (int_of_num (NUMERAL _0)) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1))));
symbol term33 (x0: El int) (x1: El int) ≔ (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= (int_gcd ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1)))))));
symbol term32 (x0: El int) (x1: El int) ≔ (∃ (λ y0 : El int, (∃ (λ y1 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1)))))));
symbol term7 (x0: El int) (x1: El int) ≔ (int_gcd ((@̦‚ int int) x0 x1));
symbol term31 (x0: El int) (x1: El int) ≔ (λ y0 : El int, (∃ (λ y1 : El int, (= (int_gcd ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1))))));
symbol term30 (x0: El int) (x1: El int) ≔ (λ y0 : El int, (∃ (λ y1 : El int, (= ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y2 : El type1259, (∀ (λ y3 : El type1670, (∀ (λ y4 : El int, (∀ (λ y5 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y2 y3 ((@̦‚ int int) y4 y5))) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y4) (∧ (int_divides (y2 y3 ((@̦‚ int int) y4 y5)) y5) (∃ (λ y6 : El int, (∃ (λ y7 : El int, (= (y2 y3 ((@̦‚ int int) y4 y5)) (int_add (int_mul y4 y6) (int_mul y5 y7))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)) (int_add (int_mul x0 y0) (int_mul x1 y1))))));
symbol term8 ≔ (int_le (int_of_num (NUMERAL _0)));
symbol term5 ≔ ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))));
symbol term23 (x0: El int) (x1: El int) ≔ ((@= int) ((@ε (fun (prod num (prod num (prod num (prod num (prod num (prod num num)))))) (fun (prod int int) int))) (λ y0 : El type1259, (∀ (λ y1 : El type1670, (∀ (λ y2 : El int, (∀ (λ y3 : El int, (∧ (int_le (int_of_num (NUMERAL _0)) (y0 y1 ((@̦‚ int int) y2 y3))) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y2) (∧ (int_divides (y0 y1 ((@̦‚ int int) y2 y3)) y3) (∃ (λ y4 : El int, (∃ (λ y5 : El int, (= (y0 y1 ((@̦‚ int int) y2 y3)) (int_add (int_mul y2 y4) (int_mul y3 y5))))))))))))))))) ((@̦‚ num (prod num (prod num (prod num (prod num (prod num num)))))) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num (prod num num))))) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num (prod num num)))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 _0)))))))) ((@̦‚ num (prod num (prod num num))) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT1 _0)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))))))) ((@̦‚ int int) x0 x1)));
symbol term14 (x0: El int) (x1: El int) ≔ (int_divides (int_gcd ((@̦‚ int int) x0 x1)));
