require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term23 (x0: El nadd) ≔ (⇒ (∃ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (¬ (= (dest_nadd x0 y1) (NUMERAL _0)))))))) (∃ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 y1) (nadd_rinv x0 y1)) (* y1 y1))) (dest_nadd x0 y1))))))));
symbol term7 (x0: El nadd) (x1: El num) ≔ (⇒ (∀ (λ y0 : El nadd, (∀ (λ y1 : El num, (⇒ (¬ (= (dest_nadd y0 y1) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd y0 y1) (nadd_rinv y0 y1)) (* y1 y1))) (dest_nadd y0 y1))))))) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 x1) (nadd_rinv x0 x1)) (* x1 x1))) (dest_nadd x0 x1)));
symbol term20 (x0: El nadd) ≔ (∃ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 y1) (nadd_rinv x0 y1)) (* y1 y1))) (dest_nadd x0 y1)))))));
symbol term12 (x0: El nadd) ≔ (∃ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (¬ (= (dest_nadd x0 y1) (NUMERAL _0))))))));
symbol term0 ≔ (∀ (λ y0 : El nadd, (∀ (λ y1 : El num, (⇒ (¬ (= (dest_nadd y0 y1) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd y0 y1) (nadd_rinv y0 y1)) (* y1 y1))) (dest_nadd y0 y1)))))));
symbol term4 (x0: El nadd) (x1: El num) ≔ (⇒ (¬ (= (dest_nadd x0 x1) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 x1) (nadd_rinv x0 x1)) (* x1 x1))) (dest_nadd x0 x1)));
symbol term1 (x0: El nadd) ≔ ((λ y0 : El nadd, (∀ (λ y1 : El num, (⇒ (¬ (= (dest_nadd y0 y1) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd y0 y1) (nadd_rinv y0 y1)) (* y1 y1))) (dest_nadd y0 y1)))))) x0);
symbol term8 ≔ (⇒ (∀ (λ y0 : El nadd, (∀ (λ y1 : El num, (⇒ (¬ (= (dest_nadd y0 y1) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd y0 y1) (nadd_rinv y0 y1)) (* y1 y1))) (dest_nadd y0 y1))))))) (∀ (λ y0 : El nadd, (∀ (λ y1 : El num, (⇒ (¬ (= (dest_nadd y0 y1) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd y0 y1) (nadd_rinv y0 y1)) (* y1 y1))) (dest_nadd y0 y1))))))));
symbol term6 (x0: El nadd) (x1: El num) ≔ (<= (dist ((@̦‚ num num) (* (dest_nadd x0 x1) (nadd_rinv x0 x1)) (* x1 x1))) (dest_nadd x0 x1));
symbol term19 (x0: El num) (x1: El nadd) ≔ (∀ (λ y0 : El num, (⇒ (<= x0 y0) (<= (dist ((@̦‚ num num) (* (dest_nadd x1 y0) (nadd_rinv x1 y0)) (* y0 y0))) (dest_nadd x1 y0)))));
symbol term3 (x0: El nadd) (x1: El num) ≔ ((λ y0 : El num, (⇒ (¬ (= (dest_nadd x0 y0) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 y0) (nadd_rinv x0 y0)) (* y0 y0))) (dest_nadd x0 y0)))) x1);
symbol term16 (x0: El num) (x1: El nadd) (x2: El num) ≔ (⇒ (∀ (λ y0 : El num, (⇒ (<= x0 y0) (¬ (= (dest_nadd x1 y0) (NUMERAL _0)))))) (¬ (= (dest_nadd x1 x2) (NUMERAL _0))));
symbol term14 (x0: El num) (x1: El nadd) (x2: El num) ≔ ((λ y0 : El num, (⇒ (<= x0 y0) (¬ (= (dest_nadd x1 y0) (NUMERAL _0))))) x2);
symbol term9 (x0: El nadd) ≔ ((λ y0 : El nadd, (⇒ (¬ (nadd_eq y0 (nadd_of_num (NUMERAL _0)))) (∃ (λ y1 : El num, (∀ (λ y2 : El num, (⇒ (<= y1 y2) (¬ (= (dest_nadd y0 y2) (NUMERAL _0)))))))))) x0);
symbol term15 (x0: El num) (x1: El nadd) (x2: El num) ≔ (⇒ (<= x0 x2) (¬ (= (dest_nadd x1 x2) (NUMERAL _0))));
symbol term13 (x0: El num) (x1: El nadd) ≔ (∀ (λ y0 : El num, (⇒ (<= x0 y0) (¬ (= (dest_nadd x1 y0) (NUMERAL _0))))));
symbol term25 ≔ (∀ (λ y0 : El nadd, (⇒ (¬ (nadd_eq y0 (nadd_of_num (NUMERAL _0)))) (∃ (λ y1 : El num, (∀ (λ y2 : El num, (⇒ (<= y1 y2) (<= (dist ((@̦‚ num num) (* (dest_nadd y0 y2) (nadd_rinv y0 y2)) (* y2 y2))) (dest_nadd y0 y2))))))))));
symbol term24 (x0: El nadd) ≔ (⇒ (¬ (nadd_eq x0 (nadd_of_num (NUMERAL _0)))) (∃ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 y1) (nadd_rinv x0 y1)) (* y1 y1))) (dest_nadd x0 y1))))))));
symbol term10 (x0: El nadd) ≔ (⇒ (¬ (nadd_eq x0 (nadd_of_num (NUMERAL _0)))) (∃ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (¬ (= (dest_nadd x0 y1) (NUMERAL _0)))))))));
symbol term18 (x0: El num) (x1: El nadd) (x2: El num) ≔ (⇒ (<= x0 x2) (<= (dist ((@̦‚ num num) (* (dest_nadd x1 x2) (nadd_rinv x1 x2)) (* x2 x2))) (dest_nadd x1 x2)));
symbol term22 (x0: El nadd) ≔ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (¬ (= (dest_nadd x0 y1) (NUMERAL _0)))))));
symbol term5 (x0: El nadd) (x1: El num) ≔ (¬ (= (dest_nadd x0 x1) (NUMERAL _0)));
symbol term11 (x0: El nadd) ≔ (¬ (nadd_eq x0 (nadd_of_num (NUMERAL _0))));
symbol term2 (x0: El nadd) ≔ (∀ (λ y0 : El num, (⇒ (¬ (= (dest_nadd x0 y0) (NUMERAL _0))) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 y0) (nadd_rinv x0 y0)) (* y0 y0))) (dest_nadd x0 y0)))));
symbol term21 (x0: El nadd) ≔ (λ y0 : El num, (∀ (λ y1 : El num, (⇒ (<= y0 y1) (<= (dist ((@̦‚ num num) (* (dest_nadd x0 y1) (nadd_rinv x0 y1)) (* y1 y1))) (dest_nadd x0 y1))))));
symbol term17 (x0: El num) (x1: El nadd) ≔ (⇒ (∀ (λ y0 : El num, (⇒ (<= x0 y0) (¬ (= (dest_nadd x1 y0) (NUMERAL _0)))))) (∀ (λ y0 : El num, (⇒ (<= x0 y0) (¬ (= (dest_nadd x1 y0) (NUMERAL _0)))))));
