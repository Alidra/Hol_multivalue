require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_terms;
symbol lem1101982 [_25350 _25351] : Prf ((λ ITLIST' : El (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun _25351 (fun _25350 _25350)) (fun (list _25351) (fun _25350 _25350)))), (∀ (λ _17988 : El (prod num (prod num (prod num (prod num (prod num num))))), (∧ (∀ (λ f : El (fun _25351 (fun _25350 _25350)), (∀ (λ b : El _25350, (= (ITLIST' _17988 f (@NIL _25351) b) b))))) (∀ (λ h : El _25351, (∀ (λ f : El (fun _25351 (fun _25350 _25350)), (∀ (λ t : El (list _25351), (∀ (λ b : El _25350, (= (ITLIST' _17988 f ((@CONS _25351) h t) b) (f h (ITLIST' _17988 f t b))))))))))))))) ((@ε (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun _25351 (fun _25350 _25350)) (fun (list _25351) (fun _25350 _25350))))) (λ ITLIST' : El (fun (prod num (prod num (prod num (prod num (prod num num))))) (fun (fun _25351 (fun _25350 _25350)) (fun (list _25351) (fun _25350 _25350)))), (∀ (λ _17988 : El (prod num (prod num (prod num (prod num (prod num num))))), (∧ (∀ (λ f : El (fun _25351 (fun _25350 _25350)), (∀ (λ b : El _25350, (= (ITLIST' _17988 f (@NIL _25351) b) b))))) (∀ (λ h : El _25351, (∀ (λ f : El (fun _25351 (fun _25350 _25350)), (∀ (λ t : El (list _25351), (∀ (λ b : El _25350, (= (ITLIST' _17988 f ((@CONS _25351) h t) b) (f h (ITLIST' _17988 f t b)))))))))))))))));
