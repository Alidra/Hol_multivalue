Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm1107739_term_abbrevs.
Require Import BETA_THM_spec.
Require Import SKOLEM_THM_spec.
Require Import list_RECURSION_spec.
Require Import thm9261_spec.
Require Import thm9306_spec.
Lemma lem1107340 {A B : Type'} (f : A -> B) : term0 A B f.
Proof. exact (@lem421 A B f). Qed.
Lemma lem1107341 {A B : Type'} (f : A -> B) : (term0 A B f) = (term1 A B f).
Proof. exact (eq_refl (term0 A B f)). Qed.
Lemma lem1107342 {A B : Type'} (f : A -> B) : term1 A B f.
Proof. exact (EQ_MP (@lem1107341 A B f) (@lem1107340 A B f)). Qed.
Lemma lem1107343 {A B : Type'} (f : A -> B) (y : A) : term2 A B f y.
Proof. exact (@lem1107342 A B f y). Qed.
Lemma lem1107344 {A B : Type'} (f : A -> B) (y : A) : (term2 A B f y) = ((term3 A B f y) = (f y)).
Proof. exact (eq_refl (term2 A B f y)). Qed.
Lemma lem1107347 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : ITLIST2' = (term4 _25645 _25647 _25655 _18034).
Proof. exact (h1). Qed.
Lemma lem1107348 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107349 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107347 _25645 _25647 _25655 ITLIST2' _18034 h1) (@lem1107348 _25645 _25647 _25655 f)). Qed.
Lemma lem1107351 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107352 {_25645 _25647 _25655 : Type'} (f : type760 _25645 _25647 _25655) (y : type1474 _25645 _25647 _25655) : (term6 _25645 _25647 _25655 f y) = (f y).
Proof. exact (@lem1107351 (type1474 _25645 _25647 _25655) (type1150 _25645 _25647 _25655) f y). Qed.
Lemma lem1107353 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (@lem1107352 _25645 _25647 _25655 (term4 _25645 _25647 _25655 _18034) f). Qed.
Lemma lem1107354 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (_18030 : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 _18030) = (term8 _25645 _25647 _25655 _18034 _18030).
Proof. exact (eq_refl (term5 _25645 _25647 _25655 _18034 _18030)). Qed.
Lemma lem1107355 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) : (term9 _25645 _25647 _25655 _18034) = (term4 _25645 _25647 _25655 _18034).
Proof. exact (fun_ext (fun _18030 : type1474 _25645 _25647 _25655 => @lem1107354 _25645 _25647 _25655 _18034 _18030)). Qed.
Lemma lem1107356 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107357 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107355 _25645 _25647 _25655 _18034) (@lem1107356 _25645 _25647 _25655 f)). Qed.
Lemma lem1107358 {_25645 _25647 _25655 : Type'} : (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645)) = (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107359 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term10 _25645 _25647 _25655 _18034 f) = (term11 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107358 _25645 _25647 _25655) (@lem1107357 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107360 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (eq_refl (term5 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107361 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : ((term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f)) = ((term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f)).
Proof. exact (MK_COMB (@lem1107359 _25645 _25647 _25655 _18034 f) (@lem1107360 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107362 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (EQ_MP (@lem1107361 _25645 _25647 _25655 _18034 f) (@lem1107353 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107363 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (TRANS (@lem1107349 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107362 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107364 {_25647 : Type'} : (@nil _25647) = (@nil _25647).
Proof. exact (eq_refl (@nil _25647)). Qed.
Lemma lem1107365 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f (@nil _25647)) = (term12 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107363 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107364 _25647)). Qed.
Lemma lem1107367 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107368 {_25645 _25647 _25655 : Type'} (f : type1150 _25645 _25647 _25655) (y : list _25647) : (term13 _25645 _25647 _25655 f y) = (f y).
Proof. exact (@lem1107367 (list _25647) (type1152 _25645 _25655) f y). Qed.
Lemma lem1107369 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term14 _25645 _25647 _25655 _18034 f) = (term12 _25645 _25647 _25655 _18034 f).
Proof. exact (@lem1107368 _25645 _25647 _25655 (term8 _25645 _25647 _25655 _18034 f) (@nil _25647)). Qed.
Lemma lem1107370 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (_18031 : list _25647) (f : type1474 _25645 _25647 _25655) : (term15 _25645 _25647 _25655 _18034 f _18031) = (term16 _25645 _25647 _25655 _18034 _18031 f).
Proof. exact (eq_refl (term15 _25645 _25647 _25655 _18034 f _18031)). Qed.
Lemma lem1107371 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term17 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (fun_ext (fun _18031 : list _25647 => @lem1107370 _25645 _25647 _25655 _18034 _18031 f)). Qed.
Lemma lem1107372 {_25647 : Type'} : (@nil _25647) = (@nil _25647).
Proof. exact (eq_refl (@nil _25647)). Qed.
Lemma lem1107373 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term14 _25645 _25647 _25655 _18034 f) = (term12 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107371 _25645 _25647 _25655 _18034 f) (@lem1107372 _25647)). Qed.
Lemma lem1107374 {_25645 _25655 : Type'} : (@eq ((list _25655) -> _25645 -> _25645)) = (@eq ((list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@eq ((list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107375 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term18 _25645 _25647 _25655 _18034 f) = (term19 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107374 _25645 _25655) (@lem1107373 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107376 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term12 _25645 _25647 _25655 _18034 f) = (term20 _25645 _25647 _25655 _18034 f).
Proof. exact (eq_refl (term12 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107377 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : ((term14 _25645 _25647 _25655 _18034 f) = (term12 _25645 _25647 _25655 _18034 f)) = ((term12 _25645 _25647 _25655 _18034 f) = (term20 _25645 _25647 _25655 _18034 f)).
Proof. exact (MK_COMB (@lem1107375 _25645 _25647 _25655 _18034 f) (@lem1107376 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107378 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term12 _25645 _25647 _25655 _18034 f) = (term20 _25645 _25647 _25655 _18034 f).
Proof. exact (EQ_MP (@lem1107377 _25645 _25647 _25655 _18034 f) (@lem1107369 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107379 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f (@nil _25647)) = (term20 _25645 _25647 _25655 _18034 f).
Proof. exact (TRANS (@lem1107365 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107378 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107380 {_25655 : Type'} (l2 : list _25655) : l2 = l2.
Proof. exact (eq_refl l2). Qed.
Lemma lem1107381 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f (@nil _25647) l2) = (term21 _25645 _25647 _25655 _18034 f l2).
Proof. exact (MK_COMB (@lem1107379 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107380 _25655 l2)). Qed.
Lemma lem1107383 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107384 {_25645 _25655 : Type'} (f : type1152 _25645 _25655) (y : list _25655) : (term22 _25645 _25655 f y) = (f y).
Proof. exact (@lem1107383 (list _25655) (_25645 -> _25645) f y). Qed.
Lemma lem1107385 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term23 _25645 _25647 _25655 _18034 f l2) = (term21 _25645 _25647 _25655 _18034 f l2).
Proof. exact (@lem1107384 _25645 _25655 (term20 _25645 _25647 _25655 _18034 f) l2). Qed.
Lemma lem1107386 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (_18032 : list _25655) : (term21 _25645 _25647 _25655 _18034 f _18032) = (term24 _25645 _25647 _25655 _18034 f _18032).
Proof. exact (eq_refl (term21 _25645 _25647 _25655 _18034 f _18032)). Qed.
Lemma lem1107387 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term25 _25645 _25647 _25655 _18034 f) = (term20 _25645 _25647 _25655 _18034 f).
Proof. exact (fun_ext (fun _18032 : list _25655 => @lem1107386 _25645 _25647 _25655 _18034 f _18032)). Qed.
Lemma lem1107388 {_25655 : Type'} (l2 : list _25655) : l2 = l2.
Proof. exact (eq_refl l2). Qed.
Lemma lem1107389 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term23 _25645 _25647 _25655 _18034 f l2) = (term21 _25645 _25647 _25655 _18034 f l2).
Proof. exact (MK_COMB (@lem1107387 _25645 _25647 _25655 _18034 f) (@lem1107388 _25655 l2)). Qed.
Lemma lem1107390 {_25645 : Type'} : (@eq (_25645 -> _25645)) = (@eq (_25645 -> _25645)).
Proof. exact (eq_refl (@eq (_25645 -> _25645))). Qed.
Lemma lem1107391 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term26 _25645 _25647 _25655 _18034 f l2) = (term27 _25645 _25647 _25655 _18034 f l2).
Proof. exact (MK_COMB (@lem1107390 _25645) (@lem1107389 _25645 _25647 _25655 _18034 f l2)). Qed.
Lemma lem1107392 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term21 _25645 _25647 _25655 _18034 f l2) = (term24 _25645 _25647 _25655 _18034 f l2).
Proof. exact (eq_refl (term21 _25645 _25647 _25655 _18034 f l2)). Qed.
Lemma lem1107393 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : ((term23 _25645 _25647 _25655 _18034 f l2) = (term21 _25645 _25647 _25655 _18034 f l2)) = ((term21 _25645 _25647 _25655 _18034 f l2) = (term24 _25645 _25647 _25655 _18034 f l2)).
Proof. exact (MK_COMB (@lem1107391 _25645 _25647 _25655 _18034 f l2) (@lem1107392 _25645 _25647 _25655 _18034 f l2)). Qed.
Lemma lem1107394 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term21 _25645 _25647 _25655 _18034 f l2) = (term24 _25645 _25647 _25655 _18034 f l2).
Proof. exact (EQ_MP (@lem1107393 _25645 _25647 _25655 _18034 f l2) (@lem1107385 _25645 _25647 _25655 _18034 f l2)). Qed.
Lemma lem1107395 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f (@nil _25647) l2) = (term24 _25645 _25647 _25655 _18034 f l2).
Proof. exact (TRANS (@lem1107381 _25645 _25647 _25655 f l2 ITLIST2' _18034 h1) (@lem1107394 _25645 _25647 _25655 _18034 f l2)). Qed.
Lemma lem1107396 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107397 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f (@nil _25647) l2 b) = (term28 _25645 _25647 _25655 _18034 f l2 b).
Proof. exact (MK_COMB (@lem1107395 _25645 _25647 _25655 f l2 ITLIST2' _18034 h1) (@lem1107396 _25645 b)). Qed.
Lemma lem1107399 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107400 {_25645 : Type'} (f : _25645 -> _25645) (y : _25645) : (term29 _25645 f y) = (f y).
Proof. exact (@lem1107399 _25645 _25645 f y). Qed.
Lemma lem1107401 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term30 _25645 _25647 _25655 _18034 f l2 b) = (term28 _25645 _25647 _25655 _18034 f l2 b).
Proof. exact (@lem1107400 _25645 (term24 _25645 _25647 _25655 _18034 f l2) b). Qed.
Lemma lem1107402 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18033 : _25645) : (term28 _25645 _25647 _25655 _18034 f l2 _18033) = (_18034 (@nil _25647) f l2 _18033).
Proof. exact (eq_refl (term28 _25645 _25647 _25655 _18034 f l2 _18033)). Qed.
Lemma lem1107403 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term31 _25645 _25647 _25655 _18034 f l2) = (term24 _25645 _25647 _25655 _18034 f l2).
Proof. exact (fun_ext (fun _18033 : _25645 => @lem1107402 _25645 _25647 _25655 _18034 f l2 _18033)). Qed.
Lemma lem1107404 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107405 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term30 _25645 _25647 _25655 _18034 f l2 b) = (term28 _25645 _25647 _25655 _18034 f l2 b).
Proof. exact (MK_COMB (@lem1107403 _25645 _25647 _25655 _18034 f l2) (@lem1107404 _25645 b)). Qed.
Lemma lem1107406 {_25645 : Type'} : (@eq _25645) = (@eq _25645).
Proof. exact (eq_refl (@eq _25645)). Qed.
Lemma lem1107407 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term32 _25645 _25647 _25655 _18034 f l2 b) = (term33 _25645 _25647 _25655 _18034 f l2 b).
Proof. exact (MK_COMB (@lem1107406 _25645) (@lem1107405 _25645 _25647 _25655 _18034 f l2 b)). Qed.
Lemma lem1107408 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term28 _25645 _25647 _25655 _18034 f l2 b) = (_18034 (@nil _25647) f l2 b).
Proof. exact (eq_refl (term28 _25645 _25647 _25655 _18034 f l2 b)). Qed.
Lemma lem1107409 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : ((term30 _25645 _25647 _25655 _18034 f l2 b) = (term28 _25645 _25647 _25655 _18034 f l2 b)) = ((term28 _25645 _25647 _25655 _18034 f l2 b) = (_18034 (@nil _25647) f l2 b)).
Proof. exact (MK_COMB (@lem1107407 _25645 _25647 _25655 _18034 f l2 b) (@lem1107408 _25645 _25647 _25655 _18034 f l2 b)). Qed.
Lemma lem1107410 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term28 _25645 _25647 _25655 _18034 f l2 b) = (_18034 (@nil _25647) f l2 b).
Proof. exact (EQ_MP (@lem1107409 _25645 _25647 _25655 _18034 f l2 b) (@lem1107401 _25645 _25647 _25655 _18034 f l2 b)). Qed.
Lemma lem1107411 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f (@nil _25647) l2 b) = (_18034 (@nil _25647) f l2 b).
Proof. exact (TRANS (@lem1107397 _25645 _25647 _25655 f l2 b ITLIST2' _18034 h1) (@lem1107410 _25645 _25647 _25655 _18034 f l2 b)). Qed.
Lemma lem1107412 {_25645 : Type'} : (@eq _25645) = (@eq _25645).
Proof. exact (eq_refl (@eq _25645)). Qed.
Lemma lem1107413 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term34 _25645 _25647 _25655 ITLIST2' f l2 b) = (term35 _25645 _25647 _25655 _18034 f l2 b).
Proof. exact (MK_COMB (@lem1107412 _25645) (@lem1107411 _25645 _25647 _25655 f l2 b ITLIST2' _18034 h1)). Qed.
Lemma lem1107414 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107415 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : ((ITLIST2' f (@nil _25647) l2 b) = b) = ((_18034 (@nil _25647) f l2 b) = b).
Proof. exact (MK_COMB (@lem1107413 _25645 _25647 _25655 f l2 b ITLIST2' _18034 h1) (@lem1107414 _25645 b)). Qed.
Lemma lem1107416 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term36 _25645 _25647 _25655 ITLIST2' f l2) = (term37 _25645 _25647 _25655 _18034 f l2).
Proof. exact (fun_ext (fun b : _25645 => @lem1107415 _25645 _25647 _25655 f l2 b ITLIST2' _18034 h1)). Qed.
Lemma lem1107417 {_25645 : Type'} : (@all _25645) = (@all _25645).
Proof. exact (eq_refl (@all _25645)). Qed.
Lemma lem1107418 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term38 _25645 _25647 _25655 ITLIST2' f l2) = (term39 _25645 _25647 _25655 _18034 f l2).
Proof. exact (MK_COMB (@lem1107417 _25645) (@lem1107416 _25645 _25647 _25655 f l2 ITLIST2' _18034 h1)). Qed.
Lemma lem1107419 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term40 _25645 _25647 _25655 ITLIST2' f) = (term41 _25645 _25647 _25655 _18034 f).
Proof. exact (fun_ext (fun l2 : list _25655 => @lem1107418 _25645 _25647 _25655 f l2 ITLIST2' _18034 h1)). Qed.
Lemma lem1107420 {_25655 : Type'} : (@all (list _25655)) = (@all (list _25655)).
Proof. exact (eq_refl (@all (list _25655))). Qed.
Lemma lem1107421 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term42 _25645 _25647 _25655 ITLIST2' f) = (term43 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107420 _25655) (@lem1107419 _25645 _25647 _25655 f ITLIST2' _18034 h1)). Qed.
Lemma lem1107422 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term44 _25645 _25647 _25655 ITLIST2') = (term45 _25645 _25647 _25655 _18034).
Proof. exact (fun_ext (fun f : type1474 _25645 _25647 _25655 => @lem1107421 _25645 _25647 _25655 f ITLIST2' _18034 h1)). Qed.
Lemma lem1107423 {_25645 _25647 _25655 : Type'} : (@all (_25647 -> _25655 -> _25645 -> _25645)) = (@all (_25647 -> _25655 -> _25645 -> _25645)).
Proof. exact (eq_refl (@all (_25647 -> _25655 -> _25645 -> _25645))). Qed.
Lemma lem1107424 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term46 _25645 _25647 _25655 ITLIST2') = (term47 _25645 _25647 _25655 _18034).
Proof. exact (MK_COMB (@lem1107423 _25645 _25647 _25655) (@lem1107422 _25645 _25647 _25655 ITLIST2' _18034 h1)). Qed.
Lemma lem1107425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem1107426 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term48 _25645 _25647 _25655 ITLIST2') = (term49 _25645 _25647 _25655 _18034).
Proof. exact (MK_COMB (@lem1107425) (@lem1107424 _25645 _25647 _25655 ITLIST2' _18034 h1)). Qed.
Lemma lem1107428 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : ITLIST2' = (term4 _25645 _25647 _25655 _18034).
Proof. exact (h1). Qed.
Lemma lem1107429 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107430 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107428 _25645 _25647 _25655 ITLIST2' _18034 h1) (@lem1107429 _25645 _25647 _25655 f)). Qed.
Lemma lem1107432 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107433 {_25645 _25647 _25655 : Type'} (f : type760 _25645 _25647 _25655) (y : type1474 _25645 _25647 _25655) : (term6 _25645 _25647 _25655 f y) = (f y).
Proof. exact (@lem1107432 (type1474 _25645 _25647 _25655) (type1150 _25645 _25647 _25655) f y). Qed.
Lemma lem1107434 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (@lem1107433 _25645 _25647 _25655 (term4 _25645 _25647 _25655 _18034) f). Qed.
Lemma lem1107435 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (_18030 : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 _18030) = (term8 _25645 _25647 _25655 _18034 _18030).
Proof. exact (eq_refl (term5 _25645 _25647 _25655 _18034 _18030)). Qed.
Lemma lem1107436 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) : (term9 _25645 _25647 _25655 _18034) = (term4 _25645 _25647 _25655 _18034).
Proof. exact (fun_ext (fun _18030 : type1474 _25645 _25647 _25655 => @lem1107435 _25645 _25647 _25655 _18034 _18030)). Qed.
Lemma lem1107437 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107438 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107436 _25645 _25647 _25655 _18034) (@lem1107437 _25645 _25647 _25655 f)). Qed.
Lemma lem1107439 {_25645 _25647 _25655 : Type'} : (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645)) = (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107440 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term10 _25645 _25647 _25655 _18034 f) = (term11 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107439 _25645 _25647 _25655) (@lem1107438 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107441 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (eq_refl (term5 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107442 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : ((term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f)) = ((term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f)).
Proof. exact (MK_COMB (@lem1107440 _25645 _25647 _25655 _18034 f) (@lem1107441 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107443 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (EQ_MP (@lem1107442 _25645 _25647 _25655 _18034 f) (@lem1107434 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107444 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (TRANS (@lem1107430 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107443 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107445 {_25647 : Type'} (h1' : _25647) (t1 : list _25647) : (@cons _25647 h1' t1) = (@cons _25647 h1' t1).
Proof. exact (eq_refl (@cons _25647 h1' t1)). Qed.
Lemma lem1107446 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term50 _25645 _25647 _25655 ITLIST2' f h1' t1) = (term51 _25645 _25647 _25655 _18034 f h1' t1).
Proof. exact (MK_COMB (@lem1107444 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107445 _25647 h1' t1)). Qed.
Lemma lem1107448 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107449 {_25645 _25647 _25655 : Type'} (f : type1150 _25645 _25647 _25655) (y : list _25647) : (term13 _25645 _25647 _25655 f y) = (f y).
Proof. exact (@lem1107448 (list _25647) (type1152 _25645 _25655) f y). Qed.
Lemma lem1107450 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) : (term52 _25645 _25647 _25655 _18034 f h1' t1) = (term51 _25645 _25647 _25655 _18034 f h1' t1).
Proof. exact (@lem1107449 _25645 _25647 _25655 (term8 _25645 _25647 _25655 _18034 f) (@cons _25647 h1' t1)). Qed.
Lemma lem1107451 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (_18031 : list _25647) (f : type1474 _25645 _25647 _25655) : (term15 _25645 _25647 _25655 _18034 f _18031) = (term16 _25645 _25647 _25655 _18034 _18031 f).
Proof. exact (eq_refl (term15 _25645 _25647 _25655 _18034 f _18031)). Qed.
Lemma lem1107452 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term17 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (fun_ext (fun _18031 : list _25647 => @lem1107451 _25645 _25647 _25655 _18034 _18031 f)). Qed.
Lemma lem1107453 {_25647 : Type'} (h1' : _25647) (t1 : list _25647) : (@cons _25647 h1' t1) = (@cons _25647 h1' t1).
Proof. exact (eq_refl (@cons _25647 h1' t1)). Qed.
Lemma lem1107454 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) : (term52 _25645 _25647 _25655 _18034 f h1' t1) = (term51 _25645 _25647 _25655 _18034 f h1' t1).
Proof. exact (MK_COMB (@lem1107452 _25645 _25647 _25655 _18034 f) (@lem1107453 _25647 h1' t1)). Qed.
Lemma lem1107455 {_25645 _25655 : Type'} : (@eq ((list _25655) -> _25645 -> _25645)) = (@eq ((list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@eq ((list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107456 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) : (term53 _25645 _25647 _25655 _18034 f h1' t1) = (term54 _25645 _25647 _25655 _18034 f h1' t1).
Proof. exact (MK_COMB (@lem1107455 _25645 _25655) (@lem1107454 _25645 _25647 _25655 _18034 f h1' t1)). Qed.
Lemma lem1107457 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term51 _25645 _25647 _25655 _18034 f h1' t1) = (term55 _25645 _25647 _25655 _18034 h1' t1 f).
Proof. exact (eq_refl (term51 _25645 _25647 _25655 _18034 f h1' t1)). Qed.
Lemma lem1107458 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : ((term52 _25645 _25647 _25655 _18034 f h1' t1) = (term51 _25645 _25647 _25655 _18034 f h1' t1)) = ((term51 _25645 _25647 _25655 _18034 f h1' t1) = (term55 _25645 _25647 _25655 _18034 h1' t1 f)).
Proof. exact (MK_COMB (@lem1107456 _25645 _25647 _25655 _18034 f h1' t1) (@lem1107457 _25645 _25647 _25655 _18034 h1' t1 f)). Qed.
Lemma lem1107459 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term51 _25645 _25647 _25655 _18034 f h1' t1) = (term55 _25645 _25647 _25655 _18034 h1' t1 f).
Proof. exact (EQ_MP (@lem1107458 _25645 _25647 _25655 _18034 h1' t1 f) (@lem1107450 _25645 _25647 _25655 _18034 f h1' t1)). Qed.
Lemma lem1107460 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term50 _25645 _25647 _25655 ITLIST2' f h1' t1) = (term55 _25645 _25647 _25655 _18034 h1' t1 f).
Proof. exact (TRANS (@lem1107446 _25645 _25647 _25655 f h1' t1 ITLIST2' _18034 h1) (@lem1107459 _25645 _25647 _25655 _18034 h1' t1 f)). Qed.
Lemma lem1107461 {_25655 : Type'} (l2 : list _25655) : l2 = l2.
Proof. exact (eq_refl l2). Qed.
Lemma lem1107462 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term56 _25645 _25647 _25655 ITLIST2' f h1' t1 l2) = (term57 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (MK_COMB (@lem1107460 _25645 _25647 _25655 h1' t1 f ITLIST2' _18034 h1) (@lem1107461 _25655 l2)). Qed.
Lemma lem1107464 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107465 {_25645 _25655 : Type'} (f : type1152 _25645 _25655) (y : list _25655) : (term22 _25645 _25655 f y) = (f y).
Proof. exact (@lem1107464 (list _25655) (_25645 -> _25645) f y). Qed.
Lemma lem1107466 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term58 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term57 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (@lem1107465 _25645 _25655 (term55 _25645 _25647 _25655 _18034 h1' t1 f) l2). Qed.
Lemma lem1107467 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (_18032 : list _25655) : (term57 _25645 _25647 _25655 _18034 h1' t1 f _18032) = (term59 _25645 _25647 _25655 _18034 h1' t1 f _18032).
Proof. exact (eq_refl (term57 _25645 _25647 _25655 _18034 h1' t1 f _18032)). Qed.
Lemma lem1107468 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term60 _25645 _25647 _25655 _18034 h1' t1 f) = (term55 _25645 _25647 _25655 _18034 h1' t1 f).
Proof. exact (fun_ext (fun _18032 : list _25655 => @lem1107467 _25645 _25647 _25655 _18034 h1' t1 f _18032)). Qed.
Lemma lem1107469 {_25655 : Type'} (l2 : list _25655) : l2 = l2.
Proof. exact (eq_refl l2). Qed.
Lemma lem1107470 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term58 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term57 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (MK_COMB (@lem1107468 _25645 _25647 _25655 _18034 h1' t1 f) (@lem1107469 _25655 l2)). Qed.
Lemma lem1107471 {_25645 : Type'} : (@eq (_25645 -> _25645)) = (@eq (_25645 -> _25645)).
Proof. exact (eq_refl (@eq (_25645 -> _25645))). Qed.
Lemma lem1107472 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term61 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term62 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (MK_COMB (@lem1107471 _25645) (@lem1107470 _25645 _25647 _25655 _18034 h1' t1 f l2)). Qed.
Lemma lem1107473 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term57 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term59 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (eq_refl (term57 _25645 _25647 _25655 _18034 h1' t1 f l2)). Qed.
Lemma lem1107474 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : ((term58 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term57 _25645 _25647 _25655 _18034 h1' t1 f l2)) = ((term57 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term59 _25645 _25647 _25655 _18034 h1' t1 f l2)).
Proof. exact (MK_COMB (@lem1107472 _25645 _25647 _25655 _18034 h1' t1 f l2) (@lem1107473 _25645 _25647 _25655 _18034 h1' t1 f l2)). Qed.
Lemma lem1107475 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term57 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term59 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (EQ_MP (@lem1107474 _25645 _25647 _25655 _18034 h1' t1 f l2) (@lem1107466 _25645 _25647 _25655 _18034 h1' t1 f l2)). Qed.
Lemma lem1107476 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term56 _25645 _25647 _25655 ITLIST2' f h1' t1 l2) = (term59 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (TRANS (@lem1107462 _25645 _25647 _25655 h1' t1 f l2 ITLIST2' _18034 h1) (@lem1107475 _25645 _25647 _25655 _18034 h1' t1 f l2)). Qed.
Lemma lem1107477 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107478 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term63 _25645 _25647 _25655 ITLIST2' f h1' t1 l2 b) = (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (MK_COMB (@lem1107476 _25645 _25647 _25655 h1' t1 f l2 ITLIST2' _18034 h1) (@lem1107477 _25645 b)). Qed.
Lemma lem1107480 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107481 {_25645 : Type'} (f : _25645 -> _25645) (y : _25645) : (term29 _25645 f y) = (f y).
Proof. exact (@lem1107480 _25645 _25645 f y). Qed.
Lemma lem1107482 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term65 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (@lem1107481 _25645 (term59 _25645 _25647 _25655 _18034 h1' t1 f l2) b). Qed.
Lemma lem1107483 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18033 : _25645) : (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 _18033) = (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 _18033).
Proof. exact (eq_refl (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 _18033)). Qed.
Lemma lem1107484 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term67 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term59 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (fun_ext (fun _18033 : _25645 => @lem1107483 _25645 _25647 _25655 _18034 h1' t1 f l2 _18033)). Qed.
Lemma lem1107485 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107486 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term65 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (MK_COMB (@lem1107484 _25645 _25647 _25655 _18034 h1' t1 f l2) (@lem1107485 _25645 b)). Qed.
Lemma lem1107487 {_25645 : Type'} : (@eq _25645) = (@eq _25645).
Proof. exact (eq_refl (@eq _25645)). Qed.
Lemma lem1107488 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term68 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term69 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (MK_COMB (@lem1107487 _25645) (@lem1107486 _25645 _25647 _25655 _18034 h1' t1 f l2 b)). Qed.
Lemma lem1107489 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (eq_refl (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b)). Qed.
Lemma lem1107490 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : ((term65 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b)) = ((term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b)).
Proof. exact (MK_COMB (@lem1107488 _25645 _25647 _25655 _18034 h1' t1 f l2 b) (@lem1107489 _25645 _25647 _25655 _18034 h1' t1 f l2 b)). Qed.
Lemma lem1107491 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term64 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (EQ_MP (@lem1107490 _25645 _25647 _25655 _18034 h1' t1 f l2 b) (@lem1107482 _25645 _25647 _25655 _18034 h1' t1 f l2 b)). Qed.
Lemma lem1107492 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term63 _25645 _25647 _25655 ITLIST2' f h1' t1 l2 b) = (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (TRANS (@lem1107478 _25645 _25647 _25655 h1' t1 f l2 b ITLIST2' _18034 h1) (@lem1107491 _25645 _25647 _25655 _18034 h1' t1 f l2 b)). Qed.
Lemma lem1107493 {_25645 : Type'} : (@eq _25645) = (@eq _25645).
Proof. exact (eq_refl (@eq _25645)). Qed.
Lemma lem1107494 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term70 _25645 _25647 _25655 ITLIST2' f h1' t1 l2 b) = (term71 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (MK_COMB (@lem1107493 _25645) (@lem1107492 _25645 _25647 _25655 h1' t1 f l2 b ITLIST2' _18034 h1)). Qed.
Lemma lem1107496 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : ITLIST2' = (term4 _25645 _25647 _25655 _18034).
Proof. exact (h1). Qed.
Lemma lem1107497 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107498 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107496 _25645 _25647 _25655 ITLIST2' _18034 h1) (@lem1107497 _25645 _25647 _25655 f)). Qed.
Lemma lem1107500 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107501 {_25645 _25647 _25655 : Type'} (f : type760 _25645 _25647 _25655) (y : type1474 _25645 _25647 _25655) : (term6 _25645 _25647 _25655 f y) = (f y).
Proof. exact (@lem1107500 (type1474 _25645 _25647 _25655) (type1150 _25645 _25647 _25655) f y). Qed.
Lemma lem1107502 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (@lem1107501 _25645 _25647 _25655 (term4 _25645 _25647 _25655 _18034) f). Qed.
Lemma lem1107503 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (_18030 : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 _18030) = (term8 _25645 _25647 _25655 _18034 _18030).
Proof. exact (eq_refl (term5 _25645 _25647 _25655 _18034 _18030)). Qed.
Lemma lem1107504 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) : (term9 _25645 _25647 _25655 _18034) = (term4 _25645 _25647 _25655 _18034).
Proof. exact (fun_ext (fun _18030 : type1474 _25645 _25647 _25655 => @lem1107503 _25645 _25647 _25655 _18034 _18030)). Qed.
Lemma lem1107505 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107506 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107504 _25645 _25647 _25655 _18034) (@lem1107505 _25645 _25647 _25655 f)). Qed.
Lemma lem1107507 {_25645 _25647 _25655 : Type'} : (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645)) = (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@eq ((list _25647) -> (list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107508 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term10 _25645 _25647 _25655 _18034 f) = (term11 _25645 _25647 _25655 _18034 f).
Proof. exact (MK_COMB (@lem1107507 _25645 _25647 _25655) (@lem1107506 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107509 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (eq_refl (term5 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107510 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : ((term7 _25645 _25647 _25655 _18034 f) = (term5 _25645 _25647 _25655 _18034 f)) = ((term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f)).
Proof. exact (MK_COMB (@lem1107508 _25645 _25647 _25655 _18034 f) (@lem1107509 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107511 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term5 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (EQ_MP (@lem1107510 _25645 _25647 _25655 _18034 f) (@lem1107502 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107512 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (TRANS (@lem1107498 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107511 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107513 {_25647 : Type'} (t1 : list _25647) : t1 = t1.
Proof. exact (eq_refl t1). Qed.
Lemma lem1107514 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (t1 : list _25647) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f t1) = (term15 _25645 _25647 _25655 _18034 f t1).
Proof. exact (MK_COMB (@lem1107512 _25645 _25647 _25655 f ITLIST2' _18034 h1) (@lem1107513 _25647 t1)). Qed.
Lemma lem1107516 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107517 {_25645 _25647 _25655 : Type'} (f : type1150 _25645 _25647 _25655) (y : list _25647) : (term13 _25645 _25647 _25655 f y) = (f y).
Proof. exact (@lem1107516 (list _25647) (type1152 _25645 _25655) f y). Qed.
Lemma lem1107518 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (t1 : list _25647) : (term72 _25645 _25647 _25655 _18034 f t1) = (term15 _25645 _25647 _25655 _18034 f t1).
Proof. exact (@lem1107517 _25645 _25647 _25655 (term8 _25645 _25647 _25655 _18034 f) t1). Qed.
Lemma lem1107519 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (_18031 : list _25647) (f : type1474 _25645 _25647 _25655) : (term15 _25645 _25647 _25655 _18034 f _18031) = (term16 _25645 _25647 _25655 _18034 _18031 f).
Proof. exact (eq_refl (term15 _25645 _25647 _25655 _18034 f _18031)). Qed.
Lemma lem1107520 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term17 _25645 _25647 _25655 _18034 f) = (term8 _25645 _25647 _25655 _18034 f).
Proof. exact (fun_ext (fun _18031 : list _25647 => @lem1107519 _25645 _25647 _25655 _18034 _18031 f)). Qed.
Lemma lem1107521 {_25647 : Type'} (t1 : list _25647) : t1 = t1.
Proof. exact (eq_refl t1). Qed.
Lemma lem1107522 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (t1 : list _25647) : (term72 _25645 _25647 _25655 _18034 f t1) = (term15 _25645 _25647 _25655 _18034 f t1).
Proof. exact (MK_COMB (@lem1107520 _25645 _25647 _25655 _18034 f) (@lem1107521 _25647 t1)). Qed.
Lemma lem1107523 {_25645 _25655 : Type'} : (@eq ((list _25655) -> _25645 -> _25645)) = (@eq ((list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@eq ((list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107524 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (t1 : list _25647) : (term73 _25645 _25647 _25655 _18034 f t1) = (term74 _25645 _25647 _25655 _18034 f t1).
Proof. exact (MK_COMB (@lem1107523 _25645 _25655) (@lem1107522 _25645 _25647 _25655 _18034 f t1)). Qed.
Lemma lem1107525 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term15 _25645 _25647 _25655 _18034 f t1) = (term16 _25645 _25647 _25655 _18034 t1 f).
Proof. exact (eq_refl (term15 _25645 _25647 _25655 _18034 f t1)). Qed.
Lemma lem1107526 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : ((term72 _25645 _25647 _25655 _18034 f t1) = (term15 _25645 _25647 _25655 _18034 f t1)) = ((term15 _25645 _25647 _25655 _18034 f t1) = (term16 _25645 _25647 _25655 _18034 t1 f)).
Proof. exact (MK_COMB (@lem1107524 _25645 _25647 _25655 _18034 f t1) (@lem1107525 _25645 _25647 _25655 _18034 t1 f)). Qed.
Lemma lem1107527 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term15 _25645 _25647 _25655 _18034 f t1) = (term16 _25645 _25647 _25655 _18034 t1 f).
Proof. exact (EQ_MP (@lem1107526 _25645 _25647 _25655 _18034 t1 f) (@lem1107518 _25645 _25647 _25655 _18034 f t1)). Qed.
Lemma lem1107528 {_25645 _25647 _25655 : Type'} (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (ITLIST2' f t1) = (term16 _25645 _25647 _25655 _18034 t1 f).
Proof. exact (TRANS (@lem1107514 _25645 _25647 _25655 f t1 ITLIST2' _18034 h1) (@lem1107527 _25645 _25647 _25655 _18034 t1 f)). Qed.
Lemma lem1107529 {_25655 : Type'} (l2 : list _25655) : (@tl _25655 l2) = (@tl _25655 l2).
Proof. exact (eq_refl (@tl _25655 l2)). Qed.
Lemma lem1107530 {_25645 _25647 _25655 : Type'} (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term75 _25645 _25647 _25655 ITLIST2' f t1 l2) = (term76 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (MK_COMB (@lem1107528 _25645 _25647 _25655 t1 f ITLIST2' _18034 h1) (@lem1107529 _25655 l2)). Qed.
Lemma lem1107532 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107533 {_25645 _25655 : Type'} (f : type1152 _25645 _25655) (y : list _25655) : (term22 _25645 _25655 f y) = (f y).
Proof. exact (@lem1107532 (list _25655) (_25645 -> _25645) f y). Qed.
Lemma lem1107534 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term77 _25645 _25647 _25655 _18034 t1 f l2) = (term76 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (@lem1107533 _25645 _25655 (term16 _25645 _25647 _25655 _18034 t1 f) (@tl _25655 l2)). Qed.
Lemma lem1107535 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (_18032 : list _25655) : (term78 _25645 _25647 _25655 _18034 t1 f _18032) = (term79 _25645 _25647 _25655 _18034 t1 f _18032).
Proof. exact (eq_refl (term78 _25645 _25647 _25655 _18034 t1 f _18032)). Qed.
Lemma lem1107536 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term80 _25645 _25647 _25655 _18034 t1 f) = (term16 _25645 _25647 _25655 _18034 t1 f).
Proof. exact (fun_ext (fun _18032 : list _25655 => @lem1107535 _25645 _25647 _25655 _18034 t1 f _18032)). Qed.
Lemma lem1107537 {_25655 : Type'} (l2 : list _25655) : (@tl _25655 l2) = (@tl _25655 l2).
Proof. exact (eq_refl (@tl _25655 l2)). Qed.
Lemma lem1107538 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term77 _25645 _25647 _25655 _18034 t1 f l2) = (term76 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (MK_COMB (@lem1107536 _25645 _25647 _25655 _18034 t1 f) (@lem1107537 _25655 l2)). Qed.
Lemma lem1107539 {_25645 : Type'} : (@eq (_25645 -> _25645)) = (@eq (_25645 -> _25645)).
Proof. exact (eq_refl (@eq (_25645 -> _25645))). Qed.
Lemma lem1107540 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term81 _25645 _25647 _25655 _18034 t1 f l2) = (term82 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (MK_COMB (@lem1107539 _25645) (@lem1107538 _25645 _25647 _25655 _18034 t1 f l2)). Qed.
Lemma lem1107541 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term76 _25645 _25647 _25655 _18034 t1 f l2) = (term83 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (eq_refl (term76 _25645 _25647 _25655 _18034 t1 f l2)). Qed.
Lemma lem1107542 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : ((term77 _25645 _25647 _25655 _18034 t1 f l2) = (term76 _25645 _25647 _25655 _18034 t1 f l2)) = ((term76 _25645 _25647 _25655 _18034 t1 f l2) = (term83 _25645 _25647 _25655 _18034 t1 f l2)).
Proof. exact (MK_COMB (@lem1107540 _25645 _25647 _25655 _18034 t1 f l2) (@lem1107541 _25645 _25647 _25655 _18034 t1 f l2)). Qed.
Lemma lem1107543 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term76 _25645 _25647 _25655 _18034 t1 f l2) = (term83 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (EQ_MP (@lem1107542 _25645 _25647 _25655 _18034 t1 f l2) (@lem1107534 _25645 _25647 _25655 _18034 t1 f l2)). Qed.
Lemma lem1107544 {_25645 _25647 _25655 : Type'} (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term75 _25645 _25647 _25655 ITLIST2' f t1 l2) = (term83 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (TRANS (@lem1107530 _25645 _25647 _25655 t1 f l2 ITLIST2' _18034 h1) (@lem1107543 _25645 _25647 _25655 _18034 t1 f l2)). Qed.
Lemma lem1107545 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107546 {_25645 _25647 _25655 : Type'} (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term84 _25645 _25647 _25655 ITLIST2' f t1 l2 b) = (term85 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (MK_COMB (@lem1107544 _25645 _25647 _25655 t1 f l2 ITLIST2' _18034 h1) (@lem1107545 _25645 b)). Qed.
Lemma lem1107548 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1107344 A B f y) (@lem1107343 A B f y)). Qed.
Lemma lem1107549 {_25645 : Type'} (f : _25645 -> _25645) (y : _25645) : (term29 _25645 f y) = (f y).
Proof. exact (@lem1107548 _25645 _25645 f y). Qed.
Lemma lem1107550 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term86 _25645 _25647 _25655 _18034 t1 f l2 b) = (term85 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (@lem1107549 _25645 (term83 _25645 _25647 _25655 _18034 t1 f l2) b). Qed.
Lemma lem1107551 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18033 : _25645) : (term85 _25645 _25647 _25655 _18034 t1 f l2 _18033) = (term87 _25645 _25647 _25655 _18034 t1 f l2 _18033).
Proof. exact (eq_refl (term85 _25645 _25647 _25655 _18034 t1 f l2 _18033)). Qed.
Lemma lem1107552 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term88 _25645 _25647 _25655 _18034 t1 f l2) = (term83 _25645 _25647 _25655 _18034 t1 f l2).
Proof. exact (fun_ext (fun _18033 : _25645 => @lem1107551 _25645 _25647 _25655 _18034 t1 f l2 _18033)). Qed.
Lemma lem1107553 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107554 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term86 _25645 _25647 _25655 _18034 t1 f l2 b) = (term85 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (MK_COMB (@lem1107552 _25645 _25647 _25655 _18034 t1 f l2) (@lem1107553 _25645 b)). Qed.
Lemma lem1107555 {_25645 : Type'} : (@eq _25645) = (@eq _25645).
Proof. exact (eq_refl (@eq _25645)). Qed.
Lemma lem1107556 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term89 _25645 _25647 _25655 _18034 t1 f l2 b) = (term90 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (MK_COMB (@lem1107555 _25645) (@lem1107554 _25645 _25647 _25655 _18034 t1 f l2 b)). Qed.
Lemma lem1107557 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term85 _25645 _25647 _25655 _18034 t1 f l2 b) = (term87 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (eq_refl (term85 _25645 _25647 _25655 _18034 t1 f l2 b)). Qed.
Lemma lem1107558 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : ((term86 _25645 _25647 _25655 _18034 t1 f l2 b) = (term85 _25645 _25647 _25655 _18034 t1 f l2 b)) = ((term85 _25645 _25647 _25655 _18034 t1 f l2 b) = (term87 _25645 _25647 _25655 _18034 t1 f l2 b)).
Proof. exact (MK_COMB (@lem1107556 _25645 _25647 _25655 _18034 t1 f l2 b) (@lem1107557 _25645 _25647 _25655 _18034 t1 f l2 b)). Qed.
Lemma lem1107559 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term85 _25645 _25647 _25655 _18034 t1 f l2 b) = (term87 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (EQ_MP (@lem1107558 _25645 _25647 _25655 _18034 t1 f l2 b) (@lem1107550 _25645 _25647 _25655 _18034 t1 f l2 b)). Qed.
Lemma lem1107560 {_25645 _25647 _25655 : Type'} (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term84 _25645 _25647 _25655 ITLIST2' f t1 l2 b) = (term87 _25645 _25647 _25655 _18034 t1 f l2 b).
Proof. exact (TRANS (@lem1107546 _25645 _25647 _25655 t1 f l2 b ITLIST2' _18034 h1) (@lem1107559 _25645 _25647 _25655 _18034 t1 f l2 b)). Qed.
Lemma lem1107561 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (h1' : _25647) (l2 : list _25655) : (term91 _25645 _25647 _25655 f h1' l2) = (term91 _25645 _25647 _25655 f h1' l2).
Proof. exact (eq_refl (term91 _25645 _25647 _25655 f h1' l2)). Qed.
Lemma lem1107562 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term92 _25645 _25647 _25655 h1' ITLIST2' f t1 l2 b) = (term93 _25645 _25647 _25655 h1' _18034 t1 f l2 b).
Proof. exact (MK_COMB (@lem1107561 _25645 _25647 _25655 f h1' l2) (@lem1107560 _25645 _25647 _25655 t1 f l2 b ITLIST2' _18034 h1)). Qed.
Lemma lem1107563 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : ((term63 _25645 _25647 _25655 ITLIST2' f h1' t1 l2 b) = (term92 _25645 _25647 _25655 h1' ITLIST2' f t1 l2 b)) = ((term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term93 _25645 _25647 _25655 h1' _18034 t1 f l2 b)).
Proof. exact (MK_COMB (@lem1107494 _25645 _25647 _25655 h1' t1 f l2 b ITLIST2' _18034 h1) (@lem1107562 _25645 _25647 _25655 h1' t1 f l2 b ITLIST2' _18034 h1)). Qed.
Lemma lem1107564 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term94 _25645 _25647 _25655 h1' ITLIST2' f t1 l2) = (term95 _25645 _25647 _25655 h1' _18034 t1 f l2).
Proof. exact (fun_ext (fun b : _25645 => @lem1107563 _25645 _25647 _25655 h1' t1 f l2 b ITLIST2' _18034 h1)). Qed.
Lemma lem1107565 {_25645 : Type'} : (@all _25645) = (@all _25645).
Proof. exact (eq_refl (@all _25645)). Qed.
Lemma lem1107566 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term96 _25645 _25647 _25655 h1' ITLIST2' f t1 l2) = (term97 _25645 _25647 _25655 h1' _18034 t1 f l2).
Proof. exact (MK_COMB (@lem1107565 _25645) (@lem1107564 _25645 _25647 _25655 h1' t1 f l2 ITLIST2' _18034 h1)). Qed.
Lemma lem1107567 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term98 _25645 _25647 _25655 h1' ITLIST2' f t1) = (term99 _25645 _25647 _25655 h1' _18034 t1 f).
Proof. exact (fun_ext (fun l2 : list _25655 => @lem1107566 _25645 _25647 _25655 h1' t1 f l2 ITLIST2' _18034 h1)). Qed.
Lemma lem1107568 {_25655 : Type'} : (@all (list _25655)) = (@all (list _25655)).
Proof. exact (eq_refl (@all (list _25655))). Qed.
Lemma lem1107569 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term100 _25645 _25647 _25655 h1' ITLIST2' f t1) = (term101 _25645 _25647 _25655 h1' _18034 t1 f).
Proof. exact (MK_COMB (@lem1107568 _25655) (@lem1107567 _25645 _25647 _25655 h1' t1 f ITLIST2' _18034 h1)). Qed.
Lemma lem1107570 {_25645 _25647 _25655 : Type'} (h1' : _25647) (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term102 _25645 _25647 _25655 h1' ITLIST2' f) = (term103 _25645 _25647 _25655 h1' _18034 f).
Proof. exact (fun_ext (fun t1 : list _25647 => @lem1107569 _25645 _25647 _25655 h1' t1 f ITLIST2' _18034 h1)). Qed.
Lemma lem1107571 {_25647 : Type'} : (@all (list _25647)) = (@all (list _25647)).
Proof. exact (eq_refl (@all (list _25647))). Qed.
Lemma lem1107572 {_25645 _25647 _25655 : Type'} (h1' : _25647) (f : type1474 _25645 _25647 _25655) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term104 _25645 _25647 _25655 h1' ITLIST2' f) = (term105 _25645 _25647 _25655 h1' _18034 f).
Proof. exact (MK_COMB (@lem1107571 _25647) (@lem1107570 _25645 _25647 _25655 h1' f ITLIST2' _18034 h1)). Qed.
Lemma lem1107573 {_25645 _25647 _25655 : Type'} (h1' : _25647) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term106 _25645 _25647 _25655 h1' ITLIST2') = (term107 _25645 _25647 _25655 h1' _18034).
Proof. exact (fun_ext (fun f : type1474 _25645 _25647 _25655 => @lem1107572 _25645 _25647 _25655 h1' f ITLIST2' _18034 h1)). Qed.
Lemma lem1107574 {_25645 _25647 _25655 : Type'} : (@all (_25647 -> _25655 -> _25645 -> _25645)) = (@all (_25647 -> _25655 -> _25645 -> _25645)).
Proof. exact (eq_refl (@all (_25647 -> _25655 -> _25645 -> _25645))). Qed.
Lemma lem1107575 {_25645 _25647 _25655 : Type'} (h1' : _25647) (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term108 _25645 _25647 _25655 h1' ITLIST2') = (term109 _25645 _25647 _25655 h1' _18034).
Proof. exact (MK_COMB (@lem1107574 _25645 _25647 _25655) (@lem1107573 _25645 _25647 _25655 h1' ITLIST2' _18034 h1)). Qed.
Lemma lem1107576 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term110 _25645 _25647 _25655 ITLIST2') = (term111 _25645 _25647 _25655 _18034).
Proof. exact (fun_ext (fun h1' : _25647 => @lem1107575 _25645 _25647 _25655 h1' ITLIST2' _18034 h1)). Qed.
Lemma lem1107577 {_25647 : Type'} : (@all _25647) = (@all _25647).
Proof. exact (eq_refl (@all _25647)). Qed.
Lemma lem1107578 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term112 _25645 _25647 _25655 ITLIST2') = (term113 _25645 _25647 _25655 _18034).
Proof. exact (MK_COMB (@lem1107577 _25647) (@lem1107576 _25645 _25647 _25655 ITLIST2' _18034 h1)). Qed.
Lemma lem1107579 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term114 _25645 _25647 _25655 ITLIST2') = (term115 _25645 _25647 _25655 _18034).
Proof. exact (MK_COMB (@lem1107426 _25645 _25647 _25655 ITLIST2' _18034 h1) (@lem1107578 _25645 _25647 _25655 ITLIST2' _18034 h1)). Qed.
Lemma lem1107580 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655).
Proof. exact (h1). Qed.
Lemma lem1107581 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107582 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647) f) = (term117 _25645 _25647 _25655 f).
Proof. exact (MK_COMB (@lem1107580 _25645 _25647 _25655 _18034 h1) (@lem1107581 _25645 _25647 _25655 f)). Qed.
Lemma lem1107583 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : (term117 _25645 _25647 _25655 f) = (term118 _25645 _25655).
Proof. exact (eq_refl (term117 _25645 _25647 _25655 f)). Qed.
Lemma lem1107584 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : (term119 _25645 _25647 _25655 _18034 f) = (term119 _25645 _25647 _25655 _18034 f).
Proof. exact (eq_refl (term119 _25645 _25647 _25655 _18034 f)). Qed.
Lemma lem1107585 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) : ((_18034 (@nil _25647) f) = (term117 _25645 _25647 _25655 f)) = ((_18034 (@nil _25647) f) = (term118 _25645 _25655)).
Proof. exact (MK_COMB (@lem1107584 _25645 _25647 _25655 _18034 f) (@lem1107583 _25645 _25647 _25655 f)). Qed.
Lemma lem1107586 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647) f) = (term118 _25645 _25655).
Proof. exact (EQ_MP (@lem1107585 _25645 _25647 _25655 _18034 f) (@lem1107582 _25645 _25647 _25655 f _18034 h1)). Qed.
Lemma lem1107587 {_25655 : Type'} (l2 : list _25655) : l2 = l2.
Proof. exact (eq_refl l2). Qed.
Lemma lem1107588 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647) f l2) = (term120 _25645 _25655 l2).
Proof. exact (MK_COMB (@lem1107586 _25645 _25647 _25655 f _18034 h1) (@lem1107587 _25655 l2)). Qed.
Lemma lem1107589 {_25645 _25655 : Type'} (l2 : list _25655) : (term120 _25645 _25655 l2) = (term121 _25645).
Proof. exact (eq_refl (term120 _25645 _25655 l2)). Qed.
Lemma lem1107590 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term122 _25645 _25647 _25655 _18034 f l2) = (term122 _25645 _25647 _25655 _18034 f l2).
Proof. exact (eq_refl (term122 _25645 _25647 _25655 _18034 f l2)). Qed.
Lemma lem1107591 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : ((_18034 (@nil _25647) f l2) = (term120 _25645 _25655 l2)) = ((_18034 (@nil _25647) f l2) = (term121 _25645)).
Proof. exact (MK_COMB (@lem1107590 _25645 _25647 _25655 _18034 f l2) (@lem1107589 _25645 _25655 l2)). Qed.
Lemma lem1107592 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647) f l2) = (term121 _25645).
Proof. exact (EQ_MP (@lem1107591 _25645 _25647 _25655 _18034 f l2) (@lem1107588 _25645 _25647 _25655 f l2 _18034 h1)). Qed.
Lemma lem1107593 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107594 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647) f l2 b) = (term123 _25645 b).
Proof. exact (MK_COMB (@lem1107592 _25645 _25647 _25655 f l2 _18034 h1) (@lem1107593 _25645 b)). Qed.
Lemma lem1107595 {_25645 : Type'} (b : _25645) : (term123 _25645 b) = b.
Proof. exact (eq_refl (term123 _25645 b)). Qed.
Lemma lem1107596 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term35 _25645 _25647 _25655 _18034 f l2 b) = (term35 _25645 _25647 _25655 _18034 f l2 b).
Proof. exact (eq_refl (term35 _25645 _25647 _25655 _18034 f l2 b)). Qed.
Lemma lem1107597 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : ((_18034 (@nil _25647) f l2 b) = (term123 _25645 b)) = ((_18034 (@nil _25647) f l2 b) = b).
Proof. exact (MK_COMB (@lem1107596 _25645 _25647 _25655 _18034 f l2 b) (@lem1107595 _25645 b)). Qed.
Lemma lem1107598 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : (_18034 (@nil _25647) f l2 b) = b.
Proof. exact (EQ_MP (@lem1107597 _25645 _25647 _25655 _18034 f l2 b) (@lem1107594 _25645 _25647 _25655 f l2 b _18034 h1)). Qed.
Lemma lem1107599 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : term39 _25645 _25647 _25655 _18034 f l2.
Proof. exact (fun b : _25645 => @lem1107598 _25645 _25647 _25655 f l2 b _18034 h1). Qed.
Lemma lem1107600 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : term43 _25645 _25647 _25655 _18034 f.
Proof. exact (fun l2 : list _25655 => @lem1107599 _25645 _25647 _25655 f l2 _18034 h1). Qed.
Lemma lem1107601 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) : term47 _25645 _25647 _25655 _18034.
Proof. exact (fun f : type1474 _25645 _25647 _25655 => @lem1107600 _25645 _25647 _25655 f _18034 h1). Qed.
Lemma lem1107602 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term124 _25645 _25647 _25655 _18034.
Proof. exact (h1). Qed.
Lemma lem1107603 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term125 _25645 _25647 _25655 _18034 h1'.
Proof. exact (@lem1107602 _25645 _25647 _25655 _18034 h1 h1'). Qed.
Lemma lem1107604 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) : (term125 _25645 _25647 _25655 _18034 h1') = (term126 _25645 _25647 _25655 h1' _18034).
Proof. exact (eq_refl (term125 _25645 _25647 _25655 _18034 h1')). Qed.
Lemma lem1107605 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term126 _25645 _25647 _25655 h1' _18034.
Proof. exact (EQ_MP (@lem1107604 _25645 _25647 _25655 h1' _18034) (@lem1107603 _25645 _25647 _25655 h1' _18034 h1)). Qed.
Lemma lem1107606 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term127 _25645 _25647 _25655 h1' _18034 t1.
Proof. exact (@lem1107605 _25645 _25647 _25655 h1' _18034 h1 t1). Qed.
Lemma lem1107607 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) : (term127 _25645 _25647 _25655 h1' _18034 t1) = ((term128 _25645 _25647 _25655 _18034 h1' t1) = (term129 _25645 _25647 _25655 h1' _18034 t1)).
Proof. exact (eq_refl (term127 _25645 _25647 _25655 h1' _18034 t1)). Qed.
Lemma lem1107608 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term128 _25645 _25647 _25655 _18034 h1' t1) = (term129 _25645 _25647 _25655 h1' _18034 t1).
Proof. exact (EQ_MP (@lem1107607 _25645 _25647 _25655 h1' _18034 t1) (@lem1107606 _25645 _25647 _25655 h1' t1 _18034 h1)). Qed.
Lemma lem1107609 {_25645 _25647 _25655 : Type'} (f : type1474 _25645 _25647 _25655) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1107610 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term130 _25645 _25647 _25655 _18034 h1' t1 f) = (term131 _25645 _25647 _25655 h1' _18034 t1 f).
Proof. exact (MK_COMB (@lem1107608 _25645 _25647 _25655 h1' t1 _18034 h1) (@lem1107609 _25645 _25647 _25655 f)). Qed.
Lemma lem1107611 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term131 _25645 _25647 _25655 h1' _18034 t1 f) = (term132 _25645 _25647 _25655 h1' _18034 t1 f).
Proof. exact (eq_refl (term131 _25645 _25647 _25655 h1' _18034 t1 f)). Qed.
Lemma lem1107612 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : (term133 _25645 _25647 _25655 _18034 h1' t1 f) = (term133 _25645 _25647 _25655 _18034 h1' t1 f).
Proof. exact (eq_refl (term133 _25645 _25647 _25655 _18034 h1' t1 f)). Qed.
Lemma lem1107613 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) : ((term130 _25645 _25647 _25655 _18034 h1' t1 f) = (term131 _25645 _25647 _25655 h1' _18034 t1 f)) = ((term130 _25645 _25647 _25655 _18034 h1' t1 f) = (term132 _25645 _25647 _25655 h1' _18034 t1 f)).
Proof. exact (MK_COMB (@lem1107612 _25645 _25647 _25655 _18034 h1' t1 f) (@lem1107611 _25645 _25647 _25655 h1' _18034 t1 f)). Qed.
Lemma lem1107614 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term130 _25645 _25647 _25655 _18034 h1' t1 f) = (term132 _25645 _25647 _25655 h1' _18034 t1 f).
Proof. exact (EQ_MP (@lem1107613 _25645 _25647 _25655 h1' _18034 t1 f) (@lem1107610 _25645 _25647 _25655 h1' t1 f _18034 h1)). Qed.
Lemma lem1107615 {_25655 : Type'} (l2 : list _25655) : l2 = l2.
Proof. exact (eq_refl l2). Qed.
Lemma lem1107616 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term134 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term135 _25645 _25647 _25655 h1' _18034 t1 f l2).
Proof. exact (MK_COMB (@lem1107614 _25645 _25647 _25655 h1' t1 f _18034 h1) (@lem1107615 _25655 l2)). Qed.
Lemma lem1107617 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term135 _25645 _25647 _25655 h1' _18034 t1 f l2) = (term136 _25645 _25647 _25655 h1' _18034 t1 f l2).
Proof. exact (eq_refl (term135 _25645 _25647 _25655 h1' _18034 t1 f l2)). Qed.
Lemma lem1107618 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : (term137 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term137 _25645 _25647 _25655 _18034 h1' t1 f l2).
Proof. exact (eq_refl (term137 _25645 _25647 _25655 _18034 h1' t1 f l2)). Qed.
Lemma lem1107619 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) : ((term134 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term135 _25645 _25647 _25655 h1' _18034 t1 f l2)) = ((term134 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term136 _25645 _25647 _25655 h1' _18034 t1 f l2)).
Proof. exact (MK_COMB (@lem1107618 _25645 _25647 _25655 _18034 h1' t1 f l2) (@lem1107617 _25645 _25647 _25655 h1' _18034 t1 f l2)). Qed.
Lemma lem1107620 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term134 _25645 _25647 _25655 _18034 h1' t1 f l2) = (term136 _25645 _25647 _25655 h1' _18034 t1 f l2).
Proof. exact (EQ_MP (@lem1107619 _25645 _25647 _25655 h1' _18034 t1 f l2) (@lem1107616 _25645 _25647 _25655 h1' t1 f l2 _18034 h1)). Qed.
Lemma lem1107621 {_25645 : Type'} (b : _25645) : b = b.
Proof. exact (eq_refl b). Qed.
Lemma lem1107622 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term138 _25645 _25647 _25655 h1' _18034 t1 f l2 b).
Proof. exact (MK_COMB (@lem1107620 _25645 _25647 _25655 h1' t1 f l2 _18034 h1) (@lem1107621 _25645 b)). Qed.
Lemma lem1107623 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term138 _25645 _25647 _25655 h1' _18034 t1 f l2 b) = (term93 _25645 _25647 _25655 h1' _18034 t1 f l2 b).
Proof. exact (eq_refl (term138 _25645 _25647 _25655 h1' _18034 t1 f l2 b)). Qed.
Lemma lem1107624 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : (term71 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term71 _25645 _25647 _25655 _18034 h1' t1 f l2 b).
Proof. exact (eq_refl (term71 _25645 _25647 _25655 _18034 h1' t1 f l2 b)). Qed.
Lemma lem1107625 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) : ((term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term138 _25645 _25647 _25655 h1' _18034 t1 f l2 b)) = ((term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term93 _25645 _25647 _25655 h1' _18034 t1 f l2 b)).
Proof. exact (MK_COMB (@lem1107624 _25645 _25647 _25655 _18034 h1' t1 f l2 b) (@lem1107623 _25645 _25647 _25655 h1' _18034 t1 f l2 b)). Qed.
Lemma lem1107626 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (b : _25645) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : (term66 _25645 _25647 _25655 _18034 h1' t1 f l2 b) = (term93 _25645 _25647 _25655 h1' _18034 t1 f l2 b).
Proof. exact (EQ_MP (@lem1107625 _25645 _25647 _25655 h1' _18034 t1 f l2 b) (@lem1107622 _25645 _25647 _25655 h1' t1 f l2 b _18034 h1)). Qed.
Lemma lem1107627 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (l2 : list _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term97 _25645 _25647 _25655 h1' _18034 t1 f l2.
Proof. exact (fun b : _25645 => @lem1107626 _25645 _25647 _25655 h1' t1 f l2 b _18034 h1). Qed.
Lemma lem1107628 {_25645 _25647 _25655 : Type'} (h1' : _25647) (t1 : list _25647) (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term101 _25645 _25647 _25655 h1' _18034 t1 f.
Proof. exact (fun l2 : list _25655 => @lem1107627 _25645 _25647 _25655 h1' t1 f l2 _18034 h1). Qed.
Lemma lem1107629 {_25645 _25647 _25655 : Type'} (h1' : _25647) (f : type1474 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term105 _25645 _25647 _25655 h1' _18034 f.
Proof. exact (fun t1 : list _25647 => @lem1107628 _25645 _25647 _25655 h1' t1 f _18034 h1). Qed.
Lemma lem1107630 {_25645 _25647 _25655 : Type'} (h1' : _25647) (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term109 _25645 _25647 _25655 h1' _18034.
Proof. exact (fun f : type1474 _25645 _25647 _25655 => @lem1107629 _25645 _25647 _25655 h1' f _18034 h1). Qed.
Lemma lem1107631 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term124 _25645 _25647 _25655 _18034) : term113 _25645 _25647 _25655 _18034.
Proof. exact (fun h1' : _25647 => @lem1107630 _25645 _25647 _25655 h1' _18034 h1). Qed.
Lemma lem1107632 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term139 _25645 _25647 _25655 _18034.
Proof. exact (h1). Qed.
Lemma lem1107633 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term124 _25645 _25647 _25655 _18034.
Proof. exact (proj2 (@lem1107632 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107634 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655).
Proof. exact (proj1 (@lem1107632 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107635 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : ((_18034 (@nil _25647)) = (term116 _25645 _25647 _25655)) = (term47 _25645 _25647 _25655 _18034).
Proof. exact (prop_ext (fun h2 : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655) => @lem1107601 _25645 _25647 _25655 _18034 h2) (fun h2 : term47 _25645 _25647 _25655 _18034 => @lem1107634 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107636 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term47 _25645 _25647 _25655 _18034.
Proof. exact (EQ_MP (@lem1107635 _25645 _25647 _25655 _18034 h1) (@lem1107634 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107637 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : (term124 _25645 _25647 _25655 _18034) = (term113 _25645 _25647 _25655 _18034).
Proof. exact (prop_ext (fun h2 : term124 _25645 _25647 _25655 _18034 => @lem1107631 _25645 _25647 _25655 _18034 h2) (fun h2 : term113 _25645 _25647 _25655 _18034 => @lem1107633 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107638 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term113 _25645 _25647 _25655 _18034.
Proof. exact (EQ_MP (@lem1107637 _25645 _25647 _25655 _18034 h1) (@lem1107633 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107639 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term115 _25645 _25647 _25655 _18034.
Proof. exact (conj (@lem1107636 _25645 _25647 _25655 _18034 h1) (@lem1107638 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107640 {A Z : Type'} (NIL' : Z) : term140 A Z NIL'.
Proof. exact (@lem1072128 A Z NIL'). Qed.
Lemma lem1107641 {A Z : Type'} (NIL' : Z) : (term140 A Z NIL') = (term141 A Z NIL').
Proof. exact (eq_refl (term140 A Z NIL')). Qed.
Lemma lem1107642 {A Z : Type'} (NIL' : Z) : term141 A Z NIL'.
Proof. exact (EQ_MP (@lem1107641 A Z NIL') (@lem1107640 A Z NIL')). Qed.
Lemma lem1107643 {A Z : Type'} (NIL' : Z) (CONS' : type1394 A Z) : term142 A Z NIL' CONS'.
Proof. exact (@lem1107642 A Z NIL' CONS'). Qed.
Lemma lem1107644 {A Z : Type'} (NIL' : Z) (CONS' : type1394 A Z) : (term142 A Z NIL' CONS') = (term143 A Z NIL' CONS').
Proof. exact (eq_refl (term142 A Z NIL' CONS')). Qed.
Lemma lem1107645 {A Z : Type'} (NIL' : Z) (CONS' : type1394 A Z) : term143 A Z NIL' CONS'.
Proof. exact (EQ_MP (@lem1107644 A Z NIL' CONS') (@lem1107643 A Z NIL' CONS')). Qed.
Lemma lem1107646 {_25645 _25647 _25655 : Type'} (NIL' : type761 _25645 _25647 _25655) (CONS' : type1460 _25645 _25647 _25655) : term144 _25645 _25647 _25655 NIL' CONS'.
Proof. exact (@lem1107645 _25647 (type761 _25645 _25647 _25655) NIL' CONS'). Qed.
Lemma lem1107647 {_25645 _25647 _25655 : Type'} : term145 _25645 _25647 _25655.
Proof. exact (@lem1107646 _25645 _25647 _25655 (term116 _25645 _25647 _25655) (term146 _25645 _25647 _25655)). Qed.
Lemma lem1107648 {_25645 _25647 _25655 : Type'} (a0 : _25647) : (term147 _25645 _25647 _25655 a0) = (term148 _25645 _25647 _25655 a0).
Proof. exact (eq_refl (term147 _25645 _25647 _25655 a0)). Qed.
Lemma lem1107649 {_25647 : Type'} (a1 : list _25647) : a1 = a1.
Proof. exact (eq_refl a1). Qed.
Lemma lem1107650 {_25645 _25647 _25655 : Type'} (a0 : _25647) (a1 : list _25647) : (term149 _25645 _25647 _25655 a0 a1) = (term150 _25645 _25647 _25655 a0 a1).
Proof. exact (MK_COMB (@lem1107648 _25645 _25647 _25655 a0) (@lem1107649 _25647 a1)). Qed.
Lemma lem1107651 {_25645 _25647 _25655 : Type'} (a1 : list _25647) (a0 : _25647) : (term150 _25645 _25647 _25655 a0 a1) = (term151 _25645 _25647 _25655 a0).
Proof. exact (eq_refl (term150 _25645 _25647 _25655 a0 a1)). Qed.
Lemma lem1107652 {_25645 _25647 _25655 : Type'} (a1 : list _25647) (a0 : _25647) : (term149 _25645 _25647 _25655 a0 a1) = (term151 _25645 _25647 _25655 a0).
Proof. exact (TRANS (@lem1107650 _25645 _25647 _25655 a0 a1) (@lem1107651 _25645 _25647 _25655 a1 a0)). Qed.
Lemma lem1107653 {_25645 _25647 _25655 : Type'} (fn : type1147 _25645 _25647 _25655) (a1 : list _25647) : (fn a1) = (fn a1).
Proof. exact (eq_refl (fn a1)). Qed.
Lemma lem1107654 {_25645 _25647 _25655 : Type'} (a0 : _25647) (fn : type1147 _25645 _25647 _25655) (a1 : list _25647) : (term152 _25645 _25647 _25655 a0 fn a1) = (term153 _25645 _25647 _25655 a0 fn a1).
Proof. exact (MK_COMB (@lem1107652 _25645 _25647 _25655 a1 a0) (@lem1107653 _25645 _25647 _25655 fn a1)). Qed.
Lemma lem1107655 {_25645 _25647 _25655 : Type'} (a0 : _25647) (fn : type1147 _25645 _25647 _25655) (a1 : list _25647) : (term153 _25645 _25647 _25655 a0 fn a1) = (term129 _25645 _25647 _25655 a0 fn a1).
Proof. exact (eq_refl (term153 _25645 _25647 _25655 a0 fn a1)). Qed.
Lemma lem1107656 {_25645 _25647 _25655 : Type'} (a0 : _25647) (fn : type1147 _25645 _25647 _25655) (a1 : list _25647) : (term152 _25645 _25647 _25655 a0 fn a1) = (term129 _25645 _25647 _25655 a0 fn a1).
Proof. exact (TRANS (@lem1107654 _25645 _25647 _25655 a0 fn a1) (@lem1107655 _25645 _25647 _25655 a0 fn a1)). Qed.
Lemma lem1107657 {_25645 _25647 _25655 : Type'} (fn : type1147 _25645 _25647 _25655) (a0 : _25647) (a1 : list _25647) : (term154 _25645 _25647 _25655 fn a0 a1) = (term154 _25645 _25647 _25655 fn a0 a1).
Proof. exact (eq_refl (term154 _25645 _25647 _25655 fn a0 a1)). Qed.
Lemma lem1107658 {_25645 _25647 _25655 : Type'} (a0 : _25647) (fn : type1147 _25645 _25647 _25655) (a1 : list _25647) : ((term128 _25645 _25647 _25655 fn a0 a1) = (term152 _25645 _25647 _25655 a0 fn a1)) = ((term128 _25645 _25647 _25655 fn a0 a1) = (term129 _25645 _25647 _25655 a0 fn a1)).
Proof. exact (MK_COMB (@lem1107657 _25645 _25647 _25655 fn a0 a1) (@lem1107656 _25645 _25647 _25655 a0 fn a1)). Qed.
Lemma lem1107659 {_25645 _25647 _25655 : Type'} (a0 : _25647) (fn : type1147 _25645 _25647 _25655) : (term155 _25645 _25647 _25655 a0 fn) = (term156 _25645 _25647 _25655 a0 fn).
Proof. exact (fun_ext (fun a1 : list _25647 => @lem1107658 _25645 _25647 _25655 a0 fn a1)). Qed.
Lemma lem1107660 {_25647 : Type'} : (@all (list _25647)) = (@all (list _25647)).
Proof. exact (eq_refl (@all (list _25647))). Qed.
Lemma lem1107661 {_25645 _25647 _25655 : Type'} (a0 : _25647) (fn : type1147 _25645 _25647 _25655) : (term157 _25645 _25647 _25655 a0 fn) = (term126 _25645 _25647 _25655 a0 fn).
Proof. exact (MK_COMB (@lem1107660 _25647) (@lem1107659 _25645 _25647 _25655 a0 fn)). Qed.
Lemma lem1107662 {_25645 _25647 _25655 : Type'} (fn : type1147 _25645 _25647 _25655) : (term158 _25645 _25647 _25655 fn) = (term159 _25645 _25647 _25655 fn).
Proof. exact (fun_ext (fun a0 : _25647 => @lem1107661 _25645 _25647 _25655 a0 fn)). Qed.
Lemma lem1107663 {_25647 : Type'} : (@all _25647) = (@all _25647).
Proof. exact (eq_refl (@all _25647)). Qed.
Lemma lem1107664 {_25645 _25647 _25655 : Type'} (fn : type1147 _25645 _25647 _25655) : (term160 _25645 _25647 _25655 fn) = (term124 _25645 _25647 _25655 fn).
Proof. exact (MK_COMB (@lem1107663 _25647) (@lem1107662 _25645 _25647 _25655 fn)). Qed.
Lemma lem1107665 {_25645 _25647 _25655 : Type'} (fn : type1147 _25645 _25647 _25655) : (term161 _25645 _25647 _25655 fn) = (term161 _25645 _25647 _25655 fn).
Proof. exact (eq_refl (term161 _25645 _25647 _25655 fn)). Qed.
Lemma lem1107666 {_25645 _25647 _25655 : Type'} (fn : type1147 _25645 _25647 _25655) : (term162 _25645 _25647 _25655 fn) = (term139 _25645 _25647 _25655 fn).
Proof. exact (MK_COMB (@lem1107665 _25645 _25647 _25655 fn) (@lem1107664 _25645 _25647 _25655 fn)). Qed.
Lemma lem1107667 {_25645 _25647 _25655 : Type'} : (term163 _25645 _25647 _25655) = (term164 _25645 _25647 _25655).
Proof. exact (fun_ext (fun fn : type1147 _25645 _25647 _25655 => @lem1107666 _25645 _25647 _25655 fn)). Qed.
Lemma lem1107668 {_25645 _25647 _25655 : Type'} : (@ex ((list _25647) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25655) -> _25645 -> _25645)) = (@ex ((list _25647) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@ex ((list _25647) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107669 {_25645 _25647 _25655 : Type'} : (term145 _25645 _25647 _25655) = (term165 _25645 _25647 _25655).
Proof. exact (MK_COMB (@lem1107668 _25645 _25647 _25655) (@lem1107667 _25645 _25647 _25655)). Qed.
Lemma lem1107670 {_25645 _25647 _25655 : Type'} : term165 _25645 _25647 _25655.
Proof. exact (EQ_MP (@lem1107669 _25645 _25647 _25655) (@lem1107647 _25645 _25647 _25655)). Qed.
Lemma lem1107671 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term139 _25645 _25647 _25655 _18034.
Proof. exact (h1). Qed.
Lemma lem1107672 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term124 _25645 _25647 _25655 _18034.
Proof. exact (proj2 (@lem1107671 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107673 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : (_18034 (@nil _25647)) = (term116 _25645 _25647 _25655).
Proof. exact (proj1 (@lem1107671 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107674 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term139 _25645 _25647 _25655 _18034.
Proof. exact (conj (@lem1107673 _25645 _25647 _25655 _18034 h1) (@lem1107672 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107675 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term165 _25645 _25647 _25655.
Proof. exact (ex_intro (term164 _25645 _25647 _25655) _18034 (@lem1107674 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107676 {_25645 _25647 _25655 : Type'} (h1 : term165 _25645 _25647 _25655) : term165 _25645 _25647 _25655.
Proof. exact (h1). Qed.
Lemma lem1107677 {_25645 _25647 _25655 : Type'} (h1 : term165 _25645 _25647 _25655) : term165 _25645 _25647 _25655.
Proof. exact (ex_elim (@lem1107676 _25645 _25647 _25655 h1) (fun _18034 : type1147 _25645 _25647 _25655 => fun h0 : term164 _25645 _25647 _25655 _18034 => @lem1107675 _25645 _25647 _25655 _18034 h0)). Qed.
Lemma lem1107678 {_25645 _25647 _25655 : Type'} : (term165 _25645 _25647 _25655) = (term165 _25645 _25647 _25655).
Proof. exact (prop_ext (fun h1 : term165 _25645 _25647 _25655 => @lem1107677 _25645 _25647 _25655 h1) (fun h1 : term165 _25645 _25647 _25655 => @lem1107670 _25645 _25647 _25655)). Qed.
Lemma lem1107679 {_25645 _25647 _25655 : Type'} : term165 _25645 _25647 _25655.
Proof. exact (EQ_MP (@lem1107678 _25645 _25647 _25655) (@lem1107670 _25645 _25647 _25655)). Qed.
Lemma lem1107680 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term139 _25645 _25647 _25655 _18034) : term166 _25645 _25647 _25655.
Proof. exact (ex_intro (term167 _25645 _25647 _25655) _18034 (@lem1107639 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107681 {_25645 _25647 _25655 : Type'} (h1 : term165 _25645 _25647 _25655) : term165 _25645 _25647 _25655.
Proof. exact (h1). Qed.
Lemma lem1107682 {_25645 _25647 _25655 : Type'} (h1 : term165 _25645 _25647 _25655) : term166 _25645 _25647 _25655.
Proof. exact (ex_elim (@lem1107681 _25645 _25647 _25655 h1) (fun _18034 : type1147 _25645 _25647 _25655 => fun h0 : term164 _25645 _25647 _25655 _18034 => @lem1107680 _25645 _25647 _25655 _18034 h0)). Qed.
Lemma lem1107683 {_25645 _25647 _25655 : Type'} : (term165 _25645 _25647 _25655) = (term166 _25645 _25647 _25655).
Proof. exact (prop_ext (fun h1 : term165 _25645 _25647 _25655 => @lem1107682 _25645 _25647 _25655 h1) (fun h1 : term166 _25645 _25647 _25655 => @lem1107679 _25645 _25647 _25655)). Qed.
Lemma lem1107684 {_25645 _25647 _25655 : Type'} : term166 _25645 _25647 _25655.
Proof. exact (EQ_MP (@lem1107683 _25645 _25647 _25655) (@lem1107679 _25645 _25647 _25655)). Qed.
Lemma lem1107685 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term115 _25645 _25647 _25655 _18034) : term115 _25645 _25647 _25655 _18034.
Proof. exact (h1). Qed.
Lemma lem1107686 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : (term115 _25645 _25647 _25655 _18034) = (term114 _25645 _25647 _25655 ITLIST2').
Proof. exact (SYM (@lem1107579 _25645 _25647 _25655 ITLIST2' _18034 h1)). Qed.
Lemma lem1107687 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term115 _25645 _25647 _25655 _18034) (h2 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : term114 _25645 _25647 _25655 ITLIST2'.
Proof. exact (EQ_MP (@lem1107686 _25645 _25647 _25655 ITLIST2' _18034 h2) (@lem1107685 _25645 _25647 _25655 _18034 h1)). Qed.
Lemma lem1107688 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term115 _25645 _25647 _25655 _18034) (h2 : ITLIST2' = (term4 _25645 _25647 _25655 _18034)) : term168 _25645 _25647 _25655.
Proof. exact (ex_intro (term169 _25645 _25647 _25655) ITLIST2' (@lem1107687 _25645 _25647 _25655 ITLIST2' _18034 h1 h2)). Qed.
Lemma lem1107689 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) : (term4 _25645 _25647 _25655 _18034) = (term4 _25645 _25647 _25655 _18034).
Proof. exact (eq_refl (term4 _25645 _25647 _25655 _18034)). Qed.
Lemma lem1107690 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) (_18034 : type1147 _25645 _25647 _25655) (h1 : term115 _25645 _25647 _25655 _18034) : term170 _25645 _25647 _25655 ITLIST2' _18034.
Proof. exact (fun h0 : ITLIST2' = (term4 _25645 _25647 _25655 _18034) => @lem1107688 _25645 _25647 _25655 ITLIST2' _18034 h1 h0). Qed.
Lemma lem1107691 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term115 _25645 _25647 _25655 _18034) : term171 _25645 _25647 _25655 _18034.
Proof. exact (@lem1107690 _25645 _25647 _25655 (term4 _25645 _25647 _25655 _18034) _18034 h1). Qed.
Lemma lem1107692 {_25645 _25647 _25655 : Type'} (_18034 : type1147 _25645 _25647 _25655) (h1 : term115 _25645 _25647 _25655 _18034) : term168 _25645 _25647 _25655.
Proof. exact (@lem1107691 _25645 _25647 _25655 _18034 h1 (@lem1107689 _25645 _25647 _25655 _18034)). Qed.
Lemma lem1107693 {_25645 _25647 _25655 : Type'} (h1 : term166 _25645 _25647 _25655) : term166 _25645 _25647 _25655.
Proof. exact (h1). Qed.
Lemma lem1107694 {_25645 _25647 _25655 : Type'} (h1 : term166 _25645 _25647 _25655) : term168 _25645 _25647 _25655.
Proof. exact (ex_elim (@lem1107693 _25645 _25647 _25655 h1) (fun _18034 : type1147 _25645 _25647 _25655 => fun h0 : term167 _25645 _25647 _25655 _18034 => @lem1107692 _25645 _25647 _25655 _18034 h0)). Qed.
Lemma lem1107695 {_25645 _25647 _25655 : Type'} : (term166 _25645 _25647 _25655) = (term168 _25645 _25647 _25655).
Proof. exact (prop_ext (fun h1 : term166 _25645 _25647 _25655 => @lem1107694 _25645 _25647 _25655 h1) (fun h1 : term168 _25645 _25647 _25655 => @lem1107684 _25645 _25647 _25655)). Qed.
Lemma lem1107696 {_25645 _25647 _25655 : Type'} : term168 _25645 _25647 _25655.
Proof. exact (EQ_MP (@lem1107695 _25645 _25647 _25655) (@lem1107684 _25645 _25647 _25655)). Qed.
Lemma lem1107697 {_25645 _25647 _25655 : Type'} : term172 _25645 _25647 _25655.
Proof. exact (fun _18038 : type1670 => @lem1107696 _25645 _25647 _25655). Qed.
Lemma lem1107698 {A B : Type'} (P : type1413 A B) : term173 A B P.
Proof. exact (@lem13546 A B P). Qed.
Lemma lem1107699 {A B : Type'} (P : type1413 A B) : (term173 A B P) = ((term174 A B P) = (term175 A B P)).
Proof. exact (eq_refl (term173 A B P)). Qed.
Lemma lem1107702 {A B : Type'} (P : type1413 A B) : (term174 A B P) = (term175 A B P).
Proof. exact (EQ_MP (@lem1107699 A B P) (@lem1107698 A B P)). Qed.
Lemma lem1107703 {_25645 _25647 _25655 : Type'} (P : type1252 _25645 _25647 _25655) : (term176 _25645 _25647 _25655 P) = (term177 _25645 _25647 _25655 P).
Proof. exact (@lem1107702 type1670 (type760 _25645 _25647 _25655) P). Qed.
Lemma lem1107704 {_25645 _25647 _25655 : Type'} : (term178 _25645 _25647 _25655) = (term179 _25645 _25647 _25655).
Proof. exact (@lem1107703 _25645 _25647 _25655 (term180 _25645 _25647 _25655)). Qed.
Lemma lem1107705 {_25645 _25647 _25655 : Type'} (_18038 : type1670) : (term181 _25645 _25647 _25655 _18038) = (term169 _25645 _25647 _25655).
Proof. exact (eq_refl (term181 _25645 _25647 _25655 _18038)). Qed.
Lemma lem1107706 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) : ITLIST2' = ITLIST2'.
Proof. exact (eq_refl ITLIST2'). Qed.
Lemma lem1107707 {_25645 _25647 _25655 : Type'} (_18038 : type1670) (ITLIST2' : type760 _25645 _25647 _25655) : (term182 _25645 _25647 _25655 _18038 ITLIST2') = (term183 _25645 _25647 _25655 ITLIST2').
Proof. exact (MK_COMB (@lem1107705 _25645 _25647 _25655 _18038) (@lem1107706 _25645 _25647 _25655 ITLIST2')). Qed.
Lemma lem1107708 {_25645 _25647 _25655 : Type'} (ITLIST2' : type760 _25645 _25647 _25655) : (term183 _25645 _25647 _25655 ITLIST2') = (term114 _25645 _25647 _25655 ITLIST2').
Proof. exact (eq_refl (term183 _25645 _25647 _25655 ITLIST2')). Qed.
Lemma lem1107709 {_25645 _25647 _25655 : Type'} (_18038 : type1670) (ITLIST2' : type760 _25645 _25647 _25655) : (term182 _25645 _25647 _25655 _18038 ITLIST2') = (term114 _25645 _25647 _25655 ITLIST2').
Proof. exact (TRANS (@lem1107707 _25645 _25647 _25655 _18038 ITLIST2') (@lem1107708 _25645 _25647 _25655 ITLIST2')). Qed.
Lemma lem1107710 {_25645 _25647 _25655 : Type'} (_18038 : type1670) : (term184 _25645 _25647 _25655 _18038) = (term169 _25645 _25647 _25655).
Proof. exact (fun_ext (fun ITLIST2' : type760 _25645 _25647 _25655 => @lem1107709 _25645 _25647 _25655 _18038 ITLIST2')). Qed.
Lemma lem1107711 {_25645 _25647 _25655 : Type'} : (@ex ((_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645)) = (@ex ((_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@ex ((_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107712 {_25645 _25647 _25655 : Type'} (_18038 : type1670) : (term185 _25645 _25647 _25655 _18038) = (term168 _25645 _25647 _25655).
Proof. exact (MK_COMB (@lem1107711 _25645 _25647 _25655) (@lem1107710 _25645 _25647 _25655 _18038)). Qed.
Lemma lem1107713 {_25645 _25647 _25655 : Type'} : (term186 _25645 _25647 _25655) = (term187 _25645 _25647 _25655).
Proof. exact (fun_ext (fun _18038 : type1670 => @lem1107712 _25645 _25647 _25655 _18038)). Qed.
Lemma lem1107714 : (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) = (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))).
Proof. exact (eq_refl (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))))). Qed.
Lemma lem1107715 {_25645 _25647 _25655 : Type'} : (term178 _25645 _25647 _25655) = (term172 _25645 _25647 _25655).
Proof. exact (MK_COMB (@lem1107714) (@lem1107713 _25645 _25647 _25655)). Qed.
Lemma lem1107716 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem1107717 {_25645 _25647 _25655 : Type'} : (term188 _25645 _25647 _25655) = (term189 _25645 _25647 _25655).
Proof. exact (MK_COMB (@lem1107716) (@lem1107715 _25645 _25647 _25655)). Qed.
Lemma lem1107718 {_25645 _25647 _25655 : Type'} (_18038 : type1670) : (term181 _25645 _25647 _25655 _18038) = (term169 _25645 _25647 _25655).
Proof. exact (eq_refl (term181 _25645 _25647 _25655 _18038)). Qed.
Lemma lem1107719 {_25645 _25647 _25655 : Type'} (ITLIST2' : type1256 _25645 _25647 _25655) (_18038 : type1670) : (ITLIST2' _18038) = (ITLIST2' _18038).
Proof. exact (eq_refl (ITLIST2' _18038)). Qed.
Lemma lem1107720 {_25645 _25647 _25655 : Type'} (ITLIST2' : type1256 _25645 _25647 _25655) (_18038 : type1670) : (term190 _25645 _25647 _25655 ITLIST2' _18038) = (term191 _25645 _25647 _25655 ITLIST2' _18038).
Proof. exact (MK_COMB (@lem1107718 _25645 _25647 _25655 _18038) (@lem1107719 _25645 _25647 _25655 ITLIST2' _18038)). Qed.
Lemma lem1107721 {_25645 _25647 _25655 : Type'} (ITLIST2' : type1256 _25645 _25647 _25655) (_18038 : type1670) : (term191 _25645 _25647 _25655 ITLIST2' _18038) = (term192 _25645 _25647 _25655 ITLIST2' _18038).
Proof. exact (eq_refl (term191 _25645 _25647 _25655 ITLIST2' _18038)). Qed.
Lemma lem1107722 {_25645 _25647 _25655 : Type'} (ITLIST2' : type1256 _25645 _25647 _25655) (_18038 : type1670) : (term190 _25645 _25647 _25655 ITLIST2' _18038) = (term192 _25645 _25647 _25655 ITLIST2' _18038).
Proof. exact (TRANS (@lem1107720 _25645 _25647 _25655 ITLIST2' _18038) (@lem1107721 _25645 _25647 _25655 ITLIST2' _18038)). Qed.
Lemma lem1107723 {_25645 _25647 _25655 : Type'} (ITLIST2' : type1256 _25645 _25647 _25655) : (term193 _25645 _25647 _25655 ITLIST2') = (term194 _25645 _25647 _25655 ITLIST2').
Proof. exact (fun_ext (fun _18038 : type1670 => @lem1107722 _25645 _25647 _25655 ITLIST2' _18038)). Qed.
Lemma lem1107724 : (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))) = (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat))))))).
Proof. exact (eq_refl (@all (prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))))). Qed.
Lemma lem1107725 {_25645 _25647 _25655 : Type'} (ITLIST2' : type1256 _25645 _25647 _25655) : (term195 _25645 _25647 _25655 ITLIST2') = (term196 _25645 _25647 _25655 ITLIST2').
Proof. exact (MK_COMB (@lem1107724) (@lem1107723 _25645 _25647 _25655 ITLIST2')). Qed.
Lemma lem1107726 {_25645 _25647 _25655 : Type'} : (term197 _25645 _25647 _25655) = (term198 _25645 _25647 _25655).
Proof. exact (fun_ext (fun ITLIST2' : type1256 _25645 _25647 _25655 => @lem1107725 _25645 _25647 _25655 ITLIST2')). Qed.
Lemma lem1107727 {_25645 _25647 _25655 : Type'} : (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645)) = (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645)).
Proof. exact (eq_refl (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645))). Qed.
Lemma lem1107728 {_25645 _25647 _25655 : Type'} : (term179 _25645 _25647 _25655) = (term199 _25645 _25647 _25655).
Proof. exact (MK_COMB (@lem1107727 _25645 _25647 _25655) (@lem1107726 _25645 _25647 _25655)). Qed.
Lemma lem1107729 {_25645 _25647 _25655 : Type'} : ((term178 _25645 _25647 _25655) = (term179 _25645 _25647 _25655)) = ((term172 _25645 _25647 _25655) = (term199 _25645 _25647 _25655)).
Proof. exact (MK_COMB (@lem1107717 _25645 _25647 _25655) (@lem1107728 _25645 _25647 _25655)). Qed.
Lemma lem1107730 {_25645 _25647 _25655 : Type'} : (term172 _25645 _25647 _25655) = (term199 _25645 _25647 _25655).
Proof. exact (EQ_MP (@lem1107729 _25645 _25647 _25655) (@lem1107704 _25645 _25647 _25655)). Qed.
Lemma lem1107731 {_25645 _25647 _25655 : Type'} : term199 _25645 _25647 _25655.
Proof. exact (EQ_MP (@lem1107730 _25645 _25647 _25655) (@lem1107697 _25645 _25647 _25655)). Qed.
Lemma lem1107733 {A : Type'} : (@ex A) = (term200 A).
Proof. exact (@lem9261 A (@lem9306 A)). Qed.
Lemma lem1107734 {_25645 _25647 _25655 : Type'} : (@ex ((prod nat (prod nat (prod nat (prod nat (prod nat (prod nat nat)))))) -> (_25647 -> _25655 -> _25645 -> _25645) -> (list _25647) -> (list _25655) -> _25645 -> _25645)) = (term201 _25645 _25647 _25655).
Proof. exact (@lem1107733 (type1256 _25645 _25647 _25655)). Qed.
Lemma lem1107735 {_25645 _25647 _25655 : Type'} : (term198 _25645 _25647 _25655) = (term198 _25645 _25647 _25655).
Proof. exact (eq_refl (term198 _25645 _25647 _25655)). Qed.
Lemma lem1107736 {_25645 _25647 _25655 : Type'} : (term199 _25645 _25647 _25655) = (term202 _25645 _25647 _25655).
Proof. exact (MK_COMB (@lem1107734 _25645 _25647 _25655) (@lem1107735 _25645 _25647 _25655)). Qed.
Lemma lem1107737 {_25645 _25647 _25655 : Type'} : (term202 _25645 _25647 _25655) = (term203 _25645 _25647 _25655).
Proof. exact (eq_refl (term202 _25645 _25647 _25655)). Qed.
Lemma lem1107738 {_25645 _25647 _25655 : Type'} : (term199 _25645 _25647 _25655) = (term203 _25645 _25647 _25655).
Proof. exact (TRANS (@lem1107736 _25645 _25647 _25655) (@lem1107737 _25645 _25647 _25655)). Qed.
Lemma lem1107739 {_25645 _25647 _25655 : Type'} : term203 _25645 _25647 _25655.
Proof. exact (EQ_MP (@lem1107738 _25645 _25647 _25655) (@lem1107731 _25645 _25647 _25655)). Qed.
