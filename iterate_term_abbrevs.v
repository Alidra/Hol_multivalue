Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term1 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := (fun y0 : type1400 a0 => fun y1 : a1 -> Prop => fun y2 : a1 -> a0 => @COND a0 (@FINITE a1 (@support a1 a0 y0 y2 y1)) (@ITSET a0 a1 (fun y3 : a1 => fun y4 : a0 => y0 (y2 y3) y4) (@support a1 a0 y0 y2 y1) (@neutral a0 y0)) (@neutral a0 y0)) x0.
Definition term2 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := fun y0 : a1 -> Prop => fun y1 : a1 -> a0 => @COND a0 (@FINITE a1 (@support a1 a0 x0 y1 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => x0 (y1 y2) y3) (@support a1 a0 x0 y1 y0) (@neutral a0 x0)) (@neutral a0 x0).
Definition term15 (a0 : Type') (a1 : Type') := forall y0 : a1 -> a0, forall y1 : a1 -> Prop, forall y2 : type1400 a0, (@iterate a0 a1 y2 y1 y0) = (@COND a0 (@FINITE a1 (@support a1 a0 y2 y0 y1)) (@ITSET a0 a1 (fun y3 : a1 => fun y4 : a0 => y2 (y0 y3) y4) (@support a1 a0 y2 y0 y1) (@neutral a0 y2)) (@neutral a0 y2)).
Definition term9 (a0 : Type') (a1 : Type') := forall y0 : type1400 a0, forall y1 : a1 -> Prop, forall y2 : a1 -> a0, (@iterate a0 a1 y0 y1 y2) = (@COND a0 (@FINITE a1 (@support a1 a0 y0 y2 y1)) (@ITSET a0 a1 (fun y3 : a1 => fun y4 : a0 => y0 (y2 y3) y4) (@support a1 a0 y0 y2 y1) (@neutral a0 y0)) (@neutral a0 y0)).
Definition term5 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1400 a0) (x2 : a1 -> a0) := (fun y0 : a1 -> a0 => @COND a0 (@FINITE a1 (@support a1 a0 x1 y0 x0)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => x1 (y0 y1) y2) (@support a1 a0 x1 y0 x0) (@neutral a0 x1)) (@neutral a0 x1)) x2.
Definition term3 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> Prop) := (fun y0 : a1 -> Prop => fun y1 : a1 -> a0 => @COND a0 (@FINITE a1 (@support a1 a0 x0 y1 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => x0 (y1 y2) y3) (@support a1 a0 x0 y1 y0) (@neutral a0 x0)) (@neutral a0 x0)) x1.
Definition term10 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := (fun y0 : type1400 a0 => forall y1 : a1 -> Prop, forall y2 : a1 -> a0, (@iterate a0 a1 y0 y1 y2) = (@COND a0 (@FINITE a1 (@support a1 a0 y0 y2 y1)) (@ITSET a0 a1 (fun y3 : a1 => fun y4 : a0 => y0 (y2 y3) y4) (@support a1 a0 y0 y2 y1) (@neutral a0 y0)) (@neutral a0 y0))) x0.
Definition term6 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> Prop) (x2 : type1400 a0) := @COND a0 (@FINITE a1 (@support a1 a0 x2 x0 x1)) (@ITSET a0 a1 (fun y0 : a1 => fun y1 : a0 => x2 (x0 y0) y1) (@support a1 a0 x2 x0 x1) (@neutral a0 x2)) (@neutral a0 x2).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1400 a0) := fun y0 : a1 -> a0 => @COND a0 (@FINITE a1 (@support a1 a0 x1 y0 x0)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => x1 (y0 y1) y2) (@support a1 a0 x1 y0 x0) (@neutral a0 x1)) (@neutral a0 x1).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> Prop) := forall y0 : type1400 a0, (@iterate a0 a1 y0 x1 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 y0 x0 x1)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => y0 (x0 y1) y2) (@support a1 a0 y0 x0 x1) (@neutral a0 y0)) (@neutral a0 y0)).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1400 a0) := forall y0 : a1 -> a0, (@iterate a0 a1 x1 x0 y0) = (@COND a0 (@FINITE a1 (@support a1 a0 x1 y0 x0)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => x1 (y0 y1) y2) (@support a1 a0 x1 y0 x0) (@neutral a0 x1)) (@neutral a0 x1)).
Definition term12 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1400 a0) (x2 : a1 -> a0) := (fun y0 : a1 -> a0 => (@iterate a0 a1 x1 x0 y0) = (@COND a0 (@FINITE a1 (@support a1 a0 x1 y0 x0)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => x1 (y0 y1) y2) (@support a1 a0 x1 y0 x0) (@neutral a0 x1)) (@neutral a0 x1))) x2.
Definition term14 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) := forall y0 : a1 -> Prop, forall y1 : type1400 a0, (@iterate a0 a1 y1 y0 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 y1 x0 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => y1 (x0 y2) y3) (@support a1 a0 y1 x0 y0) (@neutral a0 y1)) (@neutral a0 y1)).
Definition term8 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := forall y0 : a1 -> Prop, forall y1 : a1 -> a0, (@iterate a0 a1 x0 y0 y1) = (@COND a0 (@FINITE a1 (@support a1 a0 x0 y1 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => x0 (y1 y2) y3) (@support a1 a0 x0 y1 y0) (@neutral a0 x0)) (@neutral a0 x0)).
Definition term11 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : a1 -> a0, (@iterate a0 a1 x0 y0 y1) = (@COND a0 (@FINITE a1 (@support a1 a0 x0 y1 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => x0 (y1 y2) y3) (@support a1 a0 x0 y1 y0) (@neutral a0 x0)) (@neutral a0 x0))) x1.
Definition term0 (a0 : Type') (a1 : Type') := fun y0 : type1400 a0 => fun y1 : a1 -> Prop => fun y2 : a1 -> a0 => @COND a0 (@FINITE a1 (@support a1 a0 y0 y2 y1)) (@ITSET a0 a1 (fun y3 : a1 => fun y4 : a0 => y0 (y2 y3) y4) (@support a1 a0 y0 y2 y1) (@neutral a0 y0)) (@neutral a0 y0).
