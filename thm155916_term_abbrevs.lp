require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term18 (x0: El num) (x1: El num) ≔ (+ (* (DIV x0 x1) x1) (MOD x0 x1));
symbol term32 (x0: El num) ≔ (∀ (λ y0 : El num, ((@COND bool) (= y0 (NUMERAL _0)) (∧ (= (DIV x0 y0) (NUMERAL _0)) (= (MOD x0 y0) x0)) (∧ (= x0 (+ (* (DIV x0 y0) y0) (MOD x0 y0))) (< (MOD x0 y0) y0)))));
symbol term31 (x0: El num) ≔ (∀ (λ y0 : El num, ((@COND bool) (= y0 (NUMERAL _0)) (∧ (= (DIV x0 y0) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y1 : El type1306, (∀ (λ y2 : El type1674, (∀ (λ y3 : El num, (∀ (λ y4 : El num, ((@COND bool) (= y4 (NUMERAL _0)) (∧ (= (DIV y3 y4) (NUMERAL _0)) (= (y1 y2 y3 y4) y3)) (∧ (= y3 (+ (* (DIV y3 y4) y4) (y1 y2 y3 y4))) (< (y1 y2 y3 y4) y4)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 y0) x0)) (∧ (= x0 (+ (* (DIV x0 y0) y0) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y1 : El type1306, (∀ (λ y2 : El type1674, (∀ (λ y3 : El num, (∀ (λ y4 : El num, ((@COND bool) (= y4 (NUMERAL _0)) (∧ (= (DIV y3 y4) (NUMERAL _0)) (= (y1 y2 y3 y4) y3)) (∧ (= y3 (+ (* (DIV y3 y4) y4) (y1 y2 y3 y4))) (< (y1 y2 y3 y4) y4)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 y0))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y1 : El type1306, (∀ (λ y2 : El type1674, (∀ (λ y3 : El num, (∀ (λ y4 : El num, ((@COND bool) (= y4 (NUMERAL _0)) (∧ (= (DIV y3 y4) (NUMERAL _0)) (= (y1 y2 y3 y4) y3)) (∧ (= y3 (+ (* (DIV y3 y4) y4) (y1 y2 y3 y4))) (< (y1 y2 y3 y4) y4)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 y0) y0)))));
symbol term8 (x0: El num) (x1: El num) ≔ ((@= num) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1));
symbol term6 (x0: El num) ≔ ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0);
symbol term15 (x0: El num) (x1: El num) ≔ ((@COND bool) (= x0 (NUMERAL _0)) (∧ (= (DIV x1 x0) (NUMERAL _0)) (= (MOD x1 x0) x1)));
symbol term14 (x0: El num) (x1: El num) ≔ ((@COND bool) (= x0 (NUMERAL _0)) (∧ (= (DIV x1 x0) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x1 x0) x1)));
symbol term26 (x0: El num) (x1: El num) ≔ (∧ (= x0 (+ (* (DIV x0 x1) x1) (MOD x0 x1))) (< (MOD x0 x1) x1));
symbol term23 (x0: El num) (x1: El num) ≔ (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1) x1);
symbol term16 (x0: El num) (x1: El num) ≔ (+ (* (DIV x0 x1) x1));
symbol term9 (x0: El num) (x1: El num) ≔ ((@= num) (MOD x0 x1));
symbol term13 (x0: El num) ≔ ((@COND bool) (= x0 (NUMERAL _0)));
symbol term22 (x0: El num) (x1: El num) ≔ (< (MOD x0 x1));
symbol term12 (x0: El num) (x1: El num) ≔ (∧ (= (DIV x1 x0) (NUMERAL _0)) (= (MOD x1 x0) x1));
symbol term11 (x0: El num) (x1: El num) ≔ (∧ (= (DIV x1 x0) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x1 x0) x1));
symbol term28 (x0: El num) (x1: El num) ≔ ((@COND bool) (= x1 (NUMERAL _0)) (∧ (= (DIV x0 x1) (NUMERAL _0)) (= (MOD x0 x1) x0)) (∧ (= x0 (+ (* (DIV x0 x1) x1) (MOD x0 x1))) (< (MOD x0 x1) x1)));
symbol term27 (x0: El num) (x1: El num) ≔ ((@COND bool) (= x1 (NUMERAL _0)) (∧ (= (DIV x0 x1) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1) x0)) (∧ (= x0 (+ (* (DIV x0 x1) x1) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1) x1)));
symbol term1 ≔ (∀ (λ y0 : El type1674, (∀ (λ y1 : El num, (∀ (λ y2 : El num, ((@COND bool) (= y2 (NUMERAL _0)) (∧ (= (DIV y1 y2) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y3 : El type1306, (∀ (λ y4 : El type1674, (∀ (λ y5 : El num, (∀ (λ y6 : El num, ((@COND bool) (= y6 (NUMERAL _0)) (∧ (= (DIV y5 y6) (NUMERAL _0)) (= (y3 y4 y5 y6) y5)) (∧ (= y5 (+ (* (DIV y5 y6) y6) (y3 y4 y5 y6))) (< (y3 y4 y5 y6) y6)))))))))) y0 y1 y2) y1)) (∧ (= y1 (+ (* (DIV y1 y2) y2) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y3 : El type1306, (∀ (λ y4 : El type1674, (∀ (λ y5 : El num, (∀ (λ y6 : El num, ((@COND bool) (= y6 (NUMERAL _0)) (∧ (= (DIV y5 y6) (NUMERAL _0)) (= (y3 y4 y5 y6) y5)) (∧ (= y5 (+ (* (DIV y5 y6) y6) (y3 y4 y5 y6))) (< (y3 y4 y5 y6) y6)))))))))) y0 y1 y2))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y3 : El type1306, (∀ (λ y4 : El type1674, (∀ (λ y5 : El num, (∀ (λ y6 : El num, ((@COND bool) (= y6 (NUMERAL _0)) (∧ (= (DIV y5 y6) (NUMERAL _0)) (= (y3 y4 y5 y6) y5)) (∧ (= y5 (+ (* (DIV y5 y6) y6) (y3 y4 y5 y6))) (< (y3 y4 y5 y6) y6)))))))))) y0 y1 y2) y2)))))))));
symbol term0 ≔ ((λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3))))))))))));
symbol term10 (x0: El num) (x1: El num) ≔ (∧ (= (DIV x0 x1) (NUMERAL _0)));
symbol term35 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, ((@COND bool) (= y1 (NUMERAL _0)) (∧ (= (DIV y0 y1) (NUMERAL _0)) (= (MOD y0 y1) y0)) (∧ (= y0 (+ (* (DIV y0 y1) y1) (MOD y0 y1))) (< (MOD y0 y1) y1)))))));
symbol term4 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, ((@COND bool) (= y1 (NUMERAL _0)) (∧ (= (DIV y0 y1) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y2 : El type1306, (∀ (λ y3 : El type1674, (∀ (λ y4 : El num, (∀ (λ y5 : El num, ((@COND bool) (= y5 (NUMERAL _0)) (∧ (= (DIV y4 y5) (NUMERAL _0)) (= (y2 y3 y4 y5) y4)) (∧ (= y4 (+ (* (DIV y4 y5) y5) (y2 y3 y4 y5))) (< (y2 y3 y4 y5) y5)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) y0 y1) y0)) (∧ (= y0 (+ (* (DIV y0 y1) y1) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y2 : El type1306, (∀ (λ y3 : El type1674, (∀ (λ y4 : El num, (∀ (λ y5 : El num, ((@COND bool) (= y5 (NUMERAL _0)) (∧ (= (DIV y4 y5) (NUMERAL _0)) (= (y2 y3 y4 y5) y4)) (∧ (= y4 (+ (* (DIV y4 y5) y5) (y2 y3 y4 y5))) (< (y2 y3 y4 y5) y5)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) y0 y1))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y2 : El type1306, (∀ (λ y3 : El type1674, (∀ (λ y4 : El num, (∀ (λ y5 : El num, ((@COND bool) (= y5 (NUMERAL _0)) (∧ (= (DIV y4 y5) (NUMERAL _0)) (= (y2 y3 y4 y5) y4)) (∧ (= y4 (+ (* (DIV y4 y5) y5) (y2 y3 y4 y5))) (< (y2 y3 y4 y5) y5)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) y0 y1) y1)))))));
symbol term34 ≔ (λ y0 : El num, (∀ (λ y1 : El num, ((@COND bool) (= y1 (NUMERAL _0)) (∧ (= (DIV y0 y1) (NUMERAL _0)) (= (MOD y0 y1) y0)) (∧ (= y0 (+ (* (DIV y0 y1) y1) (MOD y0 y1))) (< (MOD y0 y1) y1))))));
symbol term33 ≔ (λ y0 : El num, (∀ (λ y1 : El num, ((@COND bool) (= y1 (NUMERAL _0)) (∧ (= (DIV y0 y1) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y2 : El type1306, (∀ (λ y3 : El type1674, (∀ (λ y4 : El num, (∀ (λ y5 : El num, ((@COND bool) (= y5 (NUMERAL _0)) (∧ (= (DIV y4 y5) (NUMERAL _0)) (= (y2 y3 y4 y5) y4)) (∧ (= y4 (+ (* (DIV y4 y5) y5) (y2 y3 y4 y5))) (< (y2 y3 y4 y5) y5)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) y0 y1) y0)) (∧ (= y0 (+ (* (DIV y0 y1) y1) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y2 : El type1306, (∀ (λ y3 : El type1674, (∀ (λ y4 : El num, (∀ (λ y5 : El num, ((@COND bool) (= y5 (NUMERAL _0)) (∧ (= (DIV y4 y5) (NUMERAL _0)) (= (y2 y3 y4 y5) y4)) (∧ (= y4 (+ (* (DIV y4 y5) y5) (y2 y3 y4 y5))) (< (y2 y3 y4 y5) y5)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) y0 y1))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y2 : El type1306, (∀ (λ y3 : El type1674, (∀ (λ y4 : El num, (∀ (λ y5 : El num, ((@COND bool) (= y5 (NUMERAL _0)) (∧ (= (DIV y4 y5) (NUMERAL _0)) (= (y2 y3 y4 y5) y4)) (∧ (= y4 (+ (* (DIV y4 y5) y5) (y2 y3 y4 y5))) (< (y2 y3 y4 y5) y5)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) y0 y1) y1))))));
symbol term20 (x0: El num) (x1: El num) ≔ (∧ (= x0 (+ (* (DIV x0 x1) x1) (MOD x0 x1))));
symbol term19 (x0: El num) (x1: El num) ≔ (∧ (= x0 (+ (* (DIV x0 x1) x1) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1))));
symbol term17 (x0: El num) (x1: El num) ≔ (+ (* (DIV x0 x1) x1) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1));
symbol term3 ≔ ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0))))))))));
symbol term21 (x0: El num) (x1: El num) ≔ (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1));
symbol term24 (x0: El num) (x1: El num) ≔ (< (MOD x0 x1) x1);
symbol term2 ≔ ((λ y0 : El type1674, (∀ (λ y1 : El num, (∀ (λ y2 : El num, ((@COND bool) (= y2 (NUMERAL _0)) (∧ (= (DIV y1 y2) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y3 : El type1306, (∀ (λ y4 : El type1674, (∀ (λ y5 : El num, (∀ (λ y6 : El num, ((@COND bool) (= y6 (NUMERAL _0)) (∧ (= (DIV y5 y6) (NUMERAL _0)) (= (y3 y4 y5 y6) y5)) (∧ (= y5 (+ (* (DIV y5 y6) y6) (y3 y4 y5 y6))) (< (y3 y4 y5 y6) y6)))))))))) y0 y1 y2) y1)) (∧ (= y1 (+ (* (DIV y1 y2) y2) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y3 : El type1306, (∀ (λ y4 : El type1674, (∀ (λ y5 : El num, (∀ (λ y6 : El num, ((@COND bool) (= y6 (NUMERAL _0)) (∧ (= (DIV y5 y6) (NUMERAL _0)) (= (y3 y4 y5 y6) y5)) (∧ (= y5 (+ (* (DIV y5 y6) y6) (y3 y4 y5 y6))) (< (y3 y4 y5 y6) y6)))))))))) y0 y1 y2))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y3 : El type1306, (∀ (λ y4 : El type1674, (∀ (λ y5 : El num, (∀ (λ y6 : El num, ((@COND bool) (= y6 (NUMERAL _0)) (∧ (= (DIV y5 y6) (NUMERAL _0)) (= (y3 y4 y5 y6) y5)) (∧ (= y5 (+ (* (DIV y5 y6) y6) (y3 y4 y5 y6))) (< (y3 y4 y5 y6) y6)))))))))) y0 y1 y2) y2)))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))));
symbol term5 ≔ ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))));
symbol term7 (x0: El num) (x1: El num) ≔ ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1);
symbol term25 (x0: El num) (x1: El num) ≔ (∧ (= x0 (+ (* (DIV x0 x1) x1) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y0 : El type1306, (∀ (λ y1 : El type1674, (∀ (λ y2 : El num, (∀ (λ y3 : El num, ((@COND bool) (= y3 (NUMERAL _0)) (∧ (= (DIV y2 y3) (NUMERAL _0)) (= (y0 y1 y2 y3) y2)) (∧ (= y2 (+ (* (DIV y2 y3) y3) (y0 y1 y2 y3))) (< (y0 y1 y2 y3) y3)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 x1) x1));
symbol term30 (x0: El num) ≔ (λ y0 : El num, ((@COND bool) (= y0 (NUMERAL _0)) (∧ (= (DIV x0 y0) (NUMERAL _0)) (= (MOD x0 y0) x0)) (∧ (= x0 (+ (* (DIV x0 y0) y0) (MOD x0 y0))) (< (MOD x0 y0) y0))));
symbol term29 (x0: El num) ≔ (λ y0 : El num, ((@COND bool) (= y0 (NUMERAL _0)) (∧ (= (DIV x0 y0) (NUMERAL _0)) (= ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y1 : El type1306, (∀ (λ y2 : El type1674, (∀ (λ y3 : El num, (∀ (λ y4 : El num, ((@COND bool) (= y4 (NUMERAL _0)) (∧ (= (DIV y3 y4) (NUMERAL _0)) (= (y1 y2 y3 y4) y3)) (∧ (= y3 (+ (* (DIV y3 y4) y4) (y1 y2 y3 y4))) (< (y1 y2 y3 y4) y4)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 y0) x0)) (∧ (= x0 (+ (* (DIV x0 y0) y0) ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y1 : El type1306, (∀ (λ y2 : El type1674, (∀ (λ y3 : El num, (∀ (λ y4 : El num, ((@COND bool) (= y4 (NUMERAL _0)) (∧ (= (DIV y3 y4) (NUMERAL _0)) (= (y1 y2 y3 y4) y3)) (∧ (= y3 (+ (* (DIV y3 y4) y4) (y1 y2 y3 y4))) (< (y1 y2 y3 y4) y4)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 y0))) (< ((@ε (fun (prod num (prod num num)) (fun num (fun num num)))) (λ y1 : El type1306, (∀ (λ y2 : El type1674, (∀ (λ y3 : El num, (∀ (λ y4 : El num, ((@COND bool) (= y4 (NUMERAL _0)) (∧ (= (DIV y3 y4) (NUMERAL _0)) (= (y1 y2 y3 y4) y3)) (∧ (= y3 (+ (* (DIV y3 y4) y4) (y1 y2 y3 y4))) (< (y1 y2 y3 y4) y4)))))))))) ((@̦‚ num (prod num num)) (NUMERAL (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) ((@̦‚ num num) (NUMERAL (BIT1 (BIT1 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 _0)))))))))) x0 y0) y0))));
