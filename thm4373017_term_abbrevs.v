Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term123 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a1) := fun y0 : a0 -> Prop => (@IN (a0 -> Prop) y0 x0) -> (@IN a0 x1 y0) /\ (@IN a1 x2 (@UNIV a1)).
Definition term11 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (x0 y2) y2))) = (x0 y0).
Definition term127 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : a0 => forall y1 : a1, ((@IN a0 y0 (@INTERS a0 x0)) /\ (@IN a1 y1 (@INTERS a1 (@EMPTY (a1 -> Prop))))) = (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x0) -> (@IN a0 y0 y2) /\ (@IN a1 y1 (@UNIV a1))).
Definition term10 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (y0 y3) y3))) = (y0 y1)) x0.
Definition term5 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) := forall y0 : a1 -> Prop, (@IN (prod a0 a1) (@pair a0 a1 x0 x2) (@CROSS a1 a0 x1 y0)) = ((@IN a0 x0 x1) /\ (@IN a1 x2 y0)).
Definition term84 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) := @IN (prod a0 a1) x0 (@CROSS a1 a0 x1 (@UNIV a1)).
Definition term47 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) (x2 : a0) := forall y0 : a1, (fun y1 : prod a0 a1 => (@IN (prod a0 a1) y1 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y1 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1))))))) (@pair a0 a1 x2 y0).
Definition term34 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := forall y0 : a0, forall y1 : a1, (fun y2 : prod a0 a1 => (@IN (prod a0 a1) y2 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y2 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y3 : type1210 a0 a1 => exists y4 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y3 (@IN (a0 -> Prop) y4 x1) (@CROSS a1 a0 y4 (@UNIV a1))))))) (@pair a0 a1 y0 y1).
Definition term114 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 ((fun y2 : prod a0 a1 => forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 x0) -> @IN (prod a0 a1) y2 (@CROSS a1 a0 y3 (@UNIV a1))) y1) y1).
Definition term101 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x0) -> @IN (prod a0 a1) y1 (@CROSS a1 a0 y2 (@UNIV a1))) y1).
Definition term62 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, ((fun y3 : a0 -> Prop => @IN (a0 -> Prop) y3 x0) y2) -> @IN (prod a0 a1) y1 ((fun y3 : a0 -> Prop => @CROSS a1 a0 y3 (@UNIV a1)) y2)) y1).
Definition term60 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : type664 a0 a1) := @GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, (x0 y2) -> @IN (prod a0 a1) y1 (x1 y2)) y1).
Definition term46 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : a0) (x2 : type686 a0) := fun y0 : a1 => (@IN (prod a0 a1) (@pair a0 a1 x1 y0) (@CROSS a1 a0 (@INTERS a0 x2) (@INTERS a1 x0))) = (@IN (prod a0 a1) (@pair a0 a1 x1 y0) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x2) (@CROSS a1 a0 y2 (@UNIV a1)))))).
Definition term35 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := fun y0 : prod a0 a1 => (@IN (prod a0 a1) y0 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y0 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x1) (@CROSS a1 a0 y2 (@UNIV a1)))))).
Definition term31 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) := forall y0 : prod a0 a1, x0 y0.
Definition term15 (a0 : Type') (a1 : Type') (x0 : type1223 a0 a1) := forall y0 : prod a1 a0, x0 y0.
Definition term105 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) := @IN (prod a0 a1) (@pair a0 a1 x0 x1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 ((fun y2 : prod a0 a1 => forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 x2) -> @IN (prod a0 a1) y2 (@CROSS a1 a0 y3 (@UNIV a1))) y1) y1)).
Definition term103 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) := @IN (prod a0 a1) (@pair a0 a1 x0 x1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x2) -> @IN (prod a0 a1) y1 (@CROSS a1 a0 y2 (@UNIV a1))) y1)).
Definition term0 (a0 : Type') (a1 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a1, forall y2 : a0 -> Prop, forall y3 : a1 -> Prop, (@IN (prod a0 a1) (@pair a0 a1 y0 y1) (@CROSS a1 a0 y2 y3)) = ((@IN a0 y0 y2) /\ (@IN a1 y1 y3))) x0.
Definition term107 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : prod a0 a1 => forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1)).
Definition term83 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : a0 -> Prop) := @IN (prod a0 a1) x0 ((fun y0 : a0 -> Prop => @CROSS a1 a0 y0 (@UNIV a1)) x1).
Definition term50 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := fun y0 : a0 => forall y1 : a1, (@IN (prod a0 a1) (@pair a0 a1 y0 y1) (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) (@pair a0 a1 y0 y1) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1)))))).
Definition term88 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) := fun y0 : a0 -> Prop => (@IN (a0 -> Prop) y0 x0) -> @IN (prod a0 a1) x1 (@CROSS a1 a0 y0 (@UNIV a1)).
Definition term64 (a0 : Type') (a1 : Type') := fun y0 : a0 -> Prop => @CROSS a1 a0 y0 (@UNIV a1).
Definition term70 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) (x2 : a0 -> Prop) := @SETSPEC ((prod a0 a1) -> Prop) x0 (@IN (a0 -> Prop) x2 x1) (@CROSS a1 a0 x2 (@UNIV a1)).
Definition term76 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (@IN (a0 -> Prop) y1 x0) (@CROSS a1 a0 y1 (@UNIV a1)).
Definition term37 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : type686 a1) := @IN (prod a0 a1) x0 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x2)).
Definition term42 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) (x2 : a0) (x3 : a1) := (fun y0 : prod a0 a1 => (@IN (prod a0 a1) y0 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y0 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x1) (@CROSS a1 a0 y2 (@UNIV a1))))))) (@pair a0 a1 x2 x3).
Definition term73 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) := exists y0 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) x0 ((fun y1 : a0 -> Prop => @IN (a0 -> Prop) y1 x1) y0) ((fun y1 : a0 -> Prop => @CROSS a1 a0 y1 (@UNIV a1)) y0).
Definition term8 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) (x3 : a1 -> Prop) := (@IN a0 x0 x1) /\ (@IN a1 x2 x3).
Definition term36 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) (x2 : prod a0 a1) := (fun y0 : prod a0 a1 => (@IN (prod a0 a1) y0 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y0 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x1) (@CROSS a1 a0 y2 (@UNIV a1))))))) x2.
Definition term39 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := fun y0 : prod a0 a1 => (fun y1 : prod a0 a1 => (@IN (prod a0 a1) y1 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y1 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1))))))) y0.
Definition term71 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) := fun y0 : a0 -> Prop => @SETSPEC ((prod a0 a1) -> Prop) x0 ((fun y1 : a0 -> Prop => @IN (a0 -> Prop) y1 x1) y0) ((fun y1 : a0 -> Prop => @CROSS a1 a0 y1 (@UNIV a1)) y0).
Definition term20 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 x0) = (@IN a0 y0 x1).
Definition term57 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) (x3 : type686 a1) := @eq Prop (@IN (prod a0 a1) (@pair a0 a1 x0 x1) (@CROSS a1 a0 (@INTERS a0 x2) (@INTERS a1 x3))).
Definition term67 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : a0 -> Prop) (x2 : type686 a0) := @SETSPEC ((prod a0 a1) -> Prop) x0 (@IN (a0 -> Prop) x1 x2).
Definition term90 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) := forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @IN (prod a0 a1) x1 (@CROSS a1 a0 y0 (@UNIV a1)).
Definition term44 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) := @IN (prod a0 a1) (@pair a0 a1 x0 x1) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (@IN (a0 -> Prop) y1 x2) (@CROSS a1 a0 y1 (@UNIV a1))))).
Definition term40 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := @eq Prop (forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (@IN (prod a0 a1) y1 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y1 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1))))))) y0).
Definition term96 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := fun y0 : prod a0 a1 => @SETSPEC (prod a0 a1) x0 (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x1) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1))) y0.
Definition term95 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := fun y0 : prod a0 a1 => @SETSPEC (prod a0 a1) x0 (forall y1 : a0 -> Prop, ((fun y2 : a0 -> Prop => @IN (a0 -> Prop) y2 x1) y1) -> @IN (prod a0 a1) y0 ((fun y2 : a0 -> Prop => @CROSS a1 a0 y2 (@UNIV a1)) y1)) y0.
Definition term23 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) := forall y0 : type1470 a0 a1, (@INTERS a0 (@GSPEC (a0 -> Prop) (fun y1 : a0 -> Prop => exists y2 : a1, @SETSPEC (a0 -> Prop) y1 (x0 y2) (y0 y2)))) = (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (forall y3 : a1, (x0 y3) -> @IN a0 y2 (y0 y3)) y2)).
Definition term125 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) := fun y0 : a1 => ((@IN a0 x1 (@INTERS a0 x0)) /\ (@IN a1 y0 (@INTERS a1 (@EMPTY (a1 -> Prop))))) = (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> (@IN a0 x1 y1) /\ (@IN a1 y0 (@UNIV a1))).
Definition term43 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) (x3 : type686 a1) := @IN (prod a0 a1) (@pair a0 a1 x0 x1) (@CROSS a1 a0 (@INTERS a0 x2) (@INTERS a1 x3)).
Definition term63 (a0 : Type') (x0 : type686 a0) := fun y0 : a0 -> Prop => @IN (a0 -> Prop) y0 x0.
Definition term113 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 ((fun y2 : prod a0 a1 => forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 x0) -> @IN (prod a0 a1) y2 (@CROSS a1 a0 y3 (@UNIV a1))) y1) y1.
Definition term100 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x0) -> @IN (prod a0 a1) y1 (@CROSS a1 a0 y2 (@UNIV a1))) y1.
Definition term99 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, ((fun y3 : a0 -> Prop => @IN (a0 -> Prop) y3 x0) y2) -> @IN (prod a0 a1) y1 ((fun y3 : a0 -> Prop => @CROSS a1 a0 y3 (@UNIV a1)) y2)) y1.
Definition term85 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) (x2 : a0 -> Prop) := ((fun y0 : a0 -> Prop => @IN (a0 -> Prop) y0 x0) x2) -> @IN (prod a0 a1) x1 ((fun y0 : a0 -> Prop => @CROSS a1 a0 y0 (@UNIV a1)) x2).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a1 -> Prop, (@IN (prod a0 a1) (@pair a0 a1 x0 x1) (@CROSS a1 a0 y0 y1)) = ((@IN a0 x0 y0) /\ (@IN a1 x1 y1))) x2.
Definition term13 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (x1 y1) y1)).
Definition term38 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := @IN (prod a0 a1) x0 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (@IN (a0 -> Prop) y1 x1) (@CROSS a1 a0 y1 (@UNIV a1))))).
Definition term61 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 ((fun y2 : a0 -> Prop => @IN (a0 -> Prop) y2 x0) y1) ((fun y2 : a0 -> Prop => @CROSS a1 a0 y2 (@UNIV a1)) y1))).
Definition term59 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : type664 a0 a1) := @INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (x0 y1) (x1 y1))).
Definition term29 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (@IN (a0 -> Prop) y1 x0) (@CROSS a1 a0 y1 (@UNIV a1)))).
Definition term25 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := @INTERS a0 (@GSPEC (a0 -> Prop) (fun y0 : a0 -> Prop => exists y1 : a1, @SETSPEC (a0 -> Prop) y0 (x0 y1) (x1 y1))).
Definition term27 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type1210 a0 a1) := forall y0 : prod a0 a1, (@IN (prod a0 a1) y0 x0) = (@IN (prod a0 a1) y0 x1).
Definition term52 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type686 a0) (x2 : a1) (x3 : type686 a1) := (@IN a0 x0 (@INTERS a0 x1)) /\ (@IN a1 x2 (@INTERS a1 x3)).
Definition term86 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) (x2 : a0 -> Prop) := (@IN (a0 -> Prop) x2 x0) -> @IN (prod a0 a1) x1 (@CROSS a1 a0 x2 (@UNIV a1)).
Definition term111 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := fun y0 : prod a0 a1 => @SETSPEC (prod a0 a1) x0 ((fun y1 : prod a0 a1 => forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x1) -> @IN (prod a0 a1) y1 (@CROSS a1 a0 y2 (@UNIV a1))) y0) y0.
Definition term122 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a1) := fun y0 : a0 -> Prop => (@IN (a0 -> Prop) y0 x0) -> @IN (prod a0 a1) (@pair a0 a1 x1 x2) (@CROSS a1 a0 y0 (@UNIV a1)).
Definition term75 (a0 : Type') (a1 : Type') (x0 : type686 a0) := fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 ((fun y2 : a0 -> Prop => @IN (a0 -> Prop) y2 x0) y1) ((fun y2 : a0 -> Prop => @CROSS a1 a0 y2 (@UNIV a1)) y1).
Definition term30 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := forall y0 : prod a0 a1, (@IN (prod a0 a1) y0 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y0 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x1) (@CROSS a1 a0 y2 (@UNIV a1)))))).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (forall y2 : a1, (x0 y2) -> @IN a0 y1 (x1 y2)) y1).
Definition term119 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) := (@IN a0 x0 x1) /\ (@IN a1 x2 (@UNIV a1)).
Definition term108 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) := (fun y0 : prod a0 a1 => forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1))) x1.
Definition term81 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) := imp ((fun y0 : a0 -> Prop => @IN (a0 -> Prop) y0 x0) x1).
Definition term41 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := @eq Prop (forall y0 : prod a0 a1, (@IN (prod a0 a1) y0 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y0 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x1) (@CROSS a1 a0 y2 (@UNIV a1))))))).
Definition term74 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) := exists y0 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) x0 (@IN (a0 -> Prop) y0 x1) (@CROSS a1 a0 y0 (@UNIV a1)).
Definition term28 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : type686 a1) := @CROSS a1 a0 (@INTERS a0 x0) (@INTERS a1 x1).
Definition term124 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a1) := forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> (@IN a0 x1 y0) /\ (@IN a1 x2 (@UNIV a1)).
Definition term117 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a1) := forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @IN (prod a0 a1) (@pair a0 a1 x1 x2) (@CROSS a1 a0 y0 (@UNIV a1)).
Definition term106 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a1) := (fun y0 : prod a0 a1 => forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1))) (@pair a0 a1 x1 x2).
Definition term98 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := exists y0 : prod a0 a1, @SETSPEC (prod a0 a1) x0 (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x1) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1))) y0.
Definition term97 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := exists y0 : prod a0 a1, @SETSPEC (prod a0 a1) x0 (forall y1 : a0 -> Prop, ((fun y2 : a0 -> Prop => @IN (a0 -> Prop) y2 x1) y1) -> @IN (prod a0 a1) y0 ((fun y2 : a0 -> Prop => @CROSS a1 a0 y2 (@UNIV a1)) y1)) y0.
Definition term65 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => @IN (a0 -> Prop) y0 x0) x1.
Definition term66 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) (x2 : a0 -> Prop) := @SETSPEC ((prod a0 a1) -> Prop) x0 ((fun y0 : a0 -> Prop => @IN (a0 -> Prop) y0 x1) x2).
Definition term72 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) := fun y0 : a0 -> Prop => @SETSPEC ((prod a0 a1) -> Prop) x0 (@IN (a0 -> Prop) y0 x1) (@CROSS a1 a0 y0 (@UNIV a1)).
Definition term82 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) := imp (@IN (a0 -> Prop) x0 x1).
Definition term17 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (y0 = y1) = (forall y2 : a0, (@IN a0 y2 y0) = (@IN a0 y2 y1))) x0.
Definition term78 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (@IN (a0 -> Prop) y1 x0) (@CROSS a1 a0 y1 (@UNIV a1))).
Definition term77 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 ((fun y2 : a0 -> Prop => @IN (a0 -> Prop) y2 x0) y1) ((fun y2 : a0 -> Prop => @CROSS a1 a0 y2 (@UNIV a1)) y1)).
Definition term33 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := forall y0 : prod a0 a1, (fun y1 : prod a0 a1 => (@IN (prod a0 a1) y1 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y1 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1))))))) y0.
Definition term89 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) := forall y0 : a0 -> Prop, ((fun y1 : a0 -> Prop => @IN (a0 -> Prop) y1 x0) y0) -> @IN (prod a0 a1) x1 ((fun y1 : a0 -> Prop => @CROSS a1 a0 y1 (@UNIV a1)) y0).
Definition term32 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) := forall y0 : a0, forall y1 : a1, x0 (@pair a0 a1 y0 y1).
Definition term53 (a0 : Type') (x0 : a0) (x1 : type686 a0) := @IN a0 x0 (@INTERS a0 x1).
Definition term109 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : prod a0 a1) := @SETSPEC (prod a0 a1) x0 ((fun y0 : prod a0 a1 => forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x1) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1))) x2).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0 -> Prop) (x3 : a1 -> Prop) := @IN (prod a0 a1) (@pair a0 a1 x0 x1) (@CROSS a1 a0 x2 x3).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a1) (x3 : a1 -> Prop) := (fun y0 : a1 -> Prop => (@IN (prod a0 a1) (@pair a0 a1 x0 x2) (@CROSS a1 a0 x1 y0)) = ((@IN a0 x0 x1) /\ (@IN a1 x2 y0))) x3.
Definition term112 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) := exists y0 : prod a0 a1, @SETSPEC (prod a0 a1) x0 ((fun y1 : prod a0 a1 => forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x1) -> @IN (prod a0 a1) y1 (@CROSS a1 a0 y2 (@UNIV a1))) y0) y0.
Definition term21 (a0 : Type') (a1 : Type') := forall y0 : a1 -> Prop, forall y1 : type1470 a0 a1, (@INTERS a0 (@GSPEC (a0 -> Prop) (fun y2 : a0 -> Prop => exists y3 : a1, @SETSPEC (a0 -> Prop) y2 (y0 y3) (y1 y3)))) = (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (forall y4 : a1, (y0 y4) -> @IN a0 y3 (y1 y4)) y3)).
Definition term3 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := forall y0 : a0 -> Prop, forall y1 : a1 -> Prop, (@IN (prod a0 a1) (@pair a0 a1 x0 x1) (@CROSS a1 a0 y0 y1)) = ((@IN a0 x0 y0) /\ (@IN a1 x1 y1)).
Definition term16 (a0 : Type') (a1 : Type') (x0 : type1223 a0 a1) := forall y0 : a1, forall y1 : a0, x0 (@pair a1 a0 y0 y1).
Definition term1 (a0 : Type') (a1 : Type') (x0 : a0) := forall y0 : a1, forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, (@IN (prod a0 a1) (@pair a0 a1 x0 y0) (@CROSS a1 a0 y1 y2)) = ((@IN a0 x0 y1) /\ (@IN a1 y0 y2)).
Definition term121 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a0 -> Prop) (x3 : a1) := (@IN (a0 -> Prop) x2 x0) -> (@IN a0 x1 x2) /\ (@IN a1 x3 (@UNIV a1)).
Definition term116 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) := @eq Prop (@IN (prod a0 a1) (@pair a0 a1 x0 x1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x2) -> @IN (prod a0 a1) y1 (@CROSS a1 a0 y2 (@UNIV a1))) y1))).
Definition term115 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : type686 a0) := @eq Prop (@IN (prod a0 a1) (@pair a0 a1 x0 x1) (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 ((fun y2 : prod a0 a1 => forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 x2) -> @IN (prod a0 a1) y2 (@CROSS a1 a0 y3 (@UNIV a1))) y1) y1))).
Definition term12 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (fun y0 : a0 => (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (x0 y2) y2))) = (x0 y0)) x1.
Definition term69 (a0 : Type') (a1 : Type') (x0 : type1210 a0 a1) (x1 : type686 a0) (x2 : a0 -> Prop) := @SETSPEC ((prod a0 a1) -> Prop) x0 ((fun y0 : a0 -> Prop => @IN (a0 -> Prop) y0 x1) x2) ((fun y0 : a0 -> Prop => @CROSS a1 a0 y0 (@UNIV a1)) x2).
Definition term68 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => @CROSS a1 a0 y0 (@UNIV a1)) x0.
Definition term54 (a0 : Type') (x0 : a0) := @IN a0 x0 (@INTERS a0 (@EMPTY (a0 -> Prop))).
Definition term104 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type1210 a0 a1) := @IN (prod a0 a1) x0 (@GSPEC (prod a0 a1) (fun y0 : prod a0 a1 => exists y1 : prod a0 a1, @SETSPEC (prod a0 a1) y0 (x1 y1) y1)).
Definition term45 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) (x2 : a0) := fun y0 : a1 => (fun y1 : prod a0 a1 => (@IN (prod a0 a1) y1 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y1 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1))))))) (@pair a0 a1 x2 y0).
Definition term128 (a0 : Type') (a1 : Type') (x0 : type686 a0) := forall y0 : a0, forall y1 : a1, ((@IN a0 y0 (@INTERS a0 x0)) /\ (@IN a1 y1 (@INTERS a1 (@EMPTY (a1 -> Prop))))) = (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x0) -> (@IN a0 y0 y2) /\ (@IN a1 y1 (@UNIV a1))).
Definition term51 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := forall y0 : a0, forall y1 : a1, (@IN (prod a0 a1) (@pair a0 a1 y0 y1) (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) (@pair a0 a1 y0 y1) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y2 : type1210 a0 a1 => exists y3 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y2 (@IN (a0 -> Prop) y3 x1) (@CROSS a1 a0 y3 (@UNIV a1)))))).
Definition term56 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type686 a0) (x2 : a1) := (@IN a0 x0 (@INTERS a0 x1)) /\ (@IN a1 x2 (@INTERS a1 (@EMPTY (a1 -> Prop)))).
Definition term102 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := @IN (prod a0 a1) (@pair a0 a1 x0 x1).
Definition term118 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) (x2 : a0 -> Prop) := @IN (prod a0 a1) (@pair a0 a1 x0 x1) (@CROSS a1 a0 x2 (@UNIV a1)).
Definition term22 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : type1470 a0 a1, (@INTERS a0 (@GSPEC (a0 -> Prop) (fun y2 : a0 -> Prop => exists y3 : a1, @SETSPEC (a0 -> Prop) y2 (y0 y3) (y1 y3)))) = (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (forall y4 : a1, (y0 y4) -> @IN a0 y3 (y1 y4)) y3))) x0.
Definition term58 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type686 a0) (x2 : a1) := @eq Prop ((@IN a0 x0 (@INTERS a0 x1)) /\ (@IN a1 x2 (@INTERS a1 (@EMPTY (a1 -> Prop))))).
Definition term48 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : a0) (x2 : type686 a0) := forall y0 : a1, (@IN (prod a0 a1) (@pair a0 a1 x1 y0) (@CROSS a1 a0 (@INTERS a0 x2) (@INTERS a1 x0))) = (@IN (prod a0 a1) (@pair a0 a1 x1 y0) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y1 : type1210 a0 a1 => exists y2 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y1 (@IN (a0 -> Prop) y2 x2) (@CROSS a1 a0 y2 (@UNIV a1)))))).
Definition term126 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) := forall y0 : a1, ((@IN a0 x1 (@INTERS a0 x0)) /\ (@IN a1 y0 (@INTERS a1 (@EMPTY (a1 -> Prop))))) = (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> (@IN a0 x1 y1) /\ (@IN a1 y0 (@UNIV a1))).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a1 -> Prop) (x1 : type1470 a0 a1) := (fun y0 : type1470 a0 a1 => (@INTERS a0 (@GSPEC (a0 -> Prop) (fun y1 : a0 -> Prop => exists y2 : a1, @SETSPEC (a0 -> Prop) y1 (x0 y2) (y0 y2)))) = (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (forall y3 : a1, (x0 y3) -> @IN a0 y2 (y0 y3)) y2))) x1.
Definition term94 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : prod a0 a1) := @SETSPEC (prod a0 a1) x0 (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x1) -> @IN (prod a0 a1) x2 (@CROSS a1 a0 y0 (@UNIV a1))) x2.
Definition term93 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : prod a0 a1) := @SETSPEC (prod a0 a1) x0 (forall y0 : a0 -> Prop, ((fun y1 : a0 -> Prop => @IN (a0 -> Prop) y1 x1) y0) -> @IN (prod a0 a1) x2 ((fun y1 : a0 -> Prop => @CROSS a1 a0 y1 (@UNIV a1)) y0)) x2.
Definition term19 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (x0 = y0) = (forall y1 : a0, (@IN a0 y1 x0) = (@IN a0 y1 y0))) x1.
Definition term55 (a0 : Type') (x0 : a0) (x1 : type686 a0) := and (@IN a0 x0 (@INTERS a0 x1)).
Definition term49 (a0 : Type') (a1 : Type') (x0 : type686 a1) (x1 : type686 a0) := fun y0 : a0 => forall y1 : a1, (fun y2 : prod a0 a1 => (@IN (prod a0 a1) y2 (@CROSS a1 a0 (@INTERS a0 x1) (@INTERS a1 x0))) = (@IN (prod a0 a1) y2 (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y3 : type1210 a0 a1 => exists y4 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y3 (@IN (a0 -> Prop) y4 x1) (@CROSS a1 a0 y4 (@UNIV a1))))))) (@pair a0 a1 y0 y1).
Definition term110 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : prod a0 a1) := @SETSPEC (prod a0 a1) x0 ((fun y0 : prod a0 a1 => forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x1) -> @IN (prod a0 a1) y0 (@CROSS a1 a0 y1 (@UNIV a1))) x2) x2.
Definition term92 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : prod a0 a1) := @SETSPEC (prod a0 a1) x0 (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x1) -> @IN (prod a0 a1) x2 (@CROSS a1 a0 y0 (@UNIV a1))).
Definition term91 (a0 : Type') (a1 : Type') (x0 : prod a0 a1) (x1 : type686 a0) (x2 : prod a0 a1) := @SETSPEC (prod a0 a1) x0 (forall y0 : a0 -> Prop, ((fun y1 : a0 -> Prop => @IN (a0 -> Prop) y1 x1) y0) -> @IN (prod a0 a1) x2 ((fun y1 : a0 -> Prop => @CROSS a1 a0 y1 (@UNIV a1)) y0)).
Definition term9 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (y0 y3) y3))) = (y0 y1).
Definition term2 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a1) := (fun y0 : a1 => forall y1 : a0 -> Prop, forall y2 : a1 -> Prop, (@IN (prod a0 a1) (@pair a0 a1 x0 y0) (@CROSS a1 a0 y1 y2)) = ((@IN a0 x0 y1) /\ (@IN a1 y0 y2))) x1.
Definition term14 (a0 : Type') (a1 : Type') (x0 : type1223 a0 a1) := (fun y0 : type1223 a0 a1 => (forall y1 : prod a1 a0, y0 y1) = (forall y1 : a1, forall y2 : a0, y0 (@pair a1 a0 y1 y2))) x0.
Definition term80 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @eq ((prod a0 a1) -> Prop) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 (@IN (a0 -> Prop) y1 x0) (@CROSS a1 a0 y1 (@UNIV a1))))).
Definition term79 (a0 : Type') (a1 : Type') (x0 : type686 a0) := @eq ((prod a0 a1) -> Prop) (@INTERS (prod a0 a1) (@GSPEC ((prod a0 a1) -> Prop) (fun y0 : type1210 a0 a1 => exists y1 : a0 -> Prop, @SETSPEC ((prod a0 a1) -> Prop) y0 ((fun y2 : a0 -> Prop => @IN (a0 -> Prop) y2 x0) y1) ((fun y2 : a0 -> Prop => @CROSS a1 a0 y2 (@UNIV a1)) y1)))).
Definition term18 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (x0 = y0) = (forall y1 : a0, (@IN a0 y1 x0) = (@IN a0 y1 y0)).
Definition term87 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : prod a0 a1) := fun y0 : a0 -> Prop => ((fun y1 : a0 -> Prop => @IN (a0 -> Prop) y1 x0) y0) -> @IN (prod a0 a1) x1 ((fun y1 : a0 -> Prop => @CROSS a1 a0 y1 (@UNIV a1)) y0).
Definition term120 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0) (x2 : a1) (x3 : a0 -> Prop) := (@IN (a0 -> Prop) x3 x0) -> @IN (prod a0 a1) (@pair a0 a1 x1 x2) (@CROSS a1 a0 x3 (@UNIV a1)).
