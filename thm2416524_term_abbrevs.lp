require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term0 (x0: El int) (x1: El int) (x2: El int) (x3: El int) (x4: El int) (x5: El int) (x6: El int) (x7: El int) (x8: El num) (x9: El int) (x10: El int) (x11: El int) (x12: El num) ≔ (∧ (= (int_mul x5 x4) (int_mul x4 x5)) (∧ (= (int_mul (int_add x5 x4) x6) (int_add (int_mul x5 x6) (int_mul x4 x6))) (∧ (= (int_mul (int_of_num (NUMERAL _0)) x5) (int_of_num (NUMERAL _0))) (∧ (= (int_mul x5 (int_of_num (NUMERAL _0))) (int_of_num (NUMERAL _0))) (∧ (= (int_mul (int_of_num (NUMERAL (BIT1 _0))) x5) x5) (∧ (= (int_mul x5 (int_of_num (NUMERAL (BIT1 _0)))) x5) (∧ (= (int_mul (int_mul x2 x0) (int_mul x1 x3)) (int_mul (int_mul x2 x1) (int_mul x0 x3))) (∧ (= (int_mul (int_mul x2 x0) (int_mul x1 x3)) (int_mul x2 (int_mul x0 (int_mul x1 x3)))) (∧ (= (int_mul (int_mul x2 x0) (int_mul x1 x3)) (int_mul x1 (int_mul (int_mul x2 x0) x3))) (∧ (= (int_mul (int_mul x2 x0) x1) (int_mul (int_mul x2 x1) x0)) (∧ (= (int_mul (int_mul x2 x0) x1) (int_mul x2 (int_mul x0 x1))) (∧ (= (int_mul x2 x1) (int_mul x1 x2)) (∧ (= (int_mul x2 (int_mul x1 x3)) (int_mul (int_mul x2 x1) x3)) (∧ (= (int_mul x2 (int_mul x1 x3)) (int_mul x1 (int_mul x2 x3))) (∧ (= (int_add (int_add x5 x4) (int_add x6 x7)) (int_add (int_add x5 x6) (int_add x4 x7))) (∧ (= (int_add (int_add x5 x4) x6) (int_add x5 (int_add x4 x6))) (∧ (= (int_add x5 (int_add x6 x7)) (int_add x6 (int_add x5 x7))) (∧ (= (int_add (int_add x5 x4) x6) (int_add (int_add x5 x6) x4)) (∧ (= (int_add x5 x6) (int_add x6 x5)) (∧ (= (int_add x5 (int_add x6 x7)) (int_add (int_add x5 x6) x7)) (∧ (= (int_mul (int_pow x11 x8) (int_pow x11 x12)) (int_pow x11 (+ x8 x12))) (∧ (= (int_mul x11 (int_pow x11 x12)) (int_pow x11 (SUC x12))) (∧ (= (int_mul (int_pow x11 x12) x11) (int_pow x11 (SUC x12))) (∧ (= (int_mul x11 x11) (int_pow x11 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (int_pow (int_mul x11 x9) x12) (int_mul (int_pow x11 x12) (int_pow x9 x12))) (∧ (= (int_pow (int_pow x11 x8) x12) (int_pow x11 (* x8 x12))) (∧ (= (int_pow x11 (NUMERAL _0)) (int_of_num (NUMERAL (BIT1 _0)))) (∧ (= (int_pow x11 (NUMERAL (BIT1 _0))) x11) (∧ (= (int_mul x11 (int_add x9 x10)) (int_add (int_mul x11 x9) (int_mul x11 x10))) (= (int_pow x11 (SUC x12)) (int_mul x11 (int_pow x11 x12))))))))))))))))))))))))))))))));
