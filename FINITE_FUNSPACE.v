Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import FINITE_FUNSPACE_term_abbrevs.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import HAS_SIZE_spec.
Require Import HAS_SIZE_FUNSPACE_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm17045_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17784_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm19490_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm69_spec.
Lemma lem4555254 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem4555255 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem4555256 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem4555255 t1) (@lem4555254 t1)). Qed.
Lemma lem4555257 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem4555256 t1 t2). Qed.
Lemma lem4555258 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem4555259 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem4555258 t1 t2) (@lem4555257 t1 t2)). Qed.
Lemma lem4555260 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem4555259 t1 t2 t3). Qed.
Lemma lem4555261 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem4555262 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem4555261 t1 t2 t3) (@lem4555260 t1 t2 t3)). Qed.
Lemma lem4555263 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem4555262 t1 t2 t3)). Qed.
Lemma lem4555265 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4555266 {_107705 _107708 : Type'} (d : _107705) : (term8 _107705 _107708 d) = (term9 _107705 _107708 d).
Proof. exact (@lem4555265 (term8 _107705 _107708 d)). Qed.
Lemma lem4555267 {_107705 _107708 : Type'} (d : _107705) : (term9 _107705 _107708 d) = (term8 _107705 _107708 d).
Proof. exact (SYM (@lem4555266 _107705 _107708 d)). Qed.
Lemma lem4555268 {_107705 _107708 : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term10 _107705 _107708 d.
Proof. exact (h1). Qed.
Lemma lem4555269 {_107705 _107708 : Type'} : term11 _107705 _107708.
Proof. exact (@lem4521678 _107708 _107705). Qed.
Lemma lem4555272 {_107708 B : Type'} : term12 _107708 B.
Proof. exact (@lem4521678 _107708 B). Qed.
Lemma lem4555274 {_107705 B : Type'} : term12 _107705 B.
Proof. exact (@lem4521678 _107705 B). Qed.
Lemma lem4555275 {_107708 A : Type'} : term11 _107708 A.
Proof. exact (@lem4521678 A _107708). Qed.
Lemma lem4555276 {_107705 A : Type'} : term11 _107705 A.
Proof. exact (@lem4521678 A _107705). Qed.
Lemma lem4555278 {A : Type'} : term13 A.
Proof. exact (@lem3863773 A). Qed.
Lemma lem4555279 {B : Type'} : term13 B.
Proof. exact (@lem3863773 B). Qed.
Lemma lem4555280 {A B : Type'} : term14 A B.
Proof. exact (@lem3863773 (A -> B)). Qed.
Lemma lem4555281 {_107708 : Type'} : term13 _107708.
Proof. exact (@lem3863773 _107708). Qed.
Lemma lem4555282 {_107708 B : Type'} : term14 _107708 B.
Proof. exact (@lem3863773 (_107708 -> B)). Qed.
Lemma lem4555283 {_107705 : Type'} : term13 _107705.
Proof. exact (@lem3863773 _107705). Qed.
Lemma lem4555284 {_107705 B : Type'} : term14 _107705 B.
Proof. exact (@lem3863773 (_107705 -> B)). Qed.
Lemma lem4555285 {_107708 A : Type'} : term15 _107708 A.
Proof. exact (@lem3863773 (A -> _107708)). Qed.
Lemma lem4555286 {_107705 A : Type'} : term15 _107705 A.
Proof. exact (@lem3863773 (A -> _107705)). Qed.
Lemma lem4555287 {_107705 _107708 : Type'} : term15 _107705 _107708.
Proof. exact (@lem3863773 (_107708 -> _107705)). Qed.
Lemma lem4555293 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term16 _107705 _107708 A B d) : term16 _107705 _107708 A B d.
Proof. exact (h1). Qed.
Lemma lem4555294 {_107705 _107708 A B : Type'} (d : _107705) : term17 _107705 _107708 A B d.
Proof. exact (fun h0 : term16 _107705 _107708 A B d => @lem4555293 _107705 _107708 A B d h0). Qed.
Lemma lem4555295 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term17 _107705 _107708 A B d) : term17 _107705 _107708 A B d.
Proof. exact (h1). Qed.
Lemma lem4555296 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term16 _107705 _107708 A B d) : term16 _107705 _107708 A B d.
Proof. exact (h1). Qed.
Lemma lem4555297 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term16 _107705 _107708 A B d) (h2 : term17 _107705 _107708 A B d) : term16 _107705 _107708 A B d.
Proof. exact (@lem4555295 _107705 _107708 A B d h2 (@lem4555296 _107705 _107708 A B d h1)). Qed.
Lemma lem4555298 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term16 _107705 _107708 A B d) : term18 _107705 _107708 A B d.
Proof. exact (fun h0 : term17 _107705 _107708 A B d => @lem4555297 _107705 _107708 A B d h1 h0). Qed.
Lemma lem4555299 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term17 _107705 _107708 A B d) : term17 _107705 _107708 A B d.
Proof. exact (h1). Qed.
Lemma lem4555300 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term16 _107705 _107708 A B d) (h2 : term17 _107705 _107708 A B d) : term16 _107705 _107708 A B d.
Proof. exact (@lem4555298 _107705 _107708 A B d h1 (@lem4555299 _107705 _107708 A B d h2)). Qed.
Lemma lem4555301 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term17 _107705 _107708 A B d) : term17 _107705 _107708 A B d.
Proof. exact (fun h0 : term16 _107705 _107708 A B d => @lem4555300 _107705 _107708 A B d h0 h1). Qed.
Lemma lem4555302 {_107705 _107708 A B : Type'} (d : _107705) : term19 _107705 _107708 A B d.
Proof. exact (fun h0 : term17 _107705 _107708 A B d => @lem4555301 _107705 _107708 A B d h0). Qed.
Lemma lem4555305 {_107705 _107708 A B : Type'} (d : _107705) : term17 _107705 _107708 A B d.
Proof. exact (@lem4555302 _107705 _107708 A B d (@lem4555294 _107705 _107708 A B d)). Qed.
Lemma lem4555306 {_107705 _107708 A B : Type'} (d : _107705) : term17 _107705 _107708 A B d.
Proof. exact (@lem4555305 _107705 _107708 A B d). Qed.
Lemma lem4555684 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4555685 {A B : Type'} : (term20 A B) = (term21 A B).
Proof. exact (@lem4555684 (term12 A B)). Qed.
Lemma lem4555728 {_107708 B : Type'} : (term22 _107708 B) = (term22 _107708 B).
Proof. exact (eq_refl (term22 _107708 B)). Qed.
Lemma lem4555729 {_107708 A B : Type'} : (term23 _107708 A B) = (term24 _107708 A B).
Proof. exact (MK_COMB (@lem4555728 _107708 B) (@lem4555685 A B)). Qed.
Lemma lem4555732 {_107705 B : Type'} : (term22 _107705 B) = (term22 _107705 B).
Proof. exact (eq_refl (term22 _107705 B)). Qed.
Lemma lem4555733 {_107705 _107708 A B : Type'} : (term25 _107705 _107708 A B) = (term26 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555732 _107705 B) (@lem4555729 _107708 A B)). Qed.
Lemma lem4555736 {_107708 A : Type'} : (term27 _107708 A) = (term27 _107708 A).
Proof. exact (eq_refl (term27 _107708 A)). Qed.
Lemma lem4555737 {_107705 _107708 A B : Type'} : (term28 _107705 _107708 A B) = (term29 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555736 _107708 A) (@lem4555733 _107705 _107708 A B)). Qed.
Lemma lem4555740 {_107705 A : Type'} : (term27 _107705 A) = (term27 _107705 A).
Proof. exact (eq_refl (term27 _107705 A)). Qed.
Lemma lem4555741 {_107705 _107708 A B : Type'} : (term30 _107705 _107708 A B) = (term31 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555740 _107705 A) (@lem4555737 _107705 _107708 A B)). Qed.
Lemma lem4555744 {_107705 _107708 : Type'} : (term27 _107705 _107708) = (term27 _107705 _107708).
Proof. exact (eq_refl (term27 _107705 _107708)). Qed.
Lemma lem4555745 {_107705 _107708 A B : Type'} : (term32 _107705 _107708 A B) = (term33 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555744 _107705 _107708) (@lem4555741 _107705 _107708 A B)). Qed.
Lemma lem4555748 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (eq_refl (term34 A B)). Qed.
Lemma lem4555749 {_107705 _107708 A B : Type'} : (term35 _107705 _107708 A B) = (term36 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555748 A B) (@lem4555745 _107705 _107708 A B)). Qed.
Lemma lem4555752 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (eq_refl (term37 _107708 A)). Qed.
Lemma lem4555753 {_107705 _107708 A B : Type'} : (term38 _107705 _107708 A B) = (term39 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555752 _107708 A) (@lem4555749 _107705 _107708 A B)). Qed.
Lemma lem4555756 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (eq_refl (term37 _107705 A)). Qed.
Lemma lem4555757 {_107705 _107708 A B : Type'} : (term40 _107705 _107708 A B) = (term41 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555756 _107705 A) (@lem4555753 _107705 _107708 A B)). Qed.
Lemma lem4555760 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (eq_refl (term34 _107708 B)). Qed.
Lemma lem4555761 {_107705 _107708 A B : Type'} : (term42 _107705 _107708 A B) = (term43 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555760 _107708 B) (@lem4555757 _107705 _107708 A B)). Qed.
Lemma lem4555764 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (eq_refl (term37 _107705 _107708)). Qed.
Lemma lem4555765 {_107705 _107708 A B : Type'} : (term44 _107705 _107708 A B) = (term45 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555764 _107705 _107708) (@lem4555761 _107705 _107708 A B)). Qed.
Lemma lem4555768 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (eq_refl (term34 _107705 B)). Qed.
Lemma lem4555769 {_107705 _107708 A B : Type'} : (term46 _107705 _107708 A B) = (term47 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555768 _107705 B) (@lem4555765 _107705 _107708 A B)). Qed.
Lemma lem4555772 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (eq_refl (term48 B)). Qed.
Lemma lem4555773 {_107705 _107708 A B : Type'} : (term49 _107705 _107708 A B) = (term50 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555772 B) (@lem4555769 _107705 _107708 A B)). Qed.
Lemma lem4555776 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (eq_refl (term48 A)). Qed.
Lemma lem4555777 {_107705 _107708 A B : Type'} : (term51 _107705 _107708 A B) = (term52 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555776 A) (@lem4555773 _107705 _107708 A B)). Qed.
Lemma lem4555780 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (eq_refl (term48 _107708)). Qed.
Lemma lem4555781 {_107705 _107708 A B : Type'} : (term53 _107705 _107708 A B) = (term54 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555780 _107708) (@lem4555777 _107705 _107708 A B)). Qed.
Lemma lem4555784 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (eq_refl (term48 _107705)). Qed.
Lemma lem4555785 {_107705 _107708 A B : Type'} : (term55 _107705 _107708 A B) = (term56 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555784 _107705) (@lem4555781 _107705 _107708 A B)). Qed.
Lemma lem4555788 {_107705 _107708 : Type'} (d : _107705) : (term57 _107705 _107708 d) = (term57 _107705 _107708 d).
Proof. exact (eq_refl (term57 _107705 _107708 d)). Qed.
Lemma lem4555789 {_107705 _107708 A B : Type'} (d : _107705) : (term16 _107705 _107708 A B d) = (term58 _107705 _107708 A B d).
Proof. exact (MK_COMB (@lem4555788 _107705 _107708 d) (@lem4555785 _107705 _107708 A B)). Qed.
Lemma lem4555792 {_107705 _107708 A B : Type'} : (term59 _107705 _107708 A B) = (term60 _107705 _107708 A B).
Proof. exact (fun_ext (fun d : _107705 => @lem4555789 _107705 _107708 A B d)). Qed.
Lemma lem4555793 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4555800 {_107705 _107708 A B : Type'} : (term61 _107705 _107708 A B) = (term62 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4555793 _107705) (@lem4555792 _107705 _107708 A B)). Qed.
Lemma lem4555801 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : _54415 = (term63 _107705 _107708).
Proof. exact (h1). Qed.
Lemma lem4555802 {_107705 : Type'} (t : _107705 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4555803 {_107705 _107708 : Type'} (t : _107705 -> Prop) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (_54415 t) = (term64 _107705 _107708 t).
Proof. exact (MK_COMB (@lem4555801 _107705 _107708 _54415 h1) (@lem4555802 _107705 t)). Qed.
Lemma lem4555804 {_107705 _107708 : Type'} (t : _107705 -> Prop) : (term64 _107705 _107708 t) = (term65 _107705 _107708 t).
Proof. exact (eq_refl (term64 _107705 _107708 t)). Qed.
Lemma lem4555805 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term66 _107705 _107708 _54415 t) = (term66 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term66 _107705 _107708 _54415 t)). Qed.
Lemma lem4555806 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((_54415 t) = (term64 _107705 _107708 t)) = ((_54415 t) = (term65 _107705 _107708 t)).
Proof. exact (MK_COMB (@lem4555805 _107705 _107708 _54415 t) (@lem4555804 _107705 _107708 t)). Qed.
Lemma lem4555807 {_107705 _107708 : Type'} (t : _107705 -> Prop) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (_54415 t) = (term65 _107705 _107708 t).
Proof. exact (EQ_MP (@lem4555806 _107705 _107708 _54415 t) (@lem4555803 _107705 _107708 t _54415 h1)). Qed.
Lemma lem4555808 {_107708 : Type'} (s : _107708 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4555809 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (_54415 t s) = (term67 _107705 _107708 t s).
Proof. exact (MK_COMB (@lem4555807 _107705 _107708 t _54415 h1) (@lem4555808 _107708 s)). Qed.
Lemma lem4555810 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) : (term67 _107705 _107708 t s) = (term68 _107705 _107708 t s).
Proof. exact (eq_refl (term67 _107705 _107708 t s)). Qed.
Lemma lem4555811 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term69 _107705 _107708 _54415 t s) = (term69 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term69 _107705 _107708 _54415 t s)). Qed.
Lemma lem4555812 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((_54415 t s) = (term67 _107705 _107708 t s)) = ((_54415 t s) = (term68 _107705 _107708 t s)).
Proof. exact (MK_COMB (@lem4555811 _107705 _107708 _54415 t s) (@lem4555810 _107705 _107708 t s)). Qed.
Lemma lem4555813 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (_54415 t s) = (term68 _107705 _107708 t s).
Proof. exact (EQ_MP (@lem4555812 _107705 _107708 _54415 t s) (@lem4555809 _107705 _107708 t s _54415 h1)). Qed.
Lemma lem4555814 {_107705 : Type'} (d : _107705) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4555815 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (_54415 t s d) = (term70 _107705 _107708 t s d).
Proof. exact (MK_COMB (@lem4555813 _107705 _107708 t s _54415 h1) (@lem4555814 _107705 d)). Qed.
Lemma lem4555816 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term70 _107705 _107708 t s d) = (term71 _107705 _107708 t s d).
Proof. exact (eq_refl (term70 _107705 _107708 t s d)). Qed.
Lemma lem4555817 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term72 _107705 _107708 _54415 t s d) = (term72 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term72 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4555818 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d) = (term70 _107705 _107708 t s d)) = ((_54415 t s d) = (term71 _107705 _107708 t s d)).
Proof. exact (MK_COMB (@lem4555817 _107705 _107708 _54415 t s d) (@lem4555816 _107705 _107708 t s d)). Qed.
Lemma lem4555819 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (_54415 t s d) = (term71 _107705 _107708 t s d).
Proof. exact (EQ_MP (@lem4555818 _107705 _107708 _54415 t s d) (@lem4555815 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4555825 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4555829 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4555846 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term73 A B s f x d) = (term73 A B s f x d).
Proof. exact (eq_refl (term73 A B s f x d)). Qed.
Lemma lem4555847 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term74 A B s f d) = (term74 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4555846 A B s f x d)). Qed.
Lemma lem4555848 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4555849 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term75 A B s f d) = (term75 A B s f d).
Proof. exact (MK_COMB (@lem4555848 A) (@lem4555847 A B s f d)). Qed.
Lemma lem4555864 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term76 A B s f x t) = (term76 A B s f x t).
Proof. exact (eq_refl (term76 A B s f x t)). Qed.
Lemma lem4555865 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term77 A B s f t) = (term77 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4555864 A B s f x t)). Qed.
Lemma lem4555866 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4555867 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term78 A B s f t) = (term78 A B s f t).
Proof. exact (MK_COMB (@lem4555866 A) (@lem4555865 A B s f t)). Qed.
Lemma lem4555868 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4555869 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term79 A B s f t) = (term79 A B s f t).
Proof. exact (MK_COMB (@lem4555868) (@lem4555867 A B s f t)). Qed.
Lemma lem4555870 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term80 A B t s f d) = (term80 A B t s f d).
Proof. exact (MK_COMB (@lem4555869 A B s f t) (@lem4555849 A B s f d)). Qed.
Lemma lem4555873 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4555874 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term81 A B GEN_PVAR_148 t s f d) = (term81 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4555873 A B GEN_PVAR_148) (@lem4555870 A B t s f d)). Qed.
Lemma lem4555875 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4555874 A B GEN_PVAR_148 t s f d) (@lem4555829 A B f)). Qed.
Lemma lem4555876 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4555875 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4555877 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4555878 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4555877 A B) (@lem4555876 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4555879 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term85 A B t s d) = (term85 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4555878 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4555880 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4555881 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term86 A B t s d) = (term86 A B t s d).
Proof. exact (MK_COMB (@lem4555880 A B) (@lem4555879 A B t s d)). Qed.
Lemma lem4555882 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4555883 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term87 A B t s d) = (term87 A B t s d).
Proof. exact (MK_COMB (@lem4555882 A B) (@lem4555881 A B t s d)). Qed.
Lemma lem4555884 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term88 A B t s d n m) = (term88 A B t s d n m).
Proof. exact (MK_COMB (@lem4555883 A B t s d) (@lem4555825 n m)). Qed.
Lemma lem4555899 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 A B s m t n) = (term89 A B s m t n).
Proof. exact (eq_refl (term89 A B s m t n)). Qed.
Lemma lem4555900 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term90 A B t s d n m) = (term90 A B t s d n m).
Proof. exact (MK_COMB (@lem4555899 A B s m t n) (@lem4555884 A B t s d n m)). Qed.
Lemma lem4555901 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 A B t d n m) = (term91 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4555900 A B t s d n m)). Qed.
Lemma lem4555902 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4555903 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 A B t d n m) = (term92 A B t d n m).
Proof. exact (MK_COMB (@lem4555902 A) (@lem4555901 A B t d n m)). Qed.
Lemma lem4555904 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 A B t d n) = (term93 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4555903 A B t d n m)). Qed.
Lemma lem4555905 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4555906 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 A B t d n) = (term94 A B t d n).
Proof. exact (MK_COMB (@lem4555905) (@lem4555904 A B t d n)). Qed.
Lemma lem4555907 {A B : Type'} (d : B) (n : nat) : (term95 A B d n) = (term95 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4555906 A B t d n)). Qed.
Lemma lem4555908 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4555909 {A B : Type'} (d : B) (n : nat) : (term96 A B d n) = (term96 A B d n).
Proof. exact (MK_COMB (@lem4555908 B) (@lem4555907 A B d n)). Qed.
Lemma lem4555910 {A B : Type'} (d : B) : (term97 A B d) = (term97 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4555909 A B d n)). Qed.
Lemma lem4555911 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4555912 {A B : Type'} (d : B) : (term98 A B d) = (term98 A B d).
Proof. exact (MK_COMB (@lem4555911) (@lem4555910 A B d)). Qed.
Lemma lem4555913 {A B : Type'} : (term99 A B) = (term99 A B).
Proof. exact (fun_ext (fun d : B => @lem4555912 A B d)). Qed.
Lemma lem4555914 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4555915 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4555914 B) (@lem4555913 A B)). Qed.
Lemma lem4555916 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4555917 {A B : Type'} : (term21 A B) = (term21 A B).
Proof. exact (MK_COMB (@lem4555916) (@lem4555915 A B)). Qed.
Lemma lem4555922 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4555926 {_107708 B : Type'} (f : _107708 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4555943 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (d : B) : (term73 _107708 B s f x d) = (term73 _107708 B s f x d).
Proof. exact (eq_refl (term73 _107708 B s f x d)). Qed.
Lemma lem4555944 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term74 _107708 B s f d) = (term74 _107708 B s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4555943 _107708 B s f x d)). Qed.
Lemma lem4555945 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4555946 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term75 _107708 B s f d) = (term75 _107708 B s f d).
Proof. exact (MK_COMB (@lem4555945 _107708) (@lem4555944 _107708 B s f d)). Qed.
Lemma lem4555961 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (t : B -> Prop) : (term76 _107708 B s f x t) = (term76 _107708 B s f x t).
Proof. exact (eq_refl (term76 _107708 B s f x t)). Qed.
Lemma lem4555962 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term77 _107708 B s f t) = (term77 _107708 B s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4555961 _107708 B s f x t)). Qed.
Lemma lem4555963 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4555964 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term78 _107708 B s f t) = (term78 _107708 B s f t).
Proof. exact (MK_COMB (@lem4555963 _107708) (@lem4555962 _107708 B s f t)). Qed.
Lemma lem4555965 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4555966 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term79 _107708 B s f t) = (term79 _107708 B s f t).
Proof. exact (MK_COMB (@lem4555965) (@lem4555964 _107708 B s f t)). Qed.
Lemma lem4555967 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term80 _107708 B t s f d) = (term80 _107708 B t s f d).
Proof. exact (MK_COMB (@lem4555966 _107708 B s f t) (@lem4555946 _107708 B s f d)). Qed.
Lemma lem4555970 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) : (@SETSPEC (_107708 -> B) GEN_PVAR_148) = (@SETSPEC (_107708 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107708 -> B) GEN_PVAR_148)). Qed.
Lemma lem4555971 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term81 _107708 B GEN_PVAR_148 t s f d) = (term81 _107708 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4555970 _107708 B GEN_PVAR_148) (@lem4555967 _107708 B t s f d)). Qed.
Lemma lem4555972 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4555971 _107708 B GEN_PVAR_148 t s f d) (@lem4555926 _107708 B f)). Qed.
Lemma lem4555973 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4555972 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4555974 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4555975 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4555974 _107708 B) (@lem4555973 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4555976 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term85 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4555975 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4555977 {_107708 B : Type'} : (@GSPEC (_107708 -> B)) = (@GSPEC (_107708 -> B)).
Proof. exact (eq_refl (@GSPEC (_107708 -> B))). Qed.
Lemma lem4555978 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term86 _107708 B t s d) = (term86 _107708 B t s d).
Proof. exact (MK_COMB (@lem4555977 _107708 B) (@lem4555976 _107708 B t s d)). Qed.
Lemma lem4555979 {_107708 B : Type'} : (@HAS_SIZE (_107708 -> B)) = (@HAS_SIZE (_107708 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> B))). Qed.
Lemma lem4555980 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term87 _107708 B t s d) = (term87 _107708 B t s d).
Proof. exact (MK_COMB (@lem4555979 _107708 B) (@lem4555978 _107708 B t s d)). Qed.
Lemma lem4555981 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107708 B t s d n m) = (term88 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4555980 _107708 B t s d) (@lem4555922 n m)). Qed.
Lemma lem4555996 {_107708 B : Type'} (s : _107708 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107708 B s m t n) = (term89 _107708 B s m t n).
Proof. exact (eq_refl (term89 _107708 B s m t n)). Qed.
Lemma lem4555997 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107708 B t s d n m) = (term90 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4555996 _107708 B s m t n) (@lem4555981 _107708 B t s d n m)). Qed.
Lemma lem4555998 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107708 B t d n m) = (term91 _107708 B t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4555997 _107708 B t s d n m)). Qed.
Lemma lem4555999 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556000 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107708 B t d n m) = (term92 _107708 B t d n m).
Proof. exact (MK_COMB (@lem4555999 _107708) (@lem4555998 _107708 B t d n m)). Qed.
Lemma lem4556001 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107708 B t d n) = (term93 _107708 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4556000 _107708 B t d n m)). Qed.
Lemma lem4556002 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556003 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107708 B t d n) = (term94 _107708 B t d n).
Proof. exact (MK_COMB (@lem4556002) (@lem4556001 _107708 B t d n)). Qed.
Lemma lem4556004 {_107708 B : Type'} (d : B) (n : nat) : (term95 _107708 B d n) = (term95 _107708 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4556003 _107708 B t d n)). Qed.
Lemma lem4556005 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4556006 {_107708 B : Type'} (d : B) (n : nat) : (term96 _107708 B d n) = (term96 _107708 B d n).
Proof. exact (MK_COMB (@lem4556005 B) (@lem4556004 _107708 B d n)). Qed.
Lemma lem4556007 {_107708 B : Type'} (d : B) : (term97 _107708 B d) = (term97 _107708 B d).
Proof. exact (fun_ext (fun n : nat => @lem4556006 _107708 B d n)). Qed.
Lemma lem4556008 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556009 {_107708 B : Type'} (d : B) : (term98 _107708 B d) = (term98 _107708 B d).
Proof. exact (MK_COMB (@lem4556008) (@lem4556007 _107708 B d)). Qed.
Lemma lem4556010 {_107708 B : Type'} : (term99 _107708 B) = (term99 _107708 B).
Proof. exact (fun_ext (fun d : B => @lem4556009 _107708 B d)). Qed.
Lemma lem4556011 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4556012 {_107708 B : Type'} : (term12 _107708 B) = (term12 _107708 B).
Proof. exact (MK_COMB (@lem4556011 B) (@lem4556010 _107708 B)). Qed.
Lemma lem4556013 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556014 {_107708 B : Type'} : (term22 _107708 B) = (term22 _107708 B).
Proof. exact (MK_COMB (@lem4556013) (@lem4556012 _107708 B)). Qed.
Lemma lem4556015 {_107708 A B : Type'} : (term24 _107708 A B) = (term24 _107708 A B).
Proof. exact (MK_COMB (@lem4556014 _107708 B) (@lem4555917 A B)). Qed.
Lemma lem4556020 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4556024 {_107705 B : Type'} (f : _107705 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4556041 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (d : B) : (term73 _107705 B s f x d) = (term73 _107705 B s f x d).
Proof. exact (eq_refl (term73 _107705 B s f x d)). Qed.
Lemma lem4556042 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term74 _107705 B s f d) = (term74 _107705 B s f d).
Proof. exact (fun_ext (fun x : _107705 => @lem4556041 _107705 B s f x d)). Qed.
Lemma lem4556043 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556044 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term75 _107705 B s f d) = (term75 _107705 B s f d).
Proof. exact (MK_COMB (@lem4556043 _107705) (@lem4556042 _107705 B s f d)). Qed.
Lemma lem4556059 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (t : B -> Prop) : (term76 _107705 B s f x t) = (term76 _107705 B s f x t).
Proof. exact (eq_refl (term76 _107705 B s f x t)). Qed.
Lemma lem4556060 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term77 _107705 B s f t) = (term77 _107705 B s f t).
Proof. exact (fun_ext (fun x : _107705 => @lem4556059 _107705 B s f x t)). Qed.
Lemma lem4556061 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556062 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term78 _107705 B s f t) = (term78 _107705 B s f t).
Proof. exact (MK_COMB (@lem4556061 _107705) (@lem4556060 _107705 B s f t)). Qed.
Lemma lem4556063 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4556064 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term79 _107705 B s f t) = (term79 _107705 B s f t).
Proof. exact (MK_COMB (@lem4556063) (@lem4556062 _107705 B s f t)). Qed.
Lemma lem4556065 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term80 _107705 B t s f d) = (term80 _107705 B t s f d).
Proof. exact (MK_COMB (@lem4556064 _107705 B s f t) (@lem4556044 _107705 B s f d)). Qed.
Lemma lem4556068 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) : (@SETSPEC (_107705 -> B) GEN_PVAR_148) = (@SETSPEC (_107705 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107705 -> B) GEN_PVAR_148)). Qed.
Lemma lem4556069 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term81 _107705 B GEN_PVAR_148 t s f d) = (term81 _107705 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4556068 _107705 B GEN_PVAR_148) (@lem4556065 _107705 B t s f d)). Qed.
Lemma lem4556070 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4556069 _107705 B GEN_PVAR_148 t s f d) (@lem4556024 _107705 B f)). Qed.
Lemma lem4556071 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4556070 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4556072 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4556073 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4556072 _107705 B) (@lem4556071 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4556074 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term85 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4556073 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4556075 {_107705 B : Type'} : (@GSPEC (_107705 -> B)) = (@GSPEC (_107705 -> B)).
Proof. exact (eq_refl (@GSPEC (_107705 -> B))). Qed.
Lemma lem4556076 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term86 _107705 B t s d) = (term86 _107705 B t s d).
Proof. exact (MK_COMB (@lem4556075 _107705 B) (@lem4556074 _107705 B t s d)). Qed.
Lemma lem4556077 {_107705 B : Type'} : (@HAS_SIZE (_107705 -> B)) = (@HAS_SIZE (_107705 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107705 -> B))). Qed.
Lemma lem4556078 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term87 _107705 B t s d) = (term87 _107705 B t s d).
Proof. exact (MK_COMB (@lem4556077 _107705 B) (@lem4556076 _107705 B t s d)). Qed.
Lemma lem4556079 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107705 B t s d n m) = (term88 _107705 B t s d n m).
Proof. exact (MK_COMB (@lem4556078 _107705 B t s d) (@lem4556020 n m)). Qed.
Lemma lem4556094 {_107705 B : Type'} (s : _107705 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107705 B s m t n) = (term89 _107705 B s m t n).
Proof. exact (eq_refl (term89 _107705 B s m t n)). Qed.
Lemma lem4556095 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107705 B t s d n m) = (term90 _107705 B t s d n m).
Proof. exact (MK_COMB (@lem4556094 _107705 B s m t n) (@lem4556079 _107705 B t s d n m)). Qed.
Lemma lem4556096 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107705 B t d n m) = (term91 _107705 B t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4556095 _107705 B t s d n m)). Qed.
Lemma lem4556097 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556098 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107705 B t d n m) = (term92 _107705 B t d n m).
Proof. exact (MK_COMB (@lem4556097 _107705) (@lem4556096 _107705 B t d n m)). Qed.
Lemma lem4556099 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107705 B t d n) = (term93 _107705 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4556098 _107705 B t d n m)). Qed.
Lemma lem4556100 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556101 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107705 B t d n) = (term94 _107705 B t d n).
Proof. exact (MK_COMB (@lem4556100) (@lem4556099 _107705 B t d n)). Qed.
Lemma lem4556102 {_107705 B : Type'} (d : B) (n : nat) : (term95 _107705 B d n) = (term95 _107705 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4556101 _107705 B t d n)). Qed.
Lemma lem4556103 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4556104 {_107705 B : Type'} (d : B) (n : nat) : (term96 _107705 B d n) = (term96 _107705 B d n).
Proof. exact (MK_COMB (@lem4556103 B) (@lem4556102 _107705 B d n)). Qed.
Lemma lem4556105 {_107705 B : Type'} (d : B) : (term97 _107705 B d) = (term97 _107705 B d).
Proof. exact (fun_ext (fun n : nat => @lem4556104 _107705 B d n)). Qed.
Lemma lem4556106 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556107 {_107705 B : Type'} (d : B) : (term98 _107705 B d) = (term98 _107705 B d).
Proof. exact (MK_COMB (@lem4556106) (@lem4556105 _107705 B d)). Qed.
Lemma lem4556108 {_107705 B : Type'} : (term99 _107705 B) = (term99 _107705 B).
Proof. exact (fun_ext (fun d : B => @lem4556107 _107705 B d)). Qed.
Lemma lem4556109 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4556110 {_107705 B : Type'} : (term12 _107705 B) = (term12 _107705 B).
Proof. exact (MK_COMB (@lem4556109 B) (@lem4556108 _107705 B)). Qed.
Lemma lem4556111 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556112 {_107705 B : Type'} : (term22 _107705 B) = (term22 _107705 B).
Proof. exact (MK_COMB (@lem4556111) (@lem4556110 _107705 B)). Qed.
Lemma lem4556113 {_107705 _107708 A B : Type'} : (term26 _107705 _107708 A B) = (term26 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556112 _107705 B) (@lem4556015 _107708 A B)). Qed.
Lemma lem4556118 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4556122 {_107708 A : Type'} (f : A -> _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4556139 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (d : _107708) : (term100 _107708 A s f x d) = (term100 _107708 A s f x d).
Proof. exact (eq_refl (term100 _107708 A s f x d)). Qed.
Lemma lem4556140 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term101 _107708 A s f d) = (term101 _107708 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4556139 _107708 A s f x d)). Qed.
Lemma lem4556141 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4556142 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term102 _107708 A s f d) = (term102 _107708 A s f d).
Proof. exact (MK_COMB (@lem4556141 A) (@lem4556140 _107708 A s f d)). Qed.
Lemma lem4556157 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (t : _107708 -> Prop) : (term103 _107708 A s f x t) = (term103 _107708 A s f x t).
Proof. exact (eq_refl (term103 _107708 A s f x t)). Qed.
Lemma lem4556158 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term104 _107708 A s f t) = (term104 _107708 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4556157 _107708 A s f x t)). Qed.
Lemma lem4556159 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4556160 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term105 _107708 A s f t) = (term105 _107708 A s f t).
Proof. exact (MK_COMB (@lem4556159 A) (@lem4556158 _107708 A s f t)). Qed.
Lemma lem4556161 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4556162 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term106 _107708 A s f t) = (term106 _107708 A s f t).
Proof. exact (MK_COMB (@lem4556161) (@lem4556160 _107708 A s f t)). Qed.
Lemma lem4556163 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term107 _107708 A t s f d) = (term107 _107708 A t s f d).
Proof. exact (MK_COMB (@lem4556162 _107708 A s f t) (@lem4556142 _107708 A s f d)). Qed.
Lemma lem4556166 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) : (@SETSPEC (A -> _107708) GEN_PVAR_148) = (@SETSPEC (A -> _107708) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107708) GEN_PVAR_148)). Qed.
Lemma lem4556167 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term108 _107708 A GEN_PVAR_148 t s f d) = (term108 _107708 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4556166 _107708 A GEN_PVAR_148) (@lem4556163 _107708 A t s f d)). Qed.
Lemma lem4556168 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4556167 _107708 A GEN_PVAR_148 t s f d) (@lem4556122 _107708 A f)). Qed.
Lemma lem4556169 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4556168 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4556170 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4556171 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4556170 _107708 A) (@lem4556169 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4556172 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term71 _107708 A t s d) = (term71 _107708 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4556171 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4556173 {_107708 A : Type'} : (@GSPEC (A -> _107708)) = (@GSPEC (A -> _107708)).
Proof. exact (eq_refl (@GSPEC (A -> _107708))). Qed.
Lemma lem4556174 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term112 _107708 A t s d) = (term112 _107708 A t s d).
Proof. exact (MK_COMB (@lem4556173 _107708 A) (@lem4556172 _107708 A t s d)). Qed.
Lemma lem4556175 {_107708 A : Type'} : (@HAS_SIZE (A -> _107708)) = (@HAS_SIZE (A -> _107708)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107708))). Qed.
Lemma lem4556176 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term113 _107708 A t s d) = (term113 _107708 A t s d).
Proof. exact (MK_COMB (@lem4556175 _107708 A) (@lem4556174 _107708 A t s d)). Qed.
Lemma lem4556177 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term114 _107708 A t s d n m) = (term114 _107708 A t s d n m).
Proof. exact (MK_COMB (@lem4556176 _107708 A t s d) (@lem4556118 n m)). Qed.
Lemma lem4556192 {_107708 A : Type'} (s : A -> Prop) (m : nat) (t : _107708 -> Prop) (n : nat) : (term115 _107708 A s m t n) = (term115 _107708 A s m t n).
Proof. exact (eq_refl (term115 _107708 A s m t n)). Qed.
Lemma lem4556193 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term116 _107708 A t s d n m) = (term116 _107708 A t s d n m).
Proof. exact (MK_COMB (@lem4556192 _107708 A s m t n) (@lem4556177 _107708 A t s d n m)). Qed.
Lemma lem4556194 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term117 _107708 A t d n m) = (term117 _107708 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4556193 _107708 A t s d n m)). Qed.
Lemma lem4556195 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4556196 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term118 _107708 A t d n m) = (term118 _107708 A t d n m).
Proof. exact (MK_COMB (@lem4556195 A) (@lem4556194 _107708 A t d n m)). Qed.
Lemma lem4556197 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) : (term119 _107708 A t d n) = (term119 _107708 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4556196 _107708 A t d n m)). Qed.
Lemma lem4556198 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556199 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) : (term120 _107708 A t d n) = (term120 _107708 A t d n).
Proof. exact (MK_COMB (@lem4556198) (@lem4556197 _107708 A t d n)). Qed.
Lemma lem4556200 {_107708 A : Type'} (d : _107708) (n : nat) : (term121 _107708 A d n) = (term121 _107708 A d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4556199 _107708 A t d n)). Qed.
Lemma lem4556201 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556202 {_107708 A : Type'} (d : _107708) (n : nat) : (term122 _107708 A d n) = (term122 _107708 A d n).
Proof. exact (MK_COMB (@lem4556201 _107708) (@lem4556200 _107708 A d n)). Qed.
Lemma lem4556203 {_107708 A : Type'} (d : _107708) : (term123 _107708 A d) = (term123 _107708 A d).
Proof. exact (fun_ext (fun n : nat => @lem4556202 _107708 A d n)). Qed.
Lemma lem4556204 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556205 {_107708 A : Type'} (d : _107708) : (term124 _107708 A d) = (term124 _107708 A d).
Proof. exact (MK_COMB (@lem4556204) (@lem4556203 _107708 A d)). Qed.
Lemma lem4556206 {_107708 A : Type'} : (term125 _107708 A) = (term125 _107708 A).
Proof. exact (fun_ext (fun d : _107708 => @lem4556205 _107708 A d)). Qed.
Lemma lem4556207 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4556208 {_107708 A : Type'} : (term11 _107708 A) = (term11 _107708 A).
Proof. exact (MK_COMB (@lem4556207 _107708) (@lem4556206 _107708 A)). Qed.
Lemma lem4556209 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556210 {_107708 A : Type'} : (term27 _107708 A) = (term27 _107708 A).
Proof. exact (MK_COMB (@lem4556209) (@lem4556208 _107708 A)). Qed.
Lemma lem4556211 {_107705 _107708 A B : Type'} : (term29 _107705 _107708 A B) = (term29 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556210 _107708 A) (@lem4556113 _107705 _107708 A B)). Qed.
Lemma lem4556216 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4556220 {_107705 A : Type'} (f : A -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4556237 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (d : _107705) : (term100 _107705 A s f x d) = (term100 _107705 A s f x d).
Proof. exact (eq_refl (term100 _107705 A s f x d)). Qed.
Lemma lem4556238 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term101 _107705 A s f d) = (term101 _107705 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4556237 _107705 A s f x d)). Qed.
Lemma lem4556239 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4556240 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term102 _107705 A s f d) = (term102 _107705 A s f d).
Proof. exact (MK_COMB (@lem4556239 A) (@lem4556238 _107705 A s f d)). Qed.
Lemma lem4556255 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (t : _107705 -> Prop) : (term103 _107705 A s f x t) = (term103 _107705 A s f x t).
Proof. exact (eq_refl (term103 _107705 A s f x t)). Qed.
Lemma lem4556256 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term104 _107705 A s f t) = (term104 _107705 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4556255 _107705 A s f x t)). Qed.
Lemma lem4556257 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4556258 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term105 _107705 A s f t) = (term105 _107705 A s f t).
Proof. exact (MK_COMB (@lem4556257 A) (@lem4556256 _107705 A s f t)). Qed.
Lemma lem4556259 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4556260 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term106 _107705 A s f t) = (term106 _107705 A s f t).
Proof. exact (MK_COMB (@lem4556259) (@lem4556258 _107705 A s f t)). Qed.
Lemma lem4556261 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term107 _107705 A t s f d) = (term107 _107705 A t s f d).
Proof. exact (MK_COMB (@lem4556260 _107705 A s f t) (@lem4556240 _107705 A s f d)). Qed.
Lemma lem4556264 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) : (@SETSPEC (A -> _107705) GEN_PVAR_148) = (@SETSPEC (A -> _107705) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107705) GEN_PVAR_148)). Qed.
Lemma lem4556265 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term108 _107705 A GEN_PVAR_148 t s f d) = (term108 _107705 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4556264 _107705 A GEN_PVAR_148) (@lem4556261 _107705 A t s f d)). Qed.
Lemma lem4556266 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4556265 _107705 A GEN_PVAR_148 t s f d) (@lem4556220 _107705 A f)). Qed.
Lemma lem4556267 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4556266 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4556268 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4556269 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4556268 _107705 A) (@lem4556267 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4556270 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term71 _107705 A t s d) = (term71 _107705 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4556269 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4556271 {_107705 A : Type'} : (@GSPEC (A -> _107705)) = (@GSPEC (A -> _107705)).
Proof. exact (eq_refl (@GSPEC (A -> _107705))). Qed.
Lemma lem4556272 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term112 _107705 A t s d) = (term112 _107705 A t s d).
Proof. exact (MK_COMB (@lem4556271 _107705 A) (@lem4556270 _107705 A t s d)). Qed.
Lemma lem4556273 {_107705 A : Type'} : (@HAS_SIZE (A -> _107705)) = (@HAS_SIZE (A -> _107705)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107705))). Qed.
Lemma lem4556274 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term113 _107705 A t s d) = (term113 _107705 A t s d).
Proof. exact (MK_COMB (@lem4556273 _107705 A) (@lem4556272 _107705 A t s d)). Qed.
Lemma lem4556275 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term114 _107705 A t s d n m) = (term114 _107705 A t s d n m).
Proof. exact (MK_COMB (@lem4556274 _107705 A t s d) (@lem4556216 n m)). Qed.
Lemma lem4556290 {_107705 A : Type'} (s : A -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term115 _107705 A s m t n) = (term115 _107705 A s m t n).
Proof. exact (eq_refl (term115 _107705 A s m t n)). Qed.
Lemma lem4556291 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term116 _107705 A t s d n m) = (term116 _107705 A t s d n m).
Proof. exact (MK_COMB (@lem4556290 _107705 A s m t n) (@lem4556275 _107705 A t s d n m)). Qed.
Lemma lem4556292 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term117 _107705 A t d n m) = (term117 _107705 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4556291 _107705 A t s d n m)). Qed.
Lemma lem4556293 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4556294 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term118 _107705 A t d n m) = (term118 _107705 A t d n m).
Proof. exact (MK_COMB (@lem4556293 A) (@lem4556292 _107705 A t d n m)). Qed.
Lemma lem4556295 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) : (term119 _107705 A t d n) = (term119 _107705 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4556294 _107705 A t d n m)). Qed.
Lemma lem4556296 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556297 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) : (term120 _107705 A t d n) = (term120 _107705 A t d n).
Proof. exact (MK_COMB (@lem4556296) (@lem4556295 _107705 A t d n)). Qed.
Lemma lem4556298 {_107705 A : Type'} (d : _107705) (n : nat) : (term121 _107705 A d n) = (term121 _107705 A d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4556297 _107705 A t d n)). Qed.
Lemma lem4556299 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556300 {_107705 A : Type'} (d : _107705) (n : nat) : (term122 _107705 A d n) = (term122 _107705 A d n).
Proof. exact (MK_COMB (@lem4556299 _107705) (@lem4556298 _107705 A d n)). Qed.
Lemma lem4556301 {_107705 A : Type'} (d : _107705) : (term123 _107705 A d) = (term123 _107705 A d).
Proof. exact (fun_ext (fun n : nat => @lem4556300 _107705 A d n)). Qed.
Lemma lem4556302 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556303 {_107705 A : Type'} (d : _107705) : (term124 _107705 A d) = (term124 _107705 A d).
Proof. exact (MK_COMB (@lem4556302) (@lem4556301 _107705 A d)). Qed.
Lemma lem4556304 {_107705 A : Type'} : (term125 _107705 A) = (term125 _107705 A).
Proof. exact (fun_ext (fun d : _107705 => @lem4556303 _107705 A d)). Qed.
Lemma lem4556305 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556306 {_107705 A : Type'} : (term11 _107705 A) = (term11 _107705 A).
Proof. exact (MK_COMB (@lem4556305 _107705) (@lem4556304 _107705 A)). Qed.
Lemma lem4556307 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556308 {_107705 A : Type'} : (term27 _107705 A) = (term27 _107705 A).
Proof. exact (MK_COMB (@lem4556307) (@lem4556306 _107705 A)). Qed.
Lemma lem4556309 {_107705 _107708 A B : Type'} : (term31 _107705 _107708 A B) = (term31 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556308 _107705 A) (@lem4556211 _107705 _107708 A B)). Qed.
Lemma lem4556314 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4556316 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term71 _107705 _107708 t s d) = (_54415 t s d).
Proof. exact (SYM (@lem4555819 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556317 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term71 _107705 _107708 t s d) = (_54415 t s d).
Proof. exact (@lem4556316 _107705 _107708 t s d _54415 h1). Qed.
Lemma lem4556318 {_107705 _107708 : Type'} : (@GSPEC (_107708 -> _107705)) = (@GSPEC (_107708 -> _107705)).
Proof. exact (eq_refl (@GSPEC (_107708 -> _107705))). Qed.
Lemma lem4556319 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term112 _107705 _107708 t s d) = (term126 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556318 _107705 _107708) (@lem4556317 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556320 {_107705 _107708 : Type'} : (@HAS_SIZE (_107708 -> _107705)) = (@HAS_SIZE (_107708 -> _107705)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> _107705))). Qed.
Lemma lem4556321 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term113 _107705 _107708 t s d) = (term127 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556320 _107705 _107708) (@lem4556319 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556322 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term114 _107705 _107708 t s d n m) = (term128 _107705 _107708 _54415 t s d n m).
Proof. exact (MK_COMB (@lem4556321 _107705 _107708 t s d _54415 h1) (@lem4556314 n m)). Qed.
Lemma lem4556337 {_107705 _107708 : Type'} (s : _107708 -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term115 _107705 _107708 s m t n) = (term115 _107705 _107708 s m t n).
Proof. exact (eq_refl (term115 _107705 _107708 s m t n)). Qed.
Lemma lem4556338 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term116 _107705 _107708 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (MK_COMB (@lem4556337 _107705 _107708 s m t n) (@lem4556322 _107705 _107708 t s d n m _54415 h1)). Qed.
Lemma lem4556339 {_107705 _107708 : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term117 _107705 _107708 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4556338 _107705 _107708 t s d n m _54415 h1)). Qed.
Lemma lem4556340 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556341 {_107705 _107708 : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term118 _107705 _107708 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4556340 _107708) (@lem4556339 _107705 _107708 t d n m _54415 h1)). Qed.
Lemma lem4556342 {_107705 _107708 : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term119 _107705 _107708 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4556341 _107705 _107708 t d n m _54415 h1)). Qed.
Lemma lem4556343 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556344 {_107705 _107708 : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term120 _107705 _107708 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4556343) (@lem4556342 _107705 _107708 t d n _54415 h1)). Qed.
Lemma lem4556345 {_107705 _107708 : Type'} (d : _107705) (n : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term121 _107705 _107708 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4556344 _107705 _107708 t d n _54415 h1)). Qed.
Lemma lem4556346 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556347 {_107705 _107708 : Type'} (d : _107705) (n : nat) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term122 _107705 _107708 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4556346 _107705) (@lem4556345 _107705 _107708 d n _54415 h1)). Qed.
Lemma lem4556348 {_107705 _107708 : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term123 _107705 _107708 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4556347 _107705 _107708 d n _54415 h1)). Qed.
Lemma lem4556349 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556350 {_107705 _107708 : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term124 _107705 _107708 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4556349) (@lem4556348 _107705 _107708 d _54415 h1)). Qed.
Lemma lem4556351 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term125 _107705 _107708) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4556350 _107705 _107708 d _54415 h1)). Qed.
Lemma lem4556352 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556353 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term11 _107705 _107708) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4556352 _107705) (@lem4556351 _107705 _107708 _54415 h1)). Qed.
Lemma lem4556354 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556355 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term27 _107705 _107708) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4556354) (@lem4556353 _107705 _107708 _54415 h1)). Qed.
Lemma lem4556356 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term33 _107705 _107708 A B) = (term141 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556355 _107705 _107708 _54415 h1) (@lem4556309 _107705 _107708 A B)). Qed.
Lemma lem4556377 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4556378 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4556377 A B s n)). Qed.
Lemma lem4556379 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556380 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4556379) (@lem4556378 A B s)). Qed.
Lemma lem4556381 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4556380 A B s)). Qed.
Lemma lem4556382 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4556383 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4556382 A B) (@lem4556381 A B)). Qed.
Lemma lem4556384 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556385 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4556384) (@lem4556383 A B)). Qed.
Lemma lem4556386 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term36 _107705 _107708 A B) = (term146 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556385 A B) (@lem4556356 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556407 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4556408 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4556407 _107708 A s n)). Qed.
Lemma lem4556409 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556410 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4556409) (@lem4556408 _107708 A s)). Qed.
Lemma lem4556411 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4556410 _107708 A s)). Qed.
Lemma lem4556412 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4556413 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4556412 _107708 A) (@lem4556411 _107708 A)). Qed.
Lemma lem4556414 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556415 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4556414) (@lem4556413 _107708 A)). Qed.
Lemma lem4556416 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term39 _107705 _107708 A B) = (term151 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556415 _107708 A) (@lem4556386 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556437 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4556438 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4556437 _107705 A s n)). Qed.
Lemma lem4556439 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556440 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4556439) (@lem4556438 _107705 A s)). Qed.
Lemma lem4556441 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4556440 _107705 A s)). Qed.
Lemma lem4556442 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4556443 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4556442 _107705 A) (@lem4556441 _107705 A)). Qed.
Lemma lem4556444 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556445 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4556444) (@lem4556443 _107705 A)). Qed.
Lemma lem4556446 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term41 _107705 _107708 A B) = (term152 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556445 _107705 A) (@lem4556416 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556467 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4556468 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4556467 _107708 B s n)). Qed.
Lemma lem4556469 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556470 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4556469) (@lem4556468 _107708 B s)). Qed.
Lemma lem4556471 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4556470 _107708 B s)). Qed.
Lemma lem4556472 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4556473 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4556472 _107708 B) (@lem4556471 _107708 B)). Qed.
Lemma lem4556474 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556475 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4556474) (@lem4556473 _107708 B)). Qed.
Lemma lem4556476 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term43 _107705 _107708 A B) = (term153 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556475 _107708 B) (@lem4556446 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556497 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4556498 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4556497 _107705 _107708 s n)). Qed.
Lemma lem4556499 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556500 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4556499) (@lem4556498 _107705 _107708 s)). Qed.
Lemma lem4556501 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4556500 _107705 _107708 s)). Qed.
Lemma lem4556502 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4556503 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4556502 _107705 _107708) (@lem4556501 _107705 _107708)). Qed.
Lemma lem4556504 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556505 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4556504) (@lem4556503 _107705 _107708)). Qed.
Lemma lem4556506 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term45 _107705 _107708 A B) = (term154 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556505 _107705 _107708) (@lem4556476 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556527 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4556528 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4556527 _107705 B s n)). Qed.
Lemma lem4556529 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556530 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4556529) (@lem4556528 _107705 B s)). Qed.
Lemma lem4556531 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4556530 _107705 B s)). Qed.
Lemma lem4556532 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4556533 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4556532 _107705 B) (@lem4556531 _107705 B)). Qed.
Lemma lem4556534 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556535 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4556534) (@lem4556533 _107705 B)). Qed.
Lemma lem4556536 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term47 _107705 _107708 A B) = (term155 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556535 _107705 B) (@lem4556506 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556557 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4556558 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4556557 B s n)). Qed.
Lemma lem4556559 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556560 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4556559) (@lem4556558 B s)). Qed.
Lemma lem4556561 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4556560 B s)). Qed.
Lemma lem4556562 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4556563 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4556562 B) (@lem4556561 B)). Qed.
Lemma lem4556564 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556565 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4556564) (@lem4556563 B)). Qed.
Lemma lem4556566 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term50 _107705 _107708 A B) = (term160 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556565 B) (@lem4556536 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556587 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4556588 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4556587 A s n)). Qed.
Lemma lem4556589 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556590 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4556589) (@lem4556588 A s)). Qed.
Lemma lem4556591 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4556590 A s)). Qed.
Lemma lem4556592 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4556593 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4556592 A) (@lem4556591 A)). Qed.
Lemma lem4556594 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556595 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4556594) (@lem4556593 A)). Qed.
Lemma lem4556596 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term52 _107705 _107708 A B) = (term161 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556595 A) (@lem4556566 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556617 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4556618 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4556617 _107708 s n)). Qed.
Lemma lem4556619 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556620 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4556619) (@lem4556618 _107708 s)). Qed.
Lemma lem4556621 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4556620 _107708 s)). Qed.
Lemma lem4556622 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556623 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4556622 _107708) (@lem4556621 _107708)). Qed.
Lemma lem4556624 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556625 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4556624) (@lem4556623 _107708)). Qed.
Lemma lem4556626 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term54 _107705 _107708 A B) = (term162 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556625 _107708) (@lem4556596 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556647 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4556648 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4556647 _107705 s n)). Qed.
Lemma lem4556649 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556650 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4556649) (@lem4556648 _107705 s)). Qed.
Lemma lem4556651 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4556650 _107705 s)). Qed.
Lemma lem4556652 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556653 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4556652 _107705) (@lem4556651 _107705)). Qed.
Lemma lem4556654 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556655 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4556654) (@lem4556653 _107705)). Qed.
Lemma lem4556656 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term56 _107705 _107708 A B) = (term163 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556655 _107705) (@lem4556626 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556658 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term71 _107705 _107708 t s d) = (_54415 t s d).
Proof. exact (SYM (@lem4555819 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556659 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term71 _107705 _107708 t s d) = (_54415 t s d).
Proof. exact (@lem4556658 _107705 _107708 t s d _54415 h1). Qed.
Lemma lem4556660 {_107705 _107708 : Type'} : (@GSPEC (_107708 -> _107705)) = (@GSPEC (_107708 -> _107705)).
Proof. exact (eq_refl (@GSPEC (_107708 -> _107705))). Qed.
Lemma lem4556661 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term112 _107705 _107708 t s d) = (term126 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556660 _107705 _107708) (@lem4556659 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556662 {_107705 _107708 : Type'} : (@FINITE (_107708 -> _107705)) = (@FINITE (_107708 -> _107705)).
Proof. exact (eq_refl (@FINITE (_107708 -> _107705))). Qed.
Lemma lem4556663 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term164 _107705 _107708 t s d) = (term165 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556662 _107705 _107708) (@lem4556661 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556674 {_107705 _107708 : Type'} (s : _107708 -> Prop) (t : _107705 -> Prop) : (term166 _107705 _107708 s t) = (term166 _107705 _107708 s t).
Proof. exact (eq_refl (term166 _107705 _107708 s t)). Qed.
Lemma lem4556675 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term167 _107705 _107708 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556674 _107705 _107708 s t) (@lem4556663 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556676 {_107705 _107708 : Type'} (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term169 _107705 _107708 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4556675 _107705 _107708 t s d _54415 h1)). Qed.
Lemma lem4556677 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556678 {_107705 _107708 : Type'} (s : _107708 -> Prop) (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term171 _107705 _107708 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4556677 _107705) (@lem4556676 _107705 _107708 s d _54415 h1)). Qed.
Lemma lem4556679 {_107705 _107708 : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term173 _107705 _107708 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4556678 _107705 _107708 s d _54415 h1)). Qed.
Lemma lem4556680 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556681 {_107705 _107708 : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term8 _107705 _107708 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4556680 _107708) (@lem4556679 _107705 _107708 d _54415 h1)). Qed.
Lemma lem4556682 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4556683 {_107705 _107708 : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term10 _107705 _107708 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4556682) (@lem4556681 _107705 _107708 d _54415 h1)). Qed.
Lemma lem4556684 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556685 {_107705 _107708 : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term57 _107705 _107708 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4556684) (@lem4556683 _107705 _107708 d _54415 h1)). Qed.
Lemma lem4556686 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term58 _107705 _107708 A B d) = (term178 _107705 _107708 A B d _54415).
Proof. exact (MK_COMB (@lem4556685 _107705 _107708 d _54415 h1) (@lem4556656 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556687 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term60 _107705 _107708 A B) = (term179 _107705 _107708 A B _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4556686 _107705 _107708 A B d _54415 h1)). Qed.
Lemma lem4556688 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556689 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (h1 : _54415 = (term63 _107705 _107708)) : (term62 _107705 _107708 A B) = (term180 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556688 _107705) (@lem4556687 _107705 _107708 A B _54415 h1)). Qed.
Lemma lem4556690 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : term181 _107705 _107708 A B _54415.
Proof. exact (fun h0 : _54415 = (term63 _107705 _107708) => @lem4556689 _107705 _107708 A B _54415 h0). Qed.
Lemma lem4556691 {_107705 _107708 A B : Type'} : term182 _107705 _107708 A B.
Proof. exact (fun _54415 : type656 _107705 _107708 => @lem4556690 _107705 _107708 A B _54415). Qed.
Lemma lem4556693 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term183 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4556694 {_107705 _107708 : Type'} (P : Prop) (c : type656 _107705 _107708) (Q : type147 _107705 _107708) : term184 _107705 _107708 P c Q.
Proof. exact (@lem4556693 (type656 _107705 _107708) P c Q). Qed.
Lemma lem4556695 {_107705 _107708 A B : Type'} : term185 _107705 _107708 A B.
Proof. exact (@lem4556694 _107705 _107708 (term62 _107705 _107708 A B) (term63 _107705 _107708) (term186 _107705 _107708 A B)). Qed.
Lemma lem4556696 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : (term187 _107705 _107708 A B _54415) = (term180 _107705 _107708 A B _54415).
Proof. exact (eq_refl (term187 _107705 _107708 A B _54415)). Qed.
Lemma lem4556697 {_107705 _107708 A B : Type'} : (term188 _107705 _107708 A B) = (term188 _107705 _107708 A B).
Proof. exact (eq_refl (term188 _107705 _107708 A B)). Qed.
Lemma lem4556698 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : ((term62 _107705 _107708 A B) = (term187 _107705 _107708 A B _54415)) = ((term62 _107705 _107708 A B) = (term180 _107705 _107708 A B _54415)).
Proof. exact (MK_COMB (@lem4556697 _107705 _107708 A B) (@lem4556696 _107705 _107708 A B _54415)). Qed.
Lemma lem4556699 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term189 _107705 _107708 _54415) = (term189 _107705 _107708 _54415).
Proof. exact (eq_refl (term189 _107705 _107708 _54415)). Qed.
Lemma lem4556700 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : (term190 _107705 _107708 A B _54415) = (term181 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556699 _107705 _107708 _54415) (@lem4556698 _107705 _107708 A B _54415)). Qed.
Lemma lem4556701 {_107705 _107708 A B : Type'} : (term191 _107705 _107708 A B) = (term192 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4556700 _107705 _107708 A B _54415)). Qed.
Lemma lem4556702 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4556703 {_107705 _107708 A B : Type'} : (term193 _107705 _107708 A B) = (term182 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556702 _107705 _107708) (@lem4556701 _107705 _107708 A B)). Qed.
Lemma lem4556704 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556705 {_107705 _107708 A B : Type'} : (term194 _107705 _107708 A B) = (term195 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556704) (@lem4556703 _107705 _107708 A B)). Qed.
Lemma lem4556706 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : (term187 _107705 _107708 A B _54415) = (term180 _107705 _107708 A B _54415).
Proof. exact (eq_refl (term187 _107705 _107708 A B _54415)). Qed.
Lemma lem4556707 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term189 _107705 _107708 _54415) = (term189 _107705 _107708 _54415).
Proof. exact (eq_refl (term189 _107705 _107708 _54415)). Qed.
Lemma lem4556708 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : (term196 _107705 _107708 A B _54415) = (term197 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556707 _107705 _107708 _54415) (@lem4556706 _107705 _107708 A B _54415)). Qed.
Lemma lem4556709 {_107705 _107708 A B : Type'} : (term198 _107705 _107708 A B) = (term199 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4556708 _107705 _107708 A B _54415)). Qed.
Lemma lem4556710 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4556711 {_107705 _107708 A B : Type'} : (term200 _107705 _107708 A B) = (term201 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556710 _107705 _107708) (@lem4556709 _107705 _107708 A B)). Qed.
Lemma lem4556712 {_107705 _107708 A B : Type'} : (term188 _107705 _107708 A B) = (term188 _107705 _107708 A B).
Proof. exact (eq_refl (term188 _107705 _107708 A B)). Qed.
Lemma lem4556713 {_107705 _107708 A B : Type'} : ((term62 _107705 _107708 A B) = (term200 _107705 _107708 A B)) = ((term62 _107705 _107708 A B) = (term201 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4556712 _107705 _107708 A B) (@lem4556711 _107705 _107708 A B)). Qed.
Lemma lem4556714 {_107705 _107708 A B : Type'} : (term185 _107705 _107708 A B) = (term202 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556705 _107705 _107708 A B) (@lem4556713 _107705 _107708 A B)). Qed.
Lemma lem4556715 {_107705 _107708 A B : Type'} : term202 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4556714 _107705 _107708 A B) (@lem4556695 _107705 _107708 A B)). Qed.
Lemma lem4556716 {_107705 _107708 A B : Type'} : (term62 _107705 _107708 A B) = (term201 _107705 _107708 A B).
Proof. exact (@lem4556715 _107705 _107708 A B (@lem4556691 _107705 _107708 A B)). Qed.
Lemma lem4556718 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4556719 {_107705 _107708 : Type'} (s : type656 _107705 _107708) (t : type656 _107705 _107708) : (s = (term205 _107705 _107708 t)) = (term206 _107705 _107708 s t).
Proof. exact (@lem4556718 (type859 _107705 _107708) (_107705 -> Prop) s t). Qed.
Lemma lem4556720 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (_54415 = (term207 _107705 _107708)) = (term208 _107705 _107708 _54415).
Proof. exact (@lem4556719 _107705 _107708 _54415 (term63 _107705 _107708)). Qed.
Lemma lem4556721 {_107705 _107708 : Type'} (t : _107705 -> Prop) : (term64 _107705 _107708 t) = (term65 _107705 _107708 t).
Proof. exact (eq_refl (term64 _107705 _107708 t)). Qed.
Lemma lem4556722 {_107705 _107708 : Type'} : (term207 _107705 _107708) = (term63 _107705 _107708).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4556721 _107705 _107708 t)). Qed.
Lemma lem4556723 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (@eq ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415) = (@eq ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415).
Proof. exact (eq_refl (@eq ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415)). Qed.
Lemma lem4556724 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (_54415 = (term207 _107705 _107708)) = (_54415 = (term63 _107705 _107708)).
Proof. exact (MK_COMB (@lem4556723 _107705 _107708 _54415) (@lem4556722 _107705 _107708)). Qed.
Lemma lem4556725 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4556726 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term209 _107705 _107708 _54415) = (term210 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4556725) (@lem4556724 _107705 _107708 _54415)). Qed.
Lemma lem4556727 {_107705 _107708 : Type'} (t : _107705 -> Prop) : (term64 _107705 _107708 t) = (term65 _107705 _107708 t).
Proof. exact (eq_refl (term64 _107705 _107708 t)). Qed.
Lemma lem4556728 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term66 _107705 _107708 _54415 t) = (term66 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term66 _107705 _107708 _54415 t)). Qed.
Lemma lem4556729 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((_54415 t) = (term64 _107705 _107708 t)) = ((_54415 t) = (term65 _107705 _107708 t)).
Proof. exact (MK_COMB (@lem4556728 _107705 _107708 _54415 t) (@lem4556727 _107705 _107708 t)). Qed.
Lemma lem4556730 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term211 _107705 _107708 _54415) = (term212 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4556729 _107705 _107708 _54415 t)). Qed.
Lemma lem4556731 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556732 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term208 _107705 _107708 _54415) = (term213 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4556731 _107705) (@lem4556730 _107705 _107708 _54415)). Qed.
Lemma lem4556733 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : ((_54415 = (term207 _107705 _107708)) = (term208 _107705 _107708 _54415)) = ((_54415 = (term63 _107705 _107708)) = (term213 _107705 _107708 _54415)).
Proof. exact (MK_COMB (@lem4556726 _107705 _107708 _54415) (@lem4556732 _107705 _107708 _54415)). Qed.
Lemma lem4556734 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (_54415 = (term63 _107705 _107708)) = (term213 _107705 _107708 _54415).
Proof. exact (EQ_MP (@lem4556733 _107705 _107708 _54415) (@lem4556720 _107705 _107708 _54415)). Qed.
Lemma lem4556736 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4556737 {_107705 _107708 : Type'} (s : type859 _107705 _107708) (t : type859 _107705 _107708) : (s = (term214 _107705 _107708 t)) = (term215 _107705 _107708 s t).
Proof. exact (@lem4556736 (type1372 _107705 _107708) (_107708 -> Prop) s t). Qed.
Lemma lem4556738 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((_54415 t) = (term216 _107705 _107708 t)) = (term217 _107705 _107708 _54415 t).
Proof. exact (@lem4556737 _107705 _107708 (_54415 t) (term65 _107705 _107708 t)). Qed.
Lemma lem4556739 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) : (term67 _107705 _107708 t s) = (term68 _107705 _107708 t s).
Proof. exact (eq_refl (term67 _107705 _107708 t s)). Qed.
Lemma lem4556740 {_107705 _107708 : Type'} (t : _107705 -> Prop) : (term216 _107705 _107708 t) = (term65 _107705 _107708 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4556739 _107705 _107708 t s)). Qed.
Lemma lem4556741 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term66 _107705 _107708 _54415 t) = (term66 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term66 _107705 _107708 _54415 t)). Qed.
Lemma lem4556742 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((_54415 t) = (term216 _107705 _107708 t)) = ((_54415 t) = (term65 _107705 _107708 t)).
Proof. exact (MK_COMB (@lem4556741 _107705 _107708 _54415 t) (@lem4556740 _107705 _107708 t)). Qed.
Lemma lem4556743 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4556744 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term218 _107705 _107708 _54415 t) = (term219 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4556743) (@lem4556742 _107705 _107708 _54415 t)). Qed.
Lemma lem4556745 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) : (term67 _107705 _107708 t s) = (term68 _107705 _107708 t s).
Proof. exact (eq_refl (term67 _107705 _107708 t s)). Qed.
Lemma lem4556746 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term69 _107705 _107708 _54415 t s) = (term69 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term69 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556747 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((_54415 t s) = (term67 _107705 _107708 t s)) = ((_54415 t s) = (term68 _107705 _107708 t s)).
Proof. exact (MK_COMB (@lem4556746 _107705 _107708 _54415 t s) (@lem4556745 _107705 _107708 t s)). Qed.
Lemma lem4556748 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term220 _107705 _107708 _54415 t) = (term221 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4556747 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556749 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556750 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term217 _107705 _107708 _54415 t) = (term222 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4556749 _107708) (@lem4556748 _107705 _107708 _54415 t)). Qed.
Lemma lem4556751 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (((_54415 t) = (term216 _107705 _107708 t)) = (term217 _107705 _107708 _54415 t)) = (((_54415 t) = (term65 _107705 _107708 t)) = (term222 _107705 _107708 _54415 t)).
Proof. exact (MK_COMB (@lem4556744 _107705 _107708 _54415 t) (@lem4556750 _107705 _107708 _54415 t)). Qed.
Lemma lem4556752 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((_54415 t) = (term65 _107705 _107708 t)) = (term222 _107705 _107708 _54415 t).
Proof. exact (EQ_MP (@lem4556751 _107705 _107708 _54415 t) (@lem4556738 _107705 _107708 _54415 t)). Qed.
Lemma lem4556754 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4556755 {_107705 _107708 : Type'} (s : type1372 _107705 _107708) (t : type1372 _107705 _107708) : (s = (term223 _107705 _107708 t)) = (term224 _107705 _107708 s t).
Proof. exact (@lem4556754 (type805 _107705 _107708) _107705 s t). Qed.
Lemma lem4556756 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((_54415 t s) = (term225 _107705 _107708 t s)) = (term226 _107705 _107708 _54415 t s).
Proof. exact (@lem4556755 _107705 _107708 (_54415 t s) (term68 _107705 _107708 t s)). Qed.
Lemma lem4556757 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term70 _107705 _107708 t s d) = (term71 _107705 _107708 t s d).
Proof. exact (eq_refl (term70 _107705 _107708 t s d)). Qed.
Lemma lem4556758 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) : (term225 _107705 _107708 t s) = (term68 _107705 _107708 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4556757 _107705 _107708 t s d)). Qed.
Lemma lem4556759 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term69 _107705 _107708 _54415 t s) = (term69 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term69 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556760 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((_54415 t s) = (term225 _107705 _107708 t s)) = ((_54415 t s) = (term68 _107705 _107708 t s)).
Proof. exact (MK_COMB (@lem4556759 _107705 _107708 _54415 t s) (@lem4556758 _107705 _107708 t s)). Qed.
Lemma lem4556761 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4556762 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term227 _107705 _107708 _54415 t s) = (term228 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4556761) (@lem4556760 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556763 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term70 _107705 _107708 t s d) = (term71 _107705 _107708 t s d).
Proof. exact (eq_refl (term70 _107705 _107708 t s d)). Qed.
Lemma lem4556764 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term72 _107705 _107708 _54415 t s d) = (term72 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term72 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556765 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d) = (term70 _107705 _107708 t s d)) = ((_54415 t s d) = (term71 _107705 _107708 t s d)).
Proof. exact (MK_COMB (@lem4556764 _107705 _107708 _54415 t s d) (@lem4556763 _107705 _107708 t s d)). Qed.
Lemma lem4556766 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term229 _107705 _107708 _54415 t s) = (term230 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4556765 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556767 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556768 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term226 _107705 _107708 _54415 t s) = (term231 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4556767 _107705) (@lem4556766 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556769 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (((_54415 t s) = (term225 _107705 _107708 t s)) = (term226 _107705 _107708 _54415 t s)) = (((_54415 t s) = (term68 _107705 _107708 t s)) = (term231 _107705 _107708 _54415 t s)).
Proof. exact (MK_COMB (@lem4556762 _107705 _107708 _54415 t s) (@lem4556768 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556770 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((_54415 t s) = (term68 _107705 _107708 t s)) = (term231 _107705 _107708 _54415 t s).
Proof. exact (EQ_MP (@lem4556769 _107705 _107708 _54415 t s) (@lem4556756 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556772 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4556773 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (t : type805 _107705 _107708) : (s = (term232 _107705 _107708 t)) = (term233 _107705 _107708 s t).
Proof. exact (@lem4556772 Prop (_107708 -> _107705) s t). Qed.
Lemma lem4556774 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d) = (term234 _107705 _107708 t s d)) = (term235 _107705 _107708 _54415 t s d).
Proof. exact (@lem4556773 _107705 _107708 (_54415 t s d) (term71 _107705 _107708 t s d)). Qed.
Lemma lem4556775 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term236 _107705 _107708 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term236 _107705 _107708 t s d GEN_PVAR_150)). Qed.
Lemma lem4556776 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term234 _107705 _107708 t s d) = (term71 _107705 _107708 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4556775 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4556777 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term72 _107705 _107708 _54415 t s d) = (term72 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term72 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556778 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d) = (term234 _107705 _107708 t s d)) = ((_54415 t s d) = (term71 _107705 _107708 t s d)).
Proof. exact (MK_COMB (@lem4556777 _107705 _107708 _54415 t s d) (@lem4556776 _107705 _107708 t s d)). Qed.
Lemma lem4556779 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4556780 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term237 _107705 _107708 _54415 t s d) = (term238 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556779) (@lem4556778 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556781 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term236 _107705 _107708 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term236 _107705 _107708 t s d GEN_PVAR_150)). Qed.
Lemma lem4556782 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4556783 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term236 _107705 _107708 t s d GEN_PVAR_150)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4556782 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4556781 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4556784 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term240 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4556783 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4556785 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4556786 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term235 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556785 _107705 _107708) (@lem4556784 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556787 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (((_54415 t s d) = (term234 _107705 _107708 t s d)) = (term235 _107705 _107708 _54415 t s d)) = (((_54415 t s d) = (term71 _107705 _107708 t s d)) = (term242 _107705 _107708 _54415 t s d)).
Proof. exact (MK_COMB (@lem4556780 _107705 _107708 _54415 t s d) (@lem4556786 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556788 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d) = (term71 _107705 _107708 t s d)) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (EQ_MP (@lem4556787 _107705 _107708 _54415 t s d) (@lem4556774 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556789 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (eq_refl ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d))). Qed.
Lemma lem4556790 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4556789 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4556791 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4556792 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4556791 _107705 _107708) (@lem4556790 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556793 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d) = (term71 _107705 _107708 t s d)) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4556788 _107705 _107708 _54415 t s d) (@lem4556792 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556794 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term230 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4556793 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4556795 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4556796 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term231 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4556795 _107705) (@lem4556794 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556797 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((_54415 t s) = (term68 _107705 _107708 t s)) = (term244 _107705 _107708 _54415 t s).
Proof. exact (TRANS (@lem4556770 _107705 _107708 _54415 t s) (@lem4556796 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556798 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term221 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4556797 _107705 _107708 _54415 t s)). Qed.
Lemma lem4556799 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4556800 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term222 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4556799 _107708) (@lem4556798 _107705 _107708 _54415 t)). Qed.
Lemma lem4556801 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((_54415 t) = (term65 _107705 _107708 t)) = (term246 _107705 _107708 _54415 t).
Proof. exact (TRANS (@lem4556752 _107705 _107708 _54415 t) (@lem4556800 _107705 _107708 _54415 t)). Qed.
Lemma lem4556802 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term212 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4556801 _107705 _107708 _54415 t)). Qed.
Lemma lem4556803 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4556804 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term213 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4556803 _107705) (@lem4556802 _107705 _107708 _54415)). Qed.
Lemma lem4556805 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (_54415 = (term63 _107705 _107708)) = (term248 _107705 _107708 _54415).
Proof. exact (TRANS (@lem4556734 _107705 _107708 _54415) (@lem4556804 _107705 _107708 _54415)). Qed.
Lemma lem4556806 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4556807 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term189 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4556806) (@lem4556805 _107705 _107708 _54415)). Qed.
Lemma lem4556808 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : (term180 _107705 _107708 A B _54415) = (term180 _107705 _107708 A B _54415).
Proof. exact (eq_refl (term180 _107705 _107708 A B _54415)). Qed.
Lemma lem4556809 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) : (term197 _107705 _107708 A B _54415) = (term250 _107705 _107708 A B _54415).
Proof. exact (MK_COMB (@lem4556807 _107705 _107708 _54415) (@lem4556808 _107705 _107708 A B _54415)). Qed.
Lemma lem4556810 {_107705 _107708 A B : Type'} : (term199 _107705 _107708 A B) = (term251 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4556809 _107705 _107708 A B _54415)). Qed.
Lemma lem4556811 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4556812 {_107705 _107708 A B : Type'} : (term201 _107705 _107708 A B) = (term252 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4556811 _107705 _107708) (@lem4556810 _107705 _107708 A B)). Qed.
Lemma lem4556813 {_107705 _107708 A B : Type'} : (term188 _107705 _107708 A B) = (term188 _107705 _107708 A B).
Proof. exact (eq_refl (term188 _107705 _107708 A B)). Qed.
Lemma lem4556814 {_107705 _107708 A B : Type'} : ((term62 _107705 _107708 A B) = (term201 _107705 _107708 A B)) = ((term62 _107705 _107708 A B) = (term252 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4556813 _107705 _107708 A B) (@lem4556812 _107705 _107708 A B)). Qed.
Lemma lem4556815 {_107705 _107708 A B : Type'} : (term62 _107705 _107708 A B) = (term252 _107705 _107708 A B).
Proof. exact (EQ_MP (@lem4556814 _107705 _107708 A B) (@lem4556716 _107705 _107708 A B)). Qed.
Lemma lem4556816 {_107705 A : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : _54416 = (term63 _107705 A).
Proof. exact (h1). Qed.
Lemma lem4556817 {_107705 : Type'} (t : _107705 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4556818 {_107705 A : Type'} (t : _107705 -> Prop) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (_54416 t) = (term64 _107705 A t).
Proof. exact (MK_COMB (@lem4556816 _107705 A _54416 h1) (@lem4556817 _107705 t)). Qed.
Lemma lem4556819 {_107705 A : Type'} (t : _107705 -> Prop) : (term64 _107705 A t) = (term65 _107705 A t).
Proof. exact (eq_refl (term64 _107705 A t)). Qed.
Lemma lem4556820 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term66 _107705 A _54416 t) = (term66 _107705 A _54416 t).
Proof. exact (eq_refl (term66 _107705 A _54416 t)). Qed.
Lemma lem4556821 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((_54416 t) = (term64 _107705 A t)) = ((_54416 t) = (term65 _107705 A t)).
Proof. exact (MK_COMB (@lem4556820 _107705 A _54416 t) (@lem4556819 _107705 A t)). Qed.
Lemma lem4556822 {_107705 A : Type'} (t : _107705 -> Prop) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (_54416 t) = (term65 _107705 A t).
Proof. exact (EQ_MP (@lem4556821 _107705 A _54416 t) (@lem4556818 _107705 A t _54416 h1)). Qed.
Lemma lem4556823 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4556824 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (_54416 t s) = (term67 _107705 A t s).
Proof. exact (MK_COMB (@lem4556822 _107705 A t _54416 h1) (@lem4556823 A s)). Qed.
Lemma lem4556825 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) : (term67 _107705 A t s) = (term68 _107705 A t s).
Proof. exact (eq_refl (term67 _107705 A t s)). Qed.
Lemma lem4556826 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term69 _107705 A _54416 t s) = (term69 _107705 A _54416 t s).
Proof. exact (eq_refl (term69 _107705 A _54416 t s)). Qed.
Lemma lem4556827 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((_54416 t s) = (term67 _107705 A t s)) = ((_54416 t s) = (term68 _107705 A t s)).
Proof. exact (MK_COMB (@lem4556826 _107705 A _54416 t s) (@lem4556825 _107705 A t s)). Qed.
Lemma lem4556828 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (_54416 t s) = (term68 _107705 A t s).
Proof. exact (EQ_MP (@lem4556827 _107705 A _54416 t s) (@lem4556824 _107705 A t s _54416 h1)). Qed.
Lemma lem4556829 {_107705 : Type'} (d : _107705) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4556830 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (_54416 t s d) = (term70 _107705 A t s d).
Proof. exact (MK_COMB (@lem4556828 _107705 A t s _54416 h1) (@lem4556829 _107705 d)). Qed.
Lemma lem4556831 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term70 _107705 A t s d) = (term71 _107705 A t s d).
Proof. exact (eq_refl (term70 _107705 A t s d)). Qed.
Lemma lem4556832 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term72 _107705 A _54416 t s d) = (term72 _107705 A _54416 t s d).
Proof. exact (eq_refl (term72 _107705 A _54416 t s d)). Qed.
Lemma lem4556833 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d) = (term70 _107705 A t s d)) = ((_54416 t s d) = (term71 _107705 A t s d)).
Proof. exact (MK_COMB (@lem4556832 _107705 A _54416 t s d) (@lem4556831 _107705 A t s d)). Qed.
Lemma lem4556834 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (_54416 t s d) = (term71 _107705 A t s d).
Proof. exact (EQ_MP (@lem4556833 _107705 A _54416 t s d) (@lem4556830 _107705 A t s d _54416 h1)). Qed.
Lemma lem4556840 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4556844 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4556861 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term73 A B s f x d) = (term73 A B s f x d).
Proof. exact (eq_refl (term73 A B s f x d)). Qed.
Lemma lem4556862 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term74 A B s f d) = (term74 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4556861 A B s f x d)). Qed.
Lemma lem4556863 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4556864 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term75 A B s f d) = (term75 A B s f d).
Proof. exact (MK_COMB (@lem4556863 A) (@lem4556862 A B s f d)). Qed.
Lemma lem4556879 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term76 A B s f x t) = (term76 A B s f x t).
Proof. exact (eq_refl (term76 A B s f x t)). Qed.
Lemma lem4556880 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term77 A B s f t) = (term77 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4556879 A B s f x t)). Qed.
Lemma lem4556881 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4556882 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term78 A B s f t) = (term78 A B s f t).
Proof. exact (MK_COMB (@lem4556881 A) (@lem4556880 A B s f t)). Qed.
Lemma lem4556883 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4556884 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term79 A B s f t) = (term79 A B s f t).
Proof. exact (MK_COMB (@lem4556883) (@lem4556882 A B s f t)). Qed.
Lemma lem4556885 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term80 A B t s f d) = (term80 A B t s f d).
Proof. exact (MK_COMB (@lem4556884 A B s f t) (@lem4556864 A B s f d)). Qed.
Lemma lem4556888 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4556889 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term81 A B GEN_PVAR_148 t s f d) = (term81 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4556888 A B GEN_PVAR_148) (@lem4556885 A B t s f d)). Qed.
Lemma lem4556890 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4556889 A B GEN_PVAR_148 t s f d) (@lem4556844 A B f)). Qed.
Lemma lem4556891 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4556890 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4556892 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4556893 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4556892 A B) (@lem4556891 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4556894 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term85 A B t s d) = (term85 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4556893 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4556895 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4556896 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term86 A B t s d) = (term86 A B t s d).
Proof. exact (MK_COMB (@lem4556895 A B) (@lem4556894 A B t s d)). Qed.
Lemma lem4556897 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4556898 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term87 A B t s d) = (term87 A B t s d).
Proof. exact (MK_COMB (@lem4556897 A B) (@lem4556896 A B t s d)). Qed.
Lemma lem4556899 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term88 A B t s d n m) = (term88 A B t s d n m).
Proof. exact (MK_COMB (@lem4556898 A B t s d) (@lem4556840 n m)). Qed.
Lemma lem4556914 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 A B s m t n) = (term89 A B s m t n).
Proof. exact (eq_refl (term89 A B s m t n)). Qed.
Lemma lem4556915 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term90 A B t s d n m) = (term90 A B t s d n m).
Proof. exact (MK_COMB (@lem4556914 A B s m t n) (@lem4556899 A B t s d n m)). Qed.
Lemma lem4556916 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 A B t d n m) = (term91 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4556915 A B t s d n m)). Qed.
Lemma lem4556917 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4556918 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 A B t d n m) = (term92 A B t d n m).
Proof. exact (MK_COMB (@lem4556917 A) (@lem4556916 A B t d n m)). Qed.
Lemma lem4556919 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 A B t d n) = (term93 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4556918 A B t d n m)). Qed.
Lemma lem4556920 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556921 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 A B t d n) = (term94 A B t d n).
Proof. exact (MK_COMB (@lem4556920) (@lem4556919 A B t d n)). Qed.
Lemma lem4556922 {A B : Type'} (d : B) (n : nat) : (term95 A B d n) = (term95 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4556921 A B t d n)). Qed.
Lemma lem4556923 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4556924 {A B : Type'} (d : B) (n : nat) : (term96 A B d n) = (term96 A B d n).
Proof. exact (MK_COMB (@lem4556923 B) (@lem4556922 A B d n)). Qed.
Lemma lem4556925 {A B : Type'} (d : B) : (term97 A B d) = (term97 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4556924 A B d n)). Qed.
Lemma lem4556926 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4556927 {A B : Type'} (d : B) : (term98 A B d) = (term98 A B d).
Proof. exact (MK_COMB (@lem4556926) (@lem4556925 A B d)). Qed.
Lemma lem4556928 {A B : Type'} : (term99 A B) = (term99 A B).
Proof. exact (fun_ext (fun d : B => @lem4556927 A B d)). Qed.
Lemma lem4556929 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4556930 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4556929 B) (@lem4556928 A B)). Qed.
Lemma lem4556931 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4556932 {A B : Type'} : (term21 A B) = (term21 A B).
Proof. exact (MK_COMB (@lem4556931) (@lem4556930 A B)). Qed.
Lemma lem4556937 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4556941 {_107708 B : Type'} (f : _107708 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4556958 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (d : B) : (term73 _107708 B s f x d) = (term73 _107708 B s f x d).
Proof. exact (eq_refl (term73 _107708 B s f x d)). Qed.
Lemma lem4556959 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term74 _107708 B s f d) = (term74 _107708 B s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4556958 _107708 B s f x d)). Qed.
Lemma lem4556960 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4556961 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term75 _107708 B s f d) = (term75 _107708 B s f d).
Proof. exact (MK_COMB (@lem4556960 _107708) (@lem4556959 _107708 B s f d)). Qed.
Lemma lem4556976 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (t : B -> Prop) : (term76 _107708 B s f x t) = (term76 _107708 B s f x t).
Proof. exact (eq_refl (term76 _107708 B s f x t)). Qed.
Lemma lem4556977 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term77 _107708 B s f t) = (term77 _107708 B s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4556976 _107708 B s f x t)). Qed.
Lemma lem4556978 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4556979 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term78 _107708 B s f t) = (term78 _107708 B s f t).
Proof. exact (MK_COMB (@lem4556978 _107708) (@lem4556977 _107708 B s f t)). Qed.
Lemma lem4556980 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4556981 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term79 _107708 B s f t) = (term79 _107708 B s f t).
Proof. exact (MK_COMB (@lem4556980) (@lem4556979 _107708 B s f t)). Qed.
Lemma lem4556982 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term80 _107708 B t s f d) = (term80 _107708 B t s f d).
Proof. exact (MK_COMB (@lem4556981 _107708 B s f t) (@lem4556961 _107708 B s f d)). Qed.
Lemma lem4556985 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) : (@SETSPEC (_107708 -> B) GEN_PVAR_148) = (@SETSPEC (_107708 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107708 -> B) GEN_PVAR_148)). Qed.
Lemma lem4556986 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term81 _107708 B GEN_PVAR_148 t s f d) = (term81 _107708 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4556985 _107708 B GEN_PVAR_148) (@lem4556982 _107708 B t s f d)). Qed.
Lemma lem4556987 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4556986 _107708 B GEN_PVAR_148 t s f d) (@lem4556941 _107708 B f)). Qed.
Lemma lem4556988 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4556987 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4556989 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4556990 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4556989 _107708 B) (@lem4556988 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4556991 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term85 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4556990 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4556992 {_107708 B : Type'} : (@GSPEC (_107708 -> B)) = (@GSPEC (_107708 -> B)).
Proof. exact (eq_refl (@GSPEC (_107708 -> B))). Qed.
Lemma lem4556993 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term86 _107708 B t s d) = (term86 _107708 B t s d).
Proof. exact (MK_COMB (@lem4556992 _107708 B) (@lem4556991 _107708 B t s d)). Qed.
Lemma lem4556994 {_107708 B : Type'} : (@HAS_SIZE (_107708 -> B)) = (@HAS_SIZE (_107708 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> B))). Qed.
Lemma lem4556995 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term87 _107708 B t s d) = (term87 _107708 B t s d).
Proof. exact (MK_COMB (@lem4556994 _107708 B) (@lem4556993 _107708 B t s d)). Qed.
Lemma lem4556996 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107708 B t s d n m) = (term88 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4556995 _107708 B t s d) (@lem4556937 n m)). Qed.
Lemma lem4557011 {_107708 B : Type'} (s : _107708 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107708 B s m t n) = (term89 _107708 B s m t n).
Proof. exact (eq_refl (term89 _107708 B s m t n)). Qed.
Lemma lem4557012 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107708 B t s d n m) = (term90 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4557011 _107708 B s m t n) (@lem4556996 _107708 B t s d n m)). Qed.
Lemma lem4557013 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107708 B t d n m) = (term91 _107708 B t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4557012 _107708 B t s d n m)). Qed.
Lemma lem4557014 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4557015 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107708 B t d n m) = (term92 _107708 B t d n m).
Proof. exact (MK_COMB (@lem4557014 _107708) (@lem4557013 _107708 B t d n m)). Qed.
Lemma lem4557016 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107708 B t d n) = (term93 _107708 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4557015 _107708 B t d n m)). Qed.
Lemma lem4557017 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557018 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107708 B t d n) = (term94 _107708 B t d n).
Proof. exact (MK_COMB (@lem4557017) (@lem4557016 _107708 B t d n)). Qed.
Lemma lem4557019 {_107708 B : Type'} (d : B) (n : nat) : (term95 _107708 B d n) = (term95 _107708 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4557018 _107708 B t d n)). Qed.
Lemma lem4557020 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4557021 {_107708 B : Type'} (d : B) (n : nat) : (term96 _107708 B d n) = (term96 _107708 B d n).
Proof. exact (MK_COMB (@lem4557020 B) (@lem4557019 _107708 B d n)). Qed.
Lemma lem4557022 {_107708 B : Type'} (d : B) : (term97 _107708 B d) = (term97 _107708 B d).
Proof. exact (fun_ext (fun n : nat => @lem4557021 _107708 B d n)). Qed.
Lemma lem4557023 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557024 {_107708 B : Type'} (d : B) : (term98 _107708 B d) = (term98 _107708 B d).
Proof. exact (MK_COMB (@lem4557023) (@lem4557022 _107708 B d)). Qed.
Lemma lem4557025 {_107708 B : Type'} : (term99 _107708 B) = (term99 _107708 B).
Proof. exact (fun_ext (fun d : B => @lem4557024 _107708 B d)). Qed.
Lemma lem4557026 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4557027 {_107708 B : Type'} : (term12 _107708 B) = (term12 _107708 B).
Proof. exact (MK_COMB (@lem4557026 B) (@lem4557025 _107708 B)). Qed.
Lemma lem4557028 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557029 {_107708 B : Type'} : (term22 _107708 B) = (term22 _107708 B).
Proof. exact (MK_COMB (@lem4557028) (@lem4557027 _107708 B)). Qed.
Lemma lem4557030 {_107708 A B : Type'} : (term24 _107708 A B) = (term24 _107708 A B).
Proof. exact (MK_COMB (@lem4557029 _107708 B) (@lem4556932 A B)). Qed.
Lemma lem4557035 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4557039 {_107705 B : Type'} (f : _107705 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4557056 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (d : B) : (term73 _107705 B s f x d) = (term73 _107705 B s f x d).
Proof. exact (eq_refl (term73 _107705 B s f x d)). Qed.
Lemma lem4557057 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term74 _107705 B s f d) = (term74 _107705 B s f d).
Proof. exact (fun_ext (fun x : _107705 => @lem4557056 _107705 B s f x d)). Qed.
Lemma lem4557058 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557059 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term75 _107705 B s f d) = (term75 _107705 B s f d).
Proof. exact (MK_COMB (@lem4557058 _107705) (@lem4557057 _107705 B s f d)). Qed.
Lemma lem4557074 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (t : B -> Prop) : (term76 _107705 B s f x t) = (term76 _107705 B s f x t).
Proof. exact (eq_refl (term76 _107705 B s f x t)). Qed.
Lemma lem4557075 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term77 _107705 B s f t) = (term77 _107705 B s f t).
Proof. exact (fun_ext (fun x : _107705 => @lem4557074 _107705 B s f x t)). Qed.
Lemma lem4557076 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557077 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term78 _107705 B s f t) = (term78 _107705 B s f t).
Proof. exact (MK_COMB (@lem4557076 _107705) (@lem4557075 _107705 B s f t)). Qed.
Lemma lem4557078 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4557079 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term79 _107705 B s f t) = (term79 _107705 B s f t).
Proof. exact (MK_COMB (@lem4557078) (@lem4557077 _107705 B s f t)). Qed.
Lemma lem4557080 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term80 _107705 B t s f d) = (term80 _107705 B t s f d).
Proof. exact (MK_COMB (@lem4557079 _107705 B s f t) (@lem4557059 _107705 B s f d)). Qed.
Lemma lem4557083 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) : (@SETSPEC (_107705 -> B) GEN_PVAR_148) = (@SETSPEC (_107705 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107705 -> B) GEN_PVAR_148)). Qed.
Lemma lem4557084 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term81 _107705 B GEN_PVAR_148 t s f d) = (term81 _107705 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4557083 _107705 B GEN_PVAR_148) (@lem4557080 _107705 B t s f d)). Qed.
Lemma lem4557085 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4557084 _107705 B GEN_PVAR_148 t s f d) (@lem4557039 _107705 B f)). Qed.
Lemma lem4557086 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4557085 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4557087 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4557088 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4557087 _107705 B) (@lem4557086 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4557089 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term85 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4557088 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4557090 {_107705 B : Type'} : (@GSPEC (_107705 -> B)) = (@GSPEC (_107705 -> B)).
Proof. exact (eq_refl (@GSPEC (_107705 -> B))). Qed.
Lemma lem4557091 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term86 _107705 B t s d) = (term86 _107705 B t s d).
Proof. exact (MK_COMB (@lem4557090 _107705 B) (@lem4557089 _107705 B t s d)). Qed.
Lemma lem4557092 {_107705 B : Type'} : (@HAS_SIZE (_107705 -> B)) = (@HAS_SIZE (_107705 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107705 -> B))). Qed.
Lemma lem4557093 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term87 _107705 B t s d) = (term87 _107705 B t s d).
Proof. exact (MK_COMB (@lem4557092 _107705 B) (@lem4557091 _107705 B t s d)). Qed.
Lemma lem4557094 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107705 B t s d n m) = (term88 _107705 B t s d n m).
Proof. exact (MK_COMB (@lem4557093 _107705 B t s d) (@lem4557035 n m)). Qed.
Lemma lem4557109 {_107705 B : Type'} (s : _107705 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107705 B s m t n) = (term89 _107705 B s m t n).
Proof. exact (eq_refl (term89 _107705 B s m t n)). Qed.
Lemma lem4557110 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107705 B t s d n m) = (term90 _107705 B t s d n m).
Proof. exact (MK_COMB (@lem4557109 _107705 B s m t n) (@lem4557094 _107705 B t s d n m)). Qed.
Lemma lem4557111 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107705 B t d n m) = (term91 _107705 B t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4557110 _107705 B t s d n m)). Qed.
Lemma lem4557112 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557113 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107705 B t d n m) = (term92 _107705 B t d n m).
Proof. exact (MK_COMB (@lem4557112 _107705) (@lem4557111 _107705 B t d n m)). Qed.
Lemma lem4557114 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107705 B t d n) = (term93 _107705 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4557113 _107705 B t d n m)). Qed.
Lemma lem4557115 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557116 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107705 B t d n) = (term94 _107705 B t d n).
Proof. exact (MK_COMB (@lem4557115) (@lem4557114 _107705 B t d n)). Qed.
Lemma lem4557117 {_107705 B : Type'} (d : B) (n : nat) : (term95 _107705 B d n) = (term95 _107705 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4557116 _107705 B t d n)). Qed.
Lemma lem4557118 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4557119 {_107705 B : Type'} (d : B) (n : nat) : (term96 _107705 B d n) = (term96 _107705 B d n).
Proof. exact (MK_COMB (@lem4557118 B) (@lem4557117 _107705 B d n)). Qed.
Lemma lem4557120 {_107705 B : Type'} (d : B) : (term97 _107705 B d) = (term97 _107705 B d).
Proof. exact (fun_ext (fun n : nat => @lem4557119 _107705 B d n)). Qed.
Lemma lem4557121 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557122 {_107705 B : Type'} (d : B) : (term98 _107705 B d) = (term98 _107705 B d).
Proof. exact (MK_COMB (@lem4557121) (@lem4557120 _107705 B d)). Qed.
Lemma lem4557123 {_107705 B : Type'} : (term99 _107705 B) = (term99 _107705 B).
Proof. exact (fun_ext (fun d : B => @lem4557122 _107705 B d)). Qed.
Lemma lem4557124 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4557125 {_107705 B : Type'} : (term12 _107705 B) = (term12 _107705 B).
Proof. exact (MK_COMB (@lem4557124 B) (@lem4557123 _107705 B)). Qed.
Lemma lem4557126 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557127 {_107705 B : Type'} : (term22 _107705 B) = (term22 _107705 B).
Proof. exact (MK_COMB (@lem4557126) (@lem4557125 _107705 B)). Qed.
Lemma lem4557128 {_107705 _107708 A B : Type'} : (term26 _107705 _107708 A B) = (term26 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557127 _107705 B) (@lem4557030 _107708 A B)). Qed.
Lemma lem4557133 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4557137 {_107708 A : Type'} (f : A -> _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4557154 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (d : _107708) : (term100 _107708 A s f x d) = (term100 _107708 A s f x d).
Proof. exact (eq_refl (term100 _107708 A s f x d)). Qed.
Lemma lem4557155 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term101 _107708 A s f d) = (term101 _107708 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4557154 _107708 A s f x d)). Qed.
Lemma lem4557156 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4557157 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term102 _107708 A s f d) = (term102 _107708 A s f d).
Proof. exact (MK_COMB (@lem4557156 A) (@lem4557155 _107708 A s f d)). Qed.
Lemma lem4557172 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (t : _107708 -> Prop) : (term103 _107708 A s f x t) = (term103 _107708 A s f x t).
Proof. exact (eq_refl (term103 _107708 A s f x t)). Qed.
Lemma lem4557173 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term104 _107708 A s f t) = (term104 _107708 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4557172 _107708 A s f x t)). Qed.
Lemma lem4557174 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4557175 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term105 _107708 A s f t) = (term105 _107708 A s f t).
Proof. exact (MK_COMB (@lem4557174 A) (@lem4557173 _107708 A s f t)). Qed.
Lemma lem4557176 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4557177 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term106 _107708 A s f t) = (term106 _107708 A s f t).
Proof. exact (MK_COMB (@lem4557176) (@lem4557175 _107708 A s f t)). Qed.
Lemma lem4557178 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term107 _107708 A t s f d) = (term107 _107708 A t s f d).
Proof. exact (MK_COMB (@lem4557177 _107708 A s f t) (@lem4557157 _107708 A s f d)). Qed.
Lemma lem4557181 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) : (@SETSPEC (A -> _107708) GEN_PVAR_148) = (@SETSPEC (A -> _107708) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107708) GEN_PVAR_148)). Qed.
Lemma lem4557182 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term108 _107708 A GEN_PVAR_148 t s f d) = (term108 _107708 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4557181 _107708 A GEN_PVAR_148) (@lem4557178 _107708 A t s f d)). Qed.
Lemma lem4557183 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4557182 _107708 A GEN_PVAR_148 t s f d) (@lem4557137 _107708 A f)). Qed.
Lemma lem4557184 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4557183 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4557185 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4557186 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4557185 _107708 A) (@lem4557184 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4557187 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term71 _107708 A t s d) = (term71 _107708 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4557186 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4557188 {_107708 A : Type'} : (@GSPEC (A -> _107708)) = (@GSPEC (A -> _107708)).
Proof. exact (eq_refl (@GSPEC (A -> _107708))). Qed.
Lemma lem4557189 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term112 _107708 A t s d) = (term112 _107708 A t s d).
Proof. exact (MK_COMB (@lem4557188 _107708 A) (@lem4557187 _107708 A t s d)). Qed.
Lemma lem4557190 {_107708 A : Type'} : (@HAS_SIZE (A -> _107708)) = (@HAS_SIZE (A -> _107708)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107708))). Qed.
Lemma lem4557191 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term113 _107708 A t s d) = (term113 _107708 A t s d).
Proof. exact (MK_COMB (@lem4557190 _107708 A) (@lem4557189 _107708 A t s d)). Qed.
Lemma lem4557192 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term114 _107708 A t s d n m) = (term114 _107708 A t s d n m).
Proof. exact (MK_COMB (@lem4557191 _107708 A t s d) (@lem4557133 n m)). Qed.
Lemma lem4557207 {_107708 A : Type'} (s : A -> Prop) (m : nat) (t : _107708 -> Prop) (n : nat) : (term115 _107708 A s m t n) = (term115 _107708 A s m t n).
Proof. exact (eq_refl (term115 _107708 A s m t n)). Qed.
Lemma lem4557208 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term116 _107708 A t s d n m) = (term116 _107708 A t s d n m).
Proof. exact (MK_COMB (@lem4557207 _107708 A s m t n) (@lem4557192 _107708 A t s d n m)). Qed.
Lemma lem4557209 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term117 _107708 A t d n m) = (term117 _107708 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557208 _107708 A t s d n m)). Qed.
Lemma lem4557210 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4557211 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term118 _107708 A t d n m) = (term118 _107708 A t d n m).
Proof. exact (MK_COMB (@lem4557210 A) (@lem4557209 _107708 A t d n m)). Qed.
Lemma lem4557212 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) : (term119 _107708 A t d n) = (term119 _107708 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4557211 _107708 A t d n m)). Qed.
Lemma lem4557213 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557214 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) : (term120 _107708 A t d n) = (term120 _107708 A t d n).
Proof. exact (MK_COMB (@lem4557213) (@lem4557212 _107708 A t d n)). Qed.
Lemma lem4557215 {_107708 A : Type'} (d : _107708) (n : nat) : (term121 _107708 A d n) = (term121 _107708 A d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4557214 _107708 A t d n)). Qed.
Lemma lem4557216 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4557217 {_107708 A : Type'} (d : _107708) (n : nat) : (term122 _107708 A d n) = (term122 _107708 A d n).
Proof. exact (MK_COMB (@lem4557216 _107708) (@lem4557215 _107708 A d n)). Qed.
Lemma lem4557218 {_107708 A : Type'} (d : _107708) : (term123 _107708 A d) = (term123 _107708 A d).
Proof. exact (fun_ext (fun n : nat => @lem4557217 _107708 A d n)). Qed.
Lemma lem4557219 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557220 {_107708 A : Type'} (d : _107708) : (term124 _107708 A d) = (term124 _107708 A d).
Proof. exact (MK_COMB (@lem4557219) (@lem4557218 _107708 A d)). Qed.
Lemma lem4557221 {_107708 A : Type'} : (term125 _107708 A) = (term125 _107708 A).
Proof. exact (fun_ext (fun d : _107708 => @lem4557220 _107708 A d)). Qed.
Lemma lem4557222 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4557223 {_107708 A : Type'} : (term11 _107708 A) = (term11 _107708 A).
Proof. exact (MK_COMB (@lem4557222 _107708) (@lem4557221 _107708 A)). Qed.
Lemma lem4557224 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557225 {_107708 A : Type'} : (term27 _107708 A) = (term27 _107708 A).
Proof. exact (MK_COMB (@lem4557224) (@lem4557223 _107708 A)). Qed.
Lemma lem4557226 {_107705 _107708 A B : Type'} : (term29 _107705 _107708 A B) = (term29 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557225 _107708 A) (@lem4557128 _107705 _107708 A B)). Qed.
Lemma lem4557231 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4557233 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term71 _107705 A t s d) = (_54416 t s d).
Proof. exact (SYM (@lem4556834 _107705 A t s d _54416 h1)). Qed.
Lemma lem4557234 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term71 _107705 A t s d) = (_54416 t s d).
Proof. exact (@lem4557233 _107705 A t s d _54416 h1). Qed.
Lemma lem4557235 {_107705 A : Type'} : (@GSPEC (A -> _107705)) = (@GSPEC (A -> _107705)).
Proof. exact (eq_refl (@GSPEC (A -> _107705))). Qed.
Lemma lem4557236 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term112 _107705 A t s d) = (term126 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4557235 _107705 A) (@lem4557234 _107705 A t s d _54416 h1)). Qed.
Lemma lem4557237 {_107705 A : Type'} : (@HAS_SIZE (A -> _107705)) = (@HAS_SIZE (A -> _107705)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107705))). Qed.
Lemma lem4557238 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term113 _107705 A t s d) = (term127 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4557237 _107705 A) (@lem4557236 _107705 A t s d _54416 h1)). Qed.
Lemma lem4557239 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term114 _107705 A t s d n m) = (term128 _107705 A _54416 t s d n m).
Proof. exact (MK_COMB (@lem4557238 _107705 A t s d _54416 h1) (@lem4557231 n m)). Qed.
Lemma lem4557254 {_107705 A : Type'} (s : A -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term115 _107705 A s m t n) = (term115 _107705 A s m t n).
Proof. exact (eq_refl (term115 _107705 A s m t n)). Qed.
Lemma lem4557255 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term116 _107705 A t s d n m) = (term129 _107705 A _54416 t s d n m).
Proof. exact (MK_COMB (@lem4557254 _107705 A s m t n) (@lem4557239 _107705 A t s d n m _54416 h1)). Qed.
Lemma lem4557256 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term117 _107705 A t d n m) = (term130 _107705 A _54416 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557255 _107705 A t s d n m _54416 h1)). Qed.
Lemma lem4557257 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4557258 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term118 _107705 A t d n m) = (term131 _107705 A _54416 t d n m).
Proof. exact (MK_COMB (@lem4557257 A) (@lem4557256 _107705 A t d n m _54416 h1)). Qed.
Lemma lem4557259 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term119 _107705 A t d n) = (term132 _107705 A _54416 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4557258 _107705 A t d n m _54416 h1)). Qed.
Lemma lem4557260 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557261 {_107705 A : Type'} (t : _107705 -> Prop) (d : _107705) (n : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term120 _107705 A t d n) = (term133 _107705 A _54416 t d n).
Proof. exact (MK_COMB (@lem4557260) (@lem4557259 _107705 A t d n _54416 h1)). Qed.
Lemma lem4557262 {_107705 A : Type'} (d : _107705) (n : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term121 _107705 A d n) = (term134 _107705 A _54416 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557261 _107705 A t d n _54416 h1)). Qed.
Lemma lem4557263 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557264 {_107705 A : Type'} (d : _107705) (n : nat) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term122 _107705 A d n) = (term135 _107705 A _54416 d n).
Proof. exact (MK_COMB (@lem4557263 _107705) (@lem4557262 _107705 A d n _54416 h1)). Qed.
Lemma lem4557265 {_107705 A : Type'} (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term123 _107705 A d) = (term136 _107705 A _54416 d).
Proof. exact (fun_ext (fun n : nat => @lem4557264 _107705 A d n _54416 h1)). Qed.
Lemma lem4557266 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557267 {_107705 A : Type'} (d : _107705) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term124 _107705 A d) = (term137 _107705 A _54416 d).
Proof. exact (MK_COMB (@lem4557266) (@lem4557265 _107705 A d _54416 h1)). Qed.
Lemma lem4557268 {_107705 A : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term125 _107705 A) = (term138 _107705 A _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4557267 _107705 A d _54416 h1)). Qed.
Lemma lem4557269 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557270 {_107705 A : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term11 _107705 A) = (term139 _107705 A _54416).
Proof. exact (MK_COMB (@lem4557269 _107705) (@lem4557268 _107705 A _54416 h1)). Qed.
Lemma lem4557271 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557272 {_107705 A : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term27 _107705 A) = (term140 _107705 A _54416).
Proof. exact (MK_COMB (@lem4557271) (@lem4557270 _107705 A _54416 h1)). Qed.
Lemma lem4557273 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term31 _107705 _107708 A B) = (term253 _107705 _107708 A B _54416).
Proof. exact (MK_COMB (@lem4557272 _107705 A _54416 h1) (@lem4557226 _107705 _107708 A B)). Qed.
Lemma lem4557306 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term129 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4557307 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4557306 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4557308 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4557309 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4557308 _107708) (@lem4557307 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4557310 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4557309 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4557311 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557312 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4557311) (@lem4557310 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4557313 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557312 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4557314 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557315 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4557314 _107705) (@lem4557313 _107705 _107708 _54415 d n)). Qed.
Lemma lem4557316 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4557315 _107705 _107708 _54415 d n)). Qed.
Lemma lem4557317 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557318 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4557317) (@lem4557316 _107705 _107708 _54415 d)). Qed.
Lemma lem4557319 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4557318 _107705 _107708 _54415 d)). Qed.
Lemma lem4557320 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557321 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4557320 _107705) (@lem4557319 _107705 _107708 _54415)). Qed.
Lemma lem4557322 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557323 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term140 _107705 _107708 _54415) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4557322) (@lem4557321 _107705 _107708 _54415)). Qed.
Lemma lem4557324 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term141 _107705 _107708 A B _54415) = (term254 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557323 _107705 _107708 _54415) (@lem4557273 _107705 _107708 A B _54416 h1)). Qed.
Lemma lem4557345 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4557346 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4557345 A B s n)). Qed.
Lemma lem4557347 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557348 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4557347) (@lem4557346 A B s)). Qed.
Lemma lem4557349 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4557348 A B s)). Qed.
Lemma lem4557350 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4557351 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4557350 A B) (@lem4557349 A B)). Qed.
Lemma lem4557352 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557353 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4557352) (@lem4557351 A B)). Qed.
Lemma lem4557354 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term146 _107705 _107708 A B _54415) = (term255 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557353 A B) (@lem4557324 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557375 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4557376 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4557375 _107708 A s n)). Qed.
Lemma lem4557377 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557378 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4557377) (@lem4557376 _107708 A s)). Qed.
Lemma lem4557379 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4557378 _107708 A s)). Qed.
Lemma lem4557380 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4557381 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4557380 _107708 A) (@lem4557379 _107708 A)). Qed.
Lemma lem4557382 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557383 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4557382) (@lem4557381 _107708 A)). Qed.
Lemma lem4557384 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term151 _107705 _107708 A B _54415) = (term256 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557383 _107708 A) (@lem4557354 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557405 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4557406 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4557405 _107705 A s n)). Qed.
Lemma lem4557407 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557408 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4557407) (@lem4557406 _107705 A s)). Qed.
Lemma lem4557409 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4557408 _107705 A s)). Qed.
Lemma lem4557410 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4557411 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4557410 _107705 A) (@lem4557409 _107705 A)). Qed.
Lemma lem4557412 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557413 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4557412) (@lem4557411 _107705 A)). Qed.
Lemma lem4557414 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term152 _107705 _107708 A B _54415) = (term257 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557413 _107705 A) (@lem4557384 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557435 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4557436 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4557435 _107708 B s n)). Qed.
Lemma lem4557437 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557438 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4557437) (@lem4557436 _107708 B s)). Qed.
Lemma lem4557439 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4557438 _107708 B s)). Qed.
Lemma lem4557440 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4557441 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4557440 _107708 B) (@lem4557439 _107708 B)). Qed.
Lemma lem4557442 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557443 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4557442) (@lem4557441 _107708 B)). Qed.
Lemma lem4557444 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term153 _107705 _107708 A B _54415) = (term258 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557443 _107708 B) (@lem4557414 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557465 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4557466 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4557465 _107705 _107708 s n)). Qed.
Lemma lem4557467 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557468 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4557467) (@lem4557466 _107705 _107708 s)). Qed.
Lemma lem4557469 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4557468 _107705 _107708 s)). Qed.
Lemma lem4557470 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4557471 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4557470 _107705 _107708) (@lem4557469 _107705 _107708)). Qed.
Lemma lem4557472 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557473 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4557472) (@lem4557471 _107705 _107708)). Qed.
Lemma lem4557474 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term154 _107705 _107708 A B _54415) = (term259 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557473 _107705 _107708) (@lem4557444 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557495 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4557496 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4557495 _107705 B s n)). Qed.
Lemma lem4557497 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557498 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4557497) (@lem4557496 _107705 B s)). Qed.
Lemma lem4557499 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4557498 _107705 B s)). Qed.
Lemma lem4557500 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4557501 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4557500 _107705 B) (@lem4557499 _107705 B)). Qed.
Lemma lem4557502 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557503 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4557502) (@lem4557501 _107705 B)). Qed.
Lemma lem4557504 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term155 _107705 _107708 A B _54415) = (term260 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557503 _107705 B) (@lem4557474 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557525 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4557526 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4557525 B s n)). Qed.
Lemma lem4557527 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557528 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4557527) (@lem4557526 B s)). Qed.
Lemma lem4557529 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4557528 B s)). Qed.
Lemma lem4557530 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4557531 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4557530 B) (@lem4557529 B)). Qed.
Lemma lem4557532 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557533 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4557532) (@lem4557531 B)). Qed.
Lemma lem4557534 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term160 _107705 _107708 A B _54415) = (term261 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557533 B) (@lem4557504 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557555 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4557556 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4557555 A s n)). Qed.
Lemma lem4557557 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557558 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4557557) (@lem4557556 A s)). Qed.
Lemma lem4557559 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557558 A s)). Qed.
Lemma lem4557560 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4557561 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4557560 A) (@lem4557559 A)). Qed.
Lemma lem4557562 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557563 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4557562) (@lem4557561 A)). Qed.
Lemma lem4557564 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term161 _107705 _107708 A B _54415) = (term262 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557563 A) (@lem4557534 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557585 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4557586 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4557585 _107708 s n)). Qed.
Lemma lem4557587 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557588 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4557587) (@lem4557586 _107708 s)). Qed.
Lemma lem4557589 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4557588 _107708 s)). Qed.
Lemma lem4557590 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4557591 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4557590 _107708) (@lem4557589 _107708)). Qed.
Lemma lem4557592 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557593 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4557592) (@lem4557591 _107708)). Qed.
Lemma lem4557594 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term162 _107705 _107708 A B _54415) = (term263 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557593 _107708) (@lem4557564 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557615 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4557616 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4557615 _107705 s n)). Qed.
Lemma lem4557617 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557618 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4557617) (@lem4557616 _107705 s)). Qed.
Lemma lem4557619 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4557618 _107705 s)). Qed.
Lemma lem4557620 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557621 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4557620 _107705) (@lem4557619 _107705)). Qed.
Lemma lem4557622 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557623 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4557622) (@lem4557621 _107705)). Qed.
Lemma lem4557624 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term163 _107705 _107708 A B _54415) = (term264 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557623 _107705) (@lem4557594 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557647 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term168 _107705 _107708 _54415 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4557648 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term170 _107705 _107708 _54415 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557647 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4557649 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557650 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term172 _107705 _107708 _54415 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4557649 _107705) (@lem4557648 _107705 _107708 _54415 s d)). Qed.
Lemma lem4557651 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term174 _107705 _107708 _54415 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4557650 _107705 _107708 _54415 s d)). Qed.
Lemma lem4557652 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4557653 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term175 _107705 _107708 _54415 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4557652 _107708) (@lem4557651 _107705 _107708 _54415 d)). Qed.
Lemma lem4557654 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4557655 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4557654) (@lem4557653 _107705 _107708 _54415 d)). Qed.
Lemma lem4557656 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557657 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term177 _107705 _107708 _54415 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4557656) (@lem4557655 _107705 _107708 _54415 d)). Qed.
Lemma lem4557658 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term178 _107705 _107708 A B d _54415) = (term265 _107705 _107708 A B d _54415 _54416).
Proof. exact (MK_COMB (@lem4557657 _107705 _107708 _54415 d) (@lem4557624 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557659 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term179 _107705 _107708 A B _54415) = (term266 _107705 _107708 A B _54415 _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4557658 _107705 _107708 A B d _54415 _54416 h1)). Qed.
Lemma lem4557660 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557661 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term180 _107705 _107708 A B _54415) = (term267 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557660 _107705) (@lem4557659 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557662 {_107705 _107708 : Type'} (f : _107708 -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4557679 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (d : _107705) : (term100 _107705 _107708 s f x d) = (term100 _107705 _107708 s f x d).
Proof. exact (eq_refl (term100 _107705 _107708 s f x d)). Qed.
Lemma lem4557680 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term101 _107705 _107708 s f d) = (term101 _107705 _107708 s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4557679 _107705 _107708 s f x d)). Qed.
Lemma lem4557681 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4557682 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term102 _107705 _107708 s f d) = (term102 _107705 _107708 s f d).
Proof. exact (MK_COMB (@lem4557681 _107708) (@lem4557680 _107705 _107708 s f d)). Qed.
Lemma lem4557697 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (t : _107705 -> Prop) : (term103 _107705 _107708 s f x t) = (term103 _107705 _107708 s f x t).
Proof. exact (eq_refl (term103 _107705 _107708 s f x t)). Qed.
Lemma lem4557698 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term104 _107705 _107708 s f t) = (term104 _107705 _107708 s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4557697 _107705 _107708 s f x t)). Qed.
Lemma lem4557699 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4557700 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term105 _107705 _107708 s f t) = (term105 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4557699 _107708) (@lem4557698 _107705 _107708 s f t)). Qed.
Lemma lem4557701 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4557702 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term106 _107705 _107708 s f t) = (term106 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4557701) (@lem4557700 _107705 _107708 s f t)). Qed.
Lemma lem4557703 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term107 _107705 _107708 t s f d) = (term107 _107705 _107708 t s f d).
Proof. exact (MK_COMB (@lem4557702 _107705 _107708 s f t) (@lem4557682 _107705 _107708 s f d)). Qed.
Lemma lem4557706 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) : (@SETSPEC (_107708 -> _107705) GEN_PVAR_150) = (@SETSPEC (_107708 -> _107705) GEN_PVAR_150).
Proof. exact (eq_refl (@SETSPEC (_107708 -> _107705) GEN_PVAR_150)). Qed.
Lemma lem4557707 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term108 _107705 _107708 GEN_PVAR_150 t s f d) = (term108 _107705 _107708 GEN_PVAR_150 t s f d).
Proof. exact (MK_COMB (@lem4557706 _107705 _107708 GEN_PVAR_150) (@lem4557703 _107705 _107708 t s f d)). Qed.
Lemma lem4557708 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4557707 _107705 _107708 GEN_PVAR_150 t s f d) (@lem4557662 _107705 _107708 f)). Qed.
Lemma lem4557709 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4557708 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4557710 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4557711 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4557710 _107705 _107708) (@lem4557709 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4557722 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4557723 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4557722 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4557711 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4557724 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4557723 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4557725 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4557726 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4557725 _107705 _107708) (@lem4557724 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4557727 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4557726 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4557728 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557729 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4557728 _107705) (@lem4557727 _107705 _107708 _54415 t s)). Qed.
Lemma lem4557730 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4557729 _107705 _107708 _54415 t s)). Qed.
Lemma lem4557731 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4557732 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4557731 _107708) (@lem4557730 _107705 _107708 _54415 t)). Qed.
Lemma lem4557733 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557732 _107705 _107708 _54415 t)). Qed.
Lemma lem4557734 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557735 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4557734 _107705) (@lem4557733 _107705 _107708 _54415)). Qed.
Lemma lem4557736 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557737 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term249 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4557736) (@lem4557735 _107705 _107708 _54415)). Qed.
Lemma lem4557738 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term250 _107705 _107708 A B _54415) = (term268 _107705 _107708 A B _54415 _54416).
Proof. exact (MK_COMB (@lem4557737 _107705 _107708 _54415) (@lem4557661 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557739 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term251 _107705 _107708 A B) = (term269 _107705 _107708 A B _54416).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4557738 _107705 _107708 A B _54415 _54416 h1)). Qed.
Lemma lem4557740 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4557741 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (h1 : _54416 = (term63 _107705 A)) : (term252 _107705 _107708 A B) = (term270 _107705 _107708 A B _54416).
Proof. exact (MK_COMB (@lem4557740 _107705 _107708) (@lem4557739 _107705 _107708 A B _54416 h1)). Qed.
Lemma lem4557742 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : term271 _107705 _107708 A B _54416.
Proof. exact (fun h0 : _54416 = (term63 _107705 A) => @lem4557741 _107705 _107708 A B _54416 h0). Qed.
Lemma lem4557743 {_107705 _107708 A B : Type'} : term272 _107705 _107708 A B.
Proof. exact (fun _54416 : type656 _107705 A => @lem4557742 _107705 _107708 A B _54416). Qed.
Lemma lem4557745 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term183 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4557746 {_107705 A : Type'} (P : Prop) (c : type656 _107705 A) (Q : type147 _107705 A) : term184 _107705 A P c Q.
Proof. exact (@lem4557745 (type656 _107705 A) P c Q). Qed.
Lemma lem4557747 {_107705 _107708 A B : Type'} : term273 _107705 _107708 A B.
Proof. exact (@lem4557746 _107705 A (term252 _107705 _107708 A B) (term63 _107705 A) (term274 _107705 _107708 A B)). Qed.
Lemma lem4557748 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : (term275 _107705 _107708 A B _54416) = (term270 _107705 _107708 A B _54416).
Proof. exact (eq_refl (term275 _107705 _107708 A B _54416)). Qed.
Lemma lem4557749 {_107705 _107708 A B : Type'} : (term276 _107705 _107708 A B) = (term276 _107705 _107708 A B).
Proof. exact (eq_refl (term276 _107705 _107708 A B)). Qed.
Lemma lem4557750 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : ((term252 _107705 _107708 A B) = (term275 _107705 _107708 A B _54416)) = ((term252 _107705 _107708 A B) = (term270 _107705 _107708 A B _54416)).
Proof. exact (MK_COMB (@lem4557749 _107705 _107708 A B) (@lem4557748 _107705 _107708 A B _54416)). Qed.
Lemma lem4557751 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term189 _107705 A _54416) = (term189 _107705 A _54416).
Proof. exact (eq_refl (term189 _107705 A _54416)). Qed.
Lemma lem4557752 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : (term277 _107705 _107708 A B _54416) = (term271 _107705 _107708 A B _54416).
Proof. exact (MK_COMB (@lem4557751 _107705 A _54416) (@lem4557750 _107705 _107708 A B _54416)). Qed.
Lemma lem4557753 {_107705 _107708 A B : Type'} : (term278 _107705 _107708 A B) = (term279 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4557752 _107705 _107708 A B _54416)). Qed.
Lemma lem4557754 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4557755 {_107705 _107708 A B : Type'} : (term280 _107705 _107708 A B) = (term272 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557754 _107705 A) (@lem4557753 _107705 _107708 A B)). Qed.
Lemma lem4557756 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557757 {_107705 _107708 A B : Type'} : (term281 _107705 _107708 A B) = (term282 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557756) (@lem4557755 _107705 _107708 A B)). Qed.
Lemma lem4557758 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : (term275 _107705 _107708 A B _54416) = (term270 _107705 _107708 A B _54416).
Proof. exact (eq_refl (term275 _107705 _107708 A B _54416)). Qed.
Lemma lem4557759 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term189 _107705 A _54416) = (term189 _107705 A _54416).
Proof. exact (eq_refl (term189 _107705 A _54416)). Qed.
Lemma lem4557760 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : (term283 _107705 _107708 A B _54416) = (term284 _107705 _107708 A B _54416).
Proof. exact (MK_COMB (@lem4557759 _107705 A _54416) (@lem4557758 _107705 _107708 A B _54416)). Qed.
Lemma lem4557761 {_107705 _107708 A B : Type'} : (term285 _107705 _107708 A B) = (term286 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4557760 _107705 _107708 A B _54416)). Qed.
Lemma lem4557762 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4557763 {_107705 _107708 A B : Type'} : (term287 _107705 _107708 A B) = (term288 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557762 _107705 A) (@lem4557761 _107705 _107708 A B)). Qed.
Lemma lem4557764 {_107705 _107708 A B : Type'} : (term276 _107705 _107708 A B) = (term276 _107705 _107708 A B).
Proof. exact (eq_refl (term276 _107705 _107708 A B)). Qed.
Lemma lem4557765 {_107705 _107708 A B : Type'} : ((term252 _107705 _107708 A B) = (term287 _107705 _107708 A B)) = ((term252 _107705 _107708 A B) = (term288 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4557764 _107705 _107708 A B) (@lem4557763 _107705 _107708 A B)). Qed.
Lemma lem4557766 {_107705 _107708 A B : Type'} : (term273 _107705 _107708 A B) = (term289 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557757 _107705 _107708 A B) (@lem4557765 _107705 _107708 A B)). Qed.
Lemma lem4557767 {_107705 _107708 A B : Type'} : term289 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4557766 _107705 _107708 A B) (@lem4557747 _107705 _107708 A B)). Qed.
Lemma lem4557768 {_107705 _107708 A B : Type'} : (term252 _107705 _107708 A B) = (term288 _107705 _107708 A B).
Proof. exact (@lem4557767 _107705 _107708 A B (@lem4557743 _107705 _107708 A B)). Qed.
Lemma lem4557770 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4557771 {_107705 A : Type'} (s : type656 _107705 A) (t : type656 _107705 A) : (s = (term205 _107705 A t)) = (term206 _107705 A s t).
Proof. exact (@lem4557770 (type859 _107705 A) (_107705 -> Prop) s t). Qed.
Lemma lem4557772 {_107705 A : Type'} (_54416 : type656 _107705 A) : (_54416 = (term207 _107705 A)) = (term208 _107705 A _54416).
Proof. exact (@lem4557771 _107705 A _54416 (term63 _107705 A)). Qed.
Lemma lem4557773 {_107705 A : Type'} (t : _107705 -> Prop) : (term64 _107705 A t) = (term65 _107705 A t).
Proof. exact (eq_refl (term64 _107705 A t)). Qed.
Lemma lem4557774 {_107705 A : Type'} : (term207 _107705 A) = (term63 _107705 A).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557773 _107705 A t)). Qed.
Lemma lem4557775 {_107705 A : Type'} (_54416 : type656 _107705 A) : (@eq ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop) _54416) = (@eq ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop) _54416).
Proof. exact (eq_refl (@eq ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop) _54416)). Qed.
Lemma lem4557776 {_107705 A : Type'} (_54416 : type656 _107705 A) : (_54416 = (term207 _107705 A)) = (_54416 = (term63 _107705 A)).
Proof. exact (MK_COMB (@lem4557775 _107705 A _54416) (@lem4557774 _107705 A)). Qed.
Lemma lem4557777 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4557778 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term209 _107705 A _54416) = (term210 _107705 A _54416).
Proof. exact (MK_COMB (@lem4557777) (@lem4557776 _107705 A _54416)). Qed.
Lemma lem4557779 {_107705 A : Type'} (t : _107705 -> Prop) : (term64 _107705 A t) = (term65 _107705 A t).
Proof. exact (eq_refl (term64 _107705 A t)). Qed.
Lemma lem4557780 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term66 _107705 A _54416 t) = (term66 _107705 A _54416 t).
Proof. exact (eq_refl (term66 _107705 A _54416 t)). Qed.
Lemma lem4557781 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((_54416 t) = (term64 _107705 A t)) = ((_54416 t) = (term65 _107705 A t)).
Proof. exact (MK_COMB (@lem4557780 _107705 A _54416 t) (@lem4557779 _107705 A t)). Qed.
Lemma lem4557782 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term211 _107705 A _54416) = (term212 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557781 _107705 A _54416 t)). Qed.
Lemma lem4557783 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557784 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term208 _107705 A _54416) = (term213 _107705 A _54416).
Proof. exact (MK_COMB (@lem4557783 _107705) (@lem4557782 _107705 A _54416)). Qed.
Lemma lem4557785 {_107705 A : Type'} (_54416 : type656 _107705 A) : ((_54416 = (term207 _107705 A)) = (term208 _107705 A _54416)) = ((_54416 = (term63 _107705 A)) = (term213 _107705 A _54416)).
Proof. exact (MK_COMB (@lem4557778 _107705 A _54416) (@lem4557784 _107705 A _54416)). Qed.
Lemma lem4557786 {_107705 A : Type'} (_54416 : type656 _107705 A) : (_54416 = (term63 _107705 A)) = (term213 _107705 A _54416).
Proof. exact (EQ_MP (@lem4557785 _107705 A _54416) (@lem4557772 _107705 A _54416)). Qed.
Lemma lem4557788 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4557789 {_107705 A : Type'} (s : type859 _107705 A) (t : type859 _107705 A) : (s = (term214 _107705 A t)) = (term215 _107705 A s t).
Proof. exact (@lem4557788 (type1372 _107705 A) (A -> Prop) s t). Qed.
Lemma lem4557790 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((_54416 t) = (term216 _107705 A t)) = (term217 _107705 A _54416 t).
Proof. exact (@lem4557789 _107705 A (_54416 t) (term65 _107705 A t)). Qed.
Lemma lem4557791 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) : (term67 _107705 A t s) = (term68 _107705 A t s).
Proof. exact (eq_refl (term67 _107705 A t s)). Qed.
Lemma lem4557792 {_107705 A : Type'} (t : _107705 -> Prop) : (term216 _107705 A t) = (term65 _107705 A t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557791 _107705 A t s)). Qed.
Lemma lem4557793 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term66 _107705 A _54416 t) = (term66 _107705 A _54416 t).
Proof. exact (eq_refl (term66 _107705 A _54416 t)). Qed.
Lemma lem4557794 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((_54416 t) = (term216 _107705 A t)) = ((_54416 t) = (term65 _107705 A t)).
Proof. exact (MK_COMB (@lem4557793 _107705 A _54416 t) (@lem4557792 _107705 A t)). Qed.
Lemma lem4557795 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4557796 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term218 _107705 A _54416 t) = (term219 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4557795) (@lem4557794 _107705 A _54416 t)). Qed.
Lemma lem4557797 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) : (term67 _107705 A t s) = (term68 _107705 A t s).
Proof. exact (eq_refl (term67 _107705 A t s)). Qed.
Lemma lem4557798 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term69 _107705 A _54416 t s) = (term69 _107705 A _54416 t s).
Proof. exact (eq_refl (term69 _107705 A _54416 t s)). Qed.
Lemma lem4557799 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((_54416 t s) = (term67 _107705 A t s)) = ((_54416 t s) = (term68 _107705 A t s)).
Proof. exact (MK_COMB (@lem4557798 _107705 A _54416 t s) (@lem4557797 _107705 A t s)). Qed.
Lemma lem4557800 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term220 _107705 A _54416 t) = (term221 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557799 _107705 A _54416 t s)). Qed.
Lemma lem4557801 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4557802 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term217 _107705 A _54416 t) = (term222 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4557801 A) (@lem4557800 _107705 A _54416 t)). Qed.
Lemma lem4557803 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (((_54416 t) = (term216 _107705 A t)) = (term217 _107705 A _54416 t)) = (((_54416 t) = (term65 _107705 A t)) = (term222 _107705 A _54416 t)).
Proof. exact (MK_COMB (@lem4557796 _107705 A _54416 t) (@lem4557802 _107705 A _54416 t)). Qed.
Lemma lem4557804 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((_54416 t) = (term65 _107705 A t)) = (term222 _107705 A _54416 t).
Proof. exact (EQ_MP (@lem4557803 _107705 A _54416 t) (@lem4557790 _107705 A _54416 t)). Qed.
Lemma lem4557806 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4557807 {_107705 A : Type'} (s : type1372 _107705 A) (t : type1372 _107705 A) : (s = (term223 _107705 A t)) = (term224 _107705 A s t).
Proof. exact (@lem4557806 (type805 _107705 A) _107705 s t). Qed.
Lemma lem4557808 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((_54416 t s) = (term225 _107705 A t s)) = (term226 _107705 A _54416 t s).
Proof. exact (@lem4557807 _107705 A (_54416 t s) (term68 _107705 A t s)). Qed.
Lemma lem4557809 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term70 _107705 A t s d) = (term71 _107705 A t s d).
Proof. exact (eq_refl (term70 _107705 A t s d)). Qed.
Lemma lem4557810 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) : (term225 _107705 A t s) = (term68 _107705 A t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4557809 _107705 A t s d)). Qed.
Lemma lem4557811 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term69 _107705 A _54416 t s) = (term69 _107705 A _54416 t s).
Proof. exact (eq_refl (term69 _107705 A _54416 t s)). Qed.
Lemma lem4557812 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((_54416 t s) = (term225 _107705 A t s)) = ((_54416 t s) = (term68 _107705 A t s)).
Proof. exact (MK_COMB (@lem4557811 _107705 A _54416 t s) (@lem4557810 _107705 A t s)). Qed.
Lemma lem4557813 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4557814 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term227 _107705 A _54416 t s) = (term228 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4557813) (@lem4557812 _107705 A _54416 t s)). Qed.
Lemma lem4557815 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term70 _107705 A t s d) = (term71 _107705 A t s d).
Proof. exact (eq_refl (term70 _107705 A t s d)). Qed.
Lemma lem4557816 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term72 _107705 A _54416 t s d) = (term72 _107705 A _54416 t s d).
Proof. exact (eq_refl (term72 _107705 A _54416 t s d)). Qed.
Lemma lem4557817 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d) = (term70 _107705 A t s d)) = ((_54416 t s d) = (term71 _107705 A t s d)).
Proof. exact (MK_COMB (@lem4557816 _107705 A _54416 t s d) (@lem4557815 _107705 A t s d)). Qed.
Lemma lem4557818 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term229 _107705 A _54416 t s) = (term230 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4557817 _107705 A _54416 t s d)). Qed.
Lemma lem4557819 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557820 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term226 _107705 A _54416 t s) = (term231 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4557819 _107705) (@lem4557818 _107705 A _54416 t s)). Qed.
Lemma lem4557821 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (((_54416 t s) = (term225 _107705 A t s)) = (term226 _107705 A _54416 t s)) = (((_54416 t s) = (term68 _107705 A t s)) = (term231 _107705 A _54416 t s)).
Proof. exact (MK_COMB (@lem4557814 _107705 A _54416 t s) (@lem4557820 _107705 A _54416 t s)). Qed.
Lemma lem4557822 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((_54416 t s) = (term68 _107705 A t s)) = (term231 _107705 A _54416 t s).
Proof. exact (EQ_MP (@lem4557821 _107705 A _54416 t s) (@lem4557808 _107705 A _54416 t s)). Qed.
Lemma lem4557824 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4557825 {_107705 A : Type'} (s : type805 _107705 A) (t : type805 _107705 A) : (s = (term232 _107705 A t)) = (term233 _107705 A s t).
Proof. exact (@lem4557824 Prop (A -> _107705) s t). Qed.
Lemma lem4557826 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d) = (term234 _107705 A t s d)) = (term235 _107705 A _54416 t s d).
Proof. exact (@lem4557825 _107705 A (_54416 t s d) (term71 _107705 A t s d)). Qed.
Lemma lem4557827 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term236 _107705 A t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term236 _107705 A t s d GEN_PVAR_148)). Qed.
Lemma lem4557828 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term234 _107705 A t s d) = (term71 _107705 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4557827 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4557829 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term72 _107705 A _54416 t s d) = (term72 _107705 A _54416 t s d).
Proof. exact (eq_refl (term72 _107705 A _54416 t s d)). Qed.
Lemma lem4557830 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d) = (term234 _107705 A t s d)) = ((_54416 t s d) = (term71 _107705 A t s d)).
Proof. exact (MK_COMB (@lem4557829 _107705 A _54416 t s d) (@lem4557828 _107705 A t s d)). Qed.
Lemma lem4557831 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4557832 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term237 _107705 A _54416 t s d) = (term238 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4557831) (@lem4557830 _107705 A _54416 t s d)). Qed.
Lemma lem4557833 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term236 _107705 A t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term236 _107705 A t s d GEN_PVAR_148)). Qed.
Lemma lem4557834 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term239 _107705 A _54416 t s d GEN_PVAR_148) = (term239 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4557835 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term236 _107705 A t s d GEN_PVAR_148)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4557834 _107705 A _54416 t s d GEN_PVAR_148) (@lem4557833 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4557836 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term240 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4557835 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4557837 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4557838 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term235 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4557837 _107705 A) (@lem4557836 _107705 A _54416 t s d)). Qed.
Lemma lem4557839 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (((_54416 t s d) = (term234 _107705 A t s d)) = (term235 _107705 A _54416 t s d)) = (((_54416 t s d) = (term71 _107705 A t s d)) = (term242 _107705 A _54416 t s d)).
Proof. exact (MK_COMB (@lem4557832 _107705 A _54416 t s d) (@lem4557838 _107705 A _54416 t s d)). Qed.
Lemma lem4557840 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d) = (term71 _107705 A t s d)) = (term242 _107705 A _54416 t s d).
Proof. exact (EQ_MP (@lem4557839 _107705 A _54416 t s d) (@lem4557826 _107705 A _54416 t s d)). Qed.
Lemma lem4557841 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d))). Qed.
Lemma lem4557842 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4557841 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4557843 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4557844 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4557843 _107705 A) (@lem4557842 _107705 A _54416 t s d)). Qed.
Lemma lem4557845 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d) = (term71 _107705 A t s d)) = (term242 _107705 A _54416 t s d).
Proof. exact (TRANS (@lem4557840 _107705 A _54416 t s d) (@lem4557844 _107705 A _54416 t s d)). Qed.
Lemma lem4557846 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term230 _107705 A _54416 t s) = (term243 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4557845 _107705 A _54416 t s d)). Qed.
Lemma lem4557847 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4557848 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term231 _107705 A _54416 t s) = (term244 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4557847 _107705) (@lem4557846 _107705 A _54416 t s)). Qed.
Lemma lem4557849 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((_54416 t s) = (term68 _107705 A t s)) = (term244 _107705 A _54416 t s).
Proof. exact (TRANS (@lem4557822 _107705 A _54416 t s) (@lem4557848 _107705 A _54416 t s)). Qed.
Lemma lem4557850 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term221 _107705 A _54416 t) = (term245 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557849 _107705 A _54416 t s)). Qed.
Lemma lem4557851 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4557852 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term222 _107705 A _54416 t) = (term246 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4557851 A) (@lem4557850 _107705 A _54416 t)). Qed.
Lemma lem4557853 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((_54416 t) = (term65 _107705 A t)) = (term246 _107705 A _54416 t).
Proof. exact (TRANS (@lem4557804 _107705 A _54416 t) (@lem4557852 _107705 A _54416 t)). Qed.
Lemma lem4557854 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term212 _107705 A _54416) = (term247 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4557853 _107705 A _54416 t)). Qed.
Lemma lem4557855 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4557856 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term213 _107705 A _54416) = (term248 _107705 A _54416).
Proof. exact (MK_COMB (@lem4557855 _107705) (@lem4557854 _107705 A _54416)). Qed.
Lemma lem4557857 {_107705 A : Type'} (_54416 : type656 _107705 A) : (_54416 = (term63 _107705 A)) = (term248 _107705 A _54416).
Proof. exact (TRANS (@lem4557786 _107705 A _54416) (@lem4557856 _107705 A _54416)). Qed.
Lemma lem4557858 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4557859 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term189 _107705 A _54416) = (term249 _107705 A _54416).
Proof. exact (MK_COMB (@lem4557858) (@lem4557857 _107705 A _54416)). Qed.
Lemma lem4557860 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : (term270 _107705 _107708 A B _54416) = (term270 _107705 _107708 A B _54416).
Proof. exact (eq_refl (term270 _107705 _107708 A B _54416)). Qed.
Lemma lem4557861 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) : (term284 _107705 _107708 A B _54416) = (term290 _107705 _107708 A B _54416).
Proof. exact (MK_COMB (@lem4557859 _107705 A _54416) (@lem4557860 _107705 _107708 A B _54416)). Qed.
Lemma lem4557862 {_107705 _107708 A B : Type'} : (term286 _107705 _107708 A B) = (term291 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4557861 _107705 _107708 A B _54416)). Qed.
Lemma lem4557863 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4557864 {_107705 _107708 A B : Type'} : (term288 _107705 _107708 A B) = (term292 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4557863 _107705 A) (@lem4557862 _107705 _107708 A B)). Qed.
Lemma lem4557865 {_107705 _107708 A B : Type'} : (term276 _107705 _107708 A B) = (term276 _107705 _107708 A B).
Proof. exact (eq_refl (term276 _107705 _107708 A B)). Qed.
Lemma lem4557866 {_107705 _107708 A B : Type'} : ((term252 _107705 _107708 A B) = (term288 _107705 _107708 A B)) = ((term252 _107705 _107708 A B) = (term292 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4557865 _107705 _107708 A B) (@lem4557864 _107705 _107708 A B)). Qed.
Lemma lem4557867 {_107705 _107708 A B : Type'} : (term252 _107705 _107708 A B) = (term292 _107705 _107708 A B).
Proof. exact (EQ_MP (@lem4557866 _107705 _107708 A B) (@lem4557768 _107705 _107708 A B)). Qed.
Lemma lem4557868 {_107708 A : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : _54417 = (term63 _107708 A).
Proof. exact (h1). Qed.
Lemma lem4557869 {_107708 : Type'} (t : _107708 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4557870 {_107708 A : Type'} (t : _107708 -> Prop) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (_54417 t) = (term64 _107708 A t).
Proof. exact (MK_COMB (@lem4557868 _107708 A _54417 h1) (@lem4557869 _107708 t)). Qed.
Lemma lem4557871 {_107708 A : Type'} (t : _107708 -> Prop) : (term64 _107708 A t) = (term65 _107708 A t).
Proof. exact (eq_refl (term64 _107708 A t)). Qed.
Lemma lem4557872 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term66 _107708 A _54417 t) = (term66 _107708 A _54417 t).
Proof. exact (eq_refl (term66 _107708 A _54417 t)). Qed.
Lemma lem4557873 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((_54417 t) = (term64 _107708 A t)) = ((_54417 t) = (term65 _107708 A t)).
Proof. exact (MK_COMB (@lem4557872 _107708 A _54417 t) (@lem4557871 _107708 A t)). Qed.
Lemma lem4557874 {_107708 A : Type'} (t : _107708 -> Prop) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (_54417 t) = (term65 _107708 A t).
Proof. exact (EQ_MP (@lem4557873 _107708 A _54417 t) (@lem4557870 _107708 A t _54417 h1)). Qed.
Lemma lem4557875 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4557876 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (_54417 t s) = (term67 _107708 A t s).
Proof. exact (MK_COMB (@lem4557874 _107708 A t _54417 h1) (@lem4557875 A s)). Qed.
Lemma lem4557877 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) : (term67 _107708 A t s) = (term68 _107708 A t s).
Proof. exact (eq_refl (term67 _107708 A t s)). Qed.
Lemma lem4557878 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term69 _107708 A _54417 t s) = (term69 _107708 A _54417 t s).
Proof. exact (eq_refl (term69 _107708 A _54417 t s)). Qed.
Lemma lem4557879 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((_54417 t s) = (term67 _107708 A t s)) = ((_54417 t s) = (term68 _107708 A t s)).
Proof. exact (MK_COMB (@lem4557878 _107708 A _54417 t s) (@lem4557877 _107708 A t s)). Qed.
Lemma lem4557880 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (_54417 t s) = (term68 _107708 A t s).
Proof. exact (EQ_MP (@lem4557879 _107708 A _54417 t s) (@lem4557876 _107708 A t s _54417 h1)). Qed.
Lemma lem4557881 {_107708 : Type'} (d : _107708) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4557882 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (_54417 t s d) = (term70 _107708 A t s d).
Proof. exact (MK_COMB (@lem4557880 _107708 A t s _54417 h1) (@lem4557881 _107708 d)). Qed.
Lemma lem4557883 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term70 _107708 A t s d) = (term71 _107708 A t s d).
Proof. exact (eq_refl (term70 _107708 A t s d)). Qed.
Lemma lem4557884 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term72 _107708 A _54417 t s d) = (term72 _107708 A _54417 t s d).
Proof. exact (eq_refl (term72 _107708 A _54417 t s d)). Qed.
Lemma lem4557885 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d) = (term70 _107708 A t s d)) = ((_54417 t s d) = (term71 _107708 A t s d)).
Proof. exact (MK_COMB (@lem4557884 _107708 A _54417 t s d) (@lem4557883 _107708 A t s d)). Qed.
Lemma lem4557886 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (_54417 t s d) = (term71 _107708 A t s d).
Proof. exact (EQ_MP (@lem4557885 _107708 A _54417 t s d) (@lem4557882 _107708 A t s d _54417 h1)). Qed.
Lemma lem4557892 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4557896 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4557913 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term73 A B s f x d) = (term73 A B s f x d).
Proof. exact (eq_refl (term73 A B s f x d)). Qed.
Lemma lem4557914 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term74 A B s f d) = (term74 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4557913 A B s f x d)). Qed.
Lemma lem4557915 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4557916 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term75 A B s f d) = (term75 A B s f d).
Proof. exact (MK_COMB (@lem4557915 A) (@lem4557914 A B s f d)). Qed.
Lemma lem4557931 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term76 A B s f x t) = (term76 A B s f x t).
Proof. exact (eq_refl (term76 A B s f x t)). Qed.
Lemma lem4557932 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term77 A B s f t) = (term77 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4557931 A B s f x t)). Qed.
Lemma lem4557933 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4557934 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term78 A B s f t) = (term78 A B s f t).
Proof. exact (MK_COMB (@lem4557933 A) (@lem4557932 A B s f t)). Qed.
Lemma lem4557935 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4557936 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term79 A B s f t) = (term79 A B s f t).
Proof. exact (MK_COMB (@lem4557935) (@lem4557934 A B s f t)). Qed.
Lemma lem4557937 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term80 A B t s f d) = (term80 A B t s f d).
Proof. exact (MK_COMB (@lem4557936 A B s f t) (@lem4557916 A B s f d)). Qed.
Lemma lem4557940 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4557941 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term81 A B GEN_PVAR_148 t s f d) = (term81 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4557940 A B GEN_PVAR_148) (@lem4557937 A B t s f d)). Qed.
Lemma lem4557942 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4557941 A B GEN_PVAR_148 t s f d) (@lem4557896 A B f)). Qed.
Lemma lem4557943 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4557942 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4557944 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4557945 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4557944 A B) (@lem4557943 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4557946 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term85 A B t s d) = (term85 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4557945 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4557947 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4557948 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term86 A B t s d) = (term86 A B t s d).
Proof. exact (MK_COMB (@lem4557947 A B) (@lem4557946 A B t s d)). Qed.
Lemma lem4557949 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4557950 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term87 A B t s d) = (term87 A B t s d).
Proof. exact (MK_COMB (@lem4557949 A B) (@lem4557948 A B t s d)). Qed.
Lemma lem4557951 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term88 A B t s d n m) = (term88 A B t s d n m).
Proof. exact (MK_COMB (@lem4557950 A B t s d) (@lem4557892 n m)). Qed.
Lemma lem4557966 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 A B s m t n) = (term89 A B s m t n).
Proof. exact (eq_refl (term89 A B s m t n)). Qed.
Lemma lem4557967 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term90 A B t s d n m) = (term90 A B t s d n m).
Proof. exact (MK_COMB (@lem4557966 A B s m t n) (@lem4557951 A B t s d n m)). Qed.
Lemma lem4557968 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 A B t d n m) = (term91 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4557967 A B t s d n m)). Qed.
Lemma lem4557969 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4557970 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 A B t d n m) = (term92 A B t d n m).
Proof. exact (MK_COMB (@lem4557969 A) (@lem4557968 A B t d n m)). Qed.
Lemma lem4557971 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 A B t d n) = (term93 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4557970 A B t d n m)). Qed.
Lemma lem4557972 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557973 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 A B t d n) = (term94 A B t d n).
Proof. exact (MK_COMB (@lem4557972) (@lem4557971 A B t d n)). Qed.
Lemma lem4557974 {A B : Type'} (d : B) (n : nat) : (term95 A B d n) = (term95 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4557973 A B t d n)). Qed.
Lemma lem4557975 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4557976 {A B : Type'} (d : B) (n : nat) : (term96 A B d n) = (term96 A B d n).
Proof. exact (MK_COMB (@lem4557975 B) (@lem4557974 A B d n)). Qed.
Lemma lem4557977 {A B : Type'} (d : B) : (term97 A B d) = (term97 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4557976 A B d n)). Qed.
Lemma lem4557978 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4557979 {A B : Type'} (d : B) : (term98 A B d) = (term98 A B d).
Proof. exact (MK_COMB (@lem4557978) (@lem4557977 A B d)). Qed.
Lemma lem4557980 {A B : Type'} : (term99 A B) = (term99 A B).
Proof. exact (fun_ext (fun d : B => @lem4557979 A B d)). Qed.
Lemma lem4557981 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4557982 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4557981 B) (@lem4557980 A B)). Qed.
Lemma lem4557983 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4557984 {A B : Type'} : (term21 A B) = (term21 A B).
Proof. exact (MK_COMB (@lem4557983) (@lem4557982 A B)). Qed.
Lemma lem4557989 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4557993 {_107708 B : Type'} (f : _107708 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4558010 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (d : B) : (term73 _107708 B s f x d) = (term73 _107708 B s f x d).
Proof. exact (eq_refl (term73 _107708 B s f x d)). Qed.
Lemma lem4558011 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term74 _107708 B s f d) = (term74 _107708 B s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4558010 _107708 B s f x d)). Qed.
Lemma lem4558012 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558013 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term75 _107708 B s f d) = (term75 _107708 B s f d).
Proof. exact (MK_COMB (@lem4558012 _107708) (@lem4558011 _107708 B s f d)). Qed.
Lemma lem4558028 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (t : B -> Prop) : (term76 _107708 B s f x t) = (term76 _107708 B s f x t).
Proof. exact (eq_refl (term76 _107708 B s f x t)). Qed.
Lemma lem4558029 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term77 _107708 B s f t) = (term77 _107708 B s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4558028 _107708 B s f x t)). Qed.
Lemma lem4558030 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558031 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term78 _107708 B s f t) = (term78 _107708 B s f t).
Proof. exact (MK_COMB (@lem4558030 _107708) (@lem4558029 _107708 B s f t)). Qed.
Lemma lem4558032 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4558033 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term79 _107708 B s f t) = (term79 _107708 B s f t).
Proof. exact (MK_COMB (@lem4558032) (@lem4558031 _107708 B s f t)). Qed.
Lemma lem4558034 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term80 _107708 B t s f d) = (term80 _107708 B t s f d).
Proof. exact (MK_COMB (@lem4558033 _107708 B s f t) (@lem4558013 _107708 B s f d)). Qed.
Lemma lem4558037 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) : (@SETSPEC (_107708 -> B) GEN_PVAR_148) = (@SETSPEC (_107708 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107708 -> B) GEN_PVAR_148)). Qed.
Lemma lem4558038 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term81 _107708 B GEN_PVAR_148 t s f d) = (term81 _107708 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4558037 _107708 B GEN_PVAR_148) (@lem4558034 _107708 B t s f d)). Qed.
Lemma lem4558039 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4558038 _107708 B GEN_PVAR_148 t s f d) (@lem4557993 _107708 B f)). Qed.
Lemma lem4558040 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4558039 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4558041 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4558042 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4558041 _107708 B) (@lem4558040 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4558043 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term85 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4558042 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4558044 {_107708 B : Type'} : (@GSPEC (_107708 -> B)) = (@GSPEC (_107708 -> B)).
Proof. exact (eq_refl (@GSPEC (_107708 -> B))). Qed.
Lemma lem4558045 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term86 _107708 B t s d) = (term86 _107708 B t s d).
Proof. exact (MK_COMB (@lem4558044 _107708 B) (@lem4558043 _107708 B t s d)). Qed.
Lemma lem4558046 {_107708 B : Type'} : (@HAS_SIZE (_107708 -> B)) = (@HAS_SIZE (_107708 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> B))). Qed.
Lemma lem4558047 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term87 _107708 B t s d) = (term87 _107708 B t s d).
Proof. exact (MK_COMB (@lem4558046 _107708 B) (@lem4558045 _107708 B t s d)). Qed.
Lemma lem4558048 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107708 B t s d n m) = (term88 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4558047 _107708 B t s d) (@lem4557989 n m)). Qed.
Lemma lem4558063 {_107708 B : Type'} (s : _107708 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107708 B s m t n) = (term89 _107708 B s m t n).
Proof. exact (eq_refl (term89 _107708 B s m t n)). Qed.
Lemma lem4558064 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107708 B t s d n m) = (term90 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4558063 _107708 B s m t n) (@lem4558048 _107708 B t s d n m)). Qed.
Lemma lem4558065 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107708 B t d n m) = (term91 _107708 B t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4558064 _107708 B t s d n m)). Qed.
Lemma lem4558066 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558067 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107708 B t d n m) = (term92 _107708 B t d n m).
Proof. exact (MK_COMB (@lem4558066 _107708) (@lem4558065 _107708 B t d n m)). Qed.
Lemma lem4558068 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107708 B t d n) = (term93 _107708 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4558067 _107708 B t d n m)). Qed.
Lemma lem4558069 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558070 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107708 B t d n) = (term94 _107708 B t d n).
Proof. exact (MK_COMB (@lem4558069) (@lem4558068 _107708 B t d n)). Qed.
Lemma lem4558071 {_107708 B : Type'} (d : B) (n : nat) : (term95 _107708 B d n) = (term95 _107708 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4558070 _107708 B t d n)). Qed.
Lemma lem4558072 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4558073 {_107708 B : Type'} (d : B) (n : nat) : (term96 _107708 B d n) = (term96 _107708 B d n).
Proof. exact (MK_COMB (@lem4558072 B) (@lem4558071 _107708 B d n)). Qed.
Lemma lem4558074 {_107708 B : Type'} (d : B) : (term97 _107708 B d) = (term97 _107708 B d).
Proof. exact (fun_ext (fun n : nat => @lem4558073 _107708 B d n)). Qed.
Lemma lem4558075 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558076 {_107708 B : Type'} (d : B) : (term98 _107708 B d) = (term98 _107708 B d).
Proof. exact (MK_COMB (@lem4558075) (@lem4558074 _107708 B d)). Qed.
Lemma lem4558077 {_107708 B : Type'} : (term99 _107708 B) = (term99 _107708 B).
Proof. exact (fun_ext (fun d : B => @lem4558076 _107708 B d)). Qed.
Lemma lem4558078 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4558079 {_107708 B : Type'} : (term12 _107708 B) = (term12 _107708 B).
Proof. exact (MK_COMB (@lem4558078 B) (@lem4558077 _107708 B)). Qed.
Lemma lem4558080 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558081 {_107708 B : Type'} : (term22 _107708 B) = (term22 _107708 B).
Proof. exact (MK_COMB (@lem4558080) (@lem4558079 _107708 B)). Qed.
Lemma lem4558082 {_107708 A B : Type'} : (term24 _107708 A B) = (term24 _107708 A B).
Proof. exact (MK_COMB (@lem4558081 _107708 B) (@lem4557984 A B)). Qed.
Lemma lem4558087 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4558091 {_107705 B : Type'} (f : _107705 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4558108 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (d : B) : (term73 _107705 B s f x d) = (term73 _107705 B s f x d).
Proof. exact (eq_refl (term73 _107705 B s f x d)). Qed.
Lemma lem4558109 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term74 _107705 B s f d) = (term74 _107705 B s f d).
Proof. exact (fun_ext (fun x : _107705 => @lem4558108 _107705 B s f x d)). Qed.
Lemma lem4558110 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558111 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term75 _107705 B s f d) = (term75 _107705 B s f d).
Proof. exact (MK_COMB (@lem4558110 _107705) (@lem4558109 _107705 B s f d)). Qed.
Lemma lem4558126 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (t : B -> Prop) : (term76 _107705 B s f x t) = (term76 _107705 B s f x t).
Proof. exact (eq_refl (term76 _107705 B s f x t)). Qed.
Lemma lem4558127 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term77 _107705 B s f t) = (term77 _107705 B s f t).
Proof. exact (fun_ext (fun x : _107705 => @lem4558126 _107705 B s f x t)). Qed.
Lemma lem4558128 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558129 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term78 _107705 B s f t) = (term78 _107705 B s f t).
Proof. exact (MK_COMB (@lem4558128 _107705) (@lem4558127 _107705 B s f t)). Qed.
Lemma lem4558130 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4558131 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term79 _107705 B s f t) = (term79 _107705 B s f t).
Proof. exact (MK_COMB (@lem4558130) (@lem4558129 _107705 B s f t)). Qed.
Lemma lem4558132 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term80 _107705 B t s f d) = (term80 _107705 B t s f d).
Proof. exact (MK_COMB (@lem4558131 _107705 B s f t) (@lem4558111 _107705 B s f d)). Qed.
Lemma lem4558135 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) : (@SETSPEC (_107705 -> B) GEN_PVAR_148) = (@SETSPEC (_107705 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107705 -> B) GEN_PVAR_148)). Qed.
Lemma lem4558136 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term81 _107705 B GEN_PVAR_148 t s f d) = (term81 _107705 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4558135 _107705 B GEN_PVAR_148) (@lem4558132 _107705 B t s f d)). Qed.
Lemma lem4558137 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4558136 _107705 B GEN_PVAR_148 t s f d) (@lem4558091 _107705 B f)). Qed.
Lemma lem4558138 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4558137 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4558139 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4558140 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4558139 _107705 B) (@lem4558138 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4558141 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term85 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4558140 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4558142 {_107705 B : Type'} : (@GSPEC (_107705 -> B)) = (@GSPEC (_107705 -> B)).
Proof. exact (eq_refl (@GSPEC (_107705 -> B))). Qed.
Lemma lem4558143 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term86 _107705 B t s d) = (term86 _107705 B t s d).
Proof. exact (MK_COMB (@lem4558142 _107705 B) (@lem4558141 _107705 B t s d)). Qed.
Lemma lem4558144 {_107705 B : Type'} : (@HAS_SIZE (_107705 -> B)) = (@HAS_SIZE (_107705 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107705 -> B))). Qed.
Lemma lem4558145 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term87 _107705 B t s d) = (term87 _107705 B t s d).
Proof. exact (MK_COMB (@lem4558144 _107705 B) (@lem4558143 _107705 B t s d)). Qed.
Lemma lem4558146 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107705 B t s d n m) = (term88 _107705 B t s d n m).
Proof. exact (MK_COMB (@lem4558145 _107705 B t s d) (@lem4558087 n m)). Qed.
Lemma lem4558161 {_107705 B : Type'} (s : _107705 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107705 B s m t n) = (term89 _107705 B s m t n).
Proof. exact (eq_refl (term89 _107705 B s m t n)). Qed.
Lemma lem4558162 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107705 B t s d n m) = (term90 _107705 B t s d n m).
Proof. exact (MK_COMB (@lem4558161 _107705 B s m t n) (@lem4558146 _107705 B t s d n m)). Qed.
Lemma lem4558163 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107705 B t d n m) = (term91 _107705 B t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4558162 _107705 B t s d n m)). Qed.
Lemma lem4558164 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558165 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107705 B t d n m) = (term92 _107705 B t d n m).
Proof. exact (MK_COMB (@lem4558164 _107705) (@lem4558163 _107705 B t d n m)). Qed.
Lemma lem4558166 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107705 B t d n) = (term93 _107705 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4558165 _107705 B t d n m)). Qed.
Lemma lem4558167 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558168 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107705 B t d n) = (term94 _107705 B t d n).
Proof. exact (MK_COMB (@lem4558167) (@lem4558166 _107705 B t d n)). Qed.
Lemma lem4558169 {_107705 B : Type'} (d : B) (n : nat) : (term95 _107705 B d n) = (term95 _107705 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4558168 _107705 B t d n)). Qed.
Lemma lem4558170 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4558171 {_107705 B : Type'} (d : B) (n : nat) : (term96 _107705 B d n) = (term96 _107705 B d n).
Proof. exact (MK_COMB (@lem4558170 B) (@lem4558169 _107705 B d n)). Qed.
Lemma lem4558172 {_107705 B : Type'} (d : B) : (term97 _107705 B d) = (term97 _107705 B d).
Proof. exact (fun_ext (fun n : nat => @lem4558171 _107705 B d n)). Qed.
Lemma lem4558173 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558174 {_107705 B : Type'} (d : B) : (term98 _107705 B d) = (term98 _107705 B d).
Proof. exact (MK_COMB (@lem4558173) (@lem4558172 _107705 B d)). Qed.
Lemma lem4558175 {_107705 B : Type'} : (term99 _107705 B) = (term99 _107705 B).
Proof. exact (fun_ext (fun d : B => @lem4558174 _107705 B d)). Qed.
Lemma lem4558176 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4558177 {_107705 B : Type'} : (term12 _107705 B) = (term12 _107705 B).
Proof. exact (MK_COMB (@lem4558176 B) (@lem4558175 _107705 B)). Qed.
Lemma lem4558178 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558179 {_107705 B : Type'} : (term22 _107705 B) = (term22 _107705 B).
Proof. exact (MK_COMB (@lem4558178) (@lem4558177 _107705 B)). Qed.
Lemma lem4558180 {_107705 _107708 A B : Type'} : (term26 _107705 _107708 A B) = (term26 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4558179 _107705 B) (@lem4558082 _107708 A B)). Qed.
Lemma lem4558185 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4558187 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term71 _107708 A t s d) = (_54417 t s d).
Proof. exact (SYM (@lem4557886 _107708 A t s d _54417 h1)). Qed.
Lemma lem4558188 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term71 _107708 A t s d) = (_54417 t s d).
Proof. exact (@lem4558187 _107708 A t s d _54417 h1). Qed.
Lemma lem4558189 {_107708 A : Type'} : (@GSPEC (A -> _107708)) = (@GSPEC (A -> _107708)).
Proof. exact (eq_refl (@GSPEC (A -> _107708))). Qed.
Lemma lem4558190 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term112 _107708 A t s d) = (term126 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4558189 _107708 A) (@lem4558188 _107708 A t s d _54417 h1)). Qed.
Lemma lem4558191 {_107708 A : Type'} : (@HAS_SIZE (A -> _107708)) = (@HAS_SIZE (A -> _107708)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107708))). Qed.
Lemma lem4558192 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term113 _107708 A t s d) = (term127 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4558191 _107708 A) (@lem4558190 _107708 A t s d _54417 h1)). Qed.
Lemma lem4558193 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term114 _107708 A t s d n m) = (term128 _107708 A _54417 t s d n m).
Proof. exact (MK_COMB (@lem4558192 _107708 A t s d _54417 h1) (@lem4558185 n m)). Qed.
Lemma lem4558208 {_107708 A : Type'} (s : A -> Prop) (m : nat) (t : _107708 -> Prop) (n : nat) : (term115 _107708 A s m t n) = (term115 _107708 A s m t n).
Proof. exact (eq_refl (term115 _107708 A s m t n)). Qed.
Lemma lem4558209 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term116 _107708 A t s d n m) = (term129 _107708 A _54417 t s d n m).
Proof. exact (MK_COMB (@lem4558208 _107708 A s m t n) (@lem4558193 _107708 A t s d n m _54417 h1)). Qed.
Lemma lem4558210 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term117 _107708 A t d n m) = (term130 _107708 A _54417 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558209 _107708 A t s d n m _54417 h1)). Qed.
Lemma lem4558211 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4558212 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term118 _107708 A t d n m) = (term131 _107708 A _54417 t d n m).
Proof. exact (MK_COMB (@lem4558211 A) (@lem4558210 _107708 A t d n m _54417 h1)). Qed.
Lemma lem4558213 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term119 _107708 A t d n) = (term132 _107708 A _54417 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4558212 _107708 A t d n m _54417 h1)). Qed.
Lemma lem4558214 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558215 {_107708 A : Type'} (t : _107708 -> Prop) (d : _107708) (n : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term120 _107708 A t d n) = (term133 _107708 A _54417 t d n).
Proof. exact (MK_COMB (@lem4558214) (@lem4558213 _107708 A t d n _54417 h1)). Qed.
Lemma lem4558216 {_107708 A : Type'} (d : _107708) (n : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term121 _107708 A d n) = (term134 _107708 A _54417 d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4558215 _107708 A t d n _54417 h1)). Qed.
Lemma lem4558217 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558218 {_107708 A : Type'} (d : _107708) (n : nat) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term122 _107708 A d n) = (term135 _107708 A _54417 d n).
Proof. exact (MK_COMB (@lem4558217 _107708) (@lem4558216 _107708 A d n _54417 h1)). Qed.
Lemma lem4558219 {_107708 A : Type'} (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term123 _107708 A d) = (term136 _107708 A _54417 d).
Proof. exact (fun_ext (fun n : nat => @lem4558218 _107708 A d n _54417 h1)). Qed.
Lemma lem4558220 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558221 {_107708 A : Type'} (d : _107708) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term124 _107708 A d) = (term137 _107708 A _54417 d).
Proof. exact (MK_COMB (@lem4558220) (@lem4558219 _107708 A d _54417 h1)). Qed.
Lemma lem4558222 {_107708 A : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term125 _107708 A) = (term138 _107708 A _54417).
Proof. exact (fun_ext (fun d : _107708 => @lem4558221 _107708 A d _54417 h1)). Qed.
Lemma lem4558223 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558224 {_107708 A : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term11 _107708 A) = (term139 _107708 A _54417).
Proof. exact (MK_COMB (@lem4558223 _107708) (@lem4558222 _107708 A _54417 h1)). Qed.
Lemma lem4558225 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558226 {_107708 A : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term27 _107708 A) = (term140 _107708 A _54417).
Proof. exact (MK_COMB (@lem4558225) (@lem4558224 _107708 A _54417 h1)). Qed.
Lemma lem4558227 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term29 _107705 _107708 A B) = (term293 _107705 _107708 A B _54417).
Proof. exact (MK_COMB (@lem4558226 _107708 A _54417 h1) (@lem4558180 _107705 _107708 A B)). Qed.
Lemma lem4558260 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 A _54416 t s d n m) = (term129 _107705 A _54416 t s d n m).
Proof. exact (eq_refl (term129 _107705 A _54416 t s d n m)). Qed.
Lemma lem4558261 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 A _54416 t d n m) = (term130 _107705 A _54416 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558260 _107705 A _54416 t s d n m)). Qed.
Lemma lem4558262 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4558263 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 A _54416 t d n m) = (term131 _107705 A _54416 t d n m).
Proof. exact (MK_COMB (@lem4558262 A) (@lem4558261 _107705 A _54416 t d n m)). Qed.
Lemma lem4558264 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 A _54416 t d n) = (term132 _107705 A _54416 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4558263 _107705 A _54416 t d n m)). Qed.
Lemma lem4558265 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558266 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 A _54416 t d n) = (term133 _107705 A _54416 t d n).
Proof. exact (MK_COMB (@lem4558265) (@lem4558264 _107705 A _54416 t d n)). Qed.
Lemma lem4558267 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term134 _107705 A _54416 d n) = (term134 _107705 A _54416 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4558266 _107705 A _54416 t d n)). Qed.
Lemma lem4558268 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558269 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term135 _107705 A _54416 d n) = (term135 _107705 A _54416 d n).
Proof. exact (MK_COMB (@lem4558268 _107705) (@lem4558267 _107705 A _54416 d n)). Qed.
Lemma lem4558270 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term136 _107705 A _54416 d) = (term136 _107705 A _54416 d).
Proof. exact (fun_ext (fun n : nat => @lem4558269 _107705 A _54416 d n)). Qed.
Lemma lem4558271 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558272 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term137 _107705 A _54416 d) = (term137 _107705 A _54416 d).
Proof. exact (MK_COMB (@lem4558271) (@lem4558270 _107705 A _54416 d)). Qed.
Lemma lem4558273 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term138 _107705 A _54416) = (term138 _107705 A _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4558272 _107705 A _54416 d)). Qed.
Lemma lem4558274 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558275 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term139 _107705 A _54416) = (term139 _107705 A _54416).
Proof. exact (MK_COMB (@lem4558274 _107705) (@lem4558273 _107705 A _54416)). Qed.
Lemma lem4558276 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558277 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term140 _107705 A _54416) = (term140 _107705 A _54416).
Proof. exact (MK_COMB (@lem4558276) (@lem4558275 _107705 A _54416)). Qed.
Lemma lem4558278 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term253 _107705 _107708 A B _54416) = (term294 _107705 _107708 A B _54416 _54417).
Proof. exact (MK_COMB (@lem4558277 _107705 A _54416) (@lem4558227 _107705 _107708 A B _54417 h1)). Qed.
Lemma lem4558311 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term129 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4558312 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4558311 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4558313 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558314 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4558313 _107708) (@lem4558312 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4558315 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4558314 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4558316 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558317 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4558316) (@lem4558315 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4558318 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4558317 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4558319 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558320 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4558319 _107705) (@lem4558318 _107705 _107708 _54415 d n)). Qed.
Lemma lem4558321 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4558320 _107705 _107708 _54415 d n)). Qed.
Lemma lem4558322 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558323 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4558322) (@lem4558321 _107705 _107708 _54415 d)). Qed.
Lemma lem4558324 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4558323 _107705 _107708 _54415 d)). Qed.
Lemma lem4558325 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558326 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4558325 _107705) (@lem4558324 _107705 _107708 _54415)). Qed.
Lemma lem4558327 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558328 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term140 _107705 _107708 _54415) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4558327) (@lem4558326 _107705 _107708 _54415)). Qed.
Lemma lem4558329 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term254 _107705 _107708 A B _54415 _54416) = (term295 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558328 _107705 _107708 _54415) (@lem4558278 _107705 _107708 A B _54416 _54417 h1)). Qed.
Lemma lem4558350 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4558351 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4558350 A B s n)). Qed.
Lemma lem4558352 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558353 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4558352) (@lem4558351 A B s)). Qed.
Lemma lem4558354 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4558353 A B s)). Qed.
Lemma lem4558355 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4558356 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4558355 A B) (@lem4558354 A B)). Qed.
Lemma lem4558357 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558358 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4558357) (@lem4558356 A B)). Qed.
Lemma lem4558359 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term255 _107705 _107708 A B _54415 _54416) = (term296 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558358 A B) (@lem4558329 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558380 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4558381 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4558380 _107708 A s n)). Qed.
Lemma lem4558382 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558383 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4558382) (@lem4558381 _107708 A s)). Qed.
Lemma lem4558384 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4558383 _107708 A s)). Qed.
Lemma lem4558385 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4558386 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4558385 _107708 A) (@lem4558384 _107708 A)). Qed.
Lemma lem4558387 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558388 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4558387) (@lem4558386 _107708 A)). Qed.
Lemma lem4558389 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term256 _107705 _107708 A B _54415 _54416) = (term297 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558388 _107708 A) (@lem4558359 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558410 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4558411 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4558410 _107705 A s n)). Qed.
Lemma lem4558412 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558413 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4558412) (@lem4558411 _107705 A s)). Qed.
Lemma lem4558414 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4558413 _107705 A s)). Qed.
Lemma lem4558415 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4558416 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4558415 _107705 A) (@lem4558414 _107705 A)). Qed.
Lemma lem4558417 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558418 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4558417) (@lem4558416 _107705 A)). Qed.
Lemma lem4558419 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term257 _107705 _107708 A B _54415 _54416) = (term298 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558418 _107705 A) (@lem4558389 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558440 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4558441 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4558440 _107708 B s n)). Qed.
Lemma lem4558442 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558443 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4558442) (@lem4558441 _107708 B s)). Qed.
Lemma lem4558444 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4558443 _107708 B s)). Qed.
Lemma lem4558445 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4558446 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4558445 _107708 B) (@lem4558444 _107708 B)). Qed.
Lemma lem4558447 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558448 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4558447) (@lem4558446 _107708 B)). Qed.
Lemma lem4558449 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term258 _107705 _107708 A B _54415 _54416) = (term299 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558448 _107708 B) (@lem4558419 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558470 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4558471 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4558470 _107705 _107708 s n)). Qed.
Lemma lem4558472 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558473 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4558472) (@lem4558471 _107705 _107708 s)). Qed.
Lemma lem4558474 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4558473 _107705 _107708 s)). Qed.
Lemma lem4558475 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4558476 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4558475 _107705 _107708) (@lem4558474 _107705 _107708)). Qed.
Lemma lem4558477 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558478 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4558477) (@lem4558476 _107705 _107708)). Qed.
Lemma lem4558479 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term259 _107705 _107708 A B _54415 _54416) = (term300 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558478 _107705 _107708) (@lem4558449 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558500 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4558501 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4558500 _107705 B s n)). Qed.
Lemma lem4558502 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558503 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4558502) (@lem4558501 _107705 B s)). Qed.
Lemma lem4558504 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4558503 _107705 B s)). Qed.
Lemma lem4558505 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4558506 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4558505 _107705 B) (@lem4558504 _107705 B)). Qed.
Lemma lem4558507 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558508 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4558507) (@lem4558506 _107705 B)). Qed.
Lemma lem4558509 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term260 _107705 _107708 A B _54415 _54416) = (term301 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558508 _107705 B) (@lem4558479 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558530 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4558531 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4558530 B s n)). Qed.
Lemma lem4558532 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558533 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4558532) (@lem4558531 B s)). Qed.
Lemma lem4558534 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4558533 B s)). Qed.
Lemma lem4558535 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4558536 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4558535 B) (@lem4558534 B)). Qed.
Lemma lem4558537 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558538 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4558537) (@lem4558536 B)). Qed.
Lemma lem4558539 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term261 _107705 _107708 A B _54415 _54416) = (term302 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558538 B) (@lem4558509 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558560 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4558561 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4558560 A s n)). Qed.
Lemma lem4558562 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558563 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4558562) (@lem4558561 A s)). Qed.
Lemma lem4558564 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558563 A s)). Qed.
Lemma lem4558565 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4558566 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4558565 A) (@lem4558564 A)). Qed.
Lemma lem4558567 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558568 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4558567) (@lem4558566 A)). Qed.
Lemma lem4558569 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term262 _107705 _107708 A B _54415 _54416) = (term303 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558568 A) (@lem4558539 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558590 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4558591 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4558590 _107708 s n)). Qed.
Lemma lem4558592 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558593 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4558592) (@lem4558591 _107708 s)). Qed.
Lemma lem4558594 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4558593 _107708 s)). Qed.
Lemma lem4558595 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558596 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4558595 _107708) (@lem4558594 _107708)). Qed.
Lemma lem4558597 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558598 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4558597) (@lem4558596 _107708)). Qed.
Lemma lem4558599 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term263 _107705 _107708 A B _54415 _54416) = (term304 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558598 _107708) (@lem4558569 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558620 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4558621 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4558620 _107705 s n)). Qed.
Lemma lem4558622 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4558623 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4558622) (@lem4558621 _107705 s)). Qed.
Lemma lem4558624 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4558623 _107705 s)). Qed.
Lemma lem4558625 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558626 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4558625 _107705) (@lem4558624 _107705)). Qed.
Lemma lem4558627 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558628 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4558627) (@lem4558626 _107705)). Qed.
Lemma lem4558629 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term264 _107705 _107708 A B _54415 _54416) = (term305 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558628 _107705) (@lem4558599 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558652 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term168 _107705 _107708 _54415 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4558653 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term170 _107705 _107708 _54415 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4558652 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4558654 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558655 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term172 _107705 _107708 _54415 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4558654 _107705) (@lem4558653 _107705 _107708 _54415 s d)). Qed.
Lemma lem4558656 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term174 _107705 _107708 _54415 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4558655 _107705 _107708 _54415 s d)). Qed.
Lemma lem4558657 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558658 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term175 _107705 _107708 _54415 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4558657 _107708) (@lem4558656 _107705 _107708 _54415 d)). Qed.
Lemma lem4558659 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4558660 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4558659) (@lem4558658 _107705 _107708 _54415 d)). Qed.
Lemma lem4558661 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558662 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term177 _107705 _107708 _54415 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4558661) (@lem4558660 _107705 _107708 _54415 d)). Qed.
Lemma lem4558663 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term265 _107705 _107708 A B d _54415 _54416) = (term306 _107705 _107708 A B d _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558662 _107705 _107708 _54415 d) (@lem4558629 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558664 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term266 _107705 _107708 A B _54415 _54416) = (term307 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (fun_ext (fun d : _107705 => @lem4558663 _107705 _107708 A B d _54415 _54416 _54417 h1)). Qed.
Lemma lem4558665 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558666 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term267 _107705 _107708 A B _54415 _54416) = (term308 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558665 _107705) (@lem4558664 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558667 {_107705 _107708 : Type'} (f : _107708 -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4558684 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (d : _107705) : (term100 _107705 _107708 s f x d) = (term100 _107705 _107708 s f x d).
Proof. exact (eq_refl (term100 _107705 _107708 s f x d)). Qed.
Lemma lem4558685 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term101 _107705 _107708 s f d) = (term101 _107705 _107708 s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4558684 _107705 _107708 s f x d)). Qed.
Lemma lem4558686 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558687 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term102 _107705 _107708 s f d) = (term102 _107705 _107708 s f d).
Proof. exact (MK_COMB (@lem4558686 _107708) (@lem4558685 _107705 _107708 s f d)). Qed.
Lemma lem4558702 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (t : _107705 -> Prop) : (term103 _107705 _107708 s f x t) = (term103 _107705 _107708 s f x t).
Proof. exact (eq_refl (term103 _107705 _107708 s f x t)). Qed.
Lemma lem4558703 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term104 _107705 _107708 s f t) = (term104 _107705 _107708 s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4558702 _107705 _107708 s f x t)). Qed.
Lemma lem4558704 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558705 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term105 _107705 _107708 s f t) = (term105 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4558704 _107708) (@lem4558703 _107705 _107708 s f t)). Qed.
Lemma lem4558706 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4558707 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term106 _107705 _107708 s f t) = (term106 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4558706) (@lem4558705 _107705 _107708 s f t)). Qed.
Lemma lem4558708 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term107 _107705 _107708 t s f d) = (term107 _107705 _107708 t s f d).
Proof. exact (MK_COMB (@lem4558707 _107705 _107708 s f t) (@lem4558687 _107705 _107708 s f d)). Qed.
Lemma lem4558711 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) : (@SETSPEC (_107708 -> _107705) GEN_PVAR_150) = (@SETSPEC (_107708 -> _107705) GEN_PVAR_150).
Proof. exact (eq_refl (@SETSPEC (_107708 -> _107705) GEN_PVAR_150)). Qed.
Lemma lem4558712 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term108 _107705 _107708 GEN_PVAR_150 t s f d) = (term108 _107705 _107708 GEN_PVAR_150 t s f d).
Proof. exact (MK_COMB (@lem4558711 _107705 _107708 GEN_PVAR_150) (@lem4558708 _107705 _107708 t s f d)). Qed.
Lemma lem4558713 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4558712 _107705 _107708 GEN_PVAR_150 t s f d) (@lem4558667 _107705 _107708 f)). Qed.
Lemma lem4558714 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4558713 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4558715 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4558716 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4558715 _107705 _107708) (@lem4558714 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4558727 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4558728 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4558727 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4558716 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4558729 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4558728 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4558730 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4558731 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4558730 _107705 _107708) (@lem4558729 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4558732 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4558731 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4558733 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558734 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4558733 _107705) (@lem4558732 _107705 _107708 _54415 t s)). Qed.
Lemma lem4558735 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4558734 _107705 _107708 _54415 t s)). Qed.
Lemma lem4558736 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558737 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4558736 _107708) (@lem4558735 _107705 _107708 _54415 t)). Qed.
Lemma lem4558738 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4558737 _107705 _107708 _54415 t)). Qed.
Lemma lem4558739 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558740 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4558739 _107705) (@lem4558738 _107705 _107708 _54415)). Qed.
Lemma lem4558741 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558742 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term249 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4558741) (@lem4558740 _107705 _107708 _54415)). Qed.
Lemma lem4558743 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term268 _107705 _107708 A B _54415 _54416) = (term309 _107705 _107708 A B _54415 _54416 _54417).
Proof. exact (MK_COMB (@lem4558742 _107705 _107708 _54415) (@lem4558666 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558744 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term269 _107705 _107708 A B _54416) = (term310 _107705 _107708 A B _54416 _54417).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4558743 _107705 _107708 A B _54415 _54416 _54417 h1)). Qed.
Lemma lem4558745 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4558746 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term270 _107705 _107708 A B _54416) = (term311 _107705 _107708 A B _54416 _54417).
Proof. exact (MK_COMB (@lem4558745 _107705 _107708) (@lem4558744 _107705 _107708 A B _54416 _54417 h1)). Qed.
Lemma lem4558747 {_107705 A : Type'} (f : A -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4558764 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (d : _107705) : (term100 _107705 A s f x d) = (term100 _107705 A s f x d).
Proof. exact (eq_refl (term100 _107705 A s f x d)). Qed.
Lemma lem4558765 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term101 _107705 A s f d) = (term101 _107705 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4558764 _107705 A s f x d)). Qed.
Lemma lem4558766 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4558767 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term102 _107705 A s f d) = (term102 _107705 A s f d).
Proof. exact (MK_COMB (@lem4558766 A) (@lem4558765 _107705 A s f d)). Qed.
Lemma lem4558782 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (t : _107705 -> Prop) : (term103 _107705 A s f x t) = (term103 _107705 A s f x t).
Proof. exact (eq_refl (term103 _107705 A s f x t)). Qed.
Lemma lem4558783 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term104 _107705 A s f t) = (term104 _107705 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4558782 _107705 A s f x t)). Qed.
Lemma lem4558784 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4558785 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term105 _107705 A s f t) = (term105 _107705 A s f t).
Proof. exact (MK_COMB (@lem4558784 A) (@lem4558783 _107705 A s f t)). Qed.
Lemma lem4558786 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4558787 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term106 _107705 A s f t) = (term106 _107705 A s f t).
Proof. exact (MK_COMB (@lem4558786) (@lem4558785 _107705 A s f t)). Qed.
Lemma lem4558788 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term107 _107705 A t s f d) = (term107 _107705 A t s f d).
Proof. exact (MK_COMB (@lem4558787 _107705 A s f t) (@lem4558767 _107705 A s f d)). Qed.
Lemma lem4558791 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) : (@SETSPEC (A -> _107705) GEN_PVAR_148) = (@SETSPEC (A -> _107705) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107705) GEN_PVAR_148)). Qed.
Lemma lem4558792 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term108 _107705 A GEN_PVAR_148 t s f d) = (term108 _107705 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4558791 _107705 A GEN_PVAR_148) (@lem4558788 _107705 A t s f d)). Qed.
Lemma lem4558793 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4558792 _107705 A GEN_PVAR_148 t s f d) (@lem4558747 _107705 A f)). Qed.
Lemma lem4558794 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4558793 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4558795 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4558796 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4558795 _107705 A) (@lem4558794 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4558807 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term239 _107705 A _54416 t s d GEN_PVAR_148) = (term239 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4558808 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4558807 _107705 A _54416 t s d GEN_PVAR_148) (@lem4558796 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4558809 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4558808 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4558810 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4558811 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4558810 _107705 A) (@lem4558809 _107705 A _54416 t s d)). Qed.
Lemma lem4558812 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term243 _107705 A _54416 t s) = (term243 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4558811 _107705 A _54416 t s d)). Qed.
Lemma lem4558813 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4558814 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term244 _107705 A _54416 t s) = (term244 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4558813 _107705) (@lem4558812 _107705 A _54416 t s)). Qed.
Lemma lem4558815 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term245 _107705 A _54416 t) = (term245 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558814 _107705 A _54416 t s)). Qed.
Lemma lem4558816 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4558817 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term246 _107705 A _54416 t) = (term246 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4558816 A) (@lem4558815 _107705 A _54416 t)). Qed.
Lemma lem4558818 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term247 _107705 A _54416) = (term247 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4558817 _107705 A _54416 t)). Qed.
Lemma lem4558819 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4558820 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term248 _107705 A _54416).
Proof. exact (MK_COMB (@lem4558819 _107705) (@lem4558818 _107705 A _54416)). Qed.
Lemma lem4558821 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558822 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term249 _107705 A _54416) = (term249 _107705 A _54416).
Proof. exact (MK_COMB (@lem4558821) (@lem4558820 _107705 A _54416)). Qed.
Lemma lem4558823 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term290 _107705 _107708 A B _54416) = (term312 _107705 _107708 A B _54416 _54417).
Proof. exact (MK_COMB (@lem4558822 _107705 A _54416) (@lem4558746 _107705 _107708 A B _54416 _54417 h1)). Qed.
Lemma lem4558824 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term291 _107705 _107708 A B) = (term313 _107705 _107708 A B _54417).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4558823 _107705 _107708 A B _54416 _54417 h1)). Qed.
Lemma lem4558825 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4558826 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (h1 : _54417 = (term63 _107708 A)) : (term292 _107705 _107708 A B) = (term314 _107705 _107708 A B _54417).
Proof. exact (MK_COMB (@lem4558825 _107705 A) (@lem4558824 _107705 _107708 A B _54417 h1)). Qed.
Lemma lem4558827 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : term315 _107705 _107708 A B _54417.
Proof. exact (fun h0 : _54417 = (term63 _107708 A) => @lem4558826 _107705 _107708 A B _54417 h0). Qed.
Lemma lem4558828 {_107705 _107708 A B : Type'} : term316 _107705 _107708 A B.
Proof. exact (fun _54417 : type656 _107708 A => @lem4558827 _107705 _107708 A B _54417). Qed.
Lemma lem4558830 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term183 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4558831 {_107708 A : Type'} (P : Prop) (c : type656 _107708 A) (Q : type147 _107708 A) : term184 _107708 A P c Q.
Proof. exact (@lem4558830 (type656 _107708 A) P c Q). Qed.
Lemma lem4558832 {_107705 _107708 A B : Type'} : term317 _107705 _107708 A B.
Proof. exact (@lem4558831 _107708 A (term292 _107705 _107708 A B) (term63 _107708 A) (term318 _107705 _107708 A B)). Qed.
Lemma lem4558833 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : (term319 _107705 _107708 A B _54417) = (term314 _107705 _107708 A B _54417).
Proof. exact (eq_refl (term319 _107705 _107708 A B _54417)). Qed.
Lemma lem4558834 {_107705 _107708 A B : Type'} : (term320 _107705 _107708 A B) = (term320 _107705 _107708 A B).
Proof. exact (eq_refl (term320 _107705 _107708 A B)). Qed.
Lemma lem4558835 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : ((term292 _107705 _107708 A B) = (term319 _107705 _107708 A B _54417)) = ((term292 _107705 _107708 A B) = (term314 _107705 _107708 A B _54417)).
Proof. exact (MK_COMB (@lem4558834 _107705 _107708 A B) (@lem4558833 _107705 _107708 A B _54417)). Qed.
Lemma lem4558836 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term189 _107708 A _54417) = (term189 _107708 A _54417).
Proof. exact (eq_refl (term189 _107708 A _54417)). Qed.
Lemma lem4558837 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : (term321 _107705 _107708 A B _54417) = (term315 _107705 _107708 A B _54417).
Proof. exact (MK_COMB (@lem4558836 _107708 A _54417) (@lem4558835 _107705 _107708 A B _54417)). Qed.
Lemma lem4558838 {_107705 _107708 A B : Type'} : (term322 _107705 _107708 A B) = (term323 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4558837 _107705 _107708 A B _54417)). Qed.
Lemma lem4558839 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4558840 {_107705 _107708 A B : Type'} : (term324 _107705 _107708 A B) = (term316 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4558839 _107708 A) (@lem4558838 _107705 _107708 A B)). Qed.
Lemma lem4558841 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558842 {_107705 _107708 A B : Type'} : (term325 _107705 _107708 A B) = (term326 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4558841) (@lem4558840 _107705 _107708 A B)). Qed.
Lemma lem4558843 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : (term319 _107705 _107708 A B _54417) = (term314 _107705 _107708 A B _54417).
Proof. exact (eq_refl (term319 _107705 _107708 A B _54417)). Qed.
Lemma lem4558844 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term189 _107708 A _54417) = (term189 _107708 A _54417).
Proof. exact (eq_refl (term189 _107708 A _54417)). Qed.
Lemma lem4558845 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : (term327 _107705 _107708 A B _54417) = (term328 _107705 _107708 A B _54417).
Proof. exact (MK_COMB (@lem4558844 _107708 A _54417) (@lem4558843 _107705 _107708 A B _54417)). Qed.
Lemma lem4558846 {_107705 _107708 A B : Type'} : (term329 _107705 _107708 A B) = (term330 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4558845 _107705 _107708 A B _54417)). Qed.
Lemma lem4558847 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4558848 {_107705 _107708 A B : Type'} : (term331 _107705 _107708 A B) = (term332 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4558847 _107708 A) (@lem4558846 _107705 _107708 A B)). Qed.
Lemma lem4558849 {_107705 _107708 A B : Type'} : (term320 _107705 _107708 A B) = (term320 _107705 _107708 A B).
Proof. exact (eq_refl (term320 _107705 _107708 A B)). Qed.
Lemma lem4558850 {_107705 _107708 A B : Type'} : ((term292 _107705 _107708 A B) = (term331 _107705 _107708 A B)) = ((term292 _107705 _107708 A B) = (term332 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4558849 _107705 _107708 A B) (@lem4558848 _107705 _107708 A B)). Qed.
Lemma lem4558851 {_107705 _107708 A B : Type'} : (term317 _107705 _107708 A B) = (term333 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4558842 _107705 _107708 A B) (@lem4558850 _107705 _107708 A B)). Qed.
Lemma lem4558852 {_107705 _107708 A B : Type'} : term333 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4558851 _107705 _107708 A B) (@lem4558832 _107705 _107708 A B)). Qed.
Lemma lem4558853 {_107705 _107708 A B : Type'} : (term292 _107705 _107708 A B) = (term332 _107705 _107708 A B).
Proof. exact (@lem4558852 _107705 _107708 A B (@lem4558828 _107705 _107708 A B)). Qed.
Lemma lem4558855 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4558856 {_107708 A : Type'} (s : type656 _107708 A) (t : type656 _107708 A) : (s = (term205 _107708 A t)) = (term206 _107708 A s t).
Proof. exact (@lem4558855 (type859 _107708 A) (_107708 -> Prop) s t). Qed.
Lemma lem4558857 {_107708 A : Type'} (_54417 : type656 _107708 A) : (_54417 = (term207 _107708 A)) = (term208 _107708 A _54417).
Proof. exact (@lem4558856 _107708 A _54417 (term63 _107708 A)). Qed.
Lemma lem4558858 {_107708 A : Type'} (t : _107708 -> Prop) : (term64 _107708 A t) = (term65 _107708 A t).
Proof. exact (eq_refl (term64 _107708 A t)). Qed.
Lemma lem4558859 {_107708 A : Type'} : (term207 _107708 A) = (term63 _107708 A).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4558858 _107708 A t)). Qed.
Lemma lem4558860 {_107708 A : Type'} (_54417 : type656 _107708 A) : (@eq ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop) _54417) = (@eq ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop) _54417).
Proof. exact (eq_refl (@eq ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop) _54417)). Qed.
Lemma lem4558861 {_107708 A : Type'} (_54417 : type656 _107708 A) : (_54417 = (term207 _107708 A)) = (_54417 = (term63 _107708 A)).
Proof. exact (MK_COMB (@lem4558860 _107708 A _54417) (@lem4558859 _107708 A)). Qed.
Lemma lem4558862 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4558863 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term209 _107708 A _54417) = (term210 _107708 A _54417).
Proof. exact (MK_COMB (@lem4558862) (@lem4558861 _107708 A _54417)). Qed.
Lemma lem4558864 {_107708 A : Type'} (t : _107708 -> Prop) : (term64 _107708 A t) = (term65 _107708 A t).
Proof. exact (eq_refl (term64 _107708 A t)). Qed.
Lemma lem4558865 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term66 _107708 A _54417 t) = (term66 _107708 A _54417 t).
Proof. exact (eq_refl (term66 _107708 A _54417 t)). Qed.
Lemma lem4558866 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((_54417 t) = (term64 _107708 A t)) = ((_54417 t) = (term65 _107708 A t)).
Proof. exact (MK_COMB (@lem4558865 _107708 A _54417 t) (@lem4558864 _107708 A t)). Qed.
Lemma lem4558867 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term211 _107708 A _54417) = (term212 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4558866 _107708 A _54417 t)). Qed.
Lemma lem4558868 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558869 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term208 _107708 A _54417) = (term213 _107708 A _54417).
Proof. exact (MK_COMB (@lem4558868 _107708) (@lem4558867 _107708 A _54417)). Qed.
Lemma lem4558870 {_107708 A : Type'} (_54417 : type656 _107708 A) : ((_54417 = (term207 _107708 A)) = (term208 _107708 A _54417)) = ((_54417 = (term63 _107708 A)) = (term213 _107708 A _54417)).
Proof. exact (MK_COMB (@lem4558863 _107708 A _54417) (@lem4558869 _107708 A _54417)). Qed.
Lemma lem4558871 {_107708 A : Type'} (_54417 : type656 _107708 A) : (_54417 = (term63 _107708 A)) = (term213 _107708 A _54417).
Proof. exact (EQ_MP (@lem4558870 _107708 A _54417) (@lem4558857 _107708 A _54417)). Qed.
Lemma lem4558873 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4558874 {_107708 A : Type'} (s : type859 _107708 A) (t : type859 _107708 A) : (s = (term214 _107708 A t)) = (term215 _107708 A s t).
Proof. exact (@lem4558873 (type1372 _107708 A) (A -> Prop) s t). Qed.
Lemma lem4558875 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((_54417 t) = (term216 _107708 A t)) = (term217 _107708 A _54417 t).
Proof. exact (@lem4558874 _107708 A (_54417 t) (term65 _107708 A t)). Qed.
Lemma lem4558876 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) : (term67 _107708 A t s) = (term68 _107708 A t s).
Proof. exact (eq_refl (term67 _107708 A t s)). Qed.
Lemma lem4558877 {_107708 A : Type'} (t : _107708 -> Prop) : (term216 _107708 A t) = (term65 _107708 A t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558876 _107708 A t s)). Qed.
Lemma lem4558878 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term66 _107708 A _54417 t) = (term66 _107708 A _54417 t).
Proof. exact (eq_refl (term66 _107708 A _54417 t)). Qed.
Lemma lem4558879 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((_54417 t) = (term216 _107708 A t)) = ((_54417 t) = (term65 _107708 A t)).
Proof. exact (MK_COMB (@lem4558878 _107708 A _54417 t) (@lem4558877 _107708 A t)). Qed.
Lemma lem4558880 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4558881 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term218 _107708 A _54417 t) = (term219 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4558880) (@lem4558879 _107708 A _54417 t)). Qed.
Lemma lem4558882 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) : (term67 _107708 A t s) = (term68 _107708 A t s).
Proof. exact (eq_refl (term67 _107708 A t s)). Qed.
Lemma lem4558883 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term69 _107708 A _54417 t s) = (term69 _107708 A _54417 t s).
Proof. exact (eq_refl (term69 _107708 A _54417 t s)). Qed.
Lemma lem4558884 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((_54417 t s) = (term67 _107708 A t s)) = ((_54417 t s) = (term68 _107708 A t s)).
Proof. exact (MK_COMB (@lem4558883 _107708 A _54417 t s) (@lem4558882 _107708 A t s)). Qed.
Lemma lem4558885 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term220 _107708 A _54417 t) = (term221 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558884 _107708 A _54417 t s)). Qed.
Lemma lem4558886 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4558887 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term217 _107708 A _54417 t) = (term222 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4558886 A) (@lem4558885 _107708 A _54417 t)). Qed.
Lemma lem4558888 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (((_54417 t) = (term216 _107708 A t)) = (term217 _107708 A _54417 t)) = (((_54417 t) = (term65 _107708 A t)) = (term222 _107708 A _54417 t)).
Proof. exact (MK_COMB (@lem4558881 _107708 A _54417 t) (@lem4558887 _107708 A _54417 t)). Qed.
Lemma lem4558889 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((_54417 t) = (term65 _107708 A t)) = (term222 _107708 A _54417 t).
Proof. exact (EQ_MP (@lem4558888 _107708 A _54417 t) (@lem4558875 _107708 A _54417 t)). Qed.
Lemma lem4558891 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4558892 {_107708 A : Type'} (s : type1372 _107708 A) (t : type1372 _107708 A) : (s = (term223 _107708 A t)) = (term224 _107708 A s t).
Proof. exact (@lem4558891 (type805 _107708 A) _107708 s t). Qed.
Lemma lem4558893 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((_54417 t s) = (term225 _107708 A t s)) = (term226 _107708 A _54417 t s).
Proof. exact (@lem4558892 _107708 A (_54417 t s) (term68 _107708 A t s)). Qed.
Lemma lem4558894 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term70 _107708 A t s d) = (term71 _107708 A t s d).
Proof. exact (eq_refl (term70 _107708 A t s d)). Qed.
Lemma lem4558895 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) : (term225 _107708 A t s) = (term68 _107708 A t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4558894 _107708 A t s d)). Qed.
Lemma lem4558896 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term69 _107708 A _54417 t s) = (term69 _107708 A _54417 t s).
Proof. exact (eq_refl (term69 _107708 A _54417 t s)). Qed.
Lemma lem4558897 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((_54417 t s) = (term225 _107708 A t s)) = ((_54417 t s) = (term68 _107708 A t s)).
Proof. exact (MK_COMB (@lem4558896 _107708 A _54417 t s) (@lem4558895 _107708 A t s)). Qed.
Lemma lem4558898 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4558899 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term227 _107708 A _54417 t s) = (term228 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4558898) (@lem4558897 _107708 A _54417 t s)). Qed.
Lemma lem4558900 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term70 _107708 A t s d) = (term71 _107708 A t s d).
Proof. exact (eq_refl (term70 _107708 A t s d)). Qed.
Lemma lem4558901 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term72 _107708 A _54417 t s d) = (term72 _107708 A _54417 t s d).
Proof. exact (eq_refl (term72 _107708 A _54417 t s d)). Qed.
Lemma lem4558902 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d) = (term70 _107708 A t s d)) = ((_54417 t s d) = (term71 _107708 A t s d)).
Proof. exact (MK_COMB (@lem4558901 _107708 A _54417 t s d) (@lem4558900 _107708 A t s d)). Qed.
Lemma lem4558903 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term229 _107708 A _54417 t s) = (term230 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4558902 _107708 A _54417 t s d)). Qed.
Lemma lem4558904 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558905 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term226 _107708 A _54417 t s) = (term231 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4558904 _107708) (@lem4558903 _107708 A _54417 t s)). Qed.
Lemma lem4558906 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (((_54417 t s) = (term225 _107708 A t s)) = (term226 _107708 A _54417 t s)) = (((_54417 t s) = (term68 _107708 A t s)) = (term231 _107708 A _54417 t s)).
Proof. exact (MK_COMB (@lem4558899 _107708 A _54417 t s) (@lem4558905 _107708 A _54417 t s)). Qed.
Lemma lem4558907 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((_54417 t s) = (term68 _107708 A t s)) = (term231 _107708 A _54417 t s).
Proof. exact (EQ_MP (@lem4558906 _107708 A _54417 t s) (@lem4558893 _107708 A _54417 t s)). Qed.
Lemma lem4558909 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4558910 {_107708 A : Type'} (s : type805 _107708 A) (t : type805 _107708 A) : (s = (term232 _107708 A t)) = (term233 _107708 A s t).
Proof. exact (@lem4558909 Prop (A -> _107708) s t). Qed.
Lemma lem4558911 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d) = (term234 _107708 A t s d)) = (term235 _107708 A _54417 t s d).
Proof. exact (@lem4558910 _107708 A (_54417 t s d) (term71 _107708 A t s d)). Qed.
Lemma lem4558912 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term236 _107708 A t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term236 _107708 A t s d GEN_PVAR_148)). Qed.
Lemma lem4558913 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term234 _107708 A t s d) = (term71 _107708 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4558912 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4558914 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term72 _107708 A _54417 t s d) = (term72 _107708 A _54417 t s d).
Proof. exact (eq_refl (term72 _107708 A _54417 t s d)). Qed.
Lemma lem4558915 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d) = (term234 _107708 A t s d)) = ((_54417 t s d) = (term71 _107708 A t s d)).
Proof. exact (MK_COMB (@lem4558914 _107708 A _54417 t s d) (@lem4558913 _107708 A t s d)). Qed.
Lemma lem4558916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4558917 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term237 _107708 A _54417 t s d) = (term238 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4558916) (@lem4558915 _107708 A _54417 t s d)). Qed.
Lemma lem4558918 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term236 _107708 A t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term236 _107708 A t s d GEN_PVAR_148)). Qed.
Lemma lem4558919 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term239 _107708 A _54417 t s d GEN_PVAR_148) = (term239 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4558920 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term236 _107708 A t s d GEN_PVAR_148)) = ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4558919 _107708 A _54417 t s d GEN_PVAR_148) (@lem4558918 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4558921 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term240 _107708 A _54417 t s d) = (term241 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4558920 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4558922 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4558923 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term235 _107708 A _54417 t s d) = (term242 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4558922 _107708 A) (@lem4558921 _107708 A _54417 t s d)). Qed.
Lemma lem4558924 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (((_54417 t s d) = (term234 _107708 A t s d)) = (term235 _107708 A _54417 t s d)) = (((_54417 t s d) = (term71 _107708 A t s d)) = (term242 _107708 A _54417 t s d)).
Proof. exact (MK_COMB (@lem4558917 _107708 A _54417 t s d) (@lem4558923 _107708 A _54417 t s d)). Qed.
Lemma lem4558925 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d) = (term71 _107708 A t s d)) = (term242 _107708 A _54417 t s d).
Proof. exact (EQ_MP (@lem4558924 _107708 A _54417 t s d) (@lem4558911 _107708 A _54417 t s d)). Qed.
Lemma lem4558926 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d))). Qed.
Lemma lem4558927 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term241 _107708 A _54417 t s d) = (term241 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4558926 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4558928 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4558929 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term242 _107708 A _54417 t s d) = (term242 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4558928 _107708 A) (@lem4558927 _107708 A _54417 t s d)). Qed.
Lemma lem4558930 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d) = (term71 _107708 A t s d)) = (term242 _107708 A _54417 t s d).
Proof. exact (TRANS (@lem4558925 _107708 A _54417 t s d) (@lem4558929 _107708 A _54417 t s d)). Qed.
Lemma lem4558931 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term230 _107708 A _54417 t s) = (term243 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4558930 _107708 A _54417 t s d)). Qed.
Lemma lem4558932 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4558933 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term231 _107708 A _54417 t s) = (term244 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4558932 _107708) (@lem4558931 _107708 A _54417 t s)). Qed.
Lemma lem4558934 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((_54417 t s) = (term68 _107708 A t s)) = (term244 _107708 A _54417 t s).
Proof. exact (TRANS (@lem4558907 _107708 A _54417 t s) (@lem4558933 _107708 A _54417 t s)). Qed.
Lemma lem4558935 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term221 _107708 A _54417 t) = (term245 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4558934 _107708 A _54417 t s)). Qed.
Lemma lem4558936 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4558937 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term222 _107708 A _54417 t) = (term246 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4558936 A) (@lem4558935 _107708 A _54417 t)). Qed.
Lemma lem4558938 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((_54417 t) = (term65 _107708 A t)) = (term246 _107708 A _54417 t).
Proof. exact (TRANS (@lem4558889 _107708 A _54417 t) (@lem4558937 _107708 A _54417 t)). Qed.
Lemma lem4558939 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term212 _107708 A _54417) = (term247 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4558938 _107708 A _54417 t)). Qed.
Lemma lem4558940 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4558941 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term213 _107708 A _54417) = (term248 _107708 A _54417).
Proof. exact (MK_COMB (@lem4558940 _107708) (@lem4558939 _107708 A _54417)). Qed.
Lemma lem4558942 {_107708 A : Type'} (_54417 : type656 _107708 A) : (_54417 = (term63 _107708 A)) = (term248 _107708 A _54417).
Proof. exact (TRANS (@lem4558871 _107708 A _54417) (@lem4558941 _107708 A _54417)). Qed.
Lemma lem4558943 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4558944 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term189 _107708 A _54417) = (term249 _107708 A _54417).
Proof. exact (MK_COMB (@lem4558943) (@lem4558942 _107708 A _54417)). Qed.
Lemma lem4558945 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : (term314 _107705 _107708 A B _54417) = (term314 _107705 _107708 A B _54417).
Proof. exact (eq_refl (term314 _107705 _107708 A B _54417)). Qed.
Lemma lem4558946 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) : (term328 _107705 _107708 A B _54417) = (term334 _107705 _107708 A B _54417).
Proof. exact (MK_COMB (@lem4558944 _107708 A _54417) (@lem4558945 _107705 _107708 A B _54417)). Qed.
Lemma lem4558947 {_107705 _107708 A B : Type'} : (term330 _107705 _107708 A B) = (term335 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4558946 _107705 _107708 A B _54417)). Qed.
Lemma lem4558948 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4558949 {_107705 _107708 A B : Type'} : (term332 _107705 _107708 A B) = (term336 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4558948 _107708 A) (@lem4558947 _107705 _107708 A B)). Qed.
Lemma lem4558950 {_107705 _107708 A B : Type'} : (term320 _107705 _107708 A B) = (term320 _107705 _107708 A B).
Proof. exact (eq_refl (term320 _107705 _107708 A B)). Qed.
Lemma lem4558951 {_107705 _107708 A B : Type'} : ((term292 _107705 _107708 A B) = (term332 _107705 _107708 A B)) = ((term292 _107705 _107708 A B) = (term336 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4558950 _107705 _107708 A B) (@lem4558949 _107705 _107708 A B)). Qed.
Lemma lem4558952 {_107705 _107708 A B : Type'} : (term292 _107705 _107708 A B) = (term336 _107705 _107708 A B).
Proof. exact (EQ_MP (@lem4558951 _107705 _107708 A B) (@lem4558853 _107705 _107708 A B)). Qed.
Lemma lem4558953 {_107705 B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : _54418 = (term337 _107705 B).
Proof. exact (h1). Qed.
Lemma lem4558954 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4558955 {_107705 B : Type'} (t : B -> Prop) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (_54418 t) = (term338 _107705 B t).
Proof. exact (MK_COMB (@lem4558953 _107705 B _54418 h1) (@lem4558954 B t)). Qed.
Lemma lem4558956 {_107705 B : Type'} (t : B -> Prop) : (term338 _107705 B t) = (term339 _107705 B t).
Proof. exact (eq_refl (term338 _107705 B t)). Qed.
Lemma lem4558957 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term340 _107705 B _54418 t) = (term340 _107705 B _54418 t).
Proof. exact (eq_refl (term340 _107705 B _54418 t)). Qed.
Lemma lem4558958 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((_54418 t) = (term338 _107705 B t)) = ((_54418 t) = (term339 _107705 B t)).
Proof. exact (MK_COMB (@lem4558957 _107705 B _54418 t) (@lem4558956 _107705 B t)). Qed.
Lemma lem4558959 {_107705 B : Type'} (t : B -> Prop) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (_54418 t) = (term339 _107705 B t).
Proof. exact (EQ_MP (@lem4558958 _107705 B _54418 t) (@lem4558955 _107705 B t _54418 h1)). Qed.
Lemma lem4558960 {_107705 : Type'} (s : _107705 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4558961 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (_54418 t s) = (term341 _107705 B t s).
Proof. exact (MK_COMB (@lem4558959 _107705 B t _54418 h1) (@lem4558960 _107705 s)). Qed.
Lemma lem4558962 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) : (term341 _107705 B t s) = (term342 _107705 B t s).
Proof. exact (eq_refl (term341 _107705 B t s)). Qed.
Lemma lem4558963 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term343 _107705 B _54418 t s) = (term343 _107705 B _54418 t s).
Proof. exact (eq_refl (term343 _107705 B _54418 t s)). Qed.
Lemma lem4558964 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((_54418 t s) = (term341 _107705 B t s)) = ((_54418 t s) = (term342 _107705 B t s)).
Proof. exact (MK_COMB (@lem4558963 _107705 B _54418 t s) (@lem4558962 _107705 B t s)). Qed.
Lemma lem4558965 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (_54418 t s) = (term342 _107705 B t s).
Proof. exact (EQ_MP (@lem4558964 _107705 B _54418 t s) (@lem4558961 _107705 B t s _54418 h1)). Qed.
Lemma lem4558966 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4558967 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (_54418 t s d) = (term344 _107705 B t s d).
Proof. exact (MK_COMB (@lem4558965 _107705 B t s _54418 h1) (@lem4558966 B d)). Qed.
Lemma lem4558968 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term344 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (eq_refl (term344 _107705 B t s d)). Qed.
Lemma lem4558969 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term345 _107705 B _54418 t s d) = (term345 _107705 B _54418 t s d).
Proof. exact (eq_refl (term345 _107705 B _54418 t s d)). Qed.
Lemma lem4558970 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d) = (term344 _107705 B t s d)) = ((_54418 t s d) = (term85 _107705 B t s d)).
Proof. exact (MK_COMB (@lem4558969 _107705 B _54418 t s d) (@lem4558968 _107705 B t s d)). Qed.
Lemma lem4558971 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (_54418 t s d) = (term85 _107705 B t s d).
Proof. exact (EQ_MP (@lem4558970 _107705 B _54418 t s d) (@lem4558967 _107705 B t s d _54418 h1)). Qed.
Lemma lem4558977 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4558981 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4558998 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term73 A B s f x d) = (term73 A B s f x d).
Proof. exact (eq_refl (term73 A B s f x d)). Qed.
Lemma lem4558999 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term74 A B s f d) = (term74 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4558998 A B s f x d)). Qed.
Lemma lem4559000 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4559001 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term75 A B s f d) = (term75 A B s f d).
Proof. exact (MK_COMB (@lem4559000 A) (@lem4558999 A B s f d)). Qed.
Lemma lem4559016 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term76 A B s f x t) = (term76 A B s f x t).
Proof. exact (eq_refl (term76 A B s f x t)). Qed.
Lemma lem4559017 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term77 A B s f t) = (term77 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4559016 A B s f x t)). Qed.
Lemma lem4559018 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4559019 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term78 A B s f t) = (term78 A B s f t).
Proof. exact (MK_COMB (@lem4559018 A) (@lem4559017 A B s f t)). Qed.
Lemma lem4559020 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4559021 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term79 A B s f t) = (term79 A B s f t).
Proof. exact (MK_COMB (@lem4559020) (@lem4559019 A B s f t)). Qed.
Lemma lem4559022 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term80 A B t s f d) = (term80 A B t s f d).
Proof. exact (MK_COMB (@lem4559021 A B s f t) (@lem4559001 A B s f d)). Qed.
Lemma lem4559025 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4559026 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term81 A B GEN_PVAR_148 t s f d) = (term81 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4559025 A B GEN_PVAR_148) (@lem4559022 A B t s f d)). Qed.
Lemma lem4559027 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4559026 A B GEN_PVAR_148 t s f d) (@lem4558981 A B f)). Qed.
Lemma lem4559028 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4559027 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4559029 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4559030 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4559029 A B) (@lem4559028 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4559031 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term85 A B t s d) = (term85 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4559030 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4559032 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4559033 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term86 A B t s d) = (term86 A B t s d).
Proof. exact (MK_COMB (@lem4559032 A B) (@lem4559031 A B t s d)). Qed.
Lemma lem4559034 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4559035 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term87 A B t s d) = (term87 A B t s d).
Proof. exact (MK_COMB (@lem4559034 A B) (@lem4559033 A B t s d)). Qed.
Lemma lem4559036 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term88 A B t s d n m) = (term88 A B t s d n m).
Proof. exact (MK_COMB (@lem4559035 A B t s d) (@lem4558977 n m)). Qed.
Lemma lem4559051 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 A B s m t n) = (term89 A B s m t n).
Proof. exact (eq_refl (term89 A B s m t n)). Qed.
Lemma lem4559052 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term90 A B t s d n m) = (term90 A B t s d n m).
Proof. exact (MK_COMB (@lem4559051 A B s m t n) (@lem4559036 A B t s d n m)). Qed.
Lemma lem4559053 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 A B t d n m) = (term91 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4559052 A B t s d n m)). Qed.
Lemma lem4559054 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4559055 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 A B t d n m) = (term92 A B t d n m).
Proof. exact (MK_COMB (@lem4559054 A) (@lem4559053 A B t d n m)). Qed.
Lemma lem4559056 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 A B t d n) = (term93 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4559055 A B t d n m)). Qed.
Lemma lem4559057 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559058 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 A B t d n) = (term94 A B t d n).
Proof. exact (MK_COMB (@lem4559057) (@lem4559056 A B t d n)). Qed.
Lemma lem4559059 {A B : Type'} (d : B) (n : nat) : (term95 A B d n) = (term95 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4559058 A B t d n)). Qed.
Lemma lem4559060 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4559061 {A B : Type'} (d : B) (n : nat) : (term96 A B d n) = (term96 A B d n).
Proof. exact (MK_COMB (@lem4559060 B) (@lem4559059 A B d n)). Qed.
Lemma lem4559062 {A B : Type'} (d : B) : (term97 A B d) = (term97 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4559061 A B d n)). Qed.
Lemma lem4559063 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559064 {A B : Type'} (d : B) : (term98 A B d) = (term98 A B d).
Proof. exact (MK_COMB (@lem4559063) (@lem4559062 A B d)). Qed.
Lemma lem4559065 {A B : Type'} : (term99 A B) = (term99 A B).
Proof. exact (fun_ext (fun d : B => @lem4559064 A B d)). Qed.
Lemma lem4559066 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4559067 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4559066 B) (@lem4559065 A B)). Qed.
Lemma lem4559068 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4559069 {A B : Type'} : (term21 A B) = (term21 A B).
Proof. exact (MK_COMB (@lem4559068) (@lem4559067 A B)). Qed.
Lemma lem4559074 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4559078 {_107708 B : Type'} (f : _107708 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4559095 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (d : B) : (term73 _107708 B s f x d) = (term73 _107708 B s f x d).
Proof. exact (eq_refl (term73 _107708 B s f x d)). Qed.
Lemma lem4559096 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term74 _107708 B s f d) = (term74 _107708 B s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4559095 _107708 B s f x d)). Qed.
Lemma lem4559097 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4559098 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term75 _107708 B s f d) = (term75 _107708 B s f d).
Proof. exact (MK_COMB (@lem4559097 _107708) (@lem4559096 _107708 B s f d)). Qed.
Lemma lem4559113 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (t : B -> Prop) : (term76 _107708 B s f x t) = (term76 _107708 B s f x t).
Proof. exact (eq_refl (term76 _107708 B s f x t)). Qed.
Lemma lem4559114 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term77 _107708 B s f t) = (term77 _107708 B s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4559113 _107708 B s f x t)). Qed.
Lemma lem4559115 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4559116 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term78 _107708 B s f t) = (term78 _107708 B s f t).
Proof. exact (MK_COMB (@lem4559115 _107708) (@lem4559114 _107708 B s f t)). Qed.
Lemma lem4559117 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4559118 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term79 _107708 B s f t) = (term79 _107708 B s f t).
Proof. exact (MK_COMB (@lem4559117) (@lem4559116 _107708 B s f t)). Qed.
Lemma lem4559119 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term80 _107708 B t s f d) = (term80 _107708 B t s f d).
Proof. exact (MK_COMB (@lem4559118 _107708 B s f t) (@lem4559098 _107708 B s f d)). Qed.
Lemma lem4559122 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) : (@SETSPEC (_107708 -> B) GEN_PVAR_148) = (@SETSPEC (_107708 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107708 -> B) GEN_PVAR_148)). Qed.
Lemma lem4559123 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term81 _107708 B GEN_PVAR_148 t s f d) = (term81 _107708 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4559122 _107708 B GEN_PVAR_148) (@lem4559119 _107708 B t s f d)). Qed.
Lemma lem4559124 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4559123 _107708 B GEN_PVAR_148 t s f d) (@lem4559078 _107708 B f)). Qed.
Lemma lem4559125 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4559124 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4559126 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4559127 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4559126 _107708 B) (@lem4559125 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4559128 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term85 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4559127 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4559129 {_107708 B : Type'} : (@GSPEC (_107708 -> B)) = (@GSPEC (_107708 -> B)).
Proof. exact (eq_refl (@GSPEC (_107708 -> B))). Qed.
Lemma lem4559130 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term86 _107708 B t s d) = (term86 _107708 B t s d).
Proof. exact (MK_COMB (@lem4559129 _107708 B) (@lem4559128 _107708 B t s d)). Qed.
Lemma lem4559131 {_107708 B : Type'} : (@HAS_SIZE (_107708 -> B)) = (@HAS_SIZE (_107708 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> B))). Qed.
Lemma lem4559132 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term87 _107708 B t s d) = (term87 _107708 B t s d).
Proof. exact (MK_COMB (@lem4559131 _107708 B) (@lem4559130 _107708 B t s d)). Qed.
Lemma lem4559133 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term88 _107708 B t s d n m) = (term88 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4559132 _107708 B t s d) (@lem4559074 n m)). Qed.
Lemma lem4559148 {_107708 B : Type'} (s : _107708 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107708 B s m t n) = (term89 _107708 B s m t n).
Proof. exact (eq_refl (term89 _107708 B s m t n)). Qed.
Lemma lem4559149 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term90 _107708 B t s d n m) = (term90 _107708 B t s d n m).
Proof. exact (MK_COMB (@lem4559148 _107708 B s m t n) (@lem4559133 _107708 B t s d n m)). Qed.
Lemma lem4559150 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 _107708 B t d n m) = (term91 _107708 B t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4559149 _107708 B t s d n m)). Qed.
Lemma lem4559151 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559152 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 _107708 B t d n m) = (term92 _107708 B t d n m).
Proof. exact (MK_COMB (@lem4559151 _107708) (@lem4559150 _107708 B t d n m)). Qed.
Lemma lem4559153 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 _107708 B t d n) = (term93 _107708 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4559152 _107708 B t d n m)). Qed.
Lemma lem4559154 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559155 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 _107708 B t d n) = (term94 _107708 B t d n).
Proof. exact (MK_COMB (@lem4559154) (@lem4559153 _107708 B t d n)). Qed.
Lemma lem4559156 {_107708 B : Type'} (d : B) (n : nat) : (term95 _107708 B d n) = (term95 _107708 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4559155 _107708 B t d n)). Qed.
Lemma lem4559157 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4559158 {_107708 B : Type'} (d : B) (n : nat) : (term96 _107708 B d n) = (term96 _107708 B d n).
Proof. exact (MK_COMB (@lem4559157 B) (@lem4559156 _107708 B d n)). Qed.
Lemma lem4559159 {_107708 B : Type'} (d : B) : (term97 _107708 B d) = (term97 _107708 B d).
Proof. exact (fun_ext (fun n : nat => @lem4559158 _107708 B d n)). Qed.
Lemma lem4559160 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559161 {_107708 B : Type'} (d : B) : (term98 _107708 B d) = (term98 _107708 B d).
Proof. exact (MK_COMB (@lem4559160) (@lem4559159 _107708 B d)). Qed.
Lemma lem4559162 {_107708 B : Type'} : (term99 _107708 B) = (term99 _107708 B).
Proof. exact (fun_ext (fun d : B => @lem4559161 _107708 B d)). Qed.
Lemma lem4559163 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4559164 {_107708 B : Type'} : (term12 _107708 B) = (term12 _107708 B).
Proof. exact (MK_COMB (@lem4559163 B) (@lem4559162 _107708 B)). Qed.
Lemma lem4559165 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559166 {_107708 B : Type'} : (term22 _107708 B) = (term22 _107708 B).
Proof. exact (MK_COMB (@lem4559165) (@lem4559164 _107708 B)). Qed.
Lemma lem4559167 {_107708 A B : Type'} : (term24 _107708 A B) = (term24 _107708 A B).
Proof. exact (MK_COMB (@lem4559166 _107708 B) (@lem4559069 A B)). Qed.
Lemma lem4559172 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4559174 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term85 _107705 B t s d) = (_54418 t s d).
Proof. exact (SYM (@lem4558971 _107705 B t s d _54418 h1)). Qed.
Lemma lem4559175 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term85 _107705 B t s d) = (_54418 t s d).
Proof. exact (@lem4559174 _107705 B t s d _54418 h1). Qed.
Lemma lem4559176 {_107705 B : Type'} : (@GSPEC (_107705 -> B)) = (@GSPEC (_107705 -> B)).
Proof. exact (eq_refl (@GSPEC (_107705 -> B))). Qed.
Lemma lem4559177 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term86 _107705 B t s d) = (term346 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4559176 _107705 B) (@lem4559175 _107705 B t s d _54418 h1)). Qed.
Lemma lem4559178 {_107705 B : Type'} : (@HAS_SIZE (_107705 -> B)) = (@HAS_SIZE (_107705 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107705 -> B))). Qed.
Lemma lem4559179 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term87 _107705 B t s d) = (term347 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4559178 _107705 B) (@lem4559177 _107705 B t s d _54418 h1)). Qed.
Lemma lem4559180 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term88 _107705 B t s d n m) = (term348 _107705 B _54418 t s d n m).
Proof. exact (MK_COMB (@lem4559179 _107705 B t s d _54418 h1) (@lem4559172 n m)). Qed.
Lemma lem4559195 {_107705 B : Type'} (s : _107705 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107705 B s m t n) = (term89 _107705 B s m t n).
Proof. exact (eq_refl (term89 _107705 B s m t n)). Qed.
Lemma lem4559196 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term90 _107705 B t s d n m) = (term349 _107705 B _54418 t s d n m).
Proof. exact (MK_COMB (@lem4559195 _107705 B s m t n) (@lem4559180 _107705 B t s d n m _54418 h1)). Qed.
Lemma lem4559197 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term91 _107705 B t d n m) = (term350 _107705 B _54418 t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4559196 _107705 B t s d n m _54418 h1)). Qed.
Lemma lem4559198 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559199 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term92 _107705 B t d n m) = (term351 _107705 B _54418 t d n m).
Proof. exact (MK_COMB (@lem4559198 _107705) (@lem4559197 _107705 B t d n m _54418 h1)). Qed.
Lemma lem4559200 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term93 _107705 B t d n) = (term352 _107705 B _54418 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4559199 _107705 B t d n m _54418 h1)). Qed.
Lemma lem4559201 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559202 {_107705 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term94 _107705 B t d n) = (term353 _107705 B _54418 t d n).
Proof. exact (MK_COMB (@lem4559201) (@lem4559200 _107705 B t d n _54418 h1)). Qed.
Lemma lem4559203 {_107705 B : Type'} (d : B) (n : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term95 _107705 B d n) = (term354 _107705 B _54418 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4559202 _107705 B t d n _54418 h1)). Qed.
Lemma lem4559204 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4559205 {_107705 B : Type'} (d : B) (n : nat) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term96 _107705 B d n) = (term355 _107705 B _54418 d n).
Proof. exact (MK_COMB (@lem4559204 B) (@lem4559203 _107705 B d n _54418 h1)). Qed.
Lemma lem4559206 {_107705 B : Type'} (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term97 _107705 B d) = (term356 _107705 B _54418 d).
Proof. exact (fun_ext (fun n : nat => @lem4559205 _107705 B d n _54418 h1)). Qed.
Lemma lem4559207 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559208 {_107705 B : Type'} (d : B) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term98 _107705 B d) = (term357 _107705 B _54418 d).
Proof. exact (MK_COMB (@lem4559207) (@lem4559206 _107705 B d _54418 h1)). Qed.
Lemma lem4559209 {_107705 B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term99 _107705 B) = (term358 _107705 B _54418).
Proof. exact (fun_ext (fun d : B => @lem4559208 _107705 B d _54418 h1)). Qed.
Lemma lem4559210 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4559211 {_107705 B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term12 _107705 B) = (term359 _107705 B _54418).
Proof. exact (MK_COMB (@lem4559210 B) (@lem4559209 _107705 B _54418 h1)). Qed.
Lemma lem4559212 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559213 {_107705 B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term22 _107705 B) = (term360 _107705 B _54418).
Proof. exact (MK_COMB (@lem4559212) (@lem4559211 _107705 B _54418 h1)). Qed.
Lemma lem4559214 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term26 _107705 _107708 A B) = (term361 _107705 _107708 A B _54418).
Proof. exact (MK_COMB (@lem4559213 _107705 B _54418 h1) (@lem4559167 _107708 A B)). Qed.
Lemma lem4559247 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term129 _107708 A _54417 t s d n m) = (term129 _107708 A _54417 t s d n m).
Proof. exact (eq_refl (term129 _107708 A _54417 t s d n m)). Qed.
Lemma lem4559248 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term130 _107708 A _54417 t d n m) = (term130 _107708 A _54417 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4559247 _107708 A _54417 t s d n m)). Qed.
Lemma lem4559249 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4559250 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term131 _107708 A _54417 t d n m) = (term131 _107708 A _54417 t d n m).
Proof. exact (MK_COMB (@lem4559249 A) (@lem4559248 _107708 A _54417 t d n m)). Qed.
Lemma lem4559251 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term132 _107708 A _54417 t d n) = (term132 _107708 A _54417 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4559250 _107708 A _54417 t d n m)). Qed.
Lemma lem4559252 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559253 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term133 _107708 A _54417 t d n) = (term133 _107708 A _54417 t d n).
Proof. exact (MK_COMB (@lem4559252) (@lem4559251 _107708 A _54417 t d n)). Qed.
Lemma lem4559254 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term134 _107708 A _54417 d n) = (term134 _107708 A _54417 d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4559253 _107708 A _54417 t d n)). Qed.
Lemma lem4559255 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559256 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term135 _107708 A _54417 d n) = (term135 _107708 A _54417 d n).
Proof. exact (MK_COMB (@lem4559255 _107708) (@lem4559254 _107708 A _54417 d n)). Qed.
Lemma lem4559257 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term136 _107708 A _54417 d) = (term136 _107708 A _54417 d).
Proof. exact (fun_ext (fun n : nat => @lem4559256 _107708 A _54417 d n)). Qed.
Lemma lem4559258 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559259 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term137 _107708 A _54417 d) = (term137 _107708 A _54417 d).
Proof. exact (MK_COMB (@lem4559258) (@lem4559257 _107708 A _54417 d)). Qed.
Lemma lem4559260 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term138 _107708 A _54417) = (term138 _107708 A _54417).
Proof. exact (fun_ext (fun d : _107708 => @lem4559259 _107708 A _54417 d)). Qed.
Lemma lem4559261 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4559262 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term139 _107708 A _54417) = (term139 _107708 A _54417).
Proof. exact (MK_COMB (@lem4559261 _107708) (@lem4559260 _107708 A _54417)). Qed.
Lemma lem4559263 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559264 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term140 _107708 A _54417) = (term140 _107708 A _54417).
Proof. exact (MK_COMB (@lem4559263) (@lem4559262 _107708 A _54417)). Qed.
Lemma lem4559265 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term293 _107705 _107708 A B _54417) = (term362 _107705 _107708 A B _54417 _54418).
Proof. exact (MK_COMB (@lem4559264 _107708 A _54417) (@lem4559214 _107705 _107708 A B _54418 h1)). Qed.
Lemma lem4559298 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 A _54416 t s d n m) = (term129 _107705 A _54416 t s d n m).
Proof. exact (eq_refl (term129 _107705 A _54416 t s d n m)). Qed.
Lemma lem4559299 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 A _54416 t d n m) = (term130 _107705 A _54416 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4559298 _107705 A _54416 t s d n m)). Qed.
Lemma lem4559300 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4559301 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 A _54416 t d n m) = (term131 _107705 A _54416 t d n m).
Proof. exact (MK_COMB (@lem4559300 A) (@lem4559299 _107705 A _54416 t d n m)). Qed.
Lemma lem4559302 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 A _54416 t d n) = (term132 _107705 A _54416 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4559301 _107705 A _54416 t d n m)). Qed.
Lemma lem4559303 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559304 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 A _54416 t d n) = (term133 _107705 A _54416 t d n).
Proof. exact (MK_COMB (@lem4559303) (@lem4559302 _107705 A _54416 t d n)). Qed.
Lemma lem4559305 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term134 _107705 A _54416 d n) = (term134 _107705 A _54416 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4559304 _107705 A _54416 t d n)). Qed.
Lemma lem4559306 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559307 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term135 _107705 A _54416 d n) = (term135 _107705 A _54416 d n).
Proof. exact (MK_COMB (@lem4559306 _107705) (@lem4559305 _107705 A _54416 d n)). Qed.
Lemma lem4559308 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term136 _107705 A _54416 d) = (term136 _107705 A _54416 d).
Proof. exact (fun_ext (fun n : nat => @lem4559307 _107705 A _54416 d n)). Qed.
Lemma lem4559309 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559310 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term137 _107705 A _54416 d) = (term137 _107705 A _54416 d).
Proof. exact (MK_COMB (@lem4559309) (@lem4559308 _107705 A _54416 d)). Qed.
Lemma lem4559311 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term138 _107705 A _54416) = (term138 _107705 A _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4559310 _107705 A _54416 d)). Qed.
Lemma lem4559312 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4559313 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term139 _107705 A _54416) = (term139 _107705 A _54416).
Proof. exact (MK_COMB (@lem4559312 _107705) (@lem4559311 _107705 A _54416)). Qed.
Lemma lem4559314 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559315 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term140 _107705 A _54416) = (term140 _107705 A _54416).
Proof. exact (MK_COMB (@lem4559314) (@lem4559313 _107705 A _54416)). Qed.
Lemma lem4559316 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term294 _107705 _107708 A B _54416 _54417) = (term363 _107705 _107708 A B _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559315 _107705 A _54416) (@lem4559265 _107705 _107708 A B _54417 _54418 h1)). Qed.
Lemma lem4559349 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term129 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4559350 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4559349 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4559351 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559352 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4559351 _107708) (@lem4559350 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4559353 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4559352 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4559354 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559355 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4559354) (@lem4559353 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4559356 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4559355 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4559357 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559358 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4559357 _107705) (@lem4559356 _107705 _107708 _54415 d n)). Qed.
Lemma lem4559359 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4559358 _107705 _107708 _54415 d n)). Qed.
Lemma lem4559360 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559361 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4559360) (@lem4559359 _107705 _107708 _54415 d)). Qed.
Lemma lem4559362 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4559361 _107705 _107708 _54415 d)). Qed.
Lemma lem4559363 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4559364 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4559363 _107705) (@lem4559362 _107705 _107708 _54415)). Qed.
Lemma lem4559365 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559366 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term140 _107705 _107708 _54415) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4559365) (@lem4559364 _107705 _107708 _54415)). Qed.
Lemma lem4559367 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term295 _107705 _107708 A B _54415 _54416 _54417) = (term364 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559366 _107705 _107708 _54415) (@lem4559316 _107705 _107708 A B _54416 _54417 _54418 h1)). Qed.
Lemma lem4559388 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4559389 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4559388 A B s n)). Qed.
Lemma lem4559390 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559391 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4559390) (@lem4559389 A B s)). Qed.
Lemma lem4559392 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4559391 A B s)). Qed.
Lemma lem4559393 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4559394 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4559393 A B) (@lem4559392 A B)). Qed.
Lemma lem4559395 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559396 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4559395) (@lem4559394 A B)). Qed.
Lemma lem4559397 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term296 _107705 _107708 A B _54415 _54416 _54417) = (term365 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559396 A B) (@lem4559367 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559418 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4559419 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4559418 _107708 A s n)). Qed.
Lemma lem4559420 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559421 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4559420) (@lem4559419 _107708 A s)). Qed.
Lemma lem4559422 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4559421 _107708 A s)). Qed.
Lemma lem4559423 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4559424 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4559423 _107708 A) (@lem4559422 _107708 A)). Qed.
Lemma lem4559425 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559426 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4559425) (@lem4559424 _107708 A)). Qed.
Lemma lem4559427 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term297 _107705 _107708 A B _54415 _54416 _54417) = (term366 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559426 _107708 A) (@lem4559397 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559448 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4559449 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4559448 _107705 A s n)). Qed.
Lemma lem4559450 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559451 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4559450) (@lem4559449 _107705 A s)). Qed.
Lemma lem4559452 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4559451 _107705 A s)). Qed.
Lemma lem4559453 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4559454 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4559453 _107705 A) (@lem4559452 _107705 A)). Qed.
Lemma lem4559455 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559456 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4559455) (@lem4559454 _107705 A)). Qed.
Lemma lem4559457 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term298 _107705 _107708 A B _54415 _54416 _54417) = (term367 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559456 _107705 A) (@lem4559427 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559478 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4559479 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4559478 _107708 B s n)). Qed.
Lemma lem4559480 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559481 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4559480) (@lem4559479 _107708 B s)). Qed.
Lemma lem4559482 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4559481 _107708 B s)). Qed.
Lemma lem4559483 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4559484 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4559483 _107708 B) (@lem4559482 _107708 B)). Qed.
Lemma lem4559485 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559486 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4559485) (@lem4559484 _107708 B)). Qed.
Lemma lem4559487 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term299 _107705 _107708 A B _54415 _54416 _54417) = (term368 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559486 _107708 B) (@lem4559457 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559508 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4559509 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4559508 _107705 _107708 s n)). Qed.
Lemma lem4559510 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559511 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4559510) (@lem4559509 _107705 _107708 s)). Qed.
Lemma lem4559512 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4559511 _107705 _107708 s)). Qed.
Lemma lem4559513 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4559514 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4559513 _107705 _107708) (@lem4559512 _107705 _107708)). Qed.
Lemma lem4559515 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559516 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4559515) (@lem4559514 _107705 _107708)). Qed.
Lemma lem4559517 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term300 _107705 _107708 A B _54415 _54416 _54417) = (term369 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559516 _107705 _107708) (@lem4559487 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559538 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4559539 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4559538 _107705 B s n)). Qed.
Lemma lem4559540 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559541 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4559540) (@lem4559539 _107705 B s)). Qed.
Lemma lem4559542 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4559541 _107705 B s)). Qed.
Lemma lem4559543 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4559544 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4559543 _107705 B) (@lem4559542 _107705 B)). Qed.
Lemma lem4559545 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559546 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4559545) (@lem4559544 _107705 B)). Qed.
Lemma lem4559547 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term301 _107705 _107708 A B _54415 _54416 _54417) = (term370 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559546 _107705 B) (@lem4559517 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559568 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4559569 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4559568 B s n)). Qed.
Lemma lem4559570 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559571 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4559570) (@lem4559569 B s)). Qed.
Lemma lem4559572 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4559571 B s)). Qed.
Lemma lem4559573 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4559574 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4559573 B) (@lem4559572 B)). Qed.
Lemma lem4559575 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559576 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4559575) (@lem4559574 B)). Qed.
Lemma lem4559577 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term302 _107705 _107708 A B _54415 _54416 _54417) = (term371 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559576 B) (@lem4559547 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559598 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4559599 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4559598 A s n)). Qed.
Lemma lem4559600 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559601 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4559600) (@lem4559599 A s)). Qed.
Lemma lem4559602 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4559601 A s)). Qed.
Lemma lem4559603 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4559604 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4559603 A) (@lem4559602 A)). Qed.
Lemma lem4559605 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559606 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4559605) (@lem4559604 A)). Qed.
Lemma lem4559607 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term303 _107705 _107708 A B _54415 _54416 _54417) = (term372 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559606 A) (@lem4559577 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559628 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4559629 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4559628 _107708 s n)). Qed.
Lemma lem4559630 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559631 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4559630) (@lem4559629 _107708 s)). Qed.
Lemma lem4559632 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4559631 _107708 s)). Qed.
Lemma lem4559633 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559634 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4559633 _107708) (@lem4559632 _107708)). Qed.
Lemma lem4559635 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559636 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4559635) (@lem4559634 _107708)). Qed.
Lemma lem4559637 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term304 _107705 _107708 A B _54415 _54416 _54417) = (term373 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559636 _107708) (@lem4559607 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559658 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4559659 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4559658 _107705 s n)). Qed.
Lemma lem4559660 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4559661 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4559660) (@lem4559659 _107705 s)). Qed.
Lemma lem4559662 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4559661 _107705 s)). Qed.
Lemma lem4559663 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559664 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4559663 _107705) (@lem4559662 _107705)). Qed.
Lemma lem4559665 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559666 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4559665) (@lem4559664 _107705)). Qed.
Lemma lem4559667 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term305 _107705 _107708 A B _54415 _54416 _54417) = (term374 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559666 _107705) (@lem4559637 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559690 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term168 _107705 _107708 _54415 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4559691 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term170 _107705 _107708 _54415 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4559690 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4559692 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559693 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term172 _107705 _107708 _54415 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4559692 _107705) (@lem4559691 _107705 _107708 _54415 s d)). Qed.
Lemma lem4559694 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term174 _107705 _107708 _54415 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4559693 _107705 _107708 _54415 s d)). Qed.
Lemma lem4559695 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559696 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term175 _107705 _107708 _54415 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4559695 _107708) (@lem4559694 _107705 _107708 _54415 d)). Qed.
Lemma lem4559697 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4559698 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4559697) (@lem4559696 _107705 _107708 _54415 d)). Qed.
Lemma lem4559699 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559700 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term177 _107705 _107708 _54415 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4559699) (@lem4559698 _107705 _107708 _54415 d)). Qed.
Lemma lem4559701 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term306 _107705 _107708 A B d _54415 _54416 _54417) = (term375 _107705 _107708 A B d _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559700 _107705 _107708 _54415 d) (@lem4559667 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559702 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term307 _107705 _107708 A B _54415 _54416 _54417) = (term376 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (fun_ext (fun d : _107705 => @lem4559701 _107705 _107708 A B d _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559703 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4559704 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term308 _107705 _107708 A B _54415 _54416 _54417) = (term377 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559703 _107705) (@lem4559702 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559705 {_107705 _107708 : Type'} (f : _107708 -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4559722 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (d : _107705) : (term100 _107705 _107708 s f x d) = (term100 _107705 _107708 s f x d).
Proof. exact (eq_refl (term100 _107705 _107708 s f x d)). Qed.
Lemma lem4559723 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term101 _107705 _107708 s f d) = (term101 _107705 _107708 s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4559722 _107705 _107708 s f x d)). Qed.
Lemma lem4559724 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4559725 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term102 _107705 _107708 s f d) = (term102 _107705 _107708 s f d).
Proof. exact (MK_COMB (@lem4559724 _107708) (@lem4559723 _107705 _107708 s f d)). Qed.
Lemma lem4559740 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (t : _107705 -> Prop) : (term103 _107705 _107708 s f x t) = (term103 _107705 _107708 s f x t).
Proof. exact (eq_refl (term103 _107705 _107708 s f x t)). Qed.
Lemma lem4559741 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term104 _107705 _107708 s f t) = (term104 _107705 _107708 s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4559740 _107705 _107708 s f x t)). Qed.
Lemma lem4559742 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4559743 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term105 _107705 _107708 s f t) = (term105 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4559742 _107708) (@lem4559741 _107705 _107708 s f t)). Qed.
Lemma lem4559744 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4559745 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term106 _107705 _107708 s f t) = (term106 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4559744) (@lem4559743 _107705 _107708 s f t)). Qed.
Lemma lem4559746 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term107 _107705 _107708 t s f d) = (term107 _107705 _107708 t s f d).
Proof. exact (MK_COMB (@lem4559745 _107705 _107708 s f t) (@lem4559725 _107705 _107708 s f d)). Qed.
Lemma lem4559749 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) : (@SETSPEC (_107708 -> _107705) GEN_PVAR_150) = (@SETSPEC (_107708 -> _107705) GEN_PVAR_150).
Proof. exact (eq_refl (@SETSPEC (_107708 -> _107705) GEN_PVAR_150)). Qed.
Lemma lem4559750 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term108 _107705 _107708 GEN_PVAR_150 t s f d) = (term108 _107705 _107708 GEN_PVAR_150 t s f d).
Proof. exact (MK_COMB (@lem4559749 _107705 _107708 GEN_PVAR_150) (@lem4559746 _107705 _107708 t s f d)). Qed.
Lemma lem4559751 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4559750 _107705 _107708 GEN_PVAR_150 t s f d) (@lem4559705 _107705 _107708 f)). Qed.
Lemma lem4559752 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4559751 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4559753 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4559754 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4559753 _107705 _107708) (@lem4559752 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4559765 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4559766 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4559765 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4559754 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4559767 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4559766 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4559768 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4559769 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4559768 _107705 _107708) (@lem4559767 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4559770 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4559769 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4559771 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4559772 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4559771 _107705) (@lem4559770 _107705 _107708 _54415 t s)). Qed.
Lemma lem4559773 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4559772 _107705 _107708 _54415 t s)). Qed.
Lemma lem4559774 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559775 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4559774 _107708) (@lem4559773 _107705 _107708 _54415 t)). Qed.
Lemma lem4559776 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4559775 _107705 _107708 _54415 t)). Qed.
Lemma lem4559777 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559778 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4559777 _107705) (@lem4559776 _107705 _107708 _54415)). Qed.
Lemma lem4559779 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559780 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term249 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4559779) (@lem4559778 _107705 _107708 _54415)). Qed.
Lemma lem4559781 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term309 _107705 _107708 A B _54415 _54416 _54417) = (term378 _107705 _107708 A B _54415 _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559780 _107705 _107708 _54415) (@lem4559704 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559782 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term310 _107705 _107708 A B _54416 _54417) = (term379 _107705 _107708 A B _54416 _54417 _54418).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4559781 _107705 _107708 A B _54415 _54416 _54417 _54418 h1)). Qed.
Lemma lem4559783 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4559784 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term311 _107705 _107708 A B _54416 _54417) = (term380 _107705 _107708 A B _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559783 _107705 _107708) (@lem4559782 _107705 _107708 A B _54416 _54417 _54418 h1)). Qed.
Lemma lem4559785 {_107705 A : Type'} (f : A -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4559802 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (d : _107705) : (term100 _107705 A s f x d) = (term100 _107705 A s f x d).
Proof. exact (eq_refl (term100 _107705 A s f x d)). Qed.
Lemma lem4559803 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term101 _107705 A s f d) = (term101 _107705 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4559802 _107705 A s f x d)). Qed.
Lemma lem4559804 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4559805 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term102 _107705 A s f d) = (term102 _107705 A s f d).
Proof. exact (MK_COMB (@lem4559804 A) (@lem4559803 _107705 A s f d)). Qed.
Lemma lem4559820 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (t : _107705 -> Prop) : (term103 _107705 A s f x t) = (term103 _107705 A s f x t).
Proof. exact (eq_refl (term103 _107705 A s f x t)). Qed.
Lemma lem4559821 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term104 _107705 A s f t) = (term104 _107705 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4559820 _107705 A s f x t)). Qed.
Lemma lem4559822 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4559823 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term105 _107705 A s f t) = (term105 _107705 A s f t).
Proof. exact (MK_COMB (@lem4559822 A) (@lem4559821 _107705 A s f t)). Qed.
Lemma lem4559824 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4559825 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term106 _107705 A s f t) = (term106 _107705 A s f t).
Proof. exact (MK_COMB (@lem4559824) (@lem4559823 _107705 A s f t)). Qed.
Lemma lem4559826 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term107 _107705 A t s f d) = (term107 _107705 A t s f d).
Proof. exact (MK_COMB (@lem4559825 _107705 A s f t) (@lem4559805 _107705 A s f d)). Qed.
Lemma lem4559829 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) : (@SETSPEC (A -> _107705) GEN_PVAR_148) = (@SETSPEC (A -> _107705) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107705) GEN_PVAR_148)). Qed.
Lemma lem4559830 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term108 _107705 A GEN_PVAR_148 t s f d) = (term108 _107705 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4559829 _107705 A GEN_PVAR_148) (@lem4559826 _107705 A t s f d)). Qed.
Lemma lem4559831 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4559830 _107705 A GEN_PVAR_148 t s f d) (@lem4559785 _107705 A f)). Qed.
Lemma lem4559832 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4559831 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4559833 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4559834 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4559833 _107705 A) (@lem4559832 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4559845 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term239 _107705 A _54416 t s d GEN_PVAR_148) = (term239 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4559846 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4559845 _107705 A _54416 t s d GEN_PVAR_148) (@lem4559834 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4559847 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4559846 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4559848 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4559849 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4559848 _107705 A) (@lem4559847 _107705 A _54416 t s d)). Qed.
Lemma lem4559850 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term243 _107705 A _54416 t s) = (term243 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4559849 _107705 A _54416 t s d)). Qed.
Lemma lem4559851 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4559852 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term244 _107705 A _54416 t s) = (term244 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4559851 _107705) (@lem4559850 _107705 A _54416 t s)). Qed.
Lemma lem4559853 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term245 _107705 A _54416 t) = (term245 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4559852 _107705 A _54416 t s)). Qed.
Lemma lem4559854 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4559855 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term246 _107705 A _54416 t) = (term246 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4559854 A) (@lem4559853 _107705 A _54416 t)). Qed.
Lemma lem4559856 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term247 _107705 A _54416) = (term247 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4559855 _107705 A _54416 t)). Qed.
Lemma lem4559857 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4559858 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term248 _107705 A _54416).
Proof. exact (MK_COMB (@lem4559857 _107705) (@lem4559856 _107705 A _54416)). Qed.
Lemma lem4559859 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559860 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term249 _107705 A _54416) = (term249 _107705 A _54416).
Proof. exact (MK_COMB (@lem4559859) (@lem4559858 _107705 A _54416)). Qed.
Lemma lem4559861 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term312 _107705 _107708 A B _54416 _54417) = (term381 _107705 _107708 A B _54416 _54417 _54418).
Proof. exact (MK_COMB (@lem4559860 _107705 A _54416) (@lem4559784 _107705 _107708 A B _54416 _54417 _54418 h1)). Qed.
Lemma lem4559862 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term313 _107705 _107708 A B _54417) = (term382 _107705 _107708 A B _54417 _54418).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4559861 _107705 _107708 A B _54416 _54417 _54418 h1)). Qed.
Lemma lem4559863 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4559864 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term314 _107705 _107708 A B _54417) = (term383 _107705 _107708 A B _54417 _54418).
Proof. exact (MK_COMB (@lem4559863 _107705 A) (@lem4559862 _107705 _107708 A B _54417 _54418 h1)). Qed.
Lemma lem4559865 {_107708 A : Type'} (f : A -> _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4559882 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (d : _107708) : (term100 _107708 A s f x d) = (term100 _107708 A s f x d).
Proof. exact (eq_refl (term100 _107708 A s f x d)). Qed.
Lemma lem4559883 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term101 _107708 A s f d) = (term101 _107708 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4559882 _107708 A s f x d)). Qed.
Lemma lem4559884 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4559885 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term102 _107708 A s f d) = (term102 _107708 A s f d).
Proof. exact (MK_COMB (@lem4559884 A) (@lem4559883 _107708 A s f d)). Qed.
Lemma lem4559900 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (t : _107708 -> Prop) : (term103 _107708 A s f x t) = (term103 _107708 A s f x t).
Proof. exact (eq_refl (term103 _107708 A s f x t)). Qed.
Lemma lem4559901 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term104 _107708 A s f t) = (term104 _107708 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4559900 _107708 A s f x t)). Qed.
Lemma lem4559902 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4559903 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term105 _107708 A s f t) = (term105 _107708 A s f t).
Proof. exact (MK_COMB (@lem4559902 A) (@lem4559901 _107708 A s f t)). Qed.
Lemma lem4559904 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4559905 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term106 _107708 A s f t) = (term106 _107708 A s f t).
Proof. exact (MK_COMB (@lem4559904) (@lem4559903 _107708 A s f t)). Qed.
Lemma lem4559906 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term107 _107708 A t s f d) = (term107 _107708 A t s f d).
Proof. exact (MK_COMB (@lem4559905 _107708 A s f t) (@lem4559885 _107708 A s f d)). Qed.
Lemma lem4559909 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) : (@SETSPEC (A -> _107708) GEN_PVAR_148) = (@SETSPEC (A -> _107708) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107708) GEN_PVAR_148)). Qed.
Lemma lem4559910 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term108 _107708 A GEN_PVAR_148 t s f d) = (term108 _107708 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4559909 _107708 A GEN_PVAR_148) (@lem4559906 _107708 A t s f d)). Qed.
Lemma lem4559911 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4559910 _107708 A GEN_PVAR_148 t s f d) (@lem4559865 _107708 A f)). Qed.
Lemma lem4559912 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4559911 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4559913 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4559914 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4559913 _107708 A) (@lem4559912 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4559925 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term239 _107708 A _54417 t s d GEN_PVAR_148) = (term239 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4559926 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4559925 _107708 A _54417 t s d GEN_PVAR_148) (@lem4559914 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4559927 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term241 _107708 A _54417 t s d) = (term241 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4559926 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4559928 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4559929 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term242 _107708 A _54417 t s d) = (term242 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4559928 _107708 A) (@lem4559927 _107708 A _54417 t s d)). Qed.
Lemma lem4559930 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term243 _107708 A _54417 t s) = (term243 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4559929 _107708 A _54417 t s d)). Qed.
Lemma lem4559931 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4559932 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term244 _107708 A _54417 t s) = (term244 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4559931 _107708) (@lem4559930 _107708 A _54417 t s)). Qed.
Lemma lem4559933 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term245 _107708 A _54417 t) = (term245 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4559932 _107708 A _54417 t s)). Qed.
Lemma lem4559934 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4559935 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term246 _107708 A _54417 t) = (term246 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4559934 A) (@lem4559933 _107708 A _54417 t)). Qed.
Lemma lem4559936 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term247 _107708 A _54417) = (term247 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4559935 _107708 A _54417 t)). Qed.
Lemma lem4559937 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4559938 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term248 _107708 A _54417) = (term248 _107708 A _54417).
Proof. exact (MK_COMB (@lem4559937 _107708) (@lem4559936 _107708 A _54417)). Qed.
Lemma lem4559939 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559940 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term249 _107708 A _54417) = (term249 _107708 A _54417).
Proof. exact (MK_COMB (@lem4559939) (@lem4559938 _107708 A _54417)). Qed.
Lemma lem4559941 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term334 _107705 _107708 A B _54417) = (term384 _107705 _107708 A B _54417 _54418).
Proof. exact (MK_COMB (@lem4559940 _107708 A _54417) (@lem4559864 _107705 _107708 A B _54417 _54418 h1)). Qed.
Lemma lem4559942 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term335 _107705 _107708 A B) = (term385 _107705 _107708 A B _54418).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4559941 _107705 _107708 A B _54417 _54418 h1)). Qed.
Lemma lem4559943 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4559944 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (h1 : _54418 = (term337 _107705 B)) : (term336 _107705 _107708 A B) = (term386 _107705 _107708 A B _54418).
Proof. exact (MK_COMB (@lem4559943 _107708 A) (@lem4559942 _107705 _107708 A B _54418 h1)). Qed.
Lemma lem4559945 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : term387 _107705 _107708 A B _54418.
Proof. exact (fun h0 : _54418 = (term337 _107705 B) => @lem4559944 _107705 _107708 A B _54418 h0). Qed.
Lemma lem4559946 {_107705 _107708 A B : Type'} : term388 _107705 _107708 A B.
Proof. exact (fun _54418 : type839 _107705 B => @lem4559945 _107705 _107708 A B _54418). Qed.
Lemma lem4559948 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term183 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4559949 {_107705 B : Type'} (P : Prop) (c : type839 _107705 B) (Q : type214 _107705 B) : term389 _107705 B P c Q.
Proof. exact (@lem4559948 (type839 _107705 B) P c Q). Qed.
Lemma lem4559950 {_107705 _107708 A B : Type'} : term390 _107705 _107708 A B.
Proof. exact (@lem4559949 _107705 B (term336 _107705 _107708 A B) (term337 _107705 B) (term391 _107705 _107708 A B)). Qed.
Lemma lem4559951 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : (term392 _107705 _107708 A B _54418) = (term386 _107705 _107708 A B _54418).
Proof. exact (eq_refl (term392 _107705 _107708 A B _54418)). Qed.
Lemma lem4559952 {_107705 _107708 A B : Type'} : (term393 _107705 _107708 A B) = (term393 _107705 _107708 A B).
Proof. exact (eq_refl (term393 _107705 _107708 A B)). Qed.
Lemma lem4559953 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : ((term336 _107705 _107708 A B) = (term392 _107705 _107708 A B _54418)) = ((term336 _107705 _107708 A B) = (term386 _107705 _107708 A B _54418)).
Proof. exact (MK_COMB (@lem4559952 _107705 _107708 A B) (@lem4559951 _107705 _107708 A B _54418)). Qed.
Lemma lem4559954 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term394 _107705 B _54418) = (term394 _107705 B _54418).
Proof. exact (eq_refl (term394 _107705 B _54418)). Qed.
Lemma lem4559955 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : (term395 _107705 _107708 A B _54418) = (term387 _107705 _107708 A B _54418).
Proof. exact (MK_COMB (@lem4559954 _107705 B _54418) (@lem4559953 _107705 _107708 A B _54418)). Qed.
Lemma lem4559956 {_107705 _107708 A B : Type'} : (term396 _107705 _107708 A B) = (term397 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54418 : type839 _107705 B => @lem4559955 _107705 _107708 A B _54418)). Qed.
Lemma lem4559957 {_107705 B : Type'} : (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop))). Qed.
Lemma lem4559958 {_107705 _107708 A B : Type'} : (term398 _107705 _107708 A B) = (term388 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4559957 _107705 B) (@lem4559956 _107705 _107708 A B)). Qed.
Lemma lem4559959 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4559960 {_107705 _107708 A B : Type'} : (term399 _107705 _107708 A B) = (term400 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4559959) (@lem4559958 _107705 _107708 A B)). Qed.
Lemma lem4559961 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : (term392 _107705 _107708 A B _54418) = (term386 _107705 _107708 A B _54418).
Proof. exact (eq_refl (term392 _107705 _107708 A B _54418)). Qed.
Lemma lem4559962 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term394 _107705 B _54418) = (term394 _107705 B _54418).
Proof. exact (eq_refl (term394 _107705 B _54418)). Qed.
Lemma lem4559963 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : (term401 _107705 _107708 A B _54418) = (term402 _107705 _107708 A B _54418).
Proof. exact (MK_COMB (@lem4559962 _107705 B _54418) (@lem4559961 _107705 _107708 A B _54418)). Qed.
Lemma lem4559964 {_107705 _107708 A B : Type'} : (term403 _107705 _107708 A B) = (term404 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54418 : type839 _107705 B => @lem4559963 _107705 _107708 A B _54418)). Qed.
Lemma lem4559965 {_107705 B : Type'} : (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop))). Qed.
Lemma lem4559966 {_107705 _107708 A B : Type'} : (term405 _107705 _107708 A B) = (term406 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4559965 _107705 B) (@lem4559964 _107705 _107708 A B)). Qed.
Lemma lem4559967 {_107705 _107708 A B : Type'} : (term393 _107705 _107708 A B) = (term393 _107705 _107708 A B).
Proof. exact (eq_refl (term393 _107705 _107708 A B)). Qed.
Lemma lem4559968 {_107705 _107708 A B : Type'} : ((term336 _107705 _107708 A B) = (term405 _107705 _107708 A B)) = ((term336 _107705 _107708 A B) = (term406 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4559967 _107705 _107708 A B) (@lem4559966 _107705 _107708 A B)). Qed.
Lemma lem4559969 {_107705 _107708 A B : Type'} : (term390 _107705 _107708 A B) = (term407 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4559960 _107705 _107708 A B) (@lem4559968 _107705 _107708 A B)). Qed.
Lemma lem4559970 {_107705 _107708 A B : Type'} : term407 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4559969 _107705 _107708 A B) (@lem4559950 _107705 _107708 A B)). Qed.
Lemma lem4559971 {_107705 _107708 A B : Type'} : (term336 _107705 _107708 A B) = (term406 _107705 _107708 A B).
Proof. exact (@lem4559970 _107705 _107708 A B (@lem4559946 _107705 _107708 A B)). Qed.
Lemma lem4559973 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4559974 {_107705 B : Type'} (s : type839 _107705 B) (t : type839 _107705 B) : (s = (term408 _107705 B t)) = (term409 _107705 B s t).
Proof. exact (@lem4559973 (type674 _107705 B) (B -> Prop) s t). Qed.
Lemma lem4559975 {_107705 B : Type'} (_54418 : type839 _107705 B) : (_54418 = (term410 _107705 B)) = (term411 _107705 B _54418).
Proof. exact (@lem4559974 _107705 B _54418 (term337 _107705 B)). Qed.
Lemma lem4559976 {_107705 B : Type'} (t : B -> Prop) : (term338 _107705 B t) = (term339 _107705 B t).
Proof. exact (eq_refl (term338 _107705 B t)). Qed.
Lemma lem4559977 {_107705 B : Type'} : (term410 _107705 B) = (term337 _107705 B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4559976 _107705 B t)). Qed.
Lemma lem4559978 {_107705 B : Type'} (_54418 : type839 _107705 B) : (@eq ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop) _54418) = (@eq ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop) _54418).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop) _54418)). Qed.
Lemma lem4559979 {_107705 B : Type'} (_54418 : type839 _107705 B) : (_54418 = (term410 _107705 B)) = (_54418 = (term337 _107705 B)).
Proof. exact (MK_COMB (@lem4559978 _107705 B _54418) (@lem4559977 _107705 B)). Qed.
Lemma lem4559980 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4559981 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term412 _107705 B _54418) = (term413 _107705 B _54418).
Proof. exact (MK_COMB (@lem4559980) (@lem4559979 _107705 B _54418)). Qed.
Lemma lem4559982 {_107705 B : Type'} (t : B -> Prop) : (term338 _107705 B t) = (term339 _107705 B t).
Proof. exact (eq_refl (term338 _107705 B t)). Qed.
Lemma lem4559983 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term340 _107705 B _54418 t) = (term340 _107705 B _54418 t).
Proof. exact (eq_refl (term340 _107705 B _54418 t)). Qed.
Lemma lem4559984 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((_54418 t) = (term338 _107705 B t)) = ((_54418 t) = (term339 _107705 B t)).
Proof. exact (MK_COMB (@lem4559983 _107705 B _54418 t) (@lem4559982 _107705 B t)). Qed.
Lemma lem4559985 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term414 _107705 B _54418) = (term415 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4559984 _107705 B _54418 t)). Qed.
Lemma lem4559986 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4559987 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term411 _107705 B _54418) = (term416 _107705 B _54418).
Proof. exact (MK_COMB (@lem4559986 B) (@lem4559985 _107705 B _54418)). Qed.
Lemma lem4559988 {_107705 B : Type'} (_54418 : type839 _107705 B) : ((_54418 = (term410 _107705 B)) = (term411 _107705 B _54418)) = ((_54418 = (term337 _107705 B)) = (term416 _107705 B _54418)).
Proof. exact (MK_COMB (@lem4559981 _107705 B _54418) (@lem4559987 _107705 B _54418)). Qed.
Lemma lem4559989 {_107705 B : Type'} (_54418 : type839 _107705 B) : (_54418 = (term337 _107705 B)) = (term416 _107705 B _54418).
Proof. exact (EQ_MP (@lem4559988 _107705 B _54418) (@lem4559975 _107705 B _54418)). Qed.
Lemma lem4559991 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4559992 {_107705 B : Type'} (s : type674 _107705 B) (t : type674 _107705 B) : (s = (term417 _107705 B t)) = (term418 _107705 B s t).
Proof. exact (@lem4559991 (type1446 _107705 B) (_107705 -> Prop) s t). Qed.
Lemma lem4559993 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((_54418 t) = (term419 _107705 B t)) = (term420 _107705 B _54418 t).
Proof. exact (@lem4559992 _107705 B (_54418 t) (term339 _107705 B t)). Qed.
Lemma lem4559994 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) : (term341 _107705 B t s) = (term342 _107705 B t s).
Proof. exact (eq_refl (term341 _107705 B t s)). Qed.
Lemma lem4559995 {_107705 B : Type'} (t : B -> Prop) : (term419 _107705 B t) = (term339 _107705 B t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4559994 _107705 B t s)). Qed.
Lemma lem4559996 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term340 _107705 B _54418 t) = (term340 _107705 B _54418 t).
Proof. exact (eq_refl (term340 _107705 B _54418 t)). Qed.
Lemma lem4559997 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((_54418 t) = (term419 _107705 B t)) = ((_54418 t) = (term339 _107705 B t)).
Proof. exact (MK_COMB (@lem4559996 _107705 B _54418 t) (@lem4559995 _107705 B t)). Qed.
Lemma lem4559998 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4559999 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term421 _107705 B _54418 t) = (term422 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4559998) (@lem4559997 _107705 B _54418 t)). Qed.
Lemma lem4560000 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) : (term341 _107705 B t s) = (term342 _107705 B t s).
Proof. exact (eq_refl (term341 _107705 B t s)). Qed.
Lemma lem4560001 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term343 _107705 B _54418 t s) = (term343 _107705 B _54418 t s).
Proof. exact (eq_refl (term343 _107705 B _54418 t s)). Qed.
Lemma lem4560002 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((_54418 t s) = (term341 _107705 B t s)) = ((_54418 t s) = (term342 _107705 B t s)).
Proof. exact (MK_COMB (@lem4560001 _107705 B _54418 t s) (@lem4560000 _107705 B t s)). Qed.
Lemma lem4560003 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term423 _107705 B _54418 t) = (term424 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4560002 _107705 B _54418 t s)). Qed.
Lemma lem4560004 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560005 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term420 _107705 B _54418 t) = (term425 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4560004 _107705) (@lem4560003 _107705 B _54418 t)). Qed.
Lemma lem4560006 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (((_54418 t) = (term419 _107705 B t)) = (term420 _107705 B _54418 t)) = (((_54418 t) = (term339 _107705 B t)) = (term425 _107705 B _54418 t)).
Proof. exact (MK_COMB (@lem4559999 _107705 B _54418 t) (@lem4560005 _107705 B _54418 t)). Qed.
Lemma lem4560007 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((_54418 t) = (term339 _107705 B t)) = (term425 _107705 B _54418 t).
Proof. exact (EQ_MP (@lem4560006 _107705 B _54418 t) (@lem4559993 _107705 B _54418 t)). Qed.
Lemma lem4560009 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4560010 {_107705 B : Type'} (s : type1446 _107705 B) (t : type1446 _107705 B) : (s = (term426 _107705 B t)) = (term427 _107705 B s t).
Proof. exact (@lem4560009 (type572 _107705 B) B s t). Qed.
Lemma lem4560011 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((_54418 t s) = (term428 _107705 B t s)) = (term429 _107705 B _54418 t s).
Proof. exact (@lem4560010 _107705 B (_54418 t s) (term342 _107705 B t s)). Qed.
Lemma lem4560012 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term344 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (eq_refl (term344 _107705 B t s d)). Qed.
Lemma lem4560013 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) : (term428 _107705 B t s) = (term342 _107705 B t s).
Proof. exact (fun_ext (fun d : B => @lem4560012 _107705 B t s d)). Qed.
Lemma lem4560014 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term343 _107705 B _54418 t s) = (term343 _107705 B _54418 t s).
Proof. exact (eq_refl (term343 _107705 B _54418 t s)). Qed.
Lemma lem4560015 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((_54418 t s) = (term428 _107705 B t s)) = ((_54418 t s) = (term342 _107705 B t s)).
Proof. exact (MK_COMB (@lem4560014 _107705 B _54418 t s) (@lem4560013 _107705 B t s)). Qed.
Lemma lem4560016 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4560017 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term430 _107705 B _54418 t s) = (term431 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4560016) (@lem4560015 _107705 B _54418 t s)). Qed.
Lemma lem4560018 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term344 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (eq_refl (term344 _107705 B t s d)). Qed.
Lemma lem4560019 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term345 _107705 B _54418 t s d) = (term345 _107705 B _54418 t s d).
Proof. exact (eq_refl (term345 _107705 B _54418 t s d)). Qed.
Lemma lem4560020 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d) = (term344 _107705 B t s d)) = ((_54418 t s d) = (term85 _107705 B t s d)).
Proof. exact (MK_COMB (@lem4560019 _107705 B _54418 t s d) (@lem4560018 _107705 B t s d)). Qed.
Lemma lem4560021 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term432 _107705 B _54418 t s) = (term433 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4560020 _107705 B _54418 t s d)). Qed.
Lemma lem4560022 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4560023 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term429 _107705 B _54418 t s) = (term434 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4560022 B) (@lem4560021 _107705 B _54418 t s)). Qed.
Lemma lem4560024 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (((_54418 t s) = (term428 _107705 B t s)) = (term429 _107705 B _54418 t s)) = (((_54418 t s) = (term342 _107705 B t s)) = (term434 _107705 B _54418 t s)).
Proof. exact (MK_COMB (@lem4560017 _107705 B _54418 t s) (@lem4560023 _107705 B _54418 t s)). Qed.
Lemma lem4560025 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((_54418 t s) = (term342 _107705 B t s)) = (term434 _107705 B _54418 t s).
Proof. exact (EQ_MP (@lem4560024 _107705 B _54418 t s) (@lem4560011 _107705 B _54418 t s)). Qed.
Lemma lem4560027 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4560028 {_107705 B : Type'} (s : type572 _107705 B) (t : type572 _107705 B) : (s = (term435 _107705 B t)) = (term436 _107705 B s t).
Proof. exact (@lem4560027 Prop (_107705 -> B) s t). Qed.
Lemma lem4560029 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d) = (term437 _107705 B t s d)) = (term438 _107705 B _54418 t s d).
Proof. exact (@lem4560028 _107705 B (_54418 t s d) (term85 _107705 B t s d)). Qed.
Lemma lem4560030 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term439 _107705 B t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term439 _107705 B t s d GEN_PVAR_148)). Qed.
Lemma lem4560031 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term437 _107705 B t s d) = (term85 _107705 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4560030 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4560032 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term345 _107705 B _54418 t s d) = (term345 _107705 B _54418 t s d).
Proof. exact (eq_refl (term345 _107705 B _54418 t s d)). Qed.
Lemma lem4560033 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d) = (term437 _107705 B t s d)) = ((_54418 t s d) = (term85 _107705 B t s d)).
Proof. exact (MK_COMB (@lem4560032 _107705 B _54418 t s d) (@lem4560031 _107705 B t s d)). Qed.
Lemma lem4560034 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4560035 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term440 _107705 B _54418 t s d) = (term441 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4560034) (@lem4560033 _107705 B _54418 t s d)). Qed.
Lemma lem4560036 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term439 _107705 B t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term439 _107705 B t s d GEN_PVAR_148)). Qed.
Lemma lem4560037 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term442 _107705 B _54418 t s d GEN_PVAR_148) = (term442 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4560038 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term439 _107705 B t s d GEN_PVAR_148)) = ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4560037 _107705 B _54418 t s d GEN_PVAR_148) (@lem4560036 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4560039 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term443 _107705 B _54418 t s d) = (term444 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4560038 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4560040 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4560041 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term438 _107705 B _54418 t s d) = (term445 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4560040 _107705 B) (@lem4560039 _107705 B _54418 t s d)). Qed.
Lemma lem4560042 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (((_54418 t s d) = (term437 _107705 B t s d)) = (term438 _107705 B _54418 t s d)) = (((_54418 t s d) = (term85 _107705 B t s d)) = (term445 _107705 B _54418 t s d)).
Proof. exact (MK_COMB (@lem4560035 _107705 B _54418 t s d) (@lem4560041 _107705 B _54418 t s d)). Qed.
Lemma lem4560043 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d) = (term85 _107705 B t s d)) = (term445 _107705 B _54418 t s d).
Proof. exact (EQ_MP (@lem4560042 _107705 B _54418 t s d) (@lem4560029 _107705 B _54418 t s d)). Qed.
Lemma lem4560044 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)) = ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d))). Qed.
Lemma lem4560045 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term444 _107705 B _54418 t s d) = (term444 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4560044 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4560046 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4560047 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term445 _107705 B _54418 t s d) = (term445 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4560046 _107705 B) (@lem4560045 _107705 B _54418 t s d)). Qed.
Lemma lem4560048 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d) = (term85 _107705 B t s d)) = (term445 _107705 B _54418 t s d).
Proof. exact (TRANS (@lem4560043 _107705 B _54418 t s d) (@lem4560047 _107705 B _54418 t s d)). Qed.
Lemma lem4560049 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term433 _107705 B _54418 t s) = (term446 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4560048 _107705 B _54418 t s d)). Qed.
Lemma lem4560050 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4560051 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term434 _107705 B _54418 t s) = (term447 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4560050 B) (@lem4560049 _107705 B _54418 t s)). Qed.
Lemma lem4560052 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((_54418 t s) = (term342 _107705 B t s)) = (term447 _107705 B _54418 t s).
Proof. exact (TRANS (@lem4560025 _107705 B _54418 t s) (@lem4560051 _107705 B _54418 t s)). Qed.
Lemma lem4560053 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term424 _107705 B _54418 t) = (term448 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4560052 _107705 B _54418 t s)). Qed.
Lemma lem4560054 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560055 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term425 _107705 B _54418 t) = (term449 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4560054 _107705) (@lem4560053 _107705 B _54418 t)). Qed.
Lemma lem4560056 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((_54418 t) = (term339 _107705 B t)) = (term449 _107705 B _54418 t).
Proof. exact (TRANS (@lem4560007 _107705 B _54418 t) (@lem4560055 _107705 B _54418 t)). Qed.
Lemma lem4560057 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term415 _107705 B _54418) = (term450 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4560056 _107705 B _54418 t)). Qed.
Lemma lem4560058 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4560059 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term416 _107705 B _54418) = (term451 _107705 B _54418).
Proof. exact (MK_COMB (@lem4560058 B) (@lem4560057 _107705 B _54418)). Qed.
Lemma lem4560060 {_107705 B : Type'} (_54418 : type839 _107705 B) : (_54418 = (term337 _107705 B)) = (term451 _107705 B _54418).
Proof. exact (TRANS (@lem4559989 _107705 B _54418) (@lem4560059 _107705 B _54418)). Qed.
Lemma lem4560061 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560062 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term394 _107705 B _54418) = (term452 _107705 B _54418).
Proof. exact (MK_COMB (@lem4560061) (@lem4560060 _107705 B _54418)). Qed.
Lemma lem4560063 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : (term386 _107705 _107708 A B _54418) = (term386 _107705 _107708 A B _54418).
Proof. exact (eq_refl (term386 _107705 _107708 A B _54418)). Qed.
Lemma lem4560064 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) : (term402 _107705 _107708 A B _54418) = (term453 _107705 _107708 A B _54418).
Proof. exact (MK_COMB (@lem4560062 _107705 B _54418) (@lem4560063 _107705 _107708 A B _54418)). Qed.
Lemma lem4560065 {_107705 _107708 A B : Type'} : (term404 _107705 _107708 A B) = (term454 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54418 : type839 _107705 B => @lem4560064 _107705 _107708 A B _54418)). Qed.
Lemma lem4560066 {_107705 B : Type'} : (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop))). Qed.
Lemma lem4560067 {_107705 _107708 A B : Type'} : (term406 _107705 _107708 A B) = (term455 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4560066 _107705 B) (@lem4560065 _107705 _107708 A B)). Qed.
Lemma lem4560068 {_107705 _107708 A B : Type'} : (term393 _107705 _107708 A B) = (term393 _107705 _107708 A B).
Proof. exact (eq_refl (term393 _107705 _107708 A B)). Qed.
Lemma lem4560069 {_107705 _107708 A B : Type'} : ((term336 _107705 _107708 A B) = (term406 _107705 _107708 A B)) = ((term336 _107705 _107708 A B) = (term455 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4560068 _107705 _107708 A B) (@lem4560067 _107705 _107708 A B)). Qed.
Lemma lem4560070 {_107705 _107708 A B : Type'} : (term336 _107705 _107708 A B) = (term455 _107705 _107708 A B).
Proof. exact (EQ_MP (@lem4560069 _107705 _107708 A B) (@lem4559971 _107705 _107708 A B)). Qed.
Lemma lem4560071 {_107708 B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : _54419 = (term337 _107708 B).
Proof. exact (h1). Qed.
Lemma lem4560072 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4560073 {_107708 B : Type'} (t : B -> Prop) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (_54419 t) = (term338 _107708 B t).
Proof. exact (MK_COMB (@lem4560071 _107708 B _54419 h1) (@lem4560072 B t)). Qed.
Lemma lem4560074 {_107708 B : Type'} (t : B -> Prop) : (term338 _107708 B t) = (term339 _107708 B t).
Proof. exact (eq_refl (term338 _107708 B t)). Qed.
Lemma lem4560075 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term340 _107708 B _54419 t) = (term340 _107708 B _54419 t).
Proof. exact (eq_refl (term340 _107708 B _54419 t)). Qed.
Lemma lem4560076 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((_54419 t) = (term338 _107708 B t)) = ((_54419 t) = (term339 _107708 B t)).
Proof. exact (MK_COMB (@lem4560075 _107708 B _54419 t) (@lem4560074 _107708 B t)). Qed.
Lemma lem4560077 {_107708 B : Type'} (t : B -> Prop) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (_54419 t) = (term339 _107708 B t).
Proof. exact (EQ_MP (@lem4560076 _107708 B _54419 t) (@lem4560073 _107708 B t _54419 h1)). Qed.
Lemma lem4560078 {_107708 : Type'} (s : _107708 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4560079 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (_54419 t s) = (term341 _107708 B t s).
Proof. exact (MK_COMB (@lem4560077 _107708 B t _54419 h1) (@lem4560078 _107708 s)). Qed.
Lemma lem4560080 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) : (term341 _107708 B t s) = (term342 _107708 B t s).
Proof. exact (eq_refl (term341 _107708 B t s)). Qed.
Lemma lem4560081 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term343 _107708 B _54419 t s) = (term343 _107708 B _54419 t s).
Proof. exact (eq_refl (term343 _107708 B _54419 t s)). Qed.
Lemma lem4560082 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((_54419 t s) = (term341 _107708 B t s)) = ((_54419 t s) = (term342 _107708 B t s)).
Proof. exact (MK_COMB (@lem4560081 _107708 B _54419 t s) (@lem4560080 _107708 B t s)). Qed.
Lemma lem4560083 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (_54419 t s) = (term342 _107708 B t s).
Proof. exact (EQ_MP (@lem4560082 _107708 B _54419 t s) (@lem4560079 _107708 B t s _54419 h1)). Qed.
Lemma lem4560084 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4560085 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (_54419 t s d) = (term344 _107708 B t s d).
Proof. exact (MK_COMB (@lem4560083 _107708 B t s _54419 h1) (@lem4560084 B d)). Qed.
Lemma lem4560086 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term344 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (eq_refl (term344 _107708 B t s d)). Qed.
Lemma lem4560087 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term345 _107708 B _54419 t s d) = (term345 _107708 B _54419 t s d).
Proof. exact (eq_refl (term345 _107708 B _54419 t s d)). Qed.
Lemma lem4560088 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d) = (term344 _107708 B t s d)) = ((_54419 t s d) = (term85 _107708 B t s d)).
Proof. exact (MK_COMB (@lem4560087 _107708 B _54419 t s d) (@lem4560086 _107708 B t s d)). Qed.
Lemma lem4560089 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (_54419 t s d) = (term85 _107708 B t s d).
Proof. exact (EQ_MP (@lem4560088 _107708 B _54419 t s d) (@lem4560085 _107708 B t s d _54419 h1)). Qed.
Lemma lem4560095 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4560099 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4560116 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term73 A B s f x d) = (term73 A B s f x d).
Proof. exact (eq_refl (term73 A B s f x d)). Qed.
Lemma lem4560117 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term74 A B s f d) = (term74 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4560116 A B s f x d)). Qed.
Lemma lem4560118 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4560119 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term75 A B s f d) = (term75 A B s f d).
Proof. exact (MK_COMB (@lem4560118 A) (@lem4560117 A B s f d)). Qed.
Lemma lem4560134 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term76 A B s f x t) = (term76 A B s f x t).
Proof. exact (eq_refl (term76 A B s f x t)). Qed.
Lemma lem4560135 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term77 A B s f t) = (term77 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4560134 A B s f x t)). Qed.
Lemma lem4560136 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4560137 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term78 A B s f t) = (term78 A B s f t).
Proof. exact (MK_COMB (@lem4560136 A) (@lem4560135 A B s f t)). Qed.
Lemma lem4560138 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4560139 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term79 A B s f t) = (term79 A B s f t).
Proof. exact (MK_COMB (@lem4560138) (@lem4560137 A B s f t)). Qed.
Lemma lem4560140 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term80 A B t s f d) = (term80 A B t s f d).
Proof. exact (MK_COMB (@lem4560139 A B s f t) (@lem4560119 A B s f d)). Qed.
Lemma lem4560143 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4560144 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term81 A B GEN_PVAR_148 t s f d) = (term81 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4560143 A B GEN_PVAR_148) (@lem4560140 A B t s f d)). Qed.
Lemma lem4560145 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4560144 A B GEN_PVAR_148 t s f d) (@lem4560099 A B f)). Qed.
Lemma lem4560146 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4560145 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4560147 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4560148 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4560147 A B) (@lem4560146 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4560149 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term85 A B t s d) = (term85 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4560148 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4560150 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4560151 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term86 A B t s d) = (term86 A B t s d).
Proof. exact (MK_COMB (@lem4560150 A B) (@lem4560149 A B t s d)). Qed.
Lemma lem4560152 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4560153 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term87 A B t s d) = (term87 A B t s d).
Proof. exact (MK_COMB (@lem4560152 A B) (@lem4560151 A B t s d)). Qed.
Lemma lem4560154 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term88 A B t s d n m) = (term88 A B t s d n m).
Proof. exact (MK_COMB (@lem4560153 A B t s d) (@lem4560095 n m)). Qed.
Lemma lem4560169 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 A B s m t n) = (term89 A B s m t n).
Proof. exact (eq_refl (term89 A B s m t n)). Qed.
Lemma lem4560170 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term90 A B t s d n m) = (term90 A B t s d n m).
Proof. exact (MK_COMB (@lem4560169 A B s m t n) (@lem4560154 A B t s d n m)). Qed.
Lemma lem4560171 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term91 A B t d n m) = (term91 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4560170 A B t s d n m)). Qed.
Lemma lem4560172 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4560173 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term92 A B t d n m) = (term92 A B t d n m).
Proof. exact (MK_COMB (@lem4560172 A) (@lem4560171 A B t d n m)). Qed.
Lemma lem4560174 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term93 A B t d n) = (term93 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4560173 A B t d n m)). Qed.
Lemma lem4560175 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560176 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term94 A B t d n) = (term94 A B t d n).
Proof. exact (MK_COMB (@lem4560175) (@lem4560174 A B t d n)). Qed.
Lemma lem4560177 {A B : Type'} (d : B) (n : nat) : (term95 A B d n) = (term95 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4560176 A B t d n)). Qed.
Lemma lem4560178 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4560179 {A B : Type'} (d : B) (n : nat) : (term96 A B d n) = (term96 A B d n).
Proof. exact (MK_COMB (@lem4560178 B) (@lem4560177 A B d n)). Qed.
Lemma lem4560180 {A B : Type'} (d : B) : (term97 A B d) = (term97 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4560179 A B d n)). Qed.
Lemma lem4560181 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560182 {A B : Type'} (d : B) : (term98 A B d) = (term98 A B d).
Proof. exact (MK_COMB (@lem4560181) (@lem4560180 A B d)). Qed.
Lemma lem4560183 {A B : Type'} : (term99 A B) = (term99 A B).
Proof. exact (fun_ext (fun d : B => @lem4560182 A B d)). Qed.
Lemma lem4560184 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4560185 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4560184 B) (@lem4560183 A B)). Qed.
Lemma lem4560186 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4560187 {A B : Type'} : (term21 A B) = (term21 A B).
Proof. exact (MK_COMB (@lem4560186) (@lem4560185 A B)). Qed.
Lemma lem4560192 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4560194 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term85 _107708 B t s d) = (_54419 t s d).
Proof. exact (SYM (@lem4560089 _107708 B t s d _54419 h1)). Qed.
Lemma lem4560195 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term85 _107708 B t s d) = (_54419 t s d).
Proof. exact (@lem4560194 _107708 B t s d _54419 h1). Qed.
Lemma lem4560196 {_107708 B : Type'} : (@GSPEC (_107708 -> B)) = (@GSPEC (_107708 -> B)).
Proof. exact (eq_refl (@GSPEC (_107708 -> B))). Qed.
Lemma lem4560197 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term86 _107708 B t s d) = (term346 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4560196 _107708 B) (@lem4560195 _107708 B t s d _54419 h1)). Qed.
Lemma lem4560198 {_107708 B : Type'} : (@HAS_SIZE (_107708 -> B)) = (@HAS_SIZE (_107708 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> B))). Qed.
Lemma lem4560199 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term87 _107708 B t s d) = (term347 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4560198 _107708 B) (@lem4560197 _107708 B t s d _54419 h1)). Qed.
Lemma lem4560200 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term88 _107708 B t s d n m) = (term348 _107708 B _54419 t s d n m).
Proof. exact (MK_COMB (@lem4560199 _107708 B t s d _54419 h1) (@lem4560192 n m)). Qed.
Lemma lem4560215 {_107708 B : Type'} (s : _107708 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 _107708 B s m t n) = (term89 _107708 B s m t n).
Proof. exact (eq_refl (term89 _107708 B s m t n)). Qed.
Lemma lem4560216 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term90 _107708 B t s d n m) = (term349 _107708 B _54419 t s d n m).
Proof. exact (MK_COMB (@lem4560215 _107708 B s m t n) (@lem4560200 _107708 B t s d n m _54419 h1)). Qed.
Lemma lem4560217 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term91 _107708 B t d n m) = (term350 _107708 B _54419 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4560216 _107708 B t s d n m _54419 h1)). Qed.
Lemma lem4560218 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4560219 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term92 _107708 B t d n m) = (term351 _107708 B _54419 t d n m).
Proof. exact (MK_COMB (@lem4560218 _107708) (@lem4560217 _107708 B t d n m _54419 h1)). Qed.
Lemma lem4560220 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term93 _107708 B t d n) = (term352 _107708 B _54419 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4560219 _107708 B t d n m _54419 h1)). Qed.
Lemma lem4560221 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560222 {_107708 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term94 _107708 B t d n) = (term353 _107708 B _54419 t d n).
Proof. exact (MK_COMB (@lem4560221) (@lem4560220 _107708 B t d n _54419 h1)). Qed.
Lemma lem4560223 {_107708 B : Type'} (d : B) (n : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term95 _107708 B d n) = (term354 _107708 B _54419 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4560222 _107708 B t d n _54419 h1)). Qed.
Lemma lem4560224 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4560225 {_107708 B : Type'} (d : B) (n : nat) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term96 _107708 B d n) = (term355 _107708 B _54419 d n).
Proof. exact (MK_COMB (@lem4560224 B) (@lem4560223 _107708 B d n _54419 h1)). Qed.
Lemma lem4560226 {_107708 B : Type'} (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term97 _107708 B d) = (term356 _107708 B _54419 d).
Proof. exact (fun_ext (fun n : nat => @lem4560225 _107708 B d n _54419 h1)). Qed.
Lemma lem4560227 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560228 {_107708 B : Type'} (d : B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term98 _107708 B d) = (term357 _107708 B _54419 d).
Proof. exact (MK_COMB (@lem4560227) (@lem4560226 _107708 B d _54419 h1)). Qed.
Lemma lem4560229 {_107708 B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term99 _107708 B) = (term358 _107708 B _54419).
Proof. exact (fun_ext (fun d : B => @lem4560228 _107708 B d _54419 h1)). Qed.
Lemma lem4560230 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4560231 {_107708 B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term12 _107708 B) = (term359 _107708 B _54419).
Proof. exact (MK_COMB (@lem4560230 B) (@lem4560229 _107708 B _54419 h1)). Qed.
Lemma lem4560232 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560233 {_107708 B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term22 _107708 B) = (term360 _107708 B _54419).
Proof. exact (MK_COMB (@lem4560232) (@lem4560231 _107708 B _54419 h1)). Qed.
Lemma lem4560234 {_107708 A B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term24 _107708 A B) = (term456 _107708 A B _54419).
Proof. exact (MK_COMB (@lem4560233 _107708 B _54419 h1) (@lem4560187 A B)). Qed.
Lemma lem4560267 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term349 _107705 B _54418 t s d n m) = (term349 _107705 B _54418 t s d n m).
Proof. exact (eq_refl (term349 _107705 B _54418 t s d n m)). Qed.
Lemma lem4560268 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term350 _107705 B _54418 t d n m) = (term350 _107705 B _54418 t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4560267 _107705 B _54418 t s d n m)). Qed.
Lemma lem4560269 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560270 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term351 _107705 B _54418 t d n m) = (term351 _107705 B _54418 t d n m).
Proof. exact (MK_COMB (@lem4560269 _107705) (@lem4560268 _107705 B _54418 t d n m)). Qed.
Lemma lem4560271 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) : (term352 _107705 B _54418 t d n) = (term352 _107705 B _54418 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4560270 _107705 B _54418 t d n m)). Qed.
Lemma lem4560272 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560273 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) : (term353 _107705 B _54418 t d n) = (term353 _107705 B _54418 t d n).
Proof. exact (MK_COMB (@lem4560272) (@lem4560271 _107705 B _54418 t d n)). Qed.
Lemma lem4560274 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) (n : nat) : (term354 _107705 B _54418 d n) = (term354 _107705 B _54418 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4560273 _107705 B _54418 t d n)). Qed.
Lemma lem4560275 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4560276 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) (n : nat) : (term355 _107705 B _54418 d n) = (term355 _107705 B _54418 d n).
Proof. exact (MK_COMB (@lem4560275 B) (@lem4560274 _107705 B _54418 d n)). Qed.
Lemma lem4560277 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) : (term356 _107705 B _54418 d) = (term356 _107705 B _54418 d).
Proof. exact (fun_ext (fun n : nat => @lem4560276 _107705 B _54418 d n)). Qed.
Lemma lem4560278 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560279 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) : (term357 _107705 B _54418 d) = (term357 _107705 B _54418 d).
Proof. exact (MK_COMB (@lem4560278) (@lem4560277 _107705 B _54418 d)). Qed.
Lemma lem4560280 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term358 _107705 B _54418) = (term358 _107705 B _54418).
Proof. exact (fun_ext (fun d : B => @lem4560279 _107705 B _54418 d)). Qed.
Lemma lem4560281 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4560282 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term359 _107705 B _54418) = (term359 _107705 B _54418).
Proof. exact (MK_COMB (@lem4560281 B) (@lem4560280 _107705 B _54418)). Qed.
Lemma lem4560283 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560284 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term360 _107705 B _54418) = (term360 _107705 B _54418).
Proof. exact (MK_COMB (@lem4560283) (@lem4560282 _107705 B _54418)). Qed.
Lemma lem4560285 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term361 _107705 _107708 A B _54418) = (term457 _107705 _107708 A B _54418 _54419).
Proof. exact (MK_COMB (@lem4560284 _107705 B _54418) (@lem4560234 _107708 A B _54419 h1)). Qed.
Lemma lem4560318 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term129 _107708 A _54417 t s d n m) = (term129 _107708 A _54417 t s d n m).
Proof. exact (eq_refl (term129 _107708 A _54417 t s d n m)). Qed.
Lemma lem4560319 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term130 _107708 A _54417 t d n m) = (term130 _107708 A _54417 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4560318 _107708 A _54417 t s d n m)). Qed.
Lemma lem4560320 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4560321 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term131 _107708 A _54417 t d n m) = (term131 _107708 A _54417 t d n m).
Proof. exact (MK_COMB (@lem4560320 A) (@lem4560319 _107708 A _54417 t d n m)). Qed.
Lemma lem4560322 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term132 _107708 A _54417 t d n) = (term132 _107708 A _54417 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4560321 _107708 A _54417 t d n m)). Qed.
Lemma lem4560323 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560324 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term133 _107708 A _54417 t d n) = (term133 _107708 A _54417 t d n).
Proof. exact (MK_COMB (@lem4560323) (@lem4560322 _107708 A _54417 t d n)). Qed.
Lemma lem4560325 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term134 _107708 A _54417 d n) = (term134 _107708 A _54417 d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4560324 _107708 A _54417 t d n)). Qed.
Lemma lem4560326 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4560327 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term135 _107708 A _54417 d n) = (term135 _107708 A _54417 d n).
Proof. exact (MK_COMB (@lem4560326 _107708) (@lem4560325 _107708 A _54417 d n)). Qed.
Lemma lem4560328 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term136 _107708 A _54417 d) = (term136 _107708 A _54417 d).
Proof. exact (fun_ext (fun n : nat => @lem4560327 _107708 A _54417 d n)). Qed.
Lemma lem4560329 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560330 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term137 _107708 A _54417 d) = (term137 _107708 A _54417 d).
Proof. exact (MK_COMB (@lem4560329) (@lem4560328 _107708 A _54417 d)). Qed.
Lemma lem4560331 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term138 _107708 A _54417) = (term138 _107708 A _54417).
Proof. exact (fun_ext (fun d : _107708 => @lem4560330 _107708 A _54417 d)). Qed.
Lemma lem4560332 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4560333 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term139 _107708 A _54417) = (term139 _107708 A _54417).
Proof. exact (MK_COMB (@lem4560332 _107708) (@lem4560331 _107708 A _54417)). Qed.
Lemma lem4560334 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560335 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term140 _107708 A _54417) = (term140 _107708 A _54417).
Proof. exact (MK_COMB (@lem4560334) (@lem4560333 _107708 A _54417)). Qed.
Lemma lem4560336 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term362 _107705 _107708 A B _54417 _54418) = (term458 _107705 _107708 A B _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560335 _107708 A _54417) (@lem4560285 _107705 _107708 A B _54418 _54419 h1)). Qed.
Lemma lem4560369 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 A _54416 t s d n m) = (term129 _107705 A _54416 t s d n m).
Proof. exact (eq_refl (term129 _107705 A _54416 t s d n m)). Qed.
Lemma lem4560370 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 A _54416 t d n m) = (term130 _107705 A _54416 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4560369 _107705 A _54416 t s d n m)). Qed.
Lemma lem4560371 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4560372 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 A _54416 t d n m) = (term131 _107705 A _54416 t d n m).
Proof. exact (MK_COMB (@lem4560371 A) (@lem4560370 _107705 A _54416 t d n m)). Qed.
Lemma lem4560373 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 A _54416 t d n) = (term132 _107705 A _54416 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4560372 _107705 A _54416 t d n m)). Qed.
Lemma lem4560374 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560375 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 A _54416 t d n) = (term133 _107705 A _54416 t d n).
Proof. exact (MK_COMB (@lem4560374) (@lem4560373 _107705 A _54416 t d n)). Qed.
Lemma lem4560376 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term134 _107705 A _54416 d n) = (term134 _107705 A _54416 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4560375 _107705 A _54416 t d n)). Qed.
Lemma lem4560377 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560378 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term135 _107705 A _54416 d n) = (term135 _107705 A _54416 d n).
Proof. exact (MK_COMB (@lem4560377 _107705) (@lem4560376 _107705 A _54416 d n)). Qed.
Lemma lem4560379 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term136 _107705 A _54416 d) = (term136 _107705 A _54416 d).
Proof. exact (fun_ext (fun n : nat => @lem4560378 _107705 A _54416 d n)). Qed.
Lemma lem4560380 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560381 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term137 _107705 A _54416 d) = (term137 _107705 A _54416 d).
Proof. exact (MK_COMB (@lem4560380) (@lem4560379 _107705 A _54416 d)). Qed.
Lemma lem4560382 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term138 _107705 A _54416) = (term138 _107705 A _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4560381 _107705 A _54416 d)). Qed.
Lemma lem4560383 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4560384 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term139 _107705 A _54416) = (term139 _107705 A _54416).
Proof. exact (MK_COMB (@lem4560383 _107705) (@lem4560382 _107705 A _54416)). Qed.
Lemma lem4560385 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560386 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term140 _107705 A _54416) = (term140 _107705 A _54416).
Proof. exact (MK_COMB (@lem4560385) (@lem4560384 _107705 A _54416)). Qed.
Lemma lem4560387 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term363 _107705 _107708 A B _54416 _54417 _54418) = (term459 _107705 _107708 A B _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560386 _107705 A _54416) (@lem4560336 _107705 _107708 A B _54417 _54418 _54419 h1)). Qed.
Lemma lem4560420 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term129 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4560421 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4560420 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4560422 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4560423 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4560422 _107708) (@lem4560421 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4560424 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4560423 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4560425 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560426 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4560425) (@lem4560424 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4560427 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4560426 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4560428 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560429 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4560428 _107705) (@lem4560427 _107705 _107708 _54415 d n)). Qed.
Lemma lem4560430 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4560429 _107705 _107708 _54415 d n)). Qed.
Lemma lem4560431 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560432 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4560431) (@lem4560430 _107705 _107708 _54415 d)). Qed.
Lemma lem4560433 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4560432 _107705 _107708 _54415 d)). Qed.
Lemma lem4560434 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4560435 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4560434 _107705) (@lem4560433 _107705 _107708 _54415)). Qed.
Lemma lem4560436 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560437 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term140 _107705 _107708 _54415) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4560436) (@lem4560435 _107705 _107708 _54415)). Qed.
Lemma lem4560438 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term364 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term460 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560437 _107705 _107708 _54415) (@lem4560387 _107705 _107708 A B _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560459 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4560460 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4560459 A B s n)). Qed.
Lemma lem4560461 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560462 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4560461) (@lem4560460 A B s)). Qed.
Lemma lem4560463 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4560462 A B s)). Qed.
Lemma lem4560464 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4560465 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4560464 A B) (@lem4560463 A B)). Qed.
Lemma lem4560466 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560467 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4560466) (@lem4560465 A B)). Qed.
Lemma lem4560468 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term365 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term461 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560467 A B) (@lem4560438 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560489 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4560490 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4560489 _107708 A s n)). Qed.
Lemma lem4560491 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560492 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4560491) (@lem4560490 _107708 A s)). Qed.
Lemma lem4560493 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4560492 _107708 A s)). Qed.
Lemma lem4560494 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4560495 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4560494 _107708 A) (@lem4560493 _107708 A)). Qed.
Lemma lem4560496 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560497 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4560496) (@lem4560495 _107708 A)). Qed.
Lemma lem4560498 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term366 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term462 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560497 _107708 A) (@lem4560468 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560519 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4560520 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4560519 _107705 A s n)). Qed.
Lemma lem4560521 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560522 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4560521) (@lem4560520 _107705 A s)). Qed.
Lemma lem4560523 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4560522 _107705 A s)). Qed.
Lemma lem4560524 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4560525 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4560524 _107705 A) (@lem4560523 _107705 A)). Qed.
Lemma lem4560526 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560527 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4560526) (@lem4560525 _107705 A)). Qed.
Lemma lem4560528 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term367 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term463 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560527 _107705 A) (@lem4560498 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560549 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4560550 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4560549 _107708 B s n)). Qed.
Lemma lem4560551 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560552 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4560551) (@lem4560550 _107708 B s)). Qed.
Lemma lem4560553 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4560552 _107708 B s)). Qed.
Lemma lem4560554 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4560555 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4560554 _107708 B) (@lem4560553 _107708 B)). Qed.
Lemma lem4560556 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560557 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4560556) (@lem4560555 _107708 B)). Qed.
Lemma lem4560558 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term368 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term464 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560557 _107708 B) (@lem4560528 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560579 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4560580 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4560579 _107705 _107708 s n)). Qed.
Lemma lem4560581 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560582 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4560581) (@lem4560580 _107705 _107708 s)). Qed.
Lemma lem4560583 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4560582 _107705 _107708 s)). Qed.
Lemma lem4560584 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4560585 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4560584 _107705 _107708) (@lem4560583 _107705 _107708)). Qed.
Lemma lem4560586 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560587 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4560586) (@lem4560585 _107705 _107708)). Qed.
Lemma lem4560588 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term369 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term465 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560587 _107705 _107708) (@lem4560558 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560609 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4560610 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4560609 _107705 B s n)). Qed.
Lemma lem4560611 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560612 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4560611) (@lem4560610 _107705 B s)). Qed.
Lemma lem4560613 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4560612 _107705 B s)). Qed.
Lemma lem4560614 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4560615 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4560614 _107705 B) (@lem4560613 _107705 B)). Qed.
Lemma lem4560616 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560617 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4560616) (@lem4560615 _107705 B)). Qed.
Lemma lem4560618 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term370 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term466 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560617 _107705 B) (@lem4560588 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560639 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4560640 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4560639 B s n)). Qed.
Lemma lem4560641 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560642 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4560641) (@lem4560640 B s)). Qed.
Lemma lem4560643 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4560642 B s)). Qed.
Lemma lem4560644 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4560645 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4560644 B) (@lem4560643 B)). Qed.
Lemma lem4560646 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560647 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4560646) (@lem4560645 B)). Qed.
Lemma lem4560648 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term371 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term467 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560647 B) (@lem4560618 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560669 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4560670 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4560669 A s n)). Qed.
Lemma lem4560671 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560672 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4560671) (@lem4560670 A s)). Qed.
Lemma lem4560673 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4560672 A s)). Qed.
Lemma lem4560674 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4560675 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4560674 A) (@lem4560673 A)). Qed.
Lemma lem4560676 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560677 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4560676) (@lem4560675 A)). Qed.
Lemma lem4560678 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term372 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term468 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560677 A) (@lem4560648 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560699 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4560700 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4560699 _107708 s n)). Qed.
Lemma lem4560701 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560702 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4560701) (@lem4560700 _107708 s)). Qed.
Lemma lem4560703 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4560702 _107708 s)). Qed.
Lemma lem4560704 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4560705 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4560704 _107708) (@lem4560703 _107708)). Qed.
Lemma lem4560706 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560707 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4560706) (@lem4560705 _107708)). Qed.
Lemma lem4560708 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term373 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term469 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560707 _107708) (@lem4560678 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560729 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4560730 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4560729 _107705 s n)). Qed.
Lemma lem4560731 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4560732 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4560731) (@lem4560730 _107705 s)). Qed.
Lemma lem4560733 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4560732 _107705 s)). Qed.
Lemma lem4560734 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560735 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4560734 _107705) (@lem4560733 _107705)). Qed.
Lemma lem4560736 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560737 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4560736) (@lem4560735 _107705)). Qed.
Lemma lem4560738 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term374 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term470 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560737 _107705) (@lem4560708 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560761 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term168 _107705 _107708 _54415 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4560762 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term170 _107705 _107708 _54415 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4560761 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4560763 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560764 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term172 _107705 _107708 _54415 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4560763 _107705) (@lem4560762 _107705 _107708 _54415 s d)). Qed.
Lemma lem4560765 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term174 _107705 _107708 _54415 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4560764 _107705 _107708 _54415 s d)). Qed.
Lemma lem4560766 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4560767 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term175 _107705 _107708 _54415 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4560766 _107708) (@lem4560765 _107705 _107708 _54415 d)). Qed.
Lemma lem4560768 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4560769 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4560768) (@lem4560767 _107705 _107708 _54415 d)). Qed.
Lemma lem4560770 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560771 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term177 _107705 _107708 _54415 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4560770) (@lem4560769 _107705 _107708 _54415 d)). Qed.
Lemma lem4560772 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term375 _107705 _107708 A B d _54415 _54416 _54417 _54418) = (term471 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560771 _107705 _107708 _54415 d) (@lem4560738 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560773 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term376 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term472 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (fun_ext (fun d : _107705 => @lem4560772 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560774 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4560775 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term377 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term473 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560774 _107705) (@lem4560773 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560776 {_107705 _107708 : Type'} (f : _107708 -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4560793 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (d : _107705) : (term100 _107705 _107708 s f x d) = (term100 _107705 _107708 s f x d).
Proof. exact (eq_refl (term100 _107705 _107708 s f x d)). Qed.
Lemma lem4560794 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term101 _107705 _107708 s f d) = (term101 _107705 _107708 s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4560793 _107705 _107708 s f x d)). Qed.
Lemma lem4560795 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4560796 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term102 _107705 _107708 s f d) = (term102 _107705 _107708 s f d).
Proof. exact (MK_COMB (@lem4560795 _107708) (@lem4560794 _107705 _107708 s f d)). Qed.
Lemma lem4560811 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (t : _107705 -> Prop) : (term103 _107705 _107708 s f x t) = (term103 _107705 _107708 s f x t).
Proof. exact (eq_refl (term103 _107705 _107708 s f x t)). Qed.
Lemma lem4560812 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term104 _107705 _107708 s f t) = (term104 _107705 _107708 s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4560811 _107705 _107708 s f x t)). Qed.
Lemma lem4560813 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4560814 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term105 _107705 _107708 s f t) = (term105 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4560813 _107708) (@lem4560812 _107705 _107708 s f t)). Qed.
Lemma lem4560815 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4560816 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term106 _107705 _107708 s f t) = (term106 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4560815) (@lem4560814 _107705 _107708 s f t)). Qed.
Lemma lem4560817 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term107 _107705 _107708 t s f d) = (term107 _107705 _107708 t s f d).
Proof. exact (MK_COMB (@lem4560816 _107705 _107708 s f t) (@lem4560796 _107705 _107708 s f d)). Qed.
Lemma lem4560820 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) : (@SETSPEC (_107708 -> _107705) GEN_PVAR_150) = (@SETSPEC (_107708 -> _107705) GEN_PVAR_150).
Proof. exact (eq_refl (@SETSPEC (_107708 -> _107705) GEN_PVAR_150)). Qed.
Lemma lem4560821 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term108 _107705 _107708 GEN_PVAR_150 t s f d) = (term108 _107705 _107708 GEN_PVAR_150 t s f d).
Proof. exact (MK_COMB (@lem4560820 _107705 _107708 GEN_PVAR_150) (@lem4560817 _107705 _107708 t s f d)). Qed.
Lemma lem4560822 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4560821 _107705 _107708 GEN_PVAR_150 t s f d) (@lem4560776 _107705 _107708 f)). Qed.
Lemma lem4560823 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4560822 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4560824 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4560825 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4560824 _107705 _107708) (@lem4560823 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4560836 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4560837 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4560836 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4560825 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4560838 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4560837 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4560839 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4560840 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4560839 _107705 _107708) (@lem4560838 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4560841 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4560840 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4560842 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4560843 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4560842 _107705) (@lem4560841 _107705 _107708 _54415 t s)). Qed.
Lemma lem4560844 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4560843 _107705 _107708 _54415 t s)). Qed.
Lemma lem4560845 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4560846 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4560845 _107708) (@lem4560844 _107705 _107708 _54415 t)). Qed.
Lemma lem4560847 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4560846 _107705 _107708 _54415 t)). Qed.
Lemma lem4560848 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560849 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4560848 _107705) (@lem4560847 _107705 _107708 _54415)). Qed.
Lemma lem4560850 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560851 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term249 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4560850) (@lem4560849 _107705 _107708 _54415)). Qed.
Lemma lem4560852 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term378 _107705 _107708 A B _54415 _54416 _54417 _54418) = (term474 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560851 _107705 _107708 _54415) (@lem4560775 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560853 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term379 _107705 _107708 A B _54416 _54417 _54418) = (term475 _107705 _107708 A B _54416 _54417 _54418 _54419).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4560852 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560854 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4560855 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term380 _107705 _107708 A B _54416 _54417 _54418) = (term476 _107705 _107708 A B _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560854 _107705 _107708) (@lem4560853 _107705 _107708 A B _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560856 {_107705 A : Type'} (f : A -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4560873 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (d : _107705) : (term100 _107705 A s f x d) = (term100 _107705 A s f x d).
Proof. exact (eq_refl (term100 _107705 A s f x d)). Qed.
Lemma lem4560874 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term101 _107705 A s f d) = (term101 _107705 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4560873 _107705 A s f x d)). Qed.
Lemma lem4560875 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4560876 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term102 _107705 A s f d) = (term102 _107705 A s f d).
Proof. exact (MK_COMB (@lem4560875 A) (@lem4560874 _107705 A s f d)). Qed.
Lemma lem4560891 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (t : _107705 -> Prop) : (term103 _107705 A s f x t) = (term103 _107705 A s f x t).
Proof. exact (eq_refl (term103 _107705 A s f x t)). Qed.
Lemma lem4560892 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term104 _107705 A s f t) = (term104 _107705 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4560891 _107705 A s f x t)). Qed.
Lemma lem4560893 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4560894 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term105 _107705 A s f t) = (term105 _107705 A s f t).
Proof. exact (MK_COMB (@lem4560893 A) (@lem4560892 _107705 A s f t)). Qed.
Lemma lem4560895 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4560896 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term106 _107705 A s f t) = (term106 _107705 A s f t).
Proof. exact (MK_COMB (@lem4560895) (@lem4560894 _107705 A s f t)). Qed.
Lemma lem4560897 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term107 _107705 A t s f d) = (term107 _107705 A t s f d).
Proof. exact (MK_COMB (@lem4560896 _107705 A s f t) (@lem4560876 _107705 A s f d)). Qed.
Lemma lem4560900 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) : (@SETSPEC (A -> _107705) GEN_PVAR_148) = (@SETSPEC (A -> _107705) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107705) GEN_PVAR_148)). Qed.
Lemma lem4560901 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term108 _107705 A GEN_PVAR_148 t s f d) = (term108 _107705 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4560900 _107705 A GEN_PVAR_148) (@lem4560897 _107705 A t s f d)). Qed.
Lemma lem4560902 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4560901 _107705 A GEN_PVAR_148 t s f d) (@lem4560856 _107705 A f)). Qed.
Lemma lem4560903 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4560902 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4560904 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4560905 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4560904 _107705 A) (@lem4560903 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4560916 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term239 _107705 A _54416 t s d GEN_PVAR_148) = (term239 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4560917 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4560916 _107705 A _54416 t s d GEN_PVAR_148) (@lem4560905 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4560918 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4560917 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4560919 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4560920 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4560919 _107705 A) (@lem4560918 _107705 A _54416 t s d)). Qed.
Lemma lem4560921 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term243 _107705 A _54416 t s) = (term243 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4560920 _107705 A _54416 t s d)). Qed.
Lemma lem4560922 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4560923 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term244 _107705 A _54416 t s) = (term244 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4560922 _107705) (@lem4560921 _107705 A _54416 t s)). Qed.
Lemma lem4560924 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term245 _107705 A _54416 t) = (term245 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4560923 _107705 A _54416 t s)). Qed.
Lemma lem4560925 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4560926 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term246 _107705 A _54416 t) = (term246 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4560925 A) (@lem4560924 _107705 A _54416 t)). Qed.
Lemma lem4560927 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term247 _107705 A _54416) = (term247 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4560926 _107705 A _54416 t)). Qed.
Lemma lem4560928 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4560929 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term248 _107705 A _54416).
Proof. exact (MK_COMB (@lem4560928 _107705) (@lem4560927 _107705 A _54416)). Qed.
Lemma lem4560930 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4560931 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term249 _107705 A _54416) = (term249 _107705 A _54416).
Proof. exact (MK_COMB (@lem4560930) (@lem4560929 _107705 A _54416)). Qed.
Lemma lem4560932 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term381 _107705 _107708 A B _54416 _54417 _54418) = (term477 _107705 _107708 A B _54416 _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560931 _107705 A _54416) (@lem4560855 _107705 _107708 A B _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560933 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term382 _107705 _107708 A B _54417 _54418) = (term478 _107705 _107708 A B _54417 _54418 _54419).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4560932 _107705 _107708 A B _54416 _54417 _54418 _54419 h1)). Qed.
Lemma lem4560934 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4560935 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term383 _107705 _107708 A B _54417 _54418) = (term479 _107705 _107708 A B _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4560934 _107705 A) (@lem4560933 _107705 _107708 A B _54417 _54418 _54419 h1)). Qed.
Lemma lem4560936 {_107708 A : Type'} (f : A -> _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4560953 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (d : _107708) : (term100 _107708 A s f x d) = (term100 _107708 A s f x d).
Proof. exact (eq_refl (term100 _107708 A s f x d)). Qed.
Lemma lem4560954 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term101 _107708 A s f d) = (term101 _107708 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4560953 _107708 A s f x d)). Qed.
Lemma lem4560955 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4560956 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term102 _107708 A s f d) = (term102 _107708 A s f d).
Proof. exact (MK_COMB (@lem4560955 A) (@lem4560954 _107708 A s f d)). Qed.
Lemma lem4560971 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (t : _107708 -> Prop) : (term103 _107708 A s f x t) = (term103 _107708 A s f x t).
Proof. exact (eq_refl (term103 _107708 A s f x t)). Qed.
Lemma lem4560972 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term104 _107708 A s f t) = (term104 _107708 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4560971 _107708 A s f x t)). Qed.
Lemma lem4560973 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4560974 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term105 _107708 A s f t) = (term105 _107708 A s f t).
Proof. exact (MK_COMB (@lem4560973 A) (@lem4560972 _107708 A s f t)). Qed.
Lemma lem4560975 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4560976 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term106 _107708 A s f t) = (term106 _107708 A s f t).
Proof. exact (MK_COMB (@lem4560975) (@lem4560974 _107708 A s f t)). Qed.
Lemma lem4560977 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term107 _107708 A t s f d) = (term107 _107708 A t s f d).
Proof. exact (MK_COMB (@lem4560976 _107708 A s f t) (@lem4560956 _107708 A s f d)). Qed.
Lemma lem4560980 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) : (@SETSPEC (A -> _107708) GEN_PVAR_148) = (@SETSPEC (A -> _107708) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107708) GEN_PVAR_148)). Qed.
Lemma lem4560981 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term108 _107708 A GEN_PVAR_148 t s f d) = (term108 _107708 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4560980 _107708 A GEN_PVAR_148) (@lem4560977 _107708 A t s f d)). Qed.
Lemma lem4560982 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4560981 _107708 A GEN_PVAR_148 t s f d) (@lem4560936 _107708 A f)). Qed.
Lemma lem4560983 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4560982 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4560984 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4560985 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4560984 _107708 A) (@lem4560983 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4560996 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term239 _107708 A _54417 t s d GEN_PVAR_148) = (term239 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4560997 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4560996 _107708 A _54417 t s d GEN_PVAR_148) (@lem4560985 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4560998 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term241 _107708 A _54417 t s d) = (term241 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4560997 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4560999 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4561000 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term242 _107708 A _54417 t s d) = (term242 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4560999 _107708 A) (@lem4560998 _107708 A _54417 t s d)). Qed.
Lemma lem4561001 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term243 _107708 A _54417 t s) = (term243 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4561000 _107708 A _54417 t s d)). Qed.
Lemma lem4561002 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4561003 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term244 _107708 A _54417 t s) = (term244 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4561002 _107708) (@lem4561001 _107708 A _54417 t s)). Qed.
Lemma lem4561004 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term245 _107708 A _54417 t) = (term245 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4561003 _107708 A _54417 t s)). Qed.
Lemma lem4561005 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4561006 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term246 _107708 A _54417 t) = (term246 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4561005 A) (@lem4561004 _107708 A _54417 t)). Qed.
Lemma lem4561007 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term247 _107708 A _54417) = (term247 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4561006 _107708 A _54417 t)). Qed.
Lemma lem4561008 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561009 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term248 _107708 A _54417) = (term248 _107708 A _54417).
Proof. exact (MK_COMB (@lem4561008 _107708) (@lem4561007 _107708 A _54417)). Qed.
Lemma lem4561010 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561011 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term249 _107708 A _54417) = (term249 _107708 A _54417).
Proof. exact (MK_COMB (@lem4561010) (@lem4561009 _107708 A _54417)). Qed.
Lemma lem4561012 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term384 _107705 _107708 A B _54417 _54418) = (term480 _107705 _107708 A B _54417 _54418 _54419).
Proof. exact (MK_COMB (@lem4561011 _107708 A _54417) (@lem4560935 _107705 _107708 A B _54417 _54418 _54419 h1)). Qed.
Lemma lem4561013 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term385 _107705 _107708 A B _54418) = (term481 _107705 _107708 A B _54418 _54419).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4561012 _107705 _107708 A B _54417 _54418 _54419 h1)). Qed.
Lemma lem4561014 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4561015 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term386 _107705 _107708 A B _54418) = (term482 _107705 _107708 A B _54418 _54419).
Proof. exact (MK_COMB (@lem4561014 _107708 A) (@lem4561013 _107705 _107708 A B _54418 _54419 h1)). Qed.
Lemma lem4561016 {_107705 B : Type'} (f : _107705 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4561033 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (d : B) : (term73 _107705 B s f x d) = (term73 _107705 B s f x d).
Proof. exact (eq_refl (term73 _107705 B s f x d)). Qed.
Lemma lem4561034 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term74 _107705 B s f d) = (term74 _107705 B s f d).
Proof. exact (fun_ext (fun x : _107705 => @lem4561033 _107705 B s f x d)). Qed.
Lemma lem4561035 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4561036 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term75 _107705 B s f d) = (term75 _107705 B s f d).
Proof. exact (MK_COMB (@lem4561035 _107705) (@lem4561034 _107705 B s f d)). Qed.
Lemma lem4561051 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (t : B -> Prop) : (term76 _107705 B s f x t) = (term76 _107705 B s f x t).
Proof. exact (eq_refl (term76 _107705 B s f x t)). Qed.
Lemma lem4561052 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term77 _107705 B s f t) = (term77 _107705 B s f t).
Proof. exact (fun_ext (fun x : _107705 => @lem4561051 _107705 B s f x t)). Qed.
Lemma lem4561053 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4561054 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term78 _107705 B s f t) = (term78 _107705 B s f t).
Proof. exact (MK_COMB (@lem4561053 _107705) (@lem4561052 _107705 B s f t)). Qed.
Lemma lem4561055 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4561056 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term79 _107705 B s f t) = (term79 _107705 B s f t).
Proof. exact (MK_COMB (@lem4561055) (@lem4561054 _107705 B s f t)). Qed.
Lemma lem4561057 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term80 _107705 B t s f d) = (term80 _107705 B t s f d).
Proof. exact (MK_COMB (@lem4561056 _107705 B s f t) (@lem4561036 _107705 B s f d)). Qed.
Lemma lem4561060 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) : (@SETSPEC (_107705 -> B) GEN_PVAR_148) = (@SETSPEC (_107705 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107705 -> B) GEN_PVAR_148)). Qed.
Lemma lem4561061 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term81 _107705 B GEN_PVAR_148 t s f d) = (term81 _107705 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4561060 _107705 B GEN_PVAR_148) (@lem4561057 _107705 B t s f d)). Qed.
Lemma lem4561062 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4561061 _107705 B GEN_PVAR_148 t s f d) (@lem4561016 _107705 B f)). Qed.
Lemma lem4561063 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4561062 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4561064 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4561065 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4561064 _107705 B) (@lem4561063 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4561076 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term442 _107705 B _54418 t s d GEN_PVAR_148) = (term442 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4561077 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)) = ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4561076 _107705 B _54418 t s d GEN_PVAR_148) (@lem4561065 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4561078 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term444 _107705 B _54418 t s d) = (term444 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4561077 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4561079 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4561080 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term445 _107705 B _54418 t s d) = (term445 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4561079 _107705 B) (@lem4561078 _107705 B _54418 t s d)). Qed.
Lemma lem4561081 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term446 _107705 B _54418 t s) = (term446 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4561080 _107705 B _54418 t s d)). Qed.
Lemma lem4561082 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4561083 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term447 _107705 B _54418 t s) = (term447 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4561082 B) (@lem4561081 _107705 B _54418 t s)). Qed.
Lemma lem4561084 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term448 _107705 B _54418 t) = (term448 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4561083 _107705 B _54418 t s)). Qed.
Lemma lem4561085 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561086 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term449 _107705 B _54418 t) = (term449 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4561085 _107705) (@lem4561084 _107705 B _54418 t)). Qed.
Lemma lem4561087 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term450 _107705 B _54418) = (term450 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561086 _107705 B _54418 t)). Qed.
Lemma lem4561088 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561089 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term451 _107705 B _54418) = (term451 _107705 B _54418).
Proof. exact (MK_COMB (@lem4561088 B) (@lem4561087 _107705 B _54418)). Qed.
Lemma lem4561090 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561091 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term452 _107705 B _54418) = (term452 _107705 B _54418).
Proof. exact (MK_COMB (@lem4561090) (@lem4561089 _107705 B _54418)). Qed.
Lemma lem4561092 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term453 _107705 _107708 A B _54418) = (term483 _107705 _107708 A B _54418 _54419).
Proof. exact (MK_COMB (@lem4561091 _107705 B _54418) (@lem4561015 _107705 _107708 A B _54418 _54419 h1)). Qed.
Lemma lem4561093 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term454 _107705 _107708 A B) = (term484 _107705 _107708 A B _54419).
Proof. exact (fun_ext (fun _54418 : type839 _107705 B => @lem4561092 _107705 _107708 A B _54418 _54419 h1)). Qed.
Lemma lem4561094 {_107705 B : Type'} : (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop))). Qed.
Lemma lem4561095 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (h1 : _54419 = (term337 _107708 B)) : (term455 _107705 _107708 A B) = (term485 _107705 _107708 A B _54419).
Proof. exact (MK_COMB (@lem4561094 _107705 B) (@lem4561093 _107705 _107708 A B _54419 h1)). Qed.
Lemma lem4561096 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : term486 _107705 _107708 A B _54419.
Proof. exact (fun h0 : _54419 = (term337 _107708 B) => @lem4561095 _107705 _107708 A B _54419 h0). Qed.
Lemma lem4561097 {_107705 _107708 A B : Type'} : term487 _107705 _107708 A B.
Proof. exact (fun _54419 : type839 _107708 B => @lem4561096 _107705 _107708 A B _54419). Qed.
Lemma lem4561099 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term183 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4561100 {_107708 B : Type'} (P : Prop) (c : type839 _107708 B) (Q : type214 _107708 B) : term389 _107708 B P c Q.
Proof. exact (@lem4561099 (type839 _107708 B) P c Q). Qed.
Lemma lem4561101 {_107705 _107708 A B : Type'} : term488 _107705 _107708 A B.
Proof. exact (@lem4561100 _107708 B (term455 _107705 _107708 A B) (term337 _107708 B) (term489 _107705 _107708 A B)). Qed.
Lemma lem4561102 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : (term490 _107705 _107708 A B _54419) = (term485 _107705 _107708 A B _54419).
Proof. exact (eq_refl (term490 _107705 _107708 A B _54419)). Qed.
Lemma lem4561103 {_107705 _107708 A B : Type'} : (term491 _107705 _107708 A B) = (term491 _107705 _107708 A B).
Proof. exact (eq_refl (term491 _107705 _107708 A B)). Qed.
Lemma lem4561104 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : ((term455 _107705 _107708 A B) = (term490 _107705 _107708 A B _54419)) = ((term455 _107705 _107708 A B) = (term485 _107705 _107708 A B _54419)).
Proof. exact (MK_COMB (@lem4561103 _107705 _107708 A B) (@lem4561102 _107705 _107708 A B _54419)). Qed.
Lemma lem4561105 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term394 _107708 B _54419) = (term394 _107708 B _54419).
Proof. exact (eq_refl (term394 _107708 B _54419)). Qed.
Lemma lem4561106 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : (term492 _107705 _107708 A B _54419) = (term486 _107705 _107708 A B _54419).
Proof. exact (MK_COMB (@lem4561105 _107708 B _54419) (@lem4561104 _107705 _107708 A B _54419)). Qed.
Lemma lem4561107 {_107705 _107708 A B : Type'} : (term493 _107705 _107708 A B) = (term494 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54419 : type839 _107708 B => @lem4561106 _107705 _107708 A B _54419)). Qed.
Lemma lem4561108 {_107708 B : Type'} : (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop))). Qed.
Lemma lem4561109 {_107705 _107708 A B : Type'} : (term495 _107705 _107708 A B) = (term487 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4561108 _107708 B) (@lem4561107 _107705 _107708 A B)). Qed.
Lemma lem4561110 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561111 {_107705 _107708 A B : Type'} : (term496 _107705 _107708 A B) = (term497 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4561110) (@lem4561109 _107705 _107708 A B)). Qed.
Lemma lem4561112 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : (term490 _107705 _107708 A B _54419) = (term485 _107705 _107708 A B _54419).
Proof. exact (eq_refl (term490 _107705 _107708 A B _54419)). Qed.
Lemma lem4561113 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term394 _107708 B _54419) = (term394 _107708 B _54419).
Proof. exact (eq_refl (term394 _107708 B _54419)). Qed.
Lemma lem4561114 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : (term498 _107705 _107708 A B _54419) = (term499 _107705 _107708 A B _54419).
Proof. exact (MK_COMB (@lem4561113 _107708 B _54419) (@lem4561112 _107705 _107708 A B _54419)). Qed.
Lemma lem4561115 {_107705 _107708 A B : Type'} : (term500 _107705 _107708 A B) = (term501 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54419 : type839 _107708 B => @lem4561114 _107705 _107708 A B _54419)). Qed.
Lemma lem4561116 {_107708 B : Type'} : (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop))). Qed.
Lemma lem4561117 {_107705 _107708 A B : Type'} : (term502 _107705 _107708 A B) = (term503 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4561116 _107708 B) (@lem4561115 _107705 _107708 A B)). Qed.
Lemma lem4561118 {_107705 _107708 A B : Type'} : (term491 _107705 _107708 A B) = (term491 _107705 _107708 A B).
Proof. exact (eq_refl (term491 _107705 _107708 A B)). Qed.
Lemma lem4561119 {_107705 _107708 A B : Type'} : ((term455 _107705 _107708 A B) = (term502 _107705 _107708 A B)) = ((term455 _107705 _107708 A B) = (term503 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4561118 _107705 _107708 A B) (@lem4561117 _107705 _107708 A B)). Qed.
Lemma lem4561120 {_107705 _107708 A B : Type'} : (term488 _107705 _107708 A B) = (term504 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4561111 _107705 _107708 A B) (@lem4561119 _107705 _107708 A B)). Qed.
Lemma lem4561121 {_107705 _107708 A B : Type'} : term504 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4561120 _107705 _107708 A B) (@lem4561101 _107705 _107708 A B)). Qed.
Lemma lem4561122 {_107705 _107708 A B : Type'} : (term455 _107705 _107708 A B) = (term503 _107705 _107708 A B).
Proof. exact (@lem4561121 _107705 _107708 A B (@lem4561097 _107705 _107708 A B)). Qed.
Lemma lem4561124 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4561125 {_107708 B : Type'} (s : type839 _107708 B) (t : type839 _107708 B) : (s = (term408 _107708 B t)) = (term409 _107708 B s t).
Proof. exact (@lem4561124 (type674 _107708 B) (B -> Prop) s t). Qed.
Lemma lem4561126 {_107708 B : Type'} (_54419 : type839 _107708 B) : (_54419 = (term410 _107708 B)) = (term411 _107708 B _54419).
Proof. exact (@lem4561125 _107708 B _54419 (term337 _107708 B)). Qed.
Lemma lem4561127 {_107708 B : Type'} (t : B -> Prop) : (term338 _107708 B t) = (term339 _107708 B t).
Proof. exact (eq_refl (term338 _107708 B t)). Qed.
Lemma lem4561128 {_107708 B : Type'} : (term410 _107708 B) = (term337 _107708 B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561127 _107708 B t)). Qed.
Lemma lem4561129 {_107708 B : Type'} (_54419 : type839 _107708 B) : (@eq ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop) _54419) = (@eq ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop) _54419).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop) _54419)). Qed.
Lemma lem4561130 {_107708 B : Type'} (_54419 : type839 _107708 B) : (_54419 = (term410 _107708 B)) = (_54419 = (term337 _107708 B)).
Proof. exact (MK_COMB (@lem4561129 _107708 B _54419) (@lem4561128 _107708 B)). Qed.
Lemma lem4561131 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4561132 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term412 _107708 B _54419) = (term413 _107708 B _54419).
Proof. exact (MK_COMB (@lem4561131) (@lem4561130 _107708 B _54419)). Qed.
Lemma lem4561133 {_107708 B : Type'} (t : B -> Prop) : (term338 _107708 B t) = (term339 _107708 B t).
Proof. exact (eq_refl (term338 _107708 B t)). Qed.
Lemma lem4561134 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term340 _107708 B _54419 t) = (term340 _107708 B _54419 t).
Proof. exact (eq_refl (term340 _107708 B _54419 t)). Qed.
Lemma lem4561135 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((_54419 t) = (term338 _107708 B t)) = ((_54419 t) = (term339 _107708 B t)).
Proof. exact (MK_COMB (@lem4561134 _107708 B _54419 t) (@lem4561133 _107708 B t)). Qed.
Lemma lem4561136 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term414 _107708 B _54419) = (term415 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561135 _107708 B _54419 t)). Qed.
Lemma lem4561137 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561138 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term411 _107708 B _54419) = (term416 _107708 B _54419).
Proof. exact (MK_COMB (@lem4561137 B) (@lem4561136 _107708 B _54419)). Qed.
Lemma lem4561139 {_107708 B : Type'} (_54419 : type839 _107708 B) : ((_54419 = (term410 _107708 B)) = (term411 _107708 B _54419)) = ((_54419 = (term337 _107708 B)) = (term416 _107708 B _54419)).
Proof. exact (MK_COMB (@lem4561132 _107708 B _54419) (@lem4561138 _107708 B _54419)). Qed.
Lemma lem4561140 {_107708 B : Type'} (_54419 : type839 _107708 B) : (_54419 = (term337 _107708 B)) = (term416 _107708 B _54419).
Proof. exact (EQ_MP (@lem4561139 _107708 B _54419) (@lem4561126 _107708 B _54419)). Qed.
Lemma lem4561142 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4561143 {_107708 B : Type'} (s : type674 _107708 B) (t : type674 _107708 B) : (s = (term417 _107708 B t)) = (term418 _107708 B s t).
Proof. exact (@lem4561142 (type1446 _107708 B) (_107708 -> Prop) s t). Qed.
Lemma lem4561144 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((_54419 t) = (term419 _107708 B t)) = (term420 _107708 B _54419 t).
Proof. exact (@lem4561143 _107708 B (_54419 t) (term339 _107708 B t)). Qed.
Lemma lem4561145 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) : (term341 _107708 B t s) = (term342 _107708 B t s).
Proof. exact (eq_refl (term341 _107708 B t s)). Qed.
Lemma lem4561146 {_107708 B : Type'} (t : B -> Prop) : (term419 _107708 B t) = (term339 _107708 B t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561145 _107708 B t s)). Qed.
Lemma lem4561147 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term340 _107708 B _54419 t) = (term340 _107708 B _54419 t).
Proof. exact (eq_refl (term340 _107708 B _54419 t)). Qed.
Lemma lem4561148 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((_54419 t) = (term419 _107708 B t)) = ((_54419 t) = (term339 _107708 B t)).
Proof. exact (MK_COMB (@lem4561147 _107708 B _54419 t) (@lem4561146 _107708 B t)). Qed.
Lemma lem4561149 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4561150 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term421 _107708 B _54419 t) = (term422 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4561149) (@lem4561148 _107708 B _54419 t)). Qed.
Lemma lem4561151 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) : (term341 _107708 B t s) = (term342 _107708 B t s).
Proof. exact (eq_refl (term341 _107708 B t s)). Qed.
Lemma lem4561152 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term343 _107708 B _54419 t s) = (term343 _107708 B _54419 t s).
Proof. exact (eq_refl (term343 _107708 B _54419 t s)). Qed.
Lemma lem4561153 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((_54419 t s) = (term341 _107708 B t s)) = ((_54419 t s) = (term342 _107708 B t s)).
Proof. exact (MK_COMB (@lem4561152 _107708 B _54419 t s) (@lem4561151 _107708 B t s)). Qed.
Lemma lem4561154 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term423 _107708 B _54419 t) = (term424 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561153 _107708 B _54419 t s)). Qed.
Lemma lem4561155 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561156 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term420 _107708 B _54419 t) = (term425 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4561155 _107708) (@lem4561154 _107708 B _54419 t)). Qed.
Lemma lem4561157 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (((_54419 t) = (term419 _107708 B t)) = (term420 _107708 B _54419 t)) = (((_54419 t) = (term339 _107708 B t)) = (term425 _107708 B _54419 t)).
Proof. exact (MK_COMB (@lem4561150 _107708 B _54419 t) (@lem4561156 _107708 B _54419 t)). Qed.
Lemma lem4561158 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((_54419 t) = (term339 _107708 B t)) = (term425 _107708 B _54419 t).
Proof. exact (EQ_MP (@lem4561157 _107708 B _54419 t) (@lem4561144 _107708 B _54419 t)). Qed.
Lemma lem4561160 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4561161 {_107708 B : Type'} (s : type1446 _107708 B) (t : type1446 _107708 B) : (s = (term426 _107708 B t)) = (term427 _107708 B s t).
Proof. exact (@lem4561160 (type572 _107708 B) B s t). Qed.
Lemma lem4561162 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((_54419 t s) = (term428 _107708 B t s)) = (term429 _107708 B _54419 t s).
Proof. exact (@lem4561161 _107708 B (_54419 t s) (term342 _107708 B t s)). Qed.
Lemma lem4561163 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term344 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (eq_refl (term344 _107708 B t s d)). Qed.
Lemma lem4561164 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) : (term428 _107708 B t s) = (term342 _107708 B t s).
Proof. exact (fun_ext (fun d : B => @lem4561163 _107708 B t s d)). Qed.
Lemma lem4561165 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term343 _107708 B _54419 t s) = (term343 _107708 B _54419 t s).
Proof. exact (eq_refl (term343 _107708 B _54419 t s)). Qed.
Lemma lem4561166 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((_54419 t s) = (term428 _107708 B t s)) = ((_54419 t s) = (term342 _107708 B t s)).
Proof. exact (MK_COMB (@lem4561165 _107708 B _54419 t s) (@lem4561164 _107708 B t s)). Qed.
Lemma lem4561167 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4561168 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term430 _107708 B _54419 t s) = (term431 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4561167) (@lem4561166 _107708 B _54419 t s)). Qed.
Lemma lem4561169 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term344 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (eq_refl (term344 _107708 B t s d)). Qed.
Lemma lem4561170 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term345 _107708 B _54419 t s d) = (term345 _107708 B _54419 t s d).
Proof. exact (eq_refl (term345 _107708 B _54419 t s d)). Qed.
Lemma lem4561171 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d) = (term344 _107708 B t s d)) = ((_54419 t s d) = (term85 _107708 B t s d)).
Proof. exact (MK_COMB (@lem4561170 _107708 B _54419 t s d) (@lem4561169 _107708 B t s d)). Qed.
Lemma lem4561172 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term432 _107708 B _54419 t s) = (term433 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4561171 _107708 B _54419 t s d)). Qed.
Lemma lem4561173 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4561174 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term429 _107708 B _54419 t s) = (term434 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4561173 B) (@lem4561172 _107708 B _54419 t s)). Qed.
Lemma lem4561175 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (((_54419 t s) = (term428 _107708 B t s)) = (term429 _107708 B _54419 t s)) = (((_54419 t s) = (term342 _107708 B t s)) = (term434 _107708 B _54419 t s)).
Proof. exact (MK_COMB (@lem4561168 _107708 B _54419 t s) (@lem4561174 _107708 B _54419 t s)). Qed.
Lemma lem4561176 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((_54419 t s) = (term342 _107708 B t s)) = (term434 _107708 B _54419 t s).
Proof. exact (EQ_MP (@lem4561175 _107708 B _54419 t s) (@lem4561162 _107708 B _54419 t s)). Qed.
Lemma lem4561178 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4561179 {_107708 B : Type'} (s : type572 _107708 B) (t : type572 _107708 B) : (s = (term435 _107708 B t)) = (term436 _107708 B s t).
Proof. exact (@lem4561178 Prop (_107708 -> B) s t). Qed.
Lemma lem4561180 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d) = (term437 _107708 B t s d)) = (term438 _107708 B _54419 t s d).
Proof. exact (@lem4561179 _107708 B (_54419 t s d) (term85 _107708 B t s d)). Qed.
Lemma lem4561181 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term439 _107708 B t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term439 _107708 B t s d GEN_PVAR_148)). Qed.
Lemma lem4561182 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term437 _107708 B t s d) = (term85 _107708 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4561181 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4561183 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term345 _107708 B _54419 t s d) = (term345 _107708 B _54419 t s d).
Proof. exact (eq_refl (term345 _107708 B _54419 t s d)). Qed.
Lemma lem4561184 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d) = (term437 _107708 B t s d)) = ((_54419 t s d) = (term85 _107708 B t s d)).
Proof. exact (MK_COMB (@lem4561183 _107708 B _54419 t s d) (@lem4561182 _107708 B t s d)). Qed.
Lemma lem4561185 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4561186 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term440 _107708 B _54419 t s d) = (term441 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4561185) (@lem4561184 _107708 B _54419 t s d)). Qed.
Lemma lem4561187 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term439 _107708 B t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term439 _107708 B t s d GEN_PVAR_148)). Qed.
Lemma lem4561188 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term442 _107708 B _54419 t s d GEN_PVAR_148) = (term442 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4561189 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d GEN_PVAR_148) = (term439 _107708 B t s d GEN_PVAR_148)) = ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4561188 _107708 B _54419 t s d GEN_PVAR_148) (@lem4561187 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4561190 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term443 _107708 B _54419 t s d) = (term444 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4561189 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4561191 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4561192 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term438 _107708 B _54419 t s d) = (term445 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4561191 _107708 B) (@lem4561190 _107708 B _54419 t s d)). Qed.
Lemma lem4561193 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (((_54419 t s d) = (term437 _107708 B t s d)) = (term438 _107708 B _54419 t s d)) = (((_54419 t s d) = (term85 _107708 B t s d)) = (term445 _107708 B _54419 t s d)).
Proof. exact (MK_COMB (@lem4561186 _107708 B _54419 t s d) (@lem4561192 _107708 B _54419 t s d)). Qed.
Lemma lem4561194 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d) = (term85 _107708 B t s d)) = (term445 _107708 B _54419 t s d).
Proof. exact (EQ_MP (@lem4561193 _107708 B _54419 t s d) (@lem4561180 _107708 B _54419 t s d)). Qed.
Lemma lem4561195 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)) = ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d))). Qed.
Lemma lem4561196 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term444 _107708 B _54419 t s d) = (term444 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4561195 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4561197 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4561198 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term445 _107708 B _54419 t s d) = (term445 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4561197 _107708 B) (@lem4561196 _107708 B _54419 t s d)). Qed.
Lemma lem4561199 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d) = (term85 _107708 B t s d)) = (term445 _107708 B _54419 t s d).
Proof. exact (TRANS (@lem4561194 _107708 B _54419 t s d) (@lem4561198 _107708 B _54419 t s d)). Qed.
Lemma lem4561200 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term433 _107708 B _54419 t s) = (term446 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4561199 _107708 B _54419 t s d)). Qed.
Lemma lem4561201 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4561202 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term434 _107708 B _54419 t s) = (term447 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4561201 B) (@lem4561200 _107708 B _54419 t s)). Qed.
Lemma lem4561203 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((_54419 t s) = (term342 _107708 B t s)) = (term447 _107708 B _54419 t s).
Proof. exact (TRANS (@lem4561176 _107708 B _54419 t s) (@lem4561202 _107708 B _54419 t s)). Qed.
Lemma lem4561204 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term424 _107708 B _54419 t) = (term448 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561203 _107708 B _54419 t s)). Qed.
Lemma lem4561205 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561206 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term425 _107708 B _54419 t) = (term449 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4561205 _107708) (@lem4561204 _107708 B _54419 t)). Qed.
Lemma lem4561207 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((_54419 t) = (term339 _107708 B t)) = (term449 _107708 B _54419 t).
Proof. exact (TRANS (@lem4561158 _107708 B _54419 t) (@lem4561206 _107708 B _54419 t)). Qed.
Lemma lem4561208 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term415 _107708 B _54419) = (term450 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561207 _107708 B _54419 t)). Qed.
Lemma lem4561209 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561210 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term416 _107708 B _54419) = (term451 _107708 B _54419).
Proof. exact (MK_COMB (@lem4561209 B) (@lem4561208 _107708 B _54419)). Qed.
Lemma lem4561211 {_107708 B : Type'} (_54419 : type839 _107708 B) : (_54419 = (term337 _107708 B)) = (term451 _107708 B _54419).
Proof. exact (TRANS (@lem4561140 _107708 B _54419) (@lem4561210 _107708 B _54419)). Qed.
Lemma lem4561212 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561213 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term394 _107708 B _54419) = (term452 _107708 B _54419).
Proof. exact (MK_COMB (@lem4561212) (@lem4561211 _107708 B _54419)). Qed.
Lemma lem4561214 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : (term485 _107705 _107708 A B _54419) = (term485 _107705 _107708 A B _54419).
Proof. exact (eq_refl (term485 _107705 _107708 A B _54419)). Qed.
Lemma lem4561215 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) : (term499 _107705 _107708 A B _54419) = (term505 _107705 _107708 A B _54419).
Proof. exact (MK_COMB (@lem4561213 _107708 B _54419) (@lem4561214 _107705 _107708 A B _54419)). Qed.
Lemma lem4561216 {_107705 _107708 A B : Type'} : (term501 _107705 _107708 A B) = (term506 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54419 : type839 _107708 B => @lem4561215 _107705 _107708 A B _54419)). Qed.
Lemma lem4561217 {_107708 B : Type'} : (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop))). Qed.
Lemma lem4561218 {_107705 _107708 A B : Type'} : (term503 _107705 _107708 A B) = (term507 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4561217 _107708 B) (@lem4561216 _107705 _107708 A B)). Qed.
Lemma lem4561219 {_107705 _107708 A B : Type'} : (term491 _107705 _107708 A B) = (term491 _107705 _107708 A B).
Proof. exact (eq_refl (term491 _107705 _107708 A B)). Qed.
Lemma lem4561220 {_107705 _107708 A B : Type'} : ((term455 _107705 _107708 A B) = (term503 _107705 _107708 A B)) = ((term455 _107705 _107708 A B) = (term507 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4561219 _107705 _107708 A B) (@lem4561218 _107705 _107708 A B)). Qed.
Lemma lem4561221 {_107705 _107708 A B : Type'} : (term455 _107705 _107708 A B) = (term507 _107705 _107708 A B).
Proof. exact (EQ_MP (@lem4561220 _107705 _107708 A B) (@lem4561122 _107705 _107708 A B)). Qed.
Lemma lem4561222 {A B : Type'} (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : _54420 = (term337 A B).
Proof. exact (h1). Qed.
Lemma lem4561223 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4561224 {A B : Type'} (t : B -> Prop) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (_54420 t) = (term338 A B t).
Proof. exact (MK_COMB (@lem4561222 A B _54420 h1) (@lem4561223 B t)). Qed.
Lemma lem4561225 {A B : Type'} (t : B -> Prop) : (term338 A B t) = (term339 A B t).
Proof. exact (eq_refl (term338 A B t)). Qed.
Lemma lem4561226 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term340 A B _54420 t) = (term340 A B _54420 t).
Proof. exact (eq_refl (term340 A B _54420 t)). Qed.
Lemma lem4561227 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((_54420 t) = (term338 A B t)) = ((_54420 t) = (term339 A B t)).
Proof. exact (MK_COMB (@lem4561226 A B _54420 t) (@lem4561225 A B t)). Qed.
Lemma lem4561228 {A B : Type'} (t : B -> Prop) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (_54420 t) = (term339 A B t).
Proof. exact (EQ_MP (@lem4561227 A B _54420 t) (@lem4561224 A B t _54420 h1)). Qed.
Lemma lem4561229 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4561230 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (_54420 t s) = (term341 A B t s).
Proof. exact (MK_COMB (@lem4561228 A B t _54420 h1) (@lem4561229 A s)). Qed.
Lemma lem4561231 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term341 A B t s) = (term342 A B t s).
Proof. exact (eq_refl (term341 A B t s)). Qed.
Lemma lem4561232 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term343 A B _54420 t s) = (term343 A B _54420 t s).
Proof. exact (eq_refl (term343 A B _54420 t s)). Qed.
Lemma lem4561233 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_54420 t s) = (term341 A B t s)) = ((_54420 t s) = (term342 A B t s)).
Proof. exact (MK_COMB (@lem4561232 A B _54420 t s) (@lem4561231 A B t s)). Qed.
Lemma lem4561234 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (_54420 t s) = (term342 A B t s).
Proof. exact (EQ_MP (@lem4561233 A B _54420 t s) (@lem4561230 A B t s _54420 h1)). Qed.
Lemma lem4561235 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4561236 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (_54420 t s d) = (term344 A B t s d).
Proof. exact (MK_COMB (@lem4561234 A B t s _54420 h1) (@lem4561235 B d)). Qed.
Lemma lem4561237 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term344 A B t s d) = (term85 A B t s d).
Proof. exact (eq_refl (term344 A B t s d)). Qed.
Lemma lem4561238 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term345 A B _54420 t s d) = (term345 A B _54420 t s d).
Proof. exact (eq_refl (term345 A B _54420 t s d)). Qed.
Lemma lem4561239 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d) = (term344 A B t s d)) = ((_54420 t s d) = (term85 A B t s d)).
Proof. exact (MK_COMB (@lem4561238 A B _54420 t s d) (@lem4561237 A B t s d)). Qed.
Lemma lem4561240 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (_54420 t s d) = (term85 A B t s d).
Proof. exact (EQ_MP (@lem4561239 A B _54420 t s d) (@lem4561236 A B t s d _54420 h1)). Qed.
Lemma lem4561246 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4561248 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term85 A B t s d) = (_54420 t s d).
Proof. exact (SYM (@lem4561240 A B t s d _54420 h1)). Qed.
Lemma lem4561249 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term85 A B t s d) = (_54420 t s d).
Proof. exact (@lem4561248 A B t s d _54420 h1). Qed.
Lemma lem4561250 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4561251 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term86 A B t s d) = (term346 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4561250 A B) (@lem4561249 A B t s d _54420 h1)). Qed.
Lemma lem4561252 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4561253 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term87 A B t s d) = (term347 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4561252 A B) (@lem4561251 A B t s d _54420 h1)). Qed.
Lemma lem4561254 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term88 A B t s d n m) = (term348 A B _54420 t s d n m).
Proof. exact (MK_COMB (@lem4561253 A B t s d _54420 h1) (@lem4561246 n m)). Qed.
Lemma lem4561269 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term89 A B s m t n) = (term89 A B s m t n).
Proof. exact (eq_refl (term89 A B s m t n)). Qed.
Lemma lem4561270 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term90 A B t s d n m) = (term349 A B _54420 t s d n m).
Proof. exact (MK_COMB (@lem4561269 A B s m t n) (@lem4561254 A B t s d n m _54420 h1)). Qed.
Lemma lem4561271 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term91 A B t d n m) = (term350 A B _54420 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4561270 A B t s d n m _54420 h1)). Qed.
Lemma lem4561272 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4561273 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term92 A B t d n m) = (term351 A B _54420 t d n m).
Proof. exact (MK_COMB (@lem4561272 A) (@lem4561271 A B t d n m _54420 h1)). Qed.
Lemma lem4561274 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term93 A B t d n) = (term352 A B _54420 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4561273 A B t d n m _54420 h1)). Qed.
Lemma lem4561275 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561276 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term94 A B t d n) = (term353 A B _54420 t d n).
Proof. exact (MK_COMB (@lem4561275) (@lem4561274 A B t d n _54420 h1)). Qed.
Lemma lem4561277 {A B : Type'} (d : B) (n : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term95 A B d n) = (term354 A B _54420 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561276 A B t d n _54420 h1)). Qed.
Lemma lem4561278 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561279 {A B : Type'} (d : B) (n : nat) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term96 A B d n) = (term355 A B _54420 d n).
Proof. exact (MK_COMB (@lem4561278 B) (@lem4561277 A B d n _54420 h1)). Qed.
Lemma lem4561280 {A B : Type'} (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term97 A B d) = (term356 A B _54420 d).
Proof. exact (fun_ext (fun n : nat => @lem4561279 A B d n _54420 h1)). Qed.
Lemma lem4561281 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561282 {A B : Type'} (d : B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term98 A B d) = (term357 A B _54420 d).
Proof. exact (MK_COMB (@lem4561281) (@lem4561280 A B d _54420 h1)). Qed.
Lemma lem4561283 {A B : Type'} (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term99 A B) = (term358 A B _54420).
Proof. exact (fun_ext (fun d : B => @lem4561282 A B d _54420 h1)). Qed.
Lemma lem4561284 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4561285 {A B : Type'} (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term12 A B) = (term359 A B _54420).
Proof. exact (MK_COMB (@lem4561284 B) (@lem4561283 A B _54420 h1)). Qed.
Lemma lem4561286 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4561287 {A B : Type'} (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term21 A B) = (term508 A B _54420).
Proof. exact (MK_COMB (@lem4561286) (@lem4561285 A B _54420 h1)). Qed.
Lemma lem4561320 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term349 _107708 B _54419 t s d n m) = (term349 _107708 B _54419 t s d n m).
Proof. exact (eq_refl (term349 _107708 B _54419 t s d n m)). Qed.
Lemma lem4561321 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term350 _107708 B _54419 t d n m) = (term350 _107708 B _54419 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561320 _107708 B _54419 t s d n m)). Qed.
Lemma lem4561322 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561323 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term351 _107708 B _54419 t d n m) = (term351 _107708 B _54419 t d n m).
Proof. exact (MK_COMB (@lem4561322 _107708) (@lem4561321 _107708 B _54419 t d n m)). Qed.
Lemma lem4561324 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) : (term352 _107708 B _54419 t d n) = (term352 _107708 B _54419 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4561323 _107708 B _54419 t d n m)). Qed.
Lemma lem4561325 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561326 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) : (term353 _107708 B _54419 t d n) = (term353 _107708 B _54419 t d n).
Proof. exact (MK_COMB (@lem4561325) (@lem4561324 _107708 B _54419 t d n)). Qed.
Lemma lem4561327 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) (n : nat) : (term354 _107708 B _54419 d n) = (term354 _107708 B _54419 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561326 _107708 B _54419 t d n)). Qed.
Lemma lem4561328 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561329 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) (n : nat) : (term355 _107708 B _54419 d n) = (term355 _107708 B _54419 d n).
Proof. exact (MK_COMB (@lem4561328 B) (@lem4561327 _107708 B _54419 d n)). Qed.
Lemma lem4561330 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) : (term356 _107708 B _54419 d) = (term356 _107708 B _54419 d).
Proof. exact (fun_ext (fun n : nat => @lem4561329 _107708 B _54419 d n)). Qed.
Lemma lem4561331 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561332 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) : (term357 _107708 B _54419 d) = (term357 _107708 B _54419 d).
Proof. exact (MK_COMB (@lem4561331) (@lem4561330 _107708 B _54419 d)). Qed.
Lemma lem4561333 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term358 _107708 B _54419) = (term358 _107708 B _54419).
Proof. exact (fun_ext (fun d : B => @lem4561332 _107708 B _54419 d)). Qed.
Lemma lem4561334 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4561335 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term359 _107708 B _54419) = (term359 _107708 B _54419).
Proof. exact (MK_COMB (@lem4561334 B) (@lem4561333 _107708 B _54419)). Qed.
Lemma lem4561336 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561337 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term360 _107708 B _54419) = (term360 _107708 B _54419).
Proof. exact (MK_COMB (@lem4561336) (@lem4561335 _107708 B _54419)). Qed.
Lemma lem4561338 {_107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term456 _107708 A B _54419) = (term509 _107708 A B _54419 _54420).
Proof. exact (MK_COMB (@lem4561337 _107708 B _54419) (@lem4561287 A B _54420 h1)). Qed.
Lemma lem4561371 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term349 _107705 B _54418 t s d n m) = (term349 _107705 B _54418 t s d n m).
Proof. exact (eq_refl (term349 _107705 B _54418 t s d n m)). Qed.
Lemma lem4561372 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term350 _107705 B _54418 t d n m) = (term350 _107705 B _54418 t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4561371 _107705 B _54418 t s d n m)). Qed.
Lemma lem4561373 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561374 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term351 _107705 B _54418 t d n m) = (term351 _107705 B _54418 t d n m).
Proof. exact (MK_COMB (@lem4561373 _107705) (@lem4561372 _107705 B _54418 t d n m)). Qed.
Lemma lem4561375 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) : (term352 _107705 B _54418 t d n) = (term352 _107705 B _54418 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4561374 _107705 B _54418 t d n m)). Qed.
Lemma lem4561376 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561377 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) : (term353 _107705 B _54418 t d n) = (term353 _107705 B _54418 t d n).
Proof. exact (MK_COMB (@lem4561376) (@lem4561375 _107705 B _54418 t d n)). Qed.
Lemma lem4561378 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) (n : nat) : (term354 _107705 B _54418 d n) = (term354 _107705 B _54418 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4561377 _107705 B _54418 t d n)). Qed.
Lemma lem4561379 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561380 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) (n : nat) : (term355 _107705 B _54418 d n) = (term355 _107705 B _54418 d n).
Proof. exact (MK_COMB (@lem4561379 B) (@lem4561378 _107705 B _54418 d n)). Qed.
Lemma lem4561381 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) : (term356 _107705 B _54418 d) = (term356 _107705 B _54418 d).
Proof. exact (fun_ext (fun n : nat => @lem4561380 _107705 B _54418 d n)). Qed.
Lemma lem4561382 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561383 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) : (term357 _107705 B _54418 d) = (term357 _107705 B _54418 d).
Proof. exact (MK_COMB (@lem4561382) (@lem4561381 _107705 B _54418 d)). Qed.
Lemma lem4561384 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term358 _107705 B _54418) = (term358 _107705 B _54418).
Proof. exact (fun_ext (fun d : B => @lem4561383 _107705 B _54418 d)). Qed.
Lemma lem4561385 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4561386 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term359 _107705 B _54418) = (term359 _107705 B _54418).
Proof. exact (MK_COMB (@lem4561385 B) (@lem4561384 _107705 B _54418)). Qed.
Lemma lem4561387 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561388 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term360 _107705 B _54418) = (term360 _107705 B _54418).
Proof. exact (MK_COMB (@lem4561387) (@lem4561386 _107705 B _54418)). Qed.
Lemma lem4561389 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term457 _107705 _107708 A B _54418 _54419) = (term510 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561388 _107705 B _54418) (@lem4561338 _107708 A B _54419 _54420 h1)). Qed.
Lemma lem4561422 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term129 _107708 A _54417 t s d n m) = (term129 _107708 A _54417 t s d n m).
Proof. exact (eq_refl (term129 _107708 A _54417 t s d n m)). Qed.
Lemma lem4561423 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term130 _107708 A _54417 t d n m) = (term130 _107708 A _54417 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4561422 _107708 A _54417 t s d n m)). Qed.
Lemma lem4561424 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4561425 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term131 _107708 A _54417 t d n m) = (term131 _107708 A _54417 t d n m).
Proof. exact (MK_COMB (@lem4561424 A) (@lem4561423 _107708 A _54417 t d n m)). Qed.
Lemma lem4561426 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term132 _107708 A _54417 t d n) = (term132 _107708 A _54417 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4561425 _107708 A _54417 t d n m)). Qed.
Lemma lem4561427 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561428 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term133 _107708 A _54417 t d n) = (term133 _107708 A _54417 t d n).
Proof. exact (MK_COMB (@lem4561427) (@lem4561426 _107708 A _54417 t d n)). Qed.
Lemma lem4561429 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term134 _107708 A _54417 d n) = (term134 _107708 A _54417 d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4561428 _107708 A _54417 t d n)). Qed.
Lemma lem4561430 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561431 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term135 _107708 A _54417 d n) = (term135 _107708 A _54417 d n).
Proof. exact (MK_COMB (@lem4561430 _107708) (@lem4561429 _107708 A _54417 d n)). Qed.
Lemma lem4561432 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term136 _107708 A _54417 d) = (term136 _107708 A _54417 d).
Proof. exact (fun_ext (fun n : nat => @lem4561431 _107708 A _54417 d n)). Qed.
Lemma lem4561433 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561434 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term137 _107708 A _54417 d) = (term137 _107708 A _54417 d).
Proof. exact (MK_COMB (@lem4561433) (@lem4561432 _107708 A _54417 d)). Qed.
Lemma lem4561435 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term138 _107708 A _54417) = (term138 _107708 A _54417).
Proof. exact (fun_ext (fun d : _107708 => @lem4561434 _107708 A _54417 d)). Qed.
Lemma lem4561436 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4561437 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term139 _107708 A _54417) = (term139 _107708 A _54417).
Proof. exact (MK_COMB (@lem4561436 _107708) (@lem4561435 _107708 A _54417)). Qed.
Lemma lem4561438 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561439 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term140 _107708 A _54417) = (term140 _107708 A _54417).
Proof. exact (MK_COMB (@lem4561438) (@lem4561437 _107708 A _54417)). Qed.
Lemma lem4561440 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term458 _107705 _107708 A B _54417 _54418 _54419) = (term511 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561439 _107708 A _54417) (@lem4561389 _107705 _107708 A B _54418 _54419 _54420 h1)). Qed.
Lemma lem4561473 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 A _54416 t s d n m) = (term129 _107705 A _54416 t s d n m).
Proof. exact (eq_refl (term129 _107705 A _54416 t s d n m)). Qed.
Lemma lem4561474 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 A _54416 t d n m) = (term130 _107705 A _54416 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4561473 _107705 A _54416 t s d n m)). Qed.
Lemma lem4561475 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4561476 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 A _54416 t d n m) = (term131 _107705 A _54416 t d n m).
Proof. exact (MK_COMB (@lem4561475 A) (@lem4561474 _107705 A _54416 t d n m)). Qed.
Lemma lem4561477 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 A _54416 t d n) = (term132 _107705 A _54416 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4561476 _107705 A _54416 t d n m)). Qed.
Lemma lem4561478 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561479 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 A _54416 t d n) = (term133 _107705 A _54416 t d n).
Proof. exact (MK_COMB (@lem4561478) (@lem4561477 _107705 A _54416 t d n)). Qed.
Lemma lem4561480 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term134 _107705 A _54416 d n) = (term134 _107705 A _54416 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4561479 _107705 A _54416 t d n)). Qed.
Lemma lem4561481 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561482 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term135 _107705 A _54416 d n) = (term135 _107705 A _54416 d n).
Proof. exact (MK_COMB (@lem4561481 _107705) (@lem4561480 _107705 A _54416 d n)). Qed.
Lemma lem4561483 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term136 _107705 A _54416 d) = (term136 _107705 A _54416 d).
Proof. exact (fun_ext (fun n : nat => @lem4561482 _107705 A _54416 d n)). Qed.
Lemma lem4561484 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561485 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term137 _107705 A _54416 d) = (term137 _107705 A _54416 d).
Proof. exact (MK_COMB (@lem4561484) (@lem4561483 _107705 A _54416 d)). Qed.
Lemma lem4561486 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term138 _107705 A _54416) = (term138 _107705 A _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4561485 _107705 A _54416 d)). Qed.
Lemma lem4561487 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4561488 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term139 _107705 A _54416) = (term139 _107705 A _54416).
Proof. exact (MK_COMB (@lem4561487 _107705) (@lem4561486 _107705 A _54416)). Qed.
Lemma lem4561489 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561490 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term140 _107705 A _54416) = (term140 _107705 A _54416).
Proof. exact (MK_COMB (@lem4561489) (@lem4561488 _107705 A _54416)). Qed.
Lemma lem4561491 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term459 _107705 _107708 A B _54416 _54417 _54418 _54419) = (term512 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561490 _107705 A _54416) (@lem4561440 _107705 _107708 A B _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561524 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term129 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4561525 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561524 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4561526 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561527 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4561526 _107708) (@lem4561525 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4561528 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4561527 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4561529 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561530 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4561529) (@lem4561528 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4561531 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4561530 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4561532 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561533 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4561532 _107705) (@lem4561531 _107705 _107708 _54415 d n)). Qed.
Lemma lem4561534 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4561533 _107705 _107708 _54415 d n)). Qed.
Lemma lem4561535 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561536 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4561535) (@lem4561534 _107705 _107708 _54415 d)). Qed.
Lemma lem4561537 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4561536 _107705 _107708 _54415 d)). Qed.
Lemma lem4561538 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4561539 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4561538 _107705) (@lem4561537 _107705 _107708 _54415)). Qed.
Lemma lem4561540 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561541 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term140 _107705 _107708 _54415) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4561540) (@lem4561539 _107705 _107708 _54415)). Qed.
Lemma lem4561542 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term460 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term513 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561541 _107705 _107708 _54415) (@lem4561491 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561563 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4561564 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4561563 A B s n)). Qed.
Lemma lem4561565 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561566 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4561565) (@lem4561564 A B s)). Qed.
Lemma lem4561567 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4561566 A B s)). Qed.
Lemma lem4561568 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4561569 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4561568 A B) (@lem4561567 A B)). Qed.
Lemma lem4561570 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561571 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4561570) (@lem4561569 A B)). Qed.
Lemma lem4561572 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term461 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term514 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561571 A B) (@lem4561542 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561593 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4561594 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4561593 _107708 A s n)). Qed.
Lemma lem4561595 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561596 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4561595) (@lem4561594 _107708 A s)). Qed.
Lemma lem4561597 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4561596 _107708 A s)). Qed.
Lemma lem4561598 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4561599 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4561598 _107708 A) (@lem4561597 _107708 A)). Qed.
Lemma lem4561600 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561601 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4561600) (@lem4561599 _107708 A)). Qed.
Lemma lem4561602 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term462 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term515 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561601 _107708 A) (@lem4561572 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561623 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4561624 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4561623 _107705 A s n)). Qed.
Lemma lem4561625 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561626 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4561625) (@lem4561624 _107705 A s)). Qed.
Lemma lem4561627 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4561626 _107705 A s)). Qed.
Lemma lem4561628 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4561629 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4561628 _107705 A) (@lem4561627 _107705 A)). Qed.
Lemma lem4561630 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561631 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4561630) (@lem4561629 _107705 A)). Qed.
Lemma lem4561632 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term463 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term516 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561631 _107705 A) (@lem4561602 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561653 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4561654 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4561653 _107708 B s n)). Qed.
Lemma lem4561655 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561656 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4561655) (@lem4561654 _107708 B s)). Qed.
Lemma lem4561657 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4561656 _107708 B s)). Qed.
Lemma lem4561658 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4561659 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4561658 _107708 B) (@lem4561657 _107708 B)). Qed.
Lemma lem4561660 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561661 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4561660) (@lem4561659 _107708 B)). Qed.
Lemma lem4561662 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term464 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term517 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561661 _107708 B) (@lem4561632 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561683 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4561684 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4561683 _107705 _107708 s n)). Qed.
Lemma lem4561685 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561686 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4561685) (@lem4561684 _107705 _107708 s)). Qed.
Lemma lem4561687 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4561686 _107705 _107708 s)). Qed.
Lemma lem4561688 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4561689 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4561688 _107705 _107708) (@lem4561687 _107705 _107708)). Qed.
Lemma lem4561690 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561691 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4561690) (@lem4561689 _107705 _107708)). Qed.
Lemma lem4561692 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term465 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term518 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561691 _107705 _107708) (@lem4561662 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561713 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4561714 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4561713 _107705 B s n)). Qed.
Lemma lem4561715 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561716 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4561715) (@lem4561714 _107705 B s)). Qed.
Lemma lem4561717 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4561716 _107705 B s)). Qed.
Lemma lem4561718 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4561719 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4561718 _107705 B) (@lem4561717 _107705 B)). Qed.
Lemma lem4561720 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561721 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4561720) (@lem4561719 _107705 B)). Qed.
Lemma lem4561722 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term466 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term519 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561721 _107705 B) (@lem4561692 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561743 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4561744 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4561743 B s n)). Qed.
Lemma lem4561745 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561746 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4561745) (@lem4561744 B s)). Qed.
Lemma lem4561747 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4561746 B s)). Qed.
Lemma lem4561748 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4561749 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4561748 B) (@lem4561747 B)). Qed.
Lemma lem4561750 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561751 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4561750) (@lem4561749 B)). Qed.
Lemma lem4561752 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term467 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term520 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561751 B) (@lem4561722 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561773 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4561774 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4561773 A s n)). Qed.
Lemma lem4561775 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561776 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4561775) (@lem4561774 A s)). Qed.
Lemma lem4561777 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4561776 A s)). Qed.
Lemma lem4561778 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4561779 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4561778 A) (@lem4561777 A)). Qed.
Lemma lem4561780 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561781 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4561780) (@lem4561779 A)). Qed.
Lemma lem4561782 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term468 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term521 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561781 A) (@lem4561752 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561803 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4561804 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4561803 _107708 s n)). Qed.
Lemma lem4561805 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561806 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4561805) (@lem4561804 _107708 s)). Qed.
Lemma lem4561807 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561806 _107708 s)). Qed.
Lemma lem4561808 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561809 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4561808 _107708) (@lem4561807 _107708)). Qed.
Lemma lem4561810 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561811 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4561810) (@lem4561809 _107708)). Qed.
Lemma lem4561812 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term469 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term522 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561811 _107708) (@lem4561782 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561833 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4561834 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4561833 _107705 s n)). Qed.
Lemma lem4561835 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4561836 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4561835) (@lem4561834 _107705 s)). Qed.
Lemma lem4561837 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4561836 _107705 s)). Qed.
Lemma lem4561838 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561839 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4561838 _107705) (@lem4561837 _107705)). Qed.
Lemma lem4561840 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561841 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4561840) (@lem4561839 _107705)). Qed.
Lemma lem4561842 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term470 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term523 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561841 _107705) (@lem4561812 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561865 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term168 _107705 _107708 _54415 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4561866 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term170 _107705 _107708 _54415 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4561865 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4561867 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561868 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term172 _107705 _107708 _54415 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4561867 _107705) (@lem4561866 _107705 _107708 _54415 s d)). Qed.
Lemma lem4561869 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term174 _107705 _107708 _54415 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561868 _107705 _107708 _54415 s d)). Qed.
Lemma lem4561870 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561871 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term175 _107705 _107708 _54415 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4561870 _107708) (@lem4561869 _107705 _107708 _54415 d)). Qed.
Lemma lem4561872 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4561873 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4561872) (@lem4561871 _107705 _107708 _54415 d)). Qed.
Lemma lem4561874 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561875 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term177 _107705 _107708 _54415 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4561874) (@lem4561873 _107705 _107708 _54415 d)). Qed.
Lemma lem4561876 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term471 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419) = (term524 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561875 _107705 _107708 _54415 d) (@lem4561842 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561877 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term472 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term525 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (fun_ext (fun d : _107705 => @lem4561876 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561878 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4561879 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term473 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term526 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561878 _107705) (@lem4561877 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561880 {_107705 _107708 : Type'} (f : _107708 -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4561897 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (d : _107705) : (term100 _107705 _107708 s f x d) = (term100 _107705 _107708 s f x d).
Proof. exact (eq_refl (term100 _107705 _107708 s f x d)). Qed.
Lemma lem4561898 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term101 _107705 _107708 s f d) = (term101 _107705 _107708 s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4561897 _107705 _107708 s f x d)). Qed.
Lemma lem4561899 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4561900 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term102 _107705 _107708 s f d) = (term102 _107705 _107708 s f d).
Proof. exact (MK_COMB (@lem4561899 _107708) (@lem4561898 _107705 _107708 s f d)). Qed.
Lemma lem4561915 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (x : _107708) (t : _107705 -> Prop) : (term103 _107705 _107708 s f x t) = (term103 _107705 _107708 s f x t).
Proof. exact (eq_refl (term103 _107705 _107708 s f x t)). Qed.
Lemma lem4561916 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term104 _107705 _107708 s f t) = (term104 _107705 _107708 s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4561915 _107705 _107708 s f x t)). Qed.
Lemma lem4561917 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4561918 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term105 _107705 _107708 s f t) = (term105 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4561917 _107708) (@lem4561916 _107705 _107708 s f t)). Qed.
Lemma lem4561919 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4561920 {_107705 _107708 : Type'} (s : _107708 -> Prop) (f : _107708 -> _107705) (t : _107705 -> Prop) : (term106 _107705 _107708 s f t) = (term106 _107705 _107708 s f t).
Proof. exact (MK_COMB (@lem4561919) (@lem4561918 _107705 _107708 s f t)). Qed.
Lemma lem4561921 {_107705 _107708 : Type'} (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term107 _107705 _107708 t s f d) = (term107 _107705 _107708 t s f d).
Proof. exact (MK_COMB (@lem4561920 _107705 _107708 s f t) (@lem4561900 _107705 _107708 s f d)). Qed.
Lemma lem4561924 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) : (@SETSPEC (_107708 -> _107705) GEN_PVAR_150) = (@SETSPEC (_107708 -> _107705) GEN_PVAR_150).
Proof. exact (eq_refl (@SETSPEC (_107708 -> _107705) GEN_PVAR_150)). Qed.
Lemma lem4561925 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : _107708 -> _107705) (d : _107705) : (term108 _107705 _107708 GEN_PVAR_150 t s f d) = (term108 _107705 _107708 GEN_PVAR_150 t s f d).
Proof. exact (MK_COMB (@lem4561924 _107705 _107708 GEN_PVAR_150) (@lem4561921 _107705 _107708 t s f d)). Qed.
Lemma lem4561926 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4561925 _107705 _107708 GEN_PVAR_150 t s f d) (@lem4561880 _107705 _107708 f)). Qed.
Lemma lem4561927 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4561926 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4561928 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4561929 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4561928 _107705 _107708) (@lem4561927 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4561940 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4561941 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4561940 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4561929 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4561942 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4561941 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4561943 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4561944 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4561943 _107705 _107708) (@lem4561942 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4561945 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4561944 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4561946 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4561947 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4561946 _107705) (@lem4561945 _107705 _107708 _54415 t s)). Qed.
Lemma lem4561948 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4561947 _107705 _107708 _54415 t s)). Qed.
Lemma lem4561949 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4561950 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4561949 _107708) (@lem4561948 _107705 _107708 _54415 t)). Qed.
Lemma lem4561951 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4561950 _107705 _107708 _54415 t)). Qed.
Lemma lem4561952 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4561953 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4561952 _107705) (@lem4561951 _107705 _107708 _54415)). Qed.
Lemma lem4561954 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4561955 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term249 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4561954) (@lem4561953 _107705 _107708 _54415)). Qed.
Lemma lem4561956 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term474 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419) = (term527 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561955 _107705 _107708 _54415) (@lem4561879 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561957 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term475 _107705 _107708 A B _54416 _54417 _54418 _54419) = (term528 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4561956 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561958 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4561959 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term476 _107705 _107708 A B _54416 _54417 _54418 _54419) = (term529 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4561958 _107705 _107708) (@lem4561957 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4561960 {_107705 A : Type'} (f : A -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4561977 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (d : _107705) : (term100 _107705 A s f x d) = (term100 _107705 A s f x d).
Proof. exact (eq_refl (term100 _107705 A s f x d)). Qed.
Lemma lem4561978 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term101 _107705 A s f d) = (term101 _107705 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4561977 _107705 A s f x d)). Qed.
Lemma lem4561979 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4561980 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term102 _107705 A s f d) = (term102 _107705 A s f d).
Proof. exact (MK_COMB (@lem4561979 A) (@lem4561978 _107705 A s f d)). Qed.
Lemma lem4561995 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (x : A) (t : _107705 -> Prop) : (term103 _107705 A s f x t) = (term103 _107705 A s f x t).
Proof. exact (eq_refl (term103 _107705 A s f x t)). Qed.
Lemma lem4561996 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term104 _107705 A s f t) = (term104 _107705 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4561995 _107705 A s f x t)). Qed.
Lemma lem4561997 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4561998 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term105 _107705 A s f t) = (term105 _107705 A s f t).
Proof. exact (MK_COMB (@lem4561997 A) (@lem4561996 _107705 A s f t)). Qed.
Lemma lem4561999 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4562000 {_107705 A : Type'} (s : A -> Prop) (f : A -> _107705) (t : _107705 -> Prop) : (term106 _107705 A s f t) = (term106 _107705 A s f t).
Proof. exact (MK_COMB (@lem4561999) (@lem4561998 _107705 A s f t)). Qed.
Lemma lem4562001 {_107705 A : Type'} (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term107 _107705 A t s f d) = (term107 _107705 A t s f d).
Proof. exact (MK_COMB (@lem4562000 _107705 A s f t) (@lem4561980 _107705 A s f d)). Qed.
Lemma lem4562004 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) : (@SETSPEC (A -> _107705) GEN_PVAR_148) = (@SETSPEC (A -> _107705) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107705) GEN_PVAR_148)). Qed.
Lemma lem4562005 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (f : A -> _107705) (d : _107705) : (term108 _107705 A GEN_PVAR_148 t s f d) = (term108 _107705 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4562004 _107705 A GEN_PVAR_148) (@lem4562001 _107705 A t s f d)). Qed.
Lemma lem4562006 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4562005 _107705 A GEN_PVAR_148 t s f d) (@lem4561960 _107705 A f)). Qed.
Lemma lem4562007 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4562006 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562008 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4562009 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562008 _107705 A) (@lem4562007 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562020 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term239 _107705 A _54416 t s d GEN_PVAR_148) = (term239 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4562021 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562020 _107705 A _54416 t s d GEN_PVAR_148) (@lem4562009 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562022 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4562021 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562023 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4562024 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4562023 _107705 A) (@lem4562022 _107705 A _54416 t s d)). Qed.
Lemma lem4562025 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term243 _107705 A _54416 t s) = (term243 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4562024 _107705 A _54416 t s d)). Qed.
Lemma lem4562026 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562027 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term244 _107705 A _54416 t s) = (term244 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4562026 _107705) (@lem4562025 _107705 A _54416 t s)). Qed.
Lemma lem4562028 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term245 _107705 A _54416 t) = (term245 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562027 _107705 A _54416 t s)). Qed.
Lemma lem4562029 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562030 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term246 _107705 A _54416 t) = (term246 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4562029 A) (@lem4562028 _107705 A _54416 t)). Qed.
Lemma lem4562031 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term247 _107705 A _54416) = (term247 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4562030 _107705 A _54416 t)). Qed.
Lemma lem4562032 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562033 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term248 _107705 A _54416).
Proof. exact (MK_COMB (@lem4562032 _107705) (@lem4562031 _107705 A _54416)). Qed.
Lemma lem4562034 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562035 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term249 _107705 A _54416) = (term249 _107705 A _54416).
Proof. exact (MK_COMB (@lem4562034) (@lem4562033 _107705 A _54416)). Qed.
Lemma lem4562036 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term477 _107705 _107708 A B _54416 _54417 _54418 _54419) = (term530 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562035 _107705 A _54416) (@lem4561959 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4562037 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term478 _107705 _107708 A B _54417 _54418 _54419) = (term531 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4562036 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4562038 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4562039 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term479 _107705 _107708 A B _54417 _54418 _54419) = (term532 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562038 _107705 A) (@lem4562037 _107705 _107708 A B _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4562040 {_107708 A : Type'} (f : A -> _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4562057 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (d : _107708) : (term100 _107708 A s f x d) = (term100 _107708 A s f x d).
Proof. exact (eq_refl (term100 _107708 A s f x d)). Qed.
Lemma lem4562058 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term101 _107708 A s f d) = (term101 _107708 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4562057 _107708 A s f x d)). Qed.
Lemma lem4562059 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4562060 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term102 _107708 A s f d) = (term102 _107708 A s f d).
Proof. exact (MK_COMB (@lem4562059 A) (@lem4562058 _107708 A s f d)). Qed.
Lemma lem4562075 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (x : A) (t : _107708 -> Prop) : (term103 _107708 A s f x t) = (term103 _107708 A s f x t).
Proof. exact (eq_refl (term103 _107708 A s f x t)). Qed.
Lemma lem4562076 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term104 _107708 A s f t) = (term104 _107708 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4562075 _107708 A s f x t)). Qed.
Lemma lem4562077 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4562078 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term105 _107708 A s f t) = (term105 _107708 A s f t).
Proof. exact (MK_COMB (@lem4562077 A) (@lem4562076 _107708 A s f t)). Qed.
Lemma lem4562079 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4562080 {_107708 A : Type'} (s : A -> Prop) (f : A -> _107708) (t : _107708 -> Prop) : (term106 _107708 A s f t) = (term106 _107708 A s f t).
Proof. exact (MK_COMB (@lem4562079) (@lem4562078 _107708 A s f t)). Qed.
Lemma lem4562081 {_107708 A : Type'} (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term107 _107708 A t s f d) = (term107 _107708 A t s f d).
Proof. exact (MK_COMB (@lem4562080 _107708 A s f t) (@lem4562060 _107708 A s f d)). Qed.
Lemma lem4562084 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) : (@SETSPEC (A -> _107708) GEN_PVAR_148) = (@SETSPEC (A -> _107708) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107708) GEN_PVAR_148)). Qed.
Lemma lem4562085 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (f : A -> _107708) (d : _107708) : (term108 _107708 A GEN_PVAR_148 t s f d) = (term108 _107708 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4562084 _107708 A GEN_PVAR_148) (@lem4562081 _107708 A t s f d)). Qed.
Lemma lem4562086 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4562085 _107708 A GEN_PVAR_148 t s f d) (@lem4562040 _107708 A f)). Qed.
Lemma lem4562087 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4562086 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562088 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4562089 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562088 _107708 A) (@lem4562087 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562100 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term239 _107708 A _54417 t s d GEN_PVAR_148) = (term239 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4562101 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562100 _107708 A _54417 t s d GEN_PVAR_148) (@lem4562089 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562102 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term241 _107708 A _54417 t s d) = (term241 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4562101 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562103 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4562104 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term242 _107708 A _54417 t s d) = (term242 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4562103 _107708 A) (@lem4562102 _107708 A _54417 t s d)). Qed.
Lemma lem4562105 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term243 _107708 A _54417 t s) = (term243 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4562104 _107708 A _54417 t s d)). Qed.
Lemma lem4562106 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4562107 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term244 _107708 A _54417 t s) = (term244 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4562106 _107708) (@lem4562105 _107708 A _54417 t s)). Qed.
Lemma lem4562108 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term245 _107708 A _54417 t) = (term245 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562107 _107708 A _54417 t s)). Qed.
Lemma lem4562109 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562110 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term246 _107708 A _54417 t) = (term246 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4562109 A) (@lem4562108 _107708 A _54417 t)). Qed.
Lemma lem4562111 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term247 _107708 A _54417) = (term247 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4562110 _107708 A _54417 t)). Qed.
Lemma lem4562112 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562113 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term248 _107708 A _54417) = (term248 _107708 A _54417).
Proof. exact (MK_COMB (@lem4562112 _107708) (@lem4562111 _107708 A _54417)). Qed.
Lemma lem4562114 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562115 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term249 _107708 A _54417) = (term249 _107708 A _54417).
Proof. exact (MK_COMB (@lem4562114) (@lem4562113 _107708 A _54417)). Qed.
Lemma lem4562116 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term480 _107705 _107708 A B _54417 _54418 _54419) = (term533 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562115 _107708 A _54417) (@lem4562039 _107705 _107708 A B _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4562117 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term481 _107705 _107708 A B _54418 _54419) = (term534 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4562116 _107705 _107708 A B _54417 _54418 _54419 _54420 h1)). Qed.
Lemma lem4562118 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4562119 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term482 _107705 _107708 A B _54418 _54419) = (term535 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562118 _107708 A) (@lem4562117 _107705 _107708 A B _54418 _54419 _54420 h1)). Qed.
Lemma lem4562120 {_107705 B : Type'} (f : _107705 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4562137 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (d : B) : (term73 _107705 B s f x d) = (term73 _107705 B s f x d).
Proof. exact (eq_refl (term73 _107705 B s f x d)). Qed.
Lemma lem4562138 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term74 _107705 B s f d) = (term74 _107705 B s f d).
Proof. exact (fun_ext (fun x : _107705 => @lem4562137 _107705 B s f x d)). Qed.
Lemma lem4562139 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562140 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term75 _107705 B s f d) = (term75 _107705 B s f d).
Proof. exact (MK_COMB (@lem4562139 _107705) (@lem4562138 _107705 B s f d)). Qed.
Lemma lem4562155 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (x : _107705) (t : B -> Prop) : (term76 _107705 B s f x t) = (term76 _107705 B s f x t).
Proof. exact (eq_refl (term76 _107705 B s f x t)). Qed.
Lemma lem4562156 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term77 _107705 B s f t) = (term77 _107705 B s f t).
Proof. exact (fun_ext (fun x : _107705 => @lem4562155 _107705 B s f x t)). Qed.
Lemma lem4562157 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562158 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term78 _107705 B s f t) = (term78 _107705 B s f t).
Proof. exact (MK_COMB (@lem4562157 _107705) (@lem4562156 _107705 B s f t)). Qed.
Lemma lem4562159 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4562160 {_107705 B : Type'} (s : _107705 -> Prop) (f : _107705 -> B) (t : B -> Prop) : (term79 _107705 B s f t) = (term79 _107705 B s f t).
Proof. exact (MK_COMB (@lem4562159) (@lem4562158 _107705 B s f t)). Qed.
Lemma lem4562161 {_107705 B : Type'} (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term80 _107705 B t s f d) = (term80 _107705 B t s f d).
Proof. exact (MK_COMB (@lem4562160 _107705 B s f t) (@lem4562140 _107705 B s f d)). Qed.
Lemma lem4562164 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) : (@SETSPEC (_107705 -> B) GEN_PVAR_148) = (@SETSPEC (_107705 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107705 -> B) GEN_PVAR_148)). Qed.
Lemma lem4562165 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (f : _107705 -> B) (d : B) : (term81 _107705 B GEN_PVAR_148 t s f d) = (term81 _107705 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4562164 _107705 B GEN_PVAR_148) (@lem4562161 _107705 B t s f d)). Qed.
Lemma lem4562166 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4562165 _107705 B GEN_PVAR_148 t s f d) (@lem4562120 _107705 B f)). Qed.
Lemma lem4562167 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4562166 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562168 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4562169 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562168 _107705 B) (@lem4562167 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562180 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term442 _107705 B _54418 t s d GEN_PVAR_148) = (term442 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4562181 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)) = ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562180 _107705 B _54418 t s d GEN_PVAR_148) (@lem4562169 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562182 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term444 _107705 B _54418 t s d) = (term444 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4562181 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562183 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4562184 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term445 _107705 B _54418 t s d) = (term445 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4562183 _107705 B) (@lem4562182 _107705 B _54418 t s d)). Qed.
Lemma lem4562185 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term446 _107705 B _54418 t s) = (term446 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4562184 _107705 B _54418 t s d)). Qed.
Lemma lem4562186 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562187 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term447 _107705 B _54418 t s) = (term447 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4562186 B) (@lem4562185 _107705 B _54418 t s)). Qed.
Lemma lem4562188 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term448 _107705 B _54418 t) = (term448 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4562187 _107705 B _54418 t s)). Qed.
Lemma lem4562189 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562190 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term449 _107705 B _54418 t) = (term449 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4562189 _107705) (@lem4562188 _107705 B _54418 t)). Qed.
Lemma lem4562191 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term450 _107705 B _54418) = (term450 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562190 _107705 B _54418 t)). Qed.
Lemma lem4562192 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562193 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term451 _107705 B _54418) = (term451 _107705 B _54418).
Proof. exact (MK_COMB (@lem4562192 B) (@lem4562191 _107705 B _54418)). Qed.
Lemma lem4562194 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562195 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term452 _107705 B _54418) = (term452 _107705 B _54418).
Proof. exact (MK_COMB (@lem4562194) (@lem4562193 _107705 B _54418)). Qed.
Lemma lem4562196 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term483 _107705 _107708 A B _54418 _54419) = (term536 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562195 _107705 B _54418) (@lem4562119 _107705 _107708 A B _54418 _54419 _54420 h1)). Qed.
Lemma lem4562197 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term484 _107705 _107708 A B _54419) = (term537 _107705 _107708 A B _54419 _54420).
Proof. exact (fun_ext (fun _54418 : type839 _107705 B => @lem4562196 _107705 _107708 A B _54418 _54419 _54420 h1)). Qed.
Lemma lem4562198 {_107705 B : Type'} : (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop))). Qed.
Lemma lem4562199 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term485 _107705 _107708 A B _54419) = (term538 _107705 _107708 A B _54419 _54420).
Proof. exact (MK_COMB (@lem4562198 _107705 B) (@lem4562197 _107705 _107708 A B _54419 _54420 h1)). Qed.
Lemma lem4562200 {_107708 B : Type'} (f : _107708 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4562217 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (d : B) : (term73 _107708 B s f x d) = (term73 _107708 B s f x d).
Proof. exact (eq_refl (term73 _107708 B s f x d)). Qed.
Lemma lem4562218 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term74 _107708 B s f d) = (term74 _107708 B s f d).
Proof. exact (fun_ext (fun x : _107708 => @lem4562217 _107708 B s f x d)). Qed.
Lemma lem4562219 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4562220 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term75 _107708 B s f d) = (term75 _107708 B s f d).
Proof. exact (MK_COMB (@lem4562219 _107708) (@lem4562218 _107708 B s f d)). Qed.
Lemma lem4562235 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (x : _107708) (t : B -> Prop) : (term76 _107708 B s f x t) = (term76 _107708 B s f x t).
Proof. exact (eq_refl (term76 _107708 B s f x t)). Qed.
Lemma lem4562236 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term77 _107708 B s f t) = (term77 _107708 B s f t).
Proof. exact (fun_ext (fun x : _107708 => @lem4562235 _107708 B s f x t)). Qed.
Lemma lem4562237 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4562238 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term78 _107708 B s f t) = (term78 _107708 B s f t).
Proof. exact (MK_COMB (@lem4562237 _107708) (@lem4562236 _107708 B s f t)). Qed.
Lemma lem4562239 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4562240 {_107708 B : Type'} (s : _107708 -> Prop) (f : _107708 -> B) (t : B -> Prop) : (term79 _107708 B s f t) = (term79 _107708 B s f t).
Proof. exact (MK_COMB (@lem4562239) (@lem4562238 _107708 B s f t)). Qed.
Lemma lem4562241 {_107708 B : Type'} (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term80 _107708 B t s f d) = (term80 _107708 B t s f d).
Proof. exact (MK_COMB (@lem4562240 _107708 B s f t) (@lem4562220 _107708 B s f d)). Qed.
Lemma lem4562244 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) : (@SETSPEC (_107708 -> B) GEN_PVAR_148) = (@SETSPEC (_107708 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107708 -> B) GEN_PVAR_148)). Qed.
Lemma lem4562245 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (f : _107708 -> B) (d : B) : (term81 _107708 B GEN_PVAR_148 t s f d) = (term81 _107708 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4562244 _107708 B GEN_PVAR_148) (@lem4562241 _107708 B t s f d)). Qed.
Lemma lem4562246 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4562245 _107708 B GEN_PVAR_148 t s f d) (@lem4562200 _107708 B f)). Qed.
Lemma lem4562247 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4562246 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562248 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4562249 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562248 _107708 B) (@lem4562247 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562260 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term442 _107708 B _54419 t s d GEN_PVAR_148) = (term442 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4562261 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)) = ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562260 _107708 B _54419 t s d GEN_PVAR_148) (@lem4562249 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562262 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term444 _107708 B _54419 t s d) = (term444 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4562261 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562263 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4562264 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term445 _107708 B _54419 t s d) = (term445 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4562263 _107708 B) (@lem4562262 _107708 B _54419 t s d)). Qed.
Lemma lem4562265 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term446 _107708 B _54419 t s) = (term446 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4562264 _107708 B _54419 t s d)). Qed.
Lemma lem4562266 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562267 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term447 _107708 B _54419 t s) = (term447 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4562266 B) (@lem4562265 _107708 B _54419 t s)). Qed.
Lemma lem4562268 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term448 _107708 B _54419 t) = (term448 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562267 _107708 B _54419 t s)). Qed.
Lemma lem4562269 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562270 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term449 _107708 B _54419 t) = (term449 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4562269 _107708) (@lem4562268 _107708 B _54419 t)). Qed.
Lemma lem4562271 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term450 _107708 B _54419) = (term450 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562270 _107708 B _54419 t)). Qed.
Lemma lem4562272 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562273 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term451 _107708 B _54419) = (term451 _107708 B _54419).
Proof. exact (MK_COMB (@lem4562272 B) (@lem4562271 _107708 B _54419)). Qed.
Lemma lem4562274 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562275 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term452 _107708 B _54419) = (term452 _107708 B _54419).
Proof. exact (MK_COMB (@lem4562274) (@lem4562273 _107708 B _54419)). Qed.
Lemma lem4562276 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term505 _107705 _107708 A B _54419) = (term539 _107705 _107708 A B _54419 _54420).
Proof. exact (MK_COMB (@lem4562275 _107708 B _54419) (@lem4562199 _107705 _107708 A B _54419 _54420 h1)). Qed.
Lemma lem4562277 {_107705 _107708 A B : Type'} (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term506 _107705 _107708 A B) = (term540 _107705 _107708 A B _54420).
Proof. exact (fun_ext (fun _54419 : type839 _107708 B => @lem4562276 _107705 _107708 A B _54419 _54420 h1)). Qed.
Lemma lem4562278 {_107708 B : Type'} : (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop))). Qed.
Lemma lem4562279 {_107705 _107708 A B : Type'} (_54420 : type839 A B) (h1 : _54420 = (term337 A B)) : (term507 _107705 _107708 A B) = (term541 _107705 _107708 A B _54420).
Proof. exact (MK_COMB (@lem4562278 _107708 B) (@lem4562277 _107705 _107708 A B _54420 h1)). Qed.
Lemma lem4562280 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : term542 _107705 _107708 A B _54420.
Proof. exact (fun h0 : _54420 = (term337 A B) => @lem4562279 _107705 _107708 A B _54420 h0). Qed.
Lemma lem4562281 {_107705 _107708 A B : Type'} : term543 _107705 _107708 A B.
Proof. exact (fun _54420 : type839 A B => @lem4562280 _107705 _107708 A B _54420). Qed.
Lemma lem4562283 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term183 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4562284 {A B : Type'} (P : Prop) (c : type839 A B) (Q : type214 A B) : term389 A B P c Q.
Proof. exact (@lem4562283 (type839 A B) P c Q). Qed.
Lemma lem4562285 {_107705 _107708 A B : Type'} : term544 _107705 _107708 A B.
Proof. exact (@lem4562284 A B (term507 _107705 _107708 A B) (term337 A B) (term545 _107705 _107708 A B)). Qed.
Lemma lem4562286 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term546 _107705 _107708 A B _54420) = (term541 _107705 _107708 A B _54420).
Proof. exact (eq_refl (term546 _107705 _107708 A B _54420)). Qed.
Lemma lem4562287 {_107705 _107708 A B : Type'} : (term547 _107705 _107708 A B) = (term547 _107705 _107708 A B).
Proof. exact (eq_refl (term547 _107705 _107708 A B)). Qed.
Lemma lem4562288 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : ((term507 _107705 _107708 A B) = (term546 _107705 _107708 A B _54420)) = ((term507 _107705 _107708 A B) = (term541 _107705 _107708 A B _54420)).
Proof. exact (MK_COMB (@lem4562287 _107705 _107708 A B) (@lem4562286 _107705 _107708 A B _54420)). Qed.
Lemma lem4562289 {A B : Type'} (_54420 : type839 A B) : (term394 A B _54420) = (term394 A B _54420).
Proof. exact (eq_refl (term394 A B _54420)). Qed.
Lemma lem4562290 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term548 _107705 _107708 A B _54420) = (term542 _107705 _107708 A B _54420).
Proof. exact (MK_COMB (@lem4562289 A B _54420) (@lem4562288 _107705 _107708 A B _54420)). Qed.
Lemma lem4562291 {_107705 _107708 A B : Type'} : (term549 _107705 _107708 A B) = (term550 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54420 : type839 A B => @lem4562290 _107705 _107708 A B _54420)). Qed.
Lemma lem4562292 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4562293 {_107705 _107708 A B : Type'} : (term551 _107705 _107708 A B) = (term543 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4562292 A B) (@lem4562291 _107705 _107708 A B)). Qed.
Lemma lem4562294 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562295 {_107705 _107708 A B : Type'} : (term552 _107705 _107708 A B) = (term553 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4562294) (@lem4562293 _107705 _107708 A B)). Qed.
Lemma lem4562296 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term546 _107705 _107708 A B _54420) = (term541 _107705 _107708 A B _54420).
Proof. exact (eq_refl (term546 _107705 _107708 A B _54420)). Qed.
Lemma lem4562297 {A B : Type'} (_54420 : type839 A B) : (term394 A B _54420) = (term394 A B _54420).
Proof. exact (eq_refl (term394 A B _54420)). Qed.
Lemma lem4562298 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term554 _107705 _107708 A B _54420) = (term555 _107705 _107708 A B _54420).
Proof. exact (MK_COMB (@lem4562297 A B _54420) (@lem4562296 _107705 _107708 A B _54420)). Qed.
Lemma lem4562299 {_107705 _107708 A B : Type'} : (term556 _107705 _107708 A B) = (term557 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54420 : type839 A B => @lem4562298 _107705 _107708 A B _54420)). Qed.
Lemma lem4562300 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4562301 {_107705 _107708 A B : Type'} : (term558 _107705 _107708 A B) = (term559 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4562300 A B) (@lem4562299 _107705 _107708 A B)). Qed.
Lemma lem4562302 {_107705 _107708 A B : Type'} : (term547 _107705 _107708 A B) = (term547 _107705 _107708 A B).
Proof. exact (eq_refl (term547 _107705 _107708 A B)). Qed.
Lemma lem4562303 {_107705 _107708 A B : Type'} : ((term507 _107705 _107708 A B) = (term558 _107705 _107708 A B)) = ((term507 _107705 _107708 A B) = (term559 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4562302 _107705 _107708 A B) (@lem4562301 _107705 _107708 A B)). Qed.
Lemma lem4562304 {_107705 _107708 A B : Type'} : (term544 _107705 _107708 A B) = (term560 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4562295 _107705 _107708 A B) (@lem4562303 _107705 _107708 A B)). Qed.
Lemma lem4562305 {_107705 _107708 A B : Type'} : term560 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4562304 _107705 _107708 A B) (@lem4562285 _107705 _107708 A B)). Qed.
Lemma lem4562306 {_107705 _107708 A B : Type'} : (term507 _107705 _107708 A B) = (term559 _107705 _107708 A B).
Proof. exact (@lem4562305 _107705 _107708 A B (@lem4562281 _107705 _107708 A B)). Qed.
Lemma lem4562308 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4562309 {A B : Type'} (s : type839 A B) (t : type839 A B) : (s = (term408 A B t)) = (term409 A B s t).
Proof. exact (@lem4562308 (type674 A B) (B -> Prop) s t). Qed.
Lemma lem4562310 {A B : Type'} (_54420 : type839 A B) : (_54420 = (term410 A B)) = (term411 A B _54420).
Proof. exact (@lem4562309 A B _54420 (term337 A B)). Qed.
Lemma lem4562311 {A B : Type'} (t : B -> Prop) : (term338 A B t) = (term339 A B t).
Proof. exact (eq_refl (term338 A B t)). Qed.
Lemma lem4562312 {A B : Type'} : (term410 A B) = (term337 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562311 A B t)). Qed.
Lemma lem4562313 {A B : Type'} (_54420 : type839 A B) : (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _54420) = (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _54420).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _54420)). Qed.
Lemma lem4562314 {A B : Type'} (_54420 : type839 A B) : (_54420 = (term410 A B)) = (_54420 = (term337 A B)).
Proof. exact (MK_COMB (@lem4562313 A B _54420) (@lem4562312 A B)). Qed.
Lemma lem4562315 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4562316 {A B : Type'} (_54420 : type839 A B) : (term412 A B _54420) = (term413 A B _54420).
Proof. exact (MK_COMB (@lem4562315) (@lem4562314 A B _54420)). Qed.
Lemma lem4562317 {A B : Type'} (t : B -> Prop) : (term338 A B t) = (term339 A B t).
Proof. exact (eq_refl (term338 A B t)). Qed.
Lemma lem4562318 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term340 A B _54420 t) = (term340 A B _54420 t).
Proof. exact (eq_refl (term340 A B _54420 t)). Qed.
Lemma lem4562319 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((_54420 t) = (term338 A B t)) = ((_54420 t) = (term339 A B t)).
Proof. exact (MK_COMB (@lem4562318 A B _54420 t) (@lem4562317 A B t)). Qed.
Lemma lem4562320 {A B : Type'} (_54420 : type839 A B) : (term414 A B _54420) = (term415 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562319 A B _54420 t)). Qed.
Lemma lem4562321 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562322 {A B : Type'} (_54420 : type839 A B) : (term411 A B _54420) = (term416 A B _54420).
Proof. exact (MK_COMB (@lem4562321 B) (@lem4562320 A B _54420)). Qed.
Lemma lem4562323 {A B : Type'} (_54420 : type839 A B) : ((_54420 = (term410 A B)) = (term411 A B _54420)) = ((_54420 = (term337 A B)) = (term416 A B _54420)).
Proof. exact (MK_COMB (@lem4562316 A B _54420) (@lem4562322 A B _54420)). Qed.
Lemma lem4562324 {A B : Type'} (_54420 : type839 A B) : (_54420 = (term337 A B)) = (term416 A B _54420).
Proof. exact (EQ_MP (@lem4562323 A B _54420) (@lem4562310 A B _54420)). Qed.
Lemma lem4562326 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4562327 {A B : Type'} (s : type674 A B) (t : type674 A B) : (s = (term417 A B t)) = (term418 A B s t).
Proof. exact (@lem4562326 (type1446 A B) (A -> Prop) s t). Qed.
Lemma lem4562328 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((_54420 t) = (term419 A B t)) = (term420 A B _54420 t).
Proof. exact (@lem4562327 A B (_54420 t) (term339 A B t)). Qed.
Lemma lem4562329 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term341 A B t s) = (term342 A B t s).
Proof. exact (eq_refl (term341 A B t s)). Qed.
Lemma lem4562330 {A B : Type'} (t : B -> Prop) : (term419 A B t) = (term339 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562329 A B t s)). Qed.
Lemma lem4562331 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term340 A B _54420 t) = (term340 A B _54420 t).
Proof. exact (eq_refl (term340 A B _54420 t)). Qed.
Lemma lem4562332 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((_54420 t) = (term419 A B t)) = ((_54420 t) = (term339 A B t)).
Proof. exact (MK_COMB (@lem4562331 A B _54420 t) (@lem4562330 A B t)). Qed.
Lemma lem4562333 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4562334 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term421 A B _54420 t) = (term422 A B _54420 t).
Proof. exact (MK_COMB (@lem4562333) (@lem4562332 A B _54420 t)). Qed.
Lemma lem4562335 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term341 A B t s) = (term342 A B t s).
Proof. exact (eq_refl (term341 A B t s)). Qed.
Lemma lem4562336 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term343 A B _54420 t s) = (term343 A B _54420 t s).
Proof. exact (eq_refl (term343 A B _54420 t s)). Qed.
Lemma lem4562337 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_54420 t s) = (term341 A B t s)) = ((_54420 t s) = (term342 A B t s)).
Proof. exact (MK_COMB (@lem4562336 A B _54420 t s) (@lem4562335 A B t s)). Qed.
Lemma lem4562338 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term423 A B _54420 t) = (term424 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562337 A B _54420 t s)). Qed.
Lemma lem4562339 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562340 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term420 A B _54420 t) = (term425 A B _54420 t).
Proof. exact (MK_COMB (@lem4562339 A) (@lem4562338 A B _54420 t)). Qed.
Lemma lem4562341 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (((_54420 t) = (term419 A B t)) = (term420 A B _54420 t)) = (((_54420 t) = (term339 A B t)) = (term425 A B _54420 t)).
Proof. exact (MK_COMB (@lem4562334 A B _54420 t) (@lem4562340 A B _54420 t)). Qed.
Lemma lem4562342 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((_54420 t) = (term339 A B t)) = (term425 A B _54420 t).
Proof. exact (EQ_MP (@lem4562341 A B _54420 t) (@lem4562328 A B _54420 t)). Qed.
Lemma lem4562344 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4562345 {A B : Type'} (s : type1446 A B) (t : type1446 A B) : (s = (term426 A B t)) = (term427 A B s t).
Proof. exact (@lem4562344 (type572 A B) B s t). Qed.
Lemma lem4562346 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_54420 t s) = (term428 A B t s)) = (term429 A B _54420 t s).
Proof. exact (@lem4562345 A B (_54420 t s) (term342 A B t s)). Qed.
Lemma lem4562347 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term344 A B t s d) = (term85 A B t s d).
Proof. exact (eq_refl (term344 A B t s d)). Qed.
Lemma lem4562348 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term428 A B t s) = (term342 A B t s).
Proof. exact (fun_ext (fun d : B => @lem4562347 A B t s d)). Qed.
Lemma lem4562349 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term343 A B _54420 t s) = (term343 A B _54420 t s).
Proof. exact (eq_refl (term343 A B _54420 t s)). Qed.
Lemma lem4562350 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_54420 t s) = (term428 A B t s)) = ((_54420 t s) = (term342 A B t s)).
Proof. exact (MK_COMB (@lem4562349 A B _54420 t s) (@lem4562348 A B t s)). Qed.
Lemma lem4562351 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4562352 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term430 A B _54420 t s) = (term431 A B _54420 t s).
Proof. exact (MK_COMB (@lem4562351) (@lem4562350 A B _54420 t s)). Qed.
Lemma lem4562353 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term344 A B t s d) = (term85 A B t s d).
Proof. exact (eq_refl (term344 A B t s d)). Qed.
Lemma lem4562354 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term345 A B _54420 t s d) = (term345 A B _54420 t s d).
Proof. exact (eq_refl (term345 A B _54420 t s d)). Qed.
Lemma lem4562355 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d) = (term344 A B t s d)) = ((_54420 t s d) = (term85 A B t s d)).
Proof. exact (MK_COMB (@lem4562354 A B _54420 t s d) (@lem4562353 A B t s d)). Qed.
Lemma lem4562356 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term432 A B _54420 t s) = (term433 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4562355 A B _54420 t s d)). Qed.
Lemma lem4562357 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562358 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term429 A B _54420 t s) = (term434 A B _54420 t s).
Proof. exact (MK_COMB (@lem4562357 B) (@lem4562356 A B _54420 t s)). Qed.
Lemma lem4562359 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (((_54420 t s) = (term428 A B t s)) = (term429 A B _54420 t s)) = (((_54420 t s) = (term342 A B t s)) = (term434 A B _54420 t s)).
Proof. exact (MK_COMB (@lem4562352 A B _54420 t s) (@lem4562358 A B _54420 t s)). Qed.
Lemma lem4562360 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_54420 t s) = (term342 A B t s)) = (term434 A B _54420 t s).
Proof. exact (EQ_MP (@lem4562359 A B _54420 t s) (@lem4562346 A B _54420 t s)). Qed.
Lemma lem4562362 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term203 _3571 _3575 t)) = (term204 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4562363 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = (term435 A B t)) = (term436 A B s t).
Proof. exact (@lem4562362 Prop (A -> B) s t). Qed.
Lemma lem4562364 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d) = (term437 A B t s d)) = (term438 A B _54420 t s d).
Proof. exact (@lem4562363 A B (_54420 t s d) (term85 A B t s d)). Qed.
Lemma lem4562365 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term439 A B t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term439 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4562366 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term437 A B t s d) = (term85 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4562365 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562367 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term345 A B _54420 t s d) = (term345 A B _54420 t s d).
Proof. exact (eq_refl (term345 A B _54420 t s d)). Qed.
Lemma lem4562368 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d) = (term437 A B t s d)) = ((_54420 t s d) = (term85 A B t s d)).
Proof. exact (MK_COMB (@lem4562367 A B _54420 t s d) (@lem4562366 A B t s d)). Qed.
Lemma lem4562369 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4562370 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term440 A B _54420 t s d) = (term441 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4562369) (@lem4562368 A B _54420 t s d)). Qed.
Lemma lem4562371 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term439 A B t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term439 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4562372 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term442 A B _54420 t s d GEN_PVAR_148) = (term442 A B _54420 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4562373 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d GEN_PVAR_148) = (term439 A B t s d GEN_PVAR_148)) = ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562372 A B _54420 t s d GEN_PVAR_148) (@lem4562371 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562374 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term443 A B _54420 t s d) = (term444 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4562373 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562375 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4562376 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term438 A B _54420 t s d) = (term445 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4562375 A B) (@lem4562374 A B _54420 t s d)). Qed.
Lemma lem4562377 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (((_54420 t s d) = (term437 A B t s d)) = (term438 A B _54420 t s d)) = (((_54420 t s d) = (term85 A B t s d)) = (term445 A B _54420 t s d)).
Proof. exact (MK_COMB (@lem4562370 A B _54420 t s d) (@lem4562376 A B _54420 t s d)). Qed.
Lemma lem4562378 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d) = (term85 A B t s d)) = (term445 A B _54420 t s d).
Proof. exact (EQ_MP (@lem4562377 A B _54420 t s d) (@lem4562364 A B _54420 t s d)). Qed.
Lemma lem4562379 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)) = ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d))). Qed.
Lemma lem4562380 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term444 A B _54420 t s d) = (term444 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4562379 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562381 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4562382 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term445 A B _54420 t s d) = (term445 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4562381 A B) (@lem4562380 A B _54420 t s d)). Qed.
Lemma lem4562383 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d) = (term85 A B t s d)) = (term445 A B _54420 t s d).
Proof. exact (TRANS (@lem4562378 A B _54420 t s d) (@lem4562382 A B _54420 t s d)). Qed.
Lemma lem4562384 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term433 A B _54420 t s) = (term446 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4562383 A B _54420 t s d)). Qed.
Lemma lem4562385 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562386 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term434 A B _54420 t s) = (term447 A B _54420 t s).
Proof. exact (MK_COMB (@lem4562385 B) (@lem4562384 A B _54420 t s)). Qed.
Lemma lem4562387 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_54420 t s) = (term342 A B t s)) = (term447 A B _54420 t s).
Proof. exact (TRANS (@lem4562360 A B _54420 t s) (@lem4562386 A B _54420 t s)). Qed.
Lemma lem4562388 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term424 A B _54420 t) = (term448 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562387 A B _54420 t s)). Qed.
Lemma lem4562389 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562390 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term425 A B _54420 t) = (term449 A B _54420 t).
Proof. exact (MK_COMB (@lem4562389 A) (@lem4562388 A B _54420 t)). Qed.
Lemma lem4562391 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((_54420 t) = (term339 A B t)) = (term449 A B _54420 t).
Proof. exact (TRANS (@lem4562342 A B _54420 t) (@lem4562390 A B _54420 t)). Qed.
Lemma lem4562392 {A B : Type'} (_54420 : type839 A B) : (term415 A B _54420) = (term450 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562391 A B _54420 t)). Qed.
Lemma lem4562393 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562394 {A B : Type'} (_54420 : type839 A B) : (term416 A B _54420) = (term451 A B _54420).
Proof. exact (MK_COMB (@lem4562393 B) (@lem4562392 A B _54420)). Qed.
Lemma lem4562395 {A B : Type'} (_54420 : type839 A B) : (_54420 = (term337 A B)) = (term451 A B _54420).
Proof. exact (TRANS (@lem4562324 A B _54420) (@lem4562394 A B _54420)). Qed.
Lemma lem4562396 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562397 {A B : Type'} (_54420 : type839 A B) : (term394 A B _54420) = (term452 A B _54420).
Proof. exact (MK_COMB (@lem4562396) (@lem4562395 A B _54420)). Qed.
Lemma lem4562398 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term541 _107705 _107708 A B _54420) = (term541 _107705 _107708 A B _54420).
Proof. exact (eq_refl (term541 _107705 _107708 A B _54420)). Qed.
Lemma lem4562399 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term555 _107705 _107708 A B _54420) = (term561 _107705 _107708 A B _54420).
Proof. exact (MK_COMB (@lem4562397 A B _54420) (@lem4562398 _107705 _107708 A B _54420)). Qed.
Lemma lem4562400 {_107705 _107708 A B : Type'} : (term557 _107705 _107708 A B) = (term562 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54420 : type839 A B => @lem4562399 _107705 _107708 A B _54420)). Qed.
Lemma lem4562401 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4562402 {_107705 _107708 A B : Type'} : (term559 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4562401 A B) (@lem4562400 _107705 _107708 A B)). Qed.
Lemma lem4562403 {_107705 _107708 A B : Type'} : (term547 _107705 _107708 A B) = (term547 _107705 _107708 A B).
Proof. exact (eq_refl (term547 _107705 _107708 A B)). Qed.
Lemma lem4562404 {_107705 _107708 A B : Type'} : ((term507 _107705 _107708 A B) = (term559 _107705 _107708 A B)) = ((term507 _107705 _107708 A B) = (term563 _107705 _107708 A B)).
Proof. exact (MK_COMB (@lem4562403 _107705 _107708 A B) (@lem4562402 _107705 _107708 A B)). Qed.
Lemma lem4562407 {_107705 _107708 A B : Type'} : (term507 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (EQ_MP (@lem4562404 _107705 _107708 A B) (@lem4562306 _107705 _107708 A B)). Qed.
Lemma lem4562408 {_107705 _107708 A B : Type'} : (term455 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4561221 _107705 _107708 A B) (@lem4562407 _107705 _107708 A B)). Qed.
Lemma lem4562409 {_107705 _107708 A B : Type'} : (term336 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4560070 _107705 _107708 A B) (@lem4562408 _107705 _107708 A B)). Qed.
Lemma lem4562410 {_107705 _107708 A B : Type'} : (term292 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4558952 _107705 _107708 A B) (@lem4562409 _107705 _107708 A B)). Qed.
Lemma lem4562411 {_107705 _107708 A B : Type'} : (term252 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4557867 _107705 _107708 A B) (@lem4562410 _107705 _107708 A B)). Qed.
Lemma lem4562412 {_107705 _107708 A B : Type'} : (term62 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4556815 _107705 _107708 A B) (@lem4562411 _107705 _107708 A B)). Qed.
Lemma lem4562413 {_107705 _107708 A B : Type'} : (term61 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4555800 _107705 _107708 A B) (@lem4562412 _107705 _107708 A B)). Qed.
Lemma lem4562422 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term349 A B _54420 t s d n m) = (term349 A B _54420 t s d n m).
Proof. exact (eq_refl (term349 A B _54420 t s d n m)). Qed.
Lemma lem4562423 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term350 A B _54420 t d n m) = (term350 A B _54420 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562422 A B _54420 t s d n m)). Qed.
Lemma lem4562424 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562425 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term351 A B _54420 t d n m) = (term351 A B _54420 t d n m).
Proof. exact (MK_COMB (@lem4562424 A) (@lem4562423 A B _54420 t d n m)). Qed.
Lemma lem4562426 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (d : B) (n : nat) : (term352 A B _54420 t d n) = (term352 A B _54420 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4562425 A B _54420 t d n m)). Qed.
Lemma lem4562427 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562428 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (d : B) (n : nat) : (term353 A B _54420 t d n) = (term353 A B _54420 t d n).
Proof. exact (MK_COMB (@lem4562427) (@lem4562426 A B _54420 t d n)). Qed.
Lemma lem4562429 {A B : Type'} (_54420 : type839 A B) (d : B) (n : nat) : (term354 A B _54420 d n) = (term354 A B _54420 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562428 A B _54420 t d n)). Qed.
Lemma lem4562430 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562431 {A B : Type'} (_54420 : type839 A B) (d : B) (n : nat) : (term355 A B _54420 d n) = (term355 A B _54420 d n).
Proof. exact (MK_COMB (@lem4562430 B) (@lem4562429 A B _54420 d n)). Qed.
Lemma lem4562432 {A B : Type'} (_54420 : type839 A B) (d : B) : (term356 A B _54420 d) = (term356 A B _54420 d).
Proof. exact (fun_ext (fun n : nat => @lem4562431 A B _54420 d n)). Qed.
Lemma lem4562433 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562434 {A B : Type'} (_54420 : type839 A B) (d : B) : (term357 A B _54420 d) = (term357 A B _54420 d).
Proof. exact (MK_COMB (@lem4562433) (@lem4562432 A B _54420 d)). Qed.
Lemma lem4562435 {A B : Type'} (_54420 : type839 A B) : (term358 A B _54420) = (term358 A B _54420).
Proof. exact (fun_ext (fun d : B => @lem4562434 A B _54420 d)). Qed.
Lemma lem4562436 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562437 {A B : Type'} (_54420 : type839 A B) : (term359 A B _54420) = (term359 A B _54420).
Proof. exact (MK_COMB (@lem4562436 B) (@lem4562435 A B _54420)). Qed.
Lemma lem4562438 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4562439 {A B : Type'} (_54420 : type839 A B) : (term508 A B _54420) = (term508 A B _54420).
Proof. exact (MK_COMB (@lem4562438) (@lem4562437 A B _54420)). Qed.
Lemma lem4562448 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (n : nat) (m : nat) : (term349 _107708 B _54419 t s d n m) = (term349 _107708 B _54419 t s d n m).
Proof. exact (eq_refl (term349 _107708 B _54419 t s d n m)). Qed.
Lemma lem4562449 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term350 _107708 B _54419 t d n m) = (term350 _107708 B _54419 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562448 _107708 B _54419 t s d n m)). Qed.
Lemma lem4562450 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562451 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term351 _107708 B _54419 t d n m) = (term351 _107708 B _54419 t d n m).
Proof. exact (MK_COMB (@lem4562450 _107708) (@lem4562449 _107708 B _54419 t d n m)). Qed.
Lemma lem4562452 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) : (term352 _107708 B _54419 t d n) = (term352 _107708 B _54419 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4562451 _107708 B _54419 t d n m)). Qed.
Lemma lem4562453 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562454 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (d : B) (n : nat) : (term353 _107708 B _54419 t d n) = (term353 _107708 B _54419 t d n).
Proof. exact (MK_COMB (@lem4562453) (@lem4562452 _107708 B _54419 t d n)). Qed.
Lemma lem4562455 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) (n : nat) : (term354 _107708 B _54419 d n) = (term354 _107708 B _54419 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562454 _107708 B _54419 t d n)). Qed.
Lemma lem4562456 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562457 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) (n : nat) : (term355 _107708 B _54419 d n) = (term355 _107708 B _54419 d n).
Proof. exact (MK_COMB (@lem4562456 B) (@lem4562455 _107708 B _54419 d n)). Qed.
Lemma lem4562458 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) : (term356 _107708 B _54419 d) = (term356 _107708 B _54419 d).
Proof. exact (fun_ext (fun n : nat => @lem4562457 _107708 B _54419 d n)). Qed.
Lemma lem4562459 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562460 {_107708 B : Type'} (_54419 : type839 _107708 B) (d : B) : (term357 _107708 B _54419 d) = (term357 _107708 B _54419 d).
Proof. exact (MK_COMB (@lem4562459) (@lem4562458 _107708 B _54419 d)). Qed.
Lemma lem4562461 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term358 _107708 B _54419) = (term358 _107708 B _54419).
Proof. exact (fun_ext (fun d : B => @lem4562460 _107708 B _54419 d)). Qed.
Lemma lem4562462 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562463 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term359 _107708 B _54419) = (term359 _107708 B _54419).
Proof. exact (MK_COMB (@lem4562462 B) (@lem4562461 _107708 B _54419)). Qed.
Lemma lem4562464 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562465 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term360 _107708 B _54419) = (term360 _107708 B _54419).
Proof. exact (MK_COMB (@lem4562464) (@lem4562463 _107708 B _54419)). Qed.
Lemma lem4562466 {_107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term509 _107708 A B _54419 _54420) = (term509 _107708 A B _54419 _54420).
Proof. exact (MK_COMB (@lem4562465 _107708 B _54419) (@lem4562439 A B _54420)). Qed.
Lemma lem4562475 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (n : nat) (m : nat) : (term349 _107705 B _54418 t s d n m) = (term349 _107705 B _54418 t s d n m).
Proof. exact (eq_refl (term349 _107705 B _54418 t s d n m)). Qed.
Lemma lem4562476 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term350 _107705 B _54418 t d n m) = (term350 _107705 B _54418 t d n m).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4562475 _107705 B _54418 t s d n m)). Qed.
Lemma lem4562477 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562478 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term351 _107705 B _54418 t d n m) = (term351 _107705 B _54418 t d n m).
Proof. exact (MK_COMB (@lem4562477 _107705) (@lem4562476 _107705 B _54418 t d n m)). Qed.
Lemma lem4562479 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) : (term352 _107705 B _54418 t d n) = (term352 _107705 B _54418 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4562478 _107705 B _54418 t d n m)). Qed.
Lemma lem4562480 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562481 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (d : B) (n : nat) : (term353 _107705 B _54418 t d n) = (term353 _107705 B _54418 t d n).
Proof. exact (MK_COMB (@lem4562480) (@lem4562479 _107705 B _54418 t d n)). Qed.
Lemma lem4562482 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) (n : nat) : (term354 _107705 B _54418 d n) = (term354 _107705 B _54418 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562481 _107705 B _54418 t d n)). Qed.
Lemma lem4562483 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562484 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) (n : nat) : (term355 _107705 B _54418 d n) = (term355 _107705 B _54418 d n).
Proof. exact (MK_COMB (@lem4562483 B) (@lem4562482 _107705 B _54418 d n)). Qed.
Lemma lem4562485 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) : (term356 _107705 B _54418 d) = (term356 _107705 B _54418 d).
Proof. exact (fun_ext (fun n : nat => @lem4562484 _107705 B _54418 d n)). Qed.
Lemma lem4562486 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562487 {_107705 B : Type'} (_54418 : type839 _107705 B) (d : B) : (term357 _107705 B _54418 d) = (term357 _107705 B _54418 d).
Proof. exact (MK_COMB (@lem4562486) (@lem4562485 _107705 B _54418 d)). Qed.
Lemma lem4562488 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term358 _107705 B _54418) = (term358 _107705 B _54418).
Proof. exact (fun_ext (fun d : B => @lem4562487 _107705 B _54418 d)). Qed.
Lemma lem4562489 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562490 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term359 _107705 B _54418) = (term359 _107705 B _54418).
Proof. exact (MK_COMB (@lem4562489 B) (@lem4562488 _107705 B _54418)). Qed.
Lemma lem4562491 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562492 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term360 _107705 B _54418) = (term360 _107705 B _54418).
Proof. exact (MK_COMB (@lem4562491) (@lem4562490 _107705 B _54418)). Qed.
Lemma lem4562493 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term510 _107705 _107708 A B _54418 _54419 _54420) = (term510 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562492 _107705 B _54418) (@lem4562466 _107708 A B _54419 _54420)). Qed.
Lemma lem4562502 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (n : nat) (m : nat) : (term129 _107708 A _54417 t s d n m) = (term129 _107708 A _54417 t s d n m).
Proof. exact (eq_refl (term129 _107708 A _54417 t s d n m)). Qed.
Lemma lem4562503 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term130 _107708 A _54417 t d n m) = (term130 _107708 A _54417 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562502 _107708 A _54417 t s d n m)). Qed.
Lemma lem4562504 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562505 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) (m : nat) : (term131 _107708 A _54417 t d n m) = (term131 _107708 A _54417 t d n m).
Proof. exact (MK_COMB (@lem4562504 A) (@lem4562503 _107708 A _54417 t d n m)). Qed.
Lemma lem4562506 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term132 _107708 A _54417 t d n) = (term132 _107708 A _54417 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4562505 _107708 A _54417 t d n m)). Qed.
Lemma lem4562507 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562508 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (d : _107708) (n : nat) : (term133 _107708 A _54417 t d n) = (term133 _107708 A _54417 t d n).
Proof. exact (MK_COMB (@lem4562507) (@lem4562506 _107708 A _54417 t d n)). Qed.
Lemma lem4562509 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term134 _107708 A _54417 d n) = (term134 _107708 A _54417 d n).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4562508 _107708 A _54417 t d n)). Qed.
Lemma lem4562510 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562511 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) (n : nat) : (term135 _107708 A _54417 d n) = (term135 _107708 A _54417 d n).
Proof. exact (MK_COMB (@lem4562510 _107708) (@lem4562509 _107708 A _54417 d n)). Qed.
Lemma lem4562512 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term136 _107708 A _54417 d) = (term136 _107708 A _54417 d).
Proof. exact (fun_ext (fun n : nat => @lem4562511 _107708 A _54417 d n)). Qed.
Lemma lem4562513 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562514 {_107708 A : Type'} (_54417 : type656 _107708 A) (d : _107708) : (term137 _107708 A _54417 d) = (term137 _107708 A _54417 d).
Proof. exact (MK_COMB (@lem4562513) (@lem4562512 _107708 A _54417 d)). Qed.
Lemma lem4562515 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term138 _107708 A _54417) = (term138 _107708 A _54417).
Proof. exact (fun_ext (fun d : _107708 => @lem4562514 _107708 A _54417 d)). Qed.
Lemma lem4562516 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4562517 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term139 _107708 A _54417) = (term139 _107708 A _54417).
Proof. exact (MK_COMB (@lem4562516 _107708) (@lem4562515 _107708 A _54417)). Qed.
Lemma lem4562518 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562519 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term140 _107708 A _54417) = (term140 _107708 A _54417).
Proof. exact (MK_COMB (@lem4562518) (@lem4562517 _107708 A _54417)). Qed.
Lemma lem4562520 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term511 _107705 _107708 A B _54417 _54418 _54419 _54420) = (term511 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562519 _107708 A _54417) (@lem4562493 _107705 _107708 A B _54418 _54419 _54420)). Qed.
Lemma lem4562529 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 A _54416 t s d n m) = (term129 _107705 A _54416 t s d n m).
Proof. exact (eq_refl (term129 _107705 A _54416 t s d n m)). Qed.
Lemma lem4562530 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 A _54416 t d n m) = (term130 _107705 A _54416 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562529 _107705 A _54416 t s d n m)). Qed.
Lemma lem4562531 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562532 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 A _54416 t d n m) = (term131 _107705 A _54416 t d n m).
Proof. exact (MK_COMB (@lem4562531 A) (@lem4562530 _107705 A _54416 t d n m)). Qed.
Lemma lem4562533 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 A _54416 t d n) = (term132 _107705 A _54416 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4562532 _107705 A _54416 t d n m)). Qed.
Lemma lem4562534 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562535 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 A _54416 t d n) = (term133 _107705 A _54416 t d n).
Proof. exact (MK_COMB (@lem4562534) (@lem4562533 _107705 A _54416 t d n)). Qed.
Lemma lem4562536 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term134 _107705 A _54416 d n) = (term134 _107705 A _54416 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4562535 _107705 A _54416 t d n)). Qed.
Lemma lem4562537 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562538 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) (n : nat) : (term135 _107705 A _54416 d n) = (term135 _107705 A _54416 d n).
Proof. exact (MK_COMB (@lem4562537 _107705) (@lem4562536 _107705 A _54416 d n)). Qed.
Lemma lem4562539 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term136 _107705 A _54416 d) = (term136 _107705 A _54416 d).
Proof. exact (fun_ext (fun n : nat => @lem4562538 _107705 A _54416 d n)). Qed.
Lemma lem4562540 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562541 {_107705 A : Type'} (_54416 : type656 _107705 A) (d : _107705) : (term137 _107705 A _54416 d) = (term137 _107705 A _54416 d).
Proof. exact (MK_COMB (@lem4562540) (@lem4562539 _107705 A _54416 d)). Qed.
Lemma lem4562542 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term138 _107705 A _54416) = (term138 _107705 A _54416).
Proof. exact (fun_ext (fun d : _107705 => @lem4562541 _107705 A _54416 d)). Qed.
Lemma lem4562543 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562544 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term139 _107705 A _54416) = (term139 _107705 A _54416).
Proof. exact (MK_COMB (@lem4562543 _107705) (@lem4562542 _107705 A _54416)). Qed.
Lemma lem4562545 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562546 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term140 _107705 A _54416) = (term140 _107705 A _54416).
Proof. exact (MK_COMB (@lem4562545) (@lem4562544 _107705 A _54416)). Qed.
Lemma lem4562547 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term512 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420) = (term512 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562546 _107705 A _54416) (@lem4562520 _107705 _107708 A B _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562556 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term129 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term129 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4562557 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term130 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562556 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4562558 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562559 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term131 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4562558 _107708) (@lem4562557 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4562560 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term132 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4562559 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4562561 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562562 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term133 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4562561) (@lem4562560 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4562563 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term134 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4562562 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4562564 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562565 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term135 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4562564 _107705) (@lem4562563 _107705 _107708 _54415 d n)). Qed.
Lemma lem4562566 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term136 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4562565 _107705 _107708 _54415 d n)). Qed.
Lemma lem4562567 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562568 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term137 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4562567) (@lem4562566 _107705 _107708 _54415 d)). Qed.
Lemma lem4562569 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term138 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4562568 _107705 _107708 _54415 d)). Qed.
Lemma lem4562570 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562571 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term139 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4562570 _107705) (@lem4562569 _107705 _107708 _54415)). Qed.
Lemma lem4562572 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562573 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term140 _107705 _107708 _54415) = (term140 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4562572) (@lem4562571 _107705 _107708 _54415)). Qed.
Lemma lem4562574 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term513 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term513 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562573 _107705 _107708 _54415) (@lem4562547 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562583 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term142 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term142 A B s n))). Qed.
Lemma lem4562584 {A B : Type'} (s : type572 A B) : (term143 A B s) = (term143 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4562583 A B s n)). Qed.
Lemma lem4562585 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562586 {A B : Type'} (s : type572 A B) : (term144 A B s) = (term144 A B s).
Proof. exact (MK_COMB (@lem4562585) (@lem4562584 A B s)). Qed.
Lemma lem4562587 {A B : Type'} : (term145 A B) = (term145 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4562586 A B s)). Qed.
Lemma lem4562588 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4562589 {A B : Type'} : (term14 A B) = (term14 A B).
Proof. exact (MK_COMB (@lem4562588 A B) (@lem4562587 A B)). Qed.
Lemma lem4562590 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562591 {A B : Type'} : (term34 A B) = (term34 A B).
Proof. exact (MK_COMB (@lem4562590) (@lem4562589 A B)). Qed.
Lemma lem4562592 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term514 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term514 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562591 A B) (@lem4562574 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562601 {_107708 A : Type'} (s : type805 _107708 A) (n : nat) : ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)) = ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107708) s n) = (term147 _107708 A s n))). Qed.
Lemma lem4562602 {_107708 A : Type'} (s : type805 _107708 A) : (term148 _107708 A s) = (term148 _107708 A s).
Proof. exact (fun_ext (fun n : nat => @lem4562601 _107708 A s n)). Qed.
Lemma lem4562603 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562604 {_107708 A : Type'} (s : type805 _107708 A) : (term149 _107708 A s) = (term149 _107708 A s).
Proof. exact (MK_COMB (@lem4562603) (@lem4562602 _107708 A s)). Qed.
Lemma lem4562605 {_107708 A : Type'} : (term150 _107708 A) = (term150 _107708 A).
Proof. exact (fun_ext (fun s : type805 _107708 A => @lem4562604 _107708 A s)). Qed.
Lemma lem4562606 {_107708 A : Type'} : (@all ((A -> _107708) -> Prop)) = (@all ((A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107708) -> Prop))). Qed.
Lemma lem4562607 {_107708 A : Type'} : (term15 _107708 A) = (term15 _107708 A).
Proof. exact (MK_COMB (@lem4562606 _107708 A) (@lem4562605 _107708 A)). Qed.
Lemma lem4562608 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562609 {_107708 A : Type'} : (term37 _107708 A) = (term37 _107708 A).
Proof. exact (MK_COMB (@lem4562608) (@lem4562607 _107708 A)). Qed.
Lemma lem4562610 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term515 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term515 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562609 _107708 A) (@lem4562592 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562619 {_107705 A : Type'} (s : type805 _107705 A) (n : nat) : ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)) = ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107705) s n) = (term147 _107705 A s n))). Qed.
Lemma lem4562620 {_107705 A : Type'} (s : type805 _107705 A) : (term148 _107705 A s) = (term148 _107705 A s).
Proof. exact (fun_ext (fun n : nat => @lem4562619 _107705 A s n)). Qed.
Lemma lem4562621 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562622 {_107705 A : Type'} (s : type805 _107705 A) : (term149 _107705 A s) = (term149 _107705 A s).
Proof. exact (MK_COMB (@lem4562621) (@lem4562620 _107705 A s)). Qed.
Lemma lem4562623 {_107705 A : Type'} : (term150 _107705 A) = (term150 _107705 A).
Proof. exact (fun_ext (fun s : type805 _107705 A => @lem4562622 _107705 A s)). Qed.
Lemma lem4562624 {_107705 A : Type'} : (@all ((A -> _107705) -> Prop)) = (@all ((A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107705) -> Prop))). Qed.
Lemma lem4562625 {_107705 A : Type'} : (term15 _107705 A) = (term15 _107705 A).
Proof. exact (MK_COMB (@lem4562624 _107705 A) (@lem4562623 _107705 A)). Qed.
Lemma lem4562626 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562627 {_107705 A : Type'} : (term37 _107705 A) = (term37 _107705 A).
Proof. exact (MK_COMB (@lem4562626) (@lem4562625 _107705 A)). Qed.
Lemma lem4562628 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term516 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term516 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562627 _107705 A) (@lem4562610 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562637 {_107708 B : Type'} (s : type572 _107708 B) (n : nat) : ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)) = ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> B) s n) = (term142 _107708 B s n))). Qed.
Lemma lem4562638 {_107708 B : Type'} (s : type572 _107708 B) : (term143 _107708 B s) = (term143 _107708 B s).
Proof. exact (fun_ext (fun n : nat => @lem4562637 _107708 B s n)). Qed.
Lemma lem4562639 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562640 {_107708 B : Type'} (s : type572 _107708 B) : (term144 _107708 B s) = (term144 _107708 B s).
Proof. exact (MK_COMB (@lem4562639) (@lem4562638 _107708 B s)). Qed.
Lemma lem4562641 {_107708 B : Type'} : (term145 _107708 B) = (term145 _107708 B).
Proof. exact (fun_ext (fun s : type572 _107708 B => @lem4562640 _107708 B s)). Qed.
Lemma lem4562642 {_107708 B : Type'} : (@all ((_107708 -> B) -> Prop)) = (@all ((_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> B) -> Prop))). Qed.
Lemma lem4562643 {_107708 B : Type'} : (term14 _107708 B) = (term14 _107708 B).
Proof. exact (MK_COMB (@lem4562642 _107708 B) (@lem4562641 _107708 B)). Qed.
Lemma lem4562644 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562645 {_107708 B : Type'} : (term34 _107708 B) = (term34 _107708 B).
Proof. exact (MK_COMB (@lem4562644) (@lem4562643 _107708 B)). Qed.
Lemma lem4562646 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term517 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term517 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562645 _107708 B) (@lem4562628 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562655 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n))). Qed.
Lemma lem4562656 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4562655 _107705 _107708 s n)). Qed.
Lemma lem4562657 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562658 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4562657) (@lem4562656 _107705 _107708 s)). Qed.
Lemma lem4562659 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4562658 _107705 _107708 s)). Qed.
Lemma lem4562660 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4562661 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term15 _107705 _107708).
Proof. exact (MK_COMB (@lem4562660 _107705 _107708) (@lem4562659 _107705 _107708)). Qed.
Lemma lem4562662 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562663 {_107705 _107708 : Type'} : (term37 _107705 _107708) = (term37 _107705 _107708).
Proof. exact (MK_COMB (@lem4562662) (@lem4562661 _107705 _107708)). Qed.
Lemma lem4562664 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term518 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term518 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562663 _107705 _107708) (@lem4562646 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562673 {_107705 B : Type'} (s : type572 _107705 B) (n : nat) : ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)) = ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107705 -> B) s n) = (term142 _107705 B s n))). Qed.
Lemma lem4562674 {_107705 B : Type'} (s : type572 _107705 B) : (term143 _107705 B s) = (term143 _107705 B s).
Proof. exact (fun_ext (fun n : nat => @lem4562673 _107705 B s n)). Qed.
Lemma lem4562675 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562676 {_107705 B : Type'} (s : type572 _107705 B) : (term144 _107705 B s) = (term144 _107705 B s).
Proof. exact (MK_COMB (@lem4562675) (@lem4562674 _107705 B s)). Qed.
Lemma lem4562677 {_107705 B : Type'} : (term145 _107705 B) = (term145 _107705 B).
Proof. exact (fun_ext (fun s : type572 _107705 B => @lem4562676 _107705 B s)). Qed.
Lemma lem4562678 {_107705 B : Type'} : (@all ((_107705 -> B) -> Prop)) = (@all ((_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> B) -> Prop))). Qed.
Lemma lem4562679 {_107705 B : Type'} : (term14 _107705 B) = (term14 _107705 B).
Proof. exact (MK_COMB (@lem4562678 _107705 B) (@lem4562677 _107705 B)). Qed.
Lemma lem4562680 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562681 {_107705 B : Type'} : (term34 _107705 B) = (term34 _107705 B).
Proof. exact (MK_COMB (@lem4562680) (@lem4562679 _107705 B)). Qed.
Lemma lem4562682 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term519 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term519 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562681 _107705 B) (@lem4562664 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562691 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term156 B s n)) = ((@HAS_SIZE B s n) = (term156 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term156 B s n))). Qed.
Lemma lem4562692 {B : Type'} (s : B -> Prop) : (term157 B s) = (term157 B s).
Proof. exact (fun_ext (fun n : nat => @lem4562691 B s n)). Qed.
Lemma lem4562693 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562694 {B : Type'} (s : B -> Prop) : (term158 B s) = (term158 B s).
Proof. exact (MK_COMB (@lem4562693) (@lem4562692 B s)). Qed.
Lemma lem4562695 {B : Type'} : (term159 B) = (term159 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4562694 B s)). Qed.
Lemma lem4562696 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562697 {B : Type'} : (term13 B) = (term13 B).
Proof. exact (MK_COMB (@lem4562696 B) (@lem4562695 B)). Qed.
Lemma lem4562698 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562699 {B : Type'} : (term48 B) = (term48 B).
Proof. exact (MK_COMB (@lem4562698) (@lem4562697 B)). Qed.
Lemma lem4562700 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term520 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term520 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562699 B) (@lem4562682 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562709 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term156 A s n)) = ((@HAS_SIZE A s n) = (term156 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term156 A s n))). Qed.
Lemma lem4562710 {A : Type'} (s : A -> Prop) : (term157 A s) = (term157 A s).
Proof. exact (fun_ext (fun n : nat => @lem4562709 A s n)). Qed.
Lemma lem4562711 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562712 {A : Type'} (s : A -> Prop) : (term158 A s) = (term158 A s).
Proof. exact (MK_COMB (@lem4562711) (@lem4562710 A s)). Qed.
Lemma lem4562713 {A : Type'} : (term159 A) = (term159 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562712 A s)). Qed.
Lemma lem4562714 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562715 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4562714 A) (@lem4562713 A)). Qed.
Lemma lem4562716 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562717 {A : Type'} : (term48 A) = (term48 A).
Proof. exact (MK_COMB (@lem4562716) (@lem4562715 A)). Qed.
Lemma lem4562718 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term521 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term521 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562717 A) (@lem4562700 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562727 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107708 s n) = (term156 _107708 s n))). Qed.
Lemma lem4562728 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term157 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4562727 _107708 s n)). Qed.
Lemma lem4562729 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562730 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term158 _107708 s).
Proof. exact (MK_COMB (@lem4562729) (@lem4562728 _107708 s)). Qed.
Lemma lem4562731 {_107708 : Type'} : (term159 _107708) = (term159 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562730 _107708 s)). Qed.
Lemma lem4562732 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562733 {_107708 : Type'} : (term13 _107708) = (term13 _107708).
Proof. exact (MK_COMB (@lem4562732 _107708) (@lem4562731 _107708)). Qed.
Lemma lem4562734 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562735 {_107708 : Type'} : (term48 _107708) = (term48 _107708).
Proof. exact (MK_COMB (@lem4562734) (@lem4562733 _107708)). Qed.
Lemma lem4562736 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term522 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term522 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562735 _107708) (@lem4562718 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562745 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107705 s n) = (term156 _107705 s n))). Qed.
Lemma lem4562746 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term157 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4562745 _107705 s n)). Qed.
Lemma lem4562747 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4562748 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term158 _107705 s).
Proof. exact (MK_COMB (@lem4562747) (@lem4562746 _107705 s)). Qed.
Lemma lem4562749 {_107705 : Type'} : (term159 _107705) = (term159 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4562748 _107705 s)). Qed.
Lemma lem4562750 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562751 {_107705 : Type'} : (term13 _107705) = (term13 _107705).
Proof. exact (MK_COMB (@lem4562750 _107705) (@lem4562749 _107705)). Qed.
Lemma lem4562752 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562753 {_107705 : Type'} : (term48 _107705) = (term48 _107705).
Proof. exact (MK_COMB (@lem4562752) (@lem4562751 _107705)). Qed.
Lemma lem4562754 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term523 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term523 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562753 _107705) (@lem4562736 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562763 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term168 _107705 _107708 _54415 t s d) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4562764 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term170 _107705 _107708 _54415 s d) = (term170 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4562763 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4562765 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562766 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term172 _107705 _107708 _54415 s d) = (term172 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4562765 _107705) (@lem4562764 _107705 _107708 _54415 s d)). Qed.
Lemma lem4562767 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term174 _107705 _107708 _54415 d) = (term174 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562766 _107705 _107708 _54415 s d)). Qed.
Lemma lem4562768 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562769 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term175 _107705 _107708 _54415 d) = (term175 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4562768 _107708) (@lem4562767 _107705 _107708 _54415 d)). Qed.
Lemma lem4562770 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4562771 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term176 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4562770) (@lem4562769 _107705 _107708 _54415 d)). Qed.
Lemma lem4562772 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562773 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term177 _107705 _107708 _54415 d) = (term177 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4562772) (@lem4562771 _107705 _107708 _54415 d)). Qed.
Lemma lem4562774 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term524 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420) = (term524 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562773 _107705 _107708 _54415 d) (@lem4562754 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562775 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term525 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term525 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (fun_ext (fun d : _107705 => @lem4562774 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562776 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562777 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term526 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term526 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562776 _107705) (@lem4562775 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562778 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (eq_refl (term109 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4562779 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4562778 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4562780 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4562781 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4562780 _107705 _107708) (@lem4562779 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4562784 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term239 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term239 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term239 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4562785 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4562784 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4562781 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4562786 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term241 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4562785 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4562787 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4562788 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term242 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4562787 _107705 _107708) (@lem4562786 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4562789 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term243 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4562788 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4562790 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562791 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term244 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4562790 _107705) (@lem4562789 _107705 _107708 _54415 t s)). Qed.
Lemma lem4562792 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term245 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562791 _107705 _107708 _54415 t s)). Qed.
Lemma lem4562793 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562794 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term246 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4562793 _107708) (@lem4562792 _107705 _107708 _54415 t)). Qed.
Lemma lem4562795 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term247 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4562794 _107705 _107708 _54415 t)). Qed.
Lemma lem4562796 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562797 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term248 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4562796 _107705) (@lem4562795 _107705 _107708 _54415)). Qed.
Lemma lem4562798 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562799 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term249 _107705 _107708 _54415) = (term249 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4562798) (@lem4562797 _107705 _107708 _54415)). Qed.
Lemma lem4562800 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term527 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420) = (term527 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562799 _107705 _107708 _54415) (@lem4562777 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562801 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term528 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420) = (term528 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (fun_ext (fun _54415 : type656 _107705 _107708 => @lem4562800 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562802 {_107705 _107708 : Type'} : (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop))). Qed.
Lemma lem4562803 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term529 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420) = (term529 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562802 _107705 _107708) (@lem4562801 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562804 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term109 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562805 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4562804 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562806 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4562807 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562806 _107705 A) (@lem4562805 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562810 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term239 _107705 A _54416 t s d GEN_PVAR_148) = (term239 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4562811 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562810 _107705 A _54416 t s d GEN_PVAR_148) (@lem4562807 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562812 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term241 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4562811 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562813 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4562814 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term242 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4562813 _107705 A) (@lem4562812 _107705 A _54416 t s d)). Qed.
Lemma lem4562815 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term243 _107705 A _54416 t s) = (term243 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4562814 _107705 A _54416 t s d)). Qed.
Lemma lem4562816 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4562817 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term244 _107705 A _54416 t s) = (term244 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4562816 _107705) (@lem4562815 _107705 A _54416 t s)). Qed.
Lemma lem4562818 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term245 _107705 A _54416 t) = (term245 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562817 _107705 A _54416 t s)). Qed.
Lemma lem4562819 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562820 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term246 _107705 A _54416 t) = (term246 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4562819 A) (@lem4562818 _107705 A _54416 t)). Qed.
Lemma lem4562821 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term247 _107705 A _54416) = (term247 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4562820 _107705 A _54416 t)). Qed.
Lemma lem4562822 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562823 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term248 _107705 A _54416).
Proof. exact (MK_COMB (@lem4562822 _107705) (@lem4562821 _107705 A _54416)). Qed.
Lemma lem4562824 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562825 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term249 _107705 A _54416) = (term249 _107705 A _54416).
Proof. exact (MK_COMB (@lem4562824) (@lem4562823 _107705 A _54416)). Qed.
Lemma lem4562826 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term530 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420) = (term530 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562825 _107705 A _54416) (@lem4562803 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562827 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term531 _107705 _107708 A B _54417 _54418 _54419 _54420) = (term531 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (fun_ext (fun _54416 : type656 _107705 A => @lem4562826 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562828 {_107705 A : Type'} : (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)) = (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> Prop))). Qed.
Lemma lem4562829 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term532 _107705 _107708 A B _54417 _54418 _54419 _54420) = (term532 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562828 _107705 A) (@lem4562827 _107705 _107708 A B _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562830 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term109 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562831 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4562830 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562832 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4562833 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562832 _107708 A) (@lem4562831 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562836 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term239 _107708 A _54417 t s d GEN_PVAR_148) = (term239 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term239 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4562837 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562836 _107708 A _54417 t s d GEN_PVAR_148) (@lem4562833 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4562838 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term241 _107708 A _54417 t s d) = (term241 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4562837 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562839 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4562840 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term242 _107708 A _54417 t s d) = (term242 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4562839 _107708 A) (@lem4562838 _107708 A _54417 t s d)). Qed.
Lemma lem4562841 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term243 _107708 A _54417 t s) = (term243 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4562840 _107708 A _54417 t s d)). Qed.
Lemma lem4562842 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4562843 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term244 _107708 A _54417 t s) = (term244 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4562842 _107708) (@lem4562841 _107708 A _54417 t s)). Qed.
Lemma lem4562844 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term245 _107708 A _54417 t) = (term245 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562843 _107708 A _54417 t s)). Qed.
Lemma lem4562845 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562846 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term246 _107708 A _54417 t) = (term246 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4562845 A) (@lem4562844 _107708 A _54417 t)). Qed.
Lemma lem4562847 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term247 _107708 A _54417) = (term247 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4562846 _107708 A _54417 t)). Qed.
Lemma lem4562848 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562849 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term248 _107708 A _54417) = (term248 _107708 A _54417).
Proof. exact (MK_COMB (@lem4562848 _107708) (@lem4562847 _107708 A _54417)). Qed.
Lemma lem4562850 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562851 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term249 _107708 A _54417) = (term249 _107708 A _54417).
Proof. exact (MK_COMB (@lem4562850) (@lem4562849 _107708 A _54417)). Qed.
Lemma lem4562852 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term533 _107705 _107708 A B _54417 _54418 _54419 _54420) = (term533 _107705 _107708 A B _54417 _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562851 _107708 A _54417) (@lem4562829 _107705 _107708 A B _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562853 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term534 _107705 _107708 A B _54418 _54419 _54420) = (term534 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (fun_ext (fun _54417 : type656 _107708 A => @lem4562852 _107705 _107708 A B _54417 _54418 _54419 _54420)). Qed.
Lemma lem4562854 {_107708 A : Type'} : (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)) = (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> Prop))). Qed.
Lemma lem4562855 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term535 _107705 _107708 A B _54418 _54419 _54420) = (term535 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562854 _107708 A) (@lem4562853 _107705 _107708 A B _54418 _54419 _54420)). Qed.
Lemma lem4562856 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term82 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562857 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4562856 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562858 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4562859 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562858 _107705 B) (@lem4562857 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562862 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term442 _107705 B _54418 t s d GEN_PVAR_148) = (term442 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4562863 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)) = ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562862 _107705 B _54418 t s d GEN_PVAR_148) (@lem4562859 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562864 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term444 _107705 B _54418 t s d) = (term444 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4562863 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562865 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4562866 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term445 _107705 B _54418 t s d) = (term445 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4562865 _107705 B) (@lem4562864 _107705 B _54418 t s d)). Qed.
Lemma lem4562867 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term446 _107705 B _54418 t s) = (term446 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4562866 _107705 B _54418 t s d)). Qed.
Lemma lem4562868 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562869 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term447 _107705 B _54418 t s) = (term447 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4562868 B) (@lem4562867 _107705 B _54418 t s)). Qed.
Lemma lem4562870 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term448 _107705 B _54418 t) = (term448 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4562869 _107705 B _54418 t s)). Qed.
Lemma lem4562871 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4562872 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term449 _107705 B _54418 t) = (term449 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4562871 _107705) (@lem4562870 _107705 B _54418 t)). Qed.
Lemma lem4562873 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term450 _107705 B _54418) = (term450 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562872 _107705 B _54418 t)). Qed.
Lemma lem4562874 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562875 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term451 _107705 B _54418) = (term451 _107705 B _54418).
Proof. exact (MK_COMB (@lem4562874 B) (@lem4562873 _107705 B _54418)). Qed.
Lemma lem4562876 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562877 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term452 _107705 B _54418) = (term452 _107705 B _54418).
Proof. exact (MK_COMB (@lem4562876) (@lem4562875 _107705 B _54418)). Qed.
Lemma lem4562878 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term536 _107705 _107708 A B _54418 _54419 _54420) = (term536 _107705 _107708 A B _54418 _54419 _54420).
Proof. exact (MK_COMB (@lem4562877 _107705 B _54418) (@lem4562855 _107705 _107708 A B _54418 _54419 _54420)). Qed.
Lemma lem4562879 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term537 _107705 _107708 A B _54419 _54420) = (term537 _107705 _107708 A B _54419 _54420).
Proof. exact (fun_ext (fun _54418 : type839 _107705 B => @lem4562878 _107705 _107708 A B _54418 _54419 _54420)). Qed.
Lemma lem4562880 {_107705 B : Type'} : (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> Prop))). Qed.
Lemma lem4562881 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term538 _107705 _107708 A B _54419 _54420) = (term538 _107705 _107708 A B _54419 _54420).
Proof. exact (MK_COMB (@lem4562880 _107705 B) (@lem4562879 _107705 _107708 A B _54419 _54420)). Qed.
Lemma lem4562882 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term82 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562883 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4562882 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562884 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4562885 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562884 _107708 B) (@lem4562883 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562888 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term442 _107708 B _54419 t s d GEN_PVAR_148) = (term442 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4562889 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)) = ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562888 _107708 B _54419 t s d GEN_PVAR_148) (@lem4562885 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562890 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term444 _107708 B _54419 t s d) = (term444 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4562889 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562891 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4562892 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term445 _107708 B _54419 t s d) = (term445 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4562891 _107708 B) (@lem4562890 _107708 B _54419 t s d)). Qed.
Lemma lem4562893 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term446 _107708 B _54419 t s) = (term446 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4562892 _107708 B _54419 t s d)). Qed.
Lemma lem4562894 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562895 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term447 _107708 B _54419 t s) = (term447 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4562894 B) (@lem4562893 _107708 B _54419 t s)). Qed.
Lemma lem4562896 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term448 _107708 B _54419 t) = (term448 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4562895 _107708 B _54419 t s)). Qed.
Lemma lem4562897 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4562898 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term449 _107708 B _54419 t) = (term449 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4562897 _107708) (@lem4562896 _107708 B _54419 t)). Qed.
Lemma lem4562899 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term450 _107708 B _54419) = (term450 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562898 _107708 B _54419 t)). Qed.
Lemma lem4562900 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562901 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term451 _107708 B _54419) = (term451 _107708 B _54419).
Proof. exact (MK_COMB (@lem4562900 B) (@lem4562899 _107708 B _54419)). Qed.
Lemma lem4562902 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562903 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term452 _107708 B _54419) = (term452 _107708 B _54419).
Proof. exact (MK_COMB (@lem4562902) (@lem4562901 _107708 B _54419)). Qed.
Lemma lem4562904 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) : (term539 _107705 _107708 A B _54419 _54420) = (term539 _107705 _107708 A B _54419 _54420).
Proof. exact (MK_COMB (@lem4562903 _107708 B _54419) (@lem4562881 _107705 _107708 A B _54419 _54420)). Qed.
Lemma lem4562905 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term540 _107705 _107708 A B _54420) = (term540 _107705 _107708 A B _54420).
Proof. exact (fun_ext (fun _54419 : type839 _107708 B => @lem4562904 _107705 _107708 A B _54419 _54420)). Qed.
Lemma lem4562906 {_107708 B : Type'} : (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> Prop))). Qed.
Lemma lem4562907 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term541 _107705 _107708 A B _54420) = (term541 _107705 _107708 A B _54420).
Proof. exact (MK_COMB (@lem4562906 _107708 B) (@lem4562905 _107705 _107708 A B _54420)). Qed.
Lemma lem4562908 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term82 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562909 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4562908 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4562910 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4562911 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4562910 A B) (@lem4562909 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562914 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term442 A B _54420 t s d GEN_PVAR_148) = (term442 A B _54420 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term442 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4562915 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)) = ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4562914 A B _54420 t s d GEN_PVAR_148) (@lem4562911 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4562916 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term444 A B _54420 t s d) = (term444 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4562915 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4562917 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4562918 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term445 A B _54420 t s d) = (term445 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4562917 A B) (@lem4562916 A B _54420 t s d)). Qed.
Lemma lem4562919 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term446 A B _54420 t s) = (term446 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4562918 A B _54420 t s d)). Qed.
Lemma lem4562920 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4562921 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term447 A B _54420 t s) = (term447 A B _54420 t s).
Proof. exact (MK_COMB (@lem4562920 B) (@lem4562919 A B _54420 t s)). Qed.
Lemma lem4562922 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term448 A B _54420 t) = (term448 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4562921 A B _54420 t s)). Qed.
Lemma lem4562923 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4562924 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term449 A B _54420 t) = (term449 A B _54420 t).
Proof. exact (MK_COMB (@lem4562923 A) (@lem4562922 A B _54420 t)). Qed.
Lemma lem4562925 {A B : Type'} (_54420 : type839 A B) : (term450 A B _54420) = (term450 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4562924 A B _54420 t)). Qed.
Lemma lem4562926 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4562927 {A B : Type'} (_54420 : type839 A B) : (term451 A B _54420) = (term451 A B _54420).
Proof. exact (MK_COMB (@lem4562926 B) (@lem4562925 A B _54420)). Qed.
Lemma lem4562928 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4562929 {A B : Type'} (_54420 : type839 A B) : (term452 A B _54420) = (term452 A B _54420).
Proof. exact (MK_COMB (@lem4562928) (@lem4562927 A B _54420)). Qed.
Lemma lem4562930 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : (term561 _107705 _107708 A B _54420) = (term561 _107705 _107708 A B _54420).
Proof. exact (MK_COMB (@lem4562929 A B _54420) (@lem4562907 _107705 _107708 A B _54420)). Qed.
Lemma lem4562931 {_107705 _107708 A B : Type'} : (term562 _107705 _107708 A B) = (term562 _107705 _107708 A B).
Proof. exact (fun_ext (fun _54420 : type839 A B => @lem4562930 _107705 _107708 A B _54420)). Qed.
Lemma lem4562932 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4562933 {_107705 _107708 A B : Type'} : (term563 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (MK_COMB (@lem4562932 A B) (@lem4562931 _107705 _107708 A B)). Qed.
Lemma lem4563670 {_107705 _107708 A B : Type'} : (term61 _107705 _107708 A B) = (term563 _107705 _107708 A B).
Proof. exact (TRANS (@lem4562413 _107705 _107708 A B) (@lem4562933 _107705 _107708 A B)). Qed.
Lemma lem4563671 {_107705 _107708 A B : Type'} : (term563 _107705 _107708 A B) = (term61 _107705 _107708 A B).
Proof. exact (SYM (@lem4563670 _107705 _107708 A B)). Qed.
Lemma lem4563672 {A B : Type'} (_54420 : type839 A B) (h1 : term451 A B _54420) : term451 A B _54420.
Proof. exact (h1). Qed.
Lemma lem4563673 {_107708 B : Type'} (_54419 : type839 _107708 B) (h1 : term451 _107708 B _54419) : term451 _107708 B _54419.
Proof. exact (h1). Qed.
Lemma lem4563674 {_107705 B : Type'} (_54418 : type839 _107705 B) (h1 : term451 _107705 B _54418) : term451 _107705 B _54418.
Proof. exact (h1). Qed.
Lemma lem4563675 {_107708 A : Type'} (_54417 : type656 _107708 A) (h1 : term248 _107708 A _54417) : term248 _107708 A _54417.
Proof. exact (h1). Qed.
Lemma lem4563676 {_107705 A : Type'} (_54416 : type656 _107705 A) (h1 : term248 _107705 A _54416) : term248 _107705 A _54416.
Proof. exact (h1). Qed.
Lemma lem4563677 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : term248 _107705 _107708 _54415) : term248 _107705 _107708 _54415.
Proof. exact (h1). Qed.
Lemma lem4563678 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term176 _107705 _107708 _54415 d) : term176 _107705 _107708 _54415 d.
Proof. exact (h1). Qed.
Lemma lem4563679 {_107705 : Type'} (h1 : term13 _107705) : term13 _107705.
Proof. exact (h1). Qed.
Lemma lem4563680 {_107708 : Type'} (h1 : term13 _107708) : term13 _107708.
Proof. exact (h1). Qed.
Lemma lem4563684 {_107705 _107708 : Type'} (h1 : term15 _107705 _107708) : term15 _107705 _107708.
Proof. exact (h1). Qed.
Lemma lem4563689 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term139 _107705 _107708 _54415.
Proof. exact (h1). Qed.
Lemma lem4563698 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term82 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term82 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4563699 {A B : Type'} (P : type572 A B) : (term564 A B P) = (term565 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem4563700 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term566 A B GEN_PVAR_148 t s d) = (term567 A B GEN_PVAR_148 t s d).
Proof. exact (@lem4563699 A B (term83 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563701 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term568 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4563702 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4563704 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term569 A B GEN_PVAR_148 t s d f) = (term570 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4563702) (@lem4563701 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4563705 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term571 A B GEN_PVAR_148 t s d) = (term572 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4563704 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4563706 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4563707 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term567 A B GEN_PVAR_148 t s d) = (term573 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563706 A B) (@lem4563705 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563708 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term566 A B GEN_PVAR_148 t s d) = (term573 A B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4563700 A B GEN_PVAR_148 t s d) (@lem4563707 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563709 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term83 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4563698 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4563710 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4563711 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term84 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563710 A B) (@lem4563709 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563713 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term574 A B _54420 t s d GEN_PVAR_148) = (term574 A B _54420 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4563714 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term575 A B _54420 GEN_PVAR_148 t s d) = (term575 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563713 A B _54420 t s d GEN_PVAR_148) (@lem4563711 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563716 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term576 A B _54420 t s d GEN_PVAR_148) = (term576 A B _54420 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term576 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4563717 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term577 A B _54420 GEN_PVAR_148 t s d) = (term578 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563716 A B _54420 t s d GEN_PVAR_148) (@lem4563708 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563718 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4563719 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term579 A B _54420 GEN_PVAR_148 t s d) = (term580 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563718) (@lem4563717 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563720 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term581 A B _54420 GEN_PVAR_148 t s d) = (term582 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563719 A B _54420 GEN_PVAR_148 t s d) (@lem4563714 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563721 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)) = (term581 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_54420 t s d GEN_PVAR_148) (term84 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4563722 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_54420 t s d GEN_PVAR_148) = (term84 A B GEN_PVAR_148 t s d)) = (term582 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4563721 A B _54420 GEN_PVAR_148 t s d) (@lem4563720 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563723 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term444 A B _54420 t s d) = (term583 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4563722 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563724 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4563725 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term445 A B _54420 t s d) = (term584 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563724 A B) (@lem4563723 A B _54420 t s d)). Qed.
Lemma lem4563726 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term446 A B _54420 t s) = (term585 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4563725 A B _54420 t s d)). Qed.
Lemma lem4563727 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4563728 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term447 A B _54420 t s) = (term586 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563727 B) (@lem4563726 A B _54420 t s)). Qed.
Lemma lem4563729 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term448 A B _54420 t) = (term587 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4563728 A B _54420 t s)). Qed.
Lemma lem4563730 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4563731 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term449 A B _54420 t) = (term588 A B _54420 t).
Proof. exact (MK_COMB (@lem4563730 A) (@lem4563729 A B _54420 t)). Qed.
Lemma lem4563732 {A B : Type'} (_54420 : type839 A B) : (term450 A B _54420) = (term589 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4563731 A B _54420 t)). Qed.
Lemma lem4563733 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4563734 {A B : Type'} (_54420 : type839 A B) : (term451 A B _54420) = (term590 A B _54420).
Proof. exact (MK_COMB (@lem4563733 B) (@lem4563732 A B _54420)). Qed.
Lemma lem4563748 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4563749 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term593 A B P Q) = (term594 A B P Q).
Proof. exact (@lem4563748 (A -> B) P Q). Qed.
Lemma lem4563750 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term595 A B _54420 t s d) = (term596 A B _54420 t s d).
Proof. exact (@lem4563749 A B (term597 A B _54420 t s d) (term598 A B _54420 t s d)). Qed.
Lemma lem4563751 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term599 A B _54420 t s d GEN_PVAR_148) = (term578 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term599 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4563752 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4563753 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term600 A B _54420 t s d GEN_PVAR_148) = (term580 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563752) (@lem4563751 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563754 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term601 A B _54420 t s d GEN_PVAR_148) = (term575 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term601 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4563755 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term602 A B _54420 t s d GEN_PVAR_148) = (term582 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4563753 A B _54420 GEN_PVAR_148 t s d) (@lem4563754 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563756 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term603 A B _54420 t s d) = (term583 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4563755 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563757 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4563758 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term595 A B _54420 t s d) = (term584 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563757 A B) (@lem4563756 A B _54420 t s d)). Qed.
Lemma lem4563759 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4563760 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term604 A B _54420 t s d) = (term605 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563759) (@lem4563758 A B _54420 t s d)). Qed.
Lemma lem4563761 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term599 A B _54420 t s d GEN_PVAR_148) = (term578 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term599 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4563762 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term606 A B _54420 t s d) = (term597 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4563761 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563763 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4563764 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term607 A B _54420 t s d) = (term608 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563763 A B) (@lem4563762 A B _54420 t s d)). Qed.
Lemma lem4563765 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4563766 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term609 A B _54420 t s d) = (term610 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563765) (@lem4563764 A B _54420 t s d)). Qed.
Lemma lem4563767 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term601 A B _54420 t s d GEN_PVAR_148) = (term575 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term601 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4563768 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term611 A B _54420 t s d) = (term598 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4563767 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4563769 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4563770 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term612 A B _54420 t s d) = (term613 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563769 A B) (@lem4563768 A B _54420 t s d)). Qed.
Lemma lem4563771 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term596 A B _54420 t s d) = (term614 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563766 A B _54420 t s d) (@lem4563770 A B _54420 t s d)). Qed.
Lemma lem4563772 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term595 A B _54420 t s d) = (term596 A B _54420 t s d)) = ((term584 A B _54420 t s d) = (term614 A B _54420 t s d)).
Proof. exact (MK_COMB (@lem4563760 A B _54420 t s d) (@lem4563771 A B _54420 t s d)). Qed.
Lemma lem4563773 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term584 A B _54420 t s d) = (term614 A B _54420 t s d).
Proof. exact (EQ_MP (@lem4563772 A B _54420 t s d) (@lem4563750 A B _54420 t s d)). Qed.
Lemma lem4563894 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term585 A B _54420 t s) = (term615 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4563773 A B _54420 t s d)). Qed.
Lemma lem4563895 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4563896 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term586 A B _54420 t s) = (term616 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563895 B) (@lem4563894 A B _54420 t s)). Qed.
Lemma lem4563898 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4563899 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term591 B P Q) = (term592 B P Q).
Proof. exact (@lem4563898 B P Q). Qed.
Lemma lem4563900 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term617 A B _54420 t s) = (term618 A B _54420 t s).
Proof. exact (@lem4563899 B (term619 A B _54420 t s) (term620 A B _54420 t s)). Qed.
Lemma lem4563901 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term621 A B _54420 t s d) = (term608 A B _54420 t s d).
Proof. exact (eq_refl (term621 A B _54420 t s d)). Qed.
Lemma lem4563902 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4563903 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term622 A B _54420 t s d) = (term610 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563902) (@lem4563901 A B _54420 t s d)). Qed.
Lemma lem4563904 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term623 A B _54420 t s d) = (term613 A B _54420 t s d).
Proof. exact (eq_refl (term623 A B _54420 t s d)). Qed.
Lemma lem4563905 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term624 A B _54420 t s d) = (term614 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4563903 A B _54420 t s d) (@lem4563904 A B _54420 t s d)). Qed.
Lemma lem4563906 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term625 A B _54420 t s) = (term615 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4563905 A B _54420 t s d)). Qed.
Lemma lem4563907 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4563908 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term617 A B _54420 t s) = (term616 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563907 B) (@lem4563906 A B _54420 t s)). Qed.
Lemma lem4563909 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4563910 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term626 A B _54420 t s) = (term627 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563909) (@lem4563908 A B _54420 t s)). Qed.
Lemma lem4563911 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term621 A B _54420 t s d) = (term608 A B _54420 t s d).
Proof. exact (eq_refl (term621 A B _54420 t s d)). Qed.
Lemma lem4563912 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term628 A B _54420 t s) = (term619 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4563911 A B _54420 t s d)). Qed.
Lemma lem4563913 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4563914 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term629 A B _54420 t s) = (term630 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563913 B) (@lem4563912 A B _54420 t s)). Qed.
Lemma lem4563915 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4563916 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term631 A B _54420 t s) = (term632 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563915) (@lem4563914 A B _54420 t s)). Qed.
Lemma lem4563917 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term623 A B _54420 t s d) = (term613 A B _54420 t s d).
Proof. exact (eq_refl (term623 A B _54420 t s d)). Qed.
Lemma lem4563918 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term633 A B _54420 t s) = (term620 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4563917 A B _54420 t s d)). Qed.
Lemma lem4563919 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4563920 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term634 A B _54420 t s) = (term635 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563919 B) (@lem4563918 A B _54420 t s)). Qed.
Lemma lem4563921 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term618 A B _54420 t s) = (term636 A B _54420 t s).
Proof. exact (MK_COMB (@lem4563916 A B _54420 t s) (@lem4563920 A B _54420 t s)). Qed.
Lemma lem4563922 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term617 A B _54420 t s) = (term618 A B _54420 t s)) = ((term616 A B _54420 t s) = (term636 A B _54420 t s)).
Proof. exact (MK_COMB (@lem4563910 A B _54420 t s) (@lem4563921 A B _54420 t s)). Qed.
Lemma lem4563923 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term616 A B _54420 t s) = (term636 A B _54420 t s).
Proof. exact (EQ_MP (@lem4563922 A B _54420 t s) (@lem4563900 A B _54420 t s)). Qed.
Lemma lem4564052 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term586 A B _54420 t s) = (term636 A B _54420 t s).
Proof. exact (TRANS (@lem4563896 A B _54420 t s) (@lem4563923 A B _54420 t s)). Qed.
Lemma lem4564053 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term587 A B _54420 t) = (term637 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564052 A B _54420 t s)). Qed.
Lemma lem4564054 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564055 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term588 A B _54420 t) = (term638 A B _54420 t).
Proof. exact (MK_COMB (@lem4564054 A) (@lem4564053 A B _54420 t)). Qed.
Lemma lem4564057 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4564058 {A : Type'} (P : type686 A) (Q : type686 A) : (term639 A P Q) = (term640 A P Q).
Proof. exact (@lem4564057 (A -> Prop) P Q). Qed.
Lemma lem4564059 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term641 A B _54420 t) = (term642 A B _54420 t).
Proof. exact (@lem4564058 A (term643 A B _54420 t) (term644 A B _54420 t)). Qed.
Lemma lem4564060 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term645 A B _54420 t s) = (term630 A B _54420 t s).
Proof. exact (eq_refl (term645 A B _54420 t s)). Qed.
Lemma lem4564061 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564062 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term646 A B _54420 t s) = (term632 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564061) (@lem4564060 A B _54420 t s)). Qed.
Lemma lem4564063 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term647 A B _54420 t s) = (term635 A B _54420 t s).
Proof. exact (eq_refl (term647 A B _54420 t s)). Qed.
Lemma lem4564064 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term648 A B _54420 t s) = (term636 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564062 A B _54420 t s) (@lem4564063 A B _54420 t s)). Qed.
Lemma lem4564065 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term649 A B _54420 t) = (term637 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564064 A B _54420 t s)). Qed.
Lemma lem4564066 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564067 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term641 A B _54420 t) = (term638 A B _54420 t).
Proof. exact (MK_COMB (@lem4564066 A) (@lem4564065 A B _54420 t)). Qed.
Lemma lem4564068 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564069 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term650 A B _54420 t) = (term651 A B _54420 t).
Proof. exact (MK_COMB (@lem4564068) (@lem4564067 A B _54420 t)). Qed.
Lemma lem4564070 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term645 A B _54420 t s) = (term630 A B _54420 t s).
Proof. exact (eq_refl (term645 A B _54420 t s)). Qed.
Lemma lem4564071 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term652 A B _54420 t) = (term643 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564070 A B _54420 t s)). Qed.
Lemma lem4564072 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564073 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term653 A B _54420 t) = (term654 A B _54420 t).
Proof. exact (MK_COMB (@lem4564072 A) (@lem4564071 A B _54420 t)). Qed.
Lemma lem4564074 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564075 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term655 A B _54420 t) = (term656 A B _54420 t).
Proof. exact (MK_COMB (@lem4564074) (@lem4564073 A B _54420 t)). Qed.
Lemma lem4564076 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term647 A B _54420 t s) = (term635 A B _54420 t s).
Proof. exact (eq_refl (term647 A B _54420 t s)). Qed.
Lemma lem4564077 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term657 A B _54420 t) = (term644 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564076 A B _54420 t s)). Qed.
Lemma lem4564078 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564079 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term658 A B _54420 t) = (term659 A B _54420 t).
Proof. exact (MK_COMB (@lem4564078 A) (@lem4564077 A B _54420 t)). Qed.
Lemma lem4564080 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term642 A B _54420 t) = (term660 A B _54420 t).
Proof. exact (MK_COMB (@lem4564075 A B _54420 t) (@lem4564079 A B _54420 t)). Qed.
Lemma lem4564081 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((term641 A B _54420 t) = (term642 A B _54420 t)) = ((term638 A B _54420 t) = (term660 A B _54420 t)).
Proof. exact (MK_COMB (@lem4564069 A B _54420 t) (@lem4564080 A B _54420 t)). Qed.
Lemma lem4564082 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term638 A B _54420 t) = (term660 A B _54420 t).
Proof. exact (EQ_MP (@lem4564081 A B _54420 t) (@lem4564059 A B _54420 t)). Qed.
Lemma lem4564219 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term588 A B _54420 t) = (term660 A B _54420 t).
Proof. exact (TRANS (@lem4564055 A B _54420 t) (@lem4564082 A B _54420 t)). Qed.
Lemma lem4564220 {A B : Type'} (_54420 : type839 A B) : (term589 A B _54420) = (term661 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564219 A B _54420 t)). Qed.
Lemma lem4564221 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564222 {A B : Type'} (_54420 : type839 A B) : (term590 A B _54420) = (term662 A B _54420).
Proof. exact (MK_COMB (@lem4564221 B) (@lem4564220 A B _54420)). Qed.
Lemma lem4564224 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4564225 {B : Type'} (P : type686 B) (Q : type686 B) : (term639 B P Q) = (term640 B P Q).
Proof. exact (@lem4564224 (B -> Prop) P Q). Qed.
Lemma lem4564226 {A B : Type'} (_54420 : type839 A B) : (term663 A B _54420) = (term664 A B _54420).
Proof. exact (@lem4564225 B (term665 A B _54420) (term666 A B _54420)). Qed.
Lemma lem4564227 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term667 A B _54420 t) = (term654 A B _54420 t).
Proof. exact (eq_refl (term667 A B _54420 t)). Qed.
Lemma lem4564228 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564229 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term668 A B _54420 t) = (term656 A B _54420 t).
Proof. exact (MK_COMB (@lem4564228) (@lem4564227 A B _54420 t)). Qed.
Lemma lem4564230 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term669 A B _54420 t) = (term659 A B _54420 t).
Proof. exact (eq_refl (term669 A B _54420 t)). Qed.
Lemma lem4564231 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term670 A B _54420 t) = (term660 A B _54420 t).
Proof. exact (MK_COMB (@lem4564229 A B _54420 t) (@lem4564230 A B _54420 t)). Qed.
Lemma lem4564232 {A B : Type'} (_54420 : type839 A B) : (term671 A B _54420) = (term661 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564231 A B _54420 t)). Qed.
Lemma lem4564233 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564234 {A B : Type'} (_54420 : type839 A B) : (term663 A B _54420) = (term662 A B _54420).
Proof. exact (MK_COMB (@lem4564233 B) (@lem4564232 A B _54420)). Qed.
Lemma lem4564235 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564236 {A B : Type'} (_54420 : type839 A B) : (term672 A B _54420) = (term673 A B _54420).
Proof. exact (MK_COMB (@lem4564235) (@lem4564234 A B _54420)). Qed.
Lemma lem4564237 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term667 A B _54420 t) = (term654 A B _54420 t).
Proof. exact (eq_refl (term667 A B _54420 t)). Qed.
Lemma lem4564238 {A B : Type'} (_54420 : type839 A B) : (term674 A B _54420) = (term665 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564237 A B _54420 t)). Qed.
Lemma lem4564239 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564240 {A B : Type'} (_54420 : type839 A B) : (term675 A B _54420) = (term676 A B _54420).
Proof. exact (MK_COMB (@lem4564239 B) (@lem4564238 A B _54420)). Qed.
Lemma lem4564241 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564242 {A B : Type'} (_54420 : type839 A B) : (term677 A B _54420) = (term678 A B _54420).
Proof. exact (MK_COMB (@lem4564241) (@lem4564240 A B _54420)). Qed.
Lemma lem4564243 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term669 A B _54420 t) = (term659 A B _54420 t).
Proof. exact (eq_refl (term669 A B _54420 t)). Qed.
Lemma lem4564244 {A B : Type'} (_54420 : type839 A B) : (term679 A B _54420) = (term666 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564243 A B _54420 t)). Qed.
Lemma lem4564245 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564246 {A B : Type'} (_54420 : type839 A B) : (term680 A B _54420) = (term681 A B _54420).
Proof. exact (MK_COMB (@lem4564245 B) (@lem4564244 A B _54420)). Qed.
Lemma lem4564247 {A B : Type'} (_54420 : type839 A B) : (term664 A B _54420) = (term682 A B _54420).
Proof. exact (MK_COMB (@lem4564242 A B _54420) (@lem4564246 A B _54420)). Qed.
Lemma lem4564248 {A B : Type'} (_54420 : type839 A B) : ((term663 A B _54420) = (term664 A B _54420)) = ((term662 A B _54420) = (term682 A B _54420)).
Proof. exact (MK_COMB (@lem4564236 A B _54420) (@lem4564247 A B _54420)). Qed.
Lemma lem4564249 {A B : Type'} (_54420 : type839 A B) : (term662 A B _54420) = (term682 A B _54420).
Proof. exact (EQ_MP (@lem4564248 A B _54420) (@lem4564226 A B _54420)). Qed.
Lemma lem4564394 {A B : Type'} (_54420 : type839 A B) : (term590 A B _54420) = (term682 A B _54420).
Proof. exact (TRANS (@lem4564222 A B _54420) (@lem4564249 A B _54420)). Qed.
Lemma lem4564396 {A : Type'} (P : Prop) (Q : A -> Prop) : (term683 A P Q) = (term684 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4564397 {A B : Type'} (P : Prop) (Q : type572 A B) : (term685 A B P Q) = (term686 A B P Q).
Proof. exact (@lem4564396 (A -> B) P Q). Qed.
Lemma lem4564398 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term687 A B _54420 GEN_PVAR_148 t s d) = (term688 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (@lem4564397 A B (term689 A B _54420 t s d GEN_PVAR_148) (term83 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564399 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term568 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564400 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term690 A B GEN_PVAR_148 t s d) = (term83 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4564399 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564401 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4564402 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term691 A B GEN_PVAR_148 t s d) = (term84 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564401 A B) (@lem4564400 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564403 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term574 A B _54420 t s d GEN_PVAR_148) = (term574 A B _54420 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4564404 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term687 A B _54420 GEN_PVAR_148 t s d) = (term575 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564403 A B _54420 t s d GEN_PVAR_148) (@lem4564402 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564405 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564406 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term692 A B _54420 GEN_PVAR_148 t s d) = (term693 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564405) (@lem4564404 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564407 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term568 A B GEN_PVAR_148 t s d f) = (term82 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564408 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term574 A B _54420 t s d GEN_PVAR_148) = (term574 A B _54420 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4564409 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term694 A B _54420 GEN_PVAR_148 t s d f) = (term695 A B _54420 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4564408 A B _54420 t s d GEN_PVAR_148) (@lem4564407 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564410 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term696 A B _54420 GEN_PVAR_148 t s d) = (term697 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4564409 A B _54420 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564411 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4564412 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term688 A B _54420 GEN_PVAR_148 t s d) = (term698 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564411 A B) (@lem4564410 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564413 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term687 A B _54420 GEN_PVAR_148 t s d) = (term688 A B _54420 GEN_PVAR_148 t s d)) = ((term575 A B _54420 GEN_PVAR_148 t s d) = (term698 A B _54420 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4564406 A B _54420 GEN_PVAR_148 t s d) (@lem4564412 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564414 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term575 A B _54420 GEN_PVAR_148 t s d) = (term698 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4564413 A B _54420 GEN_PVAR_148 t s d) (@lem4564398 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564415 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term598 A B _54420 t s d) = (term699 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4564414 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564416 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4564417 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term613 A B _54420 t s d) = (term700 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4564416 A B) (@lem4564415 A B _54420 t s d)). Qed.
Lemma lem4564419 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4564420 {A B : Type'} (P : type523 A B) : (term703 A B P) = (term704 A B P).
Proof. exact (@lem4564419 (A -> B) (A -> B) P). Qed.
Lemma lem4564421 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term705 A B _54420 t s d) = (term706 A B _54420 t s d).
Proof. exact (@lem4564420 A B (term707 A B _54420 t s d)). Qed.
Lemma lem4564422 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term708 A B _54420 t s d GEN_PVAR_148) = (term697 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term708 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4564423 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4564424 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term709 A B _54420 t s d GEN_PVAR_148 f) = (term710 A B _54420 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4564422 A B _54420 GEN_PVAR_148 t s d) (@lem4564423 A B f)). Qed.
Lemma lem4564425 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term710 A B _54420 GEN_PVAR_148 t s d f) = (term695 A B _54420 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term710 A B _54420 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564426 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term709 A B _54420 t s d GEN_PVAR_148 f) = (term695 A B _54420 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4564424 A B _54420 GEN_PVAR_148 t s d f) (@lem4564425 A B _54420 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564427 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term711 A B _54420 t s d GEN_PVAR_148) = (term697 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4564426 A B _54420 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564428 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4564429 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term712 A B _54420 t s d GEN_PVAR_148) = (term698 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564428 A B) (@lem4564427 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564430 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term713 A B _54420 t s d) = (term699 A B _54420 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4564429 A B _54420 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564431 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4564432 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term705 A B _54420 t s d) = (term700 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4564431 A B) (@lem4564430 A B _54420 t s d)). Qed.
Lemma lem4564433 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564434 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term714 A B _54420 t s d) = (term715 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4564433) (@lem4564432 A B _54420 t s d)). Qed.
Lemma lem4564435 {A B : Type'} (_54420 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term708 A B _54420 t s d GEN_PVAR_148) = (term697 A B _54420 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term708 A B _54420 t s d GEN_PVAR_148)). Qed.
Lemma lem4564436 {A B : Type'} (f : type549 A B) (GEN_PVAR_148 : A -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4564437 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term716 A B _54420 t s d f GEN_PVAR_148) = (term717 A B _54420 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4564435 A B _54420 GEN_PVAR_148 t s d) (@lem4564436 A B f GEN_PVAR_148)). Qed.
Lemma lem4564438 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term717 A B _54420 t s d f GEN_PVAR_148) = (term718 A B _54420 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term717 A B _54420 t s d f GEN_PVAR_148)). Qed.
Lemma lem4564439 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term716 A B _54420 t s d f GEN_PVAR_148) = (term718 A B _54420 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4564437 A B _54420 t s d f GEN_PVAR_148) (@lem4564438 A B _54420 t s d f GEN_PVAR_148)). Qed.
Lemma lem4564440 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term719 A B _54420 t s d f) = (term720 A B _54420 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4564439 A B _54420 t s d f GEN_PVAR_148)). Qed.
Lemma lem4564441 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4564442 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term721 A B _54420 t s d f) = (term722 A B _54420 t s d f).
Proof. exact (MK_COMB (@lem4564441 A B) (@lem4564440 A B _54420 t s d f)). Qed.
Lemma lem4564443 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term723 A B _54420 t s d) = (term724 A B _54420 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4564442 A B _54420 t s d f)). Qed.
Lemma lem4564444 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4564445 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term706 A B _54420 t s d) = (term725 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4564444 A B) (@lem4564443 A B _54420 t s d)). Qed.
Lemma lem4564446 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term705 A B _54420 t s d) = (term706 A B _54420 t s d)) = ((term700 A B _54420 t s d) = (term725 A B _54420 t s d)).
Proof. exact (MK_COMB (@lem4564434 A B _54420 t s d) (@lem4564445 A B _54420 t s d)). Qed.
Lemma lem4564447 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term700 A B _54420 t s d) = (term725 A B _54420 t s d).
Proof. exact (EQ_MP (@lem4564446 A B _54420 t s d) (@lem4564421 A B _54420 t s d)). Qed.
Lemma lem4564448 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term613 A B _54420 t s d) = (term725 A B _54420 t s d).
Proof. exact (TRANS (@lem4564417 A B _54420 t s d) (@lem4564447 A B _54420 t s d)). Qed.
Lemma lem4564449 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term620 A B _54420 t s) = (term726 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4564448 A B _54420 t s d)). Qed.
Lemma lem4564450 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564451 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term635 A B _54420 t s) = (term727 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564450 B) (@lem4564449 A B _54420 t s)). Qed.
Lemma lem4564453 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4564454 {A B : Type'} (P : type1435 A B) : (term728 A B P) = (term729 A B P).
Proof. exact (@lem4564453 B (type549 A B) P). Qed.
Lemma lem4564455 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term730 A B _54420 t s) = (term731 A B _54420 t s).
Proof. exact (@lem4564454 A B (term732 A B _54420 t s)). Qed.
Lemma lem4564456 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term733 A B _54420 t s d) = (term724 A B _54420 t s d).
Proof. exact (eq_refl (term733 A B _54420 t s d)). Qed.
Lemma lem4564457 {A B : Type'} (f : type549 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4564458 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term734 A B _54420 t s d f) = (term735 A B _54420 t s d f).
Proof. exact (MK_COMB (@lem4564456 A B _54420 t s d) (@lem4564457 A B f)). Qed.
Lemma lem4564459 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term735 A B _54420 t s d f) = (term722 A B _54420 t s d f).
Proof. exact (eq_refl (term735 A B _54420 t s d f)). Qed.
Lemma lem4564460 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term734 A B _54420 t s d f) = (term722 A B _54420 t s d f).
Proof. exact (TRANS (@lem4564458 A B _54420 t s d f) (@lem4564459 A B _54420 t s d f)). Qed.
Lemma lem4564461 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term736 A B _54420 t s d) = (term724 A B _54420 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4564460 A B _54420 t s d f)). Qed.
Lemma lem4564462 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4564463 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term737 A B _54420 t s d) = (term725 A B _54420 t s d).
Proof. exact (MK_COMB (@lem4564462 A B) (@lem4564461 A B _54420 t s d)). Qed.
Lemma lem4564464 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term738 A B _54420 t s) = (term726 A B _54420 t s).
Proof. exact (fun_ext (fun d : B => @lem4564463 A B _54420 t s d)). Qed.
Lemma lem4564465 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564466 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term730 A B _54420 t s) = (term727 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564465 B) (@lem4564464 A B _54420 t s)). Qed.
Lemma lem4564467 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564468 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term739 A B _54420 t s) = (term740 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564467) (@lem4564466 A B _54420 t s)). Qed.
Lemma lem4564469 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term733 A B _54420 t s d) = (term724 A B _54420 t s d).
Proof. exact (eq_refl (term733 A B _54420 t s d)). Qed.
Lemma lem4564470 {A B : Type'} (f : type1444 A B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4564471 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term741 A B _54420 t s f d) = (term742 A B _54420 t s f d).
Proof. exact (MK_COMB (@lem4564469 A B _54420 t s d) (@lem4564470 A B f d)). Qed.
Lemma lem4564472 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term742 A B _54420 t s f d) = (term743 A B _54420 t s f d).
Proof. exact (eq_refl (term742 A B _54420 t s f d)). Qed.
Lemma lem4564473 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term741 A B _54420 t s f d) = (term743 A B _54420 t s f d).
Proof. exact (TRANS (@lem4564471 A B _54420 t s f d) (@lem4564472 A B _54420 t s f d)). Qed.
Lemma lem4564474 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term744 A B _54420 t s f) = (term745 A B _54420 t s f).
Proof. exact (fun_ext (fun d : B => @lem4564473 A B _54420 t s f d)). Qed.
Lemma lem4564475 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564476 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term746 A B _54420 t s f) = (term747 A B _54420 t s f).
Proof. exact (MK_COMB (@lem4564475 B) (@lem4564474 A B _54420 t s f)). Qed.
Lemma lem4564477 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term748 A B _54420 t s) = (term749 A B _54420 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4564476 A B _54420 t s f)). Qed.
Lemma lem4564478 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564479 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term731 A B _54420 t s) = (term750 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564478 A B) (@lem4564477 A B _54420 t s)). Qed.
Lemma lem4564480 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term730 A B _54420 t s) = (term731 A B _54420 t s)) = ((term727 A B _54420 t s) = (term750 A B _54420 t s)).
Proof. exact (MK_COMB (@lem4564468 A B _54420 t s) (@lem4564479 A B _54420 t s)). Qed.
Lemma lem4564481 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term727 A B _54420 t s) = (term750 A B _54420 t s).
Proof. exact (EQ_MP (@lem4564480 A B _54420 t s) (@lem4564455 A B _54420 t s)). Qed.
Lemma lem4564482 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term635 A B _54420 t s) = (term750 A B _54420 t s).
Proof. exact (TRANS (@lem4564451 A B _54420 t s) (@lem4564481 A B _54420 t s)). Qed.
Lemma lem4564483 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term644 A B _54420 t) = (term751 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564482 A B _54420 t s)). Qed.
Lemma lem4564484 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564485 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term659 A B _54420 t) = (term752 A B _54420 t).
Proof. exact (MK_COMB (@lem4564484 A) (@lem4564483 A B _54420 t)). Qed.
Lemma lem4564487 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4564488 {A B : Type'} (P : type647 A B) : (term753 A B P) = (term754 A B P).
Proof. exact (@lem4564487 (A -> Prop) (type1444 A B) P). Qed.
Lemma lem4564489 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term755 A B _54420 t) = (term756 A B _54420 t).
Proof. exact (@lem4564488 A B (term757 A B _54420 t)). Qed.
Lemma lem4564490 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term758 A B _54420 t s) = (term749 A B _54420 t s).
Proof. exact (eq_refl (term758 A B _54420 t s)). Qed.
Lemma lem4564491 {A B : Type'} (f : type1444 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4564492 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term759 A B _54420 t s f) = (term760 A B _54420 t s f).
Proof. exact (MK_COMB (@lem4564490 A B _54420 t s) (@lem4564491 A B f)). Qed.
Lemma lem4564493 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term760 A B _54420 t s f) = (term747 A B _54420 t s f).
Proof. exact (eq_refl (term760 A B _54420 t s f)). Qed.
Lemma lem4564494 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term759 A B _54420 t s f) = (term747 A B _54420 t s f).
Proof. exact (TRANS (@lem4564492 A B _54420 t s f) (@lem4564493 A B _54420 t s f)). Qed.
Lemma lem4564495 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term761 A B _54420 t s) = (term749 A B _54420 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4564494 A B _54420 t s f)). Qed.
Lemma lem4564496 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564497 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term762 A B _54420 t s) = (term750 A B _54420 t s).
Proof. exact (MK_COMB (@lem4564496 A B) (@lem4564495 A B _54420 t s)). Qed.
Lemma lem4564498 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term763 A B _54420 t) = (term751 A B _54420 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564497 A B _54420 t s)). Qed.
Lemma lem4564499 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564500 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term755 A B _54420 t) = (term752 A B _54420 t).
Proof. exact (MK_COMB (@lem4564499 A) (@lem4564498 A B _54420 t)). Qed.
Lemma lem4564501 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564502 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term764 A B _54420 t) = (term765 A B _54420 t).
Proof. exact (MK_COMB (@lem4564501) (@lem4564500 A B _54420 t)). Qed.
Lemma lem4564503 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term758 A B _54420 t s) = (term749 A B _54420 t s).
Proof. exact (eq_refl (term758 A B _54420 t s)). Qed.
Lemma lem4564504 {A B : Type'} (f : type673 A B) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4564505 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term766 A B _54420 t f s) = (term767 A B _54420 t f s).
Proof. exact (MK_COMB (@lem4564503 A B _54420 t s) (@lem4564504 A B f s)). Qed.
Lemma lem4564506 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term767 A B _54420 t f s) = (term768 A B _54420 t f s).
Proof. exact (eq_refl (term767 A B _54420 t f s)). Qed.
Lemma lem4564507 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term766 A B _54420 t f s) = (term768 A B _54420 t f s).
Proof. exact (TRANS (@lem4564505 A B _54420 t f s) (@lem4564506 A B _54420 t f s)). Qed.
Lemma lem4564508 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term769 A B _54420 t f) = (term770 A B _54420 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4564507 A B _54420 t f s)). Qed.
Lemma lem4564509 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4564510 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term771 A B _54420 t f) = (term772 A B _54420 t f).
Proof. exact (MK_COMB (@lem4564509 A) (@lem4564508 A B _54420 t f)). Qed.
Lemma lem4564511 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term773 A B _54420 t) = (term774 A B _54420 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4564510 A B _54420 t f)). Qed.
Lemma lem4564512 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564513 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term756 A B _54420 t) = (term775 A B _54420 t).
Proof. exact (MK_COMB (@lem4564512 A B) (@lem4564511 A B _54420 t)). Qed.
Lemma lem4564514 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : ((term755 A B _54420 t) = (term756 A B _54420 t)) = ((term752 A B _54420 t) = (term775 A B _54420 t)).
Proof. exact (MK_COMB (@lem4564502 A B _54420 t) (@lem4564513 A B _54420 t)). Qed.
Lemma lem4564515 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term752 A B _54420 t) = (term775 A B _54420 t).
Proof. exact (EQ_MP (@lem4564514 A B _54420 t) (@lem4564489 A B _54420 t)). Qed.
Lemma lem4564516 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term659 A B _54420 t) = (term775 A B _54420 t).
Proof. exact (TRANS (@lem4564485 A B _54420 t) (@lem4564515 A B _54420 t)). Qed.
Lemma lem4564517 {A B : Type'} (_54420 : type839 A B) : (term666 A B _54420) = (term776 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564516 A B _54420 t)). Qed.
Lemma lem4564518 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564519 {A B : Type'} (_54420 : type839 A B) : (term681 A B _54420) = (term777 A B _54420).
Proof. exact (MK_COMB (@lem4564518 B) (@lem4564517 A B _54420)). Qed.
Lemma lem4564521 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4564522 {A B : Type'} (P : type820 A B) : (term778 A B P) = (term779 A B P).
Proof. exact (@lem4564521 (B -> Prop) (type673 A B) P). Qed.
Lemma lem4564523 {A B : Type'} (_54420 : type839 A B) : (term780 A B _54420) = (term781 A B _54420).
Proof. exact (@lem4564522 A B (term782 A B _54420)). Qed.
Lemma lem4564524 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term783 A B _54420 t) = (term774 A B _54420 t).
Proof. exact (eq_refl (term783 A B _54420 t)). Qed.
Lemma lem4564525 {A B : Type'} (f : type673 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4564526 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term784 A B _54420 t f) = (term785 A B _54420 t f).
Proof. exact (MK_COMB (@lem4564524 A B _54420 t) (@lem4564525 A B f)). Qed.
Lemma lem4564527 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term785 A B _54420 t f) = (term772 A B _54420 t f).
Proof. exact (eq_refl (term785 A B _54420 t f)). Qed.
Lemma lem4564528 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term784 A B _54420 t f) = (term772 A B _54420 t f).
Proof. exact (TRANS (@lem4564526 A B _54420 t f) (@lem4564527 A B _54420 t f)). Qed.
Lemma lem4564529 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term786 A B _54420 t) = (term774 A B _54420 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4564528 A B _54420 t f)). Qed.
Lemma lem4564530 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564531 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term787 A B _54420 t) = (term775 A B _54420 t).
Proof. exact (MK_COMB (@lem4564530 A B) (@lem4564529 A B _54420 t)). Qed.
Lemma lem4564532 {A B : Type'} (_54420 : type839 A B) : (term788 A B _54420) = (term776 A B _54420).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564531 A B _54420 t)). Qed.
Lemma lem4564533 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564534 {A B : Type'} (_54420 : type839 A B) : (term780 A B _54420) = (term777 A B _54420).
Proof. exact (MK_COMB (@lem4564533 B) (@lem4564532 A B _54420)). Qed.
Lemma lem4564535 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564536 {A B : Type'} (_54420 : type839 A B) : (term789 A B _54420) = (term790 A B _54420).
Proof. exact (MK_COMB (@lem4564535) (@lem4564534 A B _54420)). Qed.
Lemma lem4564537 {A B : Type'} (_54420 : type839 A B) (t : B -> Prop) : (term783 A B _54420 t) = (term774 A B _54420 t).
Proof. exact (eq_refl (term783 A B _54420 t)). Qed.
Lemma lem4564538 {A B : Type'} (f : type838 A B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4564539 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term791 A B _54420 f t) = (term792 A B _54420 f t).
Proof. exact (MK_COMB (@lem4564537 A B _54420 t) (@lem4564538 A B f t)). Qed.
Lemma lem4564540 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term792 A B _54420 f t) = (term793 A B _54420 f t).
Proof. exact (eq_refl (term792 A B _54420 f t)). Qed.
Lemma lem4564541 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term791 A B _54420 f t) = (term793 A B _54420 f t).
Proof. exact (TRANS (@lem4564539 A B _54420 f t) (@lem4564540 A B _54420 f t)). Qed.
Lemma lem4564542 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) : (term794 A B _54420 f) = (term795 A B _54420 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564541 A B _54420 f t)). Qed.
Lemma lem4564543 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564544 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) : (term796 A B _54420 f) = (term797 A B _54420 f).
Proof. exact (MK_COMB (@lem4564543 B) (@lem4564542 A B _54420 f)). Qed.
Lemma lem4564545 {A B : Type'} (_54420 : type839 A B) : (term798 A B _54420) = (term799 A B _54420).
Proof. exact (fun_ext (fun f : type838 A B => @lem4564544 A B _54420 f)). Qed.
Lemma lem4564546 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564547 {A B : Type'} (_54420 : type839 A B) : (term781 A B _54420) = (term800 A B _54420).
Proof. exact (MK_COMB (@lem4564546 A B) (@lem4564545 A B _54420)). Qed.
Lemma lem4564548 {A B : Type'} (_54420 : type839 A B) : ((term780 A B _54420) = (term781 A B _54420)) = ((term777 A B _54420) = (term800 A B _54420)).
Proof. exact (MK_COMB (@lem4564536 A B _54420) (@lem4564547 A B _54420)). Qed.
Lemma lem4564549 {A B : Type'} (_54420 : type839 A B) : (term777 A B _54420) = (term800 A B _54420).
Proof. exact (EQ_MP (@lem4564548 A B _54420) (@lem4564523 A B _54420)). Qed.
Lemma lem4564550 {A B : Type'} (_54420 : type839 A B) : (term681 A B _54420) = (term800 A B _54420).
Proof. exact (TRANS (@lem4564519 A B _54420) (@lem4564549 A B _54420)). Qed.
Lemma lem4564551 {A B : Type'} (_54420 : type839 A B) : (term678 A B _54420) = (term678 A B _54420).
Proof. exact (eq_refl (term678 A B _54420)). Qed.
Lemma lem4564552 {A B : Type'} (_54420 : type839 A B) : (term682 A B _54420) = (term801 A B _54420).
Proof. exact (MK_COMB (@lem4564551 A B _54420) (@lem4564550 A B _54420)). Qed.
Lemma lem4564554 {A : Type'} (P : Prop) (Q : A -> Prop) : (term802 A P Q) = (term803 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4564555 {A B : Type'} (P : Prop) (Q : type213 A B) : (term804 A B P Q) = (term805 A B P Q).
Proof. exact (@lem4564554 (type838 A B) P Q). Qed.
Lemma lem4564556 {A B : Type'} (_54420 : type839 A B) : (term806 A B _54420) = (term807 A B _54420).
Proof. exact (@lem4564555 A B (term676 A B _54420) (term799 A B _54420)). Qed.
Lemma lem4564557 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) : (term808 A B _54420 f) = (term797 A B _54420 f).
Proof. exact (eq_refl (term808 A B _54420 f)). Qed.
Lemma lem4564558 {A B : Type'} (_54420 : type839 A B) : (term809 A B _54420) = (term799 A B _54420).
Proof. exact (fun_ext (fun f : type838 A B => @lem4564557 A B _54420 f)). Qed.
Lemma lem4564559 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564560 {A B : Type'} (_54420 : type839 A B) : (term810 A B _54420) = (term800 A B _54420).
Proof. exact (MK_COMB (@lem4564559 A B) (@lem4564558 A B _54420)). Qed.
Lemma lem4564561 {A B : Type'} (_54420 : type839 A B) : (term678 A B _54420) = (term678 A B _54420).
Proof. exact (eq_refl (term678 A B _54420)). Qed.
Lemma lem4564562 {A B : Type'} (_54420 : type839 A B) : (term806 A B _54420) = (term801 A B _54420).
Proof. exact (MK_COMB (@lem4564561 A B _54420) (@lem4564560 A B _54420)). Qed.
Lemma lem4564563 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564564 {A B : Type'} (_54420 : type839 A B) : (term811 A B _54420) = (term812 A B _54420).
Proof. exact (MK_COMB (@lem4564563) (@lem4564562 A B _54420)). Qed.
Lemma lem4564565 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) : (term808 A B _54420 f) = (term797 A B _54420 f).
Proof. exact (eq_refl (term808 A B _54420 f)). Qed.
Lemma lem4564566 {A B : Type'} (_54420 : type839 A B) : (term678 A B _54420) = (term678 A B _54420).
Proof. exact (eq_refl (term678 A B _54420)). Qed.
Lemma lem4564567 {A B : Type'} (_54420 : type839 A B) (f : type838 A B) : (term813 A B _54420 f) = (term814 A B _54420 f).
Proof. exact (MK_COMB (@lem4564566 A B _54420) (@lem4564565 A B _54420 f)). Qed.
Lemma lem4564568 {A B : Type'} (_54420 : type839 A B) : (term815 A B _54420) = (term816 A B _54420).
Proof. exact (fun_ext (fun f : type838 A B => @lem4564567 A B _54420 f)). Qed.
Lemma lem4564569 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4564570 {A B : Type'} (_54420 : type839 A B) : (term807 A B _54420) = (term817 A B _54420).
Proof. exact (MK_COMB (@lem4564569 A B) (@lem4564568 A B _54420)). Qed.
Lemma lem4564571 {A B : Type'} (_54420 : type839 A B) : ((term806 A B _54420) = (term807 A B _54420)) = ((term801 A B _54420) = (term817 A B _54420)).
Proof. exact (MK_COMB (@lem4564564 A B _54420) (@lem4564570 A B _54420)). Qed.
Lemma lem4564572 {A B : Type'} (_54420 : type839 A B) : (term801 A B _54420) = (term817 A B _54420).
Proof. exact (EQ_MP (@lem4564571 A B _54420) (@lem4564556 A B _54420)). Qed.
Lemma lem4564573 {A B : Type'} (_54420 : type839 A B) : (term682 A B _54420) = (term817 A B _54420).
Proof. exact (TRANS (@lem4564552 A B _54420) (@lem4564572 A B _54420)). Qed.
Lemma lem4564574 {A B : Type'} (_54420 : type839 A B) : (term590 A B _54420) = (term817 A B _54420).
Proof. exact (TRANS (@lem4564394 A B _54420) (@lem4564573 A B _54420)). Qed.
Lemma lem4564575 {A B : Type'} (_54420 : type839 A B) : (term451 A B _54420) = (term817 A B _54420).
Proof. exact (TRANS (@lem4563734 A B _54420) (@lem4564574 A B _54420)). Qed.
Lemma lem4564576 {A B : Type'} (_54420 : type839 A B) (h1 : term451 A B _54420) : term817 A B _54420.
Proof. exact (EQ_MP (@lem4564575 A B _54420) (@lem4563672 A B _54420 h1)). Qed.
Lemma lem4564580 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term82 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term82 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564581 {_107708 B : Type'} (P : type572 _107708 B) : (term564 _107708 B P) = (term565 _107708 B P).
Proof. exact (@lem18394 (_107708 -> B) P). Qed.
Lemma lem4564582 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term566 _107708 B GEN_PVAR_148 t s d) = (term567 _107708 B GEN_PVAR_148 t s d).
Proof. exact (@lem4564581 _107708 B (term83 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564583 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term568 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564584 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4564586 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term569 _107708 B GEN_PVAR_148 t s d f) = (term570 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4564584) (@lem4564583 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564587 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term571 _107708 B GEN_PVAR_148 t s d) = (term572 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4564586 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564588 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4564589 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term567 _107708 B GEN_PVAR_148 t s d) = (term573 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564588 _107708 B) (@lem4564587 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564590 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term566 _107708 B GEN_PVAR_148 t s d) = (term573 _107708 B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4564582 _107708 B GEN_PVAR_148 t s d) (@lem4564589 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564591 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term83 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4564580 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4564592 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4564593 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term84 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564592 _107708 B) (@lem4564591 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564595 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term574 _107708 B _54419 t s d GEN_PVAR_148) = (term574 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4564596 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term575 _107708 B _54419 GEN_PVAR_148 t s d) = (term575 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564595 _107708 B _54419 t s d GEN_PVAR_148) (@lem4564593 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564598 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term576 _107708 B _54419 t s d GEN_PVAR_148) = (term576 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term576 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4564599 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term577 _107708 B _54419 GEN_PVAR_148 t s d) = (term578 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564598 _107708 B _54419 t s d GEN_PVAR_148) (@lem4564590 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564600 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564601 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term579 _107708 B _54419 GEN_PVAR_148 t s d) = (term580 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564600) (@lem4564599 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564602 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term581 _107708 B _54419 GEN_PVAR_148 t s d) = (term582 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564601 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4564596 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564603 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)) = (term581 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_54419 t s d GEN_PVAR_148) (term84 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4564604 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((_54419 t s d GEN_PVAR_148) = (term84 _107708 B GEN_PVAR_148 t s d)) = (term582 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4564603 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4564602 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564605 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term444 _107708 B _54419 t s d) = (term583 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4564604 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564606 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4564607 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term445 _107708 B _54419 t s d) = (term584 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564606 _107708 B) (@lem4564605 _107708 B _54419 t s d)). Qed.
Lemma lem4564608 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term446 _107708 B _54419 t s) = (term585 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4564607 _107708 B _54419 t s d)). Qed.
Lemma lem4564609 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564610 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term447 _107708 B _54419 t s) = (term586 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564609 B) (@lem4564608 _107708 B _54419 t s)). Qed.
Lemma lem4564611 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term448 _107708 B _54419 t) = (term587 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4564610 _107708 B _54419 t s)). Qed.
Lemma lem4564612 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4564613 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term449 _107708 B _54419 t) = (term588 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564612 _107708) (@lem4564611 _107708 B _54419 t)). Qed.
Lemma lem4564614 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term450 _107708 B _54419) = (term589 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4564613 _107708 B _54419 t)). Qed.
Lemma lem4564615 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4564616 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term451 _107708 B _54419) = (term590 _107708 B _54419).
Proof. exact (MK_COMB (@lem4564615 B) (@lem4564614 _107708 B _54419)). Qed.
Lemma lem4564630 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4564631 {_107708 B : Type'} (P : type572 _107708 B) (Q : type572 _107708 B) : (term593 _107708 B P Q) = (term594 _107708 B P Q).
Proof. exact (@lem4564630 (_107708 -> B) P Q). Qed.
Lemma lem4564632 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term595 _107708 B _54419 t s d) = (term596 _107708 B _54419 t s d).
Proof. exact (@lem4564631 _107708 B (term597 _107708 B _54419 t s d) (term598 _107708 B _54419 t s d)). Qed.
Lemma lem4564633 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term599 _107708 B _54419 t s d GEN_PVAR_148) = (term578 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term599 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4564634 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564635 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term600 _107708 B _54419 t s d GEN_PVAR_148) = (term580 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564634) (@lem4564633 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564636 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term601 _107708 B _54419 t s d GEN_PVAR_148) = (term575 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term601 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4564637 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term602 _107708 B _54419 t s d GEN_PVAR_148) = (term582 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4564635 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4564636 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564638 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term603 _107708 B _54419 t s d) = (term583 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4564637 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564639 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4564640 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term595 _107708 B _54419 t s d) = (term584 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564639 _107708 B) (@lem4564638 _107708 B _54419 t s d)). Qed.
Lemma lem4564641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564642 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term604 _107708 B _54419 t s d) = (term605 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564641) (@lem4564640 _107708 B _54419 t s d)). Qed.
Lemma lem4564643 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term599 _107708 B _54419 t s d GEN_PVAR_148) = (term578 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term599 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4564644 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term606 _107708 B _54419 t s d) = (term597 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4564643 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564645 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4564646 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term607 _107708 B _54419 t s d) = (term608 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564645 _107708 B) (@lem4564644 _107708 B _54419 t s d)). Qed.
Lemma lem4564647 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564648 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term609 _107708 B _54419 t s d) = (term610 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564647) (@lem4564646 _107708 B _54419 t s d)). Qed.
Lemma lem4564649 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term601 _107708 B _54419 t s d GEN_PVAR_148) = (term575 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term601 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4564650 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term611 _107708 B _54419 t s d) = (term598 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4564649 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4564651 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4564652 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term612 _107708 B _54419 t s d) = (term613 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564651 _107708 B) (@lem4564650 _107708 B _54419 t s d)). Qed.
Lemma lem4564653 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term596 _107708 B _54419 t s d) = (term614 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564648 _107708 B _54419 t s d) (@lem4564652 _107708 B _54419 t s d)). Qed.
Lemma lem4564654 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((term595 _107708 B _54419 t s d) = (term596 _107708 B _54419 t s d)) = ((term584 _107708 B _54419 t s d) = (term614 _107708 B _54419 t s d)).
Proof. exact (MK_COMB (@lem4564642 _107708 B _54419 t s d) (@lem4564653 _107708 B _54419 t s d)). Qed.
Lemma lem4564655 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term584 _107708 B _54419 t s d) = (term614 _107708 B _54419 t s d).
Proof. exact (EQ_MP (@lem4564654 _107708 B _54419 t s d) (@lem4564632 _107708 B _54419 t s d)). Qed.
Lemma lem4564776 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term585 _107708 B _54419 t s) = (term615 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4564655 _107708 B _54419 t s d)). Qed.
Lemma lem4564777 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564778 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term586 _107708 B _54419 t s) = (term616 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564777 B) (@lem4564776 _107708 B _54419 t s)). Qed.
Lemma lem4564780 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4564781 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term591 B P Q) = (term592 B P Q).
Proof. exact (@lem4564780 B P Q). Qed.
Lemma lem4564782 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term617 _107708 B _54419 t s) = (term618 _107708 B _54419 t s).
Proof. exact (@lem4564781 B (term619 _107708 B _54419 t s) (term620 _107708 B _54419 t s)). Qed.
Lemma lem4564783 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term621 _107708 B _54419 t s d) = (term608 _107708 B _54419 t s d).
Proof. exact (eq_refl (term621 _107708 B _54419 t s d)). Qed.
Lemma lem4564784 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564785 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term622 _107708 B _54419 t s d) = (term610 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564784) (@lem4564783 _107708 B _54419 t s d)). Qed.
Lemma lem4564786 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term623 _107708 B _54419 t s d) = (term613 _107708 B _54419 t s d).
Proof. exact (eq_refl (term623 _107708 B _54419 t s d)). Qed.
Lemma lem4564787 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term624 _107708 B _54419 t s d) = (term614 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4564785 _107708 B _54419 t s d) (@lem4564786 _107708 B _54419 t s d)). Qed.
Lemma lem4564788 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term625 _107708 B _54419 t s) = (term615 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4564787 _107708 B _54419 t s d)). Qed.
Lemma lem4564789 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564790 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term617 _107708 B _54419 t s) = (term616 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564789 B) (@lem4564788 _107708 B _54419 t s)). Qed.
Lemma lem4564791 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564792 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term626 _107708 B _54419 t s) = (term627 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564791) (@lem4564790 _107708 B _54419 t s)). Qed.
Lemma lem4564793 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term621 _107708 B _54419 t s d) = (term608 _107708 B _54419 t s d).
Proof. exact (eq_refl (term621 _107708 B _54419 t s d)). Qed.
Lemma lem4564794 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term628 _107708 B _54419 t s) = (term619 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4564793 _107708 B _54419 t s d)). Qed.
Lemma lem4564795 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564796 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term629 _107708 B _54419 t s) = (term630 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564795 B) (@lem4564794 _107708 B _54419 t s)). Qed.
Lemma lem4564797 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564798 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term631 _107708 B _54419 t s) = (term632 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564797) (@lem4564796 _107708 B _54419 t s)). Qed.
Lemma lem4564799 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term623 _107708 B _54419 t s d) = (term613 _107708 B _54419 t s d).
Proof. exact (eq_refl (term623 _107708 B _54419 t s d)). Qed.
Lemma lem4564800 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term633 _107708 B _54419 t s) = (term620 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4564799 _107708 B _54419 t s d)). Qed.
Lemma lem4564801 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4564802 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term634 _107708 B _54419 t s) = (term635 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564801 B) (@lem4564800 _107708 B _54419 t s)). Qed.
Lemma lem4564803 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term618 _107708 B _54419 t s) = (term636 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564798 _107708 B _54419 t s) (@lem4564802 _107708 B _54419 t s)). Qed.
Lemma lem4564804 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((term617 _107708 B _54419 t s) = (term618 _107708 B _54419 t s)) = ((term616 _107708 B _54419 t s) = (term636 _107708 B _54419 t s)).
Proof. exact (MK_COMB (@lem4564792 _107708 B _54419 t s) (@lem4564803 _107708 B _54419 t s)). Qed.
Lemma lem4564805 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term616 _107708 B _54419 t s) = (term636 _107708 B _54419 t s).
Proof. exact (EQ_MP (@lem4564804 _107708 B _54419 t s) (@lem4564782 _107708 B _54419 t s)). Qed.
Lemma lem4564934 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term586 _107708 B _54419 t s) = (term636 _107708 B _54419 t s).
Proof. exact (TRANS (@lem4564778 _107708 B _54419 t s) (@lem4564805 _107708 B _54419 t s)). Qed.
Lemma lem4564935 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term587 _107708 B _54419 t) = (term637 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4564934 _107708 B _54419 t s)). Qed.
Lemma lem4564936 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4564937 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term588 _107708 B _54419 t) = (term638 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564936 _107708) (@lem4564935 _107708 B _54419 t)). Qed.
Lemma lem4564939 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4564940 {_107708 : Type'} (P : type686 _107708) (Q : type686 _107708) : (term639 _107708 P Q) = (term640 _107708 P Q).
Proof. exact (@lem4564939 (_107708 -> Prop) P Q). Qed.
Lemma lem4564941 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term641 _107708 B _54419 t) = (term642 _107708 B _54419 t).
Proof. exact (@lem4564940 _107708 (term643 _107708 B _54419 t) (term644 _107708 B _54419 t)). Qed.
Lemma lem4564942 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term645 _107708 B _54419 t s) = (term630 _107708 B _54419 t s).
Proof. exact (eq_refl (term645 _107708 B _54419 t s)). Qed.
Lemma lem4564943 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564944 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term646 _107708 B _54419 t s) = (term632 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564943) (@lem4564942 _107708 B _54419 t s)). Qed.
Lemma lem4564945 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term647 _107708 B _54419 t s) = (term635 _107708 B _54419 t s).
Proof. exact (eq_refl (term647 _107708 B _54419 t s)). Qed.
Lemma lem4564946 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term648 _107708 B _54419 t s) = (term636 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4564944 _107708 B _54419 t s) (@lem4564945 _107708 B _54419 t s)). Qed.
Lemma lem4564947 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term649 _107708 B _54419 t) = (term637 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4564946 _107708 B _54419 t s)). Qed.
Lemma lem4564948 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4564949 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term641 _107708 B _54419 t) = (term638 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564948 _107708) (@lem4564947 _107708 B _54419 t)). Qed.
Lemma lem4564950 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4564951 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term650 _107708 B _54419 t) = (term651 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564950) (@lem4564949 _107708 B _54419 t)). Qed.
Lemma lem4564952 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term645 _107708 B _54419 t s) = (term630 _107708 B _54419 t s).
Proof. exact (eq_refl (term645 _107708 B _54419 t s)). Qed.
Lemma lem4564953 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term652 _107708 B _54419 t) = (term643 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4564952 _107708 B _54419 t s)). Qed.
Lemma lem4564954 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4564955 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term653 _107708 B _54419 t) = (term654 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564954 _107708) (@lem4564953 _107708 B _54419 t)). Qed.
Lemma lem4564956 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4564957 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term655 _107708 B _54419 t) = (term656 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564956) (@lem4564955 _107708 B _54419 t)). Qed.
Lemma lem4564958 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term647 _107708 B _54419 t s) = (term635 _107708 B _54419 t s).
Proof. exact (eq_refl (term647 _107708 B _54419 t s)). Qed.
Lemma lem4564959 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term657 _107708 B _54419 t) = (term644 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4564958 _107708 B _54419 t s)). Qed.
Lemma lem4564960 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4564961 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term658 _107708 B _54419 t) = (term659 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564960 _107708) (@lem4564959 _107708 B _54419 t)). Qed.
Lemma lem4564962 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term642 _107708 B _54419 t) = (term660 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4564957 _107708 B _54419 t) (@lem4564961 _107708 B _54419 t)). Qed.
Lemma lem4564963 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((term641 _107708 B _54419 t) = (term642 _107708 B _54419 t)) = ((term638 _107708 B _54419 t) = (term660 _107708 B _54419 t)).
Proof. exact (MK_COMB (@lem4564951 _107708 B _54419 t) (@lem4564962 _107708 B _54419 t)). Qed.
Lemma lem4564964 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term638 _107708 B _54419 t) = (term660 _107708 B _54419 t).
Proof. exact (EQ_MP (@lem4564963 _107708 B _54419 t) (@lem4564941 _107708 B _54419 t)). Qed.
Lemma lem4565101 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term588 _107708 B _54419 t) = (term660 _107708 B _54419 t).
Proof. exact (TRANS (@lem4564937 _107708 B _54419 t) (@lem4564964 _107708 B _54419 t)). Qed.
Lemma lem4565102 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term589 _107708 B _54419) = (term661 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565101 _107708 B _54419 t)). Qed.
Lemma lem4565103 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565104 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term590 _107708 B _54419) = (term662 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565103 B) (@lem4565102 _107708 B _54419)). Qed.
Lemma lem4565106 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4565107 {B : Type'} (P : type686 B) (Q : type686 B) : (term639 B P Q) = (term640 B P Q).
Proof. exact (@lem4565106 (B -> Prop) P Q). Qed.
Lemma lem4565108 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term663 _107708 B _54419) = (term664 _107708 B _54419).
Proof. exact (@lem4565107 B (term665 _107708 B _54419) (term666 _107708 B _54419)). Qed.
Lemma lem4565109 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term667 _107708 B _54419 t) = (term654 _107708 B _54419 t).
Proof. exact (eq_refl (term667 _107708 B _54419 t)). Qed.
Lemma lem4565110 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565111 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term668 _107708 B _54419 t) = (term656 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565110) (@lem4565109 _107708 B _54419 t)). Qed.
Lemma lem4565112 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term669 _107708 B _54419 t) = (term659 _107708 B _54419 t).
Proof. exact (eq_refl (term669 _107708 B _54419 t)). Qed.
Lemma lem4565113 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term670 _107708 B _54419 t) = (term660 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565111 _107708 B _54419 t) (@lem4565112 _107708 B _54419 t)). Qed.
Lemma lem4565114 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term671 _107708 B _54419) = (term661 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565113 _107708 B _54419 t)). Qed.
Lemma lem4565115 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565116 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term663 _107708 B _54419) = (term662 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565115 B) (@lem4565114 _107708 B _54419)). Qed.
Lemma lem4565117 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565118 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term672 _107708 B _54419) = (term673 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565117) (@lem4565116 _107708 B _54419)). Qed.
Lemma lem4565119 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term667 _107708 B _54419 t) = (term654 _107708 B _54419 t).
Proof. exact (eq_refl (term667 _107708 B _54419 t)). Qed.
Lemma lem4565120 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term674 _107708 B _54419) = (term665 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565119 _107708 B _54419 t)). Qed.
Lemma lem4565121 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565122 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term675 _107708 B _54419) = (term676 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565121 B) (@lem4565120 _107708 B _54419)). Qed.
Lemma lem4565123 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565124 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term677 _107708 B _54419) = (term678 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565123) (@lem4565122 _107708 B _54419)). Qed.
Lemma lem4565125 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term669 _107708 B _54419 t) = (term659 _107708 B _54419 t).
Proof. exact (eq_refl (term669 _107708 B _54419 t)). Qed.
Lemma lem4565126 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term679 _107708 B _54419) = (term666 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565125 _107708 B _54419 t)). Qed.
Lemma lem4565127 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565128 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term680 _107708 B _54419) = (term681 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565127 B) (@lem4565126 _107708 B _54419)). Qed.
Lemma lem4565129 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term664 _107708 B _54419) = (term682 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565124 _107708 B _54419) (@lem4565128 _107708 B _54419)). Qed.
Lemma lem4565130 {_107708 B : Type'} (_54419 : type839 _107708 B) : ((term663 _107708 B _54419) = (term664 _107708 B _54419)) = ((term662 _107708 B _54419) = (term682 _107708 B _54419)).
Proof. exact (MK_COMB (@lem4565118 _107708 B _54419) (@lem4565129 _107708 B _54419)). Qed.
Lemma lem4565131 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term662 _107708 B _54419) = (term682 _107708 B _54419).
Proof. exact (EQ_MP (@lem4565130 _107708 B _54419) (@lem4565108 _107708 B _54419)). Qed.
Lemma lem4565276 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term590 _107708 B _54419) = (term682 _107708 B _54419).
Proof. exact (TRANS (@lem4565104 _107708 B _54419) (@lem4565131 _107708 B _54419)). Qed.
Lemma lem4565278 {A : Type'} (P : Prop) (Q : A -> Prop) : (term683 A P Q) = (term684 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4565279 {_107708 B : Type'} (P : Prop) (Q : type572 _107708 B) : (term685 _107708 B P Q) = (term686 _107708 B P Q).
Proof. exact (@lem4565278 (_107708 -> B) P Q). Qed.
Lemma lem4565280 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term687 _107708 B _54419 GEN_PVAR_148 t s d) = (term688 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (@lem4565279 _107708 B (term689 _107708 B _54419 t s d GEN_PVAR_148) (term83 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565281 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term568 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565282 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term690 _107708 B GEN_PVAR_148 t s d) = (term83 _107708 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4565281 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565283 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4565284 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term691 _107708 B GEN_PVAR_148 t s d) = (term84 _107708 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565283 _107708 B) (@lem4565282 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565285 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term574 _107708 B _54419 t s d GEN_PVAR_148) = (term574 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4565286 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term687 _107708 B _54419 GEN_PVAR_148 t s d) = (term575 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565285 _107708 B _54419 t s d GEN_PVAR_148) (@lem4565284 _107708 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565287 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565288 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term692 _107708 B _54419 GEN_PVAR_148 t s d) = (term693 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565287) (@lem4565286 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565289 {_107708 B : Type'} (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term568 _107708 B GEN_PVAR_148 t s d f) = (term82 _107708 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565290 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (GEN_PVAR_148 : _107708 -> B) : (term574 _107708 B _54419 t s d GEN_PVAR_148) = (term574 _107708 B _54419 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4565291 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term694 _107708 B _54419 GEN_PVAR_148 t s d f) = (term695 _107708 B _54419 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4565290 _107708 B _54419 t s d GEN_PVAR_148) (@lem4565289 _107708 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565292 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term696 _107708 B _54419 GEN_PVAR_148 t s d) = (term697 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4565291 _107708 B _54419 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565293 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4565294 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term688 _107708 B _54419 GEN_PVAR_148 t s d) = (term698 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565293 _107708 B) (@lem4565292 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565295 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((term687 _107708 B _54419 GEN_PVAR_148 t s d) = (term688 _107708 B _54419 GEN_PVAR_148 t s d)) = ((term575 _107708 B _54419 GEN_PVAR_148 t s d) = (term698 _107708 B _54419 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4565288 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4565294 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565296 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term575 _107708 B _54419 GEN_PVAR_148 t s d) = (term698 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4565295 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4565280 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565297 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term598 _107708 B _54419 t s d) = (term699 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4565296 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565298 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4565299 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term613 _107708 B _54419 t s d) = (term700 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4565298 _107708 B) (@lem4565297 _107708 B _54419 t s d)). Qed.
Lemma lem4565301 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4565302 {_107708 B : Type'} (P : type523 _107708 B) : (term703 _107708 B P) = (term704 _107708 B P).
Proof. exact (@lem4565301 (_107708 -> B) (_107708 -> B) P). Qed.
Lemma lem4565303 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term705 _107708 B _54419 t s d) = (term706 _107708 B _54419 t s d).
Proof. exact (@lem4565302 _107708 B (term707 _107708 B _54419 t s d)). Qed.
Lemma lem4565304 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term708 _107708 B _54419 t s d GEN_PVAR_148) = (term697 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term708 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4565305 {_107708 B : Type'} (f : _107708 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4565306 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term709 _107708 B _54419 t s d GEN_PVAR_148 f) = (term710 _107708 B _54419 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4565304 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4565305 _107708 B f)). Qed.
Lemma lem4565307 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term710 _107708 B _54419 GEN_PVAR_148 t s d f) = (term695 _107708 B _54419 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term710 _107708 B _54419 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565308 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : _107708 -> B) : (term709 _107708 B _54419 t s d GEN_PVAR_148 f) = (term695 _107708 B _54419 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4565306 _107708 B _54419 GEN_PVAR_148 t s d f) (@lem4565307 _107708 B _54419 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565309 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term711 _107708 B _54419 t s d GEN_PVAR_148) = (term697 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107708 -> B => @lem4565308 _107708 B _54419 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565310 {_107708 B : Type'} : (@ex (_107708 -> B)) = (@ex (_107708 -> B)).
Proof. exact (eq_refl (@ex (_107708 -> B))). Qed.
Lemma lem4565311 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term712 _107708 B _54419 t s d GEN_PVAR_148) = (term698 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565310 _107708 B) (@lem4565309 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565312 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term713 _107708 B _54419 t s d) = (term699 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4565311 _107708 B _54419 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565313 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4565314 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term705 _107708 B _54419 t s d) = (term700 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4565313 _107708 B) (@lem4565312 _107708 B _54419 t s d)). Qed.
Lemma lem4565315 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565316 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term714 _107708 B _54419 t s d) = (term715 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4565315) (@lem4565314 _107708 B _54419 t s d)). Qed.
Lemma lem4565317 {_107708 B : Type'} (_54419 : type839 _107708 B) (GEN_PVAR_148 : _107708 -> B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term708 _107708 B _54419 t s d GEN_PVAR_148) = (term697 _107708 B _54419 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term708 _107708 B _54419 t s d GEN_PVAR_148)). Qed.
Lemma lem4565318 {_107708 B : Type'} (f : type549 _107708 B) (GEN_PVAR_148 : _107708 -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4565319 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) (GEN_PVAR_148 : _107708 -> B) : (term716 _107708 B _54419 t s d f GEN_PVAR_148) = (term717 _107708 B _54419 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4565317 _107708 B _54419 GEN_PVAR_148 t s d) (@lem4565318 _107708 B f GEN_PVAR_148)). Qed.
Lemma lem4565320 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) (GEN_PVAR_148 : _107708 -> B) : (term717 _107708 B _54419 t s d f GEN_PVAR_148) = (term718 _107708 B _54419 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term717 _107708 B _54419 t s d f GEN_PVAR_148)). Qed.
Lemma lem4565321 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) (GEN_PVAR_148 : _107708 -> B) : (term716 _107708 B _54419 t s d f GEN_PVAR_148) = (term718 _107708 B _54419 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4565319 _107708 B _54419 t s d f GEN_PVAR_148) (@lem4565320 _107708 B _54419 t s d f GEN_PVAR_148)). Qed.
Lemma lem4565322 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) : (term719 _107708 B _54419 t s d f) = (term720 _107708 B _54419 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107708 -> B => @lem4565321 _107708 B _54419 t s d f GEN_PVAR_148)). Qed.
Lemma lem4565323 {_107708 B : Type'} : (@all (_107708 -> B)) = (@all (_107708 -> B)).
Proof. exact (eq_refl (@all (_107708 -> B))). Qed.
Lemma lem4565324 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) : (term721 _107708 B _54419 t s d f) = (term722 _107708 B _54419 t s d f).
Proof. exact (MK_COMB (@lem4565323 _107708 B) (@lem4565322 _107708 B _54419 t s d f)). Qed.
Lemma lem4565325 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term723 _107708 B _54419 t s d) = (term724 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun f : type549 _107708 B => @lem4565324 _107708 B _54419 t s d f)). Qed.
Lemma lem4565326 {_107708 B : Type'} : (@ex ((_107708 -> B) -> _107708 -> B)) = (@ex ((_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565327 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term706 _107708 B _54419 t s d) = (term725 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4565326 _107708 B) (@lem4565325 _107708 B _54419 t s d)). Qed.
Lemma lem4565328 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : ((term705 _107708 B _54419 t s d) = (term706 _107708 B _54419 t s d)) = ((term700 _107708 B _54419 t s d) = (term725 _107708 B _54419 t s d)).
Proof. exact (MK_COMB (@lem4565316 _107708 B _54419 t s d) (@lem4565327 _107708 B _54419 t s d)). Qed.
Lemma lem4565329 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term700 _107708 B _54419 t s d) = (term725 _107708 B _54419 t s d).
Proof. exact (EQ_MP (@lem4565328 _107708 B _54419 t s d) (@lem4565303 _107708 B _54419 t s d)). Qed.
Lemma lem4565330 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term613 _107708 B _54419 t s d) = (term725 _107708 B _54419 t s d).
Proof. exact (TRANS (@lem4565299 _107708 B _54419 t s d) (@lem4565329 _107708 B _54419 t s d)). Qed.
Lemma lem4565331 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term620 _107708 B _54419 t s) = (term726 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4565330 _107708 B _54419 t s d)). Qed.
Lemma lem4565332 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565333 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term635 _107708 B _54419 t s) = (term727 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4565332 B) (@lem4565331 _107708 B _54419 t s)). Qed.
Lemma lem4565335 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4565336 {_107708 B : Type'} (P : type1435 _107708 B) : (term728 _107708 B P) = (term729 _107708 B P).
Proof. exact (@lem4565335 B (type549 _107708 B) P). Qed.
Lemma lem4565337 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term730 _107708 B _54419 t s) = (term731 _107708 B _54419 t s).
Proof. exact (@lem4565336 _107708 B (term732 _107708 B _54419 t s)). Qed.
Lemma lem4565338 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term733 _107708 B _54419 t s d) = (term724 _107708 B _54419 t s d).
Proof. exact (eq_refl (term733 _107708 B _54419 t s d)). Qed.
Lemma lem4565339 {_107708 B : Type'} (f : type549 _107708 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4565340 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) : (term734 _107708 B _54419 t s d f) = (term735 _107708 B _54419 t s d f).
Proof. exact (MK_COMB (@lem4565338 _107708 B _54419 t s d) (@lem4565339 _107708 B f)). Qed.
Lemma lem4565341 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) : (term735 _107708 B _54419 t s d f) = (term722 _107708 B _54419 t s d f).
Proof. exact (eq_refl (term735 _107708 B _54419 t s d f)). Qed.
Lemma lem4565342 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) (f : type549 _107708 B) : (term734 _107708 B _54419 t s d f) = (term722 _107708 B _54419 t s d f).
Proof. exact (TRANS (@lem4565340 _107708 B _54419 t s d f) (@lem4565341 _107708 B _54419 t s d f)). Qed.
Lemma lem4565343 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term736 _107708 B _54419 t s d) = (term724 _107708 B _54419 t s d).
Proof. exact (fun_ext (fun f : type549 _107708 B => @lem4565342 _107708 B _54419 t s d f)). Qed.
Lemma lem4565344 {_107708 B : Type'} : (@ex ((_107708 -> B) -> _107708 -> B)) = (@ex ((_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565345 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term737 _107708 B _54419 t s d) = (term725 _107708 B _54419 t s d).
Proof. exact (MK_COMB (@lem4565344 _107708 B) (@lem4565343 _107708 B _54419 t s d)). Qed.
Lemma lem4565346 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term738 _107708 B _54419 t s) = (term726 _107708 B _54419 t s).
Proof. exact (fun_ext (fun d : B => @lem4565345 _107708 B _54419 t s d)). Qed.
Lemma lem4565347 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565348 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term730 _107708 B _54419 t s) = (term727 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4565347 B) (@lem4565346 _107708 B _54419 t s)). Qed.
Lemma lem4565349 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565350 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term739 _107708 B _54419 t s) = (term740 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4565349) (@lem4565348 _107708 B _54419 t s)). Qed.
Lemma lem4565351 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (d : B) : (term733 _107708 B _54419 t s d) = (term724 _107708 B _54419 t s d).
Proof. exact (eq_refl (term733 _107708 B _54419 t s d)). Qed.
Lemma lem4565352 {_107708 B : Type'} (f : type1444 _107708 B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4565353 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) (d : B) : (term741 _107708 B _54419 t s f d) = (term742 _107708 B _54419 t s f d).
Proof. exact (MK_COMB (@lem4565351 _107708 B _54419 t s d) (@lem4565352 _107708 B f d)). Qed.
Lemma lem4565354 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) (d : B) : (term742 _107708 B _54419 t s f d) = (term743 _107708 B _54419 t s f d).
Proof. exact (eq_refl (term742 _107708 B _54419 t s f d)). Qed.
Lemma lem4565355 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) (d : B) : (term741 _107708 B _54419 t s f d) = (term743 _107708 B _54419 t s f d).
Proof. exact (TRANS (@lem4565353 _107708 B _54419 t s f d) (@lem4565354 _107708 B _54419 t s f d)). Qed.
Lemma lem4565356 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) : (term744 _107708 B _54419 t s f) = (term745 _107708 B _54419 t s f).
Proof. exact (fun_ext (fun d : B => @lem4565355 _107708 B _54419 t s f d)). Qed.
Lemma lem4565357 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565358 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) : (term746 _107708 B _54419 t s f) = (term747 _107708 B _54419 t s f).
Proof. exact (MK_COMB (@lem4565357 B) (@lem4565356 _107708 B _54419 t s f)). Qed.
Lemma lem4565359 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term748 _107708 B _54419 t s) = (term749 _107708 B _54419 t s).
Proof. exact (fun_ext (fun f : type1444 _107708 B => @lem4565358 _107708 B _54419 t s f)). Qed.
Lemma lem4565360 {_107708 B : Type'} : (@ex (B -> (_107708 -> B) -> _107708 -> B)) = (@ex (B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565361 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term731 _107708 B _54419 t s) = (term750 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4565360 _107708 B) (@lem4565359 _107708 B _54419 t s)). Qed.
Lemma lem4565362 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : ((term730 _107708 B _54419 t s) = (term731 _107708 B _54419 t s)) = ((term727 _107708 B _54419 t s) = (term750 _107708 B _54419 t s)).
Proof. exact (MK_COMB (@lem4565350 _107708 B _54419 t s) (@lem4565361 _107708 B _54419 t s)). Qed.
Lemma lem4565363 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term727 _107708 B _54419 t s) = (term750 _107708 B _54419 t s).
Proof. exact (EQ_MP (@lem4565362 _107708 B _54419 t s) (@lem4565337 _107708 B _54419 t s)). Qed.
Lemma lem4565364 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term635 _107708 B _54419 t s) = (term750 _107708 B _54419 t s).
Proof. exact (TRANS (@lem4565333 _107708 B _54419 t s) (@lem4565363 _107708 B _54419 t s)). Qed.
Lemma lem4565365 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term644 _107708 B _54419 t) = (term751 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4565364 _107708 B _54419 t s)). Qed.
Lemma lem4565366 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4565367 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term659 _107708 B _54419 t) = (term752 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565366 _107708) (@lem4565365 _107708 B _54419 t)). Qed.
Lemma lem4565369 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4565370 {_107708 B : Type'} (P : type647 _107708 B) : (term753 _107708 B P) = (term754 _107708 B P).
Proof. exact (@lem4565369 (_107708 -> Prop) (type1444 _107708 B) P). Qed.
Lemma lem4565371 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term755 _107708 B _54419 t) = (term756 _107708 B _54419 t).
Proof. exact (@lem4565370 _107708 B (term757 _107708 B _54419 t)). Qed.
Lemma lem4565372 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term758 _107708 B _54419 t s) = (term749 _107708 B _54419 t s).
Proof. exact (eq_refl (term758 _107708 B _54419 t s)). Qed.
Lemma lem4565373 {_107708 B : Type'} (f : type1444 _107708 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4565374 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) : (term759 _107708 B _54419 t s f) = (term760 _107708 B _54419 t s f).
Proof. exact (MK_COMB (@lem4565372 _107708 B _54419 t s) (@lem4565373 _107708 B f)). Qed.
Lemma lem4565375 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) : (term760 _107708 B _54419 t s f) = (term747 _107708 B _54419 t s f).
Proof. exact (eq_refl (term760 _107708 B _54419 t s f)). Qed.
Lemma lem4565376 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) (f : type1444 _107708 B) : (term759 _107708 B _54419 t s f) = (term747 _107708 B _54419 t s f).
Proof. exact (TRANS (@lem4565374 _107708 B _54419 t s f) (@lem4565375 _107708 B _54419 t s f)). Qed.
Lemma lem4565377 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term761 _107708 B _54419 t s) = (term749 _107708 B _54419 t s).
Proof. exact (fun_ext (fun f : type1444 _107708 B => @lem4565376 _107708 B _54419 t s f)). Qed.
Lemma lem4565378 {_107708 B : Type'} : (@ex (B -> (_107708 -> B) -> _107708 -> B)) = (@ex (B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565379 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term762 _107708 B _54419 t s) = (term750 _107708 B _54419 t s).
Proof. exact (MK_COMB (@lem4565378 _107708 B) (@lem4565377 _107708 B _54419 t s)). Qed.
Lemma lem4565380 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term763 _107708 B _54419 t) = (term751 _107708 B _54419 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4565379 _107708 B _54419 t s)). Qed.
Lemma lem4565381 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4565382 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term755 _107708 B _54419 t) = (term752 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565381 _107708) (@lem4565380 _107708 B _54419 t)). Qed.
Lemma lem4565383 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565384 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term764 _107708 B _54419 t) = (term765 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565383) (@lem4565382 _107708 B _54419 t)). Qed.
Lemma lem4565385 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (s : _107708 -> Prop) : (term758 _107708 B _54419 t s) = (term749 _107708 B _54419 t s).
Proof. exact (eq_refl (term758 _107708 B _54419 t s)). Qed.
Lemma lem4565386 {_107708 B : Type'} (f : type673 _107708 B) (s : _107708 -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4565387 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) (s : _107708 -> Prop) : (term766 _107708 B _54419 t f s) = (term767 _107708 B _54419 t f s).
Proof. exact (MK_COMB (@lem4565385 _107708 B _54419 t s) (@lem4565386 _107708 B f s)). Qed.
Lemma lem4565388 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) (s : _107708 -> Prop) : (term767 _107708 B _54419 t f s) = (term768 _107708 B _54419 t f s).
Proof. exact (eq_refl (term767 _107708 B _54419 t f s)). Qed.
Lemma lem4565389 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) (s : _107708 -> Prop) : (term766 _107708 B _54419 t f s) = (term768 _107708 B _54419 t f s).
Proof. exact (TRANS (@lem4565387 _107708 B _54419 t f s) (@lem4565388 _107708 B _54419 t f s)). Qed.
Lemma lem4565390 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) : (term769 _107708 B _54419 t f) = (term770 _107708 B _54419 t f).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4565389 _107708 B _54419 t f s)). Qed.
Lemma lem4565391 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4565392 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) : (term771 _107708 B _54419 t f) = (term772 _107708 B _54419 t f).
Proof. exact (MK_COMB (@lem4565391 _107708) (@lem4565390 _107708 B _54419 t f)). Qed.
Lemma lem4565393 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term773 _107708 B _54419 t) = (term774 _107708 B _54419 t).
Proof. exact (fun_ext (fun f : type673 _107708 B => @lem4565392 _107708 B _54419 t f)). Qed.
Lemma lem4565394 {_107708 B : Type'} : (@ex ((_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)) = (@ex ((_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565395 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term756 _107708 B _54419 t) = (term775 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565394 _107708 B) (@lem4565393 _107708 B _54419 t)). Qed.
Lemma lem4565396 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : ((term755 _107708 B _54419 t) = (term756 _107708 B _54419 t)) = ((term752 _107708 B _54419 t) = (term775 _107708 B _54419 t)).
Proof. exact (MK_COMB (@lem4565384 _107708 B _54419 t) (@lem4565395 _107708 B _54419 t)). Qed.
Lemma lem4565397 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term752 _107708 B _54419 t) = (term775 _107708 B _54419 t).
Proof. exact (EQ_MP (@lem4565396 _107708 B _54419 t) (@lem4565371 _107708 B _54419 t)). Qed.
Lemma lem4565398 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term659 _107708 B _54419 t) = (term775 _107708 B _54419 t).
Proof. exact (TRANS (@lem4565367 _107708 B _54419 t) (@lem4565397 _107708 B _54419 t)). Qed.
Lemma lem4565399 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term666 _107708 B _54419) = (term776 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565398 _107708 B _54419 t)). Qed.
Lemma lem4565400 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565401 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term681 _107708 B _54419) = (term777 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565400 B) (@lem4565399 _107708 B _54419)). Qed.
Lemma lem4565403 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4565404 {_107708 B : Type'} (P : type820 _107708 B) : (term778 _107708 B P) = (term779 _107708 B P).
Proof. exact (@lem4565403 (B -> Prop) (type673 _107708 B) P). Qed.
Lemma lem4565405 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term780 _107708 B _54419) = (term781 _107708 B _54419).
Proof. exact (@lem4565404 _107708 B (term782 _107708 B _54419)). Qed.
Lemma lem4565406 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term783 _107708 B _54419 t) = (term774 _107708 B _54419 t).
Proof. exact (eq_refl (term783 _107708 B _54419 t)). Qed.
Lemma lem4565407 {_107708 B : Type'} (f : type673 _107708 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4565408 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) : (term784 _107708 B _54419 t f) = (term785 _107708 B _54419 t f).
Proof. exact (MK_COMB (@lem4565406 _107708 B _54419 t) (@lem4565407 _107708 B f)). Qed.
Lemma lem4565409 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) : (term785 _107708 B _54419 t f) = (term772 _107708 B _54419 t f).
Proof. exact (eq_refl (term785 _107708 B _54419 t f)). Qed.
Lemma lem4565410 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) (f : type673 _107708 B) : (term784 _107708 B _54419 t f) = (term772 _107708 B _54419 t f).
Proof. exact (TRANS (@lem4565408 _107708 B _54419 t f) (@lem4565409 _107708 B _54419 t f)). Qed.
Lemma lem4565411 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term786 _107708 B _54419 t) = (term774 _107708 B _54419 t).
Proof. exact (fun_ext (fun f : type673 _107708 B => @lem4565410 _107708 B _54419 t f)). Qed.
Lemma lem4565412 {_107708 B : Type'} : (@ex ((_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)) = (@ex ((_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565413 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term787 _107708 B _54419 t) = (term775 _107708 B _54419 t).
Proof. exact (MK_COMB (@lem4565412 _107708 B) (@lem4565411 _107708 B _54419 t)). Qed.
Lemma lem4565414 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term788 _107708 B _54419) = (term776 _107708 B _54419).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565413 _107708 B _54419 t)). Qed.
Lemma lem4565415 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565416 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term780 _107708 B _54419) = (term777 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565415 B) (@lem4565414 _107708 B _54419)). Qed.
Lemma lem4565417 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565418 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term789 _107708 B _54419) = (term790 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565417) (@lem4565416 _107708 B _54419)). Qed.
Lemma lem4565419 {_107708 B : Type'} (_54419 : type839 _107708 B) (t : B -> Prop) : (term783 _107708 B _54419 t) = (term774 _107708 B _54419 t).
Proof. exact (eq_refl (term783 _107708 B _54419 t)). Qed.
Lemma lem4565420 {_107708 B : Type'} (f : type838 _107708 B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4565421 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) (t : B -> Prop) : (term791 _107708 B _54419 f t) = (term792 _107708 B _54419 f t).
Proof. exact (MK_COMB (@lem4565419 _107708 B _54419 t) (@lem4565420 _107708 B f t)). Qed.
Lemma lem4565422 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) (t : B -> Prop) : (term792 _107708 B _54419 f t) = (term793 _107708 B _54419 f t).
Proof. exact (eq_refl (term792 _107708 B _54419 f t)). Qed.
Lemma lem4565423 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) (t : B -> Prop) : (term791 _107708 B _54419 f t) = (term793 _107708 B _54419 f t).
Proof. exact (TRANS (@lem4565421 _107708 B _54419 f t) (@lem4565422 _107708 B _54419 f t)). Qed.
Lemma lem4565424 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) : (term794 _107708 B _54419 f) = (term795 _107708 B _54419 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565423 _107708 B _54419 f t)). Qed.
Lemma lem4565425 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565426 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) : (term796 _107708 B _54419 f) = (term797 _107708 B _54419 f).
Proof. exact (MK_COMB (@lem4565425 B) (@lem4565424 _107708 B _54419 f)). Qed.
Lemma lem4565427 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term798 _107708 B _54419) = (term799 _107708 B _54419).
Proof. exact (fun_ext (fun f : type838 _107708 B => @lem4565426 _107708 B _54419 f)). Qed.
Lemma lem4565428 {_107708 B : Type'} : (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)) = (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565429 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term781 _107708 B _54419) = (term800 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565428 _107708 B) (@lem4565427 _107708 B _54419)). Qed.
Lemma lem4565430 {_107708 B : Type'} (_54419 : type839 _107708 B) : ((term780 _107708 B _54419) = (term781 _107708 B _54419)) = ((term777 _107708 B _54419) = (term800 _107708 B _54419)).
Proof. exact (MK_COMB (@lem4565418 _107708 B _54419) (@lem4565429 _107708 B _54419)). Qed.
Lemma lem4565431 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term777 _107708 B _54419) = (term800 _107708 B _54419).
Proof. exact (EQ_MP (@lem4565430 _107708 B _54419) (@lem4565405 _107708 B _54419)). Qed.
Lemma lem4565432 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term681 _107708 B _54419) = (term800 _107708 B _54419).
Proof. exact (TRANS (@lem4565401 _107708 B _54419) (@lem4565431 _107708 B _54419)). Qed.
Lemma lem4565433 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term678 _107708 B _54419) = (term678 _107708 B _54419).
Proof. exact (eq_refl (term678 _107708 B _54419)). Qed.
Lemma lem4565434 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term682 _107708 B _54419) = (term801 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565433 _107708 B _54419) (@lem4565432 _107708 B _54419)). Qed.
Lemma lem4565436 {A : Type'} (P : Prop) (Q : A -> Prop) : (term802 A P Q) = (term803 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4565437 {_107708 B : Type'} (P : Prop) (Q : type213 _107708 B) : (term804 _107708 B P Q) = (term805 _107708 B P Q).
Proof. exact (@lem4565436 (type838 _107708 B) P Q). Qed.
Lemma lem4565438 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term806 _107708 B _54419) = (term807 _107708 B _54419).
Proof. exact (@lem4565437 _107708 B (term676 _107708 B _54419) (term799 _107708 B _54419)). Qed.
Lemma lem4565439 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) : (term808 _107708 B _54419 f) = (term797 _107708 B _54419 f).
Proof. exact (eq_refl (term808 _107708 B _54419 f)). Qed.
Lemma lem4565440 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term809 _107708 B _54419) = (term799 _107708 B _54419).
Proof. exact (fun_ext (fun f : type838 _107708 B => @lem4565439 _107708 B _54419 f)). Qed.
Lemma lem4565441 {_107708 B : Type'} : (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)) = (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565442 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term810 _107708 B _54419) = (term800 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565441 _107708 B) (@lem4565440 _107708 B _54419)). Qed.
Lemma lem4565443 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term678 _107708 B _54419) = (term678 _107708 B _54419).
Proof. exact (eq_refl (term678 _107708 B _54419)). Qed.
Lemma lem4565444 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term806 _107708 B _54419) = (term801 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565443 _107708 B _54419) (@lem4565442 _107708 B _54419)). Qed.
Lemma lem4565445 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565446 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term811 _107708 B _54419) = (term812 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565445) (@lem4565444 _107708 B _54419)). Qed.
Lemma lem4565447 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) : (term808 _107708 B _54419 f) = (term797 _107708 B _54419 f).
Proof. exact (eq_refl (term808 _107708 B _54419 f)). Qed.
Lemma lem4565448 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term678 _107708 B _54419) = (term678 _107708 B _54419).
Proof. exact (eq_refl (term678 _107708 B _54419)). Qed.
Lemma lem4565449 {_107708 B : Type'} (_54419 : type839 _107708 B) (f : type838 _107708 B) : (term813 _107708 B _54419 f) = (term814 _107708 B _54419 f).
Proof. exact (MK_COMB (@lem4565448 _107708 B _54419) (@lem4565447 _107708 B _54419 f)). Qed.
Lemma lem4565450 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term815 _107708 B _54419) = (term816 _107708 B _54419).
Proof. exact (fun_ext (fun f : type838 _107708 B => @lem4565449 _107708 B _54419 f)). Qed.
Lemma lem4565451 {_107708 B : Type'} : (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)) = (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107708 -> Prop) -> B -> (_107708 -> B) -> _107708 -> B))). Qed.
Lemma lem4565452 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term807 _107708 B _54419) = (term817 _107708 B _54419).
Proof. exact (MK_COMB (@lem4565451 _107708 B) (@lem4565450 _107708 B _54419)). Qed.
Lemma lem4565453 {_107708 B : Type'} (_54419 : type839 _107708 B) : ((term806 _107708 B _54419) = (term807 _107708 B _54419)) = ((term801 _107708 B _54419) = (term817 _107708 B _54419)).
Proof. exact (MK_COMB (@lem4565446 _107708 B _54419) (@lem4565452 _107708 B _54419)). Qed.
Lemma lem4565454 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term801 _107708 B _54419) = (term817 _107708 B _54419).
Proof. exact (EQ_MP (@lem4565453 _107708 B _54419) (@lem4565438 _107708 B _54419)). Qed.
Lemma lem4565455 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term682 _107708 B _54419) = (term817 _107708 B _54419).
Proof. exact (TRANS (@lem4565434 _107708 B _54419) (@lem4565454 _107708 B _54419)). Qed.
Lemma lem4565456 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term590 _107708 B _54419) = (term817 _107708 B _54419).
Proof. exact (TRANS (@lem4565276 _107708 B _54419) (@lem4565455 _107708 B _54419)). Qed.
Lemma lem4565457 {_107708 B : Type'} (_54419 : type839 _107708 B) : (term451 _107708 B _54419) = (term817 _107708 B _54419).
Proof. exact (TRANS (@lem4564616 _107708 B _54419) (@lem4565456 _107708 B _54419)). Qed.
Lemma lem4565458 {_107708 B : Type'} (_54419 : type839 _107708 B) (h1 : term451 _107708 B _54419) : term817 _107708 B _54419.
Proof. exact (EQ_MP (@lem4565457 _107708 B _54419) (@lem4563673 _107708 B _54419 h1)). Qed.
Lemma lem4565462 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term82 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term82 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565463 {_107705 B : Type'} (P : type572 _107705 B) : (term564 _107705 B P) = (term565 _107705 B P).
Proof. exact (@lem18394 (_107705 -> B) P). Qed.
Lemma lem4565464 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term566 _107705 B GEN_PVAR_148 t s d) = (term567 _107705 B GEN_PVAR_148 t s d).
Proof. exact (@lem4565463 _107705 B (term83 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565465 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term568 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565466 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4565468 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term569 _107705 B GEN_PVAR_148 t s d f) = (term570 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4565466) (@lem4565465 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565469 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term571 _107705 B GEN_PVAR_148 t s d) = (term572 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4565468 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565470 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4565471 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term567 _107705 B GEN_PVAR_148 t s d) = (term573 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565470 _107705 B) (@lem4565469 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565472 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term566 _107705 B GEN_PVAR_148 t s d) = (term573 _107705 B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4565464 _107705 B GEN_PVAR_148 t s d) (@lem4565471 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565473 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term83 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4565462 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4565474 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4565475 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term84 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565474 _107705 B) (@lem4565473 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565477 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term574 _107705 B _54418 t s d GEN_PVAR_148) = (term574 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4565478 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term575 _107705 B _54418 GEN_PVAR_148 t s d) = (term575 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565477 _107705 B _54418 t s d GEN_PVAR_148) (@lem4565475 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565480 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term576 _107705 B _54418 t s d GEN_PVAR_148) = (term576 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term576 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4565481 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term577 _107705 B _54418 GEN_PVAR_148 t s d) = (term578 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565480 _107705 B _54418 t s d GEN_PVAR_148) (@lem4565472 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565482 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565483 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term579 _107705 B _54418 GEN_PVAR_148 t s d) = (term580 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565482) (@lem4565481 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565484 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term581 _107705 B _54418 GEN_PVAR_148 t s d) = (term582 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565483 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4565478 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565485 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)) = (term581 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_54418 t s d GEN_PVAR_148) (term84 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4565486 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((_54418 t s d GEN_PVAR_148) = (term84 _107705 B GEN_PVAR_148 t s d)) = (term582 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4565485 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4565484 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565487 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term444 _107705 B _54418 t s d) = (term583 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4565486 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565488 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4565489 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term445 _107705 B _54418 t s d) = (term584 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565488 _107705 B) (@lem4565487 _107705 B _54418 t s d)). Qed.
Lemma lem4565490 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term446 _107705 B _54418 t s) = (term585 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4565489 _107705 B _54418 t s d)). Qed.
Lemma lem4565491 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565492 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term447 _107705 B _54418 t s) = (term586 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565491 B) (@lem4565490 _107705 B _54418 t s)). Qed.
Lemma lem4565493 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term448 _107705 B _54418 t) = (term587 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4565492 _107705 B _54418 t s)). Qed.
Lemma lem4565494 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4565495 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term449 _107705 B _54418 t) = (term588 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565494 _107705) (@lem4565493 _107705 B _54418 t)). Qed.
Lemma lem4565496 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term450 _107705 B _54418) = (term589 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565495 _107705 B _54418 t)). Qed.
Lemma lem4565497 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565498 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term451 _107705 B _54418) = (term590 _107705 B _54418).
Proof. exact (MK_COMB (@lem4565497 B) (@lem4565496 _107705 B _54418)). Qed.
Lemma lem4565512 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4565513 {_107705 B : Type'} (P : type572 _107705 B) (Q : type572 _107705 B) : (term593 _107705 B P Q) = (term594 _107705 B P Q).
Proof. exact (@lem4565512 (_107705 -> B) P Q). Qed.
Lemma lem4565514 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term595 _107705 B _54418 t s d) = (term596 _107705 B _54418 t s d).
Proof. exact (@lem4565513 _107705 B (term597 _107705 B _54418 t s d) (term598 _107705 B _54418 t s d)). Qed.
Lemma lem4565515 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term599 _107705 B _54418 t s d GEN_PVAR_148) = (term578 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term599 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4565516 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565517 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term600 _107705 B _54418 t s d GEN_PVAR_148) = (term580 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565516) (@lem4565515 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565518 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term601 _107705 B _54418 t s d GEN_PVAR_148) = (term575 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term601 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4565519 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term602 _107705 B _54418 t s d GEN_PVAR_148) = (term582 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4565517 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4565518 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565520 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term603 _107705 B _54418 t s d) = (term583 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4565519 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565521 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4565522 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term595 _107705 B _54418 t s d) = (term584 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565521 _107705 B) (@lem4565520 _107705 B _54418 t s d)). Qed.
Lemma lem4565523 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565524 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term604 _107705 B _54418 t s d) = (term605 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565523) (@lem4565522 _107705 B _54418 t s d)). Qed.
Lemma lem4565525 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term599 _107705 B _54418 t s d GEN_PVAR_148) = (term578 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term599 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4565526 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term606 _107705 B _54418 t s d) = (term597 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4565525 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565527 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4565528 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term607 _107705 B _54418 t s d) = (term608 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565527 _107705 B) (@lem4565526 _107705 B _54418 t s d)). Qed.
Lemma lem4565529 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565530 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term609 _107705 B _54418 t s d) = (term610 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565529) (@lem4565528 _107705 B _54418 t s d)). Qed.
Lemma lem4565531 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term601 _107705 B _54418 t s d GEN_PVAR_148) = (term575 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term601 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4565532 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term611 _107705 B _54418 t s d) = (term598 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4565531 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4565533 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4565534 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term612 _107705 B _54418 t s d) = (term613 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565533 _107705 B) (@lem4565532 _107705 B _54418 t s d)). Qed.
Lemma lem4565535 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term596 _107705 B _54418 t s d) = (term614 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565530 _107705 B _54418 t s d) (@lem4565534 _107705 B _54418 t s d)). Qed.
Lemma lem4565536 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((term595 _107705 B _54418 t s d) = (term596 _107705 B _54418 t s d)) = ((term584 _107705 B _54418 t s d) = (term614 _107705 B _54418 t s d)).
Proof. exact (MK_COMB (@lem4565524 _107705 B _54418 t s d) (@lem4565535 _107705 B _54418 t s d)). Qed.
Lemma lem4565537 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term584 _107705 B _54418 t s d) = (term614 _107705 B _54418 t s d).
Proof. exact (EQ_MP (@lem4565536 _107705 B _54418 t s d) (@lem4565514 _107705 B _54418 t s d)). Qed.
Lemma lem4565658 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term585 _107705 B _54418 t s) = (term615 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4565537 _107705 B _54418 t s d)). Qed.
Lemma lem4565659 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565660 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term586 _107705 B _54418 t s) = (term616 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565659 B) (@lem4565658 _107705 B _54418 t s)). Qed.
Lemma lem4565662 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4565663 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term591 B P Q) = (term592 B P Q).
Proof. exact (@lem4565662 B P Q). Qed.
Lemma lem4565664 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term617 _107705 B _54418 t s) = (term618 _107705 B _54418 t s).
Proof. exact (@lem4565663 B (term619 _107705 B _54418 t s) (term620 _107705 B _54418 t s)). Qed.
Lemma lem4565665 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term621 _107705 B _54418 t s d) = (term608 _107705 B _54418 t s d).
Proof. exact (eq_refl (term621 _107705 B _54418 t s d)). Qed.
Lemma lem4565666 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565667 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term622 _107705 B _54418 t s d) = (term610 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565666) (@lem4565665 _107705 B _54418 t s d)). Qed.
Lemma lem4565668 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term623 _107705 B _54418 t s d) = (term613 _107705 B _54418 t s d).
Proof. exact (eq_refl (term623 _107705 B _54418 t s d)). Qed.
Lemma lem4565669 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term624 _107705 B _54418 t s d) = (term614 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4565667 _107705 B _54418 t s d) (@lem4565668 _107705 B _54418 t s d)). Qed.
Lemma lem4565670 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term625 _107705 B _54418 t s) = (term615 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4565669 _107705 B _54418 t s d)). Qed.
Lemma lem4565671 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565672 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term617 _107705 B _54418 t s) = (term616 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565671 B) (@lem4565670 _107705 B _54418 t s)). Qed.
Lemma lem4565673 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565674 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term626 _107705 B _54418 t s) = (term627 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565673) (@lem4565672 _107705 B _54418 t s)). Qed.
Lemma lem4565675 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term621 _107705 B _54418 t s d) = (term608 _107705 B _54418 t s d).
Proof. exact (eq_refl (term621 _107705 B _54418 t s d)). Qed.
Lemma lem4565676 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term628 _107705 B _54418 t s) = (term619 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4565675 _107705 B _54418 t s d)). Qed.
Lemma lem4565677 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565678 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term629 _107705 B _54418 t s) = (term630 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565677 B) (@lem4565676 _107705 B _54418 t s)). Qed.
Lemma lem4565679 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565680 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term631 _107705 B _54418 t s) = (term632 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565679) (@lem4565678 _107705 B _54418 t s)). Qed.
Lemma lem4565681 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term623 _107705 B _54418 t s d) = (term613 _107705 B _54418 t s d).
Proof. exact (eq_refl (term623 _107705 B _54418 t s d)). Qed.
Lemma lem4565682 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term633 _107705 B _54418 t s) = (term620 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4565681 _107705 B _54418 t s d)). Qed.
Lemma lem4565683 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4565684 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term634 _107705 B _54418 t s) = (term635 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565683 B) (@lem4565682 _107705 B _54418 t s)). Qed.
Lemma lem4565685 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term618 _107705 B _54418 t s) = (term636 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565680 _107705 B _54418 t s) (@lem4565684 _107705 B _54418 t s)). Qed.
Lemma lem4565686 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((term617 _107705 B _54418 t s) = (term618 _107705 B _54418 t s)) = ((term616 _107705 B _54418 t s) = (term636 _107705 B _54418 t s)).
Proof. exact (MK_COMB (@lem4565674 _107705 B _54418 t s) (@lem4565685 _107705 B _54418 t s)). Qed.
Lemma lem4565687 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term616 _107705 B _54418 t s) = (term636 _107705 B _54418 t s).
Proof. exact (EQ_MP (@lem4565686 _107705 B _54418 t s) (@lem4565664 _107705 B _54418 t s)). Qed.
Lemma lem4565816 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term586 _107705 B _54418 t s) = (term636 _107705 B _54418 t s).
Proof. exact (TRANS (@lem4565660 _107705 B _54418 t s) (@lem4565687 _107705 B _54418 t s)). Qed.
Lemma lem4565817 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term587 _107705 B _54418 t) = (term637 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4565816 _107705 B _54418 t s)). Qed.
Lemma lem4565818 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4565819 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term588 _107705 B _54418 t) = (term638 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565818 _107705) (@lem4565817 _107705 B _54418 t)). Qed.
Lemma lem4565821 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4565822 {_107705 : Type'} (P : type686 _107705) (Q : type686 _107705) : (term639 _107705 P Q) = (term640 _107705 P Q).
Proof. exact (@lem4565821 (_107705 -> Prop) P Q). Qed.
Lemma lem4565823 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term641 _107705 B _54418 t) = (term642 _107705 B _54418 t).
Proof. exact (@lem4565822 _107705 (term643 _107705 B _54418 t) (term644 _107705 B _54418 t)). Qed.
Lemma lem4565824 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term645 _107705 B _54418 t s) = (term630 _107705 B _54418 t s).
Proof. exact (eq_refl (term645 _107705 B _54418 t s)). Qed.
Lemma lem4565825 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565826 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term646 _107705 B _54418 t s) = (term632 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565825) (@lem4565824 _107705 B _54418 t s)). Qed.
Lemma lem4565827 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term647 _107705 B _54418 t s) = (term635 _107705 B _54418 t s).
Proof. exact (eq_refl (term647 _107705 B _54418 t s)). Qed.
Lemma lem4565828 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term648 _107705 B _54418 t s) = (term636 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4565826 _107705 B _54418 t s) (@lem4565827 _107705 B _54418 t s)). Qed.
Lemma lem4565829 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term649 _107705 B _54418 t) = (term637 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4565828 _107705 B _54418 t s)). Qed.
Lemma lem4565830 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4565831 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term641 _107705 B _54418 t) = (term638 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565830 _107705) (@lem4565829 _107705 B _54418 t)). Qed.
Lemma lem4565832 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4565833 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term650 _107705 B _54418 t) = (term651 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565832) (@lem4565831 _107705 B _54418 t)). Qed.
Lemma lem4565834 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term645 _107705 B _54418 t s) = (term630 _107705 B _54418 t s).
Proof. exact (eq_refl (term645 _107705 B _54418 t s)). Qed.
Lemma lem4565835 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term652 _107705 B _54418 t) = (term643 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4565834 _107705 B _54418 t s)). Qed.
Lemma lem4565836 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4565837 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term653 _107705 B _54418 t) = (term654 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565836 _107705) (@lem4565835 _107705 B _54418 t)). Qed.
Lemma lem4565838 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565839 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term655 _107705 B _54418 t) = (term656 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565838) (@lem4565837 _107705 B _54418 t)). Qed.
Lemma lem4565840 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term647 _107705 B _54418 t s) = (term635 _107705 B _54418 t s).
Proof. exact (eq_refl (term647 _107705 B _54418 t s)). Qed.
Lemma lem4565841 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term657 _107705 B _54418 t) = (term644 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4565840 _107705 B _54418 t s)). Qed.
Lemma lem4565842 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4565843 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term658 _107705 B _54418 t) = (term659 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565842 _107705) (@lem4565841 _107705 B _54418 t)). Qed.
Lemma lem4565844 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term642 _107705 B _54418 t) = (term660 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565839 _107705 B _54418 t) (@lem4565843 _107705 B _54418 t)). Qed.
Lemma lem4565845 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((term641 _107705 B _54418 t) = (term642 _107705 B _54418 t)) = ((term638 _107705 B _54418 t) = (term660 _107705 B _54418 t)).
Proof. exact (MK_COMB (@lem4565833 _107705 B _54418 t) (@lem4565844 _107705 B _54418 t)). Qed.
Lemma lem4565846 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term638 _107705 B _54418 t) = (term660 _107705 B _54418 t).
Proof. exact (EQ_MP (@lem4565845 _107705 B _54418 t) (@lem4565823 _107705 B _54418 t)). Qed.
Lemma lem4565983 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term588 _107705 B _54418 t) = (term660 _107705 B _54418 t).
Proof. exact (TRANS (@lem4565819 _107705 B _54418 t) (@lem4565846 _107705 B _54418 t)). Qed.
Lemma lem4565984 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term589 _107705 B _54418) = (term661 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565983 _107705 B _54418 t)). Qed.
Lemma lem4565985 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565986 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term590 _107705 B _54418) = (term662 _107705 B _54418).
Proof. exact (MK_COMB (@lem4565985 B) (@lem4565984 _107705 B _54418)). Qed.
Lemma lem4565988 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4565989 {B : Type'} (P : type686 B) (Q : type686 B) : (term639 B P Q) = (term640 B P Q).
Proof. exact (@lem4565988 (B -> Prop) P Q). Qed.
Lemma lem4565990 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term663 _107705 B _54418) = (term664 _107705 B _54418).
Proof. exact (@lem4565989 B (term665 _107705 B _54418) (term666 _107705 B _54418)). Qed.
Lemma lem4565991 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term667 _107705 B _54418 t) = (term654 _107705 B _54418 t).
Proof. exact (eq_refl (term667 _107705 B _54418 t)). Qed.
Lemma lem4565992 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4565993 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term668 _107705 B _54418 t) = (term656 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565992) (@lem4565991 _107705 B _54418 t)). Qed.
Lemma lem4565994 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term669 _107705 B _54418 t) = (term659 _107705 B _54418 t).
Proof. exact (eq_refl (term669 _107705 B _54418 t)). Qed.
Lemma lem4565995 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term670 _107705 B _54418 t) = (term660 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4565993 _107705 B _54418 t) (@lem4565994 _107705 B _54418 t)). Qed.
Lemma lem4565996 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term671 _107705 B _54418) = (term661 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4565995 _107705 B _54418 t)). Qed.
Lemma lem4565997 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4565998 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term663 _107705 B _54418) = (term662 _107705 B _54418).
Proof. exact (MK_COMB (@lem4565997 B) (@lem4565996 _107705 B _54418)). Qed.
Lemma lem4565999 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566000 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term672 _107705 B _54418) = (term673 _107705 B _54418).
Proof. exact (MK_COMB (@lem4565999) (@lem4565998 _107705 B _54418)). Qed.
Lemma lem4566001 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term667 _107705 B _54418 t) = (term654 _107705 B _54418 t).
Proof. exact (eq_refl (term667 _107705 B _54418 t)). Qed.
Lemma lem4566002 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term674 _107705 B _54418) = (term665 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4566001 _107705 B _54418 t)). Qed.
Lemma lem4566003 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4566004 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term675 _107705 B _54418) = (term676 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566003 B) (@lem4566002 _107705 B _54418)). Qed.
Lemma lem4566005 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566006 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term677 _107705 B _54418) = (term678 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566005) (@lem4566004 _107705 B _54418)). Qed.
Lemma lem4566007 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term669 _107705 B _54418 t) = (term659 _107705 B _54418 t).
Proof. exact (eq_refl (term669 _107705 B _54418 t)). Qed.
Lemma lem4566008 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term679 _107705 B _54418) = (term666 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4566007 _107705 B _54418 t)). Qed.
Lemma lem4566009 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4566010 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term680 _107705 B _54418) = (term681 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566009 B) (@lem4566008 _107705 B _54418)). Qed.
Lemma lem4566011 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term664 _107705 B _54418) = (term682 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566006 _107705 B _54418) (@lem4566010 _107705 B _54418)). Qed.
Lemma lem4566012 {_107705 B : Type'} (_54418 : type839 _107705 B) : ((term663 _107705 B _54418) = (term664 _107705 B _54418)) = ((term662 _107705 B _54418) = (term682 _107705 B _54418)).
Proof. exact (MK_COMB (@lem4566000 _107705 B _54418) (@lem4566011 _107705 B _54418)). Qed.
Lemma lem4566013 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term662 _107705 B _54418) = (term682 _107705 B _54418).
Proof. exact (EQ_MP (@lem4566012 _107705 B _54418) (@lem4565990 _107705 B _54418)). Qed.
Lemma lem4566158 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term590 _107705 B _54418) = (term682 _107705 B _54418).
Proof. exact (TRANS (@lem4565986 _107705 B _54418) (@lem4566013 _107705 B _54418)). Qed.
Lemma lem4566160 {A : Type'} (P : Prop) (Q : A -> Prop) : (term683 A P Q) = (term684 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4566161 {_107705 B : Type'} (P : Prop) (Q : type572 _107705 B) : (term685 _107705 B P Q) = (term686 _107705 B P Q).
Proof. exact (@lem4566160 (_107705 -> B) P Q). Qed.
Lemma lem4566162 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term687 _107705 B _54418 GEN_PVAR_148 t s d) = (term688 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (@lem4566161 _107705 B (term689 _107705 B _54418 t s d GEN_PVAR_148) (term83 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4566163 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term568 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566164 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term690 _107705 B GEN_PVAR_148 t s d) = (term83 _107705 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4566163 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566165 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4566166 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term691 _107705 B GEN_PVAR_148 t s d) = (term84 _107705 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566165 _107705 B) (@lem4566164 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4566167 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term574 _107705 B _54418 t s d GEN_PVAR_148) = (term574 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4566168 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term687 _107705 B _54418 GEN_PVAR_148 t s d) = (term575 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566167 _107705 B _54418 t s d GEN_PVAR_148) (@lem4566166 _107705 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4566169 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566170 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term692 _107705 B _54418 GEN_PVAR_148 t s d) = (term693 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566169) (@lem4566168 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566171 {_107705 B : Type'} (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term568 _107705 B GEN_PVAR_148 t s d f) = (term82 _107705 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term568 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566172 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (GEN_PVAR_148 : _107705 -> B) : (term574 _107705 B _54418 t s d GEN_PVAR_148) = (term574 _107705 B _54418 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term574 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4566173 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term694 _107705 B _54418 GEN_PVAR_148 t s d f) = (term695 _107705 B _54418 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4566172 _107705 B _54418 t s d GEN_PVAR_148) (@lem4566171 _107705 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566174 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term696 _107705 B _54418 GEN_PVAR_148 t s d) = (term697 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4566173 _107705 B _54418 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566175 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4566176 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term688 _107705 B _54418 GEN_PVAR_148 t s d) = (term698 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566175 _107705 B) (@lem4566174 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566177 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((term687 _107705 B _54418 GEN_PVAR_148 t s d) = (term688 _107705 B _54418 GEN_PVAR_148 t s d)) = ((term575 _107705 B _54418 GEN_PVAR_148 t s d) = (term698 _107705 B _54418 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4566170 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4566176 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566178 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term575 _107705 B _54418 GEN_PVAR_148 t s d) = (term698 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4566177 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4566162 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566179 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term598 _107705 B _54418 t s d) = (term699 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4566178 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566180 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4566181 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term613 _107705 B _54418 t s d) = (term700 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4566180 _107705 B) (@lem4566179 _107705 B _54418 t s d)). Qed.
Lemma lem4566183 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4566184 {_107705 B : Type'} (P : type523 _107705 B) : (term703 _107705 B P) = (term704 _107705 B P).
Proof. exact (@lem4566183 (_107705 -> B) (_107705 -> B) P). Qed.
Lemma lem4566185 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term705 _107705 B _54418 t s d) = (term706 _107705 B _54418 t s d).
Proof. exact (@lem4566184 _107705 B (term707 _107705 B _54418 t s d)). Qed.
Lemma lem4566186 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term708 _107705 B _54418 t s d GEN_PVAR_148) = (term697 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term708 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4566187 {_107705 B : Type'} (f : _107705 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4566188 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term709 _107705 B _54418 t s d GEN_PVAR_148 f) = (term710 _107705 B _54418 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4566186 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4566187 _107705 B f)). Qed.
Lemma lem4566189 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term710 _107705 B _54418 GEN_PVAR_148 t s d f) = (term695 _107705 B _54418 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term710 _107705 B _54418 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566190 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : _107705 -> B) : (term709 _107705 B _54418 t s d GEN_PVAR_148 f) = (term695 _107705 B _54418 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4566188 _107705 B _54418 GEN_PVAR_148 t s d f) (@lem4566189 _107705 B _54418 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566191 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term711 _107705 B _54418 t s d GEN_PVAR_148) = (term697 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107705 -> B => @lem4566190 _107705 B _54418 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566192 {_107705 B : Type'} : (@ex (_107705 -> B)) = (@ex (_107705 -> B)).
Proof. exact (eq_refl (@ex (_107705 -> B))). Qed.
Lemma lem4566193 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term712 _107705 B _54418 t s d GEN_PVAR_148) = (term698 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566192 _107705 B) (@lem4566191 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566194 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term713 _107705 B _54418 t s d) = (term699 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4566193 _107705 B _54418 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566195 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4566196 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term705 _107705 B _54418 t s d) = (term700 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4566195 _107705 B) (@lem4566194 _107705 B _54418 t s d)). Qed.
Lemma lem4566197 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566198 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term714 _107705 B _54418 t s d) = (term715 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4566197) (@lem4566196 _107705 B _54418 t s d)). Qed.
Lemma lem4566199 {_107705 B : Type'} (_54418 : type839 _107705 B) (GEN_PVAR_148 : _107705 -> B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term708 _107705 B _54418 t s d GEN_PVAR_148) = (term697 _107705 B _54418 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term708 _107705 B _54418 t s d GEN_PVAR_148)). Qed.
Lemma lem4566200 {_107705 B : Type'} (f : type549 _107705 B) (GEN_PVAR_148 : _107705 -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4566201 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) (GEN_PVAR_148 : _107705 -> B) : (term716 _107705 B _54418 t s d f GEN_PVAR_148) = (term717 _107705 B _54418 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4566199 _107705 B _54418 GEN_PVAR_148 t s d) (@lem4566200 _107705 B f GEN_PVAR_148)). Qed.
Lemma lem4566202 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) (GEN_PVAR_148 : _107705 -> B) : (term717 _107705 B _54418 t s d f GEN_PVAR_148) = (term718 _107705 B _54418 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term717 _107705 B _54418 t s d f GEN_PVAR_148)). Qed.
Lemma lem4566203 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) (GEN_PVAR_148 : _107705 -> B) : (term716 _107705 B _54418 t s d f GEN_PVAR_148) = (term718 _107705 B _54418 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4566201 _107705 B _54418 t s d f GEN_PVAR_148) (@lem4566202 _107705 B _54418 t s d f GEN_PVAR_148)). Qed.
Lemma lem4566204 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) : (term719 _107705 B _54418 t s d f) = (term720 _107705 B _54418 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107705 -> B => @lem4566203 _107705 B _54418 t s d f GEN_PVAR_148)). Qed.
Lemma lem4566205 {_107705 B : Type'} : (@all (_107705 -> B)) = (@all (_107705 -> B)).
Proof. exact (eq_refl (@all (_107705 -> B))). Qed.
Lemma lem4566206 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) : (term721 _107705 B _54418 t s d f) = (term722 _107705 B _54418 t s d f).
Proof. exact (MK_COMB (@lem4566205 _107705 B) (@lem4566204 _107705 B _54418 t s d f)). Qed.
Lemma lem4566207 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term723 _107705 B _54418 t s d) = (term724 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun f : type549 _107705 B => @lem4566206 _107705 B _54418 t s d f)). Qed.
Lemma lem4566208 {_107705 B : Type'} : (@ex ((_107705 -> B) -> _107705 -> B)) = (@ex ((_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566209 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term706 _107705 B _54418 t s d) = (term725 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4566208 _107705 B) (@lem4566207 _107705 B _54418 t s d)). Qed.
Lemma lem4566210 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : ((term705 _107705 B _54418 t s d) = (term706 _107705 B _54418 t s d)) = ((term700 _107705 B _54418 t s d) = (term725 _107705 B _54418 t s d)).
Proof. exact (MK_COMB (@lem4566198 _107705 B _54418 t s d) (@lem4566209 _107705 B _54418 t s d)). Qed.
Lemma lem4566211 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term700 _107705 B _54418 t s d) = (term725 _107705 B _54418 t s d).
Proof. exact (EQ_MP (@lem4566210 _107705 B _54418 t s d) (@lem4566185 _107705 B _54418 t s d)). Qed.
Lemma lem4566212 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term613 _107705 B _54418 t s d) = (term725 _107705 B _54418 t s d).
Proof. exact (TRANS (@lem4566181 _107705 B _54418 t s d) (@lem4566211 _107705 B _54418 t s d)). Qed.
Lemma lem4566213 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term620 _107705 B _54418 t s) = (term726 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4566212 _107705 B _54418 t s d)). Qed.
Lemma lem4566214 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4566215 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term635 _107705 B _54418 t s) = (term727 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4566214 B) (@lem4566213 _107705 B _54418 t s)). Qed.
Lemma lem4566217 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4566218 {_107705 B : Type'} (P : type1435 _107705 B) : (term728 _107705 B P) = (term729 _107705 B P).
Proof. exact (@lem4566217 B (type549 _107705 B) P). Qed.
Lemma lem4566219 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term730 _107705 B _54418 t s) = (term731 _107705 B _54418 t s).
Proof. exact (@lem4566218 _107705 B (term732 _107705 B _54418 t s)). Qed.
Lemma lem4566220 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term733 _107705 B _54418 t s d) = (term724 _107705 B _54418 t s d).
Proof. exact (eq_refl (term733 _107705 B _54418 t s d)). Qed.
Lemma lem4566221 {_107705 B : Type'} (f : type549 _107705 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4566222 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) : (term734 _107705 B _54418 t s d f) = (term735 _107705 B _54418 t s d f).
Proof. exact (MK_COMB (@lem4566220 _107705 B _54418 t s d) (@lem4566221 _107705 B f)). Qed.
Lemma lem4566223 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) : (term735 _107705 B _54418 t s d f) = (term722 _107705 B _54418 t s d f).
Proof. exact (eq_refl (term735 _107705 B _54418 t s d f)). Qed.
Lemma lem4566224 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) (f : type549 _107705 B) : (term734 _107705 B _54418 t s d f) = (term722 _107705 B _54418 t s d f).
Proof. exact (TRANS (@lem4566222 _107705 B _54418 t s d f) (@lem4566223 _107705 B _54418 t s d f)). Qed.
Lemma lem4566225 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term736 _107705 B _54418 t s d) = (term724 _107705 B _54418 t s d).
Proof. exact (fun_ext (fun f : type549 _107705 B => @lem4566224 _107705 B _54418 t s d f)). Qed.
Lemma lem4566226 {_107705 B : Type'} : (@ex ((_107705 -> B) -> _107705 -> B)) = (@ex ((_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566227 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term737 _107705 B _54418 t s d) = (term725 _107705 B _54418 t s d).
Proof. exact (MK_COMB (@lem4566226 _107705 B) (@lem4566225 _107705 B _54418 t s d)). Qed.
Lemma lem4566228 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term738 _107705 B _54418 t s) = (term726 _107705 B _54418 t s).
Proof. exact (fun_ext (fun d : B => @lem4566227 _107705 B _54418 t s d)). Qed.
Lemma lem4566229 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4566230 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term730 _107705 B _54418 t s) = (term727 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4566229 B) (@lem4566228 _107705 B _54418 t s)). Qed.
Lemma lem4566231 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566232 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term739 _107705 B _54418 t s) = (term740 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4566231) (@lem4566230 _107705 B _54418 t s)). Qed.
Lemma lem4566233 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (d : B) : (term733 _107705 B _54418 t s d) = (term724 _107705 B _54418 t s d).
Proof. exact (eq_refl (term733 _107705 B _54418 t s d)). Qed.
Lemma lem4566234 {_107705 B : Type'} (f : type1444 _107705 B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4566235 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) (d : B) : (term741 _107705 B _54418 t s f d) = (term742 _107705 B _54418 t s f d).
Proof. exact (MK_COMB (@lem4566233 _107705 B _54418 t s d) (@lem4566234 _107705 B f d)). Qed.
Lemma lem4566236 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) (d : B) : (term742 _107705 B _54418 t s f d) = (term743 _107705 B _54418 t s f d).
Proof. exact (eq_refl (term742 _107705 B _54418 t s f d)). Qed.
Lemma lem4566237 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) (d : B) : (term741 _107705 B _54418 t s f d) = (term743 _107705 B _54418 t s f d).
Proof. exact (TRANS (@lem4566235 _107705 B _54418 t s f d) (@lem4566236 _107705 B _54418 t s f d)). Qed.
Lemma lem4566238 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) : (term744 _107705 B _54418 t s f) = (term745 _107705 B _54418 t s f).
Proof. exact (fun_ext (fun d : B => @lem4566237 _107705 B _54418 t s f d)). Qed.
Lemma lem4566239 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4566240 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) : (term746 _107705 B _54418 t s f) = (term747 _107705 B _54418 t s f).
Proof. exact (MK_COMB (@lem4566239 B) (@lem4566238 _107705 B _54418 t s f)). Qed.
Lemma lem4566241 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term748 _107705 B _54418 t s) = (term749 _107705 B _54418 t s).
Proof. exact (fun_ext (fun f : type1444 _107705 B => @lem4566240 _107705 B _54418 t s f)). Qed.
Lemma lem4566242 {_107705 B : Type'} : (@ex (B -> (_107705 -> B) -> _107705 -> B)) = (@ex (B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566243 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term731 _107705 B _54418 t s) = (term750 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4566242 _107705 B) (@lem4566241 _107705 B _54418 t s)). Qed.
Lemma lem4566244 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : ((term730 _107705 B _54418 t s) = (term731 _107705 B _54418 t s)) = ((term727 _107705 B _54418 t s) = (term750 _107705 B _54418 t s)).
Proof. exact (MK_COMB (@lem4566232 _107705 B _54418 t s) (@lem4566243 _107705 B _54418 t s)). Qed.
Lemma lem4566245 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term727 _107705 B _54418 t s) = (term750 _107705 B _54418 t s).
Proof. exact (EQ_MP (@lem4566244 _107705 B _54418 t s) (@lem4566219 _107705 B _54418 t s)). Qed.
Lemma lem4566246 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term635 _107705 B _54418 t s) = (term750 _107705 B _54418 t s).
Proof. exact (TRANS (@lem4566215 _107705 B _54418 t s) (@lem4566245 _107705 B _54418 t s)). Qed.
Lemma lem4566247 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term644 _107705 B _54418 t) = (term751 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4566246 _107705 B _54418 t s)). Qed.
Lemma lem4566248 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4566249 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term659 _107705 B _54418 t) = (term752 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4566248 _107705) (@lem4566247 _107705 B _54418 t)). Qed.
Lemma lem4566251 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4566252 {_107705 B : Type'} (P : type647 _107705 B) : (term753 _107705 B P) = (term754 _107705 B P).
Proof. exact (@lem4566251 (_107705 -> Prop) (type1444 _107705 B) P). Qed.
Lemma lem4566253 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term755 _107705 B _54418 t) = (term756 _107705 B _54418 t).
Proof. exact (@lem4566252 _107705 B (term757 _107705 B _54418 t)). Qed.
Lemma lem4566254 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term758 _107705 B _54418 t s) = (term749 _107705 B _54418 t s).
Proof. exact (eq_refl (term758 _107705 B _54418 t s)). Qed.
Lemma lem4566255 {_107705 B : Type'} (f : type1444 _107705 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4566256 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) : (term759 _107705 B _54418 t s f) = (term760 _107705 B _54418 t s f).
Proof. exact (MK_COMB (@lem4566254 _107705 B _54418 t s) (@lem4566255 _107705 B f)). Qed.
Lemma lem4566257 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) : (term760 _107705 B _54418 t s f) = (term747 _107705 B _54418 t s f).
Proof. exact (eq_refl (term760 _107705 B _54418 t s f)). Qed.
Lemma lem4566258 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) (f : type1444 _107705 B) : (term759 _107705 B _54418 t s f) = (term747 _107705 B _54418 t s f).
Proof. exact (TRANS (@lem4566256 _107705 B _54418 t s f) (@lem4566257 _107705 B _54418 t s f)). Qed.
Lemma lem4566259 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term761 _107705 B _54418 t s) = (term749 _107705 B _54418 t s).
Proof. exact (fun_ext (fun f : type1444 _107705 B => @lem4566258 _107705 B _54418 t s f)). Qed.
Lemma lem4566260 {_107705 B : Type'} : (@ex (B -> (_107705 -> B) -> _107705 -> B)) = (@ex (B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566261 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term762 _107705 B _54418 t s) = (term750 _107705 B _54418 t s).
Proof. exact (MK_COMB (@lem4566260 _107705 B) (@lem4566259 _107705 B _54418 t s)). Qed.
Lemma lem4566262 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term763 _107705 B _54418 t) = (term751 _107705 B _54418 t).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4566261 _107705 B _54418 t s)). Qed.
Lemma lem4566263 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4566264 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term755 _107705 B _54418 t) = (term752 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4566263 _107705) (@lem4566262 _107705 B _54418 t)). Qed.
Lemma lem4566265 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566266 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term764 _107705 B _54418 t) = (term765 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4566265) (@lem4566264 _107705 B _54418 t)). Qed.
Lemma lem4566267 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (s : _107705 -> Prop) : (term758 _107705 B _54418 t s) = (term749 _107705 B _54418 t s).
Proof. exact (eq_refl (term758 _107705 B _54418 t s)). Qed.
Lemma lem4566268 {_107705 B : Type'} (f : type673 _107705 B) (s : _107705 -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4566269 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) (s : _107705 -> Prop) : (term766 _107705 B _54418 t f s) = (term767 _107705 B _54418 t f s).
Proof. exact (MK_COMB (@lem4566267 _107705 B _54418 t s) (@lem4566268 _107705 B f s)). Qed.
Lemma lem4566270 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) (s : _107705 -> Prop) : (term767 _107705 B _54418 t f s) = (term768 _107705 B _54418 t f s).
Proof. exact (eq_refl (term767 _107705 B _54418 t f s)). Qed.
Lemma lem4566271 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) (s : _107705 -> Prop) : (term766 _107705 B _54418 t f s) = (term768 _107705 B _54418 t f s).
Proof. exact (TRANS (@lem4566269 _107705 B _54418 t f s) (@lem4566270 _107705 B _54418 t f s)). Qed.
Lemma lem4566272 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) : (term769 _107705 B _54418 t f) = (term770 _107705 B _54418 t f).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4566271 _107705 B _54418 t f s)). Qed.
Lemma lem4566273 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4566274 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) : (term771 _107705 B _54418 t f) = (term772 _107705 B _54418 t f).
Proof. exact (MK_COMB (@lem4566273 _107705) (@lem4566272 _107705 B _54418 t f)). Qed.
Lemma lem4566275 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term773 _107705 B _54418 t) = (term774 _107705 B _54418 t).
Proof. exact (fun_ext (fun f : type673 _107705 B => @lem4566274 _107705 B _54418 t f)). Qed.
Lemma lem4566276 {_107705 B : Type'} : (@ex ((_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)) = (@ex ((_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566277 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term756 _107705 B _54418 t) = (term775 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4566276 _107705 B) (@lem4566275 _107705 B _54418 t)). Qed.
Lemma lem4566278 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : ((term755 _107705 B _54418 t) = (term756 _107705 B _54418 t)) = ((term752 _107705 B _54418 t) = (term775 _107705 B _54418 t)).
Proof. exact (MK_COMB (@lem4566266 _107705 B _54418 t) (@lem4566277 _107705 B _54418 t)). Qed.
Lemma lem4566279 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term752 _107705 B _54418 t) = (term775 _107705 B _54418 t).
Proof. exact (EQ_MP (@lem4566278 _107705 B _54418 t) (@lem4566253 _107705 B _54418 t)). Qed.
Lemma lem4566280 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term659 _107705 B _54418 t) = (term775 _107705 B _54418 t).
Proof. exact (TRANS (@lem4566249 _107705 B _54418 t) (@lem4566279 _107705 B _54418 t)). Qed.
Lemma lem4566281 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term666 _107705 B _54418) = (term776 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4566280 _107705 B _54418 t)). Qed.
Lemma lem4566282 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4566283 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term681 _107705 B _54418) = (term777 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566282 B) (@lem4566281 _107705 B _54418)). Qed.
Lemma lem4566285 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4566286 {_107705 B : Type'} (P : type820 _107705 B) : (term778 _107705 B P) = (term779 _107705 B P).
Proof. exact (@lem4566285 (B -> Prop) (type673 _107705 B) P). Qed.
Lemma lem4566287 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term780 _107705 B _54418) = (term781 _107705 B _54418).
Proof. exact (@lem4566286 _107705 B (term782 _107705 B _54418)). Qed.
Lemma lem4566288 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term783 _107705 B _54418 t) = (term774 _107705 B _54418 t).
Proof. exact (eq_refl (term783 _107705 B _54418 t)). Qed.
Lemma lem4566289 {_107705 B : Type'} (f : type673 _107705 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4566290 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) : (term784 _107705 B _54418 t f) = (term785 _107705 B _54418 t f).
Proof. exact (MK_COMB (@lem4566288 _107705 B _54418 t) (@lem4566289 _107705 B f)). Qed.
Lemma lem4566291 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) : (term785 _107705 B _54418 t f) = (term772 _107705 B _54418 t f).
Proof. exact (eq_refl (term785 _107705 B _54418 t f)). Qed.
Lemma lem4566292 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) (f : type673 _107705 B) : (term784 _107705 B _54418 t f) = (term772 _107705 B _54418 t f).
Proof. exact (TRANS (@lem4566290 _107705 B _54418 t f) (@lem4566291 _107705 B _54418 t f)). Qed.
Lemma lem4566293 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term786 _107705 B _54418 t) = (term774 _107705 B _54418 t).
Proof. exact (fun_ext (fun f : type673 _107705 B => @lem4566292 _107705 B _54418 t f)). Qed.
Lemma lem4566294 {_107705 B : Type'} : (@ex ((_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)) = (@ex ((_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566295 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term787 _107705 B _54418 t) = (term775 _107705 B _54418 t).
Proof. exact (MK_COMB (@lem4566294 _107705 B) (@lem4566293 _107705 B _54418 t)). Qed.
Lemma lem4566296 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term788 _107705 B _54418) = (term776 _107705 B _54418).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4566295 _107705 B _54418 t)). Qed.
Lemma lem4566297 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4566298 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term780 _107705 B _54418) = (term777 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566297 B) (@lem4566296 _107705 B _54418)). Qed.
Lemma lem4566299 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566300 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term789 _107705 B _54418) = (term790 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566299) (@lem4566298 _107705 B _54418)). Qed.
Lemma lem4566301 {_107705 B : Type'} (_54418 : type839 _107705 B) (t : B -> Prop) : (term783 _107705 B _54418 t) = (term774 _107705 B _54418 t).
Proof. exact (eq_refl (term783 _107705 B _54418 t)). Qed.
Lemma lem4566302 {_107705 B : Type'} (f : type838 _107705 B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4566303 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) (t : B -> Prop) : (term791 _107705 B _54418 f t) = (term792 _107705 B _54418 f t).
Proof. exact (MK_COMB (@lem4566301 _107705 B _54418 t) (@lem4566302 _107705 B f t)). Qed.
Lemma lem4566304 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) (t : B -> Prop) : (term792 _107705 B _54418 f t) = (term793 _107705 B _54418 f t).
Proof. exact (eq_refl (term792 _107705 B _54418 f t)). Qed.
Lemma lem4566305 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) (t : B -> Prop) : (term791 _107705 B _54418 f t) = (term793 _107705 B _54418 f t).
Proof. exact (TRANS (@lem4566303 _107705 B _54418 f t) (@lem4566304 _107705 B _54418 f t)). Qed.
Lemma lem4566306 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) : (term794 _107705 B _54418 f) = (term795 _107705 B _54418 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4566305 _107705 B _54418 f t)). Qed.
Lemma lem4566307 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4566308 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) : (term796 _107705 B _54418 f) = (term797 _107705 B _54418 f).
Proof. exact (MK_COMB (@lem4566307 B) (@lem4566306 _107705 B _54418 f)). Qed.
Lemma lem4566309 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term798 _107705 B _54418) = (term799 _107705 B _54418).
Proof. exact (fun_ext (fun f : type838 _107705 B => @lem4566308 _107705 B _54418 f)). Qed.
Lemma lem4566310 {_107705 B : Type'} : (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)) = (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566311 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term781 _107705 B _54418) = (term800 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566310 _107705 B) (@lem4566309 _107705 B _54418)). Qed.
Lemma lem4566312 {_107705 B : Type'} (_54418 : type839 _107705 B) : ((term780 _107705 B _54418) = (term781 _107705 B _54418)) = ((term777 _107705 B _54418) = (term800 _107705 B _54418)).
Proof. exact (MK_COMB (@lem4566300 _107705 B _54418) (@lem4566311 _107705 B _54418)). Qed.
Lemma lem4566313 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term777 _107705 B _54418) = (term800 _107705 B _54418).
Proof. exact (EQ_MP (@lem4566312 _107705 B _54418) (@lem4566287 _107705 B _54418)). Qed.
Lemma lem4566314 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term681 _107705 B _54418) = (term800 _107705 B _54418).
Proof. exact (TRANS (@lem4566283 _107705 B _54418) (@lem4566313 _107705 B _54418)). Qed.
Lemma lem4566315 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term678 _107705 B _54418) = (term678 _107705 B _54418).
Proof. exact (eq_refl (term678 _107705 B _54418)). Qed.
Lemma lem4566316 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term682 _107705 B _54418) = (term801 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566315 _107705 B _54418) (@lem4566314 _107705 B _54418)). Qed.
Lemma lem4566318 {A : Type'} (P : Prop) (Q : A -> Prop) : (term802 A P Q) = (term803 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4566319 {_107705 B : Type'} (P : Prop) (Q : type213 _107705 B) : (term804 _107705 B P Q) = (term805 _107705 B P Q).
Proof. exact (@lem4566318 (type838 _107705 B) P Q). Qed.
Lemma lem4566320 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term806 _107705 B _54418) = (term807 _107705 B _54418).
Proof. exact (@lem4566319 _107705 B (term676 _107705 B _54418) (term799 _107705 B _54418)). Qed.
Lemma lem4566321 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) : (term808 _107705 B _54418 f) = (term797 _107705 B _54418 f).
Proof. exact (eq_refl (term808 _107705 B _54418 f)). Qed.
Lemma lem4566322 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term809 _107705 B _54418) = (term799 _107705 B _54418).
Proof. exact (fun_ext (fun f : type838 _107705 B => @lem4566321 _107705 B _54418 f)). Qed.
Lemma lem4566323 {_107705 B : Type'} : (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)) = (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566324 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term810 _107705 B _54418) = (term800 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566323 _107705 B) (@lem4566322 _107705 B _54418)). Qed.
Lemma lem4566325 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term678 _107705 B _54418) = (term678 _107705 B _54418).
Proof. exact (eq_refl (term678 _107705 B _54418)). Qed.
Lemma lem4566326 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term806 _107705 B _54418) = (term801 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566325 _107705 B _54418) (@lem4566324 _107705 B _54418)). Qed.
Lemma lem4566327 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566328 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term811 _107705 B _54418) = (term812 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566327) (@lem4566326 _107705 B _54418)). Qed.
Lemma lem4566329 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) : (term808 _107705 B _54418 f) = (term797 _107705 B _54418 f).
Proof. exact (eq_refl (term808 _107705 B _54418 f)). Qed.
Lemma lem4566330 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term678 _107705 B _54418) = (term678 _107705 B _54418).
Proof. exact (eq_refl (term678 _107705 B _54418)). Qed.
Lemma lem4566331 {_107705 B : Type'} (_54418 : type839 _107705 B) (f : type838 _107705 B) : (term813 _107705 B _54418 f) = (term814 _107705 B _54418 f).
Proof. exact (MK_COMB (@lem4566330 _107705 B _54418) (@lem4566329 _107705 B _54418 f)). Qed.
Lemma lem4566332 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term815 _107705 B _54418) = (term816 _107705 B _54418).
Proof. exact (fun_ext (fun f : type838 _107705 B => @lem4566331 _107705 B _54418 f)). Qed.
Lemma lem4566333 {_107705 B : Type'} : (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)) = (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107705 -> Prop) -> B -> (_107705 -> B) -> _107705 -> B))). Qed.
Lemma lem4566334 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term807 _107705 B _54418) = (term817 _107705 B _54418).
Proof. exact (MK_COMB (@lem4566333 _107705 B) (@lem4566332 _107705 B _54418)). Qed.
Lemma lem4566335 {_107705 B : Type'} (_54418 : type839 _107705 B) : ((term806 _107705 B _54418) = (term807 _107705 B _54418)) = ((term801 _107705 B _54418) = (term817 _107705 B _54418)).
Proof. exact (MK_COMB (@lem4566328 _107705 B _54418) (@lem4566334 _107705 B _54418)). Qed.
Lemma lem4566336 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term801 _107705 B _54418) = (term817 _107705 B _54418).
Proof. exact (EQ_MP (@lem4566335 _107705 B _54418) (@lem4566320 _107705 B _54418)). Qed.
Lemma lem4566337 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term682 _107705 B _54418) = (term817 _107705 B _54418).
Proof. exact (TRANS (@lem4566316 _107705 B _54418) (@lem4566336 _107705 B _54418)). Qed.
Lemma lem4566338 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term590 _107705 B _54418) = (term817 _107705 B _54418).
Proof. exact (TRANS (@lem4566158 _107705 B _54418) (@lem4566337 _107705 B _54418)). Qed.
Lemma lem4566339 {_107705 B : Type'} (_54418 : type839 _107705 B) : (term451 _107705 B _54418) = (term817 _107705 B _54418).
Proof. exact (TRANS (@lem4565498 _107705 B _54418) (@lem4566338 _107705 B _54418)). Qed.
Lemma lem4566340 {_107705 B : Type'} (_54418 : type839 _107705 B) (h1 : term451 _107705 B _54418) : term817 _107705 B _54418.
Proof. exact (EQ_MP (@lem4566339 _107705 B _54418) (@lem4563674 _107705 B _54418 h1)). Qed.
Lemma lem4566344 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term109 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term109 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566345 {_107708 A : Type'} (P : type805 _107708 A) : (term818 _107708 A P) = (term819 _107708 A P).
Proof. exact (@lem18394 (A -> _107708) P). Qed.
Lemma lem4566346 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term820 _107708 A GEN_PVAR_148 t s d) = (term821 _107708 A GEN_PVAR_148 t s d).
Proof. exact (@lem4566345 _107708 A (term110 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566347 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term822 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term822 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566348 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4566350 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term823 _107708 A GEN_PVAR_148 t s d f) = (term824 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4566348) (@lem4566347 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566351 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term825 _107708 A GEN_PVAR_148 t s d) = (term826 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4566350 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566352 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4566353 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term821 _107708 A GEN_PVAR_148 t s d) = (term827 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566352 _107708 A) (@lem4566351 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566354 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term820 _107708 A GEN_PVAR_148 t s d) = (term827 _107708 A GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4566346 _107708 A GEN_PVAR_148 t s d) (@lem4566353 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566355 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term110 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4566344 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4566356 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4566357 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term111 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566356 _107708 A) (@lem4566355 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566359 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term828 _107708 A _54417 t s d GEN_PVAR_148) = (term828 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term828 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4566360 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term829 _107708 A _54417 GEN_PVAR_148 t s d) = (term829 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566359 _107708 A _54417 t s d GEN_PVAR_148) (@lem4566357 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566362 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term830 _107708 A _54417 t s d GEN_PVAR_148) = (term830 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term830 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4566363 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term831 _107708 A _54417 GEN_PVAR_148 t s d) = (term832 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566362 _107708 A _54417 t s d GEN_PVAR_148) (@lem4566354 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566364 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566365 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term833 _107708 A _54417 GEN_PVAR_148 t s d) = (term834 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566364) (@lem4566363 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566366 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term835 _107708 A _54417 GEN_PVAR_148 t s d) = (term836 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566365 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4566360 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566367 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = (term835 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_54417 t s d GEN_PVAR_148) (term111 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4566368 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((_54417 t s d GEN_PVAR_148) = (term111 _107708 A GEN_PVAR_148 t s d)) = (term836 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4566367 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4566366 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566369 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term241 _107708 A _54417 t s d) = (term837 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4566368 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566370 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4566371 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term242 _107708 A _54417 t s d) = (term838 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566370 _107708 A) (@lem4566369 _107708 A _54417 t s d)). Qed.
Lemma lem4566372 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term243 _107708 A _54417 t s) = (term839 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4566371 _107708 A _54417 t s d)). Qed.
Lemma lem4566373 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4566374 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term244 _107708 A _54417 t s) = (term840 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566373 _107708) (@lem4566372 _107708 A _54417 t s)). Qed.
Lemma lem4566375 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term245 _107708 A _54417 t) = (term841 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4566374 _107708 A _54417 t s)). Qed.
Lemma lem4566376 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4566377 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term246 _107708 A _54417 t) = (term842 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566376 A) (@lem4566375 _107708 A _54417 t)). Qed.
Lemma lem4566378 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term247 _107708 A _54417) = (term843 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4566377 _107708 A _54417 t)). Qed.
Lemma lem4566379 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4566380 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term248 _107708 A _54417) = (term844 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566379 _107708) (@lem4566378 _107708 A _54417)). Qed.
Lemma lem4566394 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4566395 {_107708 A : Type'} (P : type805 _107708 A) (Q : type805 _107708 A) : (term845 _107708 A P Q) = (term846 _107708 A P Q).
Proof. exact (@lem4566394 (A -> _107708) P Q). Qed.
Lemma lem4566396 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term847 _107708 A _54417 t s d) = (term848 _107708 A _54417 t s d).
Proof. exact (@lem4566395 _107708 A (term849 _107708 A _54417 t s d) (term850 _107708 A _54417 t s d)). Qed.
Lemma lem4566397 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term851 _107708 A _54417 t s d GEN_PVAR_148) = (term832 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term851 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4566398 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566399 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term852 _107708 A _54417 t s d GEN_PVAR_148) = (term834 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566398) (@lem4566397 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566400 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term853 _107708 A _54417 t s d GEN_PVAR_148) = (term829 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term853 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4566401 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term854 _107708 A _54417 t s d GEN_PVAR_148) = (term836 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4566399 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4566400 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566402 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term855 _107708 A _54417 t s d) = (term837 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4566401 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566403 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4566404 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term847 _107708 A _54417 t s d) = (term838 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566403 _107708 A) (@lem4566402 _107708 A _54417 t s d)). Qed.
Lemma lem4566405 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566406 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term856 _107708 A _54417 t s d) = (term857 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566405) (@lem4566404 _107708 A _54417 t s d)). Qed.
Lemma lem4566407 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term851 _107708 A _54417 t s d GEN_PVAR_148) = (term832 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term851 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4566408 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term858 _107708 A _54417 t s d) = (term849 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4566407 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566409 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4566410 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term859 _107708 A _54417 t s d) = (term860 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566409 _107708 A) (@lem4566408 _107708 A _54417 t s d)). Qed.
Lemma lem4566411 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566412 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term861 _107708 A _54417 t s d) = (term862 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566411) (@lem4566410 _107708 A _54417 t s d)). Qed.
Lemma lem4566413 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term853 _107708 A _54417 t s d GEN_PVAR_148) = (term829 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term853 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4566414 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term863 _107708 A _54417 t s d) = (term850 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4566413 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4566415 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4566416 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term864 _107708 A _54417 t s d) = (term865 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566415 _107708 A) (@lem4566414 _107708 A _54417 t s d)). Qed.
Lemma lem4566417 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term848 _107708 A _54417 t s d) = (term866 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566412 _107708 A _54417 t s d) (@lem4566416 _107708 A _54417 t s d)). Qed.
Lemma lem4566418 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((term847 _107708 A _54417 t s d) = (term848 _107708 A _54417 t s d)) = ((term838 _107708 A _54417 t s d) = (term866 _107708 A _54417 t s d)).
Proof. exact (MK_COMB (@lem4566406 _107708 A _54417 t s d) (@lem4566417 _107708 A _54417 t s d)). Qed.
Lemma lem4566419 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term838 _107708 A _54417 t s d) = (term866 _107708 A _54417 t s d).
Proof. exact (EQ_MP (@lem4566418 _107708 A _54417 t s d) (@lem4566396 _107708 A _54417 t s d)). Qed.
Lemma lem4566540 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term839 _107708 A _54417 t s) = (term867 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4566419 _107708 A _54417 t s d)). Qed.
Lemma lem4566541 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4566542 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term840 _107708 A _54417 t s) = (term868 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566541 _107708) (@lem4566540 _107708 A _54417 t s)). Qed.
Lemma lem4566544 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4566545 {_107708 : Type'} (P : _107708 -> Prop) (Q : _107708 -> Prop) : (term591 _107708 P Q) = (term592 _107708 P Q).
Proof. exact (@lem4566544 _107708 P Q). Qed.
Lemma lem4566546 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term869 _107708 A _54417 t s) = (term870 _107708 A _54417 t s).
Proof. exact (@lem4566545 _107708 (term871 _107708 A _54417 t s) (term872 _107708 A _54417 t s)). Qed.
Lemma lem4566547 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term873 _107708 A _54417 t s d) = (term860 _107708 A _54417 t s d).
Proof. exact (eq_refl (term873 _107708 A _54417 t s d)). Qed.
Lemma lem4566548 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566549 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term874 _107708 A _54417 t s d) = (term862 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566548) (@lem4566547 _107708 A _54417 t s d)). Qed.
Lemma lem4566550 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term875 _107708 A _54417 t s d) = (term865 _107708 A _54417 t s d).
Proof. exact (eq_refl (term875 _107708 A _54417 t s d)). Qed.
Lemma lem4566551 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term876 _107708 A _54417 t s d) = (term866 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4566549 _107708 A _54417 t s d) (@lem4566550 _107708 A _54417 t s d)). Qed.
Lemma lem4566552 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term877 _107708 A _54417 t s) = (term867 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4566551 _107708 A _54417 t s d)). Qed.
Lemma lem4566553 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4566554 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term869 _107708 A _54417 t s) = (term868 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566553 _107708) (@lem4566552 _107708 A _54417 t s)). Qed.
Lemma lem4566555 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566556 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term878 _107708 A _54417 t s) = (term879 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566555) (@lem4566554 _107708 A _54417 t s)). Qed.
Lemma lem4566557 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term873 _107708 A _54417 t s d) = (term860 _107708 A _54417 t s d).
Proof. exact (eq_refl (term873 _107708 A _54417 t s d)). Qed.
Lemma lem4566558 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term880 _107708 A _54417 t s) = (term871 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4566557 _107708 A _54417 t s d)). Qed.
Lemma lem4566559 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4566560 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term881 _107708 A _54417 t s) = (term882 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566559 _107708) (@lem4566558 _107708 A _54417 t s)). Qed.
Lemma lem4566561 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566562 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term883 _107708 A _54417 t s) = (term884 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566561) (@lem4566560 _107708 A _54417 t s)). Qed.
Lemma lem4566563 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term875 _107708 A _54417 t s d) = (term865 _107708 A _54417 t s d).
Proof. exact (eq_refl (term875 _107708 A _54417 t s d)). Qed.
Lemma lem4566564 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term885 _107708 A _54417 t s) = (term872 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4566563 _107708 A _54417 t s d)). Qed.
Lemma lem4566565 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4566566 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term886 _107708 A _54417 t s) = (term887 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566565 _107708) (@lem4566564 _107708 A _54417 t s)). Qed.
Lemma lem4566567 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term870 _107708 A _54417 t s) = (term888 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566562 _107708 A _54417 t s) (@lem4566566 _107708 A _54417 t s)). Qed.
Lemma lem4566568 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((term869 _107708 A _54417 t s) = (term870 _107708 A _54417 t s)) = ((term868 _107708 A _54417 t s) = (term888 _107708 A _54417 t s)).
Proof. exact (MK_COMB (@lem4566556 _107708 A _54417 t s) (@lem4566567 _107708 A _54417 t s)). Qed.
Lemma lem4566569 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term868 _107708 A _54417 t s) = (term888 _107708 A _54417 t s).
Proof. exact (EQ_MP (@lem4566568 _107708 A _54417 t s) (@lem4566546 _107708 A _54417 t s)). Qed.
Lemma lem4566698 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term840 _107708 A _54417 t s) = (term888 _107708 A _54417 t s).
Proof. exact (TRANS (@lem4566542 _107708 A _54417 t s) (@lem4566569 _107708 A _54417 t s)). Qed.
Lemma lem4566699 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term841 _107708 A _54417 t) = (term889 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4566698 _107708 A _54417 t s)). Qed.
Lemma lem4566700 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4566701 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term842 _107708 A _54417 t) = (term890 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566700 A) (@lem4566699 _107708 A _54417 t)). Qed.
Lemma lem4566703 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4566704 {A : Type'} (P : type686 A) (Q : type686 A) : (term639 A P Q) = (term640 A P Q).
Proof. exact (@lem4566703 (A -> Prop) P Q). Qed.
Lemma lem4566705 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term891 _107708 A _54417 t) = (term892 _107708 A _54417 t).
Proof. exact (@lem4566704 A (term893 _107708 A _54417 t) (term894 _107708 A _54417 t)). Qed.
Lemma lem4566706 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term895 _107708 A _54417 t s) = (term882 _107708 A _54417 t s).
Proof. exact (eq_refl (term895 _107708 A _54417 t s)). Qed.
Lemma lem4566707 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566708 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term896 _107708 A _54417 t s) = (term884 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566707) (@lem4566706 _107708 A _54417 t s)). Qed.
Lemma lem4566709 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term897 _107708 A _54417 t s) = (term887 _107708 A _54417 t s).
Proof. exact (eq_refl (term897 _107708 A _54417 t s)). Qed.
Lemma lem4566710 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term898 _107708 A _54417 t s) = (term888 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4566708 _107708 A _54417 t s) (@lem4566709 _107708 A _54417 t s)). Qed.
Lemma lem4566711 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term899 _107708 A _54417 t) = (term889 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4566710 _107708 A _54417 t s)). Qed.
Lemma lem4566712 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4566713 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term891 _107708 A _54417 t) = (term890 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566712 A) (@lem4566711 _107708 A _54417 t)). Qed.
Lemma lem4566714 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566715 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term900 _107708 A _54417 t) = (term901 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566714) (@lem4566713 _107708 A _54417 t)). Qed.
Lemma lem4566716 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term895 _107708 A _54417 t s) = (term882 _107708 A _54417 t s).
Proof. exact (eq_refl (term895 _107708 A _54417 t s)). Qed.
Lemma lem4566717 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term902 _107708 A _54417 t) = (term893 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4566716 _107708 A _54417 t s)). Qed.
Lemma lem4566718 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4566719 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term903 _107708 A _54417 t) = (term904 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566718 A) (@lem4566717 _107708 A _54417 t)). Qed.
Lemma lem4566720 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566721 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term905 _107708 A _54417 t) = (term906 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566720) (@lem4566719 _107708 A _54417 t)). Qed.
Lemma lem4566722 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term897 _107708 A _54417 t s) = (term887 _107708 A _54417 t s).
Proof. exact (eq_refl (term897 _107708 A _54417 t s)). Qed.
Lemma lem4566723 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term907 _107708 A _54417 t) = (term894 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4566722 _107708 A _54417 t s)). Qed.
Lemma lem4566724 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4566725 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term908 _107708 A _54417 t) = (term909 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566724 A) (@lem4566723 _107708 A _54417 t)). Qed.
Lemma lem4566726 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term892 _107708 A _54417 t) = (term910 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566721 _107708 A _54417 t) (@lem4566725 _107708 A _54417 t)). Qed.
Lemma lem4566727 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((term891 _107708 A _54417 t) = (term892 _107708 A _54417 t)) = ((term890 _107708 A _54417 t) = (term910 _107708 A _54417 t)).
Proof. exact (MK_COMB (@lem4566715 _107708 A _54417 t) (@lem4566726 _107708 A _54417 t)). Qed.
Lemma lem4566728 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term890 _107708 A _54417 t) = (term910 _107708 A _54417 t).
Proof. exact (EQ_MP (@lem4566727 _107708 A _54417 t) (@lem4566705 _107708 A _54417 t)). Qed.
Lemma lem4566865 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term842 _107708 A _54417 t) = (term910 _107708 A _54417 t).
Proof. exact (TRANS (@lem4566701 _107708 A _54417 t) (@lem4566728 _107708 A _54417 t)). Qed.
Lemma lem4566866 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term843 _107708 A _54417) = (term911 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4566865 _107708 A _54417 t)). Qed.
Lemma lem4566867 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4566868 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term844 _107708 A _54417) = (term912 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566867 _107708) (@lem4566866 _107708 A _54417)). Qed.
Lemma lem4566870 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4566871 {_107708 : Type'} (P : type686 _107708) (Q : type686 _107708) : (term639 _107708 P Q) = (term640 _107708 P Q).
Proof. exact (@lem4566870 (_107708 -> Prop) P Q). Qed.
Lemma lem4566872 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term913 _107708 A _54417) = (term914 _107708 A _54417).
Proof. exact (@lem4566871 _107708 (term915 _107708 A _54417) (term916 _107708 A _54417)). Qed.
Lemma lem4566873 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term917 _107708 A _54417 t) = (term904 _107708 A _54417 t).
Proof. exact (eq_refl (term917 _107708 A _54417 t)). Qed.
Lemma lem4566874 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566875 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term918 _107708 A _54417 t) = (term906 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566874) (@lem4566873 _107708 A _54417 t)). Qed.
Lemma lem4566876 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term919 _107708 A _54417 t) = (term909 _107708 A _54417 t).
Proof. exact (eq_refl (term919 _107708 A _54417 t)). Qed.
Lemma lem4566877 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term920 _107708 A _54417 t) = (term910 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4566875 _107708 A _54417 t) (@lem4566876 _107708 A _54417 t)). Qed.
Lemma lem4566878 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term921 _107708 A _54417) = (term911 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4566877 _107708 A _54417 t)). Qed.
Lemma lem4566879 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4566880 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term913 _107708 A _54417) = (term912 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566879 _107708) (@lem4566878 _107708 A _54417)). Qed.
Lemma lem4566881 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4566882 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term922 _107708 A _54417) = (term923 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566881) (@lem4566880 _107708 A _54417)). Qed.
Lemma lem4566883 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term917 _107708 A _54417 t) = (term904 _107708 A _54417 t).
Proof. exact (eq_refl (term917 _107708 A _54417 t)). Qed.
Lemma lem4566884 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term924 _107708 A _54417) = (term915 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4566883 _107708 A _54417 t)). Qed.
Lemma lem4566885 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4566886 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term925 _107708 A _54417) = (term926 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566885 _107708) (@lem4566884 _107708 A _54417)). Qed.
Lemma lem4566887 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4566888 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term927 _107708 A _54417) = (term928 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566887) (@lem4566886 _107708 A _54417)). Qed.
Lemma lem4566889 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term919 _107708 A _54417 t) = (term909 _107708 A _54417 t).
Proof. exact (eq_refl (term919 _107708 A _54417 t)). Qed.
Lemma lem4566890 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term929 _107708 A _54417) = (term916 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4566889 _107708 A _54417 t)). Qed.
Lemma lem4566891 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4566892 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term930 _107708 A _54417) = (term931 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566891 _107708) (@lem4566890 _107708 A _54417)). Qed.
Lemma lem4566893 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term914 _107708 A _54417) = (term932 _107708 A _54417).
Proof. exact (MK_COMB (@lem4566888 _107708 A _54417) (@lem4566892 _107708 A _54417)). Qed.
Lemma lem4566894 {_107708 A : Type'} (_54417 : type656 _107708 A) : ((term913 _107708 A _54417) = (term914 _107708 A _54417)) = ((term912 _107708 A _54417) = (term932 _107708 A _54417)).
Proof. exact (MK_COMB (@lem4566882 _107708 A _54417) (@lem4566893 _107708 A _54417)). Qed.
Lemma lem4566895 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term912 _107708 A _54417) = (term932 _107708 A _54417).
Proof. exact (EQ_MP (@lem4566894 _107708 A _54417) (@lem4566872 _107708 A _54417)). Qed.
Lemma lem4567040 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term844 _107708 A _54417) = (term932 _107708 A _54417).
Proof. exact (TRANS (@lem4566868 _107708 A _54417) (@lem4566895 _107708 A _54417)). Qed.
Lemma lem4567042 {A : Type'} (P : Prop) (Q : A -> Prop) : (term683 A P Q) = (term684 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4567043 {_107708 A : Type'} (P : Prop) (Q : type805 _107708 A) : (term933 _107708 A P Q) = (term934 _107708 A P Q).
Proof. exact (@lem4567042 (A -> _107708) P Q). Qed.
Lemma lem4567044 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term935 _107708 A _54417 GEN_PVAR_148 t s d) = (term936 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (@lem4567043 _107708 A (term937 _107708 A _54417 t s d GEN_PVAR_148) (term110 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567045 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term822 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term822 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567046 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term938 _107708 A GEN_PVAR_148 t s d) = (term110 _107708 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4567045 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567047 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4567048 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term939 _107708 A GEN_PVAR_148 t s d) = (term111 _107708 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567047 _107708 A) (@lem4567046 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567049 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term828 _107708 A _54417 t s d GEN_PVAR_148) = (term828 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term828 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4567050 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term935 _107708 A _54417 GEN_PVAR_148 t s d) = (term829 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567049 _107708 A _54417 t s d GEN_PVAR_148) (@lem4567048 _107708 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567051 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567052 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term940 _107708 A _54417 GEN_PVAR_148 t s d) = (term941 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567051) (@lem4567050 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567053 {_107708 A : Type'} (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term822 _107708 A GEN_PVAR_148 t s d f) = (term109 _107708 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term822 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567054 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (GEN_PVAR_148 : A -> _107708) : (term828 _107708 A _54417 t s d GEN_PVAR_148) = (term828 _107708 A _54417 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term828 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4567055 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term942 _107708 A _54417 GEN_PVAR_148 t s d f) = (term943 _107708 A _54417 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4567054 _107708 A _54417 t s d GEN_PVAR_148) (@lem4567053 _107708 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567056 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term944 _107708 A _54417 GEN_PVAR_148 t s d) = (term945 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4567055 _107708 A _54417 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567057 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4567058 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term936 _107708 A _54417 GEN_PVAR_148 t s d) = (term946 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567057 _107708 A) (@lem4567056 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567059 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((term935 _107708 A _54417 GEN_PVAR_148 t s d) = (term936 _107708 A _54417 GEN_PVAR_148 t s d)) = ((term829 _107708 A _54417 GEN_PVAR_148 t s d) = (term946 _107708 A _54417 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4567052 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4567058 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567060 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term829 _107708 A _54417 GEN_PVAR_148 t s d) = (term946 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4567059 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4567044 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567061 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term850 _107708 A _54417 t s d) = (term947 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4567060 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567062 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4567063 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term865 _107708 A _54417 t s d) = (term948 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4567062 _107708 A) (@lem4567061 _107708 A _54417 t s d)). Qed.
Lemma lem4567065 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4567066 {_107708 A : Type'} (P : type786 _107708 A) : (term949 _107708 A P) = (term950 _107708 A P).
Proof. exact (@lem4567065 (A -> _107708) (A -> _107708) P). Qed.
Lemma lem4567067 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term951 _107708 A _54417 t s d) = (term952 _107708 A _54417 t s d).
Proof. exact (@lem4567066 _107708 A (term953 _107708 A _54417 t s d)). Qed.
Lemma lem4567068 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term954 _107708 A _54417 t s d GEN_PVAR_148) = (term945 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term954 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4567069 {_107708 A : Type'} (f : A -> _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4567070 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term955 _107708 A _54417 t s d GEN_PVAR_148 f) = (term956 _107708 A _54417 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4567068 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4567069 _107708 A f)). Qed.
Lemma lem4567071 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term956 _107708 A _54417 GEN_PVAR_148 t s d f) = (term943 _107708 A _54417 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term956 _107708 A _54417 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567072 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : A -> _107708) : (term955 _107708 A _54417 t s d GEN_PVAR_148 f) = (term943 _107708 A _54417 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4567070 _107708 A _54417 GEN_PVAR_148 t s d f) (@lem4567071 _107708 A _54417 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567073 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term957 _107708 A _54417 t s d GEN_PVAR_148) = (term945 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107708 => @lem4567072 _107708 A _54417 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567074 {_107708 A : Type'} : (@ex (A -> _107708)) = (@ex (A -> _107708)).
Proof. exact (eq_refl (@ex (A -> _107708))). Qed.
Lemma lem4567075 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term958 _107708 A _54417 t s d GEN_PVAR_148) = (term946 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567074 _107708 A) (@lem4567073 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567076 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term959 _107708 A _54417 t s d) = (term947 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4567075 _107708 A _54417 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567077 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4567078 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term951 _107708 A _54417 t s d) = (term948 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4567077 _107708 A) (@lem4567076 _107708 A _54417 t s d)). Qed.
Lemma lem4567079 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567080 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term960 _107708 A _54417 t s d) = (term961 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4567079) (@lem4567078 _107708 A _54417 t s d)). Qed.
Lemma lem4567081 {_107708 A : Type'} (_54417 : type656 _107708 A) (GEN_PVAR_148 : A -> _107708) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term954 _107708 A _54417 t s d GEN_PVAR_148) = (term945 _107708 A _54417 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term954 _107708 A _54417 t s d GEN_PVAR_148)). Qed.
Lemma lem4567082 {_107708 A : Type'} (f : type796 _107708 A) (GEN_PVAR_148 : A -> _107708) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4567083 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) (GEN_PVAR_148 : A -> _107708) : (term962 _107708 A _54417 t s d f GEN_PVAR_148) = (term963 _107708 A _54417 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4567081 _107708 A _54417 GEN_PVAR_148 t s d) (@lem4567082 _107708 A f GEN_PVAR_148)). Qed.
Lemma lem4567084 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) (GEN_PVAR_148 : A -> _107708) : (term963 _107708 A _54417 t s d f GEN_PVAR_148) = (term964 _107708 A _54417 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term963 _107708 A _54417 t s d f GEN_PVAR_148)). Qed.
Lemma lem4567085 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) (GEN_PVAR_148 : A -> _107708) : (term962 _107708 A _54417 t s d f GEN_PVAR_148) = (term964 _107708 A _54417 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4567083 _107708 A _54417 t s d f GEN_PVAR_148) (@lem4567084 _107708 A _54417 t s d f GEN_PVAR_148)). Qed.
Lemma lem4567086 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) : (term965 _107708 A _54417 t s d f) = (term966 _107708 A _54417 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107708 => @lem4567085 _107708 A _54417 t s d f GEN_PVAR_148)). Qed.
Lemma lem4567087 {_107708 A : Type'} : (@all (A -> _107708)) = (@all (A -> _107708)).
Proof. exact (eq_refl (@all (A -> _107708))). Qed.
Lemma lem4567088 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) : (term967 _107708 A _54417 t s d f) = (term968 _107708 A _54417 t s d f).
Proof. exact (MK_COMB (@lem4567087 _107708 A) (@lem4567086 _107708 A _54417 t s d f)). Qed.
Lemma lem4567089 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term969 _107708 A _54417 t s d) = (term970 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun f : type796 _107708 A => @lem4567088 _107708 A _54417 t s d f)). Qed.
Lemma lem4567090 {_107708 A : Type'} : (@ex ((A -> _107708) -> A -> _107708)) = (@ex ((A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567091 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term952 _107708 A _54417 t s d) = (term971 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4567090 _107708 A) (@lem4567089 _107708 A _54417 t s d)). Qed.
Lemma lem4567092 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : ((term951 _107708 A _54417 t s d) = (term952 _107708 A _54417 t s d)) = ((term948 _107708 A _54417 t s d) = (term971 _107708 A _54417 t s d)).
Proof. exact (MK_COMB (@lem4567080 _107708 A _54417 t s d) (@lem4567091 _107708 A _54417 t s d)). Qed.
Lemma lem4567093 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term948 _107708 A _54417 t s d) = (term971 _107708 A _54417 t s d).
Proof. exact (EQ_MP (@lem4567092 _107708 A _54417 t s d) (@lem4567067 _107708 A _54417 t s d)). Qed.
Lemma lem4567094 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term865 _107708 A _54417 t s d) = (term971 _107708 A _54417 t s d).
Proof. exact (TRANS (@lem4567063 _107708 A _54417 t s d) (@lem4567093 _107708 A _54417 t s d)). Qed.
Lemma lem4567095 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term872 _107708 A _54417 t s) = (term972 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4567094 _107708 A _54417 t s d)). Qed.
Lemma lem4567096 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4567097 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term887 _107708 A _54417 t s) = (term973 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4567096 _107708) (@lem4567095 _107708 A _54417 t s)). Qed.
Lemma lem4567099 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4567100 {_107708 A : Type'} (P : type1357 _107708 A) : (term974 _107708 A P) = (term975 _107708 A P).
Proof. exact (@lem4567099 _107708 (type796 _107708 A) P). Qed.
Lemma lem4567101 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term976 _107708 A _54417 t s) = (term977 _107708 A _54417 t s).
Proof. exact (@lem4567100 _107708 A (term978 _107708 A _54417 t s)). Qed.
Lemma lem4567102 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term979 _107708 A _54417 t s d) = (term970 _107708 A _54417 t s d).
Proof. exact (eq_refl (term979 _107708 A _54417 t s d)). Qed.
Lemma lem4567103 {_107708 A : Type'} (f : type796 _107708 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4567104 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) : (term980 _107708 A _54417 t s d f) = (term981 _107708 A _54417 t s d f).
Proof. exact (MK_COMB (@lem4567102 _107708 A _54417 t s d) (@lem4567103 _107708 A f)). Qed.
Lemma lem4567105 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) : (term981 _107708 A _54417 t s d f) = (term968 _107708 A _54417 t s d f).
Proof. exact (eq_refl (term981 _107708 A _54417 t s d f)). Qed.
Lemma lem4567106 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) (f : type796 _107708 A) : (term980 _107708 A _54417 t s d f) = (term968 _107708 A _54417 t s d f).
Proof. exact (TRANS (@lem4567104 _107708 A _54417 t s d f) (@lem4567105 _107708 A _54417 t s d f)). Qed.
Lemma lem4567107 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term982 _107708 A _54417 t s d) = (term970 _107708 A _54417 t s d).
Proof. exact (fun_ext (fun f : type796 _107708 A => @lem4567106 _107708 A _54417 t s d f)). Qed.
Lemma lem4567108 {_107708 A : Type'} : (@ex ((A -> _107708) -> A -> _107708)) = (@ex ((A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567109 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term983 _107708 A _54417 t s d) = (term971 _107708 A _54417 t s d).
Proof. exact (MK_COMB (@lem4567108 _107708 A) (@lem4567107 _107708 A _54417 t s d)). Qed.
Lemma lem4567110 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term984 _107708 A _54417 t s) = (term972 _107708 A _54417 t s).
Proof. exact (fun_ext (fun d : _107708 => @lem4567109 _107708 A _54417 t s d)). Qed.
Lemma lem4567111 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4567112 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term976 _107708 A _54417 t s) = (term973 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4567111 _107708) (@lem4567110 _107708 A _54417 t s)). Qed.
Lemma lem4567113 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567114 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term985 _107708 A _54417 t s) = (term986 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4567113) (@lem4567112 _107708 A _54417 t s)). Qed.
Lemma lem4567115 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (d : _107708) : (term979 _107708 A _54417 t s d) = (term970 _107708 A _54417 t s d).
Proof. exact (eq_refl (term979 _107708 A _54417 t s d)). Qed.
Lemma lem4567116 {_107708 A : Type'} (f : type1371 _107708 A) (d : _107708) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4567117 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) (d : _107708) : (term987 _107708 A _54417 t s f d) = (term988 _107708 A _54417 t s f d).
Proof. exact (MK_COMB (@lem4567115 _107708 A _54417 t s d) (@lem4567116 _107708 A f d)). Qed.
Lemma lem4567118 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) (d : _107708) : (term988 _107708 A _54417 t s f d) = (term989 _107708 A _54417 t s f d).
Proof. exact (eq_refl (term988 _107708 A _54417 t s f d)). Qed.
Lemma lem4567119 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) (d : _107708) : (term987 _107708 A _54417 t s f d) = (term989 _107708 A _54417 t s f d).
Proof. exact (TRANS (@lem4567117 _107708 A _54417 t s f d) (@lem4567118 _107708 A _54417 t s f d)). Qed.
Lemma lem4567120 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) : (term990 _107708 A _54417 t s f) = (term991 _107708 A _54417 t s f).
Proof. exact (fun_ext (fun d : _107708 => @lem4567119 _107708 A _54417 t s f d)). Qed.
Lemma lem4567121 {_107708 : Type'} : (@all _107708) = (@all _107708).
Proof. exact (eq_refl (@all _107708)). Qed.
Lemma lem4567122 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) : (term992 _107708 A _54417 t s f) = (term993 _107708 A _54417 t s f).
Proof. exact (MK_COMB (@lem4567121 _107708) (@lem4567120 _107708 A _54417 t s f)). Qed.
Lemma lem4567123 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term994 _107708 A _54417 t s) = (term995 _107708 A _54417 t s).
Proof. exact (fun_ext (fun f : type1371 _107708 A => @lem4567122 _107708 A _54417 t s f)). Qed.
Lemma lem4567124 {_107708 A : Type'} : (@ex (_107708 -> (A -> _107708) -> A -> _107708)) = (@ex (_107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex (_107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567125 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term977 _107708 A _54417 t s) = (term996 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4567124 _107708 A) (@lem4567123 _107708 A _54417 t s)). Qed.
Lemma lem4567126 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : ((term976 _107708 A _54417 t s) = (term977 _107708 A _54417 t s)) = ((term973 _107708 A _54417 t s) = (term996 _107708 A _54417 t s)).
Proof. exact (MK_COMB (@lem4567114 _107708 A _54417 t s) (@lem4567125 _107708 A _54417 t s)). Qed.
Lemma lem4567127 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term973 _107708 A _54417 t s) = (term996 _107708 A _54417 t s).
Proof. exact (EQ_MP (@lem4567126 _107708 A _54417 t s) (@lem4567101 _107708 A _54417 t s)). Qed.
Lemma lem4567128 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term887 _107708 A _54417 t s) = (term996 _107708 A _54417 t s).
Proof. exact (TRANS (@lem4567097 _107708 A _54417 t s) (@lem4567127 _107708 A _54417 t s)). Qed.
Lemma lem4567129 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term894 _107708 A _54417 t) = (term997 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567128 _107708 A _54417 t s)). Qed.
Lemma lem4567130 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567131 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term909 _107708 A _54417 t) = (term998 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4567130 A) (@lem4567129 _107708 A _54417 t)). Qed.
Lemma lem4567133 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4567134 {_107708 A : Type'} (P : type829 _107708 A) : (term999 _107708 A P) = (term1000 _107708 A P).
Proof. exact (@lem4567133 (A -> Prop) (type1371 _107708 A) P). Qed.
Lemma lem4567135 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1001 _107708 A _54417 t) = (term1002 _107708 A _54417 t).
Proof. exact (@lem4567134 _107708 A (term1003 _107708 A _54417 t)). Qed.
Lemma lem4567136 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term1004 _107708 A _54417 t s) = (term995 _107708 A _54417 t s).
Proof. exact (eq_refl (term1004 _107708 A _54417 t s)). Qed.
Lemma lem4567137 {_107708 A : Type'} (f : type1371 _107708 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4567138 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) : (term1005 _107708 A _54417 t s f) = (term1006 _107708 A _54417 t s f).
Proof. exact (MK_COMB (@lem4567136 _107708 A _54417 t s) (@lem4567137 _107708 A f)). Qed.
Lemma lem4567139 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) : (term1006 _107708 A _54417 t s f) = (term993 _107708 A _54417 t s f).
Proof. exact (eq_refl (term1006 _107708 A _54417 t s f)). Qed.
Lemma lem4567140 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) (f : type1371 _107708 A) : (term1005 _107708 A _54417 t s f) = (term993 _107708 A _54417 t s f).
Proof. exact (TRANS (@lem4567138 _107708 A _54417 t s f) (@lem4567139 _107708 A _54417 t s f)). Qed.
Lemma lem4567141 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term1007 _107708 A _54417 t s) = (term995 _107708 A _54417 t s).
Proof. exact (fun_ext (fun f : type1371 _107708 A => @lem4567140 _107708 A _54417 t s f)). Qed.
Lemma lem4567142 {_107708 A : Type'} : (@ex (_107708 -> (A -> _107708) -> A -> _107708)) = (@ex (_107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex (_107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567143 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term1008 _107708 A _54417 t s) = (term996 _107708 A _54417 t s).
Proof. exact (MK_COMB (@lem4567142 _107708 A) (@lem4567141 _107708 A _54417 t s)). Qed.
Lemma lem4567144 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1009 _107708 A _54417 t) = (term997 _107708 A _54417 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567143 _107708 A _54417 t s)). Qed.
Lemma lem4567145 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567146 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1001 _107708 A _54417 t) = (term998 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4567145 A) (@lem4567144 _107708 A _54417 t)). Qed.
Lemma lem4567147 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567148 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1010 _107708 A _54417 t) = (term1011 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4567147) (@lem4567146 _107708 A _54417 t)). Qed.
Lemma lem4567149 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (s : A -> Prop) : (term1004 _107708 A _54417 t s) = (term995 _107708 A _54417 t s).
Proof. exact (eq_refl (term1004 _107708 A _54417 t s)). Qed.
Lemma lem4567150 {_107708 A : Type'} (f : type858 _107708 A) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4567151 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) (s : A -> Prop) : (term1012 _107708 A _54417 t f s) = (term1013 _107708 A _54417 t f s).
Proof. exact (MK_COMB (@lem4567149 _107708 A _54417 t s) (@lem4567150 _107708 A f s)). Qed.
Lemma lem4567152 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) (s : A -> Prop) : (term1013 _107708 A _54417 t f s) = (term1014 _107708 A _54417 t f s).
Proof. exact (eq_refl (term1013 _107708 A _54417 t f s)). Qed.
Lemma lem4567153 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) (s : A -> Prop) : (term1012 _107708 A _54417 t f s) = (term1014 _107708 A _54417 t f s).
Proof. exact (TRANS (@lem4567151 _107708 A _54417 t f s) (@lem4567152 _107708 A _54417 t f s)). Qed.
Lemma lem4567154 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) : (term1015 _107708 A _54417 t f) = (term1016 _107708 A _54417 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567153 _107708 A _54417 t f s)). Qed.
Lemma lem4567155 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567156 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) : (term1017 _107708 A _54417 t f) = (term1018 _107708 A _54417 t f).
Proof. exact (MK_COMB (@lem4567155 A) (@lem4567154 _107708 A _54417 t f)). Qed.
Lemma lem4567157 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1019 _107708 A _54417 t) = (term1020 _107708 A _54417 t).
Proof. exact (fun_ext (fun f : type858 _107708 A => @lem4567156 _107708 A _54417 t f)). Qed.
Lemma lem4567158 {_107708 A : Type'} : (@ex ((A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)) = (@ex ((A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567159 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1002 _107708 A _54417 t) = (term1021 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4567158 _107708 A) (@lem4567157 _107708 A _54417 t)). Qed.
Lemma lem4567160 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : ((term1001 _107708 A _54417 t) = (term1002 _107708 A _54417 t)) = ((term998 _107708 A _54417 t) = (term1021 _107708 A _54417 t)).
Proof. exact (MK_COMB (@lem4567148 _107708 A _54417 t) (@lem4567159 _107708 A _54417 t)). Qed.
Lemma lem4567161 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term998 _107708 A _54417 t) = (term1021 _107708 A _54417 t).
Proof. exact (EQ_MP (@lem4567160 _107708 A _54417 t) (@lem4567135 _107708 A _54417 t)). Qed.
Lemma lem4567162 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term909 _107708 A _54417 t) = (term1021 _107708 A _54417 t).
Proof. exact (TRANS (@lem4567131 _107708 A _54417 t) (@lem4567161 _107708 A _54417 t)). Qed.
Lemma lem4567163 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term916 _107708 A _54417) = (term1022 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4567162 _107708 A _54417 t)). Qed.
Lemma lem4567164 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4567165 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term931 _107708 A _54417) = (term1023 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567164 _107708) (@lem4567163 _107708 A _54417)). Qed.
Lemma lem4567167 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4567168 {_107708 A : Type'} (P : type606 _107708 A) : (term1024 _107708 A P) = (term1025 _107708 A P).
Proof. exact (@lem4567167 (_107708 -> Prop) (type858 _107708 A) P). Qed.
Lemma lem4567169 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1026 _107708 A _54417) = (term1027 _107708 A _54417).
Proof. exact (@lem4567168 _107708 A (term1028 _107708 A _54417)). Qed.
Lemma lem4567170 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1029 _107708 A _54417 t) = (term1020 _107708 A _54417 t).
Proof. exact (eq_refl (term1029 _107708 A _54417 t)). Qed.
Lemma lem4567171 {_107708 A : Type'} (f : type858 _107708 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4567172 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) : (term1030 _107708 A _54417 t f) = (term1031 _107708 A _54417 t f).
Proof. exact (MK_COMB (@lem4567170 _107708 A _54417 t) (@lem4567171 _107708 A f)). Qed.
Lemma lem4567173 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) : (term1031 _107708 A _54417 t f) = (term1018 _107708 A _54417 t f).
Proof. exact (eq_refl (term1031 _107708 A _54417 t f)). Qed.
Lemma lem4567174 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) (f : type858 _107708 A) : (term1030 _107708 A _54417 t f) = (term1018 _107708 A _54417 t f).
Proof. exact (TRANS (@lem4567172 _107708 A _54417 t f) (@lem4567173 _107708 A _54417 t f)). Qed.
Lemma lem4567175 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1032 _107708 A _54417 t) = (term1020 _107708 A _54417 t).
Proof. exact (fun_ext (fun f : type858 _107708 A => @lem4567174 _107708 A _54417 t f)). Qed.
Lemma lem4567176 {_107708 A : Type'} : (@ex ((A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)) = (@ex ((A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567177 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1033 _107708 A _54417 t) = (term1021 _107708 A _54417 t).
Proof. exact (MK_COMB (@lem4567176 _107708 A) (@lem4567175 _107708 A _54417 t)). Qed.
Lemma lem4567178 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1034 _107708 A _54417) = (term1022 _107708 A _54417).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4567177 _107708 A _54417 t)). Qed.
Lemma lem4567179 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4567180 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1026 _107708 A _54417) = (term1023 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567179 _107708) (@lem4567178 _107708 A _54417)). Qed.
Lemma lem4567181 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567182 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1035 _107708 A _54417) = (term1036 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567181) (@lem4567180 _107708 A _54417)). Qed.
Lemma lem4567183 {_107708 A : Type'} (_54417 : type656 _107708 A) (t : _107708 -> Prop) : (term1029 _107708 A _54417 t) = (term1020 _107708 A _54417 t).
Proof. exact (eq_refl (term1029 _107708 A _54417 t)). Qed.
Lemma lem4567184 {_107708 A : Type'} (f : type655 _107708 A) (t : _107708 -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4567185 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) (t : _107708 -> Prop) : (term1037 _107708 A _54417 f t) = (term1038 _107708 A _54417 f t).
Proof. exact (MK_COMB (@lem4567183 _107708 A _54417 t) (@lem4567184 _107708 A f t)). Qed.
Lemma lem4567186 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) (t : _107708 -> Prop) : (term1038 _107708 A _54417 f t) = (term1039 _107708 A _54417 f t).
Proof. exact (eq_refl (term1038 _107708 A _54417 f t)). Qed.
Lemma lem4567187 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) (t : _107708 -> Prop) : (term1037 _107708 A _54417 f t) = (term1039 _107708 A _54417 f t).
Proof. exact (TRANS (@lem4567185 _107708 A _54417 f t) (@lem4567186 _107708 A _54417 f t)). Qed.
Lemma lem4567188 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) : (term1040 _107708 A _54417 f) = (term1041 _107708 A _54417 f).
Proof. exact (fun_ext (fun t : _107708 -> Prop => @lem4567187 _107708 A _54417 f t)). Qed.
Lemma lem4567189 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4567190 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) : (term1042 _107708 A _54417 f) = (term1043 _107708 A _54417 f).
Proof. exact (MK_COMB (@lem4567189 _107708) (@lem4567188 _107708 A _54417 f)). Qed.
Lemma lem4567191 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1044 _107708 A _54417) = (term1045 _107708 A _54417).
Proof. exact (fun_ext (fun f : type655 _107708 A => @lem4567190 _107708 A _54417 f)). Qed.
Lemma lem4567192 {_107708 A : Type'} : (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)) = (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567193 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1027 _107708 A _54417) = (term1046 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567192 _107708 A) (@lem4567191 _107708 A _54417)). Qed.
Lemma lem4567194 {_107708 A : Type'} (_54417 : type656 _107708 A) : ((term1026 _107708 A _54417) = (term1027 _107708 A _54417)) = ((term1023 _107708 A _54417) = (term1046 _107708 A _54417)).
Proof. exact (MK_COMB (@lem4567182 _107708 A _54417) (@lem4567193 _107708 A _54417)). Qed.
Lemma lem4567195 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1023 _107708 A _54417) = (term1046 _107708 A _54417).
Proof. exact (EQ_MP (@lem4567194 _107708 A _54417) (@lem4567169 _107708 A _54417)). Qed.
Lemma lem4567196 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term931 _107708 A _54417) = (term1046 _107708 A _54417).
Proof. exact (TRANS (@lem4567165 _107708 A _54417) (@lem4567195 _107708 A _54417)). Qed.
Lemma lem4567197 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term928 _107708 A _54417) = (term928 _107708 A _54417).
Proof. exact (eq_refl (term928 _107708 A _54417)). Qed.
Lemma lem4567198 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term932 _107708 A _54417) = (term1047 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567197 _107708 A _54417) (@lem4567196 _107708 A _54417)). Qed.
Lemma lem4567200 {A : Type'} (P : Prop) (Q : A -> Prop) : (term802 A P Q) = (term803 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4567201 {_107708 A : Type'} (P : Prop) (Q : type146 _107708 A) : (term1048 _107708 A P Q) = (term1049 _107708 A P Q).
Proof. exact (@lem4567200 (type655 _107708 A) P Q). Qed.
Lemma lem4567202 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1050 _107708 A _54417) = (term1051 _107708 A _54417).
Proof. exact (@lem4567201 _107708 A (term926 _107708 A _54417) (term1045 _107708 A _54417)). Qed.
Lemma lem4567203 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) : (term1052 _107708 A _54417 f) = (term1043 _107708 A _54417 f).
Proof. exact (eq_refl (term1052 _107708 A _54417 f)). Qed.
Lemma lem4567204 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1053 _107708 A _54417) = (term1045 _107708 A _54417).
Proof. exact (fun_ext (fun f : type655 _107708 A => @lem4567203 _107708 A _54417 f)). Qed.
Lemma lem4567205 {_107708 A : Type'} : (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)) = (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567206 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1054 _107708 A _54417) = (term1046 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567205 _107708 A) (@lem4567204 _107708 A _54417)). Qed.
Lemma lem4567207 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term928 _107708 A _54417) = (term928 _107708 A _54417).
Proof. exact (eq_refl (term928 _107708 A _54417)). Qed.
Lemma lem4567208 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1050 _107708 A _54417) = (term1047 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567207 _107708 A _54417) (@lem4567206 _107708 A _54417)). Qed.
Lemma lem4567209 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567210 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1055 _107708 A _54417) = (term1056 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567209) (@lem4567208 _107708 A _54417)). Qed.
Lemma lem4567211 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) : (term1052 _107708 A _54417 f) = (term1043 _107708 A _54417 f).
Proof. exact (eq_refl (term1052 _107708 A _54417 f)). Qed.
Lemma lem4567212 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term928 _107708 A _54417) = (term928 _107708 A _54417).
Proof. exact (eq_refl (term928 _107708 A _54417)). Qed.
Lemma lem4567213 {_107708 A : Type'} (_54417 : type656 _107708 A) (f : type655 _107708 A) : (term1057 _107708 A _54417 f) = (term1058 _107708 A _54417 f).
Proof. exact (MK_COMB (@lem4567212 _107708 A _54417) (@lem4567211 _107708 A _54417 f)). Qed.
Lemma lem4567214 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1059 _107708 A _54417) = (term1060 _107708 A _54417).
Proof. exact (fun_ext (fun f : type655 _107708 A => @lem4567213 _107708 A _54417 f)). Qed.
Lemma lem4567215 {_107708 A : Type'} : (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)) = (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> (A -> Prop) -> _107708 -> (A -> _107708) -> A -> _107708))). Qed.
Lemma lem4567216 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1051 _107708 A _54417) = (term1061 _107708 A _54417).
Proof. exact (MK_COMB (@lem4567215 _107708 A) (@lem4567214 _107708 A _54417)). Qed.
Lemma lem4567217 {_107708 A : Type'} (_54417 : type656 _107708 A) : ((term1050 _107708 A _54417) = (term1051 _107708 A _54417)) = ((term1047 _107708 A _54417) = (term1061 _107708 A _54417)).
Proof. exact (MK_COMB (@lem4567210 _107708 A _54417) (@lem4567216 _107708 A _54417)). Qed.
Lemma lem4567218 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term1047 _107708 A _54417) = (term1061 _107708 A _54417).
Proof. exact (EQ_MP (@lem4567217 _107708 A _54417) (@lem4567202 _107708 A _54417)). Qed.
Lemma lem4567219 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term932 _107708 A _54417) = (term1061 _107708 A _54417).
Proof. exact (TRANS (@lem4567198 _107708 A _54417) (@lem4567218 _107708 A _54417)). Qed.
Lemma lem4567220 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term844 _107708 A _54417) = (term1061 _107708 A _54417).
Proof. exact (TRANS (@lem4567040 _107708 A _54417) (@lem4567219 _107708 A _54417)). Qed.
Lemma lem4567221 {_107708 A : Type'} (_54417 : type656 _107708 A) : (term248 _107708 A _54417) = (term1061 _107708 A _54417).
Proof. exact (TRANS (@lem4566380 _107708 A _54417) (@lem4567220 _107708 A _54417)). Qed.
Lemma lem4567222 {_107708 A : Type'} (_54417 : type656 _107708 A) (h1 : term248 _107708 A _54417) : term1061 _107708 A _54417.
Proof. exact (EQ_MP (@lem4567221 _107708 A _54417) (@lem4563675 _107708 A _54417 h1)). Qed.
Lemma lem4567226 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term109 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term109 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567227 {_107705 A : Type'} (P : type805 _107705 A) : (term818 _107705 A P) = (term819 _107705 A P).
Proof. exact (@lem18394 (A -> _107705) P). Qed.
Lemma lem4567228 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term820 _107705 A GEN_PVAR_148 t s d) = (term821 _107705 A GEN_PVAR_148 t s d).
Proof. exact (@lem4567227 _107705 A (term110 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567229 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term822 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term822 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567230 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4567232 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term823 _107705 A GEN_PVAR_148 t s d f) = (term824 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4567230) (@lem4567229 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567233 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term825 _107705 A GEN_PVAR_148 t s d) = (term826 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4567232 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567234 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567235 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term821 _107705 A GEN_PVAR_148 t s d) = (term827 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567234 _107705 A) (@lem4567233 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567236 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term820 _107705 A GEN_PVAR_148 t s d) = (term827 _107705 A GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4567228 _107705 A GEN_PVAR_148 t s d) (@lem4567235 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567237 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term110 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4567226 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567238 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4567239 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term111 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567238 _107705 A) (@lem4567237 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567241 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term828 _107705 A _54416 t s d GEN_PVAR_148) = (term828 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term828 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567242 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term829 _107705 A _54416 GEN_PVAR_148 t s d) = (term829 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567241 _107705 A _54416 t s d GEN_PVAR_148) (@lem4567239 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567244 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term830 _107705 A _54416 t s d GEN_PVAR_148) = (term830 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term830 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567245 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term831 _107705 A _54416 GEN_PVAR_148 t s d) = (term832 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567244 _107705 A _54416 t s d GEN_PVAR_148) (@lem4567236 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567246 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567247 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term833 _107705 A _54416 GEN_PVAR_148 t s d) = (term834 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567246) (@lem4567245 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567248 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term835 _107705 A _54416 GEN_PVAR_148 t s d) = (term836 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567247 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567242 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567249 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = (term835 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_54416 t s d GEN_PVAR_148) (term111 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567250 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((_54416 t s d GEN_PVAR_148) = (term111 _107705 A GEN_PVAR_148 t s d)) = (term836 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4567249 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567248 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567251 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term241 _107705 A _54416 t s d) = (term837 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567250 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567252 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567253 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term242 _107705 A _54416 t s d) = (term838 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567252 _107705 A) (@lem4567251 _107705 A _54416 t s d)). Qed.
Lemma lem4567254 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term243 _107705 A _54416 t s) = (term839 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567253 _107705 A _54416 t s d)). Qed.
Lemma lem4567255 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567256 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term244 _107705 A _54416 t s) = (term840 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567255 _107705) (@lem4567254 _107705 A _54416 t s)). Qed.
Lemma lem4567257 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term245 _107705 A _54416 t) = (term841 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567256 _107705 A _54416 t s)). Qed.
Lemma lem4567258 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567259 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term246 _107705 A _54416 t) = (term842 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567258 A) (@lem4567257 _107705 A _54416 t)). Qed.
Lemma lem4567260 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term247 _107705 A _54416) = (term843 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4567259 _107705 A _54416 t)). Qed.
Lemma lem4567261 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4567262 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term844 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567261 _107705) (@lem4567260 _107705 A _54416)). Qed.
Lemma lem4567276 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4567277 {_107705 A : Type'} (P : type805 _107705 A) (Q : type805 _107705 A) : (term845 _107705 A P Q) = (term846 _107705 A P Q).
Proof. exact (@lem4567276 (A -> _107705) P Q). Qed.
Lemma lem4567278 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term847 _107705 A _54416 t s d) = (term848 _107705 A _54416 t s d).
Proof. exact (@lem4567277 _107705 A (term849 _107705 A _54416 t s d) (term850 _107705 A _54416 t s d)). Qed.
Lemma lem4567279 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term851 _107705 A _54416 t s d GEN_PVAR_148) = (term832 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term851 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567280 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567281 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term852 _107705 A _54416 t s d GEN_PVAR_148) = (term834 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567280) (@lem4567279 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567282 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term853 _107705 A _54416 t s d GEN_PVAR_148) = (term829 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term853 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567283 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term854 _107705 A _54416 t s d GEN_PVAR_148) = (term836 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567281 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567282 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567284 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term855 _107705 A _54416 t s d) = (term837 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567283 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567285 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567286 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term847 _107705 A _54416 t s d) = (term838 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567285 _107705 A) (@lem4567284 _107705 A _54416 t s d)). Qed.
Lemma lem4567287 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567288 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term856 _107705 A _54416 t s d) = (term857 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567287) (@lem4567286 _107705 A _54416 t s d)). Qed.
Lemma lem4567289 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term851 _107705 A _54416 t s d GEN_PVAR_148) = (term832 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term851 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567290 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term858 _107705 A _54416 t s d) = (term849 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567289 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567291 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567292 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term859 _107705 A _54416 t s d) = (term860 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567291 _107705 A) (@lem4567290 _107705 A _54416 t s d)). Qed.
Lemma lem4567293 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567294 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term861 _107705 A _54416 t s d) = (term862 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567293) (@lem4567292 _107705 A _54416 t s d)). Qed.
Lemma lem4567295 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term853 _107705 A _54416 t s d GEN_PVAR_148) = (term829 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term853 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567296 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term863 _107705 A _54416 t s d) = (term850 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567295 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567297 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567298 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term864 _107705 A _54416 t s d) = (term865 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567297 _107705 A) (@lem4567296 _107705 A _54416 t s d)). Qed.
Lemma lem4567299 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term848 _107705 A _54416 t s d) = (term866 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567294 _107705 A _54416 t s d) (@lem4567298 _107705 A _54416 t s d)). Qed.
Lemma lem4567300 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((term847 _107705 A _54416 t s d) = (term848 _107705 A _54416 t s d)) = ((term838 _107705 A _54416 t s d) = (term866 _107705 A _54416 t s d)).
Proof. exact (MK_COMB (@lem4567288 _107705 A _54416 t s d) (@lem4567299 _107705 A _54416 t s d)). Qed.
Lemma lem4567301 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term838 _107705 A _54416 t s d) = (term866 _107705 A _54416 t s d).
Proof. exact (EQ_MP (@lem4567300 _107705 A _54416 t s d) (@lem4567278 _107705 A _54416 t s d)). Qed.
Lemma lem4567422 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term839 _107705 A _54416 t s) = (term867 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567301 _107705 A _54416 t s d)). Qed.
Lemma lem4567423 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567424 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term840 _107705 A _54416 t s) = (term868 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567423 _107705) (@lem4567422 _107705 A _54416 t s)). Qed.
Lemma lem4567426 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4567427 {_107705 : Type'} (P : _107705 -> Prop) (Q : _107705 -> Prop) : (term591 _107705 P Q) = (term592 _107705 P Q).
Proof. exact (@lem4567426 _107705 P Q). Qed.
Lemma lem4567428 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term869 _107705 A _54416 t s) = (term870 _107705 A _54416 t s).
Proof. exact (@lem4567427 _107705 (term871 _107705 A _54416 t s) (term872 _107705 A _54416 t s)). Qed.
Lemma lem4567429 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term873 _107705 A _54416 t s d) = (term860 _107705 A _54416 t s d).
Proof. exact (eq_refl (term873 _107705 A _54416 t s d)). Qed.
Lemma lem4567430 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567431 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term874 _107705 A _54416 t s d) = (term862 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567430) (@lem4567429 _107705 A _54416 t s d)). Qed.
Lemma lem4567432 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term875 _107705 A _54416 t s d) = (term865 _107705 A _54416 t s d).
Proof. exact (eq_refl (term875 _107705 A _54416 t s d)). Qed.
Lemma lem4567433 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term876 _107705 A _54416 t s d) = (term866 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567431 _107705 A _54416 t s d) (@lem4567432 _107705 A _54416 t s d)). Qed.
Lemma lem4567434 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term877 _107705 A _54416 t s) = (term867 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567433 _107705 A _54416 t s d)). Qed.
Lemma lem4567435 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567436 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term869 _107705 A _54416 t s) = (term868 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567435 _107705) (@lem4567434 _107705 A _54416 t s)). Qed.
Lemma lem4567437 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567438 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term878 _107705 A _54416 t s) = (term879 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567437) (@lem4567436 _107705 A _54416 t s)). Qed.
Lemma lem4567439 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term873 _107705 A _54416 t s d) = (term860 _107705 A _54416 t s d).
Proof. exact (eq_refl (term873 _107705 A _54416 t s d)). Qed.
Lemma lem4567440 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term880 _107705 A _54416 t s) = (term871 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567439 _107705 A _54416 t s d)). Qed.
Lemma lem4567441 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567442 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term881 _107705 A _54416 t s) = (term882 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567441 _107705) (@lem4567440 _107705 A _54416 t s)). Qed.
Lemma lem4567443 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567444 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term883 _107705 A _54416 t s) = (term884 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567443) (@lem4567442 _107705 A _54416 t s)). Qed.
Lemma lem4567445 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term875 _107705 A _54416 t s d) = (term865 _107705 A _54416 t s d).
Proof. exact (eq_refl (term875 _107705 A _54416 t s d)). Qed.
Lemma lem4567446 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term885 _107705 A _54416 t s) = (term872 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567445 _107705 A _54416 t s d)). Qed.
Lemma lem4567447 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567448 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term886 _107705 A _54416 t s) = (term887 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567447 _107705) (@lem4567446 _107705 A _54416 t s)). Qed.
Lemma lem4567449 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term870 _107705 A _54416 t s) = (term888 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567444 _107705 A _54416 t s) (@lem4567448 _107705 A _54416 t s)). Qed.
Lemma lem4567450 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((term869 _107705 A _54416 t s) = (term870 _107705 A _54416 t s)) = ((term868 _107705 A _54416 t s) = (term888 _107705 A _54416 t s)).
Proof. exact (MK_COMB (@lem4567438 _107705 A _54416 t s) (@lem4567449 _107705 A _54416 t s)). Qed.
Lemma lem4567451 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term868 _107705 A _54416 t s) = (term888 _107705 A _54416 t s).
Proof. exact (EQ_MP (@lem4567450 _107705 A _54416 t s) (@lem4567428 _107705 A _54416 t s)). Qed.
Lemma lem4567580 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term840 _107705 A _54416 t s) = (term888 _107705 A _54416 t s).
Proof. exact (TRANS (@lem4567424 _107705 A _54416 t s) (@lem4567451 _107705 A _54416 t s)). Qed.
Lemma lem4567581 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term841 _107705 A _54416 t) = (term889 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567580 _107705 A _54416 t s)). Qed.
Lemma lem4567582 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567583 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term842 _107705 A _54416 t) = (term890 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567582 A) (@lem4567581 _107705 A _54416 t)). Qed.
Lemma lem4567585 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4567586 {A : Type'} (P : type686 A) (Q : type686 A) : (term639 A P Q) = (term640 A P Q).
Proof. exact (@lem4567585 (A -> Prop) P Q). Qed.
Lemma lem4567587 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term891 _107705 A _54416 t) = (term892 _107705 A _54416 t).
Proof. exact (@lem4567586 A (term893 _107705 A _54416 t) (term894 _107705 A _54416 t)). Qed.
Lemma lem4567588 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term895 _107705 A _54416 t s) = (term882 _107705 A _54416 t s).
Proof. exact (eq_refl (term895 _107705 A _54416 t s)). Qed.
Lemma lem4567589 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567590 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term896 _107705 A _54416 t s) = (term884 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567589) (@lem4567588 _107705 A _54416 t s)). Qed.
Lemma lem4567591 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term897 _107705 A _54416 t s) = (term887 _107705 A _54416 t s).
Proof. exact (eq_refl (term897 _107705 A _54416 t s)). Qed.
Lemma lem4567592 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term898 _107705 A _54416 t s) = (term888 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567590 _107705 A _54416 t s) (@lem4567591 _107705 A _54416 t s)). Qed.
Lemma lem4567593 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term899 _107705 A _54416 t) = (term889 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567592 _107705 A _54416 t s)). Qed.
Lemma lem4567594 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567595 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term891 _107705 A _54416 t) = (term890 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567594 A) (@lem4567593 _107705 A _54416 t)). Qed.
Lemma lem4567596 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567597 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term900 _107705 A _54416 t) = (term901 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567596) (@lem4567595 _107705 A _54416 t)). Qed.
Lemma lem4567598 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term895 _107705 A _54416 t s) = (term882 _107705 A _54416 t s).
Proof. exact (eq_refl (term895 _107705 A _54416 t s)). Qed.
Lemma lem4567599 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term902 _107705 A _54416 t) = (term893 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567598 _107705 A _54416 t s)). Qed.
Lemma lem4567600 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567601 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term903 _107705 A _54416 t) = (term904 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567600 A) (@lem4567599 _107705 A _54416 t)). Qed.
Lemma lem4567602 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567603 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term905 _107705 A _54416 t) = (term906 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567602) (@lem4567601 _107705 A _54416 t)). Qed.
Lemma lem4567604 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term897 _107705 A _54416 t s) = (term887 _107705 A _54416 t s).
Proof. exact (eq_refl (term897 _107705 A _54416 t s)). Qed.
Lemma lem4567605 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term907 _107705 A _54416 t) = (term894 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4567604 _107705 A _54416 t s)). Qed.
Lemma lem4567606 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4567607 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term908 _107705 A _54416 t) = (term909 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567606 A) (@lem4567605 _107705 A _54416 t)). Qed.
Lemma lem4567608 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term892 _107705 A _54416 t) = (term910 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567603 _107705 A _54416 t) (@lem4567607 _107705 A _54416 t)). Qed.
Lemma lem4567609 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((term891 _107705 A _54416 t) = (term892 _107705 A _54416 t)) = ((term890 _107705 A _54416 t) = (term910 _107705 A _54416 t)).
Proof. exact (MK_COMB (@lem4567597 _107705 A _54416 t) (@lem4567608 _107705 A _54416 t)). Qed.
Lemma lem4567610 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term890 _107705 A _54416 t) = (term910 _107705 A _54416 t).
Proof. exact (EQ_MP (@lem4567609 _107705 A _54416 t) (@lem4567587 _107705 A _54416 t)). Qed.
Lemma lem4567747 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term842 _107705 A _54416 t) = (term910 _107705 A _54416 t).
Proof. exact (TRANS (@lem4567583 _107705 A _54416 t) (@lem4567610 _107705 A _54416 t)). Qed.
Lemma lem4567748 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term843 _107705 A _54416) = (term911 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4567747 _107705 A _54416 t)). Qed.
Lemma lem4567749 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4567750 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term844 _107705 A _54416) = (term912 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567749 _107705) (@lem4567748 _107705 A _54416)). Qed.
Lemma lem4567752 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4567753 {_107705 : Type'} (P : type686 _107705) (Q : type686 _107705) : (term639 _107705 P Q) = (term640 _107705 P Q).
Proof. exact (@lem4567752 (_107705 -> Prop) P Q). Qed.
Lemma lem4567754 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term913 _107705 A _54416) = (term914 _107705 A _54416).
Proof. exact (@lem4567753 _107705 (term915 _107705 A _54416) (term916 _107705 A _54416)). Qed.
Lemma lem4567755 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term917 _107705 A _54416 t) = (term904 _107705 A _54416 t).
Proof. exact (eq_refl (term917 _107705 A _54416 t)). Qed.
Lemma lem4567756 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567757 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term918 _107705 A _54416 t) = (term906 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567756) (@lem4567755 _107705 A _54416 t)). Qed.
Lemma lem4567758 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term919 _107705 A _54416 t) = (term909 _107705 A _54416 t).
Proof. exact (eq_refl (term919 _107705 A _54416 t)). Qed.
Lemma lem4567759 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term920 _107705 A _54416 t) = (term910 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4567757 _107705 A _54416 t) (@lem4567758 _107705 A _54416 t)). Qed.
Lemma lem4567760 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term921 _107705 A _54416) = (term911 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4567759 _107705 A _54416 t)). Qed.
Lemma lem4567761 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4567762 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term913 _107705 A _54416) = (term912 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567761 _107705) (@lem4567760 _107705 A _54416)). Qed.
Lemma lem4567763 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567764 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term922 _107705 A _54416) = (term923 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567763) (@lem4567762 _107705 A _54416)). Qed.
Lemma lem4567765 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term917 _107705 A _54416 t) = (term904 _107705 A _54416 t).
Proof. exact (eq_refl (term917 _107705 A _54416 t)). Qed.
Lemma lem4567766 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term924 _107705 A _54416) = (term915 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4567765 _107705 A _54416 t)). Qed.
Lemma lem4567767 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4567768 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term925 _107705 A _54416) = (term926 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567767 _107705) (@lem4567766 _107705 A _54416)). Qed.
Lemma lem4567769 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4567770 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term927 _107705 A _54416) = (term928 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567769) (@lem4567768 _107705 A _54416)). Qed.
Lemma lem4567771 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term919 _107705 A _54416 t) = (term909 _107705 A _54416 t).
Proof. exact (eq_refl (term919 _107705 A _54416 t)). Qed.
Lemma lem4567772 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term929 _107705 A _54416) = (term916 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4567771 _107705 A _54416 t)). Qed.
Lemma lem4567773 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4567774 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term930 _107705 A _54416) = (term931 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567773 _107705) (@lem4567772 _107705 A _54416)). Qed.
Lemma lem4567775 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term914 _107705 A _54416) = (term932 _107705 A _54416).
Proof. exact (MK_COMB (@lem4567770 _107705 A _54416) (@lem4567774 _107705 A _54416)). Qed.
Lemma lem4567776 {_107705 A : Type'} (_54416 : type656 _107705 A) : ((term913 _107705 A _54416) = (term914 _107705 A _54416)) = ((term912 _107705 A _54416) = (term932 _107705 A _54416)).
Proof. exact (MK_COMB (@lem4567764 _107705 A _54416) (@lem4567775 _107705 A _54416)). Qed.
Lemma lem4567777 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term912 _107705 A _54416) = (term932 _107705 A _54416).
Proof. exact (EQ_MP (@lem4567776 _107705 A _54416) (@lem4567754 _107705 A _54416)). Qed.
Lemma lem4567922 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term844 _107705 A _54416) = (term932 _107705 A _54416).
Proof. exact (TRANS (@lem4567750 _107705 A _54416) (@lem4567777 _107705 A _54416)). Qed.
Lemma lem4567924 {A : Type'} (P : Prop) (Q : A -> Prop) : (term683 A P Q) = (term684 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4567925 {_107705 A : Type'} (P : Prop) (Q : type805 _107705 A) : (term933 _107705 A P Q) = (term934 _107705 A P Q).
Proof. exact (@lem4567924 (A -> _107705) P Q). Qed.
Lemma lem4567926 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term935 _107705 A _54416 GEN_PVAR_148 t s d) = (term936 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (@lem4567925 _107705 A (term937 _107705 A _54416 t s d GEN_PVAR_148) (term110 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567927 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term822 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term822 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567928 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term938 _107705 A GEN_PVAR_148 t s d) = (term110 _107705 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4567927 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567929 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4567930 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term939 _107705 A GEN_PVAR_148 t s d) = (term111 _107705 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567929 _107705 A) (@lem4567928 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567931 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term828 _107705 A _54416 t s d GEN_PVAR_148) = (term828 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term828 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567932 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term935 _107705 A _54416 GEN_PVAR_148 t s d) = (term829 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567931 _107705 A _54416 t s d GEN_PVAR_148) (@lem4567930 _107705 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4567933 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567934 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term940 _107705 A _54416 GEN_PVAR_148 t s d) = (term941 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567933) (@lem4567932 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567935 {_107705 A : Type'} (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term822 _107705 A GEN_PVAR_148 t s d f) = (term109 _107705 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term822 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567936 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (GEN_PVAR_148 : A -> _107705) : (term828 _107705 A _54416 t s d GEN_PVAR_148) = (term828 _107705 A _54416 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term828 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567937 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term942 _107705 A _54416 GEN_PVAR_148 t s d f) = (term943 _107705 A _54416 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4567936 _107705 A _54416 t s d GEN_PVAR_148) (@lem4567935 _107705 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567938 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term944 _107705 A _54416 GEN_PVAR_148 t s d) = (term945 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4567937 _107705 A _54416 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567939 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4567940 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term936 _107705 A _54416 GEN_PVAR_148 t s d) = (term946 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567939 _107705 A) (@lem4567938 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567941 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((term935 _107705 A _54416 GEN_PVAR_148 t s d) = (term936 _107705 A _54416 GEN_PVAR_148 t s d)) = ((term829 _107705 A _54416 GEN_PVAR_148 t s d) = (term946 _107705 A _54416 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4567934 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567940 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567942 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term829 _107705 A _54416 GEN_PVAR_148 t s d) = (term946 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4567941 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567926 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567943 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term850 _107705 A _54416 t s d) = (term947 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567942 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567944 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567945 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term865 _107705 A _54416 t s d) = (term948 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567944 _107705 A) (@lem4567943 _107705 A _54416 t s d)). Qed.
Lemma lem4567947 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4567948 {_107705 A : Type'} (P : type786 _107705 A) : (term949 _107705 A P) = (term950 _107705 A P).
Proof. exact (@lem4567947 (A -> _107705) (A -> _107705) P). Qed.
Lemma lem4567949 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term951 _107705 A _54416 t s d) = (term952 _107705 A _54416 t s d).
Proof. exact (@lem4567948 _107705 A (term953 _107705 A _54416 t s d)). Qed.
Lemma lem4567950 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term954 _107705 A _54416 t s d GEN_PVAR_148) = (term945 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term954 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567951 {_107705 A : Type'} (f : A -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4567952 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term955 _107705 A _54416 t s d GEN_PVAR_148 f) = (term956 _107705 A _54416 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4567950 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567951 _107705 A f)). Qed.
Lemma lem4567953 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term956 _107705 A _54416 GEN_PVAR_148 t s d f) = (term943 _107705 A _54416 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term956 _107705 A _54416 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567954 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : A -> _107705) : (term955 _107705 A _54416 t s d GEN_PVAR_148 f) = (term943 _107705 A _54416 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4567952 _107705 A _54416 GEN_PVAR_148 t s d f) (@lem4567953 _107705 A _54416 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567955 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term957 _107705 A _54416 t s d GEN_PVAR_148) = (term945 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107705 => @lem4567954 _107705 A _54416 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4567956 {_107705 A : Type'} : (@ex (A -> _107705)) = (@ex (A -> _107705)).
Proof. exact (eq_refl (@ex (A -> _107705))). Qed.
Lemma lem4567957 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term958 _107705 A _54416 t s d GEN_PVAR_148) = (term946 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4567956 _107705 A) (@lem4567955 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567958 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term959 _107705 A _54416 t s d) = (term947 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567957 _107705 A _54416 GEN_PVAR_148 t s d)). Qed.
Lemma lem4567959 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567960 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term951 _107705 A _54416 t s d) = (term948 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567959 _107705 A) (@lem4567958 _107705 A _54416 t s d)). Qed.
Lemma lem4567961 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567962 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term960 _107705 A _54416 t s d) = (term961 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567961) (@lem4567960 _107705 A _54416 t s d)). Qed.
Lemma lem4567963 {_107705 A : Type'} (_54416 : type656 _107705 A) (GEN_PVAR_148 : A -> _107705) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term954 _107705 A _54416 t s d GEN_PVAR_148) = (term945 _107705 A _54416 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term954 _107705 A _54416 t s d GEN_PVAR_148)). Qed.
Lemma lem4567964 {_107705 A : Type'} (f : type796 _107705 A) (GEN_PVAR_148 : A -> _107705) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4567965 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) (GEN_PVAR_148 : A -> _107705) : (term962 _107705 A _54416 t s d f GEN_PVAR_148) = (term963 _107705 A _54416 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4567963 _107705 A _54416 GEN_PVAR_148 t s d) (@lem4567964 _107705 A f GEN_PVAR_148)). Qed.
Lemma lem4567966 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) (GEN_PVAR_148 : A -> _107705) : (term963 _107705 A _54416 t s d f GEN_PVAR_148) = (term964 _107705 A _54416 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term963 _107705 A _54416 t s d f GEN_PVAR_148)). Qed.
Lemma lem4567967 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) (GEN_PVAR_148 : A -> _107705) : (term962 _107705 A _54416 t s d f GEN_PVAR_148) = (term964 _107705 A _54416 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4567965 _107705 A _54416 t s d f GEN_PVAR_148) (@lem4567966 _107705 A _54416 t s d f GEN_PVAR_148)). Qed.
Lemma lem4567968 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) : (term965 _107705 A _54416 t s d f) = (term966 _107705 A _54416 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107705 => @lem4567967 _107705 A _54416 t s d f GEN_PVAR_148)). Qed.
Lemma lem4567969 {_107705 A : Type'} : (@all (A -> _107705)) = (@all (A -> _107705)).
Proof. exact (eq_refl (@all (A -> _107705))). Qed.
Lemma lem4567970 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) : (term967 _107705 A _54416 t s d f) = (term968 _107705 A _54416 t s d f).
Proof. exact (MK_COMB (@lem4567969 _107705 A) (@lem4567968 _107705 A _54416 t s d f)). Qed.
Lemma lem4567971 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term969 _107705 A _54416 t s d) = (term970 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun f : type796 _107705 A => @lem4567970 _107705 A _54416 t s d f)). Qed.
Lemma lem4567972 {_107705 A : Type'} : (@ex ((A -> _107705) -> A -> _107705)) = (@ex ((A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((A -> _107705) -> A -> _107705))). Qed.
Lemma lem4567973 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term952 _107705 A _54416 t s d) = (term971 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567972 _107705 A) (@lem4567971 _107705 A _54416 t s d)). Qed.
Lemma lem4567974 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : ((term951 _107705 A _54416 t s d) = (term952 _107705 A _54416 t s d)) = ((term948 _107705 A _54416 t s d) = (term971 _107705 A _54416 t s d)).
Proof. exact (MK_COMB (@lem4567962 _107705 A _54416 t s d) (@lem4567973 _107705 A _54416 t s d)). Qed.
Lemma lem4567975 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term948 _107705 A _54416 t s d) = (term971 _107705 A _54416 t s d).
Proof. exact (EQ_MP (@lem4567974 _107705 A _54416 t s d) (@lem4567949 _107705 A _54416 t s d)). Qed.
Lemma lem4567976 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term865 _107705 A _54416 t s d) = (term971 _107705 A _54416 t s d).
Proof. exact (TRANS (@lem4567945 _107705 A _54416 t s d) (@lem4567975 _107705 A _54416 t s d)). Qed.
Lemma lem4567977 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term872 _107705 A _54416 t s) = (term972 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567976 _107705 A _54416 t s d)). Qed.
Lemma lem4567978 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567979 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term887 _107705 A _54416 t s) = (term973 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567978 _107705) (@lem4567977 _107705 A _54416 t s)). Qed.
Lemma lem4567981 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4567982 {_107705 A : Type'} (P : type1357 _107705 A) : (term974 _107705 A P) = (term975 _107705 A P).
Proof. exact (@lem4567981 _107705 (type796 _107705 A) P). Qed.
Lemma lem4567983 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term976 _107705 A _54416 t s) = (term977 _107705 A _54416 t s).
Proof. exact (@lem4567982 _107705 A (term978 _107705 A _54416 t s)). Qed.
Lemma lem4567984 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term979 _107705 A _54416 t s d) = (term970 _107705 A _54416 t s d).
Proof. exact (eq_refl (term979 _107705 A _54416 t s d)). Qed.
Lemma lem4567985 {_107705 A : Type'} (f : type796 _107705 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4567986 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) : (term980 _107705 A _54416 t s d f) = (term981 _107705 A _54416 t s d f).
Proof. exact (MK_COMB (@lem4567984 _107705 A _54416 t s d) (@lem4567985 _107705 A f)). Qed.
Lemma lem4567987 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) : (term981 _107705 A _54416 t s d f) = (term968 _107705 A _54416 t s d f).
Proof. exact (eq_refl (term981 _107705 A _54416 t s d f)). Qed.
Lemma lem4567988 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) (f : type796 _107705 A) : (term980 _107705 A _54416 t s d f) = (term968 _107705 A _54416 t s d f).
Proof. exact (TRANS (@lem4567986 _107705 A _54416 t s d f) (@lem4567987 _107705 A _54416 t s d f)). Qed.
Lemma lem4567989 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term982 _107705 A _54416 t s d) = (term970 _107705 A _54416 t s d).
Proof. exact (fun_ext (fun f : type796 _107705 A => @lem4567988 _107705 A _54416 t s d f)). Qed.
Lemma lem4567990 {_107705 A : Type'} : (@ex ((A -> _107705) -> A -> _107705)) = (@ex ((A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((A -> _107705) -> A -> _107705))). Qed.
Lemma lem4567991 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term983 _107705 A _54416 t s d) = (term971 _107705 A _54416 t s d).
Proof. exact (MK_COMB (@lem4567990 _107705 A) (@lem4567989 _107705 A _54416 t s d)). Qed.
Lemma lem4567992 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term984 _107705 A _54416 t s) = (term972 _107705 A _54416 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4567991 _107705 A _54416 t s d)). Qed.
Lemma lem4567993 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4567994 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term976 _107705 A _54416 t s) = (term973 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567993 _107705) (@lem4567992 _107705 A _54416 t s)). Qed.
Lemma lem4567995 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4567996 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term985 _107705 A _54416 t s) = (term986 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4567995) (@lem4567994 _107705 A _54416 t s)). Qed.
Lemma lem4567997 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (d : _107705) : (term979 _107705 A _54416 t s d) = (term970 _107705 A _54416 t s d).
Proof. exact (eq_refl (term979 _107705 A _54416 t s d)). Qed.
Lemma lem4567998 {_107705 A : Type'} (f : type1371 _107705 A) (d : _107705) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4567999 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) (d : _107705) : (term987 _107705 A _54416 t s f d) = (term988 _107705 A _54416 t s f d).
Proof. exact (MK_COMB (@lem4567997 _107705 A _54416 t s d) (@lem4567998 _107705 A f d)). Qed.
Lemma lem4568000 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) (d : _107705) : (term988 _107705 A _54416 t s f d) = (term989 _107705 A _54416 t s f d).
Proof. exact (eq_refl (term988 _107705 A _54416 t s f d)). Qed.
Lemma lem4568001 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) (d : _107705) : (term987 _107705 A _54416 t s f d) = (term989 _107705 A _54416 t s f d).
Proof. exact (TRANS (@lem4567999 _107705 A _54416 t s f d) (@lem4568000 _107705 A _54416 t s f d)). Qed.
Lemma lem4568002 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) : (term990 _107705 A _54416 t s f) = (term991 _107705 A _54416 t s f).
Proof. exact (fun_ext (fun d : _107705 => @lem4568001 _107705 A _54416 t s f d)). Qed.
Lemma lem4568003 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568004 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) : (term992 _107705 A _54416 t s f) = (term993 _107705 A _54416 t s f).
Proof. exact (MK_COMB (@lem4568003 _107705) (@lem4568002 _107705 A _54416 t s f)). Qed.
Lemma lem4568005 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term994 _107705 A _54416 t s) = (term995 _107705 A _54416 t s).
Proof. exact (fun_ext (fun f : type1371 _107705 A => @lem4568004 _107705 A _54416 t s f)). Qed.
Lemma lem4568006 {_107705 A : Type'} : (@ex (_107705 -> (A -> _107705) -> A -> _107705)) = (@ex (_107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex (_107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568007 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term977 _107705 A _54416 t s) = (term996 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4568006 _107705 A) (@lem4568005 _107705 A _54416 t s)). Qed.
Lemma lem4568008 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : ((term976 _107705 A _54416 t s) = (term977 _107705 A _54416 t s)) = ((term973 _107705 A _54416 t s) = (term996 _107705 A _54416 t s)).
Proof. exact (MK_COMB (@lem4567996 _107705 A _54416 t s) (@lem4568007 _107705 A _54416 t s)). Qed.
Lemma lem4568009 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term973 _107705 A _54416 t s) = (term996 _107705 A _54416 t s).
Proof. exact (EQ_MP (@lem4568008 _107705 A _54416 t s) (@lem4567983 _107705 A _54416 t s)). Qed.
Lemma lem4568010 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term887 _107705 A _54416 t s) = (term996 _107705 A _54416 t s).
Proof. exact (TRANS (@lem4567979 _107705 A _54416 t s) (@lem4568009 _107705 A _54416 t s)). Qed.
Lemma lem4568011 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term894 _107705 A _54416 t) = (term997 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4568010 _107705 A _54416 t s)). Qed.
Lemma lem4568012 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4568013 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term909 _107705 A _54416 t) = (term998 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4568012 A) (@lem4568011 _107705 A _54416 t)). Qed.
Lemma lem4568015 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4568016 {_107705 A : Type'} (P : type829 _107705 A) : (term999 _107705 A P) = (term1000 _107705 A P).
Proof. exact (@lem4568015 (A -> Prop) (type1371 _107705 A) P). Qed.
Lemma lem4568017 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1001 _107705 A _54416 t) = (term1002 _107705 A _54416 t).
Proof. exact (@lem4568016 _107705 A (term1003 _107705 A _54416 t)). Qed.
Lemma lem4568018 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term1004 _107705 A _54416 t s) = (term995 _107705 A _54416 t s).
Proof. exact (eq_refl (term1004 _107705 A _54416 t s)). Qed.
Lemma lem4568019 {_107705 A : Type'} (f : type1371 _107705 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4568020 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) : (term1005 _107705 A _54416 t s f) = (term1006 _107705 A _54416 t s f).
Proof. exact (MK_COMB (@lem4568018 _107705 A _54416 t s) (@lem4568019 _107705 A f)). Qed.
Lemma lem4568021 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) : (term1006 _107705 A _54416 t s f) = (term993 _107705 A _54416 t s f).
Proof. exact (eq_refl (term1006 _107705 A _54416 t s f)). Qed.
Lemma lem4568022 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) (f : type1371 _107705 A) : (term1005 _107705 A _54416 t s f) = (term993 _107705 A _54416 t s f).
Proof. exact (TRANS (@lem4568020 _107705 A _54416 t s f) (@lem4568021 _107705 A _54416 t s f)). Qed.
Lemma lem4568023 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term1007 _107705 A _54416 t s) = (term995 _107705 A _54416 t s).
Proof. exact (fun_ext (fun f : type1371 _107705 A => @lem4568022 _107705 A _54416 t s f)). Qed.
Lemma lem4568024 {_107705 A : Type'} : (@ex (_107705 -> (A -> _107705) -> A -> _107705)) = (@ex (_107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex (_107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568025 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term1008 _107705 A _54416 t s) = (term996 _107705 A _54416 t s).
Proof. exact (MK_COMB (@lem4568024 _107705 A) (@lem4568023 _107705 A _54416 t s)). Qed.
Lemma lem4568026 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1009 _107705 A _54416 t) = (term997 _107705 A _54416 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4568025 _107705 A _54416 t s)). Qed.
Lemma lem4568027 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4568028 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1001 _107705 A _54416 t) = (term998 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4568027 A) (@lem4568026 _107705 A _54416 t)). Qed.
Lemma lem4568029 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568030 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1010 _107705 A _54416 t) = (term1011 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4568029) (@lem4568028 _107705 A _54416 t)). Qed.
Lemma lem4568031 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (s : A -> Prop) : (term1004 _107705 A _54416 t s) = (term995 _107705 A _54416 t s).
Proof. exact (eq_refl (term1004 _107705 A _54416 t s)). Qed.
Lemma lem4568032 {_107705 A : Type'} (f : type858 _107705 A) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4568033 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) (s : A -> Prop) : (term1012 _107705 A _54416 t f s) = (term1013 _107705 A _54416 t f s).
Proof. exact (MK_COMB (@lem4568031 _107705 A _54416 t s) (@lem4568032 _107705 A f s)). Qed.
Lemma lem4568034 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) (s : A -> Prop) : (term1013 _107705 A _54416 t f s) = (term1014 _107705 A _54416 t f s).
Proof. exact (eq_refl (term1013 _107705 A _54416 t f s)). Qed.
Lemma lem4568035 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) (s : A -> Prop) : (term1012 _107705 A _54416 t f s) = (term1014 _107705 A _54416 t f s).
Proof. exact (TRANS (@lem4568033 _107705 A _54416 t f s) (@lem4568034 _107705 A _54416 t f s)). Qed.
Lemma lem4568036 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) : (term1015 _107705 A _54416 t f) = (term1016 _107705 A _54416 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4568035 _107705 A _54416 t f s)). Qed.
Lemma lem4568037 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4568038 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) : (term1017 _107705 A _54416 t f) = (term1018 _107705 A _54416 t f).
Proof. exact (MK_COMB (@lem4568037 A) (@lem4568036 _107705 A _54416 t f)). Qed.
Lemma lem4568039 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1019 _107705 A _54416 t) = (term1020 _107705 A _54416 t).
Proof. exact (fun_ext (fun f : type858 _107705 A => @lem4568038 _107705 A _54416 t f)). Qed.
Lemma lem4568040 {_107705 A : Type'} : (@ex ((A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)) = (@ex ((A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568041 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1002 _107705 A _54416 t) = (term1021 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4568040 _107705 A) (@lem4568039 _107705 A _54416 t)). Qed.
Lemma lem4568042 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : ((term1001 _107705 A _54416 t) = (term1002 _107705 A _54416 t)) = ((term998 _107705 A _54416 t) = (term1021 _107705 A _54416 t)).
Proof. exact (MK_COMB (@lem4568030 _107705 A _54416 t) (@lem4568041 _107705 A _54416 t)). Qed.
Lemma lem4568043 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term998 _107705 A _54416 t) = (term1021 _107705 A _54416 t).
Proof. exact (EQ_MP (@lem4568042 _107705 A _54416 t) (@lem4568017 _107705 A _54416 t)). Qed.
Lemma lem4568044 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term909 _107705 A _54416 t) = (term1021 _107705 A _54416 t).
Proof. exact (TRANS (@lem4568013 _107705 A _54416 t) (@lem4568043 _107705 A _54416 t)). Qed.
Lemma lem4568045 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term916 _107705 A _54416) = (term1022 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568044 _107705 A _54416 t)). Qed.
Lemma lem4568046 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568047 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term931 _107705 A _54416) = (term1023 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568046 _107705) (@lem4568045 _107705 A _54416)). Qed.
Lemma lem4568049 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4568050 {_107705 A : Type'} (P : type606 _107705 A) : (term1024 _107705 A P) = (term1025 _107705 A P).
Proof. exact (@lem4568049 (_107705 -> Prop) (type858 _107705 A) P). Qed.
Lemma lem4568051 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1026 _107705 A _54416) = (term1027 _107705 A _54416).
Proof. exact (@lem4568050 _107705 A (term1028 _107705 A _54416)). Qed.
Lemma lem4568052 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1029 _107705 A _54416 t) = (term1020 _107705 A _54416 t).
Proof. exact (eq_refl (term1029 _107705 A _54416 t)). Qed.
Lemma lem4568053 {_107705 A : Type'} (f : type858 _107705 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4568054 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) : (term1030 _107705 A _54416 t f) = (term1031 _107705 A _54416 t f).
Proof. exact (MK_COMB (@lem4568052 _107705 A _54416 t) (@lem4568053 _107705 A f)). Qed.
Lemma lem4568055 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) : (term1031 _107705 A _54416 t f) = (term1018 _107705 A _54416 t f).
Proof. exact (eq_refl (term1031 _107705 A _54416 t f)). Qed.
Lemma lem4568056 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) (f : type858 _107705 A) : (term1030 _107705 A _54416 t f) = (term1018 _107705 A _54416 t f).
Proof. exact (TRANS (@lem4568054 _107705 A _54416 t f) (@lem4568055 _107705 A _54416 t f)). Qed.
Lemma lem4568057 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1032 _107705 A _54416 t) = (term1020 _107705 A _54416 t).
Proof. exact (fun_ext (fun f : type858 _107705 A => @lem4568056 _107705 A _54416 t f)). Qed.
Lemma lem4568058 {_107705 A : Type'} : (@ex ((A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)) = (@ex ((A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568059 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1033 _107705 A _54416 t) = (term1021 _107705 A _54416 t).
Proof. exact (MK_COMB (@lem4568058 _107705 A) (@lem4568057 _107705 A _54416 t)). Qed.
Lemma lem4568060 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1034 _107705 A _54416) = (term1022 _107705 A _54416).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568059 _107705 A _54416 t)). Qed.
Lemma lem4568061 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568062 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1026 _107705 A _54416) = (term1023 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568061 _107705) (@lem4568060 _107705 A _54416)). Qed.
Lemma lem4568063 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568064 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1035 _107705 A _54416) = (term1036 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568063) (@lem4568062 _107705 A _54416)). Qed.
Lemma lem4568065 {_107705 A : Type'} (_54416 : type656 _107705 A) (t : _107705 -> Prop) : (term1029 _107705 A _54416 t) = (term1020 _107705 A _54416 t).
Proof. exact (eq_refl (term1029 _107705 A _54416 t)). Qed.
Lemma lem4568066 {_107705 A : Type'} (f : type655 _107705 A) (t : _107705 -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4568067 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) (t : _107705 -> Prop) : (term1037 _107705 A _54416 f t) = (term1038 _107705 A _54416 f t).
Proof. exact (MK_COMB (@lem4568065 _107705 A _54416 t) (@lem4568066 _107705 A f t)). Qed.
Lemma lem4568068 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) (t : _107705 -> Prop) : (term1038 _107705 A _54416 f t) = (term1039 _107705 A _54416 f t).
Proof. exact (eq_refl (term1038 _107705 A _54416 f t)). Qed.
Lemma lem4568069 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) (t : _107705 -> Prop) : (term1037 _107705 A _54416 f t) = (term1039 _107705 A _54416 f t).
Proof. exact (TRANS (@lem4568067 _107705 A _54416 f t) (@lem4568068 _107705 A _54416 f t)). Qed.
Lemma lem4568070 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) : (term1040 _107705 A _54416 f) = (term1041 _107705 A _54416 f).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568069 _107705 A _54416 f t)). Qed.
Lemma lem4568071 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568072 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) : (term1042 _107705 A _54416 f) = (term1043 _107705 A _54416 f).
Proof. exact (MK_COMB (@lem4568071 _107705) (@lem4568070 _107705 A _54416 f)). Qed.
Lemma lem4568073 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1044 _107705 A _54416) = (term1045 _107705 A _54416).
Proof. exact (fun_ext (fun f : type655 _107705 A => @lem4568072 _107705 A _54416 f)). Qed.
Lemma lem4568074 {_107705 A : Type'} : (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)) = (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568075 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1027 _107705 A _54416) = (term1046 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568074 _107705 A) (@lem4568073 _107705 A _54416)). Qed.
Lemma lem4568076 {_107705 A : Type'} (_54416 : type656 _107705 A) : ((term1026 _107705 A _54416) = (term1027 _107705 A _54416)) = ((term1023 _107705 A _54416) = (term1046 _107705 A _54416)).
Proof. exact (MK_COMB (@lem4568064 _107705 A _54416) (@lem4568075 _107705 A _54416)). Qed.
Lemma lem4568077 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1023 _107705 A _54416) = (term1046 _107705 A _54416).
Proof. exact (EQ_MP (@lem4568076 _107705 A _54416) (@lem4568051 _107705 A _54416)). Qed.
Lemma lem4568078 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term931 _107705 A _54416) = (term1046 _107705 A _54416).
Proof. exact (TRANS (@lem4568047 _107705 A _54416) (@lem4568077 _107705 A _54416)). Qed.
Lemma lem4568079 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term928 _107705 A _54416) = (term928 _107705 A _54416).
Proof. exact (eq_refl (term928 _107705 A _54416)). Qed.
Lemma lem4568080 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term932 _107705 A _54416) = (term1047 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568079 _107705 A _54416) (@lem4568078 _107705 A _54416)). Qed.
Lemma lem4568082 {A : Type'} (P : Prop) (Q : A -> Prop) : (term802 A P Q) = (term803 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4568083 {_107705 A : Type'} (P : Prop) (Q : type146 _107705 A) : (term1048 _107705 A P Q) = (term1049 _107705 A P Q).
Proof. exact (@lem4568082 (type655 _107705 A) P Q). Qed.
Lemma lem4568084 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1050 _107705 A _54416) = (term1051 _107705 A _54416).
Proof. exact (@lem4568083 _107705 A (term926 _107705 A _54416) (term1045 _107705 A _54416)). Qed.
Lemma lem4568085 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) : (term1052 _107705 A _54416 f) = (term1043 _107705 A _54416 f).
Proof. exact (eq_refl (term1052 _107705 A _54416 f)). Qed.
Lemma lem4568086 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1053 _107705 A _54416) = (term1045 _107705 A _54416).
Proof. exact (fun_ext (fun f : type655 _107705 A => @lem4568085 _107705 A _54416 f)). Qed.
Lemma lem4568087 {_107705 A : Type'} : (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)) = (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568088 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1054 _107705 A _54416) = (term1046 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568087 _107705 A) (@lem4568086 _107705 A _54416)). Qed.
Lemma lem4568089 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term928 _107705 A _54416) = (term928 _107705 A _54416).
Proof. exact (eq_refl (term928 _107705 A _54416)). Qed.
Lemma lem4568090 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1050 _107705 A _54416) = (term1047 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568089 _107705 A _54416) (@lem4568088 _107705 A _54416)). Qed.
Lemma lem4568091 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568092 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1055 _107705 A _54416) = (term1056 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568091) (@lem4568090 _107705 A _54416)). Qed.
Lemma lem4568093 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) : (term1052 _107705 A _54416 f) = (term1043 _107705 A _54416 f).
Proof. exact (eq_refl (term1052 _107705 A _54416 f)). Qed.
Lemma lem4568094 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term928 _107705 A _54416) = (term928 _107705 A _54416).
Proof. exact (eq_refl (term928 _107705 A _54416)). Qed.
Lemma lem4568095 {_107705 A : Type'} (_54416 : type656 _107705 A) (f : type655 _107705 A) : (term1057 _107705 A _54416 f) = (term1058 _107705 A _54416 f).
Proof. exact (MK_COMB (@lem4568094 _107705 A _54416) (@lem4568093 _107705 A _54416 f)). Qed.
Lemma lem4568096 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1059 _107705 A _54416) = (term1060 _107705 A _54416).
Proof. exact (fun_ext (fun f : type655 _107705 A => @lem4568095 _107705 A _54416 f)). Qed.
Lemma lem4568097 {_107705 A : Type'} : (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)) = (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> (A -> Prop) -> _107705 -> (A -> _107705) -> A -> _107705))). Qed.
Lemma lem4568098 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1051 _107705 A _54416) = (term1061 _107705 A _54416).
Proof. exact (MK_COMB (@lem4568097 _107705 A) (@lem4568096 _107705 A _54416)). Qed.
Lemma lem4568099 {_107705 A : Type'} (_54416 : type656 _107705 A) : ((term1050 _107705 A _54416) = (term1051 _107705 A _54416)) = ((term1047 _107705 A _54416) = (term1061 _107705 A _54416)).
Proof. exact (MK_COMB (@lem4568092 _107705 A _54416) (@lem4568098 _107705 A _54416)). Qed.
Lemma lem4568100 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term1047 _107705 A _54416) = (term1061 _107705 A _54416).
Proof. exact (EQ_MP (@lem4568099 _107705 A _54416) (@lem4568084 _107705 A _54416)). Qed.
Lemma lem4568101 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term932 _107705 A _54416) = (term1061 _107705 A _54416).
Proof. exact (TRANS (@lem4568080 _107705 A _54416) (@lem4568100 _107705 A _54416)). Qed.
Lemma lem4568102 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term844 _107705 A _54416) = (term1061 _107705 A _54416).
Proof. exact (TRANS (@lem4567922 _107705 A _54416) (@lem4568101 _107705 A _54416)). Qed.
Lemma lem4568103 {_107705 A : Type'} (_54416 : type656 _107705 A) : (term248 _107705 A _54416) = (term1061 _107705 A _54416).
Proof. exact (TRANS (@lem4567262 _107705 A _54416) (@lem4568102 _107705 A _54416)). Qed.
Lemma lem4568104 {_107705 A : Type'} (_54416 : type656 _107705 A) (h1 : term248 _107705 A _54416) : term1061 _107705 A _54416.
Proof. exact (EQ_MP (@lem4568103 _107705 A _54416) (@lem4563676 _107705 A _54416 h1)). Qed.
Lemma lem4568108 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term109 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (eq_refl (term109 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568109 {_107705 _107708 : Type'} (P : type805 _107705 _107708) : (term818 _107705 _107708 P) = (term819 _107705 _107708 P).
Proof. exact (@lem18394 (_107708 -> _107705) P). Qed.
Lemma lem4568110 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term820 _107705 _107708 GEN_PVAR_150 t s d) = (term821 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (@lem4568109 _107705 _107708 (term110 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568111 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term822 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (eq_refl (term822 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568112 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4568114 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term823 _107705 _107708 GEN_PVAR_150 t s d f) = (term824 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4568112) (@lem4568111 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568115 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term825 _107705 _107708 GEN_PVAR_150 t s d) = (term826 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4568114 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568116 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568117 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term821 _107705 _107708 GEN_PVAR_150 t s d) = (term827 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568116 _107705 _107708) (@lem4568115 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568118 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term820 _107705 _107708 GEN_PVAR_150 t s d) = (term827 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (TRANS (@lem4568110 _107705 _107708 GEN_PVAR_150 t s d) (@lem4568117 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568119 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term110 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4568108 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568120 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4568121 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term111 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568120 _107705 _107708) (@lem4568119 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568123 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term828 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term828 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term828 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568124 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term829 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term829 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568123 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4568121 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568126 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term830 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term830 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term830 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568127 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term831 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term832 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568126 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4568118 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568128 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568129 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term833 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term834 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568128) (@lem4568127 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568130 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term835 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term836 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568129 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568124 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568131 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = (term835 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (@lem17784 (_54415 t s d GEN_PVAR_150) (term111 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568132 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((_54415 t s d GEN_PVAR_150) = (term111 _107705 _107708 GEN_PVAR_150 t s d)) = (term836 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (TRANS (@lem4568131 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568130 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568133 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term241 _107705 _107708 _54415 t s d) = (term837 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568132 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568134 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568135 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term242 _107705 _107708 _54415 t s d) = (term838 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568134 _107705 _107708) (@lem4568133 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568136 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term243 _107705 _107708 _54415 t s) = (term839 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568135 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568137 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568138 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term244 _107705 _107708 _54415 t s) = (term840 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568137 _107705) (@lem4568136 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568139 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term245 _107705 _107708 _54415 t) = (term841 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568138 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568140 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568141 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term246 _107705 _107708 _54415 t) = (term842 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568140 _107708) (@lem4568139 _107705 _107708 _54415 t)). Qed.
Lemma lem4568142 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term247 _107705 _107708 _54415) = (term843 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568141 _107705 _107708 _54415 t)). Qed.
Lemma lem4568143 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568144 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term844 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568143 _107705) (@lem4568142 _107705 _107708 _54415)). Qed.
Lemma lem4568158 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4568159 {_107705 _107708 : Type'} (P : type805 _107705 _107708) (Q : type805 _107705 _107708) : (term845 _107705 _107708 P Q) = (term846 _107705 _107708 P Q).
Proof. exact (@lem4568158 (_107708 -> _107705) P Q). Qed.
Lemma lem4568160 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term847 _107705 _107708 _54415 t s d) = (term848 _107705 _107708 _54415 t s d).
Proof. exact (@lem4568159 _107705 _107708 (term849 _107705 _107708 _54415 t s d) (term850 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568161 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term851 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term832 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term851 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568162 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568163 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term852 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term834 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568162) (@lem4568161 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568164 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term853 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term829 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term853 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568165 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term854 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term836 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568163 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568164 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568166 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term855 _107705 _107708 _54415 t s d) = (term837 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568165 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568167 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568168 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term847 _107705 _107708 _54415 t s d) = (term838 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568167 _107705 _107708) (@lem4568166 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568169 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568170 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term856 _107705 _107708 _54415 t s d) = (term857 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568169) (@lem4568168 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568171 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term851 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term832 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term851 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568172 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term858 _107705 _107708 _54415 t s d) = (term849 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568171 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568173 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568174 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term859 _107705 _107708 _54415 t s d) = (term860 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568173 _107705 _107708) (@lem4568172 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568175 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568176 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term861 _107705 _107708 _54415 t s d) = (term862 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568175) (@lem4568174 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568177 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term853 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term829 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term853 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568178 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term863 _107705 _107708 _54415 t s d) = (term850 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568177 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568179 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568180 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term864 _107705 _107708 _54415 t s d) = (term865 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568179 _107705 _107708) (@lem4568178 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568181 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term848 _107705 _107708 _54415 t s d) = (term866 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568176 _107705 _107708 _54415 t s d) (@lem4568180 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568182 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((term847 _107705 _107708 _54415 t s d) = (term848 _107705 _107708 _54415 t s d)) = ((term838 _107705 _107708 _54415 t s d) = (term866 _107705 _107708 _54415 t s d)).
Proof. exact (MK_COMB (@lem4568170 _107705 _107708 _54415 t s d) (@lem4568181 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568183 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term838 _107705 _107708 _54415 t s d) = (term866 _107705 _107708 _54415 t s d).
Proof. exact (EQ_MP (@lem4568182 _107705 _107708 _54415 t s d) (@lem4568160 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568304 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term839 _107705 _107708 _54415 t s) = (term867 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568183 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568305 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568306 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term840 _107705 _107708 _54415 t s) = (term868 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568305 _107705) (@lem4568304 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568308 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4568309 {_107705 : Type'} (P : _107705 -> Prop) (Q : _107705 -> Prop) : (term591 _107705 P Q) = (term592 _107705 P Q).
Proof. exact (@lem4568308 _107705 P Q). Qed.
Lemma lem4568310 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term869 _107705 _107708 _54415 t s) = (term870 _107705 _107708 _54415 t s).
Proof. exact (@lem4568309 _107705 (term871 _107705 _107708 _54415 t s) (term872 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568311 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term873 _107705 _107708 _54415 t s d) = (term860 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term873 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568312 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568313 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term874 _107705 _107708 _54415 t s d) = (term862 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568312) (@lem4568311 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568314 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term875 _107705 _107708 _54415 t s d) = (term865 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term875 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568315 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term876 _107705 _107708 _54415 t s d) = (term866 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568313 _107705 _107708 _54415 t s d) (@lem4568314 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568316 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term877 _107705 _107708 _54415 t s) = (term867 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568315 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568317 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568318 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term869 _107705 _107708 _54415 t s) = (term868 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568317 _107705) (@lem4568316 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568319 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568320 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term878 _107705 _107708 _54415 t s) = (term879 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568319) (@lem4568318 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568321 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term873 _107705 _107708 _54415 t s d) = (term860 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term873 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568322 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term880 _107705 _107708 _54415 t s) = (term871 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568321 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568323 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568324 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term881 _107705 _107708 _54415 t s) = (term882 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568323 _107705) (@lem4568322 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568325 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568326 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term883 _107705 _107708 _54415 t s) = (term884 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568325) (@lem4568324 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568327 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term875 _107705 _107708 _54415 t s d) = (term865 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term875 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568328 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term885 _107705 _107708 _54415 t s) = (term872 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568327 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568329 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568330 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term886 _107705 _107708 _54415 t s) = (term887 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568329 _107705) (@lem4568328 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568331 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term870 _107705 _107708 _54415 t s) = (term888 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568326 _107705 _107708 _54415 t s) (@lem4568330 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568332 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((term869 _107705 _107708 _54415 t s) = (term870 _107705 _107708 _54415 t s)) = ((term868 _107705 _107708 _54415 t s) = (term888 _107705 _107708 _54415 t s)).
Proof. exact (MK_COMB (@lem4568320 _107705 _107708 _54415 t s) (@lem4568331 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568333 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term868 _107705 _107708 _54415 t s) = (term888 _107705 _107708 _54415 t s).
Proof. exact (EQ_MP (@lem4568332 _107705 _107708 _54415 t s) (@lem4568310 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568462 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term840 _107705 _107708 _54415 t s) = (term888 _107705 _107708 _54415 t s).
Proof. exact (TRANS (@lem4568306 _107705 _107708 _54415 t s) (@lem4568333 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568463 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term841 _107705 _107708 _54415 t) = (term889 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568462 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568464 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568465 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term842 _107705 _107708 _54415 t) = (term890 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568464 _107708) (@lem4568463 _107705 _107708 _54415 t)). Qed.
Lemma lem4568467 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4568468 {_107708 : Type'} (P : type686 _107708) (Q : type686 _107708) : (term639 _107708 P Q) = (term640 _107708 P Q).
Proof. exact (@lem4568467 (_107708 -> Prop) P Q). Qed.
Lemma lem4568469 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term891 _107705 _107708 _54415 t) = (term892 _107705 _107708 _54415 t).
Proof. exact (@lem4568468 _107708 (term893 _107705 _107708 _54415 t) (term894 _107705 _107708 _54415 t)). Qed.
Lemma lem4568470 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term895 _107705 _107708 _54415 t s) = (term882 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term895 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568471 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568472 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term896 _107705 _107708 _54415 t s) = (term884 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568471) (@lem4568470 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568473 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term897 _107705 _107708 _54415 t s) = (term887 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term897 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568474 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term898 _107705 _107708 _54415 t s) = (term888 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568472 _107705 _107708 _54415 t s) (@lem4568473 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568475 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term899 _107705 _107708 _54415 t) = (term889 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568474 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568476 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568477 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term891 _107705 _107708 _54415 t) = (term890 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568476 _107708) (@lem4568475 _107705 _107708 _54415 t)). Qed.
Lemma lem4568478 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568479 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term900 _107705 _107708 _54415 t) = (term901 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568478) (@lem4568477 _107705 _107708 _54415 t)). Qed.
Lemma lem4568480 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term895 _107705 _107708 _54415 t s) = (term882 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term895 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568481 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term902 _107705 _107708 _54415 t) = (term893 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568480 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568482 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568483 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term903 _107705 _107708 _54415 t) = (term904 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568482 _107708) (@lem4568481 _107705 _107708 _54415 t)). Qed.
Lemma lem4568484 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568485 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term905 _107705 _107708 _54415 t) = (term906 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568484) (@lem4568483 _107705 _107708 _54415 t)). Qed.
Lemma lem4568486 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term897 _107705 _107708 _54415 t s) = (term887 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term897 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568487 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term907 _107705 _107708 _54415 t) = (term894 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568486 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568488 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568489 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term908 _107705 _107708 _54415 t) = (term909 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568488 _107708) (@lem4568487 _107705 _107708 _54415 t)). Qed.
Lemma lem4568490 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term892 _107705 _107708 _54415 t) = (term910 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568485 _107705 _107708 _54415 t) (@lem4568489 _107705 _107708 _54415 t)). Qed.
Lemma lem4568491 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((term891 _107705 _107708 _54415 t) = (term892 _107705 _107708 _54415 t)) = ((term890 _107705 _107708 _54415 t) = (term910 _107705 _107708 _54415 t)).
Proof. exact (MK_COMB (@lem4568479 _107705 _107708 _54415 t) (@lem4568490 _107705 _107708 _54415 t)). Qed.
Lemma lem4568492 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term890 _107705 _107708 _54415 t) = (term910 _107705 _107708 _54415 t).
Proof. exact (EQ_MP (@lem4568491 _107705 _107708 _54415 t) (@lem4568469 _107705 _107708 _54415 t)). Qed.
Lemma lem4568629 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term842 _107705 _107708 _54415 t) = (term910 _107705 _107708 _54415 t).
Proof. exact (TRANS (@lem4568465 _107705 _107708 _54415 t) (@lem4568492 _107705 _107708 _54415 t)). Qed.
Lemma lem4568630 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term843 _107705 _107708 _54415) = (term911 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568629 _107705 _107708 _54415 t)). Qed.
Lemma lem4568631 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568632 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term844 _107705 _107708 _54415) = (term912 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568631 _107705) (@lem4568630 _107705 _107708 _54415)). Qed.
Lemma lem4568634 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4568635 {_107705 : Type'} (P : type686 _107705) (Q : type686 _107705) : (term639 _107705 P Q) = (term640 _107705 P Q).
Proof. exact (@lem4568634 (_107705 -> Prop) P Q). Qed.
Lemma lem4568636 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term913 _107705 _107708 _54415) = (term914 _107705 _107708 _54415).
Proof. exact (@lem4568635 _107705 (term915 _107705 _107708 _54415) (term916 _107705 _107708 _54415)). Qed.
Lemma lem4568637 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term917 _107705 _107708 _54415 t) = (term904 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term917 _107705 _107708 _54415 t)). Qed.
Lemma lem4568638 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568639 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term918 _107705 _107708 _54415 t) = (term906 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568638) (@lem4568637 _107705 _107708 _54415 t)). Qed.
Lemma lem4568640 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term919 _107705 _107708 _54415 t) = (term909 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term919 _107705 _107708 _54415 t)). Qed.
Lemma lem4568641 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term920 _107705 _107708 _54415 t) = (term910 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568639 _107705 _107708 _54415 t) (@lem4568640 _107705 _107708 _54415 t)). Qed.
Lemma lem4568642 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term921 _107705 _107708 _54415) = (term911 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568641 _107705 _107708 _54415 t)). Qed.
Lemma lem4568643 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568644 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term913 _107705 _107708 _54415) = (term912 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568643 _107705) (@lem4568642 _107705 _107708 _54415)). Qed.
Lemma lem4568645 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568646 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term922 _107705 _107708 _54415) = (term923 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568645) (@lem4568644 _107705 _107708 _54415)). Qed.
Lemma lem4568647 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term917 _107705 _107708 _54415 t) = (term904 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term917 _107705 _107708 _54415 t)). Qed.
Lemma lem4568648 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term924 _107705 _107708 _54415) = (term915 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568647 _107705 _107708 _54415 t)). Qed.
Lemma lem4568649 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568650 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term925 _107705 _107708 _54415) = (term926 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568649 _107705) (@lem4568648 _107705 _107708 _54415)). Qed.
Lemma lem4568651 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4568652 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term927 _107705 _107708 _54415) = (term928 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568651) (@lem4568650 _107705 _107708 _54415)). Qed.
Lemma lem4568653 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term919 _107705 _107708 _54415 t) = (term909 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term919 _107705 _107708 _54415 t)). Qed.
Lemma lem4568654 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term929 _107705 _107708 _54415) = (term916 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568653 _107705 _107708 _54415 t)). Qed.
Lemma lem4568655 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568656 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term930 _107705 _107708 _54415) = (term931 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568655 _107705) (@lem4568654 _107705 _107708 _54415)). Qed.
Lemma lem4568657 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term914 _107705 _107708 _54415) = (term932 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568652 _107705 _107708 _54415) (@lem4568656 _107705 _107708 _54415)). Qed.
Lemma lem4568658 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : ((term913 _107705 _107708 _54415) = (term914 _107705 _107708 _54415)) = ((term912 _107705 _107708 _54415) = (term932 _107705 _107708 _54415)).
Proof. exact (MK_COMB (@lem4568646 _107705 _107708 _54415) (@lem4568657 _107705 _107708 _54415)). Qed.
Lemma lem4568659 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term912 _107705 _107708 _54415) = (term932 _107705 _107708 _54415).
Proof. exact (EQ_MP (@lem4568658 _107705 _107708 _54415) (@lem4568636 _107705 _107708 _54415)). Qed.
Lemma lem4568804 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term844 _107705 _107708 _54415) = (term932 _107705 _107708 _54415).
Proof. exact (TRANS (@lem4568632 _107705 _107708 _54415) (@lem4568659 _107705 _107708 _54415)). Qed.
Lemma lem4568806 {A : Type'} (P : Prop) (Q : A -> Prop) : (term683 A P Q) = (term684 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4568807 {_107705 _107708 : Type'} (P : Prop) (Q : type805 _107705 _107708) : (term933 _107705 _107708 P Q) = (term934 _107705 _107708 P Q).
Proof. exact (@lem4568806 (_107708 -> _107705) P Q). Qed.
Lemma lem4568808 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term935 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term936 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (@lem4568807 _107705 _107708 (term937 _107705 _107708 _54415 t s d GEN_PVAR_150) (term110 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568809 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term822 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (eq_refl (term822 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568810 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term938 _107705 _107708 GEN_PVAR_150 t s d) = (term110 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4568809 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568811 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4568812 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term939 _107705 _107708 GEN_PVAR_150 t s d) = (term111 _107705 _107708 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568811 _107705 _107708) (@lem4568810 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568813 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term828 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term828 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term828 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568814 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term935 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term829 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568813 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4568812 _107705 _107708 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568815 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568816 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term940 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term941 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568815) (@lem4568814 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568817 {_107705 _107708 : Type'} (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term822 _107705 _107708 GEN_PVAR_150 t s d f) = (term109 _107705 _107708 GEN_PVAR_150 t s d f).
Proof. exact (eq_refl (term822 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568818 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (GEN_PVAR_150 : _107708 -> _107705) : (term828 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term828 _107705 _107708 _54415 t s d GEN_PVAR_150).
Proof. exact (eq_refl (term828 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568819 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term942 _107705 _107708 _54415 GEN_PVAR_150 t s d f) = (term943 _107705 _107708 _54415 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4568818 _107705 _107708 _54415 t s d GEN_PVAR_150) (@lem4568817 _107705 _107708 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568820 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term944 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term945 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4568819 _107705 _107708 _54415 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568821 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4568822 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term936 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term946 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568821 _107705 _107708) (@lem4568820 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568823 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((term935 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term936 _107705 _107708 _54415 GEN_PVAR_150 t s d)) = ((term829 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term946 _107705 _107708 _54415 GEN_PVAR_150 t s d)).
Proof. exact (MK_COMB (@lem4568816 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568822 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568824 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term829 _107705 _107708 _54415 GEN_PVAR_150 t s d) = (term946 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (EQ_MP (@lem4568823 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568808 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568825 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term850 _107705 _107708 _54415 t s d) = (term947 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568824 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568826 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568827 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term865 _107705 _107708 _54415 t s d) = (term948 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568826 _107705 _107708) (@lem4568825 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568829 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4568830 {_107705 _107708 : Type'} (P : type786 _107705 _107708) : (term949 _107705 _107708 P) = (term950 _107705 _107708 P).
Proof. exact (@lem4568829 (_107708 -> _107705) (_107708 -> _107705) P). Qed.
Lemma lem4568831 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term951 _107705 _107708 _54415 t s d) = (term952 _107705 _107708 _54415 t s d).
Proof. exact (@lem4568830 _107705 _107708 (term953 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568832 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term954 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term945 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term954 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568833 {_107705 _107708 : Type'} (f : _107708 -> _107705) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4568834 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term955 _107705 _107708 _54415 t s d GEN_PVAR_150 f) = (term956 _107705 _107708 _54415 GEN_PVAR_150 t s d f).
Proof. exact (MK_COMB (@lem4568832 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568833 _107705 _107708 f)). Qed.
Lemma lem4568835 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term956 _107705 _107708 _54415 GEN_PVAR_150 t s d f) = (term943 _107705 _107708 _54415 GEN_PVAR_150 t s d f).
Proof. exact (eq_refl (term956 _107705 _107708 _54415 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568836 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : _107708 -> _107705) : (term955 _107705 _107708 _54415 t s d GEN_PVAR_150 f) = (term943 _107705 _107708 _54415 GEN_PVAR_150 t s d f).
Proof. exact (TRANS (@lem4568834 _107705 _107708 _54415 GEN_PVAR_150 t s d f) (@lem4568835 _107705 _107708 _54415 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568837 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term957 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term945 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (fun_ext (fun f : _107708 -> _107705 => @lem4568836 _107705 _107708 _54415 GEN_PVAR_150 t s d f)). Qed.
Lemma lem4568838 {_107705 _107708 : Type'} : (@ex (_107708 -> _107705)) = (@ex (_107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107708 -> _107705))). Qed.
Lemma lem4568839 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term958 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term946 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (MK_COMB (@lem4568838 _107705 _107708) (@lem4568837 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568840 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term959 _107705 _107708 _54415 t s d) = (term947 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568839 _107705 _107708 _54415 GEN_PVAR_150 t s d)). Qed.
Lemma lem4568841 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568842 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term951 _107705 _107708 _54415 t s d) = (term948 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568841 _107705 _107708) (@lem4568840 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568843 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568844 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term960 _107705 _107708 _54415 t s d) = (term961 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568843) (@lem4568842 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568845 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term954 _107705 _107708 _54415 t s d GEN_PVAR_150) = (term945 _107705 _107708 _54415 GEN_PVAR_150 t s d).
Proof. exact (eq_refl (term954 _107705 _107708 _54415 t s d GEN_PVAR_150)). Qed.
Lemma lem4568846 {_107705 _107708 : Type'} (f : type796 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) : (f GEN_PVAR_150) = (f GEN_PVAR_150).
Proof. exact (eq_refl (f GEN_PVAR_150)). Qed.
Lemma lem4568847 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) : (term962 _107705 _107708 _54415 t s d f GEN_PVAR_150) = (term963 _107705 _107708 _54415 t s d f GEN_PVAR_150).
Proof. exact (MK_COMB (@lem4568845 _107705 _107708 _54415 GEN_PVAR_150 t s d) (@lem4568846 _107705 _107708 f GEN_PVAR_150)). Qed.
Lemma lem4568848 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) : (term963 _107705 _107708 _54415 t s d f GEN_PVAR_150) = (term964 _107705 _107708 _54415 t s d f GEN_PVAR_150).
Proof. exact (eq_refl (term963 _107705 _107708 _54415 t s d f GEN_PVAR_150)). Qed.
Lemma lem4568849 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) (GEN_PVAR_150 : _107708 -> _107705) : (term962 _107705 _107708 _54415 t s d f GEN_PVAR_150) = (term964 _107705 _107708 _54415 t s d f GEN_PVAR_150).
Proof. exact (TRANS (@lem4568847 _107705 _107708 _54415 t s d f GEN_PVAR_150) (@lem4568848 _107705 _107708 _54415 t s d f GEN_PVAR_150)). Qed.
Lemma lem4568850 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) : (term965 _107705 _107708 _54415 t s d f) = (term966 _107705 _107708 _54415 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_150 : _107708 -> _107705 => @lem4568849 _107705 _107708 _54415 t s d f GEN_PVAR_150)). Qed.
Lemma lem4568851 {_107705 _107708 : Type'} : (@all (_107708 -> _107705)) = (@all (_107708 -> _107705)).
Proof. exact (eq_refl (@all (_107708 -> _107705))). Qed.
Lemma lem4568852 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) : (term967 _107705 _107708 _54415 t s d f) = (term968 _107705 _107708 _54415 t s d f).
Proof. exact (MK_COMB (@lem4568851 _107705 _107708) (@lem4568850 _107705 _107708 _54415 t s d f)). Qed.
Lemma lem4568853 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term969 _107705 _107708 _54415 t s d) = (term970 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun f : type796 _107705 _107708 => @lem4568852 _107705 _107708 _54415 t s d f)). Qed.
Lemma lem4568854 {_107705 _107708 : Type'} : (@ex ((_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568855 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term952 _107705 _107708 _54415 t s d) = (term971 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568854 _107705 _107708) (@lem4568853 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568856 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : ((term951 _107705 _107708 _54415 t s d) = (term952 _107705 _107708 _54415 t s d)) = ((term948 _107705 _107708 _54415 t s d) = (term971 _107705 _107708 _54415 t s d)).
Proof. exact (MK_COMB (@lem4568844 _107705 _107708 _54415 t s d) (@lem4568855 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568857 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term948 _107705 _107708 _54415 t s d) = (term971 _107705 _107708 _54415 t s d).
Proof. exact (EQ_MP (@lem4568856 _107705 _107708 _54415 t s d) (@lem4568831 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568858 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term865 _107705 _107708 _54415 t s d) = (term971 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4568827 _107705 _107708 _54415 t s d) (@lem4568857 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568859 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term872 _107705 _107708 _54415 t s) = (term972 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568858 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568860 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568861 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term887 _107705 _107708 _54415 t s) = (term973 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568860 _107705) (@lem4568859 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568863 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4568864 {_107705 _107708 : Type'} (P : type1357 _107705 _107708) : (term974 _107705 _107708 P) = (term975 _107705 _107708 P).
Proof. exact (@lem4568863 _107705 (type796 _107705 _107708) P). Qed.
Lemma lem4568865 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term976 _107705 _107708 _54415 t s) = (term977 _107705 _107708 _54415 t s).
Proof. exact (@lem4568864 _107705 _107708 (term978 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568866 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term979 _107705 _107708 _54415 t s d) = (term970 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term979 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568867 {_107705 _107708 : Type'} (f : type796 _107705 _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4568868 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) : (term980 _107705 _107708 _54415 t s d f) = (term981 _107705 _107708 _54415 t s d f).
Proof. exact (MK_COMB (@lem4568866 _107705 _107708 _54415 t s d) (@lem4568867 _107705 _107708 f)). Qed.
Lemma lem4568869 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) : (term981 _107705 _107708 _54415 t s d f) = (term968 _107705 _107708 _54415 t s d f).
Proof. exact (eq_refl (term981 _107705 _107708 _54415 t s d f)). Qed.
Lemma lem4568870 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (f : type796 _107705 _107708) : (term980 _107705 _107708 _54415 t s d f) = (term968 _107705 _107708 _54415 t s d f).
Proof. exact (TRANS (@lem4568868 _107705 _107708 _54415 t s d f) (@lem4568869 _107705 _107708 _54415 t s d f)). Qed.
Lemma lem4568871 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term982 _107705 _107708 _54415 t s d) = (term970 _107705 _107708 _54415 t s d).
Proof. exact (fun_ext (fun f : type796 _107705 _107708 => @lem4568870 _107705 _107708 _54415 t s d f)). Qed.
Lemma lem4568872 {_107705 _107708 : Type'} : (@ex ((_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568873 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term983 _107705 _107708 _54415 t s d) = (term971 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4568872 _107705 _107708) (@lem4568871 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568874 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term984 _107705 _107708 _54415 t s) = (term972 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun d : _107705 => @lem4568873 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568875 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568876 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term976 _107705 _107708 _54415 t s) = (term973 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568875 _107705) (@lem4568874 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568877 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568878 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term985 _107705 _107708 _54415 t s) = (term986 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568877) (@lem4568876 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568879 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term979 _107705 _107708 _54415 t s d) = (term970 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term979 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568880 {_107705 _107708 : Type'} (f : type1371 _107705 _107708) (d : _107705) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4568881 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) (d : _107705) : (term987 _107705 _107708 _54415 t s f d) = (term988 _107705 _107708 _54415 t s f d).
Proof. exact (MK_COMB (@lem4568879 _107705 _107708 _54415 t s d) (@lem4568880 _107705 _107708 f d)). Qed.
Lemma lem4568882 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) (d : _107705) : (term988 _107705 _107708 _54415 t s f d) = (term989 _107705 _107708 _54415 t s f d).
Proof. exact (eq_refl (term988 _107705 _107708 _54415 t s f d)). Qed.
Lemma lem4568883 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) (d : _107705) : (term987 _107705 _107708 _54415 t s f d) = (term989 _107705 _107708 _54415 t s f d).
Proof. exact (TRANS (@lem4568881 _107705 _107708 _54415 t s f d) (@lem4568882 _107705 _107708 _54415 t s f d)). Qed.
Lemma lem4568884 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) : (term990 _107705 _107708 _54415 t s f) = (term991 _107705 _107708 _54415 t s f).
Proof. exact (fun_ext (fun d : _107705 => @lem4568883 _107705 _107708 _54415 t s f d)). Qed.
Lemma lem4568885 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4568886 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) : (term992 _107705 _107708 _54415 t s f) = (term993 _107705 _107708 _54415 t s f).
Proof. exact (MK_COMB (@lem4568885 _107705) (@lem4568884 _107705 _107708 _54415 t s f)). Qed.
Lemma lem4568887 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term994 _107705 _107708 _54415 t s) = (term995 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun f : type1371 _107705 _107708 => @lem4568886 _107705 _107708 _54415 t s f)). Qed.
Lemma lem4568888 {_107705 _107708 : Type'} : (@ex (_107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex (_107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568889 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term977 _107705 _107708 _54415 t s) = (term996 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568888 _107705 _107708) (@lem4568887 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568890 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : ((term976 _107705 _107708 _54415 t s) = (term977 _107705 _107708 _54415 t s)) = ((term973 _107705 _107708 _54415 t s) = (term996 _107705 _107708 _54415 t s)).
Proof. exact (MK_COMB (@lem4568878 _107705 _107708 _54415 t s) (@lem4568889 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568891 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term973 _107705 _107708 _54415 t s) = (term996 _107705 _107708 _54415 t s).
Proof. exact (EQ_MP (@lem4568890 _107705 _107708 _54415 t s) (@lem4568865 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568892 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term887 _107705 _107708 _54415 t s) = (term996 _107705 _107708 _54415 t s).
Proof. exact (TRANS (@lem4568861 _107705 _107708 _54415 t s) (@lem4568891 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568893 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term894 _107705 _107708 _54415 t) = (term997 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568892 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568894 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568895 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term909 _107705 _107708 _54415 t) = (term998 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568894 _107708) (@lem4568893 _107705 _107708 _54415 t)). Qed.
Lemma lem4568897 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4568898 {_107705 _107708 : Type'} (P : type829 _107705 _107708) : (term999 _107705 _107708 P) = (term1000 _107705 _107708 P).
Proof. exact (@lem4568897 (_107708 -> Prop) (type1371 _107705 _107708) P). Qed.
Lemma lem4568899 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1001 _107705 _107708 _54415 t) = (term1002 _107705 _107708 _54415 t).
Proof. exact (@lem4568898 _107705 _107708 (term1003 _107705 _107708 _54415 t)). Qed.
Lemma lem4568900 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term1004 _107705 _107708 _54415 t s) = (term995 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term1004 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568901 {_107705 _107708 : Type'} (f : type1371 _107705 _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4568902 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) : (term1005 _107705 _107708 _54415 t s f) = (term1006 _107705 _107708 _54415 t s f).
Proof. exact (MK_COMB (@lem4568900 _107705 _107708 _54415 t s) (@lem4568901 _107705 _107708 f)). Qed.
Lemma lem4568903 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) : (term1006 _107705 _107708 _54415 t s f) = (term993 _107705 _107708 _54415 t s f).
Proof. exact (eq_refl (term1006 _107705 _107708 _54415 t s f)). Qed.
Lemma lem4568904 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (f : type1371 _107705 _107708) : (term1005 _107705 _107708 _54415 t s f) = (term993 _107705 _107708 _54415 t s f).
Proof. exact (TRANS (@lem4568902 _107705 _107708 _54415 t s f) (@lem4568903 _107705 _107708 _54415 t s f)). Qed.
Lemma lem4568905 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term1007 _107705 _107708 _54415 t s) = (term995 _107705 _107708 _54415 t s).
Proof. exact (fun_ext (fun f : type1371 _107705 _107708 => @lem4568904 _107705 _107708 _54415 t s f)). Qed.
Lemma lem4568906 {_107705 _107708 : Type'} : (@ex (_107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex (_107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex (_107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568907 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term1008 _107705 _107708 _54415 t s) = (term996 _107705 _107708 _54415 t s).
Proof. exact (MK_COMB (@lem4568906 _107705 _107708) (@lem4568905 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568908 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1009 _107705 _107708 _54415 t) = (term997 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568907 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568909 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568910 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1001 _107705 _107708 _54415 t) = (term998 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568909 _107708) (@lem4568908 _107705 _107708 _54415 t)). Qed.
Lemma lem4568911 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568912 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1010 _107705 _107708 _54415 t) = (term1011 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568911) (@lem4568910 _107705 _107708 _54415 t)). Qed.
Lemma lem4568913 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term1004 _107705 _107708 _54415 t s) = (term995 _107705 _107708 _54415 t s).
Proof. exact (eq_refl (term1004 _107705 _107708 _54415 t s)). Qed.
Lemma lem4568914 {_107705 _107708 : Type'} (f : type858 _107705 _107708) (s : _107708 -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4568915 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) (s : _107708 -> Prop) : (term1012 _107705 _107708 _54415 t f s) = (term1013 _107705 _107708 _54415 t f s).
Proof. exact (MK_COMB (@lem4568913 _107705 _107708 _54415 t s) (@lem4568914 _107705 _107708 f s)). Qed.
Lemma lem4568916 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) (s : _107708 -> Prop) : (term1013 _107705 _107708 _54415 t f s) = (term1014 _107705 _107708 _54415 t f s).
Proof. exact (eq_refl (term1013 _107705 _107708 _54415 t f s)). Qed.
Lemma lem4568917 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) (s : _107708 -> Prop) : (term1012 _107705 _107708 _54415 t f s) = (term1014 _107705 _107708 _54415 t f s).
Proof. exact (TRANS (@lem4568915 _107705 _107708 _54415 t f s) (@lem4568916 _107705 _107708 _54415 t f s)). Qed.
Lemma lem4568918 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) : (term1015 _107705 _107708 _54415 t f) = (term1016 _107705 _107708 _54415 t f).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4568917 _107705 _107708 _54415 t f s)). Qed.
Lemma lem4568919 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4568920 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) : (term1017 _107705 _107708 _54415 t f) = (term1018 _107705 _107708 _54415 t f).
Proof. exact (MK_COMB (@lem4568919 _107708) (@lem4568918 _107705 _107708 _54415 t f)). Qed.
Lemma lem4568921 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1019 _107705 _107708 _54415 t) = (term1020 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun f : type858 _107705 _107708 => @lem4568920 _107705 _107708 _54415 t f)). Qed.
Lemma lem4568922 {_107705 _107708 : Type'} : (@ex ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568923 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1002 _107705 _107708 _54415 t) = (term1021 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568922 _107705 _107708) (@lem4568921 _107705 _107708 _54415 t)). Qed.
Lemma lem4568924 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : ((term1001 _107705 _107708 _54415 t) = (term1002 _107705 _107708 _54415 t)) = ((term998 _107705 _107708 _54415 t) = (term1021 _107705 _107708 _54415 t)).
Proof. exact (MK_COMB (@lem4568912 _107705 _107708 _54415 t) (@lem4568923 _107705 _107708 _54415 t)). Qed.
Lemma lem4568925 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term998 _107705 _107708 _54415 t) = (term1021 _107705 _107708 _54415 t).
Proof. exact (EQ_MP (@lem4568924 _107705 _107708 _54415 t) (@lem4568899 _107705 _107708 _54415 t)). Qed.
Lemma lem4568926 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term909 _107705 _107708 _54415 t) = (term1021 _107705 _107708 _54415 t).
Proof. exact (TRANS (@lem4568895 _107705 _107708 _54415 t) (@lem4568925 _107705 _107708 _54415 t)). Qed.
Lemma lem4568927 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term916 _107705 _107708 _54415) = (term1022 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568926 _107705 _107708 _54415 t)). Qed.
Lemma lem4568928 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568929 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term931 _107705 _107708 _54415) = (term1023 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568928 _107705) (@lem4568927 _107705 _107708 _54415)). Qed.
Lemma lem4568931 {A B : Type'} (P : type1413 A B) : (term701 A B P) = (term702 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4568932 {_107705 _107708 : Type'} (P : type606 _107705 _107708) : (term1024 _107705 _107708 P) = (term1025 _107705 _107708 P).
Proof. exact (@lem4568931 (_107705 -> Prop) (type858 _107705 _107708) P). Qed.
Lemma lem4568933 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1026 _107705 _107708 _54415) = (term1027 _107705 _107708 _54415).
Proof. exact (@lem4568932 _107705 _107708 (term1028 _107705 _107708 _54415)). Qed.
Lemma lem4568934 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1029 _107705 _107708 _54415 t) = (term1020 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term1029 _107705 _107708 _54415 t)). Qed.
Lemma lem4568935 {_107705 _107708 : Type'} (f : type858 _107705 _107708) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4568936 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) : (term1030 _107705 _107708 _54415 t f) = (term1031 _107705 _107708 _54415 t f).
Proof. exact (MK_COMB (@lem4568934 _107705 _107708 _54415 t) (@lem4568935 _107705 _107708 f)). Qed.
Lemma lem4568937 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) : (term1031 _107705 _107708 _54415 t f) = (term1018 _107705 _107708 _54415 t f).
Proof. exact (eq_refl (term1031 _107705 _107708 _54415 t f)). Qed.
Lemma lem4568938 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (f : type858 _107705 _107708) : (term1030 _107705 _107708 _54415 t f) = (term1018 _107705 _107708 _54415 t f).
Proof. exact (TRANS (@lem4568936 _107705 _107708 _54415 t f) (@lem4568937 _107705 _107708 _54415 t f)). Qed.
Lemma lem4568939 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1032 _107705 _107708 _54415 t) = (term1020 _107705 _107708 _54415 t).
Proof. exact (fun_ext (fun f : type858 _107705 _107708 => @lem4568938 _107705 _107708 _54415 t f)). Qed.
Lemma lem4568940 {_107705 _107708 : Type'} : (@ex ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568941 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1033 _107705 _107708 _54415 t) = (term1021 _107705 _107708 _54415 t).
Proof. exact (MK_COMB (@lem4568940 _107705 _107708) (@lem4568939 _107705 _107708 _54415 t)). Qed.
Lemma lem4568942 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1034 _107705 _107708 _54415) = (term1022 _107705 _107708 _54415).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568941 _107705 _107708 _54415 t)). Qed.
Lemma lem4568943 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568944 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1026 _107705 _107708 _54415) = (term1023 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568943 _107705) (@lem4568942 _107705 _107708 _54415)). Qed.
Lemma lem4568945 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568946 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1035 _107705 _107708 _54415) = (term1036 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568945) (@lem4568944 _107705 _107708 _54415)). Qed.
Lemma lem4568947 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (term1029 _107705 _107708 _54415 t) = (term1020 _107705 _107708 _54415 t).
Proof. exact (eq_refl (term1029 _107705 _107708 _54415 t)). Qed.
Lemma lem4568948 {_107705 _107708 : Type'} (f : type655 _107705 _107708) (t : _107705 -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4568949 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) (t : _107705 -> Prop) : (term1037 _107705 _107708 _54415 f t) = (term1038 _107705 _107708 _54415 f t).
Proof. exact (MK_COMB (@lem4568947 _107705 _107708 _54415 t) (@lem4568948 _107705 _107708 f t)). Qed.
Lemma lem4568950 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) (t : _107705 -> Prop) : (term1038 _107705 _107708 _54415 f t) = (term1039 _107705 _107708 _54415 f t).
Proof. exact (eq_refl (term1038 _107705 _107708 _54415 f t)). Qed.
Lemma lem4568951 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) (t : _107705 -> Prop) : (term1037 _107705 _107708 _54415 f t) = (term1039 _107705 _107708 _54415 f t).
Proof. exact (TRANS (@lem4568949 _107705 _107708 _54415 f t) (@lem4568950 _107705 _107708 _54415 f t)). Qed.
Lemma lem4568952 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) : (term1040 _107705 _107708 _54415 f) = (term1041 _107705 _107708 _54415 f).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4568951 _107705 _107708 _54415 f t)). Qed.
Lemma lem4568953 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4568954 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) : (term1042 _107705 _107708 _54415 f) = (term1043 _107705 _107708 _54415 f).
Proof. exact (MK_COMB (@lem4568953 _107705) (@lem4568952 _107705 _107708 _54415 f)). Qed.
Lemma lem4568955 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1044 _107705 _107708 _54415) = (term1045 _107705 _107708 _54415).
Proof. exact (fun_ext (fun f : type655 _107705 _107708 => @lem4568954 _107705 _107708 _54415 f)). Qed.
Lemma lem4568956 {_107705 _107708 : Type'} : (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568957 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1027 _107705 _107708 _54415) = (term1046 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568956 _107705 _107708) (@lem4568955 _107705 _107708 _54415)). Qed.
Lemma lem4568958 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : ((term1026 _107705 _107708 _54415) = (term1027 _107705 _107708 _54415)) = ((term1023 _107705 _107708 _54415) = (term1046 _107705 _107708 _54415)).
Proof. exact (MK_COMB (@lem4568946 _107705 _107708 _54415) (@lem4568957 _107705 _107708 _54415)). Qed.
Lemma lem4568959 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1023 _107705 _107708 _54415) = (term1046 _107705 _107708 _54415).
Proof. exact (EQ_MP (@lem4568958 _107705 _107708 _54415) (@lem4568933 _107705 _107708 _54415)). Qed.
Lemma lem4568960 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term931 _107705 _107708 _54415) = (term1046 _107705 _107708 _54415).
Proof. exact (TRANS (@lem4568929 _107705 _107708 _54415) (@lem4568959 _107705 _107708 _54415)). Qed.
Lemma lem4568961 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term928 _107705 _107708 _54415) = (term928 _107705 _107708 _54415).
Proof. exact (eq_refl (term928 _107705 _107708 _54415)). Qed.
Lemma lem4568962 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term932 _107705 _107708 _54415) = (term1047 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568961 _107705 _107708 _54415) (@lem4568960 _107705 _107708 _54415)). Qed.
Lemma lem4568964 {A : Type'} (P : Prop) (Q : A -> Prop) : (term802 A P Q) = (term803 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4568965 {_107705 _107708 : Type'} (P : Prop) (Q : type146 _107705 _107708) : (term1048 _107705 _107708 P Q) = (term1049 _107705 _107708 P Q).
Proof. exact (@lem4568964 (type655 _107705 _107708) P Q). Qed.
Lemma lem4568966 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1050 _107705 _107708 _54415) = (term1051 _107705 _107708 _54415).
Proof. exact (@lem4568965 _107705 _107708 (term926 _107705 _107708 _54415) (term1045 _107705 _107708 _54415)). Qed.
Lemma lem4568967 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) : (term1052 _107705 _107708 _54415 f) = (term1043 _107705 _107708 _54415 f).
Proof. exact (eq_refl (term1052 _107705 _107708 _54415 f)). Qed.
Lemma lem4568968 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1053 _107705 _107708 _54415) = (term1045 _107705 _107708 _54415).
Proof. exact (fun_ext (fun f : type655 _107705 _107708 => @lem4568967 _107705 _107708 _54415 f)). Qed.
Lemma lem4568969 {_107705 _107708 : Type'} : (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568970 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1054 _107705 _107708 _54415) = (term1046 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568969 _107705 _107708) (@lem4568968 _107705 _107708 _54415)). Qed.
Lemma lem4568971 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term928 _107705 _107708 _54415) = (term928 _107705 _107708 _54415).
Proof. exact (eq_refl (term928 _107705 _107708 _54415)). Qed.
Lemma lem4568972 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1050 _107705 _107708 _54415) = (term1047 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568971 _107705 _107708 _54415) (@lem4568970 _107705 _107708 _54415)). Qed.
Lemma lem4568973 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4568974 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1055 _107705 _107708 _54415) = (term1056 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568973) (@lem4568972 _107705 _107708 _54415)). Qed.
Lemma lem4568975 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) : (term1052 _107705 _107708 _54415 f) = (term1043 _107705 _107708 _54415 f).
Proof. exact (eq_refl (term1052 _107705 _107708 _54415 f)). Qed.
Lemma lem4568976 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term928 _107705 _107708 _54415) = (term928 _107705 _107708 _54415).
Proof. exact (eq_refl (term928 _107705 _107708 _54415)). Qed.
Lemma lem4568977 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (f : type655 _107705 _107708) : (term1057 _107705 _107708 _54415 f) = (term1058 _107705 _107708 _54415 f).
Proof. exact (MK_COMB (@lem4568976 _107705 _107708 _54415) (@lem4568975 _107705 _107708 _54415 f)). Qed.
Lemma lem4568978 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1059 _107705 _107708 _54415) = (term1060 _107705 _107708 _54415).
Proof. exact (fun_ext (fun f : type655 _107705 _107708 => @lem4568977 _107705 _107708 _54415 f)). Qed.
Lemma lem4568979 {_107705 _107708 : Type'} : (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)) = (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705)).
Proof. exact (eq_refl (@ex ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> _107708 -> _107705))). Qed.
Lemma lem4568980 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1051 _107705 _107708 _54415) = (term1061 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4568979 _107705 _107708) (@lem4568978 _107705 _107708 _54415)). Qed.
Lemma lem4568981 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : ((term1050 _107705 _107708 _54415) = (term1051 _107705 _107708 _54415)) = ((term1047 _107705 _107708 _54415) = (term1061 _107705 _107708 _54415)).
Proof. exact (MK_COMB (@lem4568974 _107705 _107708 _54415) (@lem4568980 _107705 _107708 _54415)). Qed.
Lemma lem4568982 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1047 _107705 _107708 _54415) = (term1061 _107705 _107708 _54415).
Proof. exact (EQ_MP (@lem4568981 _107705 _107708 _54415) (@lem4568966 _107705 _107708 _54415)). Qed.
Lemma lem4568983 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term932 _107705 _107708 _54415) = (term1061 _107705 _107708 _54415).
Proof. exact (TRANS (@lem4568962 _107705 _107708 _54415) (@lem4568982 _107705 _107708 _54415)). Qed.
Lemma lem4568984 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term844 _107705 _107708 _54415) = (term1061 _107705 _107708 _54415).
Proof. exact (TRANS (@lem4568804 _107705 _107708 _54415) (@lem4568983 _107705 _107708 _54415)). Qed.
Lemma lem4568985 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term248 _107705 _107708 _54415) = (term1061 _107705 _107708 _54415).
Proof. exact (TRANS (@lem4568144 _107705 _107708 _54415) (@lem4568984 _107705 _107708 _54415)). Qed.
Lemma lem4568986 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : term248 _107705 _107708 _54415) : term1061 _107705 _107708 _54415.
Proof. exact (EQ_MP (@lem4568985 _107705 _107708 _54415) (@lem4563677 _107705 _107708 _54415 h1)). Qed.
Lemma lem4568997 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1062 _107705 _107708 _54415 t s d) = (term1063 _107705 _107708 _54415 t s d).
Proof. exact (@lem17362 (term1064 _107705 _107708 s t) (term165 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4568998 {_107705 : Type'} (P : type686 _107705) : (term1065 _107705 P) = (term1066 _107705 P).
Proof. exact (@lem18392 (_107705 -> Prop) P). Qed.
Lemma lem4568999 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1067 _107705 _107708 _54415 s d) = (term1068 _107705 _107708 _54415 s d).
Proof. exact (@lem4568998 _107705 (term170 _107705 _107708 _54415 s d)). Qed.
Lemma lem4569000 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1069 _107705 _107708 _54415 s d t) = (term168 _107705 _107708 _54415 t s d).
Proof. exact (eq_refl (term1069 _107705 _107708 _54415 s d t)). Qed.
Lemma lem4569001 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4569002 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1070 _107705 _107708 _54415 s d t) = (term1062 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4569001) (@lem4569000 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4569003 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1070 _107705 _107708 _54415 s d t) = (term1063 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4569002 _107705 _107708 _54415 t s d) (@lem4568997 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4569004 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1071 _107705 _107708 _54415 s d) = (term1072 _107705 _107708 _54415 s d).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4569003 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4569005 {_107705 : Type'} : (@ex (_107705 -> Prop)) = (@ex (_107705 -> Prop)).
Proof. exact (eq_refl (@ex (_107705 -> Prop))). Qed.
Lemma lem4569006 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1068 _107705 _107708 _54415 s d) = (term1073 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4569005 _107705) (@lem4569004 _107705 _107708 _54415 s d)). Qed.
Lemma lem4569007 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1067 _107705 _107708 _54415 s d) = (term1073 _107705 _107708 _54415 s d).
Proof. exact (TRANS (@lem4568999 _107705 _107708 _54415 s d) (@lem4569006 _107705 _107708 _54415 s d)). Qed.
Lemma lem4569008 {_107708 : Type'} (P : type686 _107708) : (term1065 _107708 P) = (term1066 _107708 P).
Proof. exact (@lem18392 (_107708 -> Prop) P). Qed.
Lemma lem4569009 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term1074 _107705 _107708 _54415 d).
Proof. exact (@lem4569008 _107708 (term174 _107705 _107708 _54415 d)). Qed.
Lemma lem4569010 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1075 _107705 _107708 _54415 d s) = (term172 _107705 _107708 _54415 s d).
Proof. exact (eq_refl (term1075 _107705 _107708 _54415 d s)). Qed.
Lemma lem4569011 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4569012 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1076 _107705 _107708 _54415 d s) = (term1067 _107705 _107708 _54415 s d).
Proof. exact (MK_COMB (@lem4569011) (@lem4569010 _107705 _107708 _54415 s d)). Qed.
Lemma lem4569013 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) : (term1076 _107705 _107708 _54415 d s) = (term1073 _107705 _107708 _54415 s d).
Proof. exact (TRANS (@lem4569012 _107705 _107708 _54415 s d) (@lem4569007 _107705 _107708 _54415 s d)). Qed.
Lemma lem4569014 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term1077 _107705 _107708 _54415 d) = (term1078 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4569013 _107705 _107708 _54415 s d)). Qed.
Lemma lem4569015 {_107708 : Type'} : (@ex (_107708 -> Prop)) = (@ex (_107708 -> Prop)).
Proof. exact (eq_refl (@ex (_107708 -> Prop))). Qed.
Lemma lem4569016 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term1074 _107705 _107708 _54415 d) = (term1079 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4569015 _107708) (@lem4569014 _107705 _107708 _54415 d)). Qed.
Lemma lem4569073 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term176 _107705 _107708 _54415 d) = (term1079 _107705 _107708 _54415 d).
Proof. exact (TRANS (@lem4569009 _107705 _107708 _54415 d) (@lem4569016 _107705 _107708 _54415 d)). Qed.
Lemma lem4569074 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term176 _107705 _107708 _54415 d) : term1079 _107705 _107708 _54415 d.
Proof. exact (EQ_MP (@lem4569073 _107705 _107708 _54415 d) (@lem4563678 _107705 _107708 _54415 d h1)). Qed.
Lemma lem4569085 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1080 _107705 s n) = (term1081 _107705 s n).
Proof. exact (@lem17045 (@FINITE _107705 s) ((@CARD _107705 s) = n)). Qed.
Lemma lem4569091 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1082 _107705 s n) = (term1082 _107705 s n).
Proof. exact (eq_refl (term1082 _107705 s n)). Qed.
Lemma lem4569093 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1083 _107705 s n) = (term1083 _107705 s n).
Proof. exact (eq_refl (term1083 _107705 s n)). Qed.
Lemma lem4569094 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1084 _107705 s n) = (term1085 _107705 s n).
Proof. exact (MK_COMB (@lem4569093 _107705 s n) (@lem4569085 _107705 s n)). Qed.
Lemma lem4569095 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569096 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1086 _107705 s n) = (term1087 _107705 s n).
Proof. exact (MK_COMB (@lem4569095) (@lem4569094 _107705 s n)). Qed.
Lemma lem4569097 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1088 _107705 s n) = (term1089 _107705 s n).
Proof. exact (MK_COMB (@lem4569096 _107705 s n) (@lem4569091 _107705 s n)). Qed.
Lemma lem4569098 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = (term1088 _107705 s n).
Proof. exact (@lem17784 (@HAS_SIZE _107705 s n) (term156 _107705 s n)). Qed.
Lemma lem4569099 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@HAS_SIZE _107705 s n) = (term156 _107705 s n)) = (term1089 _107705 s n).
Proof. exact (TRANS (@lem4569098 _107705 s n) (@lem4569097 _107705 s n)). Qed.
Lemma lem4569100 {_107705 : Type'} (s : _107705 -> Prop) : (term157 _107705 s) = (term1090 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4569099 _107705 s n)). Qed.
Lemma lem4569101 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569102 {_107705 : Type'} (s : _107705 -> Prop) : (term158 _107705 s) = (term1091 _107705 s).
Proof. exact (MK_COMB (@lem4569101) (@lem4569100 _107705 s)). Qed.
Lemma lem4569103 {_107705 : Type'} : (term159 _107705) = (term1092 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4569102 _107705 s)). Qed.
Lemma lem4569104 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4569105 {_107705 : Type'} : (term13 _107705) = (term1093 _107705).
Proof. exact (MK_COMB (@lem4569104 _107705) (@lem4569103 _107705)). Qed.
Lemma lem4569111 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4569112 (P : nat -> Prop) (Q : nat -> Prop) : (term1094 P Q) = (term1095 P Q).
Proof. exact (@lem4569111 nat P Q). Qed.
Lemma lem4569113 {_107705 : Type'} (s : _107705 -> Prop) : (term1096 _107705 s) = (term1097 _107705 s).
Proof. exact (@lem4569112 (term1098 _107705 s) (term1099 _107705 s)). Qed.
Lemma lem4569114 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1100 _107705 s n) = (term1085 _107705 s n).
Proof. exact (eq_refl (term1100 _107705 s n)). Qed.
Lemma lem4569115 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569116 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1101 _107705 s n) = (term1087 _107705 s n).
Proof. exact (MK_COMB (@lem4569115) (@lem4569114 _107705 s n)). Qed.
Lemma lem4569117 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1102 _107705 s n) = (term1082 _107705 s n).
Proof. exact (eq_refl (term1102 _107705 s n)). Qed.
Lemma lem4569118 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1103 _107705 s n) = (term1089 _107705 s n).
Proof. exact (MK_COMB (@lem4569116 _107705 s n) (@lem4569117 _107705 s n)). Qed.
Lemma lem4569119 {_107705 : Type'} (s : _107705 -> Prop) : (term1104 _107705 s) = (term1090 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4569118 _107705 s n)). Qed.
Lemma lem4569120 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569121 {_107705 : Type'} (s : _107705 -> Prop) : (term1096 _107705 s) = (term1091 _107705 s).
Proof. exact (MK_COMB (@lem4569120) (@lem4569119 _107705 s)). Qed.
Lemma lem4569122 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4569123 {_107705 : Type'} (s : _107705 -> Prop) : (term1105 _107705 s) = (term1106 _107705 s).
Proof. exact (MK_COMB (@lem4569122) (@lem4569121 _107705 s)). Qed.
Lemma lem4569124 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1100 _107705 s n) = (term1085 _107705 s n).
Proof. exact (eq_refl (term1100 _107705 s n)). Qed.
Lemma lem4569125 {_107705 : Type'} (s : _107705 -> Prop) : (term1107 _107705 s) = (term1098 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4569124 _107705 s n)). Qed.
Lemma lem4569126 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569127 {_107705 : Type'} (s : _107705 -> Prop) : (term1108 _107705 s) = (term1109 _107705 s).
Proof. exact (MK_COMB (@lem4569126) (@lem4569125 _107705 s)). Qed.
Lemma lem4569128 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569129 {_107705 : Type'} (s : _107705 -> Prop) : (term1110 _107705 s) = (term1111 _107705 s).
Proof. exact (MK_COMB (@lem4569128) (@lem4569127 _107705 s)). Qed.
Lemma lem4569130 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1102 _107705 s n) = (term1082 _107705 s n).
Proof. exact (eq_refl (term1102 _107705 s n)). Qed.
Lemma lem4569131 {_107705 : Type'} (s : _107705 -> Prop) : (term1112 _107705 s) = (term1099 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4569130 _107705 s n)). Qed.
Lemma lem4569132 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569133 {_107705 : Type'} (s : _107705 -> Prop) : (term1113 _107705 s) = (term1114 _107705 s).
Proof. exact (MK_COMB (@lem4569132) (@lem4569131 _107705 s)). Qed.
Lemma lem4569134 {_107705 : Type'} (s : _107705 -> Prop) : (term1097 _107705 s) = (term1115 _107705 s).
Proof. exact (MK_COMB (@lem4569129 _107705 s) (@lem4569133 _107705 s)). Qed.
Lemma lem4569135 {_107705 : Type'} (s : _107705 -> Prop) : ((term1096 _107705 s) = (term1097 _107705 s)) = ((term1091 _107705 s) = (term1115 _107705 s)).
Proof. exact (MK_COMB (@lem4569123 _107705 s) (@lem4569134 _107705 s)). Qed.
Lemma lem4569136 {_107705 : Type'} (s : _107705 -> Prop) : (term1091 _107705 s) = (term1115 _107705 s).
Proof. exact (EQ_MP (@lem4569135 _107705 s) (@lem4569113 _107705 s)). Qed.
Lemma lem4569233 {_107705 : Type'} : (term1092 _107705) = (term1116 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4569136 _107705 s)). Qed.
Lemma lem4569234 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4569235 {_107705 : Type'} : (term1093 _107705) = (term1117 _107705).
Proof. exact (MK_COMB (@lem4569234 _107705) (@lem4569233 _107705)). Qed.
Lemma lem4569237 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4569238 {_107705 : Type'} (P : type686 _107705) (Q : type686 _107705) : (term639 _107705 P Q) = (term640 _107705 P Q).
Proof. exact (@lem4569237 (_107705 -> Prop) P Q). Qed.
Lemma lem4569239 {_107705 : Type'} : (term1118 _107705) = (term1119 _107705).
Proof. exact (@lem4569238 _107705 (term1120 _107705) (term1121 _107705)). Qed.
Lemma lem4569240 {_107705 : Type'} (s : _107705 -> Prop) : (term1122 _107705 s) = (term1109 _107705 s).
Proof. exact (eq_refl (term1122 _107705 s)). Qed.
Lemma lem4569241 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569242 {_107705 : Type'} (s : _107705 -> Prop) : (term1123 _107705 s) = (term1111 _107705 s).
Proof. exact (MK_COMB (@lem4569241) (@lem4569240 _107705 s)). Qed.
Lemma lem4569243 {_107705 : Type'} (s : _107705 -> Prop) : (term1124 _107705 s) = (term1114 _107705 s).
Proof. exact (eq_refl (term1124 _107705 s)). Qed.
Lemma lem4569244 {_107705 : Type'} (s : _107705 -> Prop) : (term1125 _107705 s) = (term1115 _107705 s).
Proof. exact (MK_COMB (@lem4569242 _107705 s) (@lem4569243 _107705 s)). Qed.
Lemma lem4569245 {_107705 : Type'} : (term1126 _107705) = (term1116 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4569244 _107705 s)). Qed.
Lemma lem4569246 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4569247 {_107705 : Type'} : (term1118 _107705) = (term1117 _107705).
Proof. exact (MK_COMB (@lem4569246 _107705) (@lem4569245 _107705)). Qed.
Lemma lem4569248 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4569249 {_107705 : Type'} : (term1127 _107705) = (term1128 _107705).
Proof. exact (MK_COMB (@lem4569248) (@lem4569247 _107705)). Qed.
Lemma lem4569250 {_107705 : Type'} (s : _107705 -> Prop) : (term1122 _107705 s) = (term1109 _107705 s).
Proof. exact (eq_refl (term1122 _107705 s)). Qed.
Lemma lem4569251 {_107705 : Type'} : (term1129 _107705) = (term1120 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4569250 _107705 s)). Qed.
Lemma lem4569252 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4569253 {_107705 : Type'} : (term1130 _107705) = (term1131 _107705).
Proof. exact (MK_COMB (@lem4569252 _107705) (@lem4569251 _107705)). Qed.
Lemma lem4569254 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569255 {_107705 : Type'} : (term1132 _107705) = (term1133 _107705).
Proof. exact (MK_COMB (@lem4569254) (@lem4569253 _107705)). Qed.
Lemma lem4569256 {_107705 : Type'} (s : _107705 -> Prop) : (term1124 _107705 s) = (term1114 _107705 s).
Proof. exact (eq_refl (term1124 _107705 s)). Qed.
Lemma lem4569257 {_107705 : Type'} : (term1134 _107705) = (term1121 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4569256 _107705 s)). Qed.
Lemma lem4569258 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4569259 {_107705 : Type'} : (term1135 _107705) = (term1136 _107705).
Proof. exact (MK_COMB (@lem4569258 _107705) (@lem4569257 _107705)). Qed.
Lemma lem4569260 {_107705 : Type'} : (term1119 _107705) = (term1137 _107705).
Proof. exact (MK_COMB (@lem4569255 _107705) (@lem4569259 _107705)). Qed.
Lemma lem4569261 {_107705 : Type'} : ((term1118 _107705) = (term1119 _107705)) = ((term1117 _107705) = (term1137 _107705)).
Proof. exact (MK_COMB (@lem4569249 _107705) (@lem4569260 _107705)). Qed.
Lemma lem4569262 {_107705 : Type'} : (term1117 _107705) = (term1137 _107705).
Proof. exact (EQ_MP (@lem4569261 _107705) (@lem4569239 _107705)). Qed.
Lemma lem4569369 {_107705 : Type'} : (term1093 _107705) = (term1137 _107705).
Proof. exact (TRANS (@lem4569235 _107705) (@lem4569262 _107705)). Qed.
Lemma lem4569370 {_107705 : Type'} : (term13 _107705) = (term1137 _107705).
Proof. exact (TRANS (@lem4569105 _107705) (@lem4569369 _107705)). Qed.
Lemma lem4569371 {_107705 : Type'} (h1 : term13 _107705) : term1137 _107705.
Proof. exact (EQ_MP (@lem4569370 _107705) (@lem4563679 _107705 h1)). Qed.
Lemma lem4569382 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1080 _107708 s n) = (term1081 _107708 s n).
Proof. exact (@lem17045 (@FINITE _107708 s) ((@CARD _107708 s) = n)). Qed.
Lemma lem4569388 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1082 _107708 s n) = (term1082 _107708 s n).
Proof. exact (eq_refl (term1082 _107708 s n)). Qed.
Lemma lem4569390 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1083 _107708 s n) = (term1083 _107708 s n).
Proof. exact (eq_refl (term1083 _107708 s n)). Qed.
Lemma lem4569391 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1084 _107708 s n) = (term1085 _107708 s n).
Proof. exact (MK_COMB (@lem4569390 _107708 s n) (@lem4569382 _107708 s n)). Qed.
Lemma lem4569392 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569393 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1086 _107708 s n) = (term1087 _107708 s n).
Proof. exact (MK_COMB (@lem4569392) (@lem4569391 _107708 s n)). Qed.
Lemma lem4569394 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1088 _107708 s n) = (term1089 _107708 s n).
Proof. exact (MK_COMB (@lem4569393 _107708 s n) (@lem4569388 _107708 s n)). Qed.
Lemma lem4569395 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = (term1088 _107708 s n).
Proof. exact (@lem17784 (@HAS_SIZE _107708 s n) (term156 _107708 s n)). Qed.
Lemma lem4569396 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@HAS_SIZE _107708 s n) = (term156 _107708 s n)) = (term1089 _107708 s n).
Proof. exact (TRANS (@lem4569395 _107708 s n) (@lem4569394 _107708 s n)). Qed.
Lemma lem4569397 {_107708 : Type'} (s : _107708 -> Prop) : (term157 _107708 s) = (term1090 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4569396 _107708 s n)). Qed.
Lemma lem4569398 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569399 {_107708 : Type'} (s : _107708 -> Prop) : (term158 _107708 s) = (term1091 _107708 s).
Proof. exact (MK_COMB (@lem4569398) (@lem4569397 _107708 s)). Qed.
Lemma lem4569400 {_107708 : Type'} : (term159 _107708) = (term1092 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4569399 _107708 s)). Qed.
Lemma lem4569401 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4569402 {_107708 : Type'} : (term13 _107708) = (term1093 _107708).
Proof. exact (MK_COMB (@lem4569401 _107708) (@lem4569400 _107708)). Qed.
Lemma lem4569408 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4569409 (P : nat -> Prop) (Q : nat -> Prop) : (term1094 P Q) = (term1095 P Q).
Proof. exact (@lem4569408 nat P Q). Qed.
Lemma lem4569410 {_107708 : Type'} (s : _107708 -> Prop) : (term1096 _107708 s) = (term1097 _107708 s).
Proof. exact (@lem4569409 (term1098 _107708 s) (term1099 _107708 s)). Qed.
Lemma lem4569411 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1100 _107708 s n) = (term1085 _107708 s n).
Proof. exact (eq_refl (term1100 _107708 s n)). Qed.
Lemma lem4569412 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569413 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1101 _107708 s n) = (term1087 _107708 s n).
Proof. exact (MK_COMB (@lem4569412) (@lem4569411 _107708 s n)). Qed.
Lemma lem4569414 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1102 _107708 s n) = (term1082 _107708 s n).
Proof. exact (eq_refl (term1102 _107708 s n)). Qed.
Lemma lem4569415 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1103 _107708 s n) = (term1089 _107708 s n).
Proof. exact (MK_COMB (@lem4569413 _107708 s n) (@lem4569414 _107708 s n)). Qed.
Lemma lem4569416 {_107708 : Type'} (s : _107708 -> Prop) : (term1104 _107708 s) = (term1090 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4569415 _107708 s n)). Qed.
Lemma lem4569417 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569418 {_107708 : Type'} (s : _107708 -> Prop) : (term1096 _107708 s) = (term1091 _107708 s).
Proof. exact (MK_COMB (@lem4569417) (@lem4569416 _107708 s)). Qed.
Lemma lem4569419 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4569420 {_107708 : Type'} (s : _107708 -> Prop) : (term1105 _107708 s) = (term1106 _107708 s).
Proof. exact (MK_COMB (@lem4569419) (@lem4569418 _107708 s)). Qed.
Lemma lem4569421 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1100 _107708 s n) = (term1085 _107708 s n).
Proof. exact (eq_refl (term1100 _107708 s n)). Qed.
Lemma lem4569422 {_107708 : Type'} (s : _107708 -> Prop) : (term1107 _107708 s) = (term1098 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4569421 _107708 s n)). Qed.
Lemma lem4569423 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569424 {_107708 : Type'} (s : _107708 -> Prop) : (term1108 _107708 s) = (term1109 _107708 s).
Proof. exact (MK_COMB (@lem4569423) (@lem4569422 _107708 s)). Qed.
Lemma lem4569425 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569426 {_107708 : Type'} (s : _107708 -> Prop) : (term1110 _107708 s) = (term1111 _107708 s).
Proof. exact (MK_COMB (@lem4569425) (@lem4569424 _107708 s)). Qed.
Lemma lem4569427 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1102 _107708 s n) = (term1082 _107708 s n).
Proof. exact (eq_refl (term1102 _107708 s n)). Qed.
Lemma lem4569428 {_107708 : Type'} (s : _107708 -> Prop) : (term1112 _107708 s) = (term1099 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4569427 _107708 s n)). Qed.
Lemma lem4569429 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4569430 {_107708 : Type'} (s : _107708 -> Prop) : (term1113 _107708 s) = (term1114 _107708 s).
Proof. exact (MK_COMB (@lem4569429) (@lem4569428 _107708 s)). Qed.
Lemma lem4569431 {_107708 : Type'} (s : _107708 -> Prop) : (term1097 _107708 s) = (term1115 _107708 s).
Proof. exact (MK_COMB (@lem4569426 _107708 s) (@lem4569430 _107708 s)). Qed.
Lemma lem4569432 {_107708 : Type'} (s : _107708 -> Prop) : ((term1096 _107708 s) = (term1097 _107708 s)) = ((term1091 _107708 s) = (term1115 _107708 s)).
Proof. exact (MK_COMB (@lem4569420 _107708 s) (@lem4569431 _107708 s)). Qed.
Lemma lem4569433 {_107708 : Type'} (s : _107708 -> Prop) : (term1091 _107708 s) = (term1115 _107708 s).
Proof. exact (EQ_MP (@lem4569432 _107708 s) (@lem4569410 _107708 s)). Qed.
Lemma lem4569530 {_107708 : Type'} : (term1092 _107708) = (term1116 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4569433 _107708 s)). Qed.
Lemma lem4569531 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4569532 {_107708 : Type'} : (term1093 _107708) = (term1117 _107708).
Proof. exact (MK_COMB (@lem4569531 _107708) (@lem4569530 _107708)). Qed.
Lemma lem4569534 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4569535 {_107708 : Type'} (P : type686 _107708) (Q : type686 _107708) : (term639 _107708 P Q) = (term640 _107708 P Q).
Proof. exact (@lem4569534 (_107708 -> Prop) P Q). Qed.
Lemma lem4569536 {_107708 : Type'} : (term1118 _107708) = (term1119 _107708).
Proof. exact (@lem4569535 _107708 (term1120 _107708) (term1121 _107708)). Qed.
Lemma lem4569537 {_107708 : Type'} (s : _107708 -> Prop) : (term1122 _107708 s) = (term1109 _107708 s).
Proof. exact (eq_refl (term1122 _107708 s)). Qed.
Lemma lem4569538 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569539 {_107708 : Type'} (s : _107708 -> Prop) : (term1123 _107708 s) = (term1111 _107708 s).
Proof. exact (MK_COMB (@lem4569538) (@lem4569537 _107708 s)). Qed.
Lemma lem4569540 {_107708 : Type'} (s : _107708 -> Prop) : (term1124 _107708 s) = (term1114 _107708 s).
Proof. exact (eq_refl (term1124 _107708 s)). Qed.
Lemma lem4569541 {_107708 : Type'} (s : _107708 -> Prop) : (term1125 _107708 s) = (term1115 _107708 s).
Proof. exact (MK_COMB (@lem4569539 _107708 s) (@lem4569540 _107708 s)). Qed.
Lemma lem4569542 {_107708 : Type'} : (term1126 _107708) = (term1116 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4569541 _107708 s)). Qed.
Lemma lem4569543 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4569544 {_107708 : Type'} : (term1118 _107708) = (term1117 _107708).
Proof. exact (MK_COMB (@lem4569543 _107708) (@lem4569542 _107708)). Qed.
Lemma lem4569545 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4569546 {_107708 : Type'} : (term1127 _107708) = (term1128 _107708).
Proof. exact (MK_COMB (@lem4569545) (@lem4569544 _107708)). Qed.
Lemma lem4569547 {_107708 : Type'} (s : _107708 -> Prop) : (term1122 _107708 s) = (term1109 _107708 s).
Proof. exact (eq_refl (term1122 _107708 s)). Qed.
Lemma lem4569548 {_107708 : Type'} : (term1129 _107708) = (term1120 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4569547 _107708 s)). Qed.
Lemma lem4569549 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4569550 {_107708 : Type'} : (term1130 _107708) = (term1131 _107708).
Proof. exact (MK_COMB (@lem4569549 _107708) (@lem4569548 _107708)). Qed.
Lemma lem4569551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4569552 {_107708 : Type'} : (term1132 _107708) = (term1133 _107708).
Proof. exact (MK_COMB (@lem4569551) (@lem4569550 _107708)). Qed.
Lemma lem4569553 {_107708 : Type'} (s : _107708 -> Prop) : (term1124 _107708 s) = (term1114 _107708 s).
Proof. exact (eq_refl (term1124 _107708 s)). Qed.
Lemma lem4569554 {_107708 : Type'} : (term1134 _107708) = (term1121 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4569553 _107708 s)). Qed.
Lemma lem4569555 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4569556 {_107708 : Type'} : (term1135 _107708) = (term1136 _107708).
Proof. exact (MK_COMB (@lem4569555 _107708) (@lem4569554 _107708)). Qed.
Lemma lem4569557 {_107708 : Type'} : (term1119 _107708) = (term1137 _107708).
Proof. exact (MK_COMB (@lem4569552 _107708) (@lem4569556 _107708)). Qed.
Lemma lem4569558 {_107708 : Type'} : ((term1118 _107708) = (term1119 _107708)) = ((term1117 _107708) = (term1137 _107708)).
Proof. exact (MK_COMB (@lem4569546 _107708) (@lem4569557 _107708)). Qed.
Lemma lem4569559 {_107708 : Type'} : (term1117 _107708) = (term1137 _107708).
Proof. exact (EQ_MP (@lem4569558 _107708) (@lem4569536 _107708)). Qed.
Lemma lem4569666 {_107708 : Type'} : (term1093 _107708) = (term1137 _107708).
Proof. exact (TRANS (@lem4569532 _107708) (@lem4569559 _107708)). Qed.
Lemma lem4569667 {_107708 : Type'} : (term13 _107708) = (term1137 _107708).
Proof. exact (TRANS (@lem4569402 _107708) (@lem4569666 _107708)). Qed.
Lemma lem4569668 {_107708 : Type'} (h1 : term13 _107708) : term1137 _107708.
Proof. exact (EQ_MP (@lem4569667 _107708) (@lem4563680 _107708 h1)). Qed.
Lemma lem4570570 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1138 _107705 _107708 s n) = (term1139 _107705 _107708 s n).
Proof. exact (@lem17045 (@FINITE (_107708 -> _107705) s) ((@CARD (_107708 -> _107705) s) = n)). Qed.
Lemma lem4570576 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1140 _107705 _107708 s n) = (term1140 _107705 _107708 s n).
Proof. exact (eq_refl (term1140 _107705 _107708 s n)). Qed.
Lemma lem4570578 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1141 _107705 _107708 s n) = (term1141 _107705 _107708 s n).
Proof. exact (eq_refl (term1141 _107705 _107708 s n)). Qed.
Lemma lem4570579 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1142 _107705 _107708 s n) = (term1143 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4570578 _107705 _107708 s n) (@lem4570570 _107705 _107708 s n)). Qed.
Lemma lem4570580 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4570581 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1144 _107705 _107708 s n) = (term1145 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4570580) (@lem4570579 _107705 _107708 s n)). Qed.
Lemma lem4570582 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1146 _107705 _107708 s n) = (term1147 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4570581 _107705 _107708 s n) (@lem4570576 _107705 _107708 s n)). Qed.
Lemma lem4570583 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = (term1146 _107705 _107708 s n).
Proof. exact (@lem17784 (@HAS_SIZE (_107708 -> _107705) s n) (term147 _107705 _107708 s n)). Qed.
Lemma lem4570584 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@HAS_SIZE (_107708 -> _107705) s n) = (term147 _107705 _107708 s n)) = (term1147 _107705 _107708 s n).
Proof. exact (TRANS (@lem4570583 _107705 _107708 s n) (@lem4570582 _107705 _107708 s n)). Qed.
Lemma lem4570585 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term148 _107705 _107708 s) = (term1148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4570584 _107705 _107708 s n)). Qed.
Lemma lem4570586 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4570587 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term149 _107705 _107708 s) = (term1149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570586) (@lem4570585 _107705 _107708 s)). Qed.
Lemma lem4570588 {_107705 _107708 : Type'} : (term150 _107705 _107708) = (term1150 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4570587 _107705 _107708 s)). Qed.
Lemma lem4570589 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4570590 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term1151 _107705 _107708).
Proof. exact (MK_COMB (@lem4570589 _107705 _107708) (@lem4570588 _107705 _107708)). Qed.
Lemma lem4570596 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4570597 (P : nat -> Prop) (Q : nat -> Prop) : (term1094 P Q) = (term1095 P Q).
Proof. exact (@lem4570596 nat P Q). Qed.
Lemma lem4570598 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1152 _107705 _107708 s) = (term1153 _107705 _107708 s).
Proof. exact (@lem4570597 (term1154 _107705 _107708 s) (term1155 _107705 _107708 s)). Qed.
Lemma lem4570599 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1156 _107705 _107708 s n) = (term1143 _107705 _107708 s n).
Proof. exact (eq_refl (term1156 _107705 _107708 s n)). Qed.
Lemma lem4570600 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4570601 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1157 _107705 _107708 s n) = (term1145 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4570600) (@lem4570599 _107705 _107708 s n)). Qed.
Lemma lem4570602 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1158 _107705 _107708 s n) = (term1140 _107705 _107708 s n).
Proof. exact (eq_refl (term1158 _107705 _107708 s n)). Qed.
Lemma lem4570603 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1159 _107705 _107708 s n) = (term1147 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4570601 _107705 _107708 s n) (@lem4570602 _107705 _107708 s n)). Qed.
Lemma lem4570604 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1160 _107705 _107708 s) = (term1148 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4570603 _107705 _107708 s n)). Qed.
Lemma lem4570605 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4570606 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1152 _107705 _107708 s) = (term1149 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570605) (@lem4570604 _107705 _107708 s)). Qed.
Lemma lem4570607 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4570608 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1161 _107705 _107708 s) = (term1162 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570607) (@lem4570606 _107705 _107708 s)). Qed.
Lemma lem4570609 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1156 _107705 _107708 s n) = (term1143 _107705 _107708 s n).
Proof. exact (eq_refl (term1156 _107705 _107708 s n)). Qed.
Lemma lem4570610 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1163 _107705 _107708 s) = (term1154 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4570609 _107705 _107708 s n)). Qed.
Lemma lem4570611 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4570612 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1164 _107705 _107708 s) = (term1165 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570611) (@lem4570610 _107705 _107708 s)). Qed.
Lemma lem4570613 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4570614 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1166 _107705 _107708 s) = (term1167 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570613) (@lem4570612 _107705 _107708 s)). Qed.
Lemma lem4570615 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1158 _107705 _107708 s n) = (term1140 _107705 _107708 s n).
Proof. exact (eq_refl (term1158 _107705 _107708 s n)). Qed.
Lemma lem4570616 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1168 _107705 _107708 s) = (term1155 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4570615 _107705 _107708 s n)). Qed.
Lemma lem4570617 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4570618 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1169 _107705 _107708 s) = (term1170 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570617) (@lem4570616 _107705 _107708 s)). Qed.
Lemma lem4570619 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1153 _107705 _107708 s) = (term1171 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570614 _107705 _107708 s) (@lem4570618 _107705 _107708 s)). Qed.
Lemma lem4570620 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : ((term1152 _107705 _107708 s) = (term1153 _107705 _107708 s)) = ((term1149 _107705 _107708 s) = (term1171 _107705 _107708 s)).
Proof. exact (MK_COMB (@lem4570608 _107705 _107708 s) (@lem4570619 _107705 _107708 s)). Qed.
Lemma lem4570621 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1149 _107705 _107708 s) = (term1171 _107705 _107708 s).
Proof. exact (EQ_MP (@lem4570620 _107705 _107708 s) (@lem4570598 _107705 _107708 s)). Qed.
Lemma lem4570718 {_107705 _107708 : Type'} : (term1150 _107705 _107708) = (term1172 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4570621 _107705 _107708 s)). Qed.
Lemma lem4570719 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4570720 {_107705 _107708 : Type'} : (term1151 _107705 _107708) = (term1173 _107705 _107708).
Proof. exact (MK_COMB (@lem4570719 _107705 _107708) (@lem4570718 _107705 _107708)). Qed.
Lemma lem4570722 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term591 A P Q) = (term592 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4570723 {_107705 _107708 : Type'} (P : type207 _107705 _107708) (Q : type207 _107705 _107708) : (term1174 _107705 _107708 P Q) = (term1175 _107705 _107708 P Q).
Proof. exact (@lem4570722 (type805 _107705 _107708) P Q). Qed.
Lemma lem4570724 {_107705 _107708 : Type'} : (term1176 _107705 _107708) = (term1177 _107705 _107708).
Proof. exact (@lem4570723 _107705 _107708 (term1178 _107705 _107708) (term1179 _107705 _107708)). Qed.
Lemma lem4570725 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1180 _107705 _107708 s) = (term1165 _107705 _107708 s).
Proof. exact (eq_refl (term1180 _107705 _107708 s)). Qed.
Lemma lem4570726 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4570727 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1181 _107705 _107708 s) = (term1167 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570726) (@lem4570725 _107705 _107708 s)). Qed.
Lemma lem4570728 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1182 _107705 _107708 s) = (term1170 _107705 _107708 s).
Proof. exact (eq_refl (term1182 _107705 _107708 s)). Qed.
Lemma lem4570729 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1183 _107705 _107708 s) = (term1171 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4570727 _107705 _107708 s) (@lem4570728 _107705 _107708 s)). Qed.
Lemma lem4570730 {_107705 _107708 : Type'} : (term1184 _107705 _107708) = (term1172 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4570729 _107705 _107708 s)). Qed.
Lemma lem4570731 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4570732 {_107705 _107708 : Type'} : (term1176 _107705 _107708) = (term1173 _107705 _107708).
Proof. exact (MK_COMB (@lem4570731 _107705 _107708) (@lem4570730 _107705 _107708)). Qed.
Lemma lem4570733 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4570734 {_107705 _107708 : Type'} : (term1185 _107705 _107708) = (term1186 _107705 _107708).
Proof. exact (MK_COMB (@lem4570733) (@lem4570732 _107705 _107708)). Qed.
Lemma lem4570735 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1180 _107705 _107708 s) = (term1165 _107705 _107708 s).
Proof. exact (eq_refl (term1180 _107705 _107708 s)). Qed.
Lemma lem4570736 {_107705 _107708 : Type'} : (term1187 _107705 _107708) = (term1178 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4570735 _107705 _107708 s)). Qed.
Lemma lem4570737 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4570738 {_107705 _107708 : Type'} : (term1188 _107705 _107708) = (term1189 _107705 _107708).
Proof. exact (MK_COMB (@lem4570737 _107705 _107708) (@lem4570736 _107705 _107708)). Qed.
Lemma lem4570739 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4570740 {_107705 _107708 : Type'} : (term1190 _107705 _107708) = (term1191 _107705 _107708).
Proof. exact (MK_COMB (@lem4570739) (@lem4570738 _107705 _107708)). Qed.
Lemma lem4570741 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1182 _107705 _107708 s) = (term1170 _107705 _107708 s).
Proof. exact (eq_refl (term1182 _107705 _107708 s)). Qed.
Lemma lem4570742 {_107705 _107708 : Type'} : (term1192 _107705 _107708) = (term1179 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4570741 _107705 _107708 s)). Qed.
Lemma lem4570743 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4570744 {_107705 _107708 : Type'} : (term1193 _107705 _107708) = (term1194 _107705 _107708).
Proof. exact (MK_COMB (@lem4570743 _107705 _107708) (@lem4570742 _107705 _107708)). Qed.
Lemma lem4570745 {_107705 _107708 : Type'} : (term1177 _107705 _107708) = (term1195 _107705 _107708).
Proof. exact (MK_COMB (@lem4570740 _107705 _107708) (@lem4570744 _107705 _107708)). Qed.
Lemma lem4570746 {_107705 _107708 : Type'} : ((term1176 _107705 _107708) = (term1177 _107705 _107708)) = ((term1173 _107705 _107708) = (term1195 _107705 _107708)).
Proof. exact (MK_COMB (@lem4570734 _107705 _107708) (@lem4570745 _107705 _107708)). Qed.
Lemma lem4570747 {_107705 _107708 : Type'} : (term1173 _107705 _107708) = (term1195 _107705 _107708).
Proof. exact (EQ_MP (@lem4570746 _107705 _107708) (@lem4570724 _107705 _107708)). Qed.
Lemma lem4570854 {_107705 _107708 : Type'} : (term1151 _107705 _107708) = (term1195 _107705 _107708).
Proof. exact (TRANS (@lem4570720 _107705 _107708) (@lem4570747 _107705 _107708)). Qed.
Lemma lem4570855 {_107705 _107708 : Type'} : (term15 _107705 _107708) = (term1195 _107705 _107708).
Proof. exact (TRANS (@lem4570590 _107705 _107708) (@lem4570854 _107705 _107708)). Qed.
Lemma lem4570856 {_107705 _107708 : Type'} (h1 : term15 _107705 _107708) : term1195 _107705 _107708.
Proof. exact (EQ_MP (@lem4570855 _107705 _107708) (@lem4563684 _107705 _107708 h1)). Qed.
Lemma lem4572051 {_107705 _107708 : Type'} (s : _107708 -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term1196 _107705 _107708 s m t n) = (term1197 _107705 _107708 s m t n).
Proof. exact (@lem17045 (@HAS_SIZE _107708 s m) (@HAS_SIZE _107705 t n)). Qed.
Lemma lem4572052 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term128 _107705 _107708 _54415 t s d n m) = (term128 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term128 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4572053 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572054 {_107705 _107708 : Type'} (s : _107708 -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term1198 _107705 _107708 s m t n) = (term1199 _107705 _107708 s m t n).
Proof. exact (MK_COMB (@lem4572053) (@lem4572051 _107705 _107708 s m t n)). Qed.
Lemma lem4572055 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1200 _107705 _107708 _54415 t s d n m) = (term1201 _107705 _107708 _54415 t s d n m).
Proof. exact (MK_COMB (@lem4572054 _107705 _107708 s m t n) (@lem4572052 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4572056 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term1200 _107705 _107708 _54415 t s d n m).
Proof. exact (@lem17265 (term1202 _107705 _107708 s m t n) (term128 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4572057 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term129 _107705 _107708 _54415 t s d n m) = (term1201 _107705 _107708 _54415 t s d n m).
Proof. exact (TRANS (@lem4572056 _107705 _107708 _54415 t s d n m) (@lem4572055 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4572058 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term130 _107705 _107708 _54415 t d n m) = (term1203 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4572057 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4572059 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4572060 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term131 _107705 _107708 _54415 t d n m) = (term1204 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4572059 _107708) (@lem4572058 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4572061 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term132 _107705 _107708 _54415 t d n) = (term1205 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4572060 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4572062 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4572063 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term133 _107705 _107708 _54415 t d n) = (term1206 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4572062) (@lem4572061 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4572064 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term134 _107705 _107708 _54415 d n) = (term1207 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4572063 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4572065 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4572066 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term135 _107705 _107708 _54415 d n) = (term1208 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4572065 _107705) (@lem4572064 _107705 _107708 _54415 d n)). Qed.
Lemma lem4572067 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term136 _107705 _107708 _54415 d) = (term1209 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4572066 _107705 _107708 _54415 d n)). Qed.
Lemma lem4572068 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4572069 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term137 _107705 _107708 _54415 d) = (term1210 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4572068) (@lem4572067 _107705 _107708 _54415 d)). Qed.
Lemma lem4572070 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term138 _107705 _107708 _54415) = (term1211 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4572069 _107705 _107708 _54415 d)). Qed.
Lemma lem4572071 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4572140 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term139 _107705 _107708 _54415) = (term1212 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4572071 _107705) (@lem4572070 _107705 _107708 _54415)). Qed.
Lemma lem4572141 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1212 _107705 _107708 _54415.
Proof. exact (EQ_MP (@lem4572140 _107705 _107708 _54415) (@lem4563689 _107705 _107708 _54415 h1)). Qed.
Lemma lem4572627 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) (h1 : term1073 _107705 _107708 _54415 s d) : term1073 _107705 _107708 _54415 s d.
Proof. exact (h1). Qed.
Lemma lem4572628 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1063 _107705 _107708 _54415 t s d.
Proof. exact (h1). Qed.
Lemma lem4572635 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4572640 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572641 {_107705 : Type'} (f : type687 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> nat) f x).
Proof. exact (@lem4572640 (_107705 -> Prop) nat f x). Qed.
Lemma lem4572643 {_107705 : Type'} (s : _107705 -> Prop) : (@CARD _107705 s) = (@I ((_107705 -> Prop) -> nat) (@CARD _107705) s).
Proof. exact (@lem4572641 _107705 (@CARD _107705) s). Qed.
Lemma lem4572644 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572645 {_107705 : Type'} (s : _107705 -> Prop) : (term1213 _107705 s) = (term1214 _107705 s).
Proof. exact (MK_COMB (@lem4572635) (@lem4572643 _107705 s)). Qed.
Lemma lem4572646 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@CARD _107705 s) = n) = ((@I ((_107705 -> Prop) -> nat) (@CARD _107705) s) = n).
Proof. exact (MK_COMB (@lem4572645 _107705 s) (@lem4572644 n)). Qed.
Lemma lem4572651 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572652 {_107705 : Type'} (f : type686 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> Prop) f x).
Proof. exact (@lem4572651 (_107705 -> Prop) Prop f x). Qed.
Lemma lem4572654 {_107705 : Type'} (s : _107705 -> Prop) : (@FINITE _107705 s) = (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) s).
Proof. exact (@lem4572652 _107705 (@FINITE _107705) s). Qed.
Lemma lem4572655 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4572656 {_107705 : Type'} (s : _107705 -> Prop) : (term1215 _107705 s) = (term1216 _107705 s).
Proof. exact (MK_COMB (@lem4572655) (@lem4572654 _107705 s)). Qed.
Lemma lem4572657 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term156 _107705 s n) = (term1217 _107705 s n).
Proof. exact (MK_COMB (@lem4572656 _107705 s) (@lem4572646 _107705 s n)). Qed.
Lemma lem4572658 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4572665 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572666 {_107705 : Type'} (f : type682 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4572665 (_107705 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4572667 {_107705 : Type'} (s : _107705 -> Prop) : (@HAS_SIZE _107705 s) = (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s).
Proof. exact (@lem4572666 _107705 (@HAS_SIZE _107705) s). Qed.
Lemma lem4572668 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572669 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (@HAS_SIZE _107705 s n) = (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s n).
Proof. exact (MK_COMB (@lem4572667 _107705 s) (@lem4572668 n)). Qed.
Lemma lem4572671 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572672 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4572671 nat Prop f x). Qed.
Lemma lem4572673 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s n) = (term1218 _107705 s n).
Proof. exact (@lem4572672 (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s) n). Qed.
Lemma lem4572675 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (@HAS_SIZE _107705 s n) = (term1218 _107705 s n).
Proof. exact (TRANS (@lem4572669 _107705 s n) (@lem4572673 _107705 s n)). Qed.
Lemma lem4572676 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1219 _107705 s n) = (term1220 _107705 s n).
Proof. exact (MK_COMB (@lem4572658) (@lem4572675 _107705 s n)). Qed.
Lemma lem4572677 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572678 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1221 _107705 s n) = (term1222 _107705 s n).
Proof. exact (MK_COMB (@lem4572677) (@lem4572676 _107705 s n)). Qed.
Lemma lem4572679 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1082 _107705 s n) = (term1223 _107705 s n).
Proof. exact (MK_COMB (@lem4572678 _107705 s n) (@lem4572657 _107705 s n)). Qed.
Lemma lem4572680 {_107705 : Type'} (s : _107705 -> Prop) : (term1099 _107705 s) = (term1224 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4572679 _107705 s n)). Qed.
Lemma lem4572681 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4572682 {_107705 : Type'} (s : _107705 -> Prop) : (term1114 _107705 s) = (term1225 _107705 s).
Proof. exact (MK_COMB (@lem4572681) (@lem4572680 _107705 s)). Qed.
Lemma lem4572683 {_107705 : Type'} : (term1121 _107705) = (term1226 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4572682 _107705 s)). Qed.
Lemma lem4572684 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4572685 {_107705 : Type'} : (term1136 _107705) = (term1227 _107705).
Proof. exact (MK_COMB (@lem4572684 _107705) (@lem4572683 _107705)). Qed.
Lemma lem4572686 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4572687 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4572692 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572693 {_107705 : Type'} (f : type687 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> nat) f x).
Proof. exact (@lem4572692 (_107705 -> Prop) nat f x). Qed.
Lemma lem4572695 {_107705 : Type'} (s : _107705 -> Prop) : (@CARD _107705 s) = (@I ((_107705 -> Prop) -> nat) (@CARD _107705) s).
Proof. exact (@lem4572693 _107705 (@CARD _107705) s). Qed.
Lemma lem4572696 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572697 {_107705 : Type'} (s : _107705 -> Prop) : (term1213 _107705 s) = (term1214 _107705 s).
Proof. exact (MK_COMB (@lem4572687) (@lem4572695 _107705 s)). Qed.
Lemma lem4572698 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : ((@CARD _107705 s) = n) = ((@I ((_107705 -> Prop) -> nat) (@CARD _107705) s) = n).
Proof. exact (MK_COMB (@lem4572697 _107705 s) (@lem4572696 n)). Qed.
Lemma lem4572699 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1228 _107705 s n) = (term1229 _107705 s n).
Proof. exact (MK_COMB (@lem4572686) (@lem4572698 _107705 s n)). Qed.
Lemma lem4572700 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4572705 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572706 {_107705 : Type'} (f : type686 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> Prop) f x).
Proof. exact (@lem4572705 (_107705 -> Prop) Prop f x). Qed.
Lemma lem4572708 {_107705 : Type'} (s : _107705 -> Prop) : (@FINITE _107705 s) = (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) s).
Proof. exact (@lem4572706 _107705 (@FINITE _107705) s). Qed.
Lemma lem4572709 {_107705 : Type'} (s : _107705 -> Prop) : (term1230 _107705 s) = (term1231 _107705 s).
Proof. exact (MK_COMB (@lem4572700) (@lem4572708 _107705 s)). Qed.
Lemma lem4572710 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572711 {_107705 : Type'} (s : _107705 -> Prop) : (term1232 _107705 s) = (term1233 _107705 s).
Proof. exact (MK_COMB (@lem4572710) (@lem4572709 _107705 s)). Qed.
Lemma lem4572712 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1081 _107705 s n) = (term1234 _107705 s n).
Proof. exact (MK_COMB (@lem4572711 _107705 s) (@lem4572699 _107705 s n)). Qed.
Lemma lem4572719 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572720 {_107705 : Type'} (f : type682 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4572719 (_107705 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4572721 {_107705 : Type'} (s : _107705 -> Prop) : (@HAS_SIZE _107705 s) = (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s).
Proof. exact (@lem4572720 _107705 (@HAS_SIZE _107705) s). Qed.
Lemma lem4572722 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572723 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (@HAS_SIZE _107705 s n) = (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s n).
Proof. exact (MK_COMB (@lem4572721 _107705 s) (@lem4572722 n)). Qed.
Lemma lem4572725 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572726 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4572725 nat Prop f x). Qed.
Lemma lem4572727 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s n) = (term1218 _107705 s n).
Proof. exact (@lem4572726 (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) s) n). Qed.
Lemma lem4572729 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (@HAS_SIZE _107705 s n) = (term1218 _107705 s n).
Proof. exact (TRANS (@lem4572723 _107705 s n) (@lem4572727 _107705 s n)). Qed.
Lemma lem4572730 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572731 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1083 _107705 s n) = (term1235 _107705 s n).
Proof. exact (MK_COMB (@lem4572730) (@lem4572729 _107705 s n)). Qed.
Lemma lem4572732 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1085 _107705 s n) = (term1236 _107705 s n).
Proof. exact (MK_COMB (@lem4572731 _107705 s n) (@lem4572712 _107705 s n)). Qed.
Lemma lem4572733 {_107705 : Type'} (s : _107705 -> Prop) : (term1098 _107705 s) = (term1237 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4572732 _107705 s n)). Qed.
Lemma lem4572734 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4572735 {_107705 : Type'} (s : _107705 -> Prop) : (term1109 _107705 s) = (term1238 _107705 s).
Proof. exact (MK_COMB (@lem4572734) (@lem4572733 _107705 s)). Qed.
Lemma lem4572736 {_107705 : Type'} : (term1120 _107705) = (term1239 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4572735 _107705 s)). Qed.
Lemma lem4572737 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4572738 {_107705 : Type'} : (term1131 _107705) = (term1240 _107705).
Proof. exact (MK_COMB (@lem4572737 _107705) (@lem4572736 _107705)). Qed.
Lemma lem4572739 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4572740 {_107705 : Type'} : (term1133 _107705) = (term1241 _107705).
Proof. exact (MK_COMB (@lem4572739) (@lem4572738 _107705)). Qed.
Lemma lem4572741 {_107705 : Type'} : (term1137 _107705) = (term1242 _107705).
Proof. exact (MK_COMB (@lem4572740 _107705) (@lem4572685 _107705)). Qed.
Lemma lem4572742 {_107705 : Type'} (h1 : term13 _107705) : term1242 _107705.
Proof. exact (EQ_MP (@lem4572741 _107705) (@lem4569371 _107705 h1)). Qed.
Lemma lem4572743 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4572748 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572749 {_107708 : Type'} (f : type687 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> nat) f x).
Proof. exact (@lem4572748 (_107708 -> Prop) nat f x). Qed.
Lemma lem4572751 {_107708 : Type'} (s : _107708 -> Prop) : (@CARD _107708 s) = (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s).
Proof. exact (@lem4572749 _107708 (@CARD _107708) s). Qed.
Lemma lem4572752 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572753 {_107708 : Type'} (s : _107708 -> Prop) : (term1213 _107708 s) = (term1214 _107708 s).
Proof. exact (MK_COMB (@lem4572743) (@lem4572751 _107708 s)). Qed.
Lemma lem4572754 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@CARD _107708 s) = n) = ((@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) = n).
Proof. exact (MK_COMB (@lem4572753 _107708 s) (@lem4572752 n)). Qed.
Lemma lem4572759 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572760 {_107708 : Type'} (f : type686 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> Prop) f x).
Proof. exact (@lem4572759 (_107708 -> Prop) Prop f x). Qed.
Lemma lem4572762 {_107708 : Type'} (s : _107708 -> Prop) : (@FINITE _107708 s) = (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s).
Proof. exact (@lem4572760 _107708 (@FINITE _107708) s). Qed.
Lemma lem4572763 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4572764 {_107708 : Type'} (s : _107708 -> Prop) : (term1215 _107708 s) = (term1216 _107708 s).
Proof. exact (MK_COMB (@lem4572763) (@lem4572762 _107708 s)). Qed.
Lemma lem4572765 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term156 _107708 s n) = (term1217 _107708 s n).
Proof. exact (MK_COMB (@lem4572764 _107708 s) (@lem4572754 _107708 s n)). Qed.
Lemma lem4572766 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4572773 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572774 {_107708 : Type'} (f : type682 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4572773 (_107708 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4572775 {_107708 : Type'} (s : _107708 -> Prop) : (@HAS_SIZE _107708 s) = (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s).
Proof. exact (@lem4572774 _107708 (@HAS_SIZE _107708) s). Qed.
Lemma lem4572776 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572777 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (@HAS_SIZE _107708 s n) = (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s n).
Proof. exact (MK_COMB (@lem4572775 _107708 s) (@lem4572776 n)). Qed.
Lemma lem4572779 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572780 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4572779 nat Prop f x). Qed.
Lemma lem4572781 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s n) = (term1218 _107708 s n).
Proof. exact (@lem4572780 (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s) n). Qed.
Lemma lem4572783 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (@HAS_SIZE _107708 s n) = (term1218 _107708 s n).
Proof. exact (TRANS (@lem4572777 _107708 s n) (@lem4572781 _107708 s n)). Qed.
Lemma lem4572784 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1219 _107708 s n) = (term1220 _107708 s n).
Proof. exact (MK_COMB (@lem4572766) (@lem4572783 _107708 s n)). Qed.
Lemma lem4572785 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572786 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1221 _107708 s n) = (term1222 _107708 s n).
Proof. exact (MK_COMB (@lem4572785) (@lem4572784 _107708 s n)). Qed.
Lemma lem4572787 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1082 _107708 s n) = (term1223 _107708 s n).
Proof. exact (MK_COMB (@lem4572786 _107708 s n) (@lem4572765 _107708 s n)). Qed.
Lemma lem4572788 {_107708 : Type'} (s : _107708 -> Prop) : (term1099 _107708 s) = (term1224 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4572787 _107708 s n)). Qed.
Lemma lem4572789 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4572790 {_107708 : Type'} (s : _107708 -> Prop) : (term1114 _107708 s) = (term1225 _107708 s).
Proof. exact (MK_COMB (@lem4572789) (@lem4572788 _107708 s)). Qed.
Lemma lem4572791 {_107708 : Type'} : (term1121 _107708) = (term1226 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4572790 _107708 s)). Qed.
Lemma lem4572792 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4572793 {_107708 : Type'} : (term1136 _107708) = (term1227 _107708).
Proof. exact (MK_COMB (@lem4572792 _107708) (@lem4572791 _107708)). Qed.
Lemma lem4572794 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4572795 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4572800 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572801 {_107708 : Type'} (f : type687 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> nat) f x).
Proof. exact (@lem4572800 (_107708 -> Prop) nat f x). Qed.
Lemma lem4572803 {_107708 : Type'} (s : _107708 -> Prop) : (@CARD _107708 s) = (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s).
Proof. exact (@lem4572801 _107708 (@CARD _107708) s). Qed.
Lemma lem4572804 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572805 {_107708 : Type'} (s : _107708 -> Prop) : (term1213 _107708 s) = (term1214 _107708 s).
Proof. exact (MK_COMB (@lem4572795) (@lem4572803 _107708 s)). Qed.
Lemma lem4572806 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : ((@CARD _107708 s) = n) = ((@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) = n).
Proof. exact (MK_COMB (@lem4572805 _107708 s) (@lem4572804 n)). Qed.
Lemma lem4572807 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1228 _107708 s n) = (term1229 _107708 s n).
Proof. exact (MK_COMB (@lem4572794) (@lem4572806 _107708 s n)). Qed.
Lemma lem4572808 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4572813 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572814 {_107708 : Type'} (f : type686 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> Prop) f x).
Proof. exact (@lem4572813 (_107708 -> Prop) Prop f x). Qed.
Lemma lem4572816 {_107708 : Type'} (s : _107708 -> Prop) : (@FINITE _107708 s) = (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s).
Proof. exact (@lem4572814 _107708 (@FINITE _107708) s). Qed.
Lemma lem4572817 {_107708 : Type'} (s : _107708 -> Prop) : (term1230 _107708 s) = (term1231 _107708 s).
Proof. exact (MK_COMB (@lem4572808) (@lem4572816 _107708 s)). Qed.
Lemma lem4572818 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572819 {_107708 : Type'} (s : _107708 -> Prop) : (term1232 _107708 s) = (term1233 _107708 s).
Proof. exact (MK_COMB (@lem4572818) (@lem4572817 _107708 s)). Qed.
Lemma lem4572820 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1081 _107708 s n) = (term1234 _107708 s n).
Proof. exact (MK_COMB (@lem4572819 _107708 s) (@lem4572807 _107708 s n)). Qed.
Lemma lem4572827 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572828 {_107708 : Type'} (f : type682 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4572827 (_107708 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4572829 {_107708 : Type'} (s : _107708 -> Prop) : (@HAS_SIZE _107708 s) = (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s).
Proof. exact (@lem4572828 _107708 (@HAS_SIZE _107708) s). Qed.
Lemma lem4572830 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4572831 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (@HAS_SIZE _107708 s n) = (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s n).
Proof. exact (MK_COMB (@lem4572829 _107708 s) (@lem4572830 n)). Qed.
Lemma lem4572833 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4572834 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4572833 nat Prop f x). Qed.
Lemma lem4572835 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s n) = (term1218 _107708 s n).
Proof. exact (@lem4572834 (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s) n). Qed.
Lemma lem4572837 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (@HAS_SIZE _107708 s n) = (term1218 _107708 s n).
Proof. exact (TRANS (@lem4572831 _107708 s n) (@lem4572835 _107708 s n)). Qed.
Lemma lem4572838 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4572839 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1083 _107708 s n) = (term1235 _107708 s n).
Proof. exact (MK_COMB (@lem4572838) (@lem4572837 _107708 s n)). Qed.
Lemma lem4572840 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1085 _107708 s n) = (term1236 _107708 s n).
Proof. exact (MK_COMB (@lem4572839 _107708 s n) (@lem4572820 _107708 s n)). Qed.
Lemma lem4572841 {_107708 : Type'} (s : _107708 -> Prop) : (term1098 _107708 s) = (term1237 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4572840 _107708 s n)). Qed.
Lemma lem4572842 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4572843 {_107708 : Type'} (s : _107708 -> Prop) : (term1109 _107708 s) = (term1238 _107708 s).
Proof. exact (MK_COMB (@lem4572842) (@lem4572841 _107708 s)). Qed.
Lemma lem4572844 {_107708 : Type'} : (term1120 _107708) = (term1239 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4572843 _107708 s)). Qed.
Lemma lem4572845 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4572846 {_107708 : Type'} : (term1131 _107708) = (term1240 _107708).
Proof. exact (MK_COMB (@lem4572845 _107708) (@lem4572844 _107708)). Qed.
Lemma lem4572847 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4572848 {_107708 : Type'} : (term1133 _107708) = (term1241 _107708).
Proof. exact (MK_COMB (@lem4572847) (@lem4572846 _107708)). Qed.
Lemma lem4572849 {_107708 : Type'} : (term1137 _107708) = (term1242 _107708).
Proof. exact (MK_COMB (@lem4572848 _107708) (@lem4572793 _107708)). Qed.
Lemma lem4572850 {_107708 : Type'} (h1 : term13 _107708) : term1242 _107708.
Proof. exact (EQ_MP (@lem4572849 _107708) (@lem4569668 _107708 h1)). Qed.
Lemma lem4573175 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4573180 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573181 {_107705 _107708 : Type'} (f : type208 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> nat) f x).
Proof. exact (@lem4573180 (type805 _107705 _107708) nat f x). Qed.
Lemma lem4573183 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (@CARD (_107708 -> _107705) s) = (@I (((_107708 -> _107705) -> Prop) -> nat) (@CARD (_107708 -> _107705)) s).
Proof. exact (@lem4573181 _107705 _107708 (@CARD (_107708 -> _107705)) s). Qed.
Lemma lem4573184 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4573185 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1243 _107705 _107708 s) = (term1244 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573175) (@lem4573183 _107705 _107708 s)). Qed.
Lemma lem4573186 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@CARD (_107708 -> _107705) s) = n) = ((@I (((_107708 -> _107705) -> Prop) -> nat) (@CARD (_107708 -> _107705)) s) = n).
Proof. exact (MK_COMB (@lem4573185 _107705 _107708 s) (@lem4573184 n)). Qed.
Lemma lem4573191 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573192 {_107705 _107708 : Type'} (f : type207 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> Prop) f x).
Proof. exact (@lem4573191 (type805 _107705 _107708) Prop f x). Qed.
Lemma lem4573194 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (@FINITE (_107708 -> _107705) s) = (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) s).
Proof. exact (@lem4573192 _107705 _107708 (@FINITE (_107708 -> _107705)) s). Qed.
Lemma lem4573195 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4573196 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1245 _107705 _107708 s) = (term1246 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573195) (@lem4573194 _107705 _107708 s)). Qed.
Lemma lem4573197 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term147 _107705 _107708 s n) = (term1247 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573196 _107705 _107708 s) (@lem4573186 _107705 _107708 s n)). Qed.
Lemma lem4573198 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4573205 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573206 {_107705 _107708 : Type'} (f : type206 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4573205 (type805 _107705 _107708) (nat -> Prop) f x). Qed.
Lemma lem4573207 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (@HAS_SIZE (_107708 -> _107705) s) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s).
Proof. exact (@lem4573206 _107705 _107708 (@HAS_SIZE (_107708 -> _107705)) s). Qed.
Lemma lem4573208 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4573209 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (@HAS_SIZE (_107708 -> _107705) s n) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s n).
Proof. exact (MK_COMB (@lem4573207 _107705 _107708 s) (@lem4573208 n)). Qed.
Lemma lem4573211 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573212 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4573211 nat Prop f x). Qed.
Lemma lem4573213 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s n) = (term1248 _107705 _107708 s n).
Proof. exact (@lem4573212 (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s) n). Qed.
Lemma lem4573215 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (@HAS_SIZE (_107708 -> _107705) s n) = (term1248 _107705 _107708 s n).
Proof. exact (TRANS (@lem4573209 _107705 _107708 s n) (@lem4573213 _107705 _107708 s n)). Qed.
Lemma lem4573216 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1249 _107705 _107708 s n) = (term1250 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573198) (@lem4573215 _107705 _107708 s n)). Qed.
Lemma lem4573217 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4573218 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1251 _107705 _107708 s n) = (term1252 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573217) (@lem4573216 _107705 _107708 s n)). Qed.
Lemma lem4573219 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1140 _107705 _107708 s n) = (term1253 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573218 _107705 _107708 s n) (@lem4573197 _107705 _107708 s n)). Qed.
Lemma lem4573220 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1155 _107705 _107708 s) = (term1254 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4573219 _107705 _107708 s n)). Qed.
Lemma lem4573221 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4573222 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1170 _107705 _107708 s) = (term1255 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573221) (@lem4573220 _107705 _107708 s)). Qed.
Lemma lem4573223 {_107705 _107708 : Type'} : (term1179 _107705 _107708) = (term1256 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4573222 _107705 _107708 s)). Qed.
Lemma lem4573224 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4573225 {_107705 _107708 : Type'} : (term1194 _107705 _107708) = (term1257 _107705 _107708).
Proof. exact (MK_COMB (@lem4573224 _107705 _107708) (@lem4573223 _107705 _107708)). Qed.
Lemma lem4573226 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4573227 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4573232 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573233 {_107705 _107708 : Type'} (f : type208 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> nat) f x).
Proof. exact (@lem4573232 (type805 _107705 _107708) nat f x). Qed.
Lemma lem4573235 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (@CARD (_107708 -> _107705) s) = (@I (((_107708 -> _107705) -> Prop) -> nat) (@CARD (_107708 -> _107705)) s).
Proof. exact (@lem4573233 _107705 _107708 (@CARD (_107708 -> _107705)) s). Qed.
Lemma lem4573236 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4573237 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1243 _107705 _107708 s) = (term1244 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573227) (@lem4573235 _107705 _107708 s)). Qed.
Lemma lem4573238 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : ((@CARD (_107708 -> _107705) s) = n) = ((@I (((_107708 -> _107705) -> Prop) -> nat) (@CARD (_107708 -> _107705)) s) = n).
Proof. exact (MK_COMB (@lem4573237 _107705 _107708 s) (@lem4573236 n)). Qed.
Lemma lem4573239 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1258 _107705 _107708 s n) = (term1259 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573226) (@lem4573238 _107705 _107708 s n)). Qed.
Lemma lem4573240 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4573245 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573246 {_107705 _107708 : Type'} (f : type207 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> Prop) f x).
Proof. exact (@lem4573245 (type805 _107705 _107708) Prop f x). Qed.
Lemma lem4573248 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (@FINITE (_107708 -> _107705) s) = (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) s).
Proof. exact (@lem4573246 _107705 _107708 (@FINITE (_107708 -> _107705)) s). Qed.
Lemma lem4573249 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1260 _107705 _107708 s) = (term1261 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573240) (@lem4573248 _107705 _107708 s)). Qed.
Lemma lem4573250 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4573251 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1262 _107705 _107708 s) = (term1263 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573250) (@lem4573249 _107705 _107708 s)). Qed.
Lemma lem4573252 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1139 _107705 _107708 s n) = (term1264 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573251 _107705 _107708 s) (@lem4573239 _107705 _107708 s n)). Qed.
Lemma lem4573259 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573260 {_107705 _107708 : Type'} (f : type206 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4573259 (type805 _107705 _107708) (nat -> Prop) f x). Qed.
Lemma lem4573261 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (@HAS_SIZE (_107708 -> _107705) s) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s).
Proof. exact (@lem4573260 _107705 _107708 (@HAS_SIZE (_107708 -> _107705)) s). Qed.
Lemma lem4573262 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4573263 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (@HAS_SIZE (_107708 -> _107705) s n) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s n).
Proof. exact (MK_COMB (@lem4573261 _107705 _107708 s) (@lem4573262 n)). Qed.
Lemma lem4573265 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573266 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4573265 nat Prop f x). Qed.
Lemma lem4573267 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s n) = (term1248 _107705 _107708 s n).
Proof. exact (@lem4573266 (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107708 -> _107705)) s) n). Qed.
Lemma lem4573269 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (@HAS_SIZE (_107708 -> _107705) s n) = (term1248 _107705 _107708 s n).
Proof. exact (TRANS (@lem4573263 _107705 _107708 s n) (@lem4573267 _107705 _107708 s n)). Qed.
Lemma lem4573270 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4573271 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1141 _107705 _107708 s n) = (term1265 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573270) (@lem4573269 _107705 _107708 s n)). Qed.
Lemma lem4573272 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1143 _107705 _107708 s n) = (term1266 _107705 _107708 s n).
Proof. exact (MK_COMB (@lem4573271 _107705 _107708 s n) (@lem4573252 _107705 _107708 s n)). Qed.
Lemma lem4573273 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1154 _107705 _107708 s) = (term1267 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4573272 _107705 _107708 s n)). Qed.
Lemma lem4573274 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4573275 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1165 _107705 _107708 s) = (term1268 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4573274) (@lem4573273 _107705 _107708 s)). Qed.
Lemma lem4573276 {_107705 _107708 : Type'} : (term1178 _107705 _107708) = (term1269 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4573275 _107705 _107708 s)). Qed.
Lemma lem4573277 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4573278 {_107705 _107708 : Type'} : (term1189 _107705 _107708) = (term1270 _107705 _107708).
Proof. exact (MK_COMB (@lem4573277 _107705 _107708) (@lem4573276 _107705 _107708)). Qed.
Lemma lem4573279 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4573280 {_107705 _107708 : Type'} : (term1191 _107705 _107708) = (term1271 _107705 _107708).
Proof. exact (MK_COMB (@lem4573279) (@lem4573278 _107705 _107708)). Qed.
Lemma lem4573281 {_107705 _107708 : Type'} : (term1195 _107705 _107708) = (term1272 _107705 _107708).
Proof. exact (MK_COMB (@lem4573280 _107705 _107708) (@lem4573225 _107705 _107708)). Qed.
Lemma lem4573282 {_107705 _107708 : Type'} (h1 : term15 _107705 _107708) : term1272 _107705 _107708.
Proof. exact (EQ_MP (@lem4573281 _107705 _107708) (@lem4570856 _107705 _107708 h1)). Qed.
Lemma lem4573715 {_107705 _107708 : Type'} : (@HAS_SIZE (_107708 -> _107705)) = (@HAS_SIZE (_107708 -> _107705)).
Proof. exact (eq_refl (@HAS_SIZE (_107708 -> _107705))). Qed.
Lemma lem4573716 {_107705 _107708 : Type'} : (@GSPEC (_107708 -> _107705)) = (@GSPEC (_107708 -> _107705)).
Proof. exact (eq_refl (@GSPEC (_107708 -> _107705))). Qed.
Lemma lem4573725 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573726 {_107705 _107708 : Type'} (f : type656 _107705 _107708) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4573725 (_107705 -> Prop) (type859 _107705 _107708) f x). Qed.
Lemma lem4573727 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (_54415 t) = (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t).
Proof. exact (@lem4573726 _107705 _107708 _54415 t). Qed.
Lemma lem4573728 {_107708 : Type'} (s : _107708 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4573729 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (_54415 t s) = (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t s).
Proof. exact (MK_COMB (@lem4573727 _107705 _107708 _54415 t) (@lem4573728 _107708 s)). Qed.
Lemma lem4573731 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573732 {_107705 _107708 : Type'} (f : type859 _107705 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4573731 (_107708 -> Prop) (type1372 _107705 _107708) f x). Qed.
Lemma lem4573733 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t s) = (term1273 _107705 _107708 _54415 t s).
Proof. exact (@lem4573732 _107705 _107708 (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t) s). Qed.
Lemma lem4573734 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (_54415 t s) = (term1273 _107705 _107708 _54415 t s).
Proof. exact (TRANS (@lem4573729 _107705 _107708 _54415 t s) (@lem4573733 _107705 _107708 _54415 t s)). Qed.
Lemma lem4573735 {_107705 : Type'} (d : _107705) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4573736 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (_54415 t s d) = (term1274 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4573734 _107705 _107708 _54415 t s) (@lem4573735 _107705 d)). Qed.
Lemma lem4573738 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573739 {_107705 _107708 : Type'} (f : type1372 _107705 _107708) (x : _107705) : (f x) = (@I (_107705 -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4573738 _107705 (type805 _107705 _107708) f x). Qed.
Lemma lem4573740 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1274 _107705 _107708 _54415 t s d) = (term1275 _107705 _107708 _54415 t s d).
Proof. exact (@lem4573739 _107705 _107708 (term1273 _107705 _107708 _54415 t s) d). Qed.
Lemma lem4573742 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (_54415 t s d) = (term1275 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4573736 _107705 _107708 _54415 t s d) (@lem4573740 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4573743 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term126 _107705 _107708 _54415 t s d) = (term1276 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4573716 _107705 _107708) (@lem4573742 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4573745 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573746 {_107705 _107708 : Type'} (f : type205 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4573745 (type805 _107705 _107708) (type805 _107705 _107708) f x). Qed.
Lemma lem4573747 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1276 _107705 _107708 _54415 t s d) = (term1277 _107705 _107708 _54415 t s d).
Proof. exact (@lem4573746 _107705 _107708 (@GSPEC (_107708 -> _107705)) (term1275 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4573748 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term126 _107705 _107708 _54415 t s d) = (term1277 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4573743 _107705 _107708 _54415 t s d) (@lem4573747 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4573755 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573756 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem4573755 nat (nat -> nat) f x). Qed.
Lemma lem4573757 (n : nat) : (Nat.pow n) = (@I (nat -> nat -> nat) Nat.pow n).
Proof. exact (@lem4573756 Nat.pow n). Qed.
Lemma lem4573758 (m : nat) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem4573759 (n : nat) (m : nat) : (Nat.pow n m) = (@I (nat -> nat -> nat) Nat.pow n m).
Proof. exact (MK_COMB (@lem4573757 n) (@lem4573758 m)). Qed.
Lemma lem4573761 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573762 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem4573761 nat nat f x). Qed.
Lemma lem4573763 (n : nat) (m : nat) : (@I (nat -> nat -> nat) Nat.pow n m) = (term1278 n m).
Proof. exact (@lem4573762 (@I (nat -> nat -> nat) Nat.pow n) m). Qed.
Lemma lem4573765 (n : nat) (m : nat) : (Nat.pow n m) = (term1278 n m).
Proof. exact (TRANS (@lem4573759 n m) (@lem4573763 n m)). Qed.
Lemma lem4573766 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term127 _107705 _107708 _54415 t s d) = (term1279 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4573715 _107705 _107708) (@lem4573748 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4573767 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term128 _107705 _107708 _54415 t s d n m) = (term1280 _107705 _107708 _54415 t s d n m).
Proof. exact (MK_COMB (@lem4573766 _107705 _107708 _54415 t s d) (@lem4573765 n m)). Qed.
Lemma lem4573769 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573770 {_107705 _107708 : Type'} (f : type206 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4573769 (type805 _107705 _107708) (nat -> Prop) f x). Qed.
Lemma lem4573771 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1279 _107705 _107708 _54415 t s d) = (term1281 _107705 _107708 _54415 t s d).
Proof. exact (@lem4573770 _107705 _107708 (@HAS_SIZE (_107708 -> _107705)) (term1277 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4573772 (n : nat) (m : nat) : (term1278 n m) = (term1278 n m).
Proof. exact (eq_refl (term1278 n m)). Qed.
Lemma lem4573773 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1280 _107705 _107708 _54415 t s d n m) = (term1282 _107705 _107708 _54415 t s d n m).
Proof. exact (MK_COMB (@lem4573771 _107705 _107708 _54415 t s d) (@lem4573772 n m)). Qed.
Lemma lem4573775 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573776 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4573775 nat Prop f x). Qed.
Lemma lem4573777 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1282 _107705 _107708 _54415 t s d n m) = (term1283 _107705 _107708 _54415 t s d n m).
Proof. exact (@lem4573776 (term1281 _107705 _107708 _54415 t s d) (term1278 n m)). Qed.
Lemma lem4573778 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1280 _107705 _107708 _54415 t s d n m) = (term1283 _107705 _107708 _54415 t s d n m).
Proof. exact (TRANS (@lem4573773 _107705 _107708 _54415 t s d n m) (@lem4573777 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4573779 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term128 _107705 _107708 _54415 t s d n m) = (term1283 _107705 _107708 _54415 t s d n m).
Proof. exact (TRANS (@lem4573767 _107705 _107708 _54415 t s d n m) (@lem4573778 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4573780 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4573787 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573788 {_107705 : Type'} (f : type682 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4573787 (_107705 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4573789 {_107705 : Type'} (t : _107705 -> Prop) : (@HAS_SIZE _107705 t) = (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) t).
Proof. exact (@lem4573788 _107705 (@HAS_SIZE _107705) t). Qed.
Lemma lem4573790 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4573791 {_107705 : Type'} (t : _107705 -> Prop) (n : nat) : (@HAS_SIZE _107705 t n) = (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) t n).
Proof. exact (MK_COMB (@lem4573789 _107705 t) (@lem4573790 n)). Qed.
Lemma lem4573793 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573794 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4573793 nat Prop f x). Qed.
Lemma lem4573795 {_107705 : Type'} (t : _107705 -> Prop) (n : nat) : (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) t n) = (term1218 _107705 t n).
Proof. exact (@lem4573794 (@I ((_107705 -> Prop) -> nat -> Prop) (@HAS_SIZE _107705) t) n). Qed.
Lemma lem4573797 {_107705 : Type'} (t : _107705 -> Prop) (n : nat) : (@HAS_SIZE _107705 t n) = (term1218 _107705 t n).
Proof. exact (TRANS (@lem4573791 _107705 t n) (@lem4573795 _107705 t n)). Qed.
Lemma lem4573798 {_107705 : Type'} (t : _107705 -> Prop) (n : nat) : (term1219 _107705 t n) = (term1220 _107705 t n).
Proof. exact (MK_COMB (@lem4573780) (@lem4573797 _107705 t n)). Qed.
Lemma lem4573799 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4573806 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573807 {_107708 : Type'} (f : type682 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4573806 (_107708 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4573808 {_107708 : Type'} (s : _107708 -> Prop) : (@HAS_SIZE _107708 s) = (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s).
Proof. exact (@lem4573807 _107708 (@HAS_SIZE _107708) s). Qed.
Lemma lem4573809 (m : nat) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem4573810 {_107708 : Type'} (s : _107708 -> Prop) (m : nat) : (@HAS_SIZE _107708 s m) = (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s m).
Proof. exact (MK_COMB (@lem4573808 _107708 s) (@lem4573809 m)). Qed.
Lemma lem4573812 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4573813 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4573812 nat Prop f x). Qed.
Lemma lem4573814 {_107708 : Type'} (s : _107708 -> Prop) (m : nat) : (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s m) = (term1218 _107708 s m).
Proof. exact (@lem4573813 (@I ((_107708 -> Prop) -> nat -> Prop) (@HAS_SIZE _107708) s) m). Qed.
Lemma lem4573816 {_107708 : Type'} (s : _107708 -> Prop) (m : nat) : (@HAS_SIZE _107708 s m) = (term1218 _107708 s m).
Proof. exact (TRANS (@lem4573810 _107708 s m) (@lem4573814 _107708 s m)). Qed.
Lemma lem4573817 {_107708 : Type'} (s : _107708 -> Prop) (m : nat) : (term1219 _107708 s m) = (term1220 _107708 s m).
Proof. exact (MK_COMB (@lem4573799) (@lem4573816 _107708 s m)). Qed.
Lemma lem4573818 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4573819 {_107708 : Type'} (s : _107708 -> Prop) (m : nat) : (term1221 _107708 s m) = (term1222 _107708 s m).
Proof. exact (MK_COMB (@lem4573818) (@lem4573817 _107708 s m)). Qed.
Lemma lem4573820 {_107705 _107708 : Type'} (s : _107708 -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term1197 _107705 _107708 s m t n) = (term1284 _107705 _107708 s m t n).
Proof. exact (MK_COMB (@lem4573819 _107708 s m) (@lem4573798 _107705 t n)). Qed.
Lemma lem4573821 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4573822 {_107705 _107708 : Type'} (s : _107708 -> Prop) (m : nat) (t : _107705 -> Prop) (n : nat) : (term1199 _107705 _107708 s m t n) = (term1285 _107705 _107708 s m t n).
Proof. exact (MK_COMB (@lem4573821) (@lem4573820 _107705 _107708 s m t n)). Qed.
Lemma lem4573823 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1201 _107705 _107708 _54415 t s d n m) = (term1286 _107705 _107708 _54415 t s d n m).
Proof. exact (MK_COMB (@lem4573822 _107705 _107708 s m t n) (@lem4573779 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4573824 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1203 _107705 _107708 _54415 t d n m) = (term1287 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4573823 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4573825 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4573826 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1204 _107705 _107708 _54415 t d n m) = (term1288 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4573825 _107708) (@lem4573824 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4573827 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term1205 _107705 _107708 _54415 t d n) = (term1289 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4573826 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4573828 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4573829 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term1206 _107705 _107708 _54415 t d n) = (term1290 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4573828) (@lem4573827 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4573830 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term1207 _107705 _107708 _54415 d n) = (term1291 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4573829 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4573831 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4573832 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term1208 _107705 _107708 _54415 d n) = (term1292 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4573831 _107705) (@lem4573830 _107705 _107708 _54415 d n)). Qed.
Lemma lem4573833 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term1209 _107705 _107708 _54415 d) = (term1293 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4573832 _107705 _107708 _54415 d n)). Qed.
Lemma lem4573834 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4573835 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term1210 _107705 _107708 _54415 d) = (term1294 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4573834) (@lem4573833 _107705 _107708 _54415 d)). Qed.
Lemma lem4573836 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1211 _107705 _107708 _54415) = (term1295 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4573835 _107705 _107708 _54415 d)). Qed.
Lemma lem4573837 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4573838 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1212 _107705 _107708 _54415) = (term1296 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4573837 _107705) (@lem4573836 _107705 _107708 _54415)). Qed.
Lemma lem4573839 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1296 _107705 _107708 _54415.
Proof. exact (EQ_MP (@lem4573838 _107705 _107708 _54415) (@lem4572141 _107705 _107708 _54415 h1)). Qed.
Lemma lem4574465 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4574466 {_107705 _107708 : Type'} : (@FINITE (_107708 -> _107705)) = (@FINITE (_107708 -> _107705)).
Proof. exact (eq_refl (@FINITE (_107708 -> _107705))). Qed.
Lemma lem4574467 {_107705 _107708 : Type'} : (@GSPEC (_107708 -> _107705)) = (@GSPEC (_107708 -> _107705)).
Proof. exact (eq_refl (@GSPEC (_107708 -> _107705))). Qed.
Lemma lem4574476 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574477 {_107705 _107708 : Type'} (f : type656 _107705 _107708) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4574476 (_107705 -> Prop) (type859 _107705 _107708) f x). Qed.
Lemma lem4574478 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) : (_54415 t) = (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t).
Proof. exact (@lem4574477 _107705 _107708 _54415 t). Qed.
Lemma lem4574479 {_107708 : Type'} (s : _107708 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4574480 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (_54415 t s) = (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t s).
Proof. exact (MK_COMB (@lem4574478 _107705 _107708 _54415 t) (@lem4574479 _107708 s)). Qed.
Lemma lem4574482 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574483 {_107705 _107708 : Type'} (f : type859 _107705 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4574482 (_107708 -> Prop) (type1372 _107705 _107708) f x). Qed.
Lemma lem4574484 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t s) = (term1273 _107705 _107708 _54415 t s).
Proof. exact (@lem4574483 _107705 _107708 (@I ((_107705 -> Prop) -> (_107708 -> Prop) -> _107705 -> (_107708 -> _107705) -> Prop) _54415 t) s). Qed.
Lemma lem4574485 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) : (_54415 t s) = (term1273 _107705 _107708 _54415 t s).
Proof. exact (TRANS (@lem4574480 _107705 _107708 _54415 t s) (@lem4574484 _107705 _107708 _54415 t s)). Qed.
Lemma lem4574486 {_107705 : Type'} (d : _107705) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4574487 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (_54415 t s d) = (term1274 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4574485 _107705 _107708 _54415 t s) (@lem4574486 _107705 d)). Qed.
Lemma lem4574489 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574490 {_107705 _107708 : Type'} (f : type1372 _107705 _107708) (x : _107705) : (f x) = (@I (_107705 -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4574489 _107705 (type805 _107705 _107708) f x). Qed.
Lemma lem4574491 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1274 _107705 _107708 _54415 t s d) = (term1275 _107705 _107708 _54415 t s d).
Proof. exact (@lem4574490 _107705 _107708 (term1273 _107705 _107708 _54415 t s) d). Qed.
Lemma lem4574493 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (_54415 t s d) = (term1275 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4574487 _107705 _107708 _54415 t s d) (@lem4574491 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574494 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term126 _107705 _107708 _54415 t s d) = (term1276 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4574467 _107705 _107708) (@lem4574493 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574496 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574497 {_107705 _107708 : Type'} (f : type205 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> (_107708 -> _107705) -> Prop) f x).
Proof. exact (@lem4574496 (type805 _107705 _107708) (type805 _107705 _107708) f x). Qed.
Lemma lem4574498 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1276 _107705 _107708 _54415 t s d) = (term1277 _107705 _107708 _54415 t s d).
Proof. exact (@lem4574497 _107705 _107708 (@GSPEC (_107708 -> _107705)) (term1275 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574499 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term126 _107705 _107708 _54415 t s d) = (term1277 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4574494 _107705 _107708 _54415 t s d) (@lem4574498 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574500 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term165 _107705 _107708 _54415 t s d) = (term1297 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4574466 _107705 _107708) (@lem4574499 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574502 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574503 {_107705 _107708 : Type'} (f : type207 _107705 _107708) (x : type805 _107705 _107708) : (f x) = (@I (((_107708 -> _107705) -> Prop) -> Prop) f x).
Proof. exact (@lem4574502 (type805 _107705 _107708) Prop f x). Qed.
Lemma lem4574504 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1297 _107705 _107708 _54415 t s d) = (term1298 _107705 _107708 _54415 t s d).
Proof. exact (@lem4574503 _107705 _107708 (@FINITE (_107708 -> _107705)) (term1277 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574505 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term165 _107705 _107708 _54415 t s d) = (term1298 _107705 _107708 _54415 t s d).
Proof. exact (TRANS (@lem4574500 _107705 _107708 _54415 t s d) (@lem4574504 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574506 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1299 _107705 _107708 _54415 t s d) = (term1300 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4574465) (@lem4574505 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574511 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574512 {_107705 : Type'} (f : type686 _107705) (x : _107705 -> Prop) : (f x) = (@I ((_107705 -> Prop) -> Prop) f x).
Proof. exact (@lem4574511 (_107705 -> Prop) Prop f x). Qed.
Lemma lem4574514 {_107705 : Type'} (t : _107705 -> Prop) : (@FINITE _107705 t) = (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) t).
Proof. exact (@lem4574512 _107705 (@FINITE _107705) t). Qed.
Lemma lem4574519 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4574520 {_107708 : Type'} (f : type686 _107708) (x : _107708 -> Prop) : (f x) = (@I ((_107708 -> Prop) -> Prop) f x).
Proof. exact (@lem4574519 (_107708 -> Prop) Prop f x). Qed.
Lemma lem4574522 {_107708 : Type'} (s : _107708 -> Prop) : (@FINITE _107708 s) = (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s).
Proof. exact (@lem4574520 _107708 (@FINITE _107708) s). Qed.
Lemma lem4574523 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4574524 {_107708 : Type'} (s : _107708 -> Prop) : (term1215 _107708 s) = (term1216 _107708 s).
Proof. exact (MK_COMB (@lem4574523) (@lem4574522 _107708 s)). Qed.
Lemma lem4574525 {_107705 _107708 : Type'} (s : _107708 -> Prop) (t : _107705 -> Prop) : (term1064 _107705 _107708 s t) = (term1301 _107705 _107708 s t).
Proof. exact (MK_COMB (@lem4574524 _107708 s) (@lem4574514 _107705 t)). Qed.
Lemma lem4574526 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4574527 {_107705 _107708 : Type'} (s : _107708 -> Prop) (t : _107705 -> Prop) : (term1302 _107705 _107708 s t) = (term1303 _107705 _107708 s t).
Proof. exact (MK_COMB (@lem4574526) (@lem4574525 _107705 _107708 s t)). Qed.
Lemma lem4574528 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1063 _107705 _107708 _54415 t s d) = (term1304 _107705 _107708 _54415 t s d).
Proof. exact (MK_COMB (@lem4574527 _107705 _107708 s t) (@lem4574506 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4574529 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1304 _107705 _107708 _54415 t s d.
Proof. exact (EQ_MP (@lem4574528 _107705 _107708 _54415 t s d) (@lem4572628 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4577465 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1301 _107705 _107708 s t.
Proof. exact (proj1 (@lem4574529 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4577476 {_107705 _107708 : Type'} (h1 : term15 _107705 _107708) : term1257 _107705 _107708.
Proof. exact (proj2 (@lem4573282 _107705 _107708 h1)). Qed.
Lemma lem4577485 {_107708 : Type'} (h1 : term13 _107708) : term1240 _107708.
Proof. exact (proj1 (@lem4572850 _107708 h1)). Qed.
Lemma lem4577487 {_107705 : Type'} (h1 : term13 _107705) : term1240 _107705.
Proof. exact (proj1 (@lem4572742 _107705 h1)). Qed.
Lemma lem4577501 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1286 _107705 _107708 _54415 t s d n m) = (term1286 _107705 _107708 _54415 t s d n m).
Proof. exact (eq_refl (term1286 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4577502 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1287 _107705 _107708 _54415 t d n m) = (term1287 _107705 _107708 _54415 t d n m).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4577501 _107705 _107708 _54415 t s d n m)). Qed.
Lemma lem4577503 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4577504 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) (m : nat) : (term1288 _107705 _107708 _54415 t d n m) = (term1288 _107705 _107708 _54415 t d n m).
Proof. exact (MK_COMB (@lem4577503 _107708) (@lem4577502 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4577505 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term1289 _107705 _107708 _54415 t d n) = (term1289 _107705 _107708 _54415 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4577504 _107705 _107708 _54415 t d n m)). Qed.
Lemma lem4577506 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4577507 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (d : _107705) (n : nat) : (term1290 _107705 _107708 _54415 t d n) = (term1290 _107705 _107708 _54415 t d n).
Proof. exact (MK_COMB (@lem4577506) (@lem4577505 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4577508 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term1291 _107705 _107708 _54415 d n) = (term1291 _107705 _107708 _54415 d n).
Proof. exact (fun_ext (fun t : _107705 -> Prop => @lem4577507 _107705 _107708 _54415 t d n)). Qed.
Lemma lem4577509 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4577510 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (n : nat) : (term1292 _107705 _107708 _54415 d n) = (term1292 _107705 _107708 _54415 d n).
Proof. exact (MK_COMB (@lem4577509 _107705) (@lem4577508 _107705 _107708 _54415 d n)). Qed.
Lemma lem4577511 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term1293 _107705 _107708 _54415 d) = (term1293 _107705 _107708 _54415 d).
Proof. exact (fun_ext (fun n : nat => @lem4577510 _107705 _107708 _54415 d n)). Qed.
Lemma lem4577512 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4577513 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) : (term1294 _107705 _107708 _54415 d) = (term1294 _107705 _107708 _54415 d).
Proof. exact (MK_COMB (@lem4577512) (@lem4577511 _107705 _107708 _54415 d)). Qed.
Lemma lem4577514 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1295 _107705 _107708 _54415) = (term1295 _107705 _107708 _54415).
Proof. exact (fun_ext (fun d : _107705 => @lem4577513 _107705 _107708 _54415 d)). Qed.
Lemma lem4577515 {_107705 : Type'} : (@all _107705) = (@all _107705).
Proof. exact (eq_refl (@all _107705)). Qed.
Lemma lem4577517 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) : (term1296 _107705 _107708 _54415) = (term1296 _107705 _107708 _54415).
Proof. exact (MK_COMB (@lem4577515 _107705) (@lem4577514 _107705 _107708 _54415)). Qed.
Lemma lem4577518 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1296 _107705 _107708 _54415.
Proof. exact (EQ_MP (@lem4577517 _107705 _107708 _54415) (@lem4573839 _107705 _107708 _54415 h1)). Qed.
Lemma lem4578907 {_107705 _107708 : Type'} (s : type805 _107705 _107708) (n : nat) : (term1253 _107705 _107708 s n) = (term1305 _107705 _107708 s n).
Proof. exact (@lem19490 (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) s) (term1250 _107705 _107708 s n) ((@I (((_107708 -> _107705) -> Prop) -> nat) (@CARD (_107708 -> _107705)) s) = n)). Qed.
Lemma lem4578908 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1254 _107705 _107708 s) = (term1306 _107705 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4578907 _107705 _107708 s n)). Qed.
Lemma lem4578909 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4578910 {_107705 _107708 : Type'} (s : type805 _107705 _107708) : (term1255 _107705 _107708 s) = (term1307 _107705 _107708 s).
Proof. exact (MK_COMB (@lem4578909) (@lem4578908 _107705 _107708 s)). Qed.
Lemma lem4578911 {_107705 _107708 : Type'} : (term1256 _107705 _107708) = (term1308 _107705 _107708).
Proof. exact (fun_ext (fun s : type805 _107705 _107708 => @lem4578910 _107705 _107708 s)). Qed.
Lemma lem4578912 {_107705 _107708 : Type'} : (@all ((_107708 -> _107705) -> Prop)) = (@all ((_107708 -> _107705) -> Prop)).
Proof. exact (eq_refl (@all ((_107708 -> _107705) -> Prop))). Qed.
Lemma lem4578914 {_107705 _107708 : Type'} : (term1257 _107705 _107708) = (term1309 _107705 _107708).
Proof. exact (MK_COMB (@lem4578912 _107705 _107708) (@lem4578911 _107705 _107708)). Qed.
Lemma lem4578915 {_107705 _107708 : Type'} (h1 : term15 _107705 _107708) : term1309 _107705 _107708.
Proof. exact (EQ_MP (@lem4578914 _107705 _107708) (@lem4577476 _107705 _107708 h1)). Qed.
Lemma lem4579073 {_107708 : Type'} (s : _107708 -> Prop) (n : nat) : (term1236 _107708 s n) = (term1236 _107708 s n).
Proof. exact (eq_refl (term1236 _107708 s n)). Qed.
Lemma lem4579074 {_107708 : Type'} (s : _107708 -> Prop) : (term1237 _107708 s) = (term1237 _107708 s).
Proof. exact (fun_ext (fun n : nat => @lem4579073 _107708 s n)). Qed.
Lemma lem4579075 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4579076 {_107708 : Type'} (s : _107708 -> Prop) : (term1238 _107708 s) = (term1238 _107708 s).
Proof. exact (MK_COMB (@lem4579075) (@lem4579074 _107708 s)). Qed.
Lemma lem4579077 {_107708 : Type'} : (term1239 _107708) = (term1239 _107708).
Proof. exact (fun_ext (fun s : _107708 -> Prop => @lem4579076 _107708 s)). Qed.
Lemma lem4579078 {_107708 : Type'} : (@all (_107708 -> Prop)) = (@all (_107708 -> Prop)).
Proof. exact (eq_refl (@all (_107708 -> Prop))). Qed.
Lemma lem4579080 {_107708 : Type'} : (term1240 _107708) = (term1240 _107708).
Proof. exact (MK_COMB (@lem4579078 _107708) (@lem4579077 _107708)). Qed.
Lemma lem4579081 {_107708 : Type'} (h1 : term13 _107708) : term1240 _107708.
Proof. exact (EQ_MP (@lem4579080 _107708) (@lem4577485 _107708 h1)). Qed.
Lemma lem4579121 {_107705 : Type'} (s : _107705 -> Prop) (n : nat) : (term1236 _107705 s n) = (term1236 _107705 s n).
Proof. exact (eq_refl (term1236 _107705 s n)). Qed.
Lemma lem4579122 {_107705 : Type'} (s : _107705 -> Prop) : (term1237 _107705 s) = (term1237 _107705 s).
Proof. exact (fun_ext (fun n : nat => @lem4579121 _107705 s n)). Qed.
Lemma lem4579123 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4579124 {_107705 : Type'} (s : _107705 -> Prop) : (term1238 _107705 s) = (term1238 _107705 s).
Proof. exact (MK_COMB (@lem4579123) (@lem4579122 _107705 s)). Qed.
Lemma lem4579125 {_107705 : Type'} : (term1239 _107705) = (term1239 _107705).
Proof. exact (fun_ext (fun s : _107705 -> Prop => @lem4579124 _107705 s)). Qed.
Lemma lem4579126 {_107705 : Type'} : (@all (_107705 -> Prop)) = (@all (_107705 -> Prop)).
Proof. exact (eq_refl (@all (_107705 -> Prop))). Qed.
Lemma lem4579128 {_107705 : Type'} : (term1240 _107705) = (term1240 _107705).
Proof. exact (MK_COMB (@lem4579126 _107705) (@lem4579125 _107705)). Qed.
Lemma lem4579129 {_107705 : Type'} (h1 : term13 _107705) : term1240 _107705.
Proof. exact (EQ_MP (@lem4579128 _107705) (@lem4577487 _107705 h1)). Qed.
Lemma lem4579156 {_107705 _107708 : Type'} (_54421 : _107705) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1310 _107705 _107708 _54415 _54421.
Proof. exact (@lem4577518 _107705 _107708 _54415 h1 _54421). Qed.
Lemma lem4579157 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) : (term1310 _107705 _107708 _54415 _54421) = (term1294 _107705 _107708 _54415 _54421).
Proof. exact (eq_refl (term1310 _107705 _107708 _54415 _54421)). Qed.
Lemma lem4579158 {_107705 _107708 : Type'} (_54421 : _107705) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1294 _107705 _107708 _54415 _54421.
Proof. exact (EQ_MP (@lem4579157 _107705 _107708 _54415 _54421) (@lem4579156 _107705 _107708 _54421 _54415 h1)). Qed.
Lemma lem4579159 {_107705 _107708 : Type'} (_54421 : _107705) (_54422 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1311 _107705 _107708 _54415 _54421 _54422.
Proof. exact (@lem4579158 _107705 _107708 _54421 _54415 h1 _54422). Qed.
Lemma lem4579160 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54422 : nat) : (term1311 _107705 _107708 _54415 _54421 _54422) = (term1292 _107705 _107708 _54415 _54421 _54422).
Proof. exact (eq_refl (term1311 _107705 _107708 _54415 _54421 _54422)). Qed.
Lemma lem4579161 {_107705 _107708 : Type'} (_54421 : _107705) (_54422 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1292 _107705 _107708 _54415 _54421 _54422.
Proof. exact (EQ_MP (@lem4579160 _107705 _107708 _54415 _54421 _54422) (@lem4579159 _107705 _107708 _54421 _54422 _54415 h1)). Qed.
Lemma lem4579162 {_107705 _107708 : Type'} (_54421 : _107705) (_54422 : nat) (_54423 : _107705 -> Prop) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1312 _107705 _107708 _54415 _54421 _54422 _54423.
Proof. exact (@lem4579161 _107705 _107708 _54421 _54422 _54415 h1 _54423). Qed.
Lemma lem4579163 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) : (term1312 _107705 _107708 _54415 _54421 _54422 _54423) = (term1290 _107705 _107708 _54415 _54423 _54421 _54422).
Proof. exact (eq_refl (term1312 _107705 _107708 _54415 _54421 _54422 _54423)). Qed.
Lemma lem4579164 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1290 _107705 _107708 _54415 _54423 _54421 _54422.
Proof. exact (EQ_MP (@lem4579163 _107705 _107708 _54415 _54423 _54421 _54422) (@lem4579162 _107705 _107708 _54421 _54422 _54423 _54415 h1)). Qed.
Lemma lem4579165 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1313 _107705 _107708 _54415 _54423 _54421 _54422 _54424.
Proof. exact (@lem4579164 _107705 _107708 _54423 _54421 _54422 _54415 h1 _54424). Qed.
Lemma lem4579166 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1313 _107705 _107708 _54415 _54423 _54421 _54422 _54424) = (term1288 _107705 _107708 _54415 _54423 _54421 _54422 _54424).
Proof. exact (eq_refl (term1313 _107705 _107708 _54415 _54423 _54421 _54422 _54424)). Qed.
Lemma lem4579167 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1288 _107705 _107708 _54415 _54423 _54421 _54422 _54424.
Proof. exact (EQ_MP (@lem4579166 _107705 _107708 _54415 _54423 _54421 _54422 _54424) (@lem4579165 _107705 _107708 _54423 _54421 _54422 _54424 _54415 h1)). Qed.
Lemma lem4579168 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54425 : _107708 -> Prop) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1314 _107705 _107708 _54415 _54423 _54421 _54422 _54424 _54425.
Proof. exact (@lem4579167 _107705 _107708 _54423 _54421 _54422 _54424 _54415 h1 _54425). Qed.
Lemma lem4579169 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1314 _107705 _107708 _54415 _54423 _54421 _54422 _54424 _54425) = (term1286 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (eq_refl (term1314 _107705 _107708 _54415 _54423 _54421 _54422 _54424 _54425)). Qed.
Lemma lem4579170 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1286 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424.
Proof. exact (EQ_MP (@lem4579169 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (@lem4579168 _107705 _107708 _54423 _54421 _54422 _54424 _54425 _54415 h1)). Qed.
Lemma lem4579462 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (h1 : term15 _107705 _107708) : term1315 _107705 _107708 _54523.
Proof. exact (@lem4578915 _107705 _107708 h1 _54523). Qed.
Lemma lem4579463 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) : (term1315 _107705 _107708 _54523) = (term1307 _107705 _107708 _54523).
Proof. exact (eq_refl (term1315 _107705 _107708 _54523)). Qed.
Lemma lem4579464 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (h1 : term15 _107705 _107708) : term1307 _107705 _107708 _54523.
Proof. exact (EQ_MP (@lem4579463 _107705 _107708 _54523) (@lem4579462 _107705 _107708 _54523 h1)). Qed.
Lemma lem4579465 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) (h1 : term15 _107705 _107708) : term1316 _107705 _107708 _54523 _54524.
Proof. exact (@lem4579464 _107705 _107708 _54523 h1 _54524). Qed.
Lemma lem4579466 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1316 _107705 _107708 _54523 _54524) = (term1305 _107705 _107708 _54523 _54524).
Proof. exact (eq_refl (term1316 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4579467 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) (h1 : term15 _107705 _107708) : term1305 _107705 _107708 _54523 _54524.
Proof. exact (EQ_MP (@lem4579466 _107705 _107708 _54523 _54524) (@lem4579465 _107705 _107708 _54523 _54524 h1)). Qed.
Lemma lem4579504 {_107708 : Type'} (_54537 : _107708 -> Prop) (h1 : term13 _107708) : term1317 _107708 _54537.
Proof. exact (@lem4579081 _107708 h1 _54537). Qed.
Lemma lem4579505 {_107708 : Type'} (_54537 : _107708 -> Prop) : (term1317 _107708 _54537) = (term1238 _107708 _54537).
Proof. exact (eq_refl (term1317 _107708 _54537)). Qed.
Lemma lem4579506 {_107708 : Type'} (_54537 : _107708 -> Prop) (h1 : term13 _107708) : term1238 _107708 _54537.
Proof. exact (EQ_MP (@lem4579505 _107708 _54537) (@lem4579504 _107708 _54537 h1)). Qed.
Lemma lem4579507 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) (h1 : term13 _107708) : term1318 _107708 _54537 _54538.
Proof. exact (@lem4579506 _107708 _54537 h1 _54538). Qed.
Lemma lem4579508 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1318 _107708 _54537 _54538) = (term1236 _107708 _54537 _54538).
Proof. exact (eq_refl (term1318 _107708 _54537 _54538)). Qed.
Lemma lem4579516 {_107705 : Type'} (_54541 : _107705 -> Prop) (h1 : term13 _107705) : term1317 _107705 _54541.
Proof. exact (@lem4579129 _107705 h1 _54541). Qed.
Lemma lem4579517 {_107705 : Type'} (_54541 : _107705 -> Prop) : (term1317 _107705 _54541) = (term1238 _107705 _54541).
Proof. exact (eq_refl (term1317 _107705 _54541)). Qed.
Lemma lem4579518 {_107705 : Type'} (_54541 : _107705 -> Prop) (h1 : term13 _107705) : term1238 _107705 _54541.
Proof. exact (EQ_MP (@lem4579517 _107705 _54541) (@lem4579516 _107705 _54541 h1)). Qed.
Lemma lem4579519 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) (h1 : term13 _107705) : term1318 _107705 _54541 _54542.
Proof. exact (@lem4579518 _107705 _54541 h1 _54542). Qed.
Lemma lem4579520 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1318 _107705 _54541 _54542) = (term1236 _107705 _54541 _54542).
Proof. exact (eq_refl (term1318 _107705 _54541 _54542)). Qed.
Lemma lem4579558 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1286 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (@lem4555263 (term1220 _107708 _54425 _54424) (term1220 _107705 _54423 _54422) (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4579559 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424.
Proof. exact (EQ_MP (@lem4579558 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (@lem4579170 _107705 _107708 _54423 _54425 _54421 _54422 _54424 _54415 h1)). Qed.
Lemma lem4579693 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1300 _107705 _107708 _54415 t s d.
Proof. exact (proj2 (@lem4574529 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4579787 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) (h1 : term13 _107708) : term1236 _107708 _54537 _54538.
Proof. exact (EQ_MP (@lem4579508 _107708 _54537 _54538) (@lem4579507 _107708 _54537 _54538 h1)). Qed.
Lemma lem4579797 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) (h1 : term13 _107705) : term1236 _107705 _54541 _54542.
Proof. exact (EQ_MP (@lem4579520 _107705 _54541 _54542) (@lem4579519 _107705 _54541 _54542 h1)). Qed.
Lemma lem4579863 {_107705 _107708 : Type'} (_54524 : nat) (_54523 : type805 _107705 _107708) (h1 : term15 _107705 _107708) : term1320 _107705 _107708 _54524 _54523.
Proof. exact (proj1 (@lem4579467 _107705 _107708 _54523 _54524 h1)). Qed.
Lemma lem4581722 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : @I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s.
Proof. exact (proj1 (@lem4577465 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4581723 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1321 _107708 s.
Proof. exact (fun h0 : term1231 _107708 s => @lem4581722 _107705 _107708 _54415 t s d h1). Qed.
Lemma lem4581725 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581726 {_107708 : Type'} (s : _107708 -> Prop) : (term1321 _107708 s) = (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s).
Proof. exact (@lem4581725 (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s)). Qed.
Lemma lem4581727 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : @I ((_107708 -> Prop) -> Prop) (@FINITE _107708) s.
Proof. exact (EQ_MP (@lem4581726 _107708 s) (@lem4581723 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4581729 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4581730 {_107708 : Type'} (s : _107708 -> Prop) : (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) = (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s).
Proof. exact (@lem4581729 (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s)). Qed.
Lemma lem4581731 {_107708 : Type'} (s : _107708 -> Prop) : term1323 _107708 s.
Proof. exact (fun h0 : term1324 _107708 s => @lem4581730 _107708 s). Qed.
Lemma lem4581733 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581734 {_107708 : Type'} (s : _107708 -> Prop) : (term1323 _107708 s) = ((@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) = (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s)).
Proof. exact (@lem4581733 ((@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) = (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s))). Qed.
Lemma lem4581735 {_107708 : Type'} (s : _107708 -> Prop) : (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) = (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s).
Proof. exact (EQ_MP (@lem4581734 _107708 s) (@lem4581731 _107708 s)). Qed.
Lemma lem4581737 (b : Prop) (a : Prop) : (a \/ b) = (term1325 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4581738 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1236 _107708 _54537 _54538) = (term1326 _107708 _54537 _54538).
Proof. exact (@lem4581737 (term1234 _107708 _54537 _54538) (term1218 _107708 _54537 _54538)). Qed.
Lemma lem4581740 (a : Prop) (b : Prop) : (term1327 a b) = (term1328 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4581741 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1329 _107708 _54537 _54538) = (term1330 _107708 _54537 _54538).
Proof. exact (@lem4581740 (term1231 _107708 _54537) (term1229 _107708 _54537 _54538)). Qed.
Lemma lem4581743 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581744 {_107708 : Type'} (_54537 : _107708 -> Prop) : (term1332 _107708 _54537) = (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) _54537).
Proof. exact (@lem4581743 (@I ((_107708 -> Prop) -> Prop) (@FINITE _107708) _54537)). Qed.
Lemma lem4581745 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4581746 {_107708 : Type'} (_54537 : _107708 -> Prop) : (term1333 _107708 _54537) = (term1216 _107708 _54537).
Proof. exact (MK_COMB (@lem4581745) (@lem4581744 _107708 _54537)). Qed.
Lemma lem4581748 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581749 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1334 _107708 _54537 _54538) = ((@I ((_107708 -> Prop) -> nat) (@CARD _107708) _54537) = _54538).
Proof. exact (@lem4581748 ((@I ((_107708 -> Prop) -> nat) (@CARD _107708) _54537) = _54538)). Qed.
Lemma lem4581750 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1330 _107708 _54537 _54538) = (term1217 _107708 _54537 _54538).
Proof. exact (MK_COMB (@lem4581746 _107708 _54537) (@lem4581749 _107708 _54537 _54538)). Qed.
Lemma lem4581751 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1329 _107708 _54537 _54538) = (term1217 _107708 _54537 _54538).
Proof. exact (TRANS (@lem4581741 _107708 _54537 _54538) (@lem4581750 _107708 _54537 _54538)). Qed.
Lemma lem4581752 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4581753 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1335 _107708 _54537 _54538) = (term1336 _107708 _54537 _54538).
Proof. exact (MK_COMB (@lem4581752) (@lem4581751 _107708 _54537 _54538)). Qed.
Lemma lem4581754 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1218 _107708 _54537 _54538) = (term1218 _107708 _54537 _54538).
Proof. exact (eq_refl (term1218 _107708 _54537 _54538)). Qed.
Lemma lem4581755 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1326 _107708 _54537 _54538) = (term1337 _107708 _54537 _54538).
Proof. exact (MK_COMB (@lem4581753 _107708 _54537 _54538) (@lem4581754 _107708 _54537 _54538)). Qed.
Lemma lem4581756 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) : (term1236 _107708 _54537 _54538) = (term1337 _107708 _54537 _54538).
Proof. exact (TRANS (@lem4581738 _107708 _54537 _54538) (@lem4581755 _107708 _54537 _54538)). Qed.
Lemma lem4581758 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1338 _107708 s.
Proof. exact (conj (@lem4581727 _107705 _107708 _54415 t s d h1) (@lem4581735 _107708 s)). Qed.
Lemma lem4581760 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) (h1 : term13 _107708) : term1337 _107708 _54537 _54538.
Proof. exact (EQ_MP (@lem4581756 _107708 _54537 _54538) (@lem4579787 _107708 _54537 _54538 h1)). Qed.
Lemma lem4581761 {_107708 : Type'} (_54537 : _107708 -> Prop) (_54538 : nat) (h1 : term13 _107708) : term1337 _107708 _54537 _54538.
Proof. exact (@lem4581760 _107708 _54537 _54538 h1). Qed.
Lemma lem4581762 {_107708 : Type'} (s : _107708 -> Prop) (h1 : term13 _107708) : term1339 _107708 s.
Proof. exact (@lem4581761 _107708 s (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) h1). Qed.
Lemma lem4581765 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107708) (h2 : term1063 _107705 _107708 _54415 t s d) : term1340 _107708 s.
Proof. exact (@lem4581762 _107708 s h1 (@lem4581758 _107705 _107708 _54415 t s d h2)). Qed.
Lemma lem4581766 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107708) (h2 : term1063 _107705 _107708 _54415 t s d) : term1341 _107708 s.
Proof. exact (fun h0 : term1342 _107708 s => @lem4581765 _107705 _107708 _54415 t s d h1 h2). Qed.
Lemma lem4581768 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581769 {_107708 : Type'} (s : _107708 -> Prop) : (term1341 _107708 s) = (term1340 _107708 s).
Proof. exact (@lem4581768 (term1340 _107708 s)). Qed.
Lemma lem4581770 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107708) (h2 : term1063 _107705 _107708 _54415 t s d) : term1340 _107708 s.
Proof. exact (EQ_MP (@lem4581769 _107708 s) (@lem4581766 _107705 _107708 _54415 t s d h1 h2)). Qed.
Lemma lem4581772 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : @I ((_107705 -> Prop) -> Prop) (@FINITE _107705) t.
Proof. exact (proj2 (@lem4577465 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4581773 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1321 _107705 t.
Proof. exact (fun h0 : term1231 _107705 t => @lem4581772 _107705 _107708 _54415 t s d h1). Qed.
Lemma lem4581775 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581776 {_107705 : Type'} (t : _107705 -> Prop) : (term1321 _107705 t) = (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) t).
Proof. exact (@lem4581775 (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) t)). Qed.
Lemma lem4581777 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : @I ((_107705 -> Prop) -> Prop) (@FINITE _107705) t.
Proof. exact (EQ_MP (@lem4581776 _107705 t) (@lem4581773 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4581779 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4581780 {_107705 : Type'} (t : _107705 -> Prop) : (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t) = (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t).
Proof. exact (@lem4581779 (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t)). Qed.
Lemma lem4581781 {_107705 : Type'} (t : _107705 -> Prop) : term1323 _107705 t.
Proof. exact (fun h0 : term1324 _107705 t => @lem4581780 _107705 t). Qed.
Lemma lem4581783 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581784 {_107705 : Type'} (t : _107705 -> Prop) : (term1323 _107705 t) = ((@I ((_107705 -> Prop) -> nat) (@CARD _107705) t) = (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t)).
Proof. exact (@lem4581783 ((@I ((_107705 -> Prop) -> nat) (@CARD _107705) t) = (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t))). Qed.
Lemma lem4581785 {_107705 : Type'} (t : _107705 -> Prop) : (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t) = (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t).
Proof. exact (EQ_MP (@lem4581784 _107705 t) (@lem4581781 _107705 t)). Qed.
Lemma lem4581787 (b : Prop) (a : Prop) : (a \/ b) = (term1325 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4581788 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1236 _107705 _54541 _54542) = (term1326 _107705 _54541 _54542).
Proof. exact (@lem4581787 (term1234 _107705 _54541 _54542) (term1218 _107705 _54541 _54542)). Qed.
Lemma lem4581790 (a : Prop) (b : Prop) : (term1327 a b) = (term1328 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4581791 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1329 _107705 _54541 _54542) = (term1330 _107705 _54541 _54542).
Proof. exact (@lem4581790 (term1231 _107705 _54541) (term1229 _107705 _54541 _54542)). Qed.
Lemma lem4581793 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581794 {_107705 : Type'} (_54541 : _107705 -> Prop) : (term1332 _107705 _54541) = (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) _54541).
Proof. exact (@lem4581793 (@I ((_107705 -> Prop) -> Prop) (@FINITE _107705) _54541)). Qed.
Lemma lem4581795 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4581796 {_107705 : Type'} (_54541 : _107705 -> Prop) : (term1333 _107705 _54541) = (term1216 _107705 _54541).
Proof. exact (MK_COMB (@lem4581795) (@lem4581794 _107705 _54541)). Qed.
Lemma lem4581798 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581799 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1334 _107705 _54541 _54542) = ((@I ((_107705 -> Prop) -> nat) (@CARD _107705) _54541) = _54542).
Proof. exact (@lem4581798 ((@I ((_107705 -> Prop) -> nat) (@CARD _107705) _54541) = _54542)). Qed.
Lemma lem4581800 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1330 _107705 _54541 _54542) = (term1217 _107705 _54541 _54542).
Proof. exact (MK_COMB (@lem4581796 _107705 _54541) (@lem4581799 _107705 _54541 _54542)). Qed.
Lemma lem4581801 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1329 _107705 _54541 _54542) = (term1217 _107705 _54541 _54542).
Proof. exact (TRANS (@lem4581791 _107705 _54541 _54542) (@lem4581800 _107705 _54541 _54542)). Qed.
Lemma lem4581802 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4581803 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1335 _107705 _54541 _54542) = (term1336 _107705 _54541 _54542).
Proof. exact (MK_COMB (@lem4581802) (@lem4581801 _107705 _54541 _54542)). Qed.
Lemma lem4581804 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1218 _107705 _54541 _54542) = (term1218 _107705 _54541 _54542).
Proof. exact (eq_refl (term1218 _107705 _54541 _54542)). Qed.
Lemma lem4581805 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1326 _107705 _54541 _54542) = (term1337 _107705 _54541 _54542).
Proof. exact (MK_COMB (@lem4581803 _107705 _54541 _54542) (@lem4581804 _107705 _54541 _54542)). Qed.
Lemma lem4581806 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) : (term1236 _107705 _54541 _54542) = (term1337 _107705 _54541 _54542).
Proof. exact (TRANS (@lem4581788 _107705 _54541 _54542) (@lem4581805 _107705 _54541 _54542)). Qed.
Lemma lem4581808 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1338 _107705 t.
Proof. exact (conj (@lem4581777 _107705 _107708 _54415 t s d h1) (@lem4581785 _107705 t)). Qed.
Lemma lem4581810 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) (h1 : term13 _107705) : term1337 _107705 _54541 _54542.
Proof. exact (EQ_MP (@lem4581806 _107705 _54541 _54542) (@lem4579797 _107705 _54541 _54542 h1)). Qed.
Lemma lem4581811 {_107705 : Type'} (_54541 : _107705 -> Prop) (_54542 : nat) (h1 : term13 _107705) : term1337 _107705 _54541 _54542.
Proof. exact (@lem4581810 _107705 _54541 _54542 h1). Qed.
Lemma lem4581812 {_107705 : Type'} (t : _107705 -> Prop) (h1 : term13 _107705) : term1339 _107705 t.
Proof. exact (@lem4581811 _107705 t (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t) h1). Qed.
Lemma lem4581815 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107705) (h2 : term1063 _107705 _107708 _54415 t s d) : term1340 _107705 t.
Proof. exact (@lem4581812 _107705 t h1 (@lem4581808 _107705 _107708 _54415 t s d h2)). Qed.
Lemma lem4581816 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107705) (h2 : term1063 _107705 _107708 _54415 t s d) : term1341 _107705 t.
Proof. exact (fun h0 : term1342 _107705 t => @lem4581815 _107705 _107708 _54415 t s d h1 h2). Qed.
Lemma lem4581818 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581819 {_107705 : Type'} (t : _107705 -> Prop) : (term1341 _107705 t) = (term1340 _107705 t).
Proof. exact (@lem4581818 (term1340 _107705 t)). Qed.
Lemma lem4581820 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107705) (h2 : term1063 _107705 _107708 _54415 t s d) : term1340 _107705 t.
Proof. exact (EQ_MP (@lem4581819 _107705 t) (@lem4581816 _107705 _107708 _54415 t s d h1 h2)). Qed.
Lemma lem4581826 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4581827 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1343 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (@lem4581826 (term1220 _107705 _54423 _54422) (term1220 _107708 _54425 _54424) (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4581841 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4581842 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1344 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1345 _107705 _107708 _54415 _54423 _54421 _54422 _54425 _54424).
Proof. exact (@lem4581841 (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (term1220 _107708 _54425 _54424)). Qed.
Lemma lem4581848 {_107705 : Type'} (_54423 : _107705 -> Prop) (_54422 : nat) : (term1222 _107705 _54423 _54422) = (term1222 _107705 _54423 _54422).
Proof. exact (eq_refl (term1222 _107705 _54423 _54422)). Qed.
Lemma lem4581849 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54421 : _107705) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1343 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1346 _107705 _107708 _54415 _54423 _54421 _54422 _54425 _54424).
Proof. exact (MK_COMB (@lem4581848 _107705 _54423 _54422) (@lem4581842 _107705 _107708 _54415 _54423 _54421 _54422 _54425 _54424)). Qed.
Lemma lem4581853 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4581854 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1346 _107705 _107708 _54415 _54423 _54421 _54422 _54425 _54424) = (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424).
Proof. exact (@lem4581853 (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (term1220 _107705 _54423 _54422) (term1220 _107708 _54425 _54424)). Qed.
Lemma lem4581870 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1343 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424).
Proof. exact (TRANS (@lem4581849 _107705 _107708 _54415 _54423 _54421 _54422 _54425 _54424) (@lem4581854 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581871 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424).
Proof. exact (TRANS (@lem4581827 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (@lem4581870 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581872 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4581873 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1348 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1349 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424).
Proof. exact (MK_COMB (@lem4581872) (@lem4581871 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581887 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4581888 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1284 _107705 _107708 _54425 _54424 _54423 _54422) = (term1350 _107705 _107708 _54423 _54422 _54425 _54424).
Proof. exact (@lem4581887 (term1220 _107705 _54423 _54422) (term1220 _107708 _54425 _54424)). Qed.
Lemma lem4581894 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1351 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1351 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (eq_refl (term1351 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4581895 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422) = (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424).
Proof. exact (MK_COMB (@lem4581894 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (@lem4581888 _107705 _107708 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581906 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : ((term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422)) = ((term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424) = (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)).
Proof. exact (MK_COMB (@lem4581873 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424) (@lem4581895 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581908 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4581909 (x : Prop) : (x = x) = True.
Proof. exact (@lem4581908 Prop x). Qed.
Lemma lem4581910 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54423 : _107705 -> Prop) (_54422 : nat) (_54425 : _107708 -> Prop) (_54424 : nat) : ((term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424) = (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)) = True.
Proof. exact (@lem4581909 (term1347 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581911 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : ((term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422)) = True.
Proof. exact (TRANS (@lem4581906 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424) (@lem4581910 _107705 _107708 _54415 _54421 _54423 _54422 _54425 _54424)). Qed.
Lemma lem4581912 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : True = ((term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422)).
Proof. exact (SYM (@lem4581911 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422)). Qed.
Lemma lem4581913 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54421 : _107705) (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : (term1319 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422).
Proof. exact (EQ_MP (@lem4581912 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422) (@lem0)). Qed.
Lemma lem4581914 {_107705 _107708 : Type'} (_54421 : _107705) (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422.
Proof. exact (EQ_MP (@lem4581913 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422) (@lem4579559 _107705 _107708 _54423 _54425 _54421 _54422 _54424 _54415 h1)). Qed.
Lemma lem4581916 (b : Prop) (a : Prop) : (a \/ b) = (term1325 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4581917 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422) = (term1353 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (@lem4581916 (term1284 _107705 _107708 _54425 _54424 _54423 _54422) (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4581919 (a : Prop) (b : Prop) : (term1327 a b) = (term1328 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4581920 {_107705 _107708 : Type'} (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : (term1354 _107705 _107708 _54425 _54424 _54423 _54422) = (term1355 _107705 _107708 _54425 _54424 _54423 _54422).
Proof. exact (@lem4581919 (term1220 _107708 _54425 _54424) (term1220 _107705 _54423 _54422)). Qed.
Lemma lem4581922 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581923 {_107708 : Type'} (_54425 : _107708 -> Prop) (_54424 : nat) : (term1356 _107708 _54425 _54424) = (term1218 _107708 _54425 _54424).
Proof. exact (@lem4581922 (term1218 _107708 _54425 _54424)). Qed.
Lemma lem4581924 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4581925 {_107708 : Type'} (_54425 : _107708 -> Prop) (_54424 : nat) : (term1357 _107708 _54425 _54424) = (term1358 _107708 _54425 _54424).
Proof. exact (MK_COMB (@lem4581924) (@lem4581923 _107708 _54425 _54424)). Qed.
Lemma lem4581927 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581928 {_107705 : Type'} (_54423 : _107705 -> Prop) (_54422 : nat) : (term1356 _107705 _54423 _54422) = (term1218 _107705 _54423 _54422).
Proof. exact (@lem4581927 (term1218 _107705 _54423 _54422)). Qed.
Lemma lem4581929 {_107705 _107708 : Type'} (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : (term1355 _107705 _107708 _54425 _54424 _54423 _54422) = (term1359 _107705 _107708 _54425 _54424 _54423 _54422).
Proof. exact (MK_COMB (@lem4581925 _107708 _54425 _54424) (@lem4581928 _107705 _54423 _54422)). Qed.
Lemma lem4581930 {_107705 _107708 : Type'} (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : (term1354 _107705 _107708 _54425 _54424 _54423 _54422) = (term1359 _107705 _107708 _54425 _54424 _54423 _54422).
Proof. exact (TRANS (@lem4581920 _107705 _107708 _54425 _54424 _54423 _54422) (@lem4581929 _107705 _107708 _54425 _54424 _54423 _54422)). Qed.
Lemma lem4581931 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4581932 {_107705 _107708 : Type'} (_54425 : _107708 -> Prop) (_54424 : nat) (_54423 : _107705 -> Prop) (_54422 : nat) : (term1360 _107705 _107708 _54425 _54424 _54423 _54422) = (term1361 _107705 _107708 _54425 _54424 _54423 _54422).
Proof. exact (MK_COMB (@lem4581931) (@lem4581930 _107705 _107708 _54425 _54424 _54423 _54422)). Qed.
Lemma lem4581933 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (eq_refl (term1283 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4581934 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1353 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) = (term1362 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (MK_COMB (@lem4581932 _107705 _107708 _54425 _54424 _54423 _54422) (@lem4581933 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4581935 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) : (term1352 _107705 _107708 _54415 _54421 _54425 _54424 _54423 _54422) = (term1362 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424).
Proof. exact (TRANS (@lem4581917 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (@lem4581934 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424)). Qed.
Lemma lem4581937 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term13 _107705) (h2 : term13 _107708) (h3 : term1063 _107705 _107708 _54415 t s d) : term1363 _107705 _107708 s t.
Proof. exact (conj (@lem4581770 _107705 _107708 _54415 t s d h2 h3) (@lem4581820 _107705 _107708 _54415 t s d h1 h3)). Qed.
Lemma lem4581939 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1362 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424.
Proof. exact (EQ_MP (@lem4581935 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424) (@lem4581914 _107705 _107708 _54421 _54425 _54424 _54423 _54422 _54415 h1)). Qed.
Lemma lem4581940 {_107705 _107708 : Type'} (_54423 : _107705 -> Prop) (_54425 : _107708 -> Prop) (_54421 : _107705) (_54422 : nat) (_54424 : nat) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1362 _107705 _107708 _54415 _54423 _54425 _54421 _54422 _54424.
Proof. exact (@lem4581939 _107705 _107708 _54423 _54425 _54421 _54422 _54424 _54415 h1). Qed.
Lemma lem4581941 {_107705 _107708 : Type'} (_54421 : _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) (_54415 : type656 _107705 _107708) (h1 : term139 _107705 _107708 _54415) : term1364 _107705 _107708 _54415 _54421 t s.
Proof. exact (@lem4581940 _107705 _107708 t s _54421 (@I ((_107705 -> Prop) -> nat) (@CARD _107705) t) (@I ((_107708 -> Prop) -> nat) (@CARD _107708) s) _54415 h1). Qed.
Lemma lem4581944 {_107705 _107708 : Type'} (_54421 : _107705) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term1063 _107705 _107708 _54415 t s d) : term1365 _107705 _107708 _54415 _54421 t s.
Proof. exact (@lem4581941 _107705 _107708 _54421 t s _54415 h1 (@lem4581937 _107705 _107708 _54415 t s d h2 h3 h4)). Qed.
Lemma lem4581945 {_107705 _107708 : Type'} (_54421 : _107705) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term1063 _107705 _107708 _54415 t s d) : term1365 _107705 _107708 _54415 _54421 t s.
Proof. exact (@lem4581944 _107705 _107708 _54421 _54415 t s d h1 h2 h3 h4). Qed.
Lemma lem4581946 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term1063 _107705 _107708 _54415 t s d) : term1365 _107705 _107708 _54415 d t s.
Proof. exact (@lem4581945 _107705 _107708 d _54415 t s d h1 h2 h3 h4). Qed.
Lemma lem4581947 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term1063 _107705 _107708 _54415 t s d) : term1366 _107705 _107708 _54415 d t s.
Proof. exact (fun h0 : term1367 _107705 _107708 _54415 d t s => @lem4581946 _107705 _107708 _54415 t s d h1 h2 h3 h4). Qed.
Lemma lem4581949 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4581950 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (d : _107705) (t : _107705 -> Prop) (s : _107708 -> Prop) : (term1366 _107705 _107708 _54415 d t s) = (term1365 _107705 _107708 _54415 d t s).
Proof. exact (@lem4581949 (term1365 _107705 _107708 _54415 d t s)). Qed.
Lemma lem4581951 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term1063 _107705 _107708 _54415 t s d) : term1365 _107705 _107708 _54415 d t s.
Proof. exact (EQ_MP (@lem4581950 _107705 _107708 _54415 d t s) (@lem4581947 _107705 _107708 _54415 t s d h1 h2 h3 h4)). Qed.
Lemma lem4581957 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4581958 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1320 _107705 _107708 _54524 _54523) = (term1368 _107705 _107708 _54523 _54524).
Proof. exact (@lem4581957 (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) _54523) (term1250 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581964 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4581965 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1369 _107705 _107708 _54524 _54523) = (term1370 _107705 _107708 _54523 _54524).
Proof. exact (MK_COMB (@lem4581964) (@lem4581958 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581971 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1368 _107705 _107708 _54523 _54524) = (term1368 _107705 _107708 _54523 _54524).
Proof. exact (eq_refl (term1368 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581972 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : ((term1320 _107705 _107708 _54524 _54523) = (term1368 _107705 _107708 _54523 _54524)) = ((term1368 _107705 _107708 _54523 _54524) = (term1368 _107705 _107708 _54523 _54524)).
Proof. exact (MK_COMB (@lem4581965 _107705 _107708 _54523 _54524) (@lem4581971 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581974 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4581975 (x : Prop) : (x = x) = True.
Proof. exact (@lem4581974 Prop x). Qed.
Lemma lem4581976 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : ((term1368 _107705 _107708 _54523 _54524) = (term1368 _107705 _107708 _54523 _54524)) = True.
Proof. exact (@lem4581975 (term1368 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581977 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : ((term1320 _107705 _107708 _54524 _54523) = (term1368 _107705 _107708 _54523 _54524)) = True.
Proof. exact (TRANS (@lem4581972 _107705 _107708 _54523 _54524) (@lem4581976 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581978 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : True = ((term1320 _107705 _107708 _54524 _54523) = (term1368 _107705 _107708 _54523 _54524)).
Proof. exact (SYM (@lem4581977 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581979 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1320 _107705 _107708 _54524 _54523) = (term1368 _107705 _107708 _54523 _54524).
Proof. exact (EQ_MP (@lem4581978 _107705 _107708 _54523 _54524) (@lem0)). Qed.
Lemma lem4581980 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) (h1 : term15 _107705 _107708) : term1368 _107705 _107708 _54523 _54524.
Proof. exact (EQ_MP (@lem4581979 _107705 _107708 _54523 _54524) (@lem4579863 _107705 _107708 _54524 _54523 h1)). Qed.
Lemma lem4581982 (b : Prop) (a : Prop) : (a \/ b) = (term1325 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4581983 {_107705 _107708 : Type'} (_54524 : nat) (_54523 : type805 _107705 _107708) : (term1368 _107705 _107708 _54523 _54524) = (term1371 _107705 _107708 _54524 _54523).
Proof. exact (@lem4581982 (term1250 _107705 _107708 _54523 _54524) (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) _54523)). Qed.
Lemma lem4581985 (a : Prop) : (term1331 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4581986 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1372 _107705 _107708 _54523 _54524) = (term1248 _107705 _107708 _54523 _54524).
Proof. exact (@lem4581985 (term1248 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581987 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4581988 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) (_54524 : nat) : (term1373 _107705 _107708 _54523 _54524) = (term1374 _107705 _107708 _54523 _54524).
Proof. exact (MK_COMB (@lem4581987) (@lem4581986 _107705 _107708 _54523 _54524)). Qed.
Lemma lem4581989 {_107705 _107708 : Type'} (_54523 : type805 _107705 _107708) : (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) _54523) = (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) _54523).
Proof. exact (eq_refl (@I (((_107708 -> _107705) -> Prop) -> Prop) (@FINITE (_107708 -> _107705)) _54523)). Qed.
Lemma lem4581990 {_107705 _107708 : Type'} (_54524 : nat) (_54523 : type805 _107705 _107708) : (term1371 _107705 _107708 _54524 _54523) = (term1375 _107705 _107708 _54524 _54523).
Proof. exact (MK_COMB (@lem4581988 _107705 _107708 _54523 _54524) (@lem4581989 _107705 _107708 _54523)). Qed.
Lemma lem4581991 {_107705 _107708 : Type'} (_54524 : nat) (_54523 : type805 _107705 _107708) : (term1368 _107705 _107708 _54523 _54524) = (term1375 _107705 _107708 _54524 _54523).
Proof. exact (TRANS (@lem4581983 _107705 _107708 _54524 _54523) (@lem4581990 _107705 _107708 _54524 _54523)). Qed.
Lemma lem4581994 {_107705 _107708 : Type'} (_54524 : nat) (_54523 : type805 _107705 _107708) (h1 : term15 _107705 _107708) : term1375 _107705 _107708 _54524 _54523.
Proof. exact (EQ_MP (@lem4581991 _107705 _107708 _54524 _54523) (@lem4581980 _107705 _107708 _54523 _54524 h1)). Qed.
Lemma lem4581995 {_107705 _107708 : Type'} (_54524 : nat) (_54523 : type805 _107705 _107708) (h1 : term15 _107705 _107708) : term1375 _107705 _107708 _54524 _54523.
Proof. exact (@lem4581994 _107705 _107708 _54524 _54523 h1). Qed.
Lemma lem4581996 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term15 _107705 _107708) : term1376 _107705 _107708 _54415 t s d.
Proof. exact (@lem4581995 _107705 _107708 (term1377 _107705 _107708 t s) (term1277 _107705 _107708 _54415 t s d) h1). Qed.
Lemma lem4581999 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term15 _107705 _107708) (h5 : term1063 _107705 _107708 _54415 t s d) : term1298 _107705 _107708 _54415 t s d.
Proof. exact (@lem4581996 _107705 _107708 _54415 t s d h4 (@lem4581951 _107705 _107708 _54415 t s d h1 h2 h3 h5)). Qed.
Lemma lem4582000 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term15 _107705 _107708) (h5 : term1063 _107705 _107708 _54415 t s d) : term1378 _107705 _107708 _54415 t s d.
Proof. exact (fun h0 : term1300 _107705 _107708 _54415 t s d => @lem4581999 _107705 _107708 _54415 t s d h1 h2 h3 h4 h5). Qed.
Lemma lem4582002 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4582003 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1378 _107705 _107708 _54415 t s d) = (term1298 _107705 _107708 _54415 t s d).
Proof. exact (@lem4582002 (term1298 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4582004 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term15 _107705 _107708) (h5 : term1063 _107705 _107708 _54415 t s d) : term1298 _107705 _107708 _54415 t s d.
Proof. exact (EQ_MP (@lem4582003 _107705 _107708 _54415 t s d) (@lem4582000 _107705 _107708 _54415 t s d h1 h2 h3 h4 h5)). Qed.
Lemma lem4582007 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4582009 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) : (term1300 _107705 _107708 _54415 t s d) = (term1379 _107705 _107708 _54415 t s d).
Proof. exact (@lem4582007 (term1298 _107705 _107708 _54415 t s d)). Qed.
Lemma lem4582012 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term1063 _107705 _107708 _54415 t s d) : term1379 _107705 _107708 _54415 t s d.
Proof. exact (EQ_MP (@lem4582009 _107705 _107708 _54415 t s d) (@lem4579693 _107705 _107708 _54415 t s d h1)). Qed.
Lemma lem4582015 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term15 _107705 _107708) (h5 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (@lem4582012 _107705 _107708 _54415 t s d h5 (@lem4582004 _107705 _107708 _54415 t s d h1 h2 h3 h4 h5)). Qed.
Lemma lem4582016 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term15 _107705 _107708) (h5 : term1063 _107705 _107708 _54415 t s d) : term1380.
Proof. exact (fun h0 : ~ False => @lem4582015 _107705 _107708 _54415 t s d h1 h2 h3 h4 h5). Qed.
Lemma lem4582018 (p : Prop) : (term1322 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4582019 : term1380 = False.
Proof. exact (@lem4582018 False). Qed.
Lemma lem4582020 {_107705 _107708 : Type'} (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term15 _107705 _107708) (h5 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (EQ_MP (@lem4582019) (@lem4582016 _107705 _107708 _54415 t s d h1 h2 h3 h4 h5)). Qed.
Lemma lem4582021 {_107705 _107708 A B : Type'} (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term451 A B _54420) (h5 : term15 _107705 _107708) (h6 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (ex_elim (@lem4564576 A B _54420 h4) (fun f''''' : type838 A B => fun h0 : term816 A B _54420 f''''' => @lem4582020 _107705 _107708 _54415 t s d h1 h2 h3 h5 h6)). Qed.
Lemma lem4582022 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term451 _107708 B _54419) (h5 : term451 A B _54420) (h6 : term15 _107705 _107708) (h7 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (ex_elim (@lem4565458 _107708 B _54419 h4) (fun f'''' : type838 _107708 B => fun h0 : term816 _107708 B _54419 f'''' => @lem4582021 _107705 _107708 A B _54420 _54415 t s d h1 h2 h3 h5 h6 h7)). Qed.
Lemma lem4582023 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term13 _107708) (h4 : term451 _107705 B _54418) (h5 : term451 _107708 B _54419) (h6 : term451 A B _54420) (h7 : term15 _107705 _107708) (h8 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (ex_elim (@lem4566340 _107705 B _54418 h4) (fun f''' : type838 _107705 B => fun h0 : term816 _107705 B _54418 f''' => @lem4582022 _107705 _107708 A B _54419 _54420 _54415 t s d h1 h2 h3 h5 h6 h7 h8)). Qed.
Lemma lem4582024 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term13 _107705) (h3 : term248 _107708 A _54417) (h4 : term13 _107708) (h5 : term451 _107705 B _54418) (h6 : term451 _107708 B _54419) (h7 : term451 A B _54420) (h8 : term15 _107705 _107708) (h9 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (ex_elim (@lem4567222 _107708 A _54417 h3) (fun f'' : type655 _107708 A => fun h0 : term1060 _107708 A _54417 f'' => @lem4582023 _107705 _107708 A B _54418 _54419 _54420 _54415 t s d h1 h2 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem4582025 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term15 _107705 _107708) (h10 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (ex_elim (@lem4568104 _107705 A _54416 h2) (fun f' : type655 _107705 A => fun h0 : term1060 _107705 A _54416 f' => @lem4582024 _107705 _107708 A B _54417 _54418 _54419 _54420 _54415 t s d h1 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem4582026 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (t : _107705 -> Prop) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term1063 _107705 _107708 _54415 t s d) : False.
Proof. exact (ex_elim (@lem4568986 _107705 _107708 _54415 h2) (fun f : type655 _107705 _107708 => fun h0 : term1060 _107705 _107708 _54415 f => @lem4582025 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 t s d h1 h3 h4 h5 h6 h7 h8 h9 h10 h11)). Qed.
Lemma lem4582027 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (s : _107708 -> Prop) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term1073 _107705 _107708 _54415 s d) : False.
Proof. exact (ex_elim (@lem4572627 _107705 _107708 _54415 s d h11) (fun t : _107705 -> Prop => fun h0 : term1072 _107705 _107708 _54415 s d t => @lem4582026 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 t s d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h0)). Qed.
Lemma lem4582028 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : False.
Proof. exact (ex_elim (@lem4569074 _107705 _107708 _54415 d h11) (fun s : _107708 -> Prop => fun h0 : term1078 _107705 _107708 _54415 d s => @lem4582027 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 s d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h0)). Qed.
Lemma lem4582029 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : term1381 A B _54420.
Proof. exact (fun h0 : term359 A B _54420 => @lem4582028 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4582030 {A B : Type'} (_54420 : type839 A B) : (term1381 A B _54420) = (term508 A B _54420).
Proof. exact (@lem69 (term359 A B _54420)). Qed.
Lemma lem4582031 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : term508 A B _54420.
Proof. exact (EQ_MP (@lem4582030 A B _54420) (@lem4582029 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11)). Qed.
Lemma lem4582032 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : term509 _107708 A B _54419 _54420.
Proof. exact (fun h0 : term359 _107708 B _54419 => @lem4582031 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4582033 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : term510 _107705 _107708 A B _54418 _54419 _54420.
Proof. exact (fun h0 : term359 _107705 B _54418 => @lem4582032 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4582034 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : term511 _107705 _107708 A B _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term139 _107708 A _54417 => @lem4582033 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4582035 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term139 _107705 _107708 _54415) (h2 : term248 _107705 _107708 _54415) (h3 : term248 _107705 A _54416) (h4 : term13 _107705) (h5 : term248 _107708 A _54417) (h6 : term13 _107708) (h7 : term451 _107705 B _54418) (h8 : term451 _107708 B _54419) (h9 : term451 A B _54420) (h10 : term15 _107705 _107708) (h11 : term176 _107705 _107708 _54415 d) : term512 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term139 _107705 A _54416 => @lem4582034 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4582036 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term15 _107705 _107708) (h10 : term176 _107705 _107708 _54415 d) : term513 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term139 _107705 _107708 _54415 => @lem4582035 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h0 h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4582037 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term15 _107705 _107708) (h10 : term176 _107705 _107708 _54415 d) : term514 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term14 A B => @lem4582036 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4582038 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term15 _107705 _107708) (h10 : term176 _107705 _107708 _54415 d) : term515 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term15 _107708 A => @lem4582037 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4582039 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term15 _107705 _107708) (h10 : term176 _107705 _107708 _54415 d) : term516 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term15 _107705 A => @lem4582038 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4582040 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term15 _107705 _107708) (h10 : term176 _107705 _107708 _54415 d) : term517 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term14 _107708 B => @lem4582039 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4582041 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term176 _107705 _107708 _54415 d) : term518 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term15 _107705 _107708 => @lem4582040 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h0 h9). Qed.
Lemma lem4582042 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term176 _107705 _107708 _54415 d) : term519 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term14 _107705 B => @lem4582041 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem4582043 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term176 _107705 _107708 _54415 d) : term520 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term13 B => @lem4582042 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem4582044 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term13 _107708) (h6 : term451 _107705 B _54418) (h7 : term451 _107708 B _54419) (h8 : term451 A B _54420) (h9 : term176 _107705 _107708 _54415 d) : term521 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term13 A => @lem4582043 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem4582045 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term13 _107705) (h4 : term248 _107708 A _54417) (h5 : term451 _107705 B _54418) (h6 : term451 _107708 B _54419) (h7 : term451 A B _54420) (h8 : term176 _107705 _107708 _54415 d) : term522 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term13 _107708 => @lem4582044 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h0 h5 h6 h7 h8). Qed.
Lemma lem4582046 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (_54415 : type656 _107705 _107708) (d : _107705) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term248 _107708 A _54417) (h4 : term451 _107705 B _54418) (h5 : term451 _107708 B _54419) (h6 : term451 A B _54420) (h7 : term176 _107705 _107708 _54415 d) : term523 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term13 _107705 => @lem4582045 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h0 h3 h4 h5 h6 h7). Qed.
Lemma lem4582047 {_107705 _107708 A B : Type'} (d : _107705) (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term248 _107708 A _54417) (h4 : term451 _107705 B _54418) (h5 : term451 _107708 B _54419) (h6 : term451 A B _54420) : term524 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term176 _107705 _107708 _54415 d => @lem4582046 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 _54415 d h1 h2 h3 h4 h5 h6 h0). Qed.
Lemma lem4582052 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term248 _107705 _107708 _54415) (h2 : term248 _107705 A _54416) (h3 : term248 _107708 A _54417) (h4 : term451 _107705 B _54418) (h5 : term451 _107708 B _54419) (h6 : term451 A B _54420) : term526 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun d : _107705 => @lem4582047 _107705 _107708 A B d _54415 _54416 _54417 _54418 _54419 _54420 h1 h2 h3 h4 h5 h6). Qed.
Lemma lem4582053 {_107705 _107708 A B : Type'} (_54415 : type656 _107705 _107708) (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term248 _107705 A _54416) (h2 : term248 _107708 A _54417) (h3 : term451 _107705 B _54418) (h4 : term451 _107708 B _54419) (h5 : term451 A B _54420) : term527 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term248 _107705 _107708 _54415 => @lem4582052 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h0 h1 h2 h3 h4 h5). Qed.
Lemma lem4582058 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term248 _107705 A _54416) (h2 : term248 _107708 A _54417) (h3 : term451 _107705 B _54418) (h4 : term451 _107708 B _54419) (h5 : term451 A B _54420) : term529 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun _54415 : type656 _107705 _107708 => @lem4582053 _107705 _107708 A B _54415 _54416 _54417 _54418 _54419 _54420 h1 h2 h3 h4 h5). Qed.
Lemma lem4582059 {_107705 _107708 A B : Type'} (_54416 : type656 _107705 A) (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term248 _107708 A _54417) (h2 : term451 _107705 B _54418) (h3 : term451 _107708 B _54419) (h4 : term451 A B _54420) : term530 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term248 _107705 A _54416 => @lem4582058 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 h0 h1 h2 h3 h4). Qed.
Lemma lem4582064 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term248 _107708 A _54417) (h2 : term451 _107705 B _54418) (h3 : term451 _107708 B _54419) (h4 : term451 A B _54420) : term532 _107705 _107708 A B _54417 _54418 _54419 _54420.
Proof. exact (fun _54416 : type656 _107705 A => @lem4582059 _107705 _107708 A B _54416 _54417 _54418 _54419 _54420 h1 h2 h3 h4). Qed.
Lemma lem4582065 {_107705 _107708 A B : Type'} (_54417 : type656 _107708 A) (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term451 _107705 B _54418) (h2 : term451 _107708 B _54419) (h3 : term451 A B _54420) : term533 _107705 _107708 A B _54417 _54418 _54419 _54420.
Proof. exact (fun h0 : term248 _107708 A _54417 => @lem4582064 _107705 _107708 A B _54417 _54418 _54419 _54420 h0 h1 h2 h3). Qed.
Lemma lem4582070 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term451 _107705 B _54418) (h2 : term451 _107708 B _54419) (h3 : term451 A B _54420) : term535 _107705 _107708 A B _54418 _54419 _54420.
Proof. exact (fun _54417 : type656 _107708 A => @lem4582065 _107705 _107708 A B _54417 _54418 _54419 _54420 h1 h2 h3). Qed.
Lemma lem4582071 {_107705 _107708 A B : Type'} (_54418 : type839 _107705 B) (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term451 _107708 B _54419) (h2 : term451 A B _54420) : term536 _107705 _107708 A B _54418 _54419 _54420.
Proof. exact (fun h0 : term451 _107705 B _54418 => @lem4582070 _107705 _107708 A B _54418 _54419 _54420 h0 h1 h2). Qed.
Lemma lem4582076 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term451 _107708 B _54419) (h2 : term451 A B _54420) : term538 _107705 _107708 A B _54419 _54420.
Proof. exact (fun _54418 : type839 _107705 B => @lem4582071 _107705 _107708 A B _54418 _54419 _54420 h1 h2). Qed.
Lemma lem4582077 {_107705 _107708 A B : Type'} (_54419 : type839 _107708 B) (_54420 : type839 A B) (h1 : term451 A B _54420) : term539 _107705 _107708 A B _54419 _54420.
Proof. exact (fun h0 : term451 _107708 B _54419 => @lem4582076 _107705 _107708 A B _54419 _54420 h0 h1). Qed.
Lemma lem4582082 {_107705 _107708 A B : Type'} (_54420 : type839 A B) (h1 : term451 A B _54420) : term541 _107705 _107708 A B _54420.
Proof. exact (fun _54419 : type839 _107708 B => @lem4582077 _107705 _107708 A B _54419 _54420 h1). Qed.
Lemma lem4582083 {_107705 _107708 A B : Type'} (_54420 : type839 A B) : term561 _107705 _107708 A B _54420.
Proof. exact (fun h0 : term451 A B _54420 => @lem4582082 _107705 _107708 A B _54420 h0). Qed.
Lemma lem4582088 {_107705 _107708 A B : Type'} : term563 _107705 _107708 A B.
Proof. exact (fun _54420 : type839 A B => @lem4582083 _107705 _107708 A B _54420). Qed.
Lemma lem4582089 {_107705 _107708 A B : Type'} : term61 _107705 _107708 A B.
Proof. exact (EQ_MP (@lem4563671 _107705 _107708 A B) (@lem4582088 _107705 _107708 A B)). Qed.
Lemma lem4582090 {_107705 _107708 A B : Type'} (d : _107705) : term1382 _107705 _107708 A B d.
Proof. exact (@lem4582089 _107705 _107708 A B d). Qed.
Lemma lem4582091 {_107705 _107708 A B : Type'} (d : _107705) : (term1382 _107705 _107708 A B d) = (term16 _107705 _107708 A B d).
Proof. exact (eq_refl (term1382 _107705 _107708 A B d)). Qed.
Lemma lem4582092 {_107705 _107708 A B : Type'} (d : _107705) : term16 _107705 _107708 A B d.
Proof. exact (EQ_MP (@lem4582091 _107705 _107708 A B d) (@lem4582090 _107705 _107708 A B d)). Qed.
Lemma lem4582094 {_107705 _107708 A B : Type'} (d : _107705) : term16 _107705 _107708 A B d.
Proof. exact (@lem4555306 _107705 _107708 A B d (@lem4582092 _107705 _107708 A B d)). Qed.
Lemma lem4582095 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term55 _107705 _107708 A B.
Proof. exact (@lem4582094 _107705 _107708 A B d (@lem4555268 _107705 _107708 d h1)). Qed.
Lemma lem4582096 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term53 _107705 _107708 A B.
Proof. exact (@lem4582095 _107705 _107708 A B d h1 (@lem4555283 _107705)). Qed.
Lemma lem4582097 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term51 _107705 _107708 A B.
Proof. exact (@lem4582096 _107705 _107708 A B d h1 (@lem4555281 _107708)). Qed.
Lemma lem4582098 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term49 _107705 _107708 A B.
Proof. exact (@lem4582097 _107705 _107708 A B d h1 (@lem4555278 A)). Qed.
Lemma lem4582099 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term46 _107705 _107708 A B.
Proof. exact (@lem4582098 _107705 _107708 A B d h1 (@lem4555279 B)). Qed.
Lemma lem4582100 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term44 _107705 _107708 A B.
Proof. exact (@lem4582099 _107705 _107708 A B d h1 (@lem4555284 _107705 B)). Qed.
Lemma lem4582101 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term42 _107705 _107708 A B.
Proof. exact (@lem4582100 _107705 _107708 A B d h1 (@lem4555287 _107705 _107708)). Qed.
Lemma lem4582102 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term40 _107705 _107708 A B.
Proof. exact (@lem4582101 _107705 _107708 A B d h1 (@lem4555282 _107708 B)). Qed.
Lemma lem4582103 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term38 _107705 _107708 A B.
Proof. exact (@lem4582102 _107705 _107708 A B d h1 (@lem4555286 _107705 A)). Qed.
Lemma lem4582104 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term35 _107705 _107708 A B.
Proof. exact (@lem4582103 _107705 _107708 A B d h1 (@lem4555285 _107708 A)). Qed.
Lemma lem4582105 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term32 _107705 _107708 A B.
Proof. exact (@lem4582104 _107705 _107708 A B d h1 (@lem4555280 A B)). Qed.
Lemma lem4582106 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term30 _107705 _107708 A B.
Proof. exact (@lem4582105 _107705 _107708 A B d h1 (@lem4555269 _107705 _107708)). Qed.
Lemma lem4582107 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term28 _107705 _107708 A B.
Proof. exact (@lem4582106 _107705 _107708 A B d h1 (@lem4555276 _107705 A)). Qed.
Lemma lem4582108 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term25 _107705 _107708 A B.
Proof. exact (@lem4582107 _107705 _107708 A B d h1 (@lem4555275 _107708 A)). Qed.
Lemma lem4582109 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term23 _107708 A B.
Proof. exact (@lem4582108 _107705 _107708 A B d h1 (@lem4555274 _107705 B)). Qed.
Lemma lem4582110 {_107705 _107708 A B : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : term20 A B.
Proof. exact (@lem4582109 _107705 _107708 A B d h1 (@lem4555272 _107708 B)). Qed.
Lemma lem4582111 {_107705 _107708 : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : False.
Proof. exact (@lem4582110 _107705 _107708 Prop Prop d h1 (@lem4521678 Prop Prop)). Qed.
Lemma lem4582112 {_107705 _107708 : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : (term10 _107705 _107708 d) = False.
Proof. exact (prop_ext (fun h2 : term10 _107705 _107708 d => @lem4582111 _107705 _107708 d h1) (fun h2 : False => @lem4555268 _107705 _107708 d h1)). Qed.
Lemma lem4582113 {_107705 _107708 : Type'} (d : _107705) (h1 : term10 _107705 _107708 d) : False.
Proof. exact (EQ_MP (@lem4582112 _107705 _107708 d h1) (@lem4555268 _107705 _107708 d h1)). Qed.
Lemma lem4582114 {_107705 _107708 : Type'} (d : _107705) : term9 _107705 _107708 d.
Proof. exact (fun h0 : term10 _107705 _107708 d => @lem4582113 _107705 _107708 d h0). Qed.
Lemma lem4582115 {_107705 _107708 : Type'} (d : _107705) : term8 _107705 _107708 d.
Proof. exact (EQ_MP (@lem4555267 _107705 _107708 d) (@lem4582114 _107705 _107708 d)). Qed.
