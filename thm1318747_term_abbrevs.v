Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term5 := (forall y0 : nadd, nadd_eq y0 y0) /\ ((forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) /\ ((forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) /\ ((forall y0 : hreal, (mk_hreal (dest_hreal y0)) = y0) /\ (forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (nadd_eq y1)) = ((dest_hreal (mk_hreal y0)) = y0))))).
Definition term9 := ((forall y0 : nadd, nadd_eq y0 y0) /\ ((forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) /\ ((forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) /\ ((forall y0 : hreal, (mk_hreal (dest_hreal y0)) = y0) /\ (forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (nadd_eq y1)) = ((dest_hreal (mk_hreal y0)) = y0)))))) -> (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = ((mk_hreal (nadd_eq y0)) = (mk_hreal (nadd_eq y1)))) /\ ((forall y0 : hreal -> Prop, (forall y1 : nadd, y0 (mk_hreal (nadd_eq y1))) = (forall y1 : hreal, y0 y1)) /\ ((forall y0 : hreal -> Prop, (exists y1 : nadd, y0 (mk_hreal (nadd_eq y1))) = (exists y1 : hreal, y0 y1)) /\ (forall y0 : hreal, (mk_hreal (nadd_eq (@ε nadd (dest_hreal y0)))) = y0))).
Definition term8 (x0 : type926) (x1 : type1554) (x2 : type1546) := ((forall y0 : nadd, x1 y0 y0) /\ ((forall y0 : nadd, forall y1 : nadd, (x1 y0 y1) = (x1 y1 y0)) /\ ((forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((x1 y0 y1) /\ (x1 y1 y2)) -> x1 y0 y2) /\ ((forall y0 : hreal, (x0 (x2 y0)) = y0) /\ (forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (x1 y1)) = ((x2 (x0 y0)) = y0)))))) -> (forall y0 : nadd, forall y1 : nadd, (x1 y0 y1) = ((x0 (x1 y0)) = (x0 (x1 y1)))) /\ ((forall y0 : hreal -> Prop, (forall y1 : nadd, y0 (x0 (x1 y1))) = (forall y1 : hreal, y0 y1)) /\ ((forall y0 : hreal -> Prop, (exists y1 : nadd, y0 (x0 (x1 y1))) = (exists y1 : hreal, y0 y1)) /\ (forall y0 : hreal, (x0 (x1 (@ε nadd (x2 y0)))) = y0))).
Definition term6 (a0 : Type') (a1 : Type') (x0 : type862 a0 a1) (x1 : type1402 a1) (x2 : type1413 a0 a1) := ((forall y0 : a1, x1 y0 y0) /\ ((forall y0 : a1, forall y1 : a1, (x1 y0 y1) = (x1 y1 y0)) /\ ((forall y0 : a1, forall y1 : a1, forall y2 : a1, ((x1 y0 y1) /\ (x1 y1 y2)) -> x1 y0 y2) /\ ((forall y0 : a0, (x0 (x2 y0)) = y0) /\ (forall y0 : a1 -> Prop, (exists y1 : a1, y0 = (x1 y1)) = ((x2 (x0 y0)) = y0)))))) -> (forall y0 : a1, forall y1 : a1, (x1 y0 y1) = ((x0 (x1 y0)) = (x0 (x1 y1)))) /\ ((forall y0 : a0 -> Prop, (forall y1 : a1, y0 (x0 (x1 y1))) = (forall y1 : a0, y0 y1)) /\ ((forall y0 : a0 -> Prop, (exists y1 : a1, y0 (x0 (x1 y1))) = (exists y1 : a0, y0 y1)) /\ (forall y0 : a0, (x0 (x1 (@ε a1 (x2 y0)))) = y0))).
Definition term7 (a0 : Type') (a1 : Type') (x0 : type1402 a1) (x1 : type1413 a0 a1) (x2 : type862 a0 a1) := (forall y0 : a1, x0 y0 y0) /\ ((forall y0 : a1, forall y1 : a1, (x0 y0 y1) = (x0 y1 y0)) /\ ((forall y0 : a1, forall y1 : a1, forall y2 : a1, ((x0 y0 y1) /\ (x0 y1 y2)) -> x0 y0 y2) /\ ((forall y0 : a0, (x2 (x1 y0)) = y0) /\ (forall y0 : a1 -> Prop, (exists y1 : a1, y0 = (x0 y1)) = ((x1 (x2 y0)) = y0))))).
Definition term10 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = ((mk_hreal (nadd_eq y0)) = (mk_hreal (nadd_eq y1)))) /\ ((forall y0 : hreal -> Prop, (forall y1 : nadd, y0 (mk_hreal (nadd_eq y1))) = (forall y1 : hreal, y0 y1)) /\ ((forall y0 : hreal -> Prop, (exists y1 : nadd, y0 (mk_hreal (nadd_eq y1))) = (exists y1 : hreal, y0 y1)) /\ (forall y0 : hreal, (mk_hreal (nadd_eq (@ε nadd (dest_hreal y0)))) = y0))).
Definition term4 := (forall y0 : nadd, forall y1 : nadd, (nadd_eq y0 y1) = (nadd_eq y1 y0)) /\ ((forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) /\ ((forall y0 : hreal, (mk_hreal (dest_hreal y0)) = y0) /\ (forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (nadd_eq y1)) = ((dest_hreal (mk_hreal y0)) = y0)))).
Definition term3 := (forall y0 : nadd, forall y1 : nadd, forall y2 : nadd, ((nadd_eq y0 y1) /\ (nadd_eq y1 y2)) -> nadd_eq y0 y2) /\ ((forall y0 : hreal, (mk_hreal (dest_hreal y0)) = y0) /\ (forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (nadd_eq y1)) = ((dest_hreal (mk_hreal y0)) = y0))).
Definition term2 := (forall y0 : hreal, (mk_hreal (dest_hreal y0)) = y0) /\ (forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (nadd_eq y1)) = ((dest_hreal (mk_hreal y0)) = y0)).
Definition term0 := forall y0 : hreal, (mk_hreal (dest_hreal y0)) = y0.
Definition term1 := forall y0 : nadd -> Prop, (exists y1 : nadd, y0 = (nadd_eq y1)) = ((dest_hreal (mk_hreal y0)) = y0).
