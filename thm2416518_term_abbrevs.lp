require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term0 (x0: El int) (x1: El int) (x2: El int) (x3: El int) (x4: El int) (x5: El int) (x6: El int) (x7: El int) (x8: El int) (x9: El num) (x10: El int) (x11: El int) (x12: El int) (x13: El num) ≔ (∧ (= (int_mul (int_of_num (NUMERAL _0)) x0) (int_of_num (NUMERAL _0))) (∧ (= (int_add (int_of_num (NUMERAL _0)) x6) x6) (∧ (= (int_add x6 (int_of_num (NUMERAL _0))) x6) (∧ (= (int_mul x6 x5) (int_mul x5 x6)) (∧ (= (int_mul (int_add x6 x5) x7) (int_add (int_mul x6 x7) (int_mul x5 x7))) (∧ (= (int_mul (int_of_num (NUMERAL _0)) x6) (int_of_num (NUMERAL _0))) (∧ (= (int_mul x6 (int_of_num (NUMERAL _0))) (int_of_num (NUMERAL _0))) (∧ (= (int_mul (int_of_num (NUMERAL (BIT1 _0))) x6) x6) (∧ (= (int_mul x6 (int_of_num (NUMERAL (BIT1 _0)))) x6) (∧ (= (int_mul (int_mul x3 x1) (int_mul x2 x4)) (int_mul (int_mul x3 x2) (int_mul x1 x4))) (∧ (= (int_mul (int_mul x3 x1) (int_mul x2 x4)) (int_mul x3 (int_mul x1 (int_mul x2 x4)))) (∧ (= (int_mul (int_mul x3 x1) (int_mul x2 x4)) (int_mul x2 (int_mul (int_mul x3 x1) x4))) (∧ (= (int_mul (int_mul x3 x1) x2) (int_mul (int_mul x3 x2) x1)) (∧ (= (int_mul (int_mul x3 x1) x2) (int_mul x3 (int_mul x1 x2))) (∧ (= (int_mul x3 x2) (int_mul x2 x3)) (∧ (= (int_mul x3 (int_mul x2 x4)) (int_mul (int_mul x3 x2) x4)) (∧ (= (int_mul x3 (int_mul x2 x4)) (int_mul x2 (int_mul x3 x4))) (∧ (= (int_add (int_add x6 x5) (int_add x7 x8)) (int_add (int_add x6 x7) (int_add x5 x8))) (∧ (= (int_add (int_add x6 x5) x7) (int_add x6 (int_add x5 x7))) (∧ (= (int_add x6 (int_add x7 x8)) (int_add x7 (int_add x6 x8))) (∧ (= (int_add (int_add x6 x5) x7) (int_add (int_add x6 x7) x5)) (∧ (= (int_add x6 x7) (int_add x7 x6)) (∧ (= (int_add x6 (int_add x7 x8)) (int_add (int_add x6 x7) x8)) (∧ (= (int_mul (int_pow x12 x9) (int_pow x12 x13)) (int_pow x12 (+ x9 x13))) (∧ (= (int_mul x12 (int_pow x12 x13)) (int_pow x12 (SUC x13))) (∧ (= (int_mul (int_pow x12 x13) x12) (int_pow x12 (SUC x13))) (∧ (= (int_mul x12 x12) (int_pow x12 (NUMERAL (BIT0 (BIT1 _0))))) (∧ (= (int_pow (int_mul x12 x10) x13) (int_mul (int_pow x12 x13) (int_pow x10 x13))) (∧ (= (int_pow (int_pow x12 x9) x13) (int_pow x12 (* x9 x13))) (∧ (= (int_pow x12 (NUMERAL _0)) (int_of_num (NUMERAL (BIT1 _0)))) (∧ (= (int_pow x12 (NUMERAL (BIT1 _0))) x12) (∧ (= (int_mul x12 (int_add x10 x11)) (int_add (int_mul x12 x10) (int_mul x12 x11))) (= (int_pow x12 (SUC x13)) (int_mul x12 (int_pow x12 x13)))))))))))))))))))))))))))))))))));
