require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term11 (x0: El int) (x1: El int) (x2: El num) ≔ ((@= bool) (= (int_pow x0 x2) (int_pow x1 x2)));
symbol term0 (x0: El num) ≔ ((λ y0 : El num, (∀ (λ y1 : El real, (∀ (λ y2 : El real, (⇒ (ODD y0) (= (= (real_pow y1 y0) (real_pow y2 y0)) (= y1 y2)))))))) x0);
symbol term12 (x0: El num) ≔ (⇒ (ODD x0));
symbol term13 (x0: El num) (x1: El int) (x2: El int) ≔ (⇒ (ODD x0) (= (= (int_pow x1 x0) (int_pow x2 x0)) (= x1 x2)));
symbol term14 (x0: El num) (x1: El int) ≔ (∀ (λ y0 : El int, (⇒ (ODD x0) (= (= (int_pow x1 x0) (int_pow y0 x0)) (= x1 y0)))));
symbol term2 (x0: El num) (x1: El int) ≔ ((λ y0 : El real, (∀ (λ y1 : El real, (⇒ (ODD x0) (= (= (real_pow y0 x0) (real_pow y1 x0)) (= y0 y1)))))) (real_of_int x1));
symbol term1 (x0: El num) ≔ (∀ (λ y0 : El real, (∀ (λ y1 : El real, (⇒ (ODD x0) (= (= (real_pow y0 x0) (real_pow y1 x0)) (= y0 y1)))))));
symbol term16 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El int, (∀ (λ y2 : El int, (⇒ (ODD y0) (= (= (int_pow y1 y0) (int_pow y2 y0)) (= y1 y2)))))))));
symbol term15 (x0: El num) ≔ (∀ (λ y0 : El int, (∀ (λ y1 : El int, (⇒ (ODD x0) (= (= (int_pow y0 x0) (int_pow y1 x0)) (= y0 y1)))))));
symbol term6 (x0: El int) (x1: El num) ≔ (real_pow (real_of_int x0) x1);
symbol term5 (x0: El num) (x1: El int) (x2: El int) ≔ (⇒ (ODD x0) (= (= (real_pow (real_of_int x1) x0) (real_pow (real_of_int x2) x0)) (= (real_of_int x1) (real_of_int x2))));
symbol term8 (x0: El int) (x1: El num) ≔ ((@= real) (real_pow (real_of_int x0) x1));
symbol term9 (x0: El int) (x1: El num) ≔ ((@= real) (real_of_int (int_pow x0 x1)));
symbol term10 (x0: El int) (x1: El int) (x2: El num) ≔ ((@= bool) (= (real_pow (real_of_int x0) x2) (real_pow (real_of_int x1) x2)));
symbol term3 (x0: El num) (x1: El int) ≔ (∀ (λ y0 : El real, (⇒ (ODD x0) (= (= (real_pow (real_of_int x1) x0) (real_pow y0 x0)) (= (real_of_int x1) y0)))));
symbol term4 (x0: El num) (x1: El int) (x2: El int) ≔ ((λ y0 : El real, (⇒ (ODD x0) (= (= (real_pow (real_of_int x1) x0) (real_pow y0 x0)) (= (real_of_int x1) y0)))) (real_of_int x2));
symbol term7 (x0: El int) (x1: El num) ≔ (real_of_int (int_pow x0 x1));
