Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term36 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : real) (x3 : real) := ((@FINITE a0 (@support a0 real real_add x0 x1)) -> (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = x2) -> ((~ (@FINITE a0 (@support a0 real real_add x0 x1))) -> (@neutral real real_add) = x3) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real (@FINITE a0 (@support a0 real real_add x0 x1)) x2 x3).
Definition term46 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := ((~ (@FINITE a0 (@support a0 real real_add x0 x1))) -> (@neutral real real_add) = (@neutral real real_add)) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real (@FINITE a0 (@support a0 real real_add x0 x1)) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add)) (@neutral real real_add)).
Definition term42 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : real) := ((@FINITE a0 (@support a0 real real_add x0 x1)) -> (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add))) -> ((~ (@FINITE a0 (@support a0 real real_add x0 x1))) -> (@neutral real real_add) = x2) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real (@FINITE a0 (@support a0 real real_add x0 x1)) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add)) x2).
Definition term15 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> real) := @iterate real a0 real_add (@support a0 real real_add x1 x0) x1.
Definition term3 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) := forall y0 : a1 -> Prop, (@support a1 a0 x0 x1 (@support a1 a0 x0 x1 y0)) = (@support a1 a0 x0 x1 y0).
Definition term29 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : Prop) (x3 : real) := forall y0 : real, ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = x2) -> (x2 -> (@ITSET real a0 (fun y1 : a0 => fun y2 : real => real_add (x0 y1) y2) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = x3) -> ((~ x2) -> (@neutral real real_add) = y0) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y1 : a0 => fun y2 : real => real_add (x0 y1) y2) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real x2 x3 y0).
Definition term47 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @COND real (@FINITE a0 (@support a0 real real_add x0 x1)) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add)) (@neutral real real_add).
Definition term54 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term45 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := ~ (@FINITE a0 (@support a0 real real_add x0 x1)).
Definition term35 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : real) (x3 : real) := ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = (@FINITE a0 (@support a0 real real_add x0 x1))) -> ((@FINITE a0 (@support a0 real real_add x0 x1)) -> (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = x2) -> ((~ (@FINITE a0 (@support a0 real real_add x0 x1))) -> (@neutral real real_add) = x3) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real (@FINITE a0 (@support a0 real real_add x0 x1)) x2 x3).
Definition term0 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := (fun y0 : type1400 a0 => forall y1 : a1 -> a0, forall y2 : a1 -> Prop, (@support a1 a0 y0 y1 (@support a1 a0 y0 y1 y2)) = (@support a1 a0 y0 y1 y2)) x0.
Definition term34 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @FINITE a0 (@support a0 real real_add x0 x1).
Definition term11 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> Prop) (x2 : type1400 a0) := @COND a0 (@FINITE a1 (@support a1 a0 x2 x0 x1)) (@ITSET a0 a1 (fun y0 : a1 => fun y1 : a0 => x2 (x0 y0) y1) (@support a1 a0 x2 x0 x1) (@neutral a0 x2)) (@neutral a0 x2).
Definition term19 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) := forall y0 : a0, (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = y0) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 y0).
Definition term60 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> real, x0.
Definition term55 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, x0.
Definition term48 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> real) := @eq real (@sum a0 (@support a0 real real_add x1 x0) x1).
Definition term24 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1)).
Definition term32 (a0 : Type') (x0 : type1627) (x1 : a0 -> real) (x2 : a0 -> Prop) := @support a0 real x0 x1 (@support a0 real x0 x1 x2).
Definition term5 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) (x2 : a1 -> Prop) := @support a1 a0 x0 x1 (@support a1 a0 x0 x1 x2).
Definition term49 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @eq real (@COND real (@FINITE a0 (@support a0 real real_add x0 x1)) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add)) (@neutral real real_add)).
Definition term14 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> real) := @sum a0 (@support a0 real real_add x1 x0) x1.
Definition term27 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : Prop) := forall y0 : real, forall y1 : real, ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = x2) -> (x2 -> (@ITSET real a0 (fun y2 : a0 => fun y3 : real => real_add (x0 y2) y3) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = y0) -> ((~ x2) -> (@neutral real real_add) = y1) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y2 : a0 => fun y3 : real => real_add (x0 y2) y3) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real x2 y0 y1).
Definition term13 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @iterate real a0 real_add (@support a0 real real_add x0 x1).
Definition term2 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) := (fun y0 : a1 -> a0 => forall y1 : a1 -> Prop, (@support a1 a0 x0 y0 (@support a1 a0 x0 y0 y1)) = (@support a1 a0 x0 y0 y1)) x1.
Definition term38 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)).
Definition term50 (a0 : Type') (x0 : a0 -> real) := fun y0 : a0 -> Prop => (@sum a0 (@support a0 real real_add x0 y0) x0) = (@sum a0 y0 x0).
Definition term52 (a0 : Type') (x0 : a0 -> real) := forall y0 : a0 -> Prop, (@sum a0 (@support a0 real real_add x0 y0) x0) = (@sum a0 y0 x0).
Definition term43 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : real) := ((~ (@FINITE a0 (@support a0 real real_add x0 x1))) -> (@neutral real real_add) = x2) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real (@FINITE a0 (@support a0 real real_add x0 x1)) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add)) x2).
Definition term40 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add).
Definition term9 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> Prop) := forall y0 : type1400 a0, (@iterate a0 a1 y0 x1 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 y0 x0 x1)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => y0 (x0 y1) y2) (@support a1 a0 y0 x0 x1) (@neutral a0 y0)) (@neutral a0 y0)).
Definition term30 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : Prop) (x3 : real) (x4 : real) := (fun y0 : real => ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = x2) -> (x2 -> (@ITSET real a0 (fun y1 : a0 => fun y2 : real => real_add (x0 y1) y2) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = x3) -> ((~ x2) -> (@neutral real real_add) = y0) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y1 : a0 => fun y2 : real => real_add (x0 y1) y2) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real x2 x3 y0)) x4.
Definition term33 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @support a0 real real_add x0 (@support a0 real real_add x0 x1).
Definition term41 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := (@FINITE a0 (@support a0 real real_add x0 x1)) -> (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1) (@neutral real real_add)).
Definition term31 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : Prop) (x3 : real) (x4 : real) := ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = x2) -> (x2 -> (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = x3) -> ((~ x2) -> (@neutral real real_add) = x4) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real x2 x3 x4).
Definition term37 (a0 : Type') (x0 : a0 -> real) := @ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1).
Definition term10 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> Prop) (x2 : type1400 a0) := (fun y0 : type1400 a0 => (@iterate a0 a1 y0 x1 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 y0 x0 x1)) (@ITSET a0 a1 (fun y1 : a1 => fun y2 : a0 => y0 (x0 y1) y2) (@support a1 a0 y0 x0 x1) (@neutral a0 y0)) (@neutral a0 y0))) x2.
Definition term12 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @sum a0 (@support a0 real real_add x0 x1).
Definition term25 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add).
Definition term51 (a0 : Type') := fun y0 : a0 -> Prop => True.
Definition term57 (a0 : Type') := fun y0 : a0 -> real => True.
Definition term44 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := (~ (@FINITE a0 (@support a0 real real_add x0 x1))) -> (@neutral real real_add) = (@neutral real real_add).
Definition term23 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := forall y0 : Prop, forall y1 : real, forall y2 : real, ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = y0) -> (y0 -> (@ITSET real a0 (fun y3 : a0 => fun y4 : real => real_add (x0 y3) y4) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = y1) -> ((~ y0) -> (@neutral real real_add) = y2) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y3 : a0 => fun y4 : real => real_add (x0 y3) y4) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real y0 y1 y2).
Definition term22 (x0 : Prop) (x1 : real) (x2 : real) := forall y0 : Prop, forall y1 : real, forall y2 : real, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND real x0 x1 x2) = (@COND real y0 y1 y2).
Definition term21 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) := forall y0 : Prop, forall y1 : a0, forall y2 : a0, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND a0 x0 x1 x2) = (@COND a0 y0 y1 y2).
Definition term58 (a0 : Type') := forall y0 : a0 -> real, forall y1 : a0 -> Prop, (@sum a0 (@support a0 real real_add y0 y1) y0) = (@sum a0 y1 y0).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) := forall y0 : a1 -> Prop, forall y1 : type1400 a0, (@iterate a0 a1 y1 y0 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 y1 x0 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => y1 (x0 y2) y3) (@support a1 a0 y1 x0 y0) (@neutral a0 y1)) (@neutral a0 y1)).
Definition term1 (a0 : Type') (a1 : Type') (x0 : type1400 a0) := forall y0 : a1 -> a0, forall y1 : a1 -> Prop, (@support a1 a0 x0 y0 (@support a1 a0 x0 y0 y1)) = (@support a1 a0 x0 y0 y1).
Definition term28 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : Prop) (x3 : real) := (fun y0 : real => forall y1 : real, ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = x2) -> (x2 -> (@ITSET real a0 (fun y2 : a0 => fun y3 : real => real_add (x0 y2) y3) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = y0) -> ((~ x2) -> (@neutral real real_add) = y1) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y2 : a0 => fun y3 : real => real_add (x0 y2) y3) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real x2 y0 y1)) x3.
Definition term56 (a0 : Type') := fun y0 : a0 -> real => forall y1 : a0 -> Prop, (@sum a0 (@support a0 real real_add y0 y1) y0) = (@sum a0 y1 y0).
Definition term20 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) := forall y0 : a0, forall y1 : a0, (x0 = x3) -> (x3 -> x1 = y0) -> ((~ x3) -> x2 = y1) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 y0 y1).
Definition term17 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) := (fun y0 : a1 -> a0 => forall y1 : a1 -> Prop, forall y2 : type1400 a0, (@iterate a0 a1 y2 y1 y0) = (@COND a0 (@FINITE a1 (@support a1 a0 y2 y0 y1)) (@ITSET a0 a1 (fun y3 : a1 => fun y4 : a0 => y2 (y0 y3) y4) (@support a1 a0 y2 y0 y1) (@neutral a0 y2)) (@neutral a0 y2))) x0.
Definition term8 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> Prop) := (fun y0 : a1 -> Prop => forall y1 : type1400 a0, (@iterate a0 a1 y1 y0 x0) = (@COND a0 (@FINITE a1 (@support a1 a0 y1 x0 y0)) (@ITSET a0 a1 (fun y2 : a1 => fun y3 : a0 => y1 (x0 y2) y3) (@support a1 a0 y1 x0 y0) (@neutral a0 y1)) (@neutral a0 y1))) x1.
Definition term39 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) := @ITSET real a0 (fun y0 : a0 => fun y1 : real => real_add (x0 y0) y1) (@support a0 real real_add x0 x1).
Definition term26 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : Prop) := (fun y0 : Prop => forall y1 : real, forall y2 : real, ((@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) = y0) -> (y0 -> (@ITSET real a0 (fun y3 : a0 => fun y4 : real => real_add (x0 y3) y4) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) = y1) -> ((~ y0) -> (@neutral real real_add) = y2) -> (@COND real (@FINITE a0 (@support a0 real real_add x0 (@support a0 real real_add x0 x1))) (@ITSET real a0 (fun y3 : a0 => fun y4 : real => real_add (x0 y3) y4) (@support a0 real real_add x0 (@support a0 real real_add x0 x1)) (@neutral real real_add)) (@neutral real real_add)) = (@COND real y0 y1 y2)) x2.
Definition term16 (a0 : Type') (x0 : a0 -> real) (x1 : a0 -> Prop) (x2 : type1627) := @COND real (@FINITE a0 (@support a0 real x2 x0 x1)) (@ITSET real a0 (fun y0 : a0 => fun y1 : real => x2 (x0 y0) y1) (@support a0 real x2 x0 x1) (@neutral real x2)) (@neutral real x2).
Definition term18 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) (x5 : a0) := (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = x5) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 x5).
Definition term4 (a0 : Type') (a1 : Type') (x0 : type1400 a0) (x1 : a1 -> a0) (x2 : a1 -> Prop) := (fun y0 : a1 -> Prop => (@support a1 a0 x0 x1 (@support a1 a0 x0 x1 y0)) = (@support a1 a0 x0 x1 y0)) x2.
Definition term59 (a0 : Type') := forall y0 : a0 -> real, True.
Definition term53 (a0 : Type') := forall y0 : a0 -> Prop, True.
