Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm3454374_term_abbrevs.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm3453886_spec.
Require Import thm3453887_spec.
Require Import thm3453893_spec.
Require Import thm3453894_spec.
Require Import thm3453899_spec.
Require Import thm3453900_spec.
Lemma lem3454217 {A : Type'} (s : type686 A) (x : A) : (term0 A x s) = (term1 A s x).
Proof. exact (EQ_MP (@lem3453900 A s x) (@lem3453899 A s x)). Qed.
Lemma lem3454218 {_89646 : Type'} (s : type686 _89646) (x : _89646) : (term0 _89646 x s) = (term1 _89646 s x).
Proof. exact (@lem3454217 _89646 s x). Qed.
Lemma lem3454219 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term2 _89646 _89670 _89671 _89672 x P f) = (term3 _89646 _89670 _89671 _89672 P f x).
Proof. exact (@lem3454218 _89646 (term4 _89646 _89670 _89671 _89672 P f) x). Qed.
Lemma lem3454227 {_83064 : Type'} (P : type919 _83064) (x : _83064) : (term5 _83064 x P) = (term6 _83064 P x).
Proof. exact (EQ_MP (@lem3453894 _83064 P x) (@lem3453893 _83064 P x)). Qed.
Lemma lem3454228 {_89646 : Type'} (P : type909 _89646) (x : _89646 -> Prop) : (term7 _89646 x P) = (term8 _89646 P x).
Proof. exact (@lem3454227 (_89646 -> Prop) P x). Qed.
Lemma lem3454229 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (t : _89646 -> Prop) : (term9 _89646 _89670 _89671 _89672 t P f) = (term10 _89646 _89670 _89671 _89672 P f t).
Proof. exact (@lem3454228 _89646 (term11 _89646 _89670 _89671 _89672 P f) t). Qed.
Lemma lem3454230 {_89646 _89670 _89671 _89672 : Type'} (GEN_PVAR_53 : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term12 _89646 _89670 _89671 _89672 P f GEN_PVAR_53) = (term13 _89646 _89670 _89671 _89672 GEN_PVAR_53 P f).
Proof. exact (eq_refl (term12 _89646 _89670 _89671 _89672 P f GEN_PVAR_53)). Qed.
Lemma lem3454231 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term14 _89646 _89670 _89671 _89672 P f) = (term15 _89646 _89670 _89671 _89672 P f).
Proof. exact (fun_ext (fun GEN_PVAR_53 : _89646 -> Prop => @lem3454230 _89646 _89670 _89671 _89672 GEN_PVAR_53 P f)). Qed.
Lemma lem3454232 {_89646 : Type'} : (@GSPEC (_89646 -> Prop)) = (@GSPEC (_89646 -> Prop)).
Proof. exact (eq_refl (@GSPEC (_89646 -> Prop))). Qed.
Lemma lem3454233 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term16 _89646 _89670 _89671 _89672 P f) = (term4 _89646 _89670 _89671 _89672 P f).
Proof. exact (MK_COMB (@lem3454232 _89646) (@lem3454231 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3454234 {_89646 : Type'} (t : _89646 -> Prop) : (@IN (_89646 -> Prop) t) = (@IN (_89646 -> Prop) t).
Proof. exact (eq_refl (@IN (_89646 -> Prop) t)). Qed.
Lemma lem3454235 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term9 _89646 _89670 _89671 _89672 t P f) = (term17 _89646 _89670 _89671 _89672 t P f).
Proof. exact (MK_COMB (@lem3454234 _89646 t) (@lem3454233 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3454236 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3454237 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term18 _89646 _89670 _89671 _89672 t P f) = (term19 _89646 _89670 _89671 _89672 t P f).
Proof. exact (MK_COMB (@lem3454236) (@lem3454235 _89646 _89670 _89671 _89672 t P f)). Qed.
Lemma lem3454238 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term10 _89646 _89670 _89671 _89672 P f t) = (term20 _89646 _89670 _89671 _89672 t P f).
Proof. exact (eq_refl (term10 _89646 _89670 _89671 _89672 P f t)). Qed.
Lemma lem3454239 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : ((term9 _89646 _89670 _89671 _89672 t P f) = (term10 _89646 _89670 _89671 _89672 P f t)) = ((term17 _89646 _89670 _89671 _89672 t P f) = (term20 _89646 _89670 _89671 _89672 t P f)).
Proof. exact (MK_COMB (@lem3454237 _89646 _89670 _89671 _89672 t P f) (@lem3454238 _89646 _89670 _89671 _89672 t P f)). Qed.
Lemma lem3454240 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term17 _89646 _89670 _89671 _89672 t P f) = (term20 _89646 _89670 _89671 _89672 t P f).
Proof. exact (EQ_MP (@lem3454239 _89646 _89670 _89671 _89672 t P f) (@lem3454229 _89646 _89670 _89671 _89672 P f t)). Qed.
Lemma lem3454254 {A B : Type'} (f : A -> B) (y : A) : (term21 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem3454255 {_89646 : Type'} (f : type1527 _89646) (y : Prop) : (term22 _89646 f y) = (f y).
Proof. exact (@lem3454254 Prop (type686 _89646) f y). Qed.
Lemma lem3454256 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term23 _89646 _89670 _89671 _89672 t P x y z) = (term24 _89646 _89670 _89671 _89672 t P x y z).
Proof. exact (@lem3454255 _89646 (term25 _89646 t) (P x y z)). Qed.
Lemma lem3454257 {_89646 : Type'} (p : Prop) (t : _89646 -> Prop) : (term26 _89646 t p) = (term27 _89646 p t).
Proof. exact (eq_refl (term26 _89646 t p)). Qed.
Lemma lem3454258 {_89646 : Type'} (t : _89646 -> Prop) : (term28 _89646 t) = (term25 _89646 t).
Proof. exact (fun_ext (fun p : Prop => @lem3454257 _89646 p t)). Qed.
Lemma lem3454259 {_89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (P x y z) = (P x y z).
Proof. exact (eq_refl (P x y z)). Qed.
Lemma lem3454260 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term23 _89646 _89670 _89671 _89672 t P x y z) = (term24 _89646 _89670 _89671 _89672 t P x y z).
Proof. exact (MK_COMB (@lem3454258 _89646 t) (@lem3454259 _89670 _89671 _89672 P x y z)). Qed.
Lemma lem3454261 {_89646 : Type'} : (@eq ((_89646 -> Prop) -> Prop)) = (@eq ((_89646 -> Prop) -> Prop)).
Proof. exact (eq_refl (@eq ((_89646 -> Prop) -> Prop))). Qed.
Lemma lem3454262 {_89646 _89670 _89671 _89672 : Type'} (t : _89646 -> Prop) (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term29 _89646 _89670 _89671 _89672 t P x y z) = (term30 _89646 _89670 _89671 _89672 t P x y z).
Proof. exact (MK_COMB (@lem3454261 _89646) (@lem3454260 _89646 _89670 _89671 _89672 t P x y z)). Qed.
Lemma lem3454263 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) : (term24 _89646 _89670 _89671 _89672 t P x y z) = (term31 _89646 _89670 _89671 _89672 P x y z t).
Proof. exact (eq_refl (term24 _89646 _89670 _89671 _89672 t P x y z)). Qed.
Lemma lem3454264 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) : ((term23 _89646 _89670 _89671 _89672 t P x y z) = (term24 _89646 _89670 _89671 _89672 t P x y z)) = ((term24 _89646 _89670 _89671 _89672 t P x y z) = (term31 _89646 _89670 _89671 _89672 P x y z t)).
Proof. exact (MK_COMB (@lem3454262 _89646 _89670 _89671 _89672 t P x y z) (@lem3454263 _89646 _89670 _89671 _89672 P x y z t)). Qed.
Lemma lem3454265 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) : (term24 _89646 _89670 _89671 _89672 t P x y z) = (term31 _89646 _89670 _89671 _89672 P x y z t).
Proof. exact (EQ_MP (@lem3454264 _89646 _89670 _89671 _89672 P x y z t) (@lem3454256 _89646 _89670 _89671 _89672 t P x y z)). Qed.
Lemma lem3454270 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (f x y z) = (f x y z).
Proof. exact (eq_refl (f x y z)). Qed.
Lemma lem3454271 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term32 _89646 _89670 _89671 _89672 t P f x y z) = (term33 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (MK_COMB (@lem3454265 _89646 _89670 _89671 _89672 P x y z t) (@lem3454270 _89646 _89670 _89671 _89672 f x y z)). Qed.
Lemma lem3454273 {A B : Type'} (f : A -> B) (y : A) : (term21 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem3454274 {_89646 : Type'} (f : type686 _89646) (y : _89646 -> Prop) : (term34 _89646 f y) = (f y).
Proof. exact (@lem3454273 (_89646 -> Prop) Prop f y). Qed.
Lemma lem3454275 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term35 _89646 _89670 _89671 _89672 P t f x y z) = (term33 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (@lem3454274 _89646 (term31 _89646 _89670 _89671 _89672 P x y z t) (f x y z)). Qed.
Lemma lem3454276 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) (t' : _89646 -> Prop) : (term36 _89646 _89670 _89671 _89672 P x y z t t') = (term37 _89646 _89670 _89671 _89672 P x y z t t').
Proof. exact (eq_refl (term36 _89646 _89670 _89671 _89672 P x y z t t')). Qed.
Lemma lem3454277 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) (t : _89646 -> Prop) : (term38 _89646 _89670 _89671 _89672 P x y z t) = (term31 _89646 _89670 _89671 _89672 P x y z t).
Proof. exact (fun_ext (fun t' : _89646 -> Prop => @lem3454276 _89646 _89670 _89671 _89672 P x y z t t')). Qed.
Lemma lem3454278 {_89646 _89670 _89671 _89672 : Type'} (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (f x y z) = (f x y z).
Proof. exact (eq_refl (f x y z)). Qed.
Lemma lem3454279 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term35 _89646 _89670 _89671 _89672 P t f x y z) = (term33 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (MK_COMB (@lem3454277 _89646 _89670 _89671 _89672 P x y z t) (@lem3454278 _89646 _89670 _89671 _89672 f x y z)). Qed.
Lemma lem3454280 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3454281 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term39 _89646 _89670 _89671 _89672 P t f x y z) = (term40 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (MK_COMB (@lem3454280) (@lem3454279 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3454282 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term33 _89646 _89670 _89671 _89672 P t f x y z) = (term41 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (eq_refl (term33 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3454283 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : ((term35 _89646 _89670 _89671 _89672 P t f x y z) = (term33 _89646 _89670 _89671 _89672 P t f x y z)) = ((term33 _89646 _89670 _89671 _89672 P t f x y z) = (term41 _89646 _89670 _89671 _89672 P t f x y z)).
Proof. exact (MK_COMB (@lem3454281 _89646 _89670 _89671 _89672 P t f x y z) (@lem3454282 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3454284 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term33 _89646 _89670 _89671 _89672 P t f x y z) = (term41 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (EQ_MP (@lem3454283 _89646 _89670 _89671 _89672 P t f x y z) (@lem3454275 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3454289 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) (z : _89670) : (term32 _89646 _89670 _89671 _89672 t P f x y z) = (term41 _89646 _89670 _89671 _89672 P t f x y z).
Proof. exact (TRANS (@lem3454271 _89646 _89670 _89671 _89672 P t f x y z) (@lem3454284 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3454290 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term42 _89646 _89670 _89671 _89672 t P f x y) = (term43 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (fun_ext (fun z : _89670 => @lem3454289 _89646 _89670 _89671 _89672 P t f x y z)). Qed.
Lemma lem3454291 {_89670 : Type'} : (@ex _89670) = (@ex _89670).
Proof. exact (eq_refl (@ex _89670)). Qed.
Lemma lem3454292 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) (y : _89671) : (term44 _89646 _89670 _89671 _89672 t P f x y) = (term45 _89646 _89670 _89671 _89672 P t f x y).
Proof. exact (MK_COMB (@lem3454291 _89670) (@lem3454290 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3454297 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term46 _89646 _89670 _89671 _89672 t P f x) = (term47 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (fun_ext (fun y : _89671 => @lem3454292 _89646 _89670 _89671 _89672 P t f x y)). Qed.
Lemma lem3454298 {_89671 : Type'} : (@ex _89671) = (@ex _89671).
Proof. exact (eq_refl (@ex _89671)). Qed.
Lemma lem3454299 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) (x : _89672) : (term48 _89646 _89670 _89671 _89672 t P f x) = (term49 _89646 _89670 _89671 _89672 P t f x).
Proof. exact (MK_COMB (@lem3454298 _89671) (@lem3454297 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3454304 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term50 _89646 _89670 _89671 _89672 t P f) = (term51 _89646 _89670 _89671 _89672 P t f).
Proof. exact (fun_ext (fun x : _89672 => @lem3454299 _89646 _89670 _89671 _89672 P t f x)). Qed.
Lemma lem3454305 {_89672 : Type'} : (@ex _89672) = (@ex _89672).
Proof. exact (eq_refl (@ex _89672)). Qed.
Lemma lem3454306 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term20 _89646 _89670 _89671 _89672 t P f) = (term52 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3454305 _89672) (@lem3454304 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3454311 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term17 _89646 _89670 _89671 _89672 t P f) = (term52 _89646 _89670 _89671 _89672 P t f).
Proof. exact (TRANS (@lem3454240 _89646 _89670 _89671 _89672 t P f) (@lem3454306 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3454312 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3454313 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (t : _89646 -> Prop) (f : type1524 _89646 _89670 _89671 _89672) : (term53 _89646 _89670 _89671 _89672 t P f) = (term54 _89646 _89670 _89671 _89672 P t f).
Proof. exact (MK_COMB (@lem3454312) (@lem3454311 _89646 _89670 _89671 _89672 P t f)). Qed.
Lemma lem3454314 {_89646 : Type'} (x : _89646) (t : _89646 -> Prop) : (@IN _89646 x t) = (@IN _89646 x t).
Proof. exact (eq_refl (@IN _89646 x t)). Qed.
Lemma lem3454315 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) (t : _89646 -> Prop) : (term55 _89646 _89670 _89671 _89672 P f x t) = (term56 _89646 _89670 _89671 _89672 P f x t).
Proof. exact (MK_COMB (@lem3454313 _89646 _89670 _89671 _89672 P t f) (@lem3454314 _89646 x t)). Qed.
Lemma lem3454318 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term57 _89646 _89670 _89671 _89672 P f x) = (term58 _89646 _89670 _89671 _89672 P f x).
Proof. exact (fun_ext (fun t : _89646 -> Prop => @lem3454315 _89646 _89670 _89671 _89672 P f x t)). Qed.
Lemma lem3454319 {_89646 : Type'} : (@ex (_89646 -> Prop)) = (@ex (_89646 -> Prop)).
Proof. exact (eq_refl (@ex (_89646 -> Prop))). Qed.
Lemma lem3454320 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term3 _89646 _89670 _89671 _89672 P f x) = (term59 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3454319 _89646) (@lem3454318 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3454325 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term2 _89646 _89670 _89671 _89672 x P f) = (term59 _89646 _89670 _89671 _89672 P f x).
Proof. exact (TRANS (@lem3454219 _89646 _89670 _89671 _89672 P f x) (@lem3454320 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3454326 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3454327 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term60 _89646 _89670 _89671 _89672 x P f) = (term61 _89646 _89670 _89671 _89672 P f x).
Proof. exact (MK_COMB (@lem3454326) (@lem3454325 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3454329 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term62 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3453887 _83095 p x) (@lem3453886 _83095 p x)). Qed.
Lemma lem3454330 {_89646 : Type'} (p : _89646 -> Prop) (x : _89646) : (term62 _89646 x p) = (p x).
Proof. exact (@lem3454329 _89646 p x). Qed.
Lemma lem3454331 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (x : _89646) : (term63 _89646 _89670 _89671 _89672 x P f) = (term64 _89646 _89670 _89671 _89672 P f x).
Proof. exact (@lem3454330 _89646 (term65 _89646 _89670 _89671 _89672 P f) x). Qed.
Lemma lem3454332 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (a : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term64 _89646 _89670 _89671 _89672 P f a) = (term66 _89646 _89670 _89671 _89672 P a f).
Proof. exact (eq_refl (term64 _89646 _89670 _89671 _89672 P f a)). Qed.
Lemma lem3454333 {_89646 : Type'} (GEN_PVAR_54 : _89646) : (@SETSPEC _89646 GEN_PVAR_54) = (@SETSPEC _89646 GEN_PVAR_54).
Proof. exact (eq_refl (@SETSPEC _89646 GEN_PVAR_54)). Qed.
Lemma lem3454334 {_89646 _89670 _89671 _89672 : Type'} (GEN_PVAR_54 : _89646) (P : type1517 _89670 _89671 _89672) (a : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term67 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f a) = (term68 _89646 _89670 _89671 _89672 GEN_PVAR_54 P a f).
Proof. exact (MK_COMB (@lem3454333 _89646 GEN_PVAR_54) (@lem3454332 _89646 _89670 _89671 _89672 P a f)). Qed.
Lemma lem3454335 {_89646 : Type'} (a : _89646) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem3454336 {_89646 _89670 _89671 _89672 : Type'} (GEN_PVAR_54 : _89646) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) (a : _89646) : (term69 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f a) = (term70 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f a).
Proof. exact (MK_COMB (@lem3454334 _89646 _89670 _89671 _89672 GEN_PVAR_54 P a f) (@lem3454335 _89646 a)). Qed.
Lemma lem3454337 {_89646 _89670 _89671 _89672 : Type'} (GEN_PVAR_54 : _89646) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term71 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f) = (term72 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f).
Proof. exact (fun_ext (fun a : _89646 => @lem3454336 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f a)). Qed.
Lemma lem3454338 {_89646 : Type'} : (@ex _89646) = (@ex _89646).
Proof. exact (eq_refl (@ex _89646)). Qed.
Lemma lem3454339 {_89646 _89670 _89671 _89672 : Type'} (GEN_PVAR_54 : _89646) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term73 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f) = (term74 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f).
Proof. exact (MK_COMB (@lem3454338 _89646) (@lem3454337 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f)). Qed.
Lemma lem3454340 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term75 _89646 _89670 _89671 _89672 P f) = (term76 _89646 _89670 _89671 _89672 P f).
Proof. exact (fun_ext (fun GEN_PVAR_54 : _89646 => @lem3454339 _89646 _89670 _89671 _89672 GEN_PVAR_54 P f)). Qed.
Lemma lem3454341 {_89646 : Type'} : (@GSPEC _89646) = (@GSPEC _89646).
Proof. exact (eq_refl (@GSPEC _89646)). Qed.
Lemma lem3454342 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term77 _89646 _89670 _89671 _89672 P f) = (term78 _89646 _89670 _89671 _89672 P f).
Proof. exact (MK_COMB (@lem3454341 _89646) (@lem3454340 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3454343 {_89646 : Type'} (x : _89646) : (@IN _89646 x) = (@IN _89646 x).
Proof. exact (eq_refl (@IN _89646 x)). Qed.
Lemma lem3454344 {_89646 _89670 _89671 _89672 : Type'} (x : _89646) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term63 _89646 _89670 _89671 _89672 x P f) = (term79 _89646 _89670 _89671 _89672 x P f).
Proof. exact (MK_COMB (@lem3454343 _89646 x) (@lem3454342 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3454345 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3454346 {_89646 _89670 _89671 _89672 : Type'} (x : _89646) (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term80 _89646 _89670 _89671 _89672 x P f) = (term81 _89646 _89670 _89671 _89672 x P f).
Proof. exact (MK_COMB (@lem3454345) (@lem3454344 _89646 _89670 _89671 _89672 x P f)). Qed.
Lemma lem3454347 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term64 _89646 _89670 _89671 _89672 P f x) = (term66 _89646 _89670 _89671 _89672 P x f).
Proof. exact (eq_refl (term64 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3454348 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term63 _89646 _89670 _89671 _89672 x P f) = (term64 _89646 _89670 _89671 _89672 P f x)) = ((term79 _89646 _89670 _89671 _89672 x P f) = (term66 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (MK_COMB (@lem3454346 _89646 _89670 _89671 _89672 x P f) (@lem3454347 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3454349 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : (term79 _89646 _89670 _89671 _89672 x P f) = (term66 _89646 _89670 _89671 _89672 P x f).
Proof. exact (EQ_MP (@lem3454348 _89646 _89670 _89671 _89672 P x f) (@lem3454331 _89646 _89670 _89671 _89672 P f x)). Qed.
Lemma lem3454364 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (x : _89646) (f : type1524 _89646 _89670 _89671 _89672) : ((term2 _89646 _89670 _89671 _89672 x P f) = (term79 _89646 _89670 _89671 _89672 x P f)) = ((term59 _89646 _89670 _89671 _89672 P f x) = (term66 _89646 _89670 _89671 _89672 P x f)).
Proof. exact (MK_COMB (@lem3454327 _89646 _89670 _89671 _89672 P f x) (@lem3454349 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3454367 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term82 _89646 _89670 _89671 _89672 P f) = (term83 _89646 _89670 _89671 _89672 P f).
Proof. exact (fun_ext (fun x : _89646 => @lem3454364 _89646 _89670 _89671 _89672 P x f)). Qed.
Lemma lem3454368 {_89646 : Type'} : (@all _89646) = (@all _89646).
Proof. exact (eq_refl (@all _89646)). Qed.
Lemma lem3454369 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term84 _89646 _89670 _89671 _89672 P f) = (term85 _89646 _89670 _89671 _89672 P f).
Proof. exact (MK_COMB (@lem3454368 _89646) (@lem3454367 _89646 _89670 _89671 _89672 P f)). Qed.
Lemma lem3454374 {_89646 _89670 _89671 _89672 : Type'} (P : type1517 _89670 _89671 _89672) (f : type1524 _89646 _89670 _89671 _89672) : (term85 _89646 _89670 _89671 _89672 P f) = (term84 _89646 _89670 _89671 _89672 P f).
Proof. exact (SYM (@lem3454369 _89646 _89670 _89671 _89672 P f)). Qed.
