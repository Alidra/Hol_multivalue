Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm1104601_term_abbrevs.
Require Import BETA_THM_spec.
Require Import SKOLEM_THM_spec.
Require Import list_RECURSION_spec.
Require Import thm9261_spec.
Require Import thm9306_spec.
Lemma lem1104270 {A B : Type'} (f : A -> B) : term0 A B f.
Proof. exact (@lem421 A B f). Qed.
Lemma lem1104271 {A B : Type'} (f : A -> B) : (term0 A B f) = (term1 A B f).
Proof. exact (eq_refl (term0 A B f)). Qed.
Lemma lem1104272 {A B : Type'} (f : A -> B) : term1 A B f.
Proof. exact (EQ_MP (@lem1104271 A B f) (@lem1104270 A B f)). Qed.
Lemma lem1104273 {A B : Type'} (f : A -> B) (y : A) : term2 A B f y.
Proof. exact (@lem1104272 A B f y). Qed.
Lemma lem1104274 {A B : Type'} (f : A -> B) (y : A) : (term2 A B f y) = ((term3 A B f y) = (f y)).
Proof. exact (eq_refl (term2 A B f y)). Qed.
Lemma lem1104277 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : MAP2' = (term4 _25498 _25501 _25508 _18007).
Proof. exact (h1). Qed.
Lemma lem1104278 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104279 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104277 _25498 _25501 _25508 MAP2' _18007 h1) (@lem1104278 _25498 _25501 _25508 f)). Qed.
Lemma lem1104281 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104282 {_25498 _25501 _25508 : Type'} (f : type763 _25498 _25501 _25508) (y : type1475 _25498 _25501 _25508) : (term6 _25498 _25501 _25508 f y) = (f y).
Proof. exact (@lem1104281 (type1475 _25498 _25501 _25508) (type1151 _25498 _25501 _25508) f y). Qed.
Lemma lem1104283 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (@lem1104282 _25498 _25501 _25508 (term4 _25498 _25501 _25508 _18007) f). Qed.
Lemma lem1104284 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (_18004 : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 _18004) = (term8 _25498 _25501 _25508 _18007 _18004).
Proof. exact (eq_refl (term5 _25498 _25501 _25508 _18007 _18004)). Qed.
Lemma lem1104285 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) : (term9 _25498 _25501 _25508 _18007) = (term4 _25498 _25501 _25508 _18007).
Proof. exact (fun_ext (fun _18004 : type1475 _25498 _25501 _25508 => @lem1104284 _25498 _25501 _25508 _18007 _18004)). Qed.
Lemma lem1104286 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104287 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104285 _25498 _25501 _25508 _18007) (@lem1104286 _25498 _25501 _25508 f)). Qed.
Lemma lem1104288 {_25498 _25501 _25508 : Type'} : (@eq ((list _25501) -> (list _25508) -> list _25498)) = (@eq ((list _25501) -> (list _25508) -> list _25498)).
Proof. exact (eq_refl (@eq ((list _25501) -> (list _25508) -> list _25498))). Qed.
Lemma lem1104289 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term10 _25498 _25501 _25508 _18007 f) = (term11 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104288 _25498 _25501 _25508) (@lem1104287 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104290 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (eq_refl (term5 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104291 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : ((term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f)) = ((term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f)).
Proof. exact (MK_COMB (@lem1104289 _25498 _25501 _25508 _18007 f) (@lem1104290 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104292 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (EQ_MP (@lem1104291 _25498 _25501 _25508 _18007 f) (@lem1104283 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104293 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (TRANS (@lem1104279 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104292 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104294 {_25501 : Type'} : (@nil _25501) = (@nil _25501).
Proof. exact (eq_refl (@nil _25501)). Qed.
Lemma lem1104295 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f (@nil _25501)) = (term12 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104293 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104294 _25501)). Qed.
Lemma lem1104297 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104298 {_25498 _25501 _25508 : Type'} (f : type1151 _25498 _25501 _25508) (y : list _25501) : (term13 _25498 _25501 _25508 f y) = (f y).
Proof. exact (@lem1104297 (list _25501) (type1154 _25498 _25508) f y). Qed.
Lemma lem1104299 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term14 _25498 _25501 _25508 _18007 f) = (term12 _25498 _25501 _25508 _18007 f).
Proof. exact (@lem1104298 _25498 _25501 _25508 (term8 _25498 _25501 _25508 _18007 f) (@nil _25501)). Qed.
Lemma lem1104300 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (_18005 : list _25501) (f : type1475 _25498 _25501 _25508) : (term15 _25498 _25501 _25508 _18007 f _18005) = (term16 _25498 _25501 _25508 _18007 _18005 f).
Proof. exact (eq_refl (term15 _25498 _25501 _25508 _18007 f _18005)). Qed.
Lemma lem1104301 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term17 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (fun_ext (fun _18005 : list _25501 => @lem1104300 _25498 _25501 _25508 _18007 _18005 f)). Qed.
Lemma lem1104302 {_25501 : Type'} : (@nil _25501) = (@nil _25501).
Proof. exact (eq_refl (@nil _25501)). Qed.
Lemma lem1104303 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term14 _25498 _25501 _25508 _18007 f) = (term12 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104301 _25498 _25501 _25508 _18007 f) (@lem1104302 _25501)). Qed.
Lemma lem1104304 {_25498 _25508 : Type'} : (@eq ((list _25508) -> list _25498)) = (@eq ((list _25508) -> list _25498)).
Proof. exact (eq_refl (@eq ((list _25508) -> list _25498))). Qed.
Lemma lem1104305 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term18 _25498 _25501 _25508 _18007 f) = (term19 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104304 _25498 _25508) (@lem1104303 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104306 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term12 _25498 _25501 _25508 _18007 f) = (term20 _25498 _25501 _25508 _18007 f).
Proof. exact (eq_refl (term12 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104307 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : ((term14 _25498 _25501 _25508 _18007 f) = (term12 _25498 _25501 _25508 _18007 f)) = ((term12 _25498 _25501 _25508 _18007 f) = (term20 _25498 _25501 _25508 _18007 f)).
Proof. exact (MK_COMB (@lem1104305 _25498 _25501 _25508 _18007 f) (@lem1104306 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104308 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term12 _25498 _25501 _25508 _18007 f) = (term20 _25498 _25501 _25508 _18007 f).
Proof. exact (EQ_MP (@lem1104307 _25498 _25501 _25508 _18007 f) (@lem1104299 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104309 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f (@nil _25501)) = (term20 _25498 _25501 _25508 _18007 f).
Proof. exact (TRANS (@lem1104295 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104308 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104310 {_25508 : Type'} (l : list _25508) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem1104311 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f (@nil _25501) l) = (term21 _25498 _25501 _25508 _18007 f l).
Proof. exact (MK_COMB (@lem1104309 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104310 _25508 l)). Qed.
Lemma lem1104313 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104314 {_25498 _25508 : Type'} (f : type1154 _25498 _25508) (y : list _25508) : (term22 _25498 _25508 f y) = (f y).
Proof. exact (@lem1104313 (list _25508) (list _25498) f y). Qed.
Lemma lem1104315 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term23 _25498 _25501 _25508 _18007 f l) = (term21 _25498 _25501 _25508 _18007 f l).
Proof. exact (@lem1104314 _25498 _25508 (term20 _25498 _25501 _25508 _18007 f) l). Qed.
Lemma lem1104316 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (_18006 : list _25508) : (term21 _25498 _25501 _25508 _18007 f _18006) = (_18007 (@nil _25501) f _18006).
Proof. exact (eq_refl (term21 _25498 _25501 _25508 _18007 f _18006)). Qed.
Lemma lem1104317 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term24 _25498 _25501 _25508 _18007 f) = (term20 _25498 _25501 _25508 _18007 f).
Proof. exact (fun_ext (fun _18006 : list _25508 => @lem1104316 _25498 _25501 _25508 _18007 f _18006)). Qed.
Lemma lem1104318 {_25508 : Type'} (l : list _25508) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem1104319 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term23 _25498 _25501 _25508 _18007 f l) = (term21 _25498 _25501 _25508 _18007 f l).
Proof. exact (MK_COMB (@lem1104317 _25498 _25501 _25508 _18007 f) (@lem1104318 _25508 l)). Qed.
Lemma lem1104320 {_25498 : Type'} : (@eq (list _25498)) = (@eq (list _25498)).
Proof. exact (eq_refl (@eq (list _25498))). Qed.
Lemma lem1104321 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term25 _25498 _25501 _25508 _18007 f l) = (term26 _25498 _25501 _25508 _18007 f l).
Proof. exact (MK_COMB (@lem1104320 _25498) (@lem1104319 _25498 _25501 _25508 _18007 f l)). Qed.
Lemma lem1104322 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term21 _25498 _25501 _25508 _18007 f l) = (_18007 (@nil _25501) f l).
Proof. exact (eq_refl (term21 _25498 _25501 _25508 _18007 f l)). Qed.
Lemma lem1104323 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : ((term23 _25498 _25501 _25508 _18007 f l) = (term21 _25498 _25501 _25508 _18007 f l)) = ((term21 _25498 _25501 _25508 _18007 f l) = (_18007 (@nil _25501) f l)).
Proof. exact (MK_COMB (@lem1104321 _25498 _25501 _25508 _18007 f l) (@lem1104322 _25498 _25501 _25508 _18007 f l)). Qed.
Lemma lem1104324 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term21 _25498 _25501 _25508 _18007 f l) = (_18007 (@nil _25501) f l).
Proof. exact (EQ_MP (@lem1104323 _25498 _25501 _25508 _18007 f l) (@lem1104315 _25498 _25501 _25508 _18007 f l)). Qed.
Lemma lem1104325 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f (@nil _25501) l) = (_18007 (@nil _25501) f l).
Proof. exact (TRANS (@lem1104311 _25498 _25501 _25508 f l MAP2' _18007 h1) (@lem1104324 _25498 _25501 _25508 _18007 f l)). Qed.
Lemma lem1104326 {_25498 : Type'} : (@eq (list _25498)) = (@eq (list _25498)).
Proof. exact (eq_refl (@eq (list _25498))). Qed.
Lemma lem1104327 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term27 _25498 _25501 _25508 MAP2' f l) = (term28 _25498 _25501 _25508 _18007 f l).
Proof. exact (MK_COMB (@lem1104326 _25498) (@lem1104325 _25498 _25501 _25508 f l MAP2' _18007 h1)). Qed.
Lemma lem1104328 {_25498 : Type'} : (@nil _25498) = (@nil _25498).
Proof. exact (eq_refl (@nil _25498)). Qed.
Lemma lem1104329 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : ((MAP2' f (@nil _25501) l) = (@nil _25498)) = ((_18007 (@nil _25501) f l) = (@nil _25498)).
Proof. exact (MK_COMB (@lem1104327 _25498 _25501 _25508 f l MAP2' _18007 h1) (@lem1104328 _25498)). Qed.
Lemma lem1104330 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term29 _25498 _25501 _25508 MAP2' f) = (term30 _25498 _25501 _25508 _18007 f).
Proof. exact (fun_ext (fun l : list _25508 => @lem1104329 _25498 _25501 _25508 f l MAP2' _18007 h1)). Qed.
Lemma lem1104331 {_25508 : Type'} : (@all (list _25508)) = (@all (list _25508)).
Proof. exact (eq_refl (@all (list _25508))). Qed.
Lemma lem1104332 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term31 _25498 _25501 _25508 MAP2' f) = (term32 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104331 _25508) (@lem1104330 _25498 _25501 _25508 f MAP2' _18007 h1)). Qed.
Lemma lem1104333 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term33 _25498 _25501 _25508 MAP2') = (term34 _25498 _25501 _25508 _18007).
Proof. exact (fun_ext (fun f : type1475 _25498 _25501 _25508 => @lem1104332 _25498 _25501 _25508 f MAP2' _18007 h1)). Qed.
Lemma lem1104334 {_25498 _25501 _25508 : Type'} : (@all (_25501 -> _25508 -> _25498)) = (@all (_25501 -> _25508 -> _25498)).
Proof. exact (eq_refl (@all (_25501 -> _25508 -> _25498))). Qed.
Lemma lem1104335 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term35 _25498 _25501 _25508 MAP2') = (term36 _25498 _25501 _25508 _18007).
Proof. exact (MK_COMB (@lem1104334 _25498 _25501 _25508) (@lem1104333 _25498 _25501 _25508 MAP2' _18007 h1)). Qed.
Lemma lem1104336 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem1104337 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term37 _25498 _25501 _25508 MAP2') = (term38 _25498 _25501 _25508 _18007).
Proof. exact (MK_COMB (@lem1104336) (@lem1104335 _25498 _25501 _25508 MAP2' _18007 h1)). Qed.
Lemma lem1104339 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : MAP2' = (term4 _25498 _25501 _25508 _18007).
Proof. exact (h1). Qed.
Lemma lem1104340 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104341 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104339 _25498 _25501 _25508 MAP2' _18007 h1) (@lem1104340 _25498 _25501 _25508 f)). Qed.
Lemma lem1104343 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104344 {_25498 _25501 _25508 : Type'} (f : type763 _25498 _25501 _25508) (y : type1475 _25498 _25501 _25508) : (term6 _25498 _25501 _25508 f y) = (f y).
Proof. exact (@lem1104343 (type1475 _25498 _25501 _25508) (type1151 _25498 _25501 _25508) f y). Qed.
Lemma lem1104345 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (@lem1104344 _25498 _25501 _25508 (term4 _25498 _25501 _25508 _18007) f). Qed.
Lemma lem1104346 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (_18004 : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 _18004) = (term8 _25498 _25501 _25508 _18007 _18004).
Proof. exact (eq_refl (term5 _25498 _25501 _25508 _18007 _18004)). Qed.
Lemma lem1104347 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) : (term9 _25498 _25501 _25508 _18007) = (term4 _25498 _25501 _25508 _18007).
Proof. exact (fun_ext (fun _18004 : type1475 _25498 _25501 _25508 => @lem1104346 _25498 _25501 _25508 _18007 _18004)). Qed.
Lemma lem1104348 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104349 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104347 _25498 _25501 _25508 _18007) (@lem1104348 _25498 _25501 _25508 f)). Qed.
Lemma lem1104350 {_25498 _25501 _25508 : Type'} : (@eq ((list _25501) -> (list _25508) -> list _25498)) = (@eq ((list _25501) -> (list _25508) -> list _25498)).
Proof. exact (eq_refl (@eq ((list _25501) -> (list _25508) -> list _25498))). Qed.
Lemma lem1104351 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term10 _25498 _25501 _25508 _18007 f) = (term11 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104350 _25498 _25501 _25508) (@lem1104349 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104352 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (eq_refl (term5 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104353 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : ((term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f)) = ((term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f)).
Proof. exact (MK_COMB (@lem1104351 _25498 _25501 _25508 _18007 f) (@lem1104352 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104354 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (EQ_MP (@lem1104353 _25498 _25501 _25508 _18007 f) (@lem1104345 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104355 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (TRANS (@lem1104341 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104354 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104356 {_25501 : Type'} (h1' : _25501) (t1 : list _25501) : (@cons _25501 h1' t1) = (@cons _25501 h1' t1).
Proof. exact (eq_refl (@cons _25501 h1' t1)). Qed.
Lemma lem1104357 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term39 _25498 _25501 _25508 MAP2' f h1' t1) = (term40 _25498 _25501 _25508 _18007 f h1' t1).
Proof. exact (MK_COMB (@lem1104355 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104356 _25501 h1' t1)). Qed.
Lemma lem1104359 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104360 {_25498 _25501 _25508 : Type'} (f : type1151 _25498 _25501 _25508) (y : list _25501) : (term13 _25498 _25501 _25508 f y) = (f y).
Proof. exact (@lem1104359 (list _25501) (type1154 _25498 _25508) f y). Qed.
Lemma lem1104361 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) : (term41 _25498 _25501 _25508 _18007 f h1' t1) = (term40 _25498 _25501 _25508 _18007 f h1' t1).
Proof. exact (@lem1104360 _25498 _25501 _25508 (term8 _25498 _25501 _25508 _18007 f) (@cons _25501 h1' t1)). Qed.
Lemma lem1104362 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (_18005 : list _25501) (f : type1475 _25498 _25501 _25508) : (term15 _25498 _25501 _25508 _18007 f _18005) = (term16 _25498 _25501 _25508 _18007 _18005 f).
Proof. exact (eq_refl (term15 _25498 _25501 _25508 _18007 f _18005)). Qed.
Lemma lem1104363 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term17 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (fun_ext (fun _18005 : list _25501 => @lem1104362 _25498 _25501 _25508 _18007 _18005 f)). Qed.
Lemma lem1104364 {_25501 : Type'} (h1' : _25501) (t1 : list _25501) : (@cons _25501 h1' t1) = (@cons _25501 h1' t1).
Proof. exact (eq_refl (@cons _25501 h1' t1)). Qed.
Lemma lem1104365 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) : (term41 _25498 _25501 _25508 _18007 f h1' t1) = (term40 _25498 _25501 _25508 _18007 f h1' t1).
Proof. exact (MK_COMB (@lem1104363 _25498 _25501 _25508 _18007 f) (@lem1104364 _25501 h1' t1)). Qed.
Lemma lem1104366 {_25498 _25508 : Type'} : (@eq ((list _25508) -> list _25498)) = (@eq ((list _25508) -> list _25498)).
Proof. exact (eq_refl (@eq ((list _25508) -> list _25498))). Qed.
Lemma lem1104367 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) : (term42 _25498 _25501 _25508 _18007 f h1' t1) = (term43 _25498 _25501 _25508 _18007 f h1' t1).
Proof. exact (MK_COMB (@lem1104366 _25498 _25508) (@lem1104365 _25498 _25501 _25508 _18007 f h1' t1)). Qed.
Lemma lem1104368 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term40 _25498 _25501 _25508 _18007 f h1' t1) = (term44 _25498 _25501 _25508 _18007 h1' t1 f).
Proof. exact (eq_refl (term40 _25498 _25501 _25508 _18007 f h1' t1)). Qed.
Lemma lem1104369 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : ((term41 _25498 _25501 _25508 _18007 f h1' t1) = (term40 _25498 _25501 _25508 _18007 f h1' t1)) = ((term40 _25498 _25501 _25508 _18007 f h1' t1) = (term44 _25498 _25501 _25508 _18007 h1' t1 f)).
Proof. exact (MK_COMB (@lem1104367 _25498 _25501 _25508 _18007 f h1' t1) (@lem1104368 _25498 _25501 _25508 _18007 h1' t1 f)). Qed.
Lemma lem1104370 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term40 _25498 _25501 _25508 _18007 f h1' t1) = (term44 _25498 _25501 _25508 _18007 h1' t1 f).
Proof. exact (EQ_MP (@lem1104369 _25498 _25501 _25508 _18007 h1' t1 f) (@lem1104361 _25498 _25501 _25508 _18007 f h1' t1)). Qed.
Lemma lem1104371 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term39 _25498 _25501 _25508 MAP2' f h1' t1) = (term44 _25498 _25501 _25508 _18007 h1' t1 f).
Proof. exact (TRANS (@lem1104357 _25498 _25501 _25508 f h1' t1 MAP2' _18007 h1) (@lem1104370 _25498 _25501 _25508 _18007 h1' t1 f)). Qed.
Lemma lem1104372 {_25508 : Type'} (l : list _25508) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem1104373 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term45 _25498 _25501 _25508 MAP2' f h1' t1 l) = (term46 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (MK_COMB (@lem1104371 _25498 _25501 _25508 h1' t1 f MAP2' _18007 h1) (@lem1104372 _25508 l)). Qed.
Lemma lem1104375 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104376 {_25498 _25508 : Type'} (f : type1154 _25498 _25508) (y : list _25508) : (term22 _25498 _25508 f y) = (f y).
Proof. exact (@lem1104375 (list _25508) (list _25498) f y). Qed.
Lemma lem1104377 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term47 _25498 _25501 _25508 _18007 h1' t1 f l) = (term46 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (@lem1104376 _25498 _25508 (term44 _25498 _25501 _25508 _18007 h1' t1 f) l). Qed.
Lemma lem1104378 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (_18006 : list _25508) : (term46 _25498 _25501 _25508 _18007 h1' t1 f _18006) = (term48 _25498 _25501 _25508 _18007 h1' t1 f _18006).
Proof. exact (eq_refl (term46 _25498 _25501 _25508 _18007 h1' t1 f _18006)). Qed.
Lemma lem1104379 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term49 _25498 _25501 _25508 _18007 h1' t1 f) = (term44 _25498 _25501 _25508 _18007 h1' t1 f).
Proof. exact (fun_ext (fun _18006 : list _25508 => @lem1104378 _25498 _25501 _25508 _18007 h1' t1 f _18006)). Qed.
Lemma lem1104380 {_25508 : Type'} (l : list _25508) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem1104381 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term47 _25498 _25501 _25508 _18007 h1' t1 f l) = (term46 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (MK_COMB (@lem1104379 _25498 _25501 _25508 _18007 h1' t1 f) (@lem1104380 _25508 l)). Qed.
Lemma lem1104382 {_25498 : Type'} : (@eq (list _25498)) = (@eq (list _25498)).
Proof. exact (eq_refl (@eq (list _25498))). Qed.
Lemma lem1104383 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term50 _25498 _25501 _25508 _18007 h1' t1 f l) = (term51 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (MK_COMB (@lem1104382 _25498) (@lem1104381 _25498 _25501 _25508 _18007 h1' t1 f l)). Qed.
Lemma lem1104384 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term46 _25498 _25501 _25508 _18007 h1' t1 f l) = (term48 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (eq_refl (term46 _25498 _25501 _25508 _18007 h1' t1 f l)). Qed.
Lemma lem1104385 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : ((term47 _25498 _25501 _25508 _18007 h1' t1 f l) = (term46 _25498 _25501 _25508 _18007 h1' t1 f l)) = ((term46 _25498 _25501 _25508 _18007 h1' t1 f l) = (term48 _25498 _25501 _25508 _18007 h1' t1 f l)).
Proof. exact (MK_COMB (@lem1104383 _25498 _25501 _25508 _18007 h1' t1 f l) (@lem1104384 _25498 _25501 _25508 _18007 h1' t1 f l)). Qed.
Lemma lem1104386 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term46 _25498 _25501 _25508 _18007 h1' t1 f l) = (term48 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (EQ_MP (@lem1104385 _25498 _25501 _25508 _18007 h1' t1 f l) (@lem1104377 _25498 _25501 _25508 _18007 h1' t1 f l)). Qed.
Lemma lem1104387 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term45 _25498 _25501 _25508 MAP2' f h1' t1 l) = (term48 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (TRANS (@lem1104373 _25498 _25501 _25508 h1' t1 f l MAP2' _18007 h1) (@lem1104386 _25498 _25501 _25508 _18007 h1' t1 f l)). Qed.
Lemma lem1104388 {_25498 : Type'} : (@eq (list _25498)) = (@eq (list _25498)).
Proof. exact (eq_refl (@eq (list _25498))). Qed.
Lemma lem1104389 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term52 _25498 _25501 _25508 MAP2' f h1' t1 l) = (term53 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (MK_COMB (@lem1104388 _25498) (@lem1104387 _25498 _25501 _25508 h1' t1 f l MAP2' _18007 h1)). Qed.
Lemma lem1104391 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : MAP2' = (term4 _25498 _25501 _25508 _18007).
Proof. exact (h1). Qed.
Lemma lem1104392 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104393 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104391 _25498 _25501 _25508 MAP2' _18007 h1) (@lem1104392 _25498 _25501 _25508 f)). Qed.
Lemma lem1104395 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104396 {_25498 _25501 _25508 : Type'} (f : type763 _25498 _25501 _25508) (y : type1475 _25498 _25501 _25508) : (term6 _25498 _25501 _25508 f y) = (f y).
Proof. exact (@lem1104395 (type1475 _25498 _25501 _25508) (type1151 _25498 _25501 _25508) f y). Qed.
Lemma lem1104397 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (@lem1104396 _25498 _25501 _25508 (term4 _25498 _25501 _25508 _18007) f). Qed.
Lemma lem1104398 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (_18004 : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 _18004) = (term8 _25498 _25501 _25508 _18007 _18004).
Proof. exact (eq_refl (term5 _25498 _25501 _25508 _18007 _18004)). Qed.
Lemma lem1104399 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) : (term9 _25498 _25501 _25508 _18007) = (term4 _25498 _25501 _25508 _18007).
Proof. exact (fun_ext (fun _18004 : type1475 _25498 _25501 _25508 => @lem1104398 _25498 _25501 _25508 _18007 _18004)). Qed.
Lemma lem1104400 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104401 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104399 _25498 _25501 _25508 _18007) (@lem1104400 _25498 _25501 _25508 f)). Qed.
Lemma lem1104402 {_25498 _25501 _25508 : Type'} : (@eq ((list _25501) -> (list _25508) -> list _25498)) = (@eq ((list _25501) -> (list _25508) -> list _25498)).
Proof. exact (eq_refl (@eq ((list _25501) -> (list _25508) -> list _25498))). Qed.
Lemma lem1104403 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term10 _25498 _25501 _25508 _18007 f) = (term11 _25498 _25501 _25508 _18007 f).
Proof. exact (MK_COMB (@lem1104402 _25498 _25501 _25508) (@lem1104401 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104404 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (eq_refl (term5 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104405 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : ((term7 _25498 _25501 _25508 _18007 f) = (term5 _25498 _25501 _25508 _18007 f)) = ((term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f)).
Proof. exact (MK_COMB (@lem1104403 _25498 _25501 _25508 _18007 f) (@lem1104404 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104406 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term5 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (EQ_MP (@lem1104405 _25498 _25501 _25508 _18007 f) (@lem1104397 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104407 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (TRANS (@lem1104393 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104406 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104408 {_25501 : Type'} (t1 : list _25501) : t1 = t1.
Proof. exact (eq_refl t1). Qed.
Lemma lem1104409 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (t1 : list _25501) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f t1) = (term15 _25498 _25501 _25508 _18007 f t1).
Proof. exact (MK_COMB (@lem1104407 _25498 _25501 _25508 f MAP2' _18007 h1) (@lem1104408 _25501 t1)). Qed.
Lemma lem1104411 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104412 {_25498 _25501 _25508 : Type'} (f : type1151 _25498 _25501 _25508) (y : list _25501) : (term13 _25498 _25501 _25508 f y) = (f y).
Proof. exact (@lem1104411 (list _25501) (type1154 _25498 _25508) f y). Qed.
Lemma lem1104413 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (t1 : list _25501) : (term54 _25498 _25501 _25508 _18007 f t1) = (term15 _25498 _25501 _25508 _18007 f t1).
Proof. exact (@lem1104412 _25498 _25501 _25508 (term8 _25498 _25501 _25508 _18007 f) t1). Qed.
Lemma lem1104414 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (_18005 : list _25501) (f : type1475 _25498 _25501 _25508) : (term15 _25498 _25501 _25508 _18007 f _18005) = (term16 _25498 _25501 _25508 _18007 _18005 f).
Proof. exact (eq_refl (term15 _25498 _25501 _25508 _18007 f _18005)). Qed.
Lemma lem1104415 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term17 _25498 _25501 _25508 _18007 f) = (term8 _25498 _25501 _25508 _18007 f).
Proof. exact (fun_ext (fun _18005 : list _25501 => @lem1104414 _25498 _25501 _25508 _18007 _18005 f)). Qed.
Lemma lem1104416 {_25501 : Type'} (t1 : list _25501) : t1 = t1.
Proof. exact (eq_refl t1). Qed.
Lemma lem1104417 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (t1 : list _25501) : (term54 _25498 _25501 _25508 _18007 f t1) = (term15 _25498 _25501 _25508 _18007 f t1).
Proof. exact (MK_COMB (@lem1104415 _25498 _25501 _25508 _18007 f) (@lem1104416 _25501 t1)). Qed.
Lemma lem1104418 {_25498 _25508 : Type'} : (@eq ((list _25508) -> list _25498)) = (@eq ((list _25508) -> list _25498)).
Proof. exact (eq_refl (@eq ((list _25508) -> list _25498))). Qed.
Lemma lem1104419 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (t1 : list _25501) : (term55 _25498 _25501 _25508 _18007 f t1) = (term56 _25498 _25501 _25508 _18007 f t1).
Proof. exact (MK_COMB (@lem1104418 _25498 _25508) (@lem1104417 _25498 _25501 _25508 _18007 f t1)). Qed.
Lemma lem1104420 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term15 _25498 _25501 _25508 _18007 f t1) = (term16 _25498 _25501 _25508 _18007 t1 f).
Proof. exact (eq_refl (term15 _25498 _25501 _25508 _18007 f t1)). Qed.
Lemma lem1104421 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : ((term54 _25498 _25501 _25508 _18007 f t1) = (term15 _25498 _25501 _25508 _18007 f t1)) = ((term15 _25498 _25501 _25508 _18007 f t1) = (term16 _25498 _25501 _25508 _18007 t1 f)).
Proof. exact (MK_COMB (@lem1104419 _25498 _25501 _25508 _18007 f t1) (@lem1104420 _25498 _25501 _25508 _18007 t1 f)). Qed.
Lemma lem1104422 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term15 _25498 _25501 _25508 _18007 f t1) = (term16 _25498 _25501 _25508 _18007 t1 f).
Proof. exact (EQ_MP (@lem1104421 _25498 _25501 _25508 _18007 t1 f) (@lem1104413 _25498 _25501 _25508 _18007 f t1)). Qed.
Lemma lem1104423 {_25498 _25501 _25508 : Type'} (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (MAP2' f t1) = (term16 _25498 _25501 _25508 _18007 t1 f).
Proof. exact (TRANS (@lem1104409 _25498 _25501 _25508 f t1 MAP2' _18007 h1) (@lem1104422 _25498 _25501 _25508 _18007 t1 f)). Qed.
Lemma lem1104424 {_25508 : Type'} (l : list _25508) : (@tl _25508 l) = (@tl _25508 l).
Proof. exact (eq_refl (@tl _25508 l)). Qed.
Lemma lem1104425 {_25498 _25501 _25508 : Type'} (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term57 _25498 _25501 _25508 MAP2' f t1 l) = (term58 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (MK_COMB (@lem1104423 _25498 _25501 _25508 t1 f MAP2' _18007 h1) (@lem1104424 _25508 l)). Qed.
Lemma lem1104427 {A B : Type'} (f : A -> B) (y : A) : (term3 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1104274 A B f y) (@lem1104273 A B f y)). Qed.
Lemma lem1104428 {_25498 _25508 : Type'} (f : type1154 _25498 _25508) (y : list _25508) : (term22 _25498 _25508 f y) = (f y).
Proof. exact (@lem1104427 (list _25508) (list _25498) f y). Qed.
Lemma lem1104429 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term59 _25498 _25501 _25508 _18007 t1 f l) = (term58 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (@lem1104428 _25498 _25508 (term16 _25498 _25501 _25508 _18007 t1 f) (@tl _25508 l)). Qed.
Lemma lem1104430 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (_18006 : list _25508) : (term60 _25498 _25501 _25508 _18007 t1 f _18006) = (_18007 t1 f _18006).
Proof. exact (eq_refl (term60 _25498 _25501 _25508 _18007 t1 f _18006)). Qed.
Lemma lem1104431 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term61 _25498 _25501 _25508 _18007 t1 f) = (term16 _25498 _25501 _25508 _18007 t1 f).
Proof. exact (fun_ext (fun _18006 : list _25508 => @lem1104430 _25498 _25501 _25508 _18007 t1 f _18006)). Qed.
Lemma lem1104432 {_25508 : Type'} (l : list _25508) : (@tl _25508 l) = (@tl _25508 l).
Proof. exact (eq_refl (@tl _25508 l)). Qed.
Lemma lem1104433 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term59 _25498 _25501 _25508 _18007 t1 f l) = (term58 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (MK_COMB (@lem1104431 _25498 _25501 _25508 _18007 t1 f) (@lem1104432 _25508 l)). Qed.
Lemma lem1104434 {_25498 : Type'} : (@eq (list _25498)) = (@eq (list _25498)).
Proof. exact (eq_refl (@eq (list _25498))). Qed.
Lemma lem1104435 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term62 _25498 _25501 _25508 _18007 t1 f l) = (term63 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (MK_COMB (@lem1104434 _25498) (@lem1104433 _25498 _25501 _25508 _18007 t1 f l)). Qed.
Lemma lem1104436 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term58 _25498 _25501 _25508 _18007 t1 f l) = (term64 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (eq_refl (term58 _25498 _25501 _25508 _18007 t1 f l)). Qed.
Lemma lem1104437 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : ((term59 _25498 _25501 _25508 _18007 t1 f l) = (term58 _25498 _25501 _25508 _18007 t1 f l)) = ((term58 _25498 _25501 _25508 _18007 t1 f l) = (term64 _25498 _25501 _25508 _18007 t1 f l)).
Proof. exact (MK_COMB (@lem1104435 _25498 _25501 _25508 _18007 t1 f l) (@lem1104436 _25498 _25501 _25508 _18007 t1 f l)). Qed.
Lemma lem1104438 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term58 _25498 _25501 _25508 _18007 t1 f l) = (term64 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (EQ_MP (@lem1104437 _25498 _25501 _25508 _18007 t1 f l) (@lem1104429 _25498 _25501 _25508 _18007 t1 f l)). Qed.
Lemma lem1104439 {_25498 _25501 _25508 : Type'} (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term57 _25498 _25501 _25508 MAP2' f t1 l) = (term64 _25498 _25501 _25508 _18007 t1 f l).
Proof. exact (TRANS (@lem1104425 _25498 _25501 _25508 t1 f l MAP2' _18007 h1) (@lem1104438 _25498 _25501 _25508 _18007 t1 f l)). Qed.
Lemma lem1104440 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (h1' : _25501) (l : list _25508) : (term65 _25498 _25501 _25508 f h1' l) = (term65 _25498 _25501 _25508 f h1' l).
Proof. exact (eq_refl (term65 _25498 _25501 _25508 f h1' l)). Qed.
Lemma lem1104441 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term66 _25498 _25501 _25508 h1' MAP2' f t1 l) = (term67 _25498 _25501 _25508 h1' _18007 t1 f l).
Proof. exact (MK_COMB (@lem1104440 _25498 _25501 _25508 f h1' l) (@lem1104439 _25498 _25501 _25508 t1 f l MAP2' _18007 h1)). Qed.
Lemma lem1104442 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : ((term45 _25498 _25501 _25508 MAP2' f h1' t1 l) = (term66 _25498 _25501 _25508 h1' MAP2' f t1 l)) = ((term48 _25498 _25501 _25508 _18007 h1' t1 f l) = (term67 _25498 _25501 _25508 h1' _18007 t1 f l)).
Proof. exact (MK_COMB (@lem1104389 _25498 _25501 _25508 h1' t1 f l MAP2' _18007 h1) (@lem1104441 _25498 _25501 _25508 h1' t1 f l MAP2' _18007 h1)). Qed.
Lemma lem1104443 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term68 _25498 _25501 _25508 h1' MAP2' f t1) = (term69 _25498 _25501 _25508 h1' _18007 t1 f).
Proof. exact (fun_ext (fun l : list _25508 => @lem1104442 _25498 _25501 _25508 h1' t1 f l MAP2' _18007 h1)). Qed.
Lemma lem1104444 {_25508 : Type'} : (@all (list _25508)) = (@all (list _25508)).
Proof. exact (eq_refl (@all (list _25508))). Qed.
Lemma lem1104445 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term70 _25498 _25501 _25508 h1' MAP2' f t1) = (term71 _25498 _25501 _25508 h1' _18007 t1 f).
Proof. exact (MK_COMB (@lem1104444 _25508) (@lem1104443 _25498 _25501 _25508 h1' t1 f MAP2' _18007 h1)). Qed.
Lemma lem1104446 {_25498 _25501 _25508 : Type'} (h1' : _25501) (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term72 _25498 _25501 _25508 h1' MAP2' f) = (term73 _25498 _25501 _25508 h1' _18007 f).
Proof. exact (fun_ext (fun t1 : list _25501 => @lem1104445 _25498 _25501 _25508 h1' t1 f MAP2' _18007 h1)). Qed.
Lemma lem1104447 {_25501 : Type'} : (@all (list _25501)) = (@all (list _25501)).
Proof. exact (eq_refl (@all (list _25501))). Qed.
Lemma lem1104448 {_25498 _25501 _25508 : Type'} (h1' : _25501) (f : type1475 _25498 _25501 _25508) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term74 _25498 _25501 _25508 h1' MAP2' f) = (term75 _25498 _25501 _25508 h1' _18007 f).
Proof. exact (MK_COMB (@lem1104447 _25501) (@lem1104446 _25498 _25501 _25508 h1' f MAP2' _18007 h1)). Qed.
Lemma lem1104449 {_25498 _25501 _25508 : Type'} (h1' : _25501) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term76 _25498 _25501 _25508 h1' MAP2') = (term77 _25498 _25501 _25508 h1' _18007).
Proof. exact (fun_ext (fun f : type1475 _25498 _25501 _25508 => @lem1104448 _25498 _25501 _25508 h1' f MAP2' _18007 h1)). Qed.
Lemma lem1104450 {_25498 _25501 _25508 : Type'} : (@all (_25501 -> _25508 -> _25498)) = (@all (_25501 -> _25508 -> _25498)).
Proof. exact (eq_refl (@all (_25501 -> _25508 -> _25498))). Qed.
Lemma lem1104451 {_25498 _25501 _25508 : Type'} (h1' : _25501) (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term78 _25498 _25501 _25508 h1' MAP2') = (term79 _25498 _25501 _25508 h1' _18007).
Proof. exact (MK_COMB (@lem1104450 _25498 _25501 _25508) (@lem1104449 _25498 _25501 _25508 h1' MAP2' _18007 h1)). Qed.
Lemma lem1104452 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term80 _25498 _25501 _25508 MAP2') = (term81 _25498 _25501 _25508 _18007).
Proof. exact (fun_ext (fun h1' : _25501 => @lem1104451 _25498 _25501 _25508 h1' MAP2' _18007 h1)). Qed.
Lemma lem1104453 {_25501 : Type'} : (@all _25501) = (@all _25501).
Proof. exact (eq_refl (@all _25501)). Qed.
Lemma lem1104454 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term82 _25498 _25501 _25508 MAP2') = (term83 _25498 _25501 _25508 _18007).
Proof. exact (MK_COMB (@lem1104453 _25501) (@lem1104452 _25498 _25501 _25508 MAP2' _18007 h1)). Qed.
Lemma lem1104455 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term84 _25498 _25501 _25508 MAP2') = (term85 _25498 _25501 _25508 _18007).
Proof. exact (MK_COMB (@lem1104337 _25498 _25501 _25508 MAP2' _18007 h1) (@lem1104454 _25498 _25501 _25508 MAP2' _18007 h1)). Qed.
Lemma lem1104456 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508).
Proof. exact (h1). Qed.
Lemma lem1104457 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104458 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : (_18007 (@nil _25501) f) = (term87 _25498 _25501 _25508 f).
Proof. exact (MK_COMB (@lem1104456 _25498 _25501 _25508 _18007 h1) (@lem1104457 _25498 _25501 _25508 f)). Qed.
Lemma lem1104459 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : (term87 _25498 _25501 _25508 f) = (term88 _25498 _25508).
Proof. exact (eq_refl (term87 _25498 _25501 _25508 f)). Qed.
Lemma lem1104460 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : (term89 _25498 _25501 _25508 _18007 f) = (term89 _25498 _25501 _25508 _18007 f).
Proof. exact (eq_refl (term89 _25498 _25501 _25508 _18007 f)). Qed.
Lemma lem1104461 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) : ((_18007 (@nil _25501) f) = (term87 _25498 _25501 _25508 f)) = ((_18007 (@nil _25501) f) = (term88 _25498 _25508)).
Proof. exact (MK_COMB (@lem1104460 _25498 _25501 _25508 _18007 f) (@lem1104459 _25498 _25501 _25508 f)). Qed.
Lemma lem1104462 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : (_18007 (@nil _25501) f) = (term88 _25498 _25508).
Proof. exact (EQ_MP (@lem1104461 _25498 _25501 _25508 _18007 f) (@lem1104458 _25498 _25501 _25508 f _18007 h1)). Qed.
Lemma lem1104463 {_25508 : Type'} (l : list _25508) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem1104464 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (l : list _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : (_18007 (@nil _25501) f l) = (term90 _25498 _25508 l).
Proof. exact (MK_COMB (@lem1104462 _25498 _25501 _25508 f _18007 h1) (@lem1104463 _25508 l)). Qed.
Lemma lem1104465 {_25498 _25508 : Type'} (l : list _25508) : (term90 _25498 _25508 l) = (@nil _25498).
Proof. exact (eq_refl (term90 _25498 _25508 l)). Qed.
Lemma lem1104466 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term28 _25498 _25501 _25508 _18007 f l) = (term28 _25498 _25501 _25508 _18007 f l).
Proof. exact (eq_refl (term28 _25498 _25501 _25508 _18007 f l)). Qed.
Lemma lem1104467 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (f : type1475 _25498 _25501 _25508) (l : list _25508) : ((_18007 (@nil _25501) f l) = (term90 _25498 _25508 l)) = ((_18007 (@nil _25501) f l) = (@nil _25498)).
Proof. exact (MK_COMB (@lem1104466 _25498 _25501 _25508 _18007 f l) (@lem1104465 _25498 _25508 l)). Qed.
Lemma lem1104468 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (l : list _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : (_18007 (@nil _25501) f l) = (@nil _25498).
Proof. exact (EQ_MP (@lem1104467 _25498 _25501 _25508 _18007 f l) (@lem1104464 _25498 _25501 _25508 f l _18007 h1)). Qed.
Lemma lem1104469 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : term32 _25498 _25501 _25508 _18007 f.
Proof. exact (fun l : list _25508 => @lem1104468 _25498 _25501 _25508 f l _18007 h1). Qed.
Lemma lem1104470 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) : term36 _25498 _25501 _25508 _18007.
Proof. exact (fun f : type1475 _25498 _25501 _25508 => @lem1104469 _25498 _25501 _25508 f _18007 h1). Qed.
Lemma lem1104471 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term91 _25498 _25501 _25508 _18007.
Proof. exact (h1). Qed.
Lemma lem1104472 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term92 _25498 _25501 _25508 _18007 h1'.
Proof. exact (@lem1104471 _25498 _25501 _25508 _18007 h1 h1'). Qed.
Lemma lem1104473 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) : (term92 _25498 _25501 _25508 _18007 h1') = (term93 _25498 _25501 _25508 h1' _18007).
Proof. exact (eq_refl (term92 _25498 _25501 _25508 _18007 h1')). Qed.
Lemma lem1104474 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term93 _25498 _25501 _25508 h1' _18007.
Proof. exact (EQ_MP (@lem1104473 _25498 _25501 _25508 h1' _18007) (@lem1104472 _25498 _25501 _25508 h1' _18007 h1)). Qed.
Lemma lem1104475 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term94 _25498 _25501 _25508 h1' _18007 t1.
Proof. exact (@lem1104474 _25498 _25501 _25508 h1' _18007 h1 t1). Qed.
Lemma lem1104476 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) : (term94 _25498 _25501 _25508 h1' _18007 t1) = ((term95 _25498 _25501 _25508 _18007 h1' t1) = (term96 _25498 _25501 _25508 h1' _18007 t1)).
Proof. exact (eq_refl (term94 _25498 _25501 _25508 h1' _18007 t1)). Qed.
Lemma lem1104477 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : (term95 _25498 _25501 _25508 _18007 h1' t1) = (term96 _25498 _25501 _25508 h1' _18007 t1).
Proof. exact (EQ_MP (@lem1104476 _25498 _25501 _25508 h1' _18007 t1) (@lem1104475 _25498 _25501 _25508 h1' t1 _18007 h1)). Qed.
Lemma lem1104478 {_25498 _25501 _25508 : Type'} (f : type1475 _25498 _25501 _25508) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem1104479 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : (term97 _25498 _25501 _25508 _18007 h1' t1 f) = (term98 _25498 _25501 _25508 h1' _18007 t1 f).
Proof. exact (MK_COMB (@lem1104477 _25498 _25501 _25508 h1' t1 _18007 h1) (@lem1104478 _25498 _25501 _25508 f)). Qed.
Lemma lem1104480 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term98 _25498 _25501 _25508 h1' _18007 t1 f) = (term99 _25498 _25501 _25508 h1' _18007 t1 f).
Proof. exact (eq_refl (term98 _25498 _25501 _25508 h1' _18007 t1 f)). Qed.
Lemma lem1104481 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : (term100 _25498 _25501 _25508 _18007 h1' t1 f) = (term100 _25498 _25501 _25508 _18007 h1' t1 f).
Proof. exact (eq_refl (term100 _25498 _25501 _25508 _18007 h1' t1 f)). Qed.
Lemma lem1104482 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) : ((term97 _25498 _25501 _25508 _18007 h1' t1 f) = (term98 _25498 _25501 _25508 h1' _18007 t1 f)) = ((term97 _25498 _25501 _25508 _18007 h1' t1 f) = (term99 _25498 _25501 _25508 h1' _18007 t1 f)).
Proof. exact (MK_COMB (@lem1104481 _25498 _25501 _25508 _18007 h1' t1 f) (@lem1104480 _25498 _25501 _25508 h1' _18007 t1 f)). Qed.
Lemma lem1104483 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : (term97 _25498 _25501 _25508 _18007 h1' t1 f) = (term99 _25498 _25501 _25508 h1' _18007 t1 f).
Proof. exact (EQ_MP (@lem1104482 _25498 _25501 _25508 h1' _18007 t1 f) (@lem1104479 _25498 _25501 _25508 h1' t1 f _18007 h1)). Qed.
Lemma lem1104484 {_25508 : Type'} (l : list _25508) : l = l.
Proof. exact (eq_refl l). Qed.
Lemma lem1104485 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : (term48 _25498 _25501 _25508 _18007 h1' t1 f l) = (term101 _25498 _25501 _25508 h1' _18007 t1 f l).
Proof. exact (MK_COMB (@lem1104483 _25498 _25501 _25508 h1' t1 f _18007 h1) (@lem1104484 _25508 l)). Qed.
Lemma lem1104486 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term101 _25498 _25501 _25508 h1' _18007 t1 f l) = (term67 _25498 _25501 _25508 h1' _18007 t1 f l).
Proof. exact (eq_refl (term101 _25498 _25501 _25508 h1' _18007 t1 f l)). Qed.
Lemma lem1104487 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : (term53 _25498 _25501 _25508 _18007 h1' t1 f l) = (term53 _25498 _25501 _25508 _18007 h1' t1 f l).
Proof. exact (eq_refl (term53 _25498 _25501 _25508 _18007 h1' t1 f l)). Qed.
Lemma lem1104488 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) : ((term48 _25498 _25501 _25508 _18007 h1' t1 f l) = (term101 _25498 _25501 _25508 h1' _18007 t1 f l)) = ((term48 _25498 _25501 _25508 _18007 h1' t1 f l) = (term67 _25498 _25501 _25508 h1' _18007 t1 f l)).
Proof. exact (MK_COMB (@lem1104487 _25498 _25501 _25508 _18007 h1' t1 f l) (@lem1104486 _25498 _25501 _25508 h1' _18007 t1 f l)). Qed.
Lemma lem1104489 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (l : list _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : (term48 _25498 _25501 _25508 _18007 h1' t1 f l) = (term67 _25498 _25501 _25508 h1' _18007 t1 f l).
Proof. exact (EQ_MP (@lem1104488 _25498 _25501 _25508 h1' _18007 t1 f l) (@lem1104485 _25498 _25501 _25508 h1' t1 f l _18007 h1)). Qed.
Lemma lem1104490 {_25498 _25501 _25508 : Type'} (h1' : _25501) (t1 : list _25501) (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term71 _25498 _25501 _25508 h1' _18007 t1 f.
Proof. exact (fun l : list _25508 => @lem1104489 _25498 _25501 _25508 h1' t1 f l _18007 h1). Qed.
Lemma lem1104491 {_25498 _25501 _25508 : Type'} (h1' : _25501) (f : type1475 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term75 _25498 _25501 _25508 h1' _18007 f.
Proof. exact (fun t1 : list _25501 => @lem1104490 _25498 _25501 _25508 h1' t1 f _18007 h1). Qed.
Lemma lem1104492 {_25498 _25501 _25508 : Type'} (h1' : _25501) (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term79 _25498 _25501 _25508 h1' _18007.
Proof. exact (fun f : type1475 _25498 _25501 _25508 => @lem1104491 _25498 _25501 _25508 h1' f _18007 h1). Qed.
Lemma lem1104493 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term91 _25498 _25501 _25508 _18007) : term83 _25498 _25501 _25508 _18007.
Proof. exact (fun h1' : _25501 => @lem1104492 _25498 _25501 _25508 h1' _18007 h1). Qed.
Lemma lem1104494 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term102 _25498 _25501 _25508 _18007.
Proof. exact (h1). Qed.
Lemma lem1104495 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term91 _25498 _25501 _25508 _18007.
Proof. exact (proj2 (@lem1104494 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104496 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508).
Proof. exact (proj1 (@lem1104494 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104497 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : ((_18007 (@nil _25501)) = (term86 _25498 _25501 _25508)) = (term36 _25498 _25501 _25508 _18007).
Proof. exact (prop_ext (fun h2 : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508) => @lem1104470 _25498 _25501 _25508 _18007 h2) (fun h2 : term36 _25498 _25501 _25508 _18007 => @lem1104496 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104498 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term36 _25498 _25501 _25508 _18007.
Proof. exact (EQ_MP (@lem1104497 _25498 _25501 _25508 _18007 h1) (@lem1104496 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104499 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : (term91 _25498 _25501 _25508 _18007) = (term83 _25498 _25501 _25508 _18007).
Proof. exact (prop_ext (fun h2 : term91 _25498 _25501 _25508 _18007 => @lem1104493 _25498 _25501 _25508 _18007 h2) (fun h2 : term83 _25498 _25501 _25508 _18007 => @lem1104495 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104500 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term83 _25498 _25501 _25508 _18007.
Proof. exact (EQ_MP (@lem1104499 _25498 _25501 _25508 _18007 h1) (@lem1104495 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104501 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term85 _25498 _25501 _25508 _18007.
Proof. exact (conj (@lem1104498 _25498 _25501 _25508 _18007 h1) (@lem1104500 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104502 {A Z : Type'} (NIL' : Z) : term103 A Z NIL'.
Proof. exact (@lem1072128 A Z NIL'). Qed.
Lemma lem1104503 {A Z : Type'} (NIL' : Z) : (term103 A Z NIL') = (term104 A Z NIL').
Proof. exact (eq_refl (term103 A Z NIL')). Qed.
Lemma lem1104504 {A Z : Type'} (NIL' : Z) : term104 A Z NIL'.
Proof. exact (EQ_MP (@lem1104503 A Z NIL') (@lem1104502 A Z NIL')). Qed.
Lemma lem1104505 {A Z : Type'} (NIL' : Z) (CONS' : type1394 A Z) : term105 A Z NIL' CONS'.
Proof. exact (@lem1104504 A Z NIL' CONS'). Qed.
Lemma lem1104506 {A Z : Type'} (NIL' : Z) (CONS' : type1394 A Z) : (term105 A Z NIL' CONS') = (term106 A Z NIL' CONS').
Proof. exact (eq_refl (term105 A Z NIL' CONS')). Qed.
Lemma lem1104507 {A Z : Type'} (NIL' : Z) (CONS' : type1394 A Z) : term106 A Z NIL' CONS'.
Proof. exact (EQ_MP (@lem1104506 A Z NIL' CONS') (@lem1104505 A Z NIL' CONS')). Qed.
Lemma lem1104508 {_25498 _25501 _25508 : Type'} (NIL' : type764 _25498 _25501 _25508) (CONS' : type1461 _25498 _25501 _25508) : term107 _25498 _25501 _25508 NIL' CONS'.
Proof. exact (@lem1104507 _25501 (type764 _25498 _25501 _25508) NIL' CONS'). Qed.
Lemma lem1104509 {_25498 _25501 _25508 : Type'} : term108 _25498 _25501 _25508.
Proof. exact (@lem1104508 _25498 _25501 _25508 (term86 _25498 _25501 _25508) (term109 _25498 _25501 _25508)). Qed.
Lemma lem1104510 {_25498 _25501 _25508 : Type'} (a0 : _25501) : (term110 _25498 _25501 _25508 a0) = (term111 _25498 _25501 _25508 a0).
Proof. exact (eq_refl (term110 _25498 _25501 _25508 a0)). Qed.
Lemma lem1104511 {_25501 : Type'} (a1 : list _25501) : a1 = a1.
Proof. exact (eq_refl a1). Qed.
Lemma lem1104512 {_25498 _25501 _25508 : Type'} (a0 : _25501) (a1 : list _25501) : (term112 _25498 _25501 _25508 a0 a1) = (term113 _25498 _25501 _25508 a0 a1).
Proof. exact (MK_COMB (@lem1104510 _25498 _25501 _25508 a0) (@lem1104511 _25501 a1)). Qed.
Lemma lem1104513 {_25498 _25501 _25508 : Type'} (a1 : list _25501) (a0 : _25501) : (term113 _25498 _25501 _25508 a0 a1) = (term114 _25498 _25501 _25508 a0).
Proof. exact (eq_refl (term113 _25498 _25501 _25508 a0 a1)). Qed.
Lemma lem1104514 {_25498 _25501 _25508 : Type'} (a1 : list _25501) (a0 : _25501) : (term112 _25498 _25501 _25508 a0 a1) = (term114 _25498 _25501 _25508 a0).
Proof. exact (TRANS (@lem1104512 _25498 _25501 _25508 a0 a1) (@lem1104513 _25498 _25501 _25508 a1 a0)). Qed.
Lemma lem1104515 {_25498 _25501 _25508 : Type'} (fn : type1148 _25498 _25501 _25508) (a1 : list _25501) : (fn a1) = (fn a1).
Proof. exact (eq_refl (fn a1)). Qed.
Lemma lem1104516 {_25498 _25501 _25508 : Type'} (a0 : _25501) (fn : type1148 _25498 _25501 _25508) (a1 : list _25501) : (term115 _25498 _25501 _25508 a0 fn a1) = (term116 _25498 _25501 _25508 a0 fn a1).
Proof. exact (MK_COMB (@lem1104514 _25498 _25501 _25508 a1 a0) (@lem1104515 _25498 _25501 _25508 fn a1)). Qed.
Lemma lem1104517 {_25498 _25501 _25508 : Type'} (a0 : _25501) (fn : type1148 _25498 _25501 _25508) (a1 : list _25501) : (term116 _25498 _25501 _25508 a0 fn a1) = (term96 _25498 _25501 _25508 a0 fn a1).
Proof. exact (eq_refl (term116 _25498 _25501 _25508 a0 fn a1)). Qed.
Lemma lem1104518 {_25498 _25501 _25508 : Type'} (a0 : _25501) (fn : type1148 _25498 _25501 _25508) (a1 : list _25501) : (term115 _25498 _25501 _25508 a0 fn a1) = (term96 _25498 _25501 _25508 a0 fn a1).
Proof. exact (TRANS (@lem1104516 _25498 _25501 _25508 a0 fn a1) (@lem1104517 _25498 _25501 _25508 a0 fn a1)). Qed.
Lemma lem1104519 {_25498 _25501 _25508 : Type'} (fn : type1148 _25498 _25501 _25508) (a0 : _25501) (a1 : list _25501) : (term117 _25498 _25501 _25508 fn a0 a1) = (term117 _25498 _25501 _25508 fn a0 a1).
Proof. exact (eq_refl (term117 _25498 _25501 _25508 fn a0 a1)). Qed.
Lemma lem1104520 {_25498 _25501 _25508 : Type'} (a0 : _25501) (fn : type1148 _25498 _25501 _25508) (a1 : list _25501) : ((term95 _25498 _25501 _25508 fn a0 a1) = (term115 _25498 _25501 _25508 a0 fn a1)) = ((term95 _25498 _25501 _25508 fn a0 a1) = (term96 _25498 _25501 _25508 a0 fn a1)).
Proof. exact (MK_COMB (@lem1104519 _25498 _25501 _25508 fn a0 a1) (@lem1104518 _25498 _25501 _25508 a0 fn a1)). Qed.
Lemma lem1104521 {_25498 _25501 _25508 : Type'} (a0 : _25501) (fn : type1148 _25498 _25501 _25508) : (term118 _25498 _25501 _25508 a0 fn) = (term119 _25498 _25501 _25508 a0 fn).
Proof. exact (fun_ext (fun a1 : list _25501 => @lem1104520 _25498 _25501 _25508 a0 fn a1)). Qed.
Lemma lem1104522 {_25501 : Type'} : (@all (list _25501)) = (@all (list _25501)).
Proof. exact (eq_refl (@all (list _25501))). Qed.
Lemma lem1104523 {_25498 _25501 _25508 : Type'} (a0 : _25501) (fn : type1148 _25498 _25501 _25508) : (term120 _25498 _25501 _25508 a0 fn) = (term93 _25498 _25501 _25508 a0 fn).
Proof. exact (MK_COMB (@lem1104522 _25501) (@lem1104521 _25498 _25501 _25508 a0 fn)). Qed.
Lemma lem1104524 {_25498 _25501 _25508 : Type'} (fn : type1148 _25498 _25501 _25508) : (term121 _25498 _25501 _25508 fn) = (term122 _25498 _25501 _25508 fn).
Proof. exact (fun_ext (fun a0 : _25501 => @lem1104523 _25498 _25501 _25508 a0 fn)). Qed.
Lemma lem1104525 {_25501 : Type'} : (@all _25501) = (@all _25501).
Proof. exact (eq_refl (@all _25501)). Qed.
Lemma lem1104526 {_25498 _25501 _25508 : Type'} (fn : type1148 _25498 _25501 _25508) : (term123 _25498 _25501 _25508 fn) = (term91 _25498 _25501 _25508 fn).
Proof. exact (MK_COMB (@lem1104525 _25501) (@lem1104524 _25498 _25501 _25508 fn)). Qed.
Lemma lem1104527 {_25498 _25501 _25508 : Type'} (fn : type1148 _25498 _25501 _25508) : (term124 _25498 _25501 _25508 fn) = (term124 _25498 _25501 _25508 fn).
Proof. exact (eq_refl (term124 _25498 _25501 _25508 fn)). Qed.
Lemma lem1104528 {_25498 _25501 _25508 : Type'} (fn : type1148 _25498 _25501 _25508) : (term125 _25498 _25501 _25508 fn) = (term102 _25498 _25501 _25508 fn).
Proof. exact (MK_COMB (@lem1104527 _25498 _25501 _25508 fn) (@lem1104526 _25498 _25501 _25508 fn)). Qed.
Lemma lem1104529 {_25498 _25501 _25508 : Type'} : (term126 _25498 _25501 _25508) = (term127 _25498 _25501 _25508).
Proof. exact (fun_ext (fun fn : type1148 _25498 _25501 _25508 => @lem1104528 _25498 _25501 _25508 fn)). Qed.
Lemma lem1104530 {_25498 _25501 _25508 : Type'} : (@ex ((list _25501) -> (_25501 -> _25508 -> _25498) -> (list _25508) -> list _25498)) = (@ex ((list _25501) -> (_25501 -> _25508 -> _25498) -> (list _25508) -> list _25498)).
Proof. exact (eq_refl (@ex ((list _25501) -> (_25501 -> _25508 -> _25498) -> (list _25508) -> list _25498))). Qed.
Lemma lem1104531 {_25498 _25501 _25508 : Type'} : (term108 _25498 _25501 _25508) = (term128 _25498 _25501 _25508).
Proof. exact (MK_COMB (@lem1104530 _25498 _25501 _25508) (@lem1104529 _25498 _25501 _25508)). Qed.
Lemma lem1104532 {_25498 _25501 _25508 : Type'} : term128 _25498 _25501 _25508.
Proof. exact (EQ_MP (@lem1104531 _25498 _25501 _25508) (@lem1104509 _25498 _25501 _25508)). Qed.
Lemma lem1104533 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term102 _25498 _25501 _25508 _18007.
Proof. exact (h1). Qed.
Lemma lem1104534 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term91 _25498 _25501 _25508 _18007.
Proof. exact (proj2 (@lem1104533 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104535 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : (_18007 (@nil _25501)) = (term86 _25498 _25501 _25508).
Proof. exact (proj1 (@lem1104533 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104536 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term102 _25498 _25501 _25508 _18007.
Proof. exact (conj (@lem1104535 _25498 _25501 _25508 _18007 h1) (@lem1104534 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104537 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term128 _25498 _25501 _25508.
Proof. exact (ex_intro (term127 _25498 _25501 _25508) _18007 (@lem1104536 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104538 {_25498 _25501 _25508 : Type'} (h1 : term128 _25498 _25501 _25508) : term128 _25498 _25501 _25508.
Proof. exact (h1). Qed.
Lemma lem1104539 {_25498 _25501 _25508 : Type'} (h1 : term128 _25498 _25501 _25508) : term128 _25498 _25501 _25508.
Proof. exact (ex_elim (@lem1104538 _25498 _25501 _25508 h1) (fun _18007 : type1148 _25498 _25501 _25508 => fun h0 : term127 _25498 _25501 _25508 _18007 => @lem1104537 _25498 _25501 _25508 _18007 h0)). Qed.
Lemma lem1104540 {_25498 _25501 _25508 : Type'} : (term128 _25498 _25501 _25508) = (term128 _25498 _25501 _25508).
Proof. exact (prop_ext (fun h1 : term128 _25498 _25501 _25508 => @lem1104539 _25498 _25501 _25508 h1) (fun h1 : term128 _25498 _25501 _25508 => @lem1104532 _25498 _25501 _25508)). Qed.
Lemma lem1104541 {_25498 _25501 _25508 : Type'} : term128 _25498 _25501 _25508.
Proof. exact (EQ_MP (@lem1104540 _25498 _25501 _25508) (@lem1104532 _25498 _25501 _25508)). Qed.
Lemma lem1104542 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term102 _25498 _25501 _25508 _18007) : term129 _25498 _25501 _25508.
Proof. exact (ex_intro (term130 _25498 _25501 _25508) _18007 (@lem1104501 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104543 {_25498 _25501 _25508 : Type'} (h1 : term128 _25498 _25501 _25508) : term128 _25498 _25501 _25508.
Proof. exact (h1). Qed.
Lemma lem1104544 {_25498 _25501 _25508 : Type'} (h1 : term128 _25498 _25501 _25508) : term129 _25498 _25501 _25508.
Proof. exact (ex_elim (@lem1104543 _25498 _25501 _25508 h1) (fun _18007 : type1148 _25498 _25501 _25508 => fun h0 : term127 _25498 _25501 _25508 _18007 => @lem1104542 _25498 _25501 _25508 _18007 h0)). Qed.
Lemma lem1104545 {_25498 _25501 _25508 : Type'} : (term128 _25498 _25501 _25508) = (term129 _25498 _25501 _25508).
Proof. exact (prop_ext (fun h1 : term128 _25498 _25501 _25508 => @lem1104544 _25498 _25501 _25508 h1) (fun h1 : term129 _25498 _25501 _25508 => @lem1104541 _25498 _25501 _25508)). Qed.
Lemma lem1104546 {_25498 _25501 _25508 : Type'} : term129 _25498 _25501 _25508.
Proof. exact (EQ_MP (@lem1104545 _25498 _25501 _25508) (@lem1104541 _25498 _25501 _25508)). Qed.
Lemma lem1104547 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term85 _25498 _25501 _25508 _18007) : term85 _25498 _25501 _25508 _18007.
Proof. exact (h1). Qed.
Lemma lem1104548 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : (term85 _25498 _25501 _25508 _18007) = (term84 _25498 _25501 _25508 MAP2').
Proof. exact (SYM (@lem1104455 _25498 _25501 _25508 MAP2' _18007 h1)). Qed.
Lemma lem1104549 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term85 _25498 _25501 _25508 _18007) (h2 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : term84 _25498 _25501 _25508 MAP2'.
Proof. exact (EQ_MP (@lem1104548 _25498 _25501 _25508 MAP2' _18007 h2) (@lem1104547 _25498 _25501 _25508 _18007 h1)). Qed.
Lemma lem1104550 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term85 _25498 _25501 _25508 _18007) (h2 : MAP2' = (term4 _25498 _25501 _25508 _18007)) : term131 _25498 _25501 _25508.
Proof. exact (ex_intro (term132 _25498 _25501 _25508) MAP2' (@lem1104549 _25498 _25501 _25508 MAP2' _18007 h1 h2)). Qed.
Lemma lem1104551 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) : (term4 _25498 _25501 _25508 _18007) = (term4 _25498 _25501 _25508 _18007).
Proof. exact (eq_refl (term4 _25498 _25501 _25508 _18007)). Qed.
Lemma lem1104552 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) (_18007 : type1148 _25498 _25501 _25508) (h1 : term85 _25498 _25501 _25508 _18007) : term133 _25498 _25501 _25508 MAP2' _18007.
Proof. exact (fun h0 : MAP2' = (term4 _25498 _25501 _25508 _18007) => @lem1104550 _25498 _25501 _25508 MAP2' _18007 h1 h0). Qed.
Lemma lem1104553 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term85 _25498 _25501 _25508 _18007) : term134 _25498 _25501 _25508 _18007.
Proof. exact (@lem1104552 _25498 _25501 _25508 (term4 _25498 _25501 _25508 _18007) _18007 h1). Qed.
Lemma lem1104554 {_25498 _25501 _25508 : Type'} (_18007 : type1148 _25498 _25501 _25508) (h1 : term85 _25498 _25501 _25508 _18007) : term131 _25498 _25501 _25508.
Proof. exact (@lem1104553 _25498 _25501 _25508 _18007 h1 (@lem1104551 _25498 _25501 _25508 _18007)). Qed.
Lemma lem1104555 {_25498 _25501 _25508 : Type'} (h1 : term129 _25498 _25501 _25508) : term129 _25498 _25501 _25508.
Proof. exact (h1). Qed.
Lemma lem1104556 {_25498 _25501 _25508 : Type'} (h1 : term129 _25498 _25501 _25508) : term131 _25498 _25501 _25508.
Proof. exact (ex_elim (@lem1104555 _25498 _25501 _25508 h1) (fun _18007 : type1148 _25498 _25501 _25508 => fun h0 : term130 _25498 _25501 _25508 _18007 => @lem1104554 _25498 _25501 _25508 _18007 h0)). Qed.
Lemma lem1104557 {_25498 _25501 _25508 : Type'} : (term129 _25498 _25501 _25508) = (term131 _25498 _25501 _25508).
Proof. exact (prop_ext (fun h1 : term129 _25498 _25501 _25508 => @lem1104556 _25498 _25501 _25508 h1) (fun h1 : term131 _25498 _25501 _25508 => @lem1104546 _25498 _25501 _25508)). Qed.
Lemma lem1104558 {_25498 _25501 _25508 : Type'} : term131 _25498 _25501 _25508.
Proof. exact (EQ_MP (@lem1104557 _25498 _25501 _25508) (@lem1104546 _25498 _25501 _25508)). Qed.
Lemma lem1104559 {_25498 _25501 _25508 : Type'} : term135 _25498 _25501 _25508.
Proof. exact (fun _18011 : type1673 => @lem1104558 _25498 _25501 _25508). Qed.
Lemma lem1104560 {A B : Type'} (P : type1413 A B) : term136 A B P.
Proof. exact (@lem13546 A B P). Qed.
Lemma lem1104561 {A B : Type'} (P : type1413 A B) : (term136 A B P) = ((term137 A B P) = (term138 A B P)).
Proof. exact (eq_refl (term136 A B P)). Qed.
Lemma lem1104564 {A B : Type'} (P : type1413 A B) : (term137 A B P) = (term138 A B P).
Proof. exact (EQ_MP (@lem1104561 A B P) (@lem1104560 A B P)). Qed.
Lemma lem1104565 {_25498 _25501 _25508 : Type'} (P : type1282 _25498 _25501 _25508) : (term139 _25498 _25501 _25508 P) = (term140 _25498 _25501 _25508 P).
Proof. exact (@lem1104564 type1673 (type763 _25498 _25501 _25508) P). Qed.
Lemma lem1104566 {_25498 _25501 _25508 : Type'} : (term141 _25498 _25501 _25508) = (term142 _25498 _25501 _25508).
Proof. exact (@lem1104565 _25498 _25501 _25508 (term143 _25498 _25501 _25508)). Qed.
Lemma lem1104567 {_25498 _25501 _25508 : Type'} (_18011 : type1673) : (term144 _25498 _25501 _25508 _18011) = (term132 _25498 _25501 _25508).
Proof. exact (eq_refl (term144 _25498 _25501 _25508 _18011)). Qed.
Lemma lem1104568 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) : MAP2' = MAP2'.
Proof. exact (eq_refl MAP2'). Qed.
Lemma lem1104569 {_25498 _25501 _25508 : Type'} (_18011 : type1673) (MAP2' : type763 _25498 _25501 _25508) : (term145 _25498 _25501 _25508 _18011 MAP2') = (term146 _25498 _25501 _25508 MAP2').
Proof. exact (MK_COMB (@lem1104567 _25498 _25501 _25508 _18011) (@lem1104568 _25498 _25501 _25508 MAP2')). Qed.
Lemma lem1104570 {_25498 _25501 _25508 : Type'} (MAP2' : type763 _25498 _25501 _25508) : (term146 _25498 _25501 _25508 MAP2') = (term84 _25498 _25501 _25508 MAP2').
Proof. exact (eq_refl (term146 _25498 _25501 _25508 MAP2')). Qed.
Lemma lem1104571 {_25498 _25501 _25508 : Type'} (_18011 : type1673) (MAP2' : type763 _25498 _25501 _25508) : (term145 _25498 _25501 _25508 _18011 MAP2') = (term84 _25498 _25501 _25508 MAP2').
Proof. exact (TRANS (@lem1104569 _25498 _25501 _25508 _18011 MAP2') (@lem1104570 _25498 _25501 _25508 MAP2')). Qed.
Lemma lem1104572 {_25498 _25501 _25508 : Type'} (_18011 : type1673) : (term147 _25498 _25501 _25508 _18011) = (term132 _25498 _25501 _25508).
Proof. exact (fun_ext (fun MAP2' : type763 _25498 _25501 _25508 => @lem1104571 _25498 _25501 _25508 _18011 MAP2')). Qed.
Lemma lem1104573 {_25498 _25501 _25508 : Type'} : (@ex ((_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498)) = (@ex ((_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498)).
Proof. exact (eq_refl (@ex ((_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498))). Qed.
Lemma lem1104574 {_25498 _25501 _25508 : Type'} (_18011 : type1673) : (term148 _25498 _25501 _25508 _18011) = (term131 _25498 _25501 _25508).
Proof. exact (MK_COMB (@lem1104573 _25498 _25501 _25508) (@lem1104572 _25498 _25501 _25508 _18011)). Qed.
Lemma lem1104575 {_25498 _25501 _25508 : Type'} : (term149 _25498 _25501 _25508) = (term150 _25498 _25501 _25508).
Proof. exact (fun_ext (fun _18011 : type1673 => @lem1104574 _25498 _25501 _25508 _18011)). Qed.
Lemma lem1104576 : (@all (prod nat (prod nat (prod nat nat)))) = (@all (prod nat (prod nat (prod nat nat)))).
Proof. exact (eq_refl (@all (prod nat (prod nat (prod nat nat))))). Qed.
Lemma lem1104577 {_25498 _25501 _25508 : Type'} : (term141 _25498 _25501 _25508) = (term135 _25498 _25501 _25508).
Proof. exact (MK_COMB (@lem1104576) (@lem1104575 _25498 _25501 _25508)). Qed.
Lemma lem1104578 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem1104579 {_25498 _25501 _25508 : Type'} : (term151 _25498 _25501 _25508) = (term152 _25498 _25501 _25508).
Proof. exact (MK_COMB (@lem1104578) (@lem1104577 _25498 _25501 _25508)). Qed.
Lemma lem1104580 {_25498 _25501 _25508 : Type'} (_18011 : type1673) : (term144 _25498 _25501 _25508 _18011) = (term132 _25498 _25501 _25508).
Proof. exact (eq_refl (term144 _25498 _25501 _25508 _18011)). Qed.
Lemma lem1104581 {_25498 _25501 _25508 : Type'} (MAP2' : type1286 _25498 _25501 _25508) (_18011 : type1673) : (MAP2' _18011) = (MAP2' _18011).
Proof. exact (eq_refl (MAP2' _18011)). Qed.
Lemma lem1104582 {_25498 _25501 _25508 : Type'} (MAP2' : type1286 _25498 _25501 _25508) (_18011 : type1673) : (term153 _25498 _25501 _25508 MAP2' _18011) = (term154 _25498 _25501 _25508 MAP2' _18011).
Proof. exact (MK_COMB (@lem1104580 _25498 _25501 _25508 _18011) (@lem1104581 _25498 _25501 _25508 MAP2' _18011)). Qed.
Lemma lem1104583 {_25498 _25501 _25508 : Type'} (MAP2' : type1286 _25498 _25501 _25508) (_18011 : type1673) : (term154 _25498 _25501 _25508 MAP2' _18011) = (term155 _25498 _25501 _25508 MAP2' _18011).
Proof. exact (eq_refl (term154 _25498 _25501 _25508 MAP2' _18011)). Qed.
Lemma lem1104584 {_25498 _25501 _25508 : Type'} (MAP2' : type1286 _25498 _25501 _25508) (_18011 : type1673) : (term153 _25498 _25501 _25508 MAP2' _18011) = (term155 _25498 _25501 _25508 MAP2' _18011).
Proof. exact (TRANS (@lem1104582 _25498 _25501 _25508 MAP2' _18011) (@lem1104583 _25498 _25501 _25508 MAP2' _18011)). Qed.
Lemma lem1104585 {_25498 _25501 _25508 : Type'} (MAP2' : type1286 _25498 _25501 _25508) : (term156 _25498 _25501 _25508 MAP2') = (term157 _25498 _25501 _25508 MAP2').
Proof. exact (fun_ext (fun _18011 : type1673 => @lem1104584 _25498 _25501 _25508 MAP2' _18011)). Qed.
Lemma lem1104586 : (@all (prod nat (prod nat (prod nat nat)))) = (@all (prod nat (prod nat (prod nat nat)))).
Proof. exact (eq_refl (@all (prod nat (prod nat (prod nat nat))))). Qed.
Lemma lem1104587 {_25498 _25501 _25508 : Type'} (MAP2' : type1286 _25498 _25501 _25508) : (term158 _25498 _25501 _25508 MAP2') = (term159 _25498 _25501 _25508 MAP2').
Proof. exact (MK_COMB (@lem1104586) (@lem1104585 _25498 _25501 _25508 MAP2')). Qed.
Lemma lem1104588 {_25498 _25501 _25508 : Type'} : (term160 _25498 _25501 _25508) = (term161 _25498 _25501 _25508).
Proof. exact (fun_ext (fun MAP2' : type1286 _25498 _25501 _25508 => @lem1104587 _25498 _25501 _25508 MAP2')). Qed.
Lemma lem1104589 {_25498 _25501 _25508 : Type'} : (@ex ((prod nat (prod nat (prod nat nat))) -> (_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498)) = (@ex ((prod nat (prod nat (prod nat nat))) -> (_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498)).
Proof. exact (eq_refl (@ex ((prod nat (prod nat (prod nat nat))) -> (_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498))). Qed.
Lemma lem1104590 {_25498 _25501 _25508 : Type'} : (term142 _25498 _25501 _25508) = (term162 _25498 _25501 _25508).
Proof. exact (MK_COMB (@lem1104589 _25498 _25501 _25508) (@lem1104588 _25498 _25501 _25508)). Qed.
Lemma lem1104591 {_25498 _25501 _25508 : Type'} : ((term141 _25498 _25501 _25508) = (term142 _25498 _25501 _25508)) = ((term135 _25498 _25501 _25508) = (term162 _25498 _25501 _25508)).
Proof. exact (MK_COMB (@lem1104579 _25498 _25501 _25508) (@lem1104590 _25498 _25501 _25508)). Qed.
Lemma lem1104592 {_25498 _25501 _25508 : Type'} : (term135 _25498 _25501 _25508) = (term162 _25498 _25501 _25508).
Proof. exact (EQ_MP (@lem1104591 _25498 _25501 _25508) (@lem1104566 _25498 _25501 _25508)). Qed.
Lemma lem1104593 {_25498 _25501 _25508 : Type'} : term162 _25498 _25501 _25508.
Proof. exact (EQ_MP (@lem1104592 _25498 _25501 _25508) (@lem1104559 _25498 _25501 _25508)). Qed.
Lemma lem1104595 {A : Type'} : (@ex A) = (term163 A).
Proof. exact (@lem9261 A (@lem9306 A)). Qed.
Lemma lem1104596 {_25498 _25501 _25508 : Type'} : (@ex ((prod nat (prod nat (prod nat nat))) -> (_25501 -> _25508 -> _25498) -> (list _25501) -> (list _25508) -> list _25498)) = (term164 _25498 _25501 _25508).
Proof. exact (@lem1104595 (type1286 _25498 _25501 _25508)). Qed.
Lemma lem1104597 {_25498 _25501 _25508 : Type'} : (term161 _25498 _25501 _25508) = (term161 _25498 _25501 _25508).
Proof. exact (eq_refl (term161 _25498 _25501 _25508)). Qed.
Lemma lem1104598 {_25498 _25501 _25508 : Type'} : (term162 _25498 _25501 _25508) = (term165 _25498 _25501 _25508).
Proof. exact (MK_COMB (@lem1104596 _25498 _25501 _25508) (@lem1104597 _25498 _25501 _25508)). Qed.
Lemma lem1104599 {_25498 _25501 _25508 : Type'} : (term165 _25498 _25501 _25508) = (term166 _25498 _25501 _25508).
Proof. exact (eq_refl (term165 _25498 _25501 _25508)). Qed.
Lemma lem1104600 {_25498 _25501 _25508 : Type'} : (term162 _25498 _25501 _25508) = (term166 _25498 _25501 _25508).
Proof. exact (TRANS (@lem1104598 _25498 _25501 _25508) (@lem1104599 _25498 _25501 _25508)). Qed.
Lemma lem1104601 {_25498 _25501 _25508 : Type'} : term166 _25498 _25501 _25508.
Proof. exact (EQ_MP (@lem1104600 _25498 _25501 _25508) (@lem1104593 _25498 _25501 _25508)). Qed.
